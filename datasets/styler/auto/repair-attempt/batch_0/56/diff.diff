*** ./batch_0/56/CompilationErrorsTest.java	Wed May  1 08:54:55 2019
--- ../files/1/56/CompilationErrorsTest.java	Wed May  1 08:54:55 2019
***************
*** 297,308 ****
        }
      }
      assertEquals(diagnostics.containsRow(Diagnostic.Kind.ERROR), !compiledOk);
      assertEquals("Diagnostic kinds should match: " + diagnostics,
          expectedDiagnostics.rowKeySet(), diagnostics.rowKeySet());
!     for (Table.Cell<Diagnostic.Kind,Integer , Pattern>expectedDiagnostic:expectedDiagnostics.cellSet
!     ( ) ) {
        boolean match = false;
        for (Table.Cell<Diagnostic.Kind, Integer, String> diagnostic : diagnostics.cellSet()) {
          if (expectedDiagnostic.getValue().matcher(diagnostic.getValue()).find()) {
            int expectedLine = expectedDiagnostic.getColumnKey();
            if (expectedLine != 0) {
--- 297,308 ----
        }
      }
      assertEquals(diagnostics.containsRow(Diagnostic.Kind.ERROR), !compiledOk);
      assertEquals("Diagnostic kinds should match: " + diagnostics,
          expectedDiagnostics.rowKeySet(), diagnostics.rowKeySet());
!     for (Table.Cell<Diagnostic.Kind, Integer, Pattern> expectedDiagnostic :
!              expectedDiagnostics.cellSet()) {
        boolean match = false;
        for (Table.Cell<Diagnostic.Kind, Integer, String> diagnostic : diagnostics.cellSet()) {
          if (expectedDiagnostic.getValue().matcher(diagnostic.getValue()).find()) {
            int expectedLine = expectedDiagnostic.getColumnKey();
            if (expectedLine != 0) {
***************
*** 351,356 ****
      String sourceDirectoryName() {
        return packageName.replace('.', '/');
      }
    }
  }
- 
--- 351,355 ----

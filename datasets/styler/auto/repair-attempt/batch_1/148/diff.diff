*** ./batch_1/148/BuilderSpec.java	Wed May  1 08:54:55 2019
--- ../files/1/148/BuilderSpec.java	Wed May  1 08:54:55 2019
***************
*** 192,203 ****
        vars.builderActualTypes = TypeSimplifier.actualTypeParametersString(builderTypeElement);
        vars.buildMethodName = buildMethod.getSimpleName().toString();
        vars.propertiesWithBuilderGetters = classifier.propertiesWithBuilderGetters();
  
        ImmutableMap.Builder<String, String> setterNameBuilder = ImmutableMap.builder();
!       for (Map.Entry<String,ExecutableElement>entry:classifier.propertyNameToSetter(
!   ) .entrySet ( ) ){
          setterNameBuilder.put(entry.getKey(), entry.getValue().getSimpleName().toString());
        }
        vars.builderSetterNames = setterNameBuilder.build();
      }
    }
--- 192,203 ----
        vars.builderActualTypes = TypeSimplifier.actualTypeParametersString(builderTypeElement);
        vars.buildMethodName = buildMethod.getSimpleName().toString();
        vars.propertiesWithBuilderGetters = classifier.propertiesWithBuilderGetters();
  
        ImmutableMap.Builder<String, String> setterNameBuilder = ImmutableMap.builder();
!       for (Map.Entry<String, ExecutableElement> entry :
!           classifier.propertyNameToSetter().entrySet()) {
          setterNameBuilder.put(entry.getKey(), entry.getValue().getSimpleName().toString());
        }
        vars.builderSetterNames = setterNameBuilder.build();
      }
    }
***************
*** 277,282 ****
  
    private String typeParamsString() {
      return TypeSimplifier.actualTypeParametersString(autoValueClass);
    }
  }
- 
--- 277,281 ----

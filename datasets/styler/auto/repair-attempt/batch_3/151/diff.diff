*** ./batch_3/151/BuilderSpec.java	Wed May  1 08:54:55 2019
--- ../files/1/151/BuilderSpec.java	Wed May  1 08:54:55 2019
***************
*** 201,212 ****
        vars.builderActualTypes = TypeSimplifier.actualTypeParametersString(builderTypeElement);
        vars.buildMethod = Optional.of(new SimpleMethod(buildMethod));
        vars.builderGetters = classifier.builderGetters();
  
        ImmutableMultimap.Builder<String, PropertySetter> setterBuilder = ImmutableMultimap.builder();
!       for (Map.Entry<String, ExecutableElement>entry:
!       classifier.propertyNameToSetters( ) . entries()){
          String property = entry.getKey();
          ExecutableElement setter = entry.getValue();
          TypeMirror propertyType = getterToPropertyName.inverse().get(property).getReturnType();
          setterBuilder.put(
              property, new PropertySetter(setter, propertyType, processingEnv.getTypeUtils()));
--- 201,212 ----
        vars.builderActualTypes = TypeSimplifier.actualTypeParametersString(builderTypeElement);
        vars.buildMethod = Optional.of(new SimpleMethod(buildMethod));
        vars.builderGetters = classifier.builderGetters();
  
        ImmutableMultimap.Builder<String, PropertySetter> setterBuilder = ImmutableMultimap.builder();
!       for (Map.Entry<String, ExecutableElement> entry :
!           classifier.propertyNameToSetters().entries()) {
          String property = entry.getKey();
          ExecutableElement setter = entry.getValue();
          TypeMirror propertyType = getterToPropertyName.inverse().get(property).getReturnType();
          setterBuilder.put(
              property, new PropertySetter(setter, propertyType, processingEnv.getTypeUtils()));
***************
*** 433,438 ****
  
    private String typeParamsString() {
      return TypeSimplifier.actualTypeParametersString(autoValueClass);
    }
  }
- 
--- 433,437 ----

*** ./batch_3/8/ValidationProcessor.java	Wed May  1 08:54:55 2019
--- ../files/1/8/ValidationProcessor.java	Wed May  1 08:54:55 2019
***************
*** 87,98 ****
      boolean suppressWarnings =
          element.getAnnotation(SuppressWarnings.class) != null && Arrays.asList(
              element.getAnnotation(SuppressWarnings.class).value()).contains("qualifiers");
      int numberOfQualifiersOnElement = 0;
      for (AnnotationMirror annotation : element.getAnnotationMirrors()) {
!       if (annotation.getAnnotationType().asElement().getAnnotation(Qualifier.class) == null) {continue ;
!     }
        switch (element.getKind()) {
          case FIELD:
            numberOfQualifiersOnElement++;
            if (element.getAnnotation(Inject.class) == null && !suppressWarnings) {
              warning("Dagger will ignore qualifier annotations on fields that are not "
--- 87,99 ----
      boolean suppressWarnings =
          element.getAnnotation(SuppressWarnings.class) != null && Arrays.asList(
              element.getAnnotation(SuppressWarnings.class).value()).contains("qualifiers");
      int numberOfQualifiersOnElement = 0;
      for (AnnotationMirror annotation : element.getAnnotationMirrors()) {
!       if (annotation.getAnnotationType().asElement().getAnnotation(Qualifier.class) == null) {
!        continue;
!       }
        switch (element.getKind()) {
          case FIELD:
            numberOfQualifiersOnElement++;
            if (element.getAnnotation(Inject.class) == null && !suppressWarnings) {
              warning("Dagger will ignore qualifier annotations on fields that are not "
***************
*** 212,217 ****
    private void warning(String msg, Element element) {
      processingEnv.getMessager().printMessage(Diagnostic.Kind.WARNING, msg, element);
    }
  
  }
- 
--- 213,217 ----

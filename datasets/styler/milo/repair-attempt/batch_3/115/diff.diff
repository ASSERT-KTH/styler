*** ./batch_3/115/ServerStatusNode.java	Wed May  1 08:54:55 2019
--- ../files/1/115/ServerStatusNode.java	Wed May  1 08:54:55 2019
***************
*** 39,53 ****
      public ServerStatusNode(ServerNodeMap nodeMap, NodeId nodeId, QualifiedName browseName,
                              LocalizedText displayName, LocalizedText description, UInteger writeMask,
                              UInteger userWriteMask, DataValue value, NodeId dataType, Integer valueRank,
                              UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,
                              double minimumSamplingInterval, boolean historizing) {
! 
!  super(nodeMap, nodeId, browseName, displayName, description, writeMask, userWriteMask, value,dataType
! ,
! 
! valueRank , arrayDimensions,accessLevel ,userAccessLevel, minimumSamplingInterval, historizing) ;}
  
      public BaseDataVariableNode getStartTimeNode() {
          Optional<VariableNode> component = getVariableComponent("http://opcfoundation.org/UA/", "StartTime");
          return component.map(node -> (BaseDataVariableNode) node).orElse(null);
      }
--- 39,50 ----
      public ServerStatusNode(ServerNodeMap nodeMap, NodeId nodeId, QualifiedName browseName,
                              LocalizedText displayName, LocalizedText description, UInteger writeMask,
                              UInteger userWriteMask, DataValue value, NodeId dataType, Integer valueRank,
                              UInteger[] arrayDimensions, UByte accessLevel, UByte userAccessLevel,
                              double minimumSamplingInterval, boolean historizing) {
!         super(nodeMap, nodeId, browseName, displayName, description, writeMask, userWriteMask, value, dataType, valueRank, arrayDimensions, accessLevel, userAccessLevel, minimumSamplingInterval, historizing);
!     }
  
      public BaseDataVariableNode getStartTimeNode() {
          Optional<VariableNode> component = getVariableComponent("http://opcfoundation.org/UA/", "StartTime");
          return component.map(node -> (BaseDataVariableNode) node).orElse(null);
      }
***************
*** 129,134 ****
  
      public void setShutdownReason(LocalizedText value) {
          getVariableComponent("ShutdownReason").ifPresent(n -> n.setValue(new DataValue(new Variant(value))));
      }
  }
- 
--- 126,130 ----

{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2479",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2479/InternalAutoIndexing.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2479/InternalAutoIndexing.java\nindex f34728c9059..031d847f296 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2479/InternalAutoIndexing.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2479/InternalAutoIndexing.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.explicitindex;\n \n import org.neo4j.graphdb.factory.GraphDatabaseSettings;\n@@ -31,32 +32,32 @@ import org.neo4j.kernel.impl.core.PropertyKeyTokenHolder;\n  */\n public class InternalAutoIndexing implements AutoIndexing\n {\n-    public static final String NODE_AUTO_INDEX = \"node_auto_index\";\n-    public static final String RELATIONSHIP_AUTO_INDEX = \"relationship_auto_index\";\n-\n-    private final InternalAutoIndexOperations nodes;\n-    private final InternalAutoIndexOperations relationships;\n-\n-    public InternalAutoIndexing( Config config, PropertyKeyTokenHolder propertyKeyLookup )\n-    {\n-        this.nodes = new InternalAutoIndexOperations( propertyKeyLookup, InternalAutoIndexOperations.EntityType.NODE );\n-        this.relationships = new InternalAutoIndexOperations( propertyKeyLookup, InternalAutoIndexOperations.EntityType.RELATIONSHIP );\n-\n-        this.nodes.enabled( config.get( GraphDatabaseSettings.node_auto_indexing ) );\n-        this.nodes.replacePropertyKeysToInclude( config.get( GraphDatabaseSettings.node_keys_indexable ) );\n-        this.relationships.enabled( config.get( GraphDatabaseSettings.relationship_auto_indexing ) );\n-        this.relationships.replacePropertyKeysToInclude( config.get( GraphDatabaseSettings.relationship_keys_indexable ) );\n-    }\n-\n-    @Override\n-    public AutoIndexOperations nodes()\n-    {\n-        return nodes;\n-    }\n-\n-    @Override\n-    public AutoIndexOperations relationships()\n-    {\n-        return relationships;\n-    }\n+  public static final String NODE_AUTO_INDEX = \"node_auto_index\";\n+  public static final String RELATIONSHIP_AUTO_INDEX = \"relationship_auto_index\";\n+\n+  private final InternalAutoIndexOperations nodes;\n+  private final InternalAutoIndexOperations relationships;\n+\n+  public InternalAutoIndexing(Config config, PropertyKeyTokenHolder propertyKeyLookup)\n+  {\n+    this.nodes = new InternalAutoIndexOperations(propertyKeyLookup, InternalAutoIndexOperations.EntityType.NODE);\n+    this.relationships = new InternalAutoIndexOperations(propertyKeyLookup, InternalAutoIndexOperations.EntityType.RELATIONSHIP);\n+\n+    this.nodes.enabled(config.get(GraphDatabaseSettings.node_auto_indexing));\n+    this.nodes.replacePropertyKeysToInclude(config.get(GraphDatabaseSettings.node_keys_indexable));\n+    this.relationships.enabled(config.get(GraphDatabaseSettings.relationship_auto_indexing));\n+    this.relationships.replacePropertyKeysToInclude(config.get(GraphDatabaseSettings.relationship_keys_indexable));\n+  }\n+\n+  @Override\n+  public AutoIndexOperations nodes()\n+  {\n+    return nodes;\n+  }\n+\n+  @Override\n+  public AutoIndexOperations relationships()\n+  {\n+    return relationships;\n+  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2479/InternalAutoIndexing.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2479/InternalAutoIndexing.java\nindex f34728c9059..0ef7c82f871 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2479/InternalAutoIndexing.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2479/InternalAutoIndexing.java\n@@ -32,17 +32,16 @@ import org.neo4j.kernel.impl.core.PropertyKeyTokenHolder;\n public class InternalAutoIndexing implements AutoIndexing\n {\n     public static final String NODE_AUTO_INDEX = \"node_auto_index\";\n-    public static final String RELATIONSHIP_AUTO_INDEX = \"relationship_auto_index\";\n \n-    private final InternalAutoIndexOperations nodes;\n+public static final String RELATIONSHIP_AUTO_INDEX = \"relationship_auto_index\";\n+private final InternalAutoIndexOperations nodes;\n     private final InternalAutoIndexOperations relationships;\n \n     public InternalAutoIndexing( Config config, PropertyKeyTokenHolder propertyKeyLookup )\n     {\n         this.nodes = new InternalAutoIndexOperations( propertyKeyLookup, InternalAutoIndexOperations.EntityType.NODE );\n         this.relationships = new InternalAutoIndexOperations( propertyKeyLookup, InternalAutoIndexOperations.EntityType.RELATIONSHIP );\n-\n-        this.nodes.enabled( config.get( GraphDatabaseSettings.node_auto_indexing ) );\n+this.nodes.enabled( config.get( GraphDatabaseSettings.node_auto_indexing ) );\n         this.nodes.replacePropertyKeysToInclude( config.get( GraphDatabaseSettings.node_keys_indexable ) );\n         this.relationships.enabled( config.get( GraphDatabaseSettings.relationship_auto_indexing ) );\n         this.relationships.replacePropertyKeysToInclude( config.get( GraphDatabaseSettings.relationship_keys_indexable ) );\n@@ -59,4 +58,4 @@ public class InternalAutoIndexing implements AutoIndexing\n     {\n         return relationships;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
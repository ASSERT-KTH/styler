{
    "project_name": "neo4j-neo4j",
    "error_id": "810",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "128",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/810/TreeState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/810/TreeState.java\nindex 02fc79ca850..1623a413899 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/810/TreeState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/810/TreeState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.util.Objects;\n@@ -43,15 +44,15 @@ class TreeState\n      * Size of one set of tree-state fields.\n      */\n     private static final int TREE_STATE_FIELDS_SIZE =\n-            Integer.BYTES * 2 + // stable/unstable gen\n-            Long.BYTES +        // rootId\n-            Long.BYTES +        // rootGeneration\n-            Long.BYTES +        // lastId\n-            Long.BYTES +        // freeListWritePageId\n-            Long.BYTES +        // freeListReadPageId\n-            Long.BYTES +        // freeListWritePos\n-            Long.BYTES +        // freeListReadPos\n-            Byte.BYTES;         // clean\n+      Integer.BYTES * 2 + // stable/unstable gen\n+        Long.BYTES +        // rootId\n+        Long.BYTES +        // rootGeneration\n+        Long.BYTES +        // lastId\n+        Long.BYTES +        // freeListWritePageId\n+        Long.BYTES +        // freeListReadPageId\n+        Long.BYTES +        // freeListWritePos\n+        Long.BYTES +        // freeListReadPos\n+        Byte.BYTES;         // clean\n \n     /**\n      * Size of a tree-state altogether, which consists of two sets of tree-state fields.\n@@ -124,9 +125,9 @@ class TreeState\n      */\n     private final boolean clean;\n \n-    TreeState( long pageId, long stableGeneration, long unstableGeneration, long rootId, long rootGeneration,\n-            long lastId, long freeListWritePageId, long freeListReadPageId, int freeListWritePos, int freeListReadPos,\n-            boolean clean, boolean valid )\n+    TreeState(long pageId, long stableGeneration, long unstableGeneration, long rootId, long rootGeneration,\n+              long lastId, long freeListWritePageId, long freeListReadPageId, int freeListWritePos, int freeListReadPos,\n+              boolean clean, boolean valid)\n     {\n         this.pageId = pageId;\n         this.stableGeneration = stableGeneration;\n@@ -201,29 +202,29 @@ class TreeState\n      * Writes provided tree state to {@code cursor} at its current offset. Two versions of the state\n      * are written after each other, the second one acting as checksum for the first, see {@link #valid} field.\n      *\n-     * @param cursor {@link PageCursor} to write into, at its current offset.\n-     * @param stableGeneration stable generation.\n-     * @param unstableGeneration unstable generation.\n-     * @param rootId root id.\n-     * @param rootGeneration root generation.\n-     * @param lastId last id.\n+     * @param cursor              {@link PageCursor} to write into, at its current offset.\n+     * @param stableGeneration    stable generation.\n+     * @param unstableGeneration  unstable generation.\n+     * @param rootId              root id.\n+     * @param rootGeneration      root generation.\n+     * @param lastId              last id.\n      * @param freeListWritePageId free-list page id to write released ids into.\n-     * @param freeListReadPageId free-list page id to read released ids from.\n-     * @param freeListWritePos offset into free-list write page id to write released ids into.\n-     * @param freeListReadPos offset into free-list read page id to read released ids from.\n-     * @param clean is tree clean or dirty\n+     * @param freeListReadPageId  free-list page id to read released ids from.\n+     * @param freeListWritePos    offset into free-list write page id to write released ids into.\n+     * @param freeListReadPos     offset into free-list read page id to read released ids from.\n+     * @param clean               is tree clean or dirty\n      */\n-    static void write( PageCursor cursor, long stableGeneration, long unstableGeneration, long rootId,\n-            long rootGeneration, long lastId, long freeListWritePageId, long freeListReadPageId, int freeListWritePos,\n-            int freeListReadPos, boolean clean )\n+    static void write(PageCursor cursor, long stableGeneration, long unstableGeneration, long rootId,\n+                      long rootGeneration, long lastId, long freeListWritePageId, long freeListReadPageId, int freeListWritePos,\n+                      int freeListReadPos, boolean clean)\n     {\n-        GenerationSafePointer.assertGenerationOnWrite( stableGeneration );\n-        GenerationSafePointer.assertGenerationOnWrite( unstableGeneration );\n+        GenerationSafePointer.assertGenerationOnWrite(stableGeneration);\n+        GenerationSafePointer.assertGenerationOnWrite(unstableGeneration);\n \n-        writeStateOnce( cursor, stableGeneration, unstableGeneration, rootId, rootGeneration, lastId,\n-                freeListWritePageId, freeListReadPageId, freeListWritePos, freeListReadPos, clean ); // Write state\n-        writeStateOnce( cursor, stableGeneration, unstableGeneration, rootId, rootGeneration, lastId,\n-                freeListWritePageId, freeListReadPageId, freeListWritePos, freeListReadPos, clean ); // Write checksum\n+        writeStateOnce(cursor, stableGeneration, unstableGeneration, rootId, rootGeneration, lastId,\n+          freeListWritePageId, freeListReadPageId, freeListWritePos, freeListReadPos, clean); // Write state\n+        writeStateOnce(cursor, stableGeneration, unstableGeneration, rootId, rootGeneration, lastId,\n+          freeListWritePageId, freeListReadPageId, freeListWritePos, freeListReadPos, clean); // Write checksum\n     }\n \n     /**\n@@ -233,20 +234,20 @@ class TreeState\n      * @param cursor {@link PageCursor} to read tree state from, at its current offset.\n      * @return {@link TreeState} instance containing read tree state.\n      */\n-    static TreeState read( PageCursor cursor )\n+    static TreeState read(PageCursor cursor)\n     {\n-        TreeState state = readStateOnce( cursor );\n-        TreeState checksumState = readStateOnce( cursor );\n+        TreeState state = readStateOnce(cursor);\n+        TreeState checksumState = readStateOnce(cursor);\n \n-        boolean valid = state.equals( checksumState );\n+        boolean valid = state.equals(checksumState);\n \n         boolean isEmpty = state.isEmpty();\n         valid &= !isEmpty;\n \n-        return state.setValid( valid );\n+        return state.setValid(valid);\n     }\n \n-    private TreeState setValid( boolean valid )\n+    private TreeState setValid(boolean valid)\n     {\n         this.valid = valid;\n         return this;\n@@ -255,10 +256,10 @@ class TreeState\n     boolean isEmpty()\n     {\n         return stableGeneration == 0L && unstableGeneration == 0L && rootId == 0L && lastId == 0L &&\n-                freeListWritePageId == 0L && freeListReadPageId == 0L && freeListWritePos == 0 && freeListReadPos == 0;\n+          freeListWritePageId == 0L && freeListReadPageId == 0L && freeListWritePos == 0 && freeListReadPos == 0;\n     }\n \n-    private static TreeState readStateOnce( PageCursor cursor )\n+    private static TreeState readStateOnce(PageCursor cursor)\n     {\n         long pageId = cursor.getCurrentPageId();\n         long stableGeneration = cursor.getInt() & GenerationSafePointer.GENERATION_MASK;\n@@ -271,61 +272,61 @@ class TreeState\n         int freeListWritePos = cursor.getInt();\n         int freeListReadPos = cursor.getInt();\n         boolean clean = cursor.getByte() == CLEAN_BYTE;\n-        return new TreeState( pageId, stableGeneration, unstableGeneration, rootId, rootGeneration, lastId,\n-                freeListWritePageId, freeListReadPageId, freeListWritePos, freeListReadPos, clean, true );\n+        return new TreeState(pageId, stableGeneration, unstableGeneration, rootId, rootGeneration, lastId,\n+          freeListWritePageId, freeListReadPageId, freeListWritePos, freeListReadPos, clean, true);\n     }\n \n-    private static void writeStateOnce( PageCursor cursor, long stableGeneration, long unstableGeneration, long rootId,\n-            long rootGeneration, long lastId, long freeListWritePageId, long freeListReadPageId, int freeListWritePos,\n-            int freeListReadPos, boolean clean )\n+    private static void writeStateOnce(PageCursor cursor, long stableGeneration, long unstableGeneration, long rootId,\n+                                       long rootGeneration, long lastId, long freeListWritePageId, long freeListReadPageId, int freeListWritePos,\n+                                       int freeListReadPos, boolean clean)\n     {\n-        cursor.putInt( (int) stableGeneration );\n-        cursor.putInt( (int) unstableGeneration );\n-        cursor.putLong( rootId );\n-        cursor.putLong( rootGeneration );\n-        cursor.putLong( lastId );\n-        cursor.putLong( freeListWritePageId );\n-        cursor.putLong( freeListReadPageId );\n-        cursor.putInt( freeListWritePos );\n-        cursor.putInt( freeListReadPos );\n-        cursor.putByte( clean ? CLEAN_BYTE : DIRTY_BYTE );\n+        cursor.putInt((int) stableGeneration);\n+        cursor.putInt((int) unstableGeneration);\n+        cursor.putLong(rootId);\n+        cursor.putLong(rootGeneration);\n+        cursor.putLong(lastId);\n+        cursor.putLong(freeListWritePageId);\n+        cursor.putLong(freeListReadPageId);\n+        cursor.putInt(freeListWritePos);\n+        cursor.putInt(freeListReadPos);\n+        cursor.putByte(clean ? CLEAN_BYTE : DIRTY_BYTE);\n     }\n \n     @Override\n     public String toString()\n     {\n-        return String.format( \"pageId=%d, stableGeneration=%d, unstableGeneration=%d, rootId=%d, rootGeneration=%d, \" +\n-                \"lastId=%d, freeListWritePageId=%d, freeListReadPageId=%d, freeListWritePos=%d, freeListReadPos=%d, \" +\n-                \"clean=%b, valid=%b\",\n-                pageId, stableGeneration, unstableGeneration, rootId, rootGeneration, lastId,\n-                freeListWritePageId, freeListReadPageId, freeListWritePos, freeListReadPos, clean, valid );\n+        return String.format(\"pageId=%d, stableGeneration=%d, unstableGeneration=%d, rootId=%d, rootGeneration=%d, \" +\n+            \"lastId=%d, freeListWritePageId=%d, freeListReadPageId=%d, freeListWritePos=%d, freeListReadPos=%d, \" +\n+            \"clean=%b, valid=%b\",\n+          pageId, stableGeneration, unstableGeneration, rootId, rootGeneration, lastId,\n+          freeListWritePageId, freeListReadPageId, freeListWritePos, freeListReadPos, clean, valid);\n     }\n \n     @Override\n-    public boolean equals( Object o )\n+    public boolean equals(Object o)\n     {\n-        if ( this == o )\n+        if (this == o)\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+        if (o == null || getClass() != o.getClass())\n         {\n             return false;\n         }\n         TreeState treeState = (TreeState) o;\n         return pageId == treeState.pageId && stableGeneration == treeState.stableGeneration &&\n-                unstableGeneration == treeState.unstableGeneration && rootId == treeState.rootId &&\n-                rootGeneration == treeState.rootGeneration && lastId == treeState.lastId &&\n-                freeListWritePageId == treeState.freeListWritePageId &&\n-                freeListReadPageId == treeState.freeListReadPageId && freeListWritePos == treeState.freeListWritePos &&\n-                freeListReadPos == treeState.freeListReadPos && clean == treeState.clean && valid == treeState.valid;\n+          unstableGeneration == treeState.unstableGeneration && rootId == treeState.rootId &&\n+          rootGeneration == treeState.rootGeneration && lastId == treeState.lastId &&\n+          freeListWritePageId == treeState.freeListWritePageId &&\n+          freeListReadPageId == treeState.freeListReadPageId && freeListWritePos == treeState.freeListWritePos &&\n+          freeListReadPos == treeState.freeListReadPos && clean == treeState.clean && valid == treeState.valid;\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash( pageId, stableGeneration, unstableGeneration, rootId, rootGeneration, lastId,\n-                freeListWritePageId, freeListReadPageId, freeListWritePos, freeListReadPos, clean, valid );\n+        return Objects.hash(pageId, stableGeneration, unstableGeneration, rootId, rootGeneration, lastId,\n+          freeListWritePageId, freeListReadPageId, freeListWritePos, freeListReadPos, clean, valid);\n     }\n \n     public boolean isClean()\n",
            "diff_size": 70
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "primefaces-primefaces",
    "error_id": "12",
    "information": {
        "errors": [
            {
                "line": "230",
                "column": "9",
                "severity": "error",
                "message": "'}' at column 9 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "        if (room == null) {\n            return \"(new booking)\";\n        } else {\n            return \"(room \" + room + \")\";\n        }\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/12/EditServerTimelineView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/styler/12/EditServerTimelineView.java\nindex 3c5ed8ca902..5f17900367a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/12/EditServerTimelineView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/styler/12/EditServerTimelineView.java\n@@ -227,7 +227,8 @@ public class EditServerTimelineView implements Serializable {\n         Integer room = event.getData().getRoomNumber();\n         if (room == null) {\n             return \"(new booking)\";\n-        } else {\n+        }\n+        else {\n             return \"(room \" + room + \")\";\n         }\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "231",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/12/EditServerTimelineView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/intellij/12/EditServerTimelineView.java\nindex 3c5ed8ca902..25e1627c01e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/12/EditServerTimelineView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/intellij/12/EditServerTimelineView.java\n@@ -21,6 +21,7 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n+\n package org.primefaces.showcase.view.data.timeline;\n \n import org.primefaces.component.timeline.TimelineUpdater;\n@@ -65,50 +66,50 @@ public class EditServerTimelineView implements Serializable {\n         model = new TimelineModel<>();\n \n         model.add(TimelineEvent.<Booking>builder()\n-                .data(new Booking(211, RoomCategory.DELUXE, \"(0034) 987-111\", \"One day booking\"))\n-                .startDate(LocalDateTime.of(2019, Month.JANUARY, 2, 0, 0))\n-                .build());\n+            .data(new Booking(211, RoomCategory.DELUXE, \"(0034) 987-111\", \"One day booking\"))\n+            .startDate(LocalDateTime.of(2019, Month.JANUARY, 2, 0, 0))\n+            .build());\n \n         model.add(TimelineEvent.<Booking>builder()\n-                .data(new Booking(202, RoomCategory.EXECUTIVE_SUITE, \"(0034) 987-333\", \"Three day booking\"))\n-                .startDate(LocalDateTime.of(2019, Month.JANUARY, 26, 0, 0))\n-                .endDate(LocalDateTime.of(2019, Month.JANUARY, 28, 23, 59, 59))\n-                .build());\n+            .data(new Booking(202, RoomCategory.EXECUTIVE_SUITE, \"(0034) 987-333\", \"Three day booking\"))\n+            .startDate(LocalDateTime.of(2019, Month.JANUARY, 26, 0, 0))\n+            .endDate(LocalDateTime.of(2019, Month.JANUARY, 28, 23, 59, 59))\n+            .build());\n \n         model.add(TimelineEvent.<Booking>builder()\n-                .data(new Booking(150, RoomCategory.STANDARD, \"(0034) 987-222\", \"Six day booking\"))\n-                .startDate(LocalDateTime.of(2019, Month.FEBRUARY, 10, 0, 0))\n-                .endDate(LocalDateTime.of(2019, Month.FEBRUARY, 15, 23, 59, 59))\n-                .build());\n+            .data(new Booking(150, RoomCategory.STANDARD, \"(0034) 987-222\", \"Six day booking\"))\n+            .startDate(LocalDateTime.of(2019, Month.FEBRUARY, 10, 0, 0))\n+            .endDate(LocalDateTime.of(2019, Month.FEBRUARY, 15, 23, 59, 59))\n+            .build());\n \n         model.add(TimelineEvent.<Booking>builder()\n-                .data(new Booking(178, RoomCategory.STANDARD, \"(0034) 987-555\", \"Five day booking\"))\n-                .startDate(LocalDateTime.of(2019, Month.FEBRUARY, 23, 0, 0))\n-                .endDate(LocalDateTime.of(2019, Month.FEBRUARY, 27, 23, 59, 59))\n-                .build());\n+            .data(new Booking(178, RoomCategory.STANDARD, \"(0034) 987-555\", \"Five day booking\"))\n+            .startDate(LocalDateTime.of(2019, Month.FEBRUARY, 23, 0, 0))\n+            .endDate(LocalDateTime.of(2019, Month.FEBRUARY, 27, 23, 59, 59))\n+            .build());\n \n         model.add(TimelineEvent.<Booking>builder()\n-                .data(new Booking(101, RoomCategory.SUPERIOR, \"(0034) 987-999\", \"One day booking\"))\n-                .startDate(LocalDateTime.of(2019, Month.MARCH, 6, 0, 0))\n-                .build());\n+            .data(new Booking(101, RoomCategory.SUPERIOR, \"(0034) 987-999\", \"One day booking\"))\n+            .startDate(LocalDateTime.of(2019, Month.MARCH, 6, 0, 0))\n+            .build());\n \n         model.add(TimelineEvent.<Booking>builder()\n-                .data(new Booking(80, RoomCategory.JUNIOR, \"(0034) 987-444\", \"Four day booking\"))\n-                .startDate(LocalDateTime.of(2019, Month.MARCH, 19, 0, 0))\n-                .endDate(LocalDateTime.of(2019, Month.MARCH, 22, 23, 59, 59))\n-                .build());\n+            .data(new Booking(80, RoomCategory.JUNIOR, \"(0034) 987-444\", \"Four day booking\"))\n+            .startDate(LocalDateTime.of(2019, Month.MARCH, 19, 0, 0))\n+            .endDate(LocalDateTime.of(2019, Month.MARCH, 22, 23, 59, 59))\n+            .build());\n \n         model.add(TimelineEvent.<Booking>builder()\n-                .data(new Booking(96, RoomCategory.DELUXE, \"(0034) 987-777\", \"Two day booking\"))\n-                .startDate(LocalDateTime.of(2019, Month.APRIL, 3, 0, 0))\n-                .endDate(LocalDateTime.of(2019, Month.APRIL, 4, 23, 59, 59))\n-                .build());\n+            .data(new Booking(96, RoomCategory.DELUXE, \"(0034) 987-777\", \"Two day booking\"))\n+            .startDate(LocalDateTime.of(2019, Month.APRIL, 3, 0, 0))\n+            .endDate(LocalDateTime.of(2019, Month.APRIL, 4, 23, 59, 59))\n+            .build());\n \n         model.add(TimelineEvent.<Booking>builder()\n-                .data(new Booking(80, RoomCategory.JUNIOR, \"(0034) 987-444\", \"Ten day booking\"))\n-                .startDate(LocalDateTime.of(2019, Month.APRIL, 22, 0, 0))\n-                .endDate(LocalDateTime.of(2019, Month.MAY, 1, 23, 59, 59))\n-                .build());\n+            .data(new Booking(80, RoomCategory.JUNIOR, \"(0034) 987-444\", \"Ten day booking\"))\n+            .startDate(LocalDateTime.of(2019, Month.APRIL, 22, 0, 0))\n+            .endDate(LocalDateTime.of(2019, Month.MAY, 1, 23, 59, 59))\n+            .build());\n     }\n \n     public void onChange(TimelineModificationEvent<Booking> e) {\n@@ -120,7 +121,7 @@ public class EditServerTimelineView implements Serializable {\n         model.update(event);\n \n         FacesMessage msg\n-                = new FacesMessage(FacesMessage.SEVERITY_INFO, \"The booking dates \" + getRoom() + \" have been updated\", null);\n+            = new FacesMessage(FacesMessage.SEVERITY_INFO, \"The booking dates \" + getRoom() + \" have been updated\", null);\n         FacesContext.getCurrentInstance().addMessage(null, msg);\n \n         // otherwise (if DB operation failed) a rollback can be done with the same response as follows:\n@@ -137,13 +138,13 @@ public class EditServerTimelineView implements Serializable {\n     public void onAdd(TimelineAddEvent e) {\n         // get TimelineEvent to be added\n         event = TimelineEvent.<Booking>builder()\n-                // the id generated from the UI must be set\n-                .id(e.getId())\n-                .data(new Booking())\n-                .startDate(e.getStartDate())\n-                .endDate(e.getEndDate())\n-                .editable(true)\n-                .build();\n+            // the id generated from the UI must be set\n+            .id(e.getId())\n+            .data(new Booking())\n+            .startDate(e.getStartDate())\n+            .endDate(e.getEndDate())\n+            .editable(true)\n+            .build();\n \n         // add the new event to the model in case if user will close or cancel the \"Add dialog\"\n         // without to update details of the new event. Note: the event is already added in UI.\n@@ -178,7 +179,7 @@ public class EditServerTimelineView implements Serializable {\n         model.update(event, timelineUpdater);\n \n         FacesMessage msg\n-                = new FacesMessage(FacesMessage.SEVERITY_INFO, \"The booking details \" + getRoom() + \" have been saved\", null);\n+            = new FacesMessage(FacesMessage.SEVERITY_INFO, \"The booking details \" + getRoom() + \" have been saved\", null);\n         FacesContext.getCurrentInstance().addMessage(null, msg);\n     }\n \n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/12/EditServerTimelineView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/codebuff/12/EditServerTimelineView.java\nindex 3c5ed8ca902..dfcf7a4471e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/12/EditServerTimelineView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/codebuff/12/EditServerTimelineView.java\n@@ -28,7 +28,6 @@ import org.primefaces.event.timeline.TimelineAddEvent;\n import org.primefaces.event.timeline.TimelineModificationEvent;\n import org.primefaces.model.timeline.TimelineEvent;\n import org.primefaces.model.timeline.TimelineModel;\n-\n import javax.annotation.PostConstruct;\n import javax.faces.application.FacesMessage;\n import javax.faces.context.FacesContext;\n@@ -46,10 +45,15 @@ import org.primefaces.showcase.domain.RoomCategory;\n public class EditServerTimelineView implements Serializable {\n \n     private TimelineModel<Booking, ?> model;\n+\n     private TimelineEvent<Booking> event; // current event to be changed, edited, deleted or added\n+\n     private long zoomMax;\n+\n     private LocalDateTime start;\n+\n     private LocalDateTime end;\n+\n     private boolean editableTime = true;\n \n     @PostConstruct\n@@ -63,52 +67,36 @@ public class EditServerTimelineView implements Serializable {\n \n         // create timeline model\n         model = new TimelineModel<>();\n-\n-        model.add(TimelineEvent.<Booking>builder()\n-                .data(new Booking(211, RoomCategory.DELUXE, \"(0034) 987-111\", \"One day booking\"))\n-                .startDate(LocalDateTime.of(2019, Month.JANUARY, 2, 0, 0))\n-                .build());\n-\n-        model.add(TimelineEvent.<Booking>builder()\n-                .data(new Booking(202, RoomCategory.EXECUTIVE_SUITE, \"(0034) 987-333\", \"Three day booking\"))\n-                .startDate(LocalDateTime.of(2019, Month.JANUARY, 26, 0, 0))\n-                .endDate(LocalDateTime.of(2019, Month.JANUARY, 28, 23, 59, 59))\n-                .build());\n-\n-        model.add(TimelineEvent.<Booking>builder()\n-                .data(new Booking(150, RoomCategory.STANDARD, \"(0034) 987-222\", \"Six day booking\"))\n-                .startDate(LocalDateTime.of(2019, Month.FEBRUARY, 10, 0, 0))\n-                .endDate(LocalDateTime.of(2019, Month.FEBRUARY, 15, 23, 59, 59))\n-                .build());\n-\n-        model.add(TimelineEvent.<Booking>builder()\n-                .data(new Booking(178, RoomCategory.STANDARD, \"(0034) 987-555\", \"Five day booking\"))\n-                .startDate(LocalDateTime.of(2019, Month.FEBRUARY, 23, 0, 0))\n-                .endDate(LocalDateTime.of(2019, Month.FEBRUARY, 27, 23, 59, 59))\n-                .build());\n-\n-        model.add(TimelineEvent.<Booking>builder()\n-                .data(new Booking(101, RoomCategory.SUPERIOR, \"(0034) 987-999\", \"One day booking\"))\n-                .startDate(LocalDateTime.of(2019, Month.MARCH, 6, 0, 0))\n-                .build());\n-\n-        model.add(TimelineEvent.<Booking>builder()\n-                .data(new Booking(80, RoomCategory.JUNIOR, \"(0034) 987-444\", \"Four day booking\"))\n-                .startDate(LocalDateTime.of(2019, Month.MARCH, 19, 0, 0))\n-                .endDate(LocalDateTime.of(2019, Month.MARCH, 22, 23, 59, 59))\n-                .build());\n-\n-        model.add(TimelineEvent.<Booking>builder()\n-                .data(new Booking(96, RoomCategory.DELUXE, \"(0034) 987-777\", \"Two day booking\"))\n-                .startDate(LocalDateTime.of(2019, Month.APRIL, 3, 0, 0))\n-                .endDate(LocalDateTime.of(2019, Month.APRIL, 4, 23, 59, 59))\n-                .build());\n-\n-        model.add(TimelineEvent.<Booking>builder()\n-                .data(new Booking(80, RoomCategory.JUNIOR, \"(0034) 987-444\", \"Ten day booking\"))\n-                .startDate(LocalDateTime.of(2019, Month.APRIL, 22, 0, 0))\n-                .endDate(LocalDateTime.of(2019, Month.MAY, 1, 23, 59, 59))\n-                .build());\n+        model.add(TimelineEvent.<Booking>builder().data(new Booking(211, RoomCategory.DELUXE, \"(0034) 987-111\", \"One day booking\"))\n+                                                  .startDate(LocalDateTime.of(2019, Month.JANUARY, 2, 0, 0))\n+                                                  .build());\n+        model.add(TimelineEvent.<Booking>builder().data(new Booking(202, RoomCategory.EXECUTIVE_SUITE, \"(0034) 987-333\", \"Three day booking\"))\n+                                                  .startDate(LocalDateTime.of(2019, Month.JANUARY, 26, 0, 0))\n+                                                  .endDate(LocalDateTime.of(2019, Month.JANUARY, 28, 23, 59, 59))\n+                                                  .build());\n+        model.add(TimelineEvent.<Booking>builder().data(new Booking(150, RoomCategory.STANDARD, \"(0034) 987-222\", \"Six day booking\"))\n+                                                  .startDate(LocalDateTime.of(2019, Month.FEBRUARY, 10, 0, 0))\n+                                                  .endDate(LocalDateTime.of(2019, Month.FEBRUARY, 15, 23, 59, 59))\n+                                                  .build());\n+        model.add(TimelineEvent.<Booking>builder().data(new Booking(178, RoomCategory.STANDARD, \"(0034) 987-555\", \"Five day booking\"))\n+                                                  .startDate(LocalDateTime.of(2019, Month.FEBRUARY, 23, 0, 0))\n+                                                  .endDate(LocalDateTime.of(2019, Month.FEBRUARY, 27, 23, 59, 59))\n+                                                  .build());\n+        model.add(TimelineEvent.<Booking>builder().data(new Booking(101, RoomCategory.SUPERIOR, \"(0034) 987-999\", \"One day booking\"))\n+                                                  .startDate(LocalDateTime.of(2019, Month.MARCH, 6, 0, 0))\n+                                                  .build());\n+        model.add(TimelineEvent.<Booking>builder().data(new Booking(80, RoomCategory.JUNIOR, \"(0034) 987-444\", \"Four day booking\"))\n+                                                  .startDate(LocalDateTime.of(2019, Month.MARCH, 19, 0, 0))\n+                                                  .endDate(LocalDateTime.of(2019, Month.MARCH, 22, 23, 59, 59))\n+                                                  .build());\n+        model.add(TimelineEvent.<Booking>builder().data(new Booking(96, RoomCategory.DELUXE, \"(0034) 987-777\", \"Two day booking\"))\n+                                                  .startDate(LocalDateTime.of(2019, Month.APRIL, 3, 0, 0))\n+                                                  .endDate(LocalDateTime.of(2019, Month.APRIL, 4, 23, 59, 59))\n+                                                  .build());\n+        model.add(TimelineEvent.<Booking>builder().data(new Booking(80, RoomCategory.JUNIOR, \"(0034) 987-444\", \"Ten day booking\"))\n+                                                  .startDate(LocalDateTime.of(2019, Month.APRIL, 22, 0, 0))\n+                                                  .endDate(LocalDateTime.of(2019, Month.MAY, 1, 23, 59, 59))\n+                                                  .build());\n     }\n \n     public void onChange(TimelineModificationEvent<Booking> e) {\n@@ -119,8 +107,9 @@ public class EditServerTimelineView implements Serializable {\n         // if everything was ok, no UI update is required. Only the model should be updated\n         model.update(event);\n \n-        FacesMessage msg\n-                = new FacesMessage(FacesMessage.SEVERITY_INFO, \"The booking dates \" + getRoom() + \" have been updated\", null);\n+        FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_INFO,\n+                                            \"The booking dates \" + getRoom() + \" have been updated\",\n+                                            null);\n         FacesContext.getCurrentInstance().addMessage(null, msg);\n \n         // otherwise (if DB operation failed) a rollback can be done with the same response as follows:\n@@ -137,13 +126,12 @@ public class EditServerTimelineView implements Serializable {\n     public void onAdd(TimelineAddEvent e) {\n         // get TimelineEvent to be added\n         event = TimelineEvent.<Booking>builder()\n-                // the id generated from the UI must be set\n-                .id(e.getId())\n-                .data(new Booking())\n-                .startDate(e.getStartDate())\n-                .endDate(e.getEndDate())\n-                .editable(true)\n-                .build();\n+                // the id generated from the UI must be set.id(e.getId())\n+                                                                                                            .data(new Booking())\n+                                                                                                            .startDate(e.getStartDate())\n+                                                                                                            .endDate(e.getEndDate())\n+                                                                                                            .editable(true)\n+                                                                                                            .build();\n \n         // add the new event to the model in case if user will close or cancel the \"Add dialog\"\n         // without to update details of the new event. Note: the event is already added in UI.\n@@ -164,7 +152,9 @@ public class EditServerTimelineView implements Serializable {\n         TimelineUpdater timelineUpdater = TimelineUpdater.getCurrentInstance(\":form:timeline\");\n         model.delete(event, timelineUpdater);\n \n-        FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_INFO, \"The booking \" + getRoom() + \" has been deleted\", null);\n+        FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_INFO,\n+                                            \"The booking \" + getRoom() + \" has been deleted\",\n+                                            null);\n         FacesContext.getCurrentInstance().addMessage(null, msg);\n     }\n \n@@ -177,8 +167,9 @@ public class EditServerTimelineView implements Serializable {\n         TimelineUpdater timelineUpdater = TimelineUpdater.getCurrentInstance(\":form:timeline\");\n         model.update(event, timelineUpdater);\n \n-        FacesMessage msg\n-                = new FacesMessage(FacesMessage.SEVERITY_INFO, \"The booking details \" + getRoom() + \" have been saved\", null);\n+        FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_INFO,\n+                                            \"The booking details \" + getRoom() + \" have been saved\",\n+                                            null);\n         FacesContext.getCurrentInstance().addMessage(null, msg);\n     }\n \n@@ -227,8 +218,9 @@ public class EditServerTimelineView implements Serializable {\n         Integer room = event.getData().getRoomNumber();\n         if (room == null) {\n             return \"(new booking)\";\n-        } else {\n+        }\n+        else {\n             return \"(room \" + room + \")\";\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 71
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/12/EditServerTimelineView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/styler_random/12/EditServerTimelineView.java\nindex 3c5ed8ca902..5f17900367a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/12/EditServerTimelineView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/styler_random/12/EditServerTimelineView.java\n@@ -227,7 +227,8 @@ public class EditServerTimelineView implements Serializable {\n         Integer room = event.getData().getRoomNumber();\n         if (room == null) {\n             return \"(new booking)\";\n-        } else {\n+        }\n+        else {\n             return \"(room \" + room + \")\";\n         }\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/12/EditServerTimelineView.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/styler_three_grams/12/EditServerTimelineView.java\nindex 3c5ed8ca902..5f17900367a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/12/EditServerTimelineView.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/styler_three_grams/12/EditServerTimelineView.java\n@@ -227,7 +227,8 @@ public class EditServerTimelineView implements Serializable {\n         Integer room = event.getData().getRoomNumber();\n         if (room == null) {\n             return \"(new booking)\";\n-        } else {\n+        }\n+        else {\n             return \"(room \" + room + \")\";\n         }\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize"
    ]
}
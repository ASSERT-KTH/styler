{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "512",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.corex12.ds.genericbatch.callback.cxf.largefile;\n\nimport gov.hhs.fha.nhinc.callback.cxf.largefile.TimestampValidator;\nimport gov.hhs.fha.nhinc.nhinclib.NhincConstants;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/512/X12BatchTimestampValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/512/X12BatchTimestampValidator.java\nindex 8f53d7741d3..6761702cbba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/512/X12BatchTimestampValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/512/X12BatchTimestampValidator.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.corex12.ds.genericbatch.callback.cxf.largefile;\n \n import gov.hhs.fha.nhinc.callback.cxf.largefile.TimestampValidator;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/512/X12BatchTimestampValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/512/X12BatchTimestampValidator.java\nindex 8f53d7741d3..fe22188c43f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/512/X12BatchTimestampValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/512/X12BatchTimestampValidator.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.corex12.ds.genericbatch.callback.cxf.largefile;\n \n import gov.hhs.fha.nhinc.callback.cxf.largefile.TimestampValidator;\n@@ -41,41 +42,41 @@ import org.slf4j.LoggerFactory;\n  */\n public class X12BatchTimestampValidator extends TimestampValidator {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(X12BatchTimestampValidator.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(X12BatchTimestampValidator.class);\n \n-    @Override\n-    protected long getTimeStampTTL() {\n-        try {\n-            return PropertyAccessor.getInstance().getPropertyLong(NhincConstants.GATEWAY_PROPERTY_FILE,\n-                NhincConstants.X12_GENERIC_BATCH_TIMESTAMP_TIME_TO_LIVE);\n-        } catch (PropertyAccessException pae) {\n-            LOG.warn(\"Failed to determine timestamp TTL in gateway.properties, will use default values: {}\",\n-                pae.getLocalizedMessage(), pae);\n-        }\n-        return INVALID_LONG_VALUE;\n+  @Override\n+  protected long getTimeStampTTL() {\n+    try {\n+      return PropertyAccessor.getInstance().getPropertyLong(NhincConstants.GATEWAY_PROPERTY_FILE,\n+          NhincConstants.X12_GENERIC_BATCH_TIMESTAMP_TIME_TO_LIVE);\n+    } catch (PropertyAccessException pae) {\n+      LOG.warn(\"Failed to determine timestamp TTL in gateway.properties, will use default values: {}\",\n+          pae.getLocalizedMessage(), pae);\n     }\n+    return INVALID_LONG_VALUE;\n+  }\n \n-    @Override\n-    protected long getTimeStampFutureTTL() {\n-        try {\n-            return PropertyAccessor.getInstance().getPropertyLong(NhincConstants.GATEWAY_PROPERTY_FILE,\n-                NhincConstants.X12_GENERIC_BATCH_TIMESTAMP_FUTURE_TIME_TO_LIVE);\n-        } catch (PropertyAccessException pae) {\n-            LOG.warn(\"Failed to determine timestamp future TTL in gateway.properties, will use default values: {}\",\n-                pae.getLocalizedMessage(), pae);\n-        }\n-        return INVALID_LONG_VALUE;\n+  @Override\n+  protected long getTimeStampFutureTTL() {\n+    try {\n+      return PropertyAccessor.getInstance().getPropertyLong(NhincConstants.GATEWAY_PROPERTY_FILE,\n+          NhincConstants.X12_GENERIC_BATCH_TIMESTAMP_FUTURE_TIME_TO_LIVE);\n+    } catch (PropertyAccessException pae) {\n+      LOG.warn(\"Failed to determine timestamp future TTL in gateway.properties, will use default values: {}\",\n+          pae.getLocalizedMessage(), pae);\n     }\n+    return INVALID_LONG_VALUE;\n+  }\n \n-    @Override\n-    protected boolean getTimeStampStrict() {\n-        try {\n-            return PropertyAccessor.getInstance().getPropertyBoolean(NhincConstants.GATEWAY_PROPERTY_FILE,\n-                NhincConstants.X12_GENERIC_BATCH_TIMESTAMP_STRICT);\n-        } catch (PropertyAccessException pae) {\n-            LOG.warn(\"Failed to determine timestamp strict in gateway.properties, will use default values: {}\",\n-                pae.getLocalizedMessage(), pae);\n-        }\n-        return true;\n+  @Override\n+  protected boolean getTimeStampStrict() {\n+    try {\n+      return PropertyAccessor.getInstance().getPropertyBoolean(NhincConstants.GATEWAY_PROPERTY_FILE,\n+          NhincConstants.X12_GENERIC_BATCH_TIMESTAMP_STRICT);\n+    } catch (PropertyAccessException pae) {\n+      LOG.warn(\"Failed to determine timestamp strict in gateway.properties, will use default values: {}\",\n+          pae.getLocalizedMessage(), pae);\n     }\n+    return true;\n+  }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/512/X12BatchTimestampValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/512/X12BatchTimestampValidator.java\nindex 8f53d7741d3..728d6e1d3e7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/512/X12BatchTimestampValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/512/X12BatchTimestampValidator.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.corex12.ds.genericbatch.callback.cxf.largefile;\n \n import gov.hhs.fha.nhinc.callback.cxf.largefile.TimestampValidator;\n@@ -48,10 +49,10 @@ public class X12BatchTimestampValidator extends TimestampValidator {\n         try {\n             return PropertyAccessor.getInstance().getPropertyLong(NhincConstants.GATEWAY_PROPERTY_FILE,\n                 NhincConstants.X12_GENERIC_BATCH_TIMESTAMP_TIME_TO_LIVE);\n-        } catch (PropertyAccessException pae) {\n-            LOG.warn(\"Failed to determine timestamp TTL in gateway.properties, will use default values: {}\",\n-                pae.getLocalizedMessage(), pae);\n-        }\n+    } catch (PropertyAccessException pae) {\n+            LOG.warn(\"Failed to determine timestamp TTL in gateway.properties, will use default values: {}\", pae.getLocalizedMessage(), pae);\n+\n+    }\n         return INVALID_LONG_VALUE;\n     }\n \n@@ -60,10 +61,10 @@ public class X12BatchTimestampValidator extends TimestampValidator {\n         try {\n             return PropertyAccessor.getInstance().getPropertyLong(NhincConstants.GATEWAY_PROPERTY_FILE,\n                 NhincConstants.X12_GENERIC_BATCH_TIMESTAMP_FUTURE_TIME_TO_LIVE);\n-        } catch (PropertyAccessException pae) {\n-            LOG.warn(\"Failed to determine timestamp future TTL in gateway.properties, will use default values: {}\",\n-                pae.getLocalizedMessage(), pae);\n-        }\n+    } catch (PropertyAccessException pae) {\n+            LOG.warn(\"Failed to determine timestamp future TTL in gateway.properties, will use default values: {}\", pae.getLocalizedMessage(), pae);\n+\n+    }\n         return INVALID_LONG_VALUE;\n     }\n \n@@ -72,10 +73,10 @@ public class X12BatchTimestampValidator extends TimestampValidator {\n         try {\n             return PropertyAccessor.getInstance().getPropertyBoolean(NhincConstants.GATEWAY_PROPERTY_FILE,\n                 NhincConstants.X12_GENERIC_BATCH_TIMESTAMP_STRICT);\n-        } catch (PropertyAccessException pae) {\n-            LOG.warn(\"Failed to determine timestamp strict in gateway.properties, will use default values: {}\",\n-                pae.getLocalizedMessage(), pae);\n-        }\n+    } catch (PropertyAccessException pae) {\n+            LOG.warn(\"Failed to determine timestamp strict in gateway.properties, will use default values: {}\", pae.getLocalizedMessage(), pae);\n+\n+    }\n         return true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/512/X12BatchTimestampValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/512/X12BatchTimestampValidator.java\nindex 8f53d7741d3..4f3ff548e6f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/512/X12BatchTimestampValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/512/X12BatchTimestampValidator.java\n@@ -39,43 +39,43 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author Naresh Subramanyan\n  */\n-public class X12BatchTimestampValidator extends TimestampValidator {\n+\n+\n+public class X12BatchTimestampValidator extends\n+    TimestampValidator {\n \n     private static final Logger LOG = LoggerFactory.getLogger(X12BatchTimestampValidator.class);\n \n+\n     @Override\n     protected long getTimeStampTTL() {\n         try {\n-            return PropertyAccessor.getInstance().getPropertyLong(NhincConstants.GATEWAY_PROPERTY_FILE,\n-                NhincConstants.X12_GENERIC_BATCH_TIMESTAMP_TIME_TO_LIVE);\n+            return PropertyAccessor.getInstance().getPropertyLong(NhincConstants.GATEWAY_PROPERTY_FILE, NhincConstants.X12_GENERIC_BATCH_TIMESTAMP_TIME_TO_LIVE);\n         } catch (PropertyAccessException pae) {\n-            LOG.warn(\"Failed to determine timestamp TTL in gateway.properties, will use default values: {}\",\n-                pae.getLocalizedMessage(), pae);\n+            LOG.warn(\"Failed to determine timestamp TTL in gateway.properties, will use default values: {}\", pae.getLocalizedMessage(), pae);\n         }\n         return INVALID_LONG_VALUE;\n     }\n \n+\n     @Override\n     protected long getTimeStampFutureTTL() {\n         try {\n-            return PropertyAccessor.getInstance().getPropertyLong(NhincConstants.GATEWAY_PROPERTY_FILE,\n-                NhincConstants.X12_GENERIC_BATCH_TIMESTAMP_FUTURE_TIME_TO_LIVE);\n+            return PropertyAccessor.getInstance().getPropertyLong(NhincConstants.GATEWAY_PROPERTY_FILE, NhincConstants.X12_GENERIC_BATCH_TIMESTAMP_FUTURE_TIME_TO_LIVE);\n         } catch (PropertyAccessException pae) {\n-            LOG.warn(\"Failed to determine timestamp future TTL in gateway.properties, will use default values: {}\",\n-                pae.getLocalizedMessage(), pae);\n+            LOG.warn(\"Failed to determine timestamp future TTL in gateway.properties, will use default values: {}\", pae.getLocalizedMessage(), pae);\n         }\n         return INVALID_LONG_VALUE;\n     }\n \n+\n     @Override\n     protected boolean getTimeStampStrict() {\n         try {\n-            return PropertyAccessor.getInstance().getPropertyBoolean(NhincConstants.GATEWAY_PROPERTY_FILE,\n-                NhincConstants.X12_GENERIC_BATCH_TIMESTAMP_STRICT);\n+            return PropertyAccessor.getInstance().getPropertyBoolean(NhincConstants.GATEWAY_PROPERTY_FILE, NhincConstants.X12_GENERIC_BATCH_TIMESTAMP_STRICT);\n         } catch (PropertyAccessException pae) {\n-            LOG.warn(\"Failed to determine timestamp strict in gateway.properties, will use default values: {}\",\n-                pae.getLocalizedMessage(), pae);\n+            LOG.warn(\"Failed to determine timestamp strict in gateway.properties, will use default values: {}\", pae.getLocalizedMessage(), pae);\n         }\n         return true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/512/X12BatchTimestampValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/512/X12BatchTimestampValidator.java\nindex 8f53d7741d3..3845a35a54c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/512/X12BatchTimestampValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/512/X12BatchTimestampValidator.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.corex12.ds.genericbatch.callback.cxf.largefile;\n-\n import gov.hhs.fha.nhinc.callback.cxf.largefile.TimestampValidator;\n import gov.hhs.fha.nhinc.nhinclib.NhincConstants;\n import gov.hhs.fha.nhinc.properties.PropertyAccessException;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/512/X12BatchTimestampValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/512/X12BatchTimestampValidator.java\nindex 8f53d7741d3..6761702cbba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/512/X12BatchTimestampValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/512/X12BatchTimestampValidator.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.corex12.ds.genericbatch.callback.cxf.largefile;\n \n import gov.hhs.fha.nhinc.callback.cxf.largefile.TimestampValidator;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
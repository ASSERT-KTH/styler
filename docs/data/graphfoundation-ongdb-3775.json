{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3775",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3775/Response.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3775/Response.java\nindex 02851b7b4c5..b62d69a454b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3775/Response.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3775/Response.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.com;\n \n import java.io.IOException;\n@@ -32,64 +33,65 @@ import org.neo4j.kernel.impl.transaction.CommittedTransactionRepresentation;\n  */\n public abstract class Response<T> implements AutoCloseable\n {\n-    private final T response;\n-    private final StoreId storeId;\n-    private final ResourceReleaser releaser;\n+  private final T response;\n+  private final StoreId storeId;\n+  private final ResourceReleaser releaser;\n+\n+  public Response(T response, StoreId storeId, ResourceReleaser releaser)\n+  {\n+    this.storeId = storeId;\n+    this.response = response;\n+    this.releaser = releaser;\n+  }\n \n-    public Response( T response, StoreId storeId, ResourceReleaser releaser )\n-    {\n-        this.storeId = storeId;\n-        this.response = response;\n-        this.releaser = releaser;\n-    }\n+  public T response() throws ServerFailureException\n+  {\n+    return response;\n+  }\n \n-    public T response() throws ServerFailureException\n-    {\n-        return response;\n-    }\n+  public StoreId getStoreId()\n+  {\n+    return storeId;\n+  }\n \n-    public StoreId getStoreId()\n-    {\n-        return storeId;\n-    }\n+  @Override\n+  public void close()\n+  {\n+    releaser.release();\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        releaser.release();\n-    }\n+  @SuppressWarnings(\"unchecked\")\n+  public static <T> Response<T> empty()\n+  {\n+    return (Response<T>) TransactionObligationResponse.EMPTY_RESPONSE;\n+  }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public static <T> Response<T> empty()\n-    {\n-        return (Response<T>) TransactionObligationResponse.EMPTY_RESPONSE;\n-    }\n+  public abstract void accept(Handler handler) throws Exception;\n \n-    public abstract void accept( Handler handler ) throws Exception;\n+  /**\n+   * @return {@code true} if this response has transactions to be applied as part of unpacking it,\n+   * otherwise {@code false}.\n+   */\n+  public abstract boolean hasTransactionsToBeApplied();\n \n+  /**\n+   * Handler of the transaction data part of a response. Callbacks for whether to await or apply\n+   * certain transactions.\n+   */\n+  public interface Handler\n+  {\n     /**\n-     * @return {@code true} if this response has transactions to be applied as part of unpacking it,\n-     * otherwise {@code false}.\n+     * Called for responses that handle {@link TransactionObligationResponse transaction obligations}\n+     * after the obligation transaction id has been deserialized.\n+     *\n+     * @param txId the obligation transaction id that must be fulfilled.\n+     * @throws IOException if there were any problems fulfilling that obligation.\n      */\n-    public abstract boolean hasTransactionsToBeApplied();\n+    void obligation(long txId) throws IOException;\n \n     /**\n-     * Handler of the transaction data part of a response. Callbacks for whether to await or apply\n-     * certain transactions.\n+     * @return a {@link Visitor} which will {@link Visitor#visit(Object) receive} calls about transactions.\n      */\n-    public interface Handler\n-    {\n-        /**\n-         * Called for responses that handle {@link TransactionObligationResponse transaction obligations}\n-         * after the obligation transaction id has been deserialized.\n-         * @param txId the obligation transaction id that must be fulfilled.\n-         * @throws IOException if there were any problems fulfilling that obligation.\n-         */\n-        void obligation( long txId ) throws IOException;\n-\n-        /**\n-         * @return a {@link Visitor} which will {@link Visitor#visit(Object) receive} calls about transactions.\n-         */\n-        Visitor<CommittedTransactionRepresentation,Exception> transactions();\n-    }\n+    Visitor<CommittedTransactionRepresentation, Exception> transactions();\n+  }\n }\n",
            "diff_size": 70
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3775/Response.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3775/Response.java\nindex 02851b7b4c5..9530c60f0d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3775/Response.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3775/Response.java\n@@ -92,4 +92,4 @@ public abstract class Response<T> implements AutoCloseable\n          */\n         Visitor<CommittedTransactionRepresentation,Exception> transactions();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
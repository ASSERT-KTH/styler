{
    "project_name": "intuit-Tank",
    "error_id": "45",
    "information": {
        "errors": [
            {
                "line": "77",
                "column": "5",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    public String runAutomationJob(AutomationRequest request, File xmlFile)\n            throws RestServiceException {\n    \tWebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n        MultiPart multiPart = new MultiPart();\n        if (xmlFile != null) {\n            BodyPart bp = new FileDataBodyPart(\"file\", xmlFile);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "96",
                    "column": "5",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/45/AutomationServiceClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/45/AutomationServiceClient.java\nindex 93fba2d0804..54ab3adf0c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/45/AutomationServiceClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/45/AutomationServiceClient.java\n@@ -74,7 +74,7 @@ public class AutomationServiceClient extends BaseRestClient {\n      */\n     public String runAutomationJob(AutomationRequest request, File xmlFile)\n             throws RestServiceException {\n-    \tWebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n+                WebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n         MultiPart multiPart = new MultiPart();\n         if (xmlFile != null) {\n             BodyPart bp = new FileDataBodyPart(\"file\", xmlFile);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/45/AutomationServiceClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/45/AutomationServiceClient.java\nindex 93fba2d0804..8c0fc283f51 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/45/AutomationServiceClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/45/AutomationServiceClient.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.api.client.v1.automation;\n \n /*\n@@ -35,76 +36,72 @@ import com.intuit.tank.rest.RestServiceException;\n \n /**\n  * AutomationServiceClient\n- * \n+ *\n  * @author dangleton\n- * \n  */\n public class AutomationServiceClient extends BaseRestClient {\n \n-    private static final String SERVICE_BASE_URL = \"/rest/v1/automation-service\";\n+  private static final String SERVICE_BASE_URL = \"/rest/v1/automation-service\";\n \n-    private static final String METHOD_RUN_JOB = \"/run-job\";\n+  private static final String METHOD_RUN_JOB = \"/run-job\";\n \n-    /**\n-     * \n-     * @param serviceUrl\n-     */\n-    public AutomationServiceClient(String serviceUrl) {\n-        super(serviceUrl, null, null);\n-    }\n+  /**\n+   * @param serviceUrl\n+   */\n+  public AutomationServiceClient(String serviceUrl) {\n+    super(serviceUrl, null, null);\n+  }\n \n-    /**\n-     * \n-     * @param serviceUrl\n-     */\n-    public AutomationServiceClient(String serviceUrl, final String proxyServer, final Integer proxyPort) {\n-        super(serviceUrl, proxyServer, proxyPort);\n-    }\n+  /**\n+   * @param serviceUrl\n+   */\n+  public AutomationServiceClient(String serviceUrl, final String proxyServer, final Integer proxyPort) {\n+    super(serviceUrl, proxyServer, proxyPort);\n+  }\n \n-    /**\n-     * \n-     * @return\n-     */\n-    protected String getServiceBaseUrl() {\n-        return SERVICE_BASE_URL;\n-    }\n+  /**\n+   * @return\n+   */\n+  protected String getServiceBaseUrl() {\n+    return SERVICE_BASE_URL;\n+  }\n \n-    /**\n-     * @{inheritDoc\n-     */\n-    public String runAutomationJob(AutomationRequest request, File xmlFile)\n-            throws RestServiceException {\n-    \tWebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n-        MultiPart multiPart = new MultiPart();\n-        if (xmlFile != null) {\n-            BodyPart bp = new FileDataBodyPart(\"file\", xmlFile);\n-            multiPart.bodyPart(bp);\n-        }\n-\n-        multiPart.bodyPart(new FormDataBodyPart(\"automationRequest\", request,\n-                MediaType.APPLICATION_XML_TYPE));\n-        Response response = webTarget.request().post(Entity.entity(multiPart, MediaType.MULTIPART_FORM_DATA_TYPE));\n-        exceptionHandler.checkStatusCode(response);\n-        return response.readEntity(String.class);\n+  /**\n+   * @{inheritDoc\n+   */\n+  public String runAutomationJob(AutomationRequest request, File xmlFile)\n+    throws RestServiceException {\n+    WebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n+    MultiPart multiPart = new MultiPart();\n+    if (xmlFile != null) {\n+      BodyPart bp = new FileDataBodyPart(\"file\", xmlFile);\n+      multiPart.bodyPart(bp);\n     }\n \n-    /**\n-     * @{inheritDoc\n-     */\n-    public String runAutomationJob(AutomationRequest request,\n-            InputStream xmlFileStream) {\n-    \tWebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n-        MultiPart multiPart = new MultiPart();\n-        if (xmlFileStream != null) {\n-            BodyPart bp = new FormDataBodyPart(\"file\", xmlFileStream,\n-                    MediaType.APPLICATION_OCTET_STREAM_TYPE);\n-            multiPart.bodyPart(bp);\n-        }\n-        multiPart.bodyPart(new FormDataBodyPart(\"automationRequest\", request,\n-                MediaType.APPLICATION_XML_TYPE));\n-        Response response = webTarget.request().post(Entity.entity(multiPart, MediaType.MULTIPART_FORM_DATA_TYPE));\n-        exceptionHandler.checkStatusCode(response);\n-        return response.readEntity(String.class);\n+    multiPart.bodyPart(new FormDataBodyPart(\"automationRequest\", request,\n+      MediaType.APPLICATION_XML_TYPE));\n+    Response response = webTarget.request().post(Entity.entity(multiPart, MediaType.MULTIPART_FORM_DATA_TYPE));\n+    exceptionHandler.checkStatusCode(response);\n+    return response.readEntity(String.class);\n+  }\n+\n+  /**\n+   * @{inheritDoc\n+   */\n+  public String runAutomationJob(AutomationRequest request,\n+                                 InputStream xmlFileStream) {\n+    WebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n+    MultiPart multiPart = new MultiPart();\n+    if (xmlFileStream != null) {\n+      BodyPart bp = new FormDataBodyPart(\"file\", xmlFileStream,\n+        MediaType.APPLICATION_OCTET_STREAM_TYPE);\n+      multiPart.bodyPart(bp);\n     }\n+    multiPart.bodyPart(new FormDataBodyPart(\"automationRequest\", request,\n+      MediaType.APPLICATION_XML_TYPE));\n+    Response response = webTarget.request().post(Entity.entity(multiPart, MediaType.MULTIPART_FORM_DATA_TYPE));\n+    exceptionHandler.checkStatusCode(response);\n+    return response.readEntity(String.class);\n+  }\n \n }\n",
            "diff_size": 67
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/45/AutomationServiceClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/45/AutomationServiceClient.java\nindex 93fba2d0804..76785f92d5f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/45/AutomationServiceClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/45/AutomationServiceClient.java\n@@ -74,8 +74,8 @@ public class AutomationServiceClient extends BaseRestClient {\n      */\n     public String runAutomationJob(AutomationRequest request, File xmlFile)\n             throws RestServiceException {\n-    \tWebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n-        MultiPart multiPart = new MultiPart();\n+    WebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n+MultiPart multiPart = new MultiPart();\n         if (xmlFile != null) {\n             BodyPart bp = new FileDataBodyPart(\"file\", xmlFile);\n             multiPart.bodyPart(bp);\n@@ -93,8 +93,8 @@ public class AutomationServiceClient extends BaseRestClient {\n      */\n     public String runAutomationJob(AutomationRequest request,\n             InputStream xmlFileStream) {\n-    \tWebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n-        MultiPart multiPart = new MultiPart();\n+    WebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n+MultiPart multiPart = new MultiPart();\n         if (xmlFileStream != null) {\n             BodyPart bp = new FormDataBodyPart(\"file\", xmlFileStream,\n                     MediaType.APPLICATION_OCTET_STREAM_TYPE);\n@@ -107,4 +107,4 @@ public class AutomationServiceClient extends BaseRestClient {\n         return response.readEntity(String.class);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/45/AutomationServiceClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/45/AutomationServiceClient.java\nindex 93fba2d0804..5e23cf8af19 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/45/AutomationServiceClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/45/AutomationServiceClient.java\n@@ -16,19 +16,18 @@ package com.intuit.tank.api.client.v1.automation;\n  * #L%\n  */\n \n+\n+\n import java.io.File;\n import java.io.InputStream;\n-\n import javax.ws.rs.client.Entity;\n import javax.ws.rs.client.WebTarget;\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n-\n import org.glassfish.jersey.media.multipart.BodyPart;\n import org.glassfish.jersey.media.multipart.FormDataBodyPart;\n import org.glassfish.jersey.media.multipart.MultiPart;\n import org.glassfish.jersey.media.multipart.file.FileDataBodyPart;\n-\n import com.intuit.tank.api.model.v1.automation.AutomationRequest;\n import com.intuit.tank.rest.BaseRestClient;\n import com.intuit.tank.rest.RestServiceException;\n@@ -39,16 +38,18 @@ import com.intuit.tank.rest.RestServiceException;\n  * @author dangleton\n  * \n  */\n+\n+\n public class AutomationServiceClient extends BaseRestClient {\n \n     private static final String SERVICE_BASE_URL = \"/rest/v1/automation-service\";\n-\n     private static final String METHOD_RUN_JOB = \"/run-job\";\n \n     /**\n      * \n      * @param serviceUrl\n      */\n+\n     public AutomationServiceClient(String serviceUrl) {\n         super(serviceUrl, null, null);\n     }\n@@ -57,6 +58,8 @@ public class AutomationServiceClient extends BaseRestClient {\n      * \n      * @param serviceUrl\n      */\n+\n+\n     public AutomationServiceClient(String serviceUrl, final String proxyServer, final Integer proxyPort) {\n         super(serviceUrl, proxyServer, proxyPort);\n     }\n@@ -65,6 +68,8 @@ public class AutomationServiceClient extends BaseRestClient {\n      * \n      * @return\n      */\n+\n+\n     protected String getServiceBaseUrl() {\n         return SERVICE_BASE_URL;\n     }\n@@ -72,17 +77,16 @@ public class AutomationServiceClient extends BaseRestClient {\n     /**\n      * @{inheritDoc\n      */\n-    public String runAutomationJob(AutomationRequest request, File xmlFile)\n-            throws RestServiceException {\n-    \tWebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n+\n+\n+    public String runAutomationJob(AutomationRequest request, File xmlFile) throws RestServiceException {\n+        WebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n         MultiPart multiPart = new MultiPart();\n         if (xmlFile != null) {\n             BodyPart bp = new FileDataBodyPart(\"file\", xmlFile);\n             multiPart.bodyPart(bp);\n         }\n-\n-        multiPart.bodyPart(new FormDataBodyPart(\"automationRequest\", request,\n-                MediaType.APPLICATION_XML_TYPE));\n+        multiPart.bodyPart(new FormDataBodyPart(\"automationRequest\", request, MediaType.APPLICATION_XML_TYPE));\n         Response response = webTarget.request().post(Entity.entity(multiPart, MediaType.MULTIPART_FORM_DATA_TYPE));\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(String.class);\n@@ -91,20 +95,19 @@ public class AutomationServiceClient extends BaseRestClient {\n     /**\n      * @{inheritDoc\n      */\n-    public String runAutomationJob(AutomationRequest request,\n-            InputStream xmlFileStream) {\n-    \tWebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n+\n+\n+    public String runAutomationJob(AutomationRequest request, InputStream xmlFileStream) {\n+        WebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n         MultiPart multiPart = new MultiPart();\n         if (xmlFileStream != null) {\n-            BodyPart bp = new FormDataBodyPart(\"file\", xmlFileStream,\n-                    MediaType.APPLICATION_OCTET_STREAM_TYPE);\n+            BodyPart bp = new FormDataBodyPart(\"file\", xmlFileStream, MediaType.APPLICATION_OCTET_STREAM_TYPE);\n             multiPart.bodyPart(bp);\n         }\n-        multiPart.bodyPart(new FormDataBodyPart(\"automationRequest\", request,\n-                MediaType.APPLICATION_XML_TYPE));\n+        multiPart.bodyPart(new FormDataBodyPart(\"automationRequest\", request, MediaType.APPLICATION_XML_TYPE));\n         Response response = webTarget.request().post(Entity.entity(multiPart, MediaType.MULTIPART_FORM_DATA_TYPE));\n         exceptionHandler.checkStatusCode(response);\n         return response.readEntity(String.class);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "96",
                    "column": "5",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/45/AutomationServiceClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/45/AutomationServiceClient.java\nindex 93fba2d0804..54ab3adf0c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/45/AutomationServiceClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/45/AutomationServiceClient.java\n@@ -74,7 +74,7 @@ public class AutomationServiceClient extends BaseRestClient {\n      */\n     public String runAutomationJob(AutomationRequest request, File xmlFile)\n             throws RestServiceException {\n-    \tWebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n+                WebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n         MultiPart multiPart = new MultiPart();\n         if (xmlFile != null) {\n             BodyPart bp = new FileDataBodyPart(\"file\", xmlFile);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "96",
                    "column": "5",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/45/AutomationServiceClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/45/AutomationServiceClient.java\nindex 93fba2d0804..54ab3adf0c4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/45/AutomationServiceClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/45/AutomationServiceClient.java\n@@ -74,7 +74,7 @@ public class AutomationServiceClient extends BaseRestClient {\n      */\n     public String runAutomationJob(AutomationRequest request, File xmlFile)\n             throws RestServiceException {\n-    \tWebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n+                WebTarget webTarget = client.target(baseUrl + METHOD_RUN_JOB);\n         MultiPart multiPart = new MultiPart();\n         if (xmlFile != null) {\n             BodyPart bp = new FileDataBodyPart(\"file\", xmlFile);\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ]
}
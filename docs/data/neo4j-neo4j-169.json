{
    "project_name": "neo4j-neo4j",
    "error_id": "169",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/169/ContextFieldVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/169/ContextFieldVisitor.java\nindex fb3361bea6e..8dfa8371ca3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/169/ContextFieldVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/169/ContextFieldVisitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tooling.procedure.visitors;\n \n import java.util.LinkedHashSet;\n@@ -48,21 +49,21 @@ import org.neo4j.tooling.procedure.messages.ContextFieldWarning;\n \n import static org.neo4j.tooling.procedure.CompilerOptions.IGNORE_CONTEXT_WARNINGS_OPTION;\n \n-class ContextFieldVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>,Void>\n+class ContextFieldVisitor extends SimpleElementVisitor8<Stream<CompilationMessage>, Void>\n {\n-    private static final Set<String> SUPPORTED_TYPES = new LinkedHashSet<>( List.of( GraphDatabaseService.class.getName(),\n-            Log.class.getName(), TerminationGuard.class.getName(), SecurityContext.class.getName(), Transaction.class.getName() ) );\n-    private static final Set<String> RESTRICTED_TYPES = new LinkedHashSet<>( List.of( GraphDatabaseAPI.class.getName(),\n-            KernelTransaction.class.getName(), DependencyResolver.class.getName(),\n-                    // the following classes are not in the compiler classpath\n-                    \"com.neo4j.kernel.enterprise.api.security.EnterpriseAuthManager\",\n-                    \"com.neo4j.server.security.enterprise.log.SecurityLog\" ) );\n+    private static final Set<String> SUPPORTED_TYPES = new LinkedHashSet<>(List.of(GraphDatabaseService.class.getName(),\n+      Log.class.getName(), TerminationGuard.class.getName(), SecurityContext.class.getName(), Transaction.class.getName()));\n+    private static final Set<String> RESTRICTED_TYPES = new LinkedHashSet<>(List.of(GraphDatabaseAPI.class.getName(),\n+      KernelTransaction.class.getName(), DependencyResolver.class.getName(),\n+      // the following classes are not in the compiler classpath\n+      \"com.neo4j.kernel.enterprise.api.security.EnterpriseAuthManager\",\n+      \"com.neo4j.server.security.enterprise.log.SecurityLog\"));\n \n     private final Elements elements;\n     private final Types types;\n     private final boolean ignoresWarnings;\n \n-    ContextFieldVisitor( Types types, Elements elements, boolean ignoresWarnings )\n+    ContextFieldVisitor(Types types, Elements elements, boolean ignoresWarnings)\n     {\n         this.elements = elements;\n         this.types = types;\n@@ -70,85 +71,85 @@ class ContextFieldVisitor extends SimpleElementVisitor8<Stream<CompilationMessag\n     }\n \n     @Override\n-    public Stream<CompilationMessage> visitVariable( VariableElement field, Void ignored )\n+    public Stream<CompilationMessage> visitVariable(VariableElement field, Void ignored)\n     {\n-        return Stream.concat( validateModifiers( field ), validateInjectedTypes( field ) );\n+        return Stream.concat(validateModifiers(field), validateInjectedTypes(field));\n     }\n \n-    private Stream<CompilationMessage> validateModifiers( VariableElement field )\n+    private Stream<CompilationMessage> validateModifiers(VariableElement field)\n     {\n-        if ( !hasValidModifiers( field ) )\n+        if (!hasValidModifiers(field))\n         {\n-            return Stream.of( new ContextFieldError( field,\n-                    \"@%s usage error: field %s should be public, non-static and non-final\", Context.class.getName(),\n-                    fieldFullName( field ) ) );\n+            return Stream.of(new ContextFieldError(field,\n+              \"@%s usage error: field %s should be public, non-static and non-final\", Context.class.getName(),\n+              fieldFullName(field)));\n         }\n \n         return Stream.empty();\n     }\n \n-    private Stream<CompilationMessage> validateInjectedTypes( VariableElement field )\n+    private Stream<CompilationMessage> validateInjectedTypes(VariableElement field)\n     {\n         TypeMirror fieldType = field.asType();\n-        if ( injectsAllowedType( fieldType ) )\n+        if (injectsAllowedType(fieldType))\n         {\n             return Stream.empty();\n         }\n \n-        if ( injectsRestrictedType( fieldType ) )\n+        if (injectsRestrictedType(fieldType))\n         {\n-            if ( ignoresWarnings )\n+            if (ignoresWarnings)\n             {\n                 return Stream.empty();\n             }\n \n-            return Stream.of( new ContextFieldWarning( field, \"@%s usage warning: found unsupported restricted type <%s> on %s.\\n\" +\n-                    \"The procedure will not load unless declared via the configuration option 'dbms.security.procedures.unrestricted'.\\n\" +\n-                    \"You can ignore this warning by passing the option -A%s to the Java compiler\",\n-                    Context.class.getName(), fieldType.toString(), fieldFullName( field ),\n-                    IGNORE_CONTEXT_WARNINGS_OPTION ) );\n+            return Stream.of(new ContextFieldWarning(field, \"@%s usage warning: found unsupported restricted type <%s> on %s.\\n\" +\n+              \"The procedure will not load unless declared via the configuration option 'dbms.security.procedures.unrestricted'.\\n\" +\n+              \"You can ignore this warning by passing the option -A%s to the Java compiler\",\n+              Context.class.getName(), fieldType.toString(), fieldFullName(field),\n+              IGNORE_CONTEXT_WARNINGS_OPTION));\n         }\n \n-        return Stream.of( new ContextFieldError( field,\n-                \"@%s usage error: found unknown type <%s> on field %s, expected one of: %s\",\n-                Context.class.getName(), fieldType.toString(), fieldFullName( field ),\n-                joinTypes( SUPPORTED_TYPES ) ) );\n+        return Stream.of(new ContextFieldError(field,\n+          \"@%s usage error: found unknown type <%s> on field %s, expected one of: %s\",\n+          Context.class.getName(), fieldType.toString(), fieldFullName(field),\n+          joinTypes(SUPPORTED_TYPES)));\n     }\n \n-    private boolean injectsAllowedType( TypeMirror fieldType )\n+    private boolean injectsAllowedType(TypeMirror fieldType)\n     {\n-        return matches( fieldType, SUPPORTED_TYPES );\n+        return matches(fieldType, SUPPORTED_TYPES);\n     }\n \n-    private boolean injectsRestrictedType( TypeMirror fieldType )\n+    private boolean injectsRestrictedType(TypeMirror fieldType)\n     {\n-        return matches( fieldType, RESTRICTED_TYPES );\n+        return matches(fieldType, RESTRICTED_TYPES);\n     }\n \n-    private boolean matches( TypeMirror fieldType, Set<String> typeNames )\n+    private boolean matches(TypeMirror fieldType, Set<String> typeNames)\n     {\n-        return typeMirrors( typeNames ).anyMatch( t -> types.isSameType( t, fieldType ) );\n+        return typeMirrors(typeNames).anyMatch(t -> types.isSameType(t, fieldType));\n     }\n \n-    private boolean hasValidModifiers( VariableElement field )\n+    private boolean hasValidModifiers(VariableElement field)\n     {\n         Set<Modifier> modifiers = field.getModifiers();\n-        return modifiers.contains( Modifier.PUBLIC ) && !modifiers.contains( Modifier.STATIC ) &&\n-                !modifiers.contains( Modifier.FINAL );\n+        return modifiers.contains(Modifier.PUBLIC) && !modifiers.contains(Modifier.STATIC) &&\n+          !modifiers.contains(Modifier.FINAL);\n     }\n \n-    private Stream<TypeMirror> typeMirrors( Set<String> typeNames )\n+    private Stream<TypeMirror> typeMirrors(Set<String> typeNames)\n     {\n-        return typeNames.stream().map( elements::getTypeElement ).filter( Objects::nonNull ).map( Element::asType );\n+        return typeNames.stream().map(elements::getTypeElement).filter(Objects::nonNull).map(Element::asType);\n     }\n \n-    private String fieldFullName( VariableElement field )\n+    private String fieldFullName(VariableElement field)\n     {\n-        return String.format( \"%s#%s\", field.getEnclosingElement().getSimpleName(), field.getSimpleName() );\n+        return String.format(\"%s#%s\", field.getEnclosingElement().getSimpleName(), field.getSimpleName());\n     }\n \n-    private static String joinTypes( Set<String> types )\n+    private static String joinTypes(Set<String> types)\n     {\n-        return types.stream().collect( Collectors.joining( \">, <\", \"<\", \">\" ) );\n+        return types.stream().collect(Collectors.joining(\">, <\", \"<\", \">\"));\n     }\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
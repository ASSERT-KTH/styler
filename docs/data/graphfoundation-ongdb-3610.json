{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3610",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "97",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "123",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3610/ServerPlugin.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3610/ServerPlugin.java\nindex 6404408d61b..23da4e03156 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3610/ServerPlugin.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3610/ServerPlugin.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.plugins;\n \n import java.io.UnsupportedEncodingException;\n@@ -86,96 +87,94 @@ import org.neo4j.helpers.Service;\n  */\n public abstract class ServerPlugin\n {\n-    final String name;\n+  final String name;\n \n-    /**\n-     * Create a server extension with the specified name.\n-     *\n-     * @param name the name of this extension.\n-     */\n-    public ServerPlugin( String name )\n-    {\n-        this.name = verifyName( name );\n-    }\n+  /**\n+   * Create a server extension with the specified name.\n+   *\n+   * @param name the name of this extension.\n+   */\n+  public ServerPlugin(String name)\n+  {\n+    this.name = verifyName(name);\n+  }\n \n-    /**\n-     * Create a server extension using the simple name of the concrete class\n-     * that extends {@link ServerPlugin} as the name for the extension.\n-     */\n-    public ServerPlugin()\n-    {\n-        this.name = verifyName( getClass().getSimpleName() );\n-    }\n+  /**\n+   * Create a server extension using the simple name of the concrete class\n+   * that extends {@link ServerPlugin} as the name for the extension.\n+   */\n+  public ServerPlugin()\n+  {\n+    this.name = verifyName(getClass().getSimpleName());\n+  }\n \n-    static String verifyName( String name )\n+  static String verifyName(String name)\n+  {\n+    if (name == null)\n     {\n-        if ( name == null )\n-        {\n-            throw new IllegalArgumentException( \"Name may not be null\" );\n-        }\n-        try\n-        {\n-            if ( !URLEncoder.encode( name, StandardCharsets.UTF_8.name() ).equals( name ) )\n-            {\n-                throw new IllegalArgumentException( \"Name contains illegal characters\" );\n-            }\n-        }\n-        catch ( UnsupportedEncodingException e )\n-        {\n-            throw new Error( \"UTF-8 should be supported\", e );\n-        }\n-        return name;\n+      throw new IllegalArgumentException(\"Name may not be null\");\n     }\n-\n-    @Override\n-    public String toString()\n+    try\n     {\n-        return \"ServerPlugin[\" + name + \"]\";\n-    }\n-\n-    static Iterable<ServerPlugin> load()\n+      if (!URLEncoder.encode(name, StandardCharsets.UTF_8.name()).equals(name))\n+      {\n+        throw new IllegalArgumentException(\"Name contains illegal characters\");\n+      }\n+    } catch (UnsupportedEncodingException e)\n     {\n-        return Service.load( ServerPlugin.class );\n+      throw new Error(\"UTF-8 should be supported\", e);\n     }\n+    return name;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"ServerPlugin[\" + name + \"]\";\n+  }\n+\n+  static Iterable<ServerPlugin> load()\n+  {\n+    return Service.load(ServerPlugin.class);\n+  }\n \n-    /**\n-     * Loads the extension points of this server extension. Override this method\n-     * to provide your own, custom way of loading extension points. The default\n-     * implementation loads {@link PluginPoint} based on methods with the\n-     * {@link PluginTarget} annotation.\n-     *\n-     * @param extender     the collection of {@link org.neo4j.server.plugins.PluginPoint}s for this\n-     *                     {@link org.neo4j.server.plugins.ServerPlugin}.\n-     *\n-     */\n-    protected void loadServerExtender( ServerExtender extender )\n+  /**\n+   * Loads the extension points of this server extension. Override this method\n+   * to provide your own, custom way of loading extension points. The default\n+   * implementation loads {@link PluginPoint} based on methods with the\n+   * {@link PluginTarget} annotation.\n+   *\n+   * @param extender the collection of {@link org.neo4j.server.plugins.PluginPoint}s for this\n+   *                 {@link org.neo4j.server.plugins.ServerPlugin}.\n+   */\n+  protected void loadServerExtender(ServerExtender extender)\n+  {\n+    for (PluginPoint plugin : getDefaultExtensionPoints(extender.getPluginPointFactory()))\n     {\n-        for ( PluginPoint plugin : getDefaultExtensionPoints( extender.getPluginPointFactory() ) )\n-        {\n-            extender.addExtension( plugin.forType(), plugin );\n-        }\n+      extender.addExtension(plugin.forType(), plugin);\n     }\n+  }\n \n-    /**\n-     * Loads the extension points of this server extension. Override this method\n-     * to provide your own, custom way of loading extension points. The default\n-     * implementation loads {@link PluginPoint} based on methods with the\n-     * {@link PluginTarget} annotation.\n-     *\n-     * @return the collection of {@link PluginPoint}s for this\n-     *         {@link ServerPlugin}.\n-     */\n-    protected Collection<PluginPoint> getDefaultExtensionPoints( PluginPointFactory pluginPointFactory )\n+  /**\n+   * Loads the extension points of this server extension. Override this method\n+   * to provide your own, custom way of loading extension points. The default\n+   * implementation loads {@link PluginPoint} based on methods with the\n+   * {@link PluginTarget} annotation.\n+   *\n+   * @return the collection of {@link PluginPoint}s for this\n+   * {@link ServerPlugin}.\n+   */\n+  protected Collection<PluginPoint> getDefaultExtensionPoints(PluginPointFactory pluginPointFactory)\n+  {\n+    List<PluginPoint> result = new ArrayList<>();\n+    for (Method method : getClass().getMethods())\n     {\n-        List<PluginPoint> result = new ArrayList<>();\n-        for ( Method method : getClass().getMethods() )\n-        {\n-            PluginTarget target = method.getAnnotation( PluginTarget.class );\n-            if ( target != null )\n-            {\n-                result.add( pluginPointFactory.createFrom( this, method, target.value() ) );\n-            }\n-        }\n-        return result;\n+      PluginTarget target = method.getAnnotation(PluginTarget.class);\n+      if (target != null)\n+      {\n+        result.add(pluginPointFactory.createFrom(this, method, target.value()));\n+      }\n     }\n+    return result;\n+  }\n }\n",
            "diff_size": 102
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3610/ServerPlugin.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3610/ServerPlugin.java\nindex 6404408d61b..cc448695a6c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3610/ServerPlugin.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3610/ServerPlugin.java\n@@ -113,7 +113,8 @@ public abstract class ServerPlugin\n         {\n             throw new IllegalArgumentException( \"Name may not be null\" );\n         }\n-        try\n+\n+try\n         {\n             if ( !URLEncoder.encode( name, StandardCharsets.UTF_8.name() ).equals( name ) )\n             {\n@@ -124,7 +125,8 @@ public abstract class ServerPlugin\n         {\n             throw new Error( \"UTF-8 should be supported\", e );\n         }\n-        return name;\n+\n+return name;\n     }\n \n     @Override\n@@ -178,4 +180,4 @@ public abstract class ServerPlugin\n         }\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
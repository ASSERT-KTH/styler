{
    "project_name": "blockchain-lab-ScaleOutDistributedLedger",
    "error_id": "6",
    "information": {
        "errors": [
            {
                "line": "53",
                "column": "17",
                "severity": "warning",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "        if (!this.blockNumber.isPresent()) {\n            for (Block block : sender.getChain().getBlocks()) {\n                if(block.getTransactions().contains(this)) this.blockNumber = OptionalInt.of(block.getNumber());\n            }\n        }\n        return this.blockNumber;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/6/Transaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/styler/6/Transaction.java\nindex 1a64e4753ea..2cec83c3254 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/6/Transaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/styler/6/Transaction.java\n@@ -50,7 +50,8 @@ public class Transaction {\n     public OptionalInt getBlockNumber() {\n         if (!this.blockNumber.isPresent()) {\n             for (Block block : sender.getChain().getBlocks()) {\n-                if(block.getTransactions().contains(this)) this.blockNumber = OptionalInt.of(block.getNumber());\n+            if\n+                (block.getTransactions().contains(this)) this.blockNumber = OptionalInt.of(block.getNumber());\n             }\n         }\n         return this.blockNumber;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/6/Transaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/intellij/6/Transaction.java\nindex 1a64e4753ea..a63959f0f1f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/6/Transaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/intellij/6/Transaction.java\n@@ -26,12 +26,13 @@ public class Transaction {\n \n     /**\n      * Constructor.\n-     * @param number - the number of this transaction.\n-     * @param sender - the sender of this transaction.\n-     * @param receiver - the receiver of this transaction.\n-     * @param amount - the amount to be transferred.\n+     *\n+     * @param number    - the number of this transaction.\n+     * @param sender    - the sender of this transaction.\n+     * @param receiver  - the receiver of this transaction.\n+     * @param amount    - the amount to be transferred.\n      * @param remainder - the remaining amount.\n-     * @param source - set of transactions that are used as sourc for this transaction.\n+     * @param source    - set of transactions that are used as sourc for this transaction.\n      */\n     public Transaction(int number, Node sender, Node receiver, long amount, long remainder, Set<Transaction> source) {\n         this.sender = sender;\n@@ -45,12 +46,15 @@ public class Transaction {\n \n     /**\n      * Returns the number of the block (if it is in a block).\n+     *\n      * @return - optional that is empty if the transaction is not in a block, and filled with the number of the block otherwise.\n      */\n     public OptionalInt getBlockNumber() {\n         if (!this.blockNumber.isPresent()) {\n             for (Block block : sender.getChain().getBlocks()) {\n-                if(block.getTransactions().contains(this)) this.blockNumber = OptionalInt.of(block.getNumber());\n+                if (block.getTransactions().contains(this)) {\n+                    this.blockNumber = OptionalInt.of(block.getNumber());\n+                }\n             }\n         }\n         return this.blockNumber;\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "53",
                    "column": "17",
                    "severity": "warning",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/6/Transaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/naturalize/6/Transaction.java\nindex 1a64e4753ea..3edb34e1954 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/6/Transaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/naturalize/6/Transaction.java\n@@ -3,14 +3,14 @@ package nl.tudelft.blockchain.scaleoutdistributedledger.model;\n import lombok.Getter;\n \n import java.util.OptionalInt;\n+\n import java.util.Set;\n \n /**\n  * Transaction class.\n  */\n public class Transaction {\n-\n-    @Getter\n+@Getter\n     private final int number;\n \n     @Getter\n@@ -55,4 +55,4 @@ public class Transaction {\n         }\n         return this.blockNumber;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "column": "62",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "1",
                    "column": "83",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "1",
                    "column": "83",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "1",
                    "column": "112",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "1",
                    "column": "112",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "1",
                    "column": "133",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "8",
                    "severity": "warning",
                    "message": "Line is longer than 160 characters (found 211).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "8",
                    "column": "74",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "8",
                    "column": "83",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "8",
                    "column": "119",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "8",
                    "column": "129",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "8",
                    "column": "157",
                    "severity": "warning",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "8",
                    "column": "178",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "8",
                    "column": "211",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "Line is longer than 160 characters (found 291).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "18",
                    "column": "38",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "18",
                    "column": "50",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "18",
                    "column": "64",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "18",
                    "column": "76",
                    "severity": "warning",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "18",
                    "column": "96",
                    "severity": "warning",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "18",
                    "column": "119",
                    "severity": "warning",
                    "message": "'{' at column 119 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "18",
                    "column": "132",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "18",
                    "column": "155",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "18",
                    "column": "165",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "18",
                    "column": "178",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "18",
                    "column": "186",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "18",
                    "column": "202",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "18",
                    "column": "213",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "18",
                    "column": "226",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "18",
                    "column": "234",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "18",
                    "column": "247",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "18",
                    "column": "255",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "18",
                    "column": "268",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "18",
                    "column": "290",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "18",
                    "column": "290",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "18",
                    "column": "290",
                    "severity": "warning",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "18",
                    "column": "291",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "23",
                    "severity": "warning",
                    "message": "Line is longer than 160 characters (found 235).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "23",
                    "column": "45",
                    "severity": "warning",
                    "message": "'{' at column 45 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "23",
                    "column": "47",
                    "severity": "warning",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "23",
                    "column": "49",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "23",
                    "column": "51",
                    "severity": "warning",
                    "message": "'!' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "23",
                    "column": "83",
                    "severity": "warning",
                    "message": "'{' at column 83 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "23",
                    "column": "85",
                    "severity": "warning",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "23",
                    "column": "88",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "23",
                    "column": "134",
                    "severity": "warning",
                    "message": "'{' at column 134 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "23",
                    "column": "136",
                    "severity": "warning",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "23",
                    "column": "138",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "23",
                    "column": "172",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "23",
                    "column": "197",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "23",
                    "column": "213",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "23",
                    "column": "234",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "23",
                    "column": "234",
                    "severity": "warning",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "23",
                    "column": "235",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line is longer than 160 characters (found 1,200).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "24",
                    "column": "1199",
                    "severity": "warning",
                    "message": "';' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "24",
                    "column": "1200",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/6/Transaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/codebuff/6/Transaction.java\nindex 1a64e4753ea..cadae5a74f4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/6/Transaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/codebuff/6/Transaction.java\n@@ -1,28 +1,11 @@\n-package nl.tudelft.blockchain.scaleoutdistributedledger.model;\n-\n-import lombok.Getter;\n-\n-import java.util.OptionalInt;\n-import java.util.Set;\n+package nl.tudelft.blockchain.scaleoutdistributedledger.model;import lombok.Getter;import java.util.OptionalInt;import java.util.Set;\n \n /**\n  * Transaction class.\n  */\n-public class Transaction {\n-\n-    @Getter\n-    private final int number;\n \n-    @Getter\n-    private final Node sender, receiver;\n-\n-    @Getter\n-    private final long amount, remainder;\n-\n-    @Getter\n-    private final Set<Transaction> source;\n-\n-    private OptionalInt blockNumber;\n+public class Transaction {\n+    @ Getter private final int number; @ Getter private final Node sender,receiver; @ Getter private final long amount,remainder; @ Getter private final Set< Transaction> source; private OptionalInt blockNumber;\n \n     /**\n      * Constructor.\n@@ -32,27 +15,11 @@ public class Transaction {\n      * @param amount - the amount to be transferred.\n      * @param remainder - the remaining amount.\n      * @param source - set of transactions that are used as sourc for this transaction.\n-     */\n-    public Transaction(int number, Node sender, Node receiver, long amount, long remainder, Set<Transaction> source) {\n-        this.sender = sender;\n-        this.receiver = receiver;\n-        this.amount = amount;\n-        this.remainder = remainder;\n-        this.source = source;\n-        this.number = number;\n-        blockNumber = OptionalInt.empty();\n-    }\n+     */ public Transaction(int number,Node sender,Node receiver,long amount,long remainder, Set< Transaction> source) { this.sender= sender; this.receiver= receiver; this.amount= amount; this.remainder= remainder; this.source= source; this.number= number; blockNumber= OptionalInt.empty() ;}\n \n     /**\n      * Returns the number of the block (if it is in a block).\n      * @return - optional that is empty if the transaction is not in a block, and filled with the number of the block otherwise.\n-     */\n-    public OptionalInt getBlockNumber() {\n-        if (!this.blockNumber.isPresent()) {\n-            for (Block block : sender.getChain().getBlocks()) {\n-                if(block.getTransactions().contains(this)) this.blockNumber = OptionalInt.of(block.getNumber());\n-            }\n-        }\n-        return this.blockNumber;\n-    }\n-}\n+     */ public OptionalInt getBlockNumber() { if( ! this.blockNumber.isPresent()) { for( Block block: sender.getChain().getBlocks()) { if( block.getTransactions().contains( this)) this.blockNumber= OptionalInt.of( block.getNumber()) ;}\n} return this.blockNumber;}\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/6/Transaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/styler_random/6/Transaction.java\nindex 1a64e4753ea..2cec83c3254 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/6/Transaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/styler_random/6/Transaction.java\n@@ -50,7 +50,8 @@ public class Transaction {\n     public OptionalInt getBlockNumber() {\n         if (!this.blockNumber.isPresent()) {\n             for (Block block : sender.getChain().getBlocks()) {\n-                if(block.getTransactions().contains(this)) this.blockNumber = OptionalInt.of(block.getNumber());\n+            if\n+                (block.getTransactions().contains(this)) this.blockNumber = OptionalInt.of(block.getNumber());\n             }\n         }\n         return this.blockNumber;\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/6/Transaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/styler_three_grams/6/Transaction.java\nindex 1a64e4753ea..ec0ee54b0b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/errored/1/6/Transaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/blockchain-lab-ScaleOutDistributedLedger/styler_three_grams/6/Transaction.java\n@@ -50,7 +50,9 @@ public class Transaction {\n     public OptionalInt getBlockNumber() {\n         if (!this.blockNumber.isPresent()) {\n             for (Block block : sender.getChain().getBlocks()) {\n-                if(block.getTransactions().contains(this)) this.blockNumber = OptionalInt.of(block.getNumber());\n+\n+            if\n+            (block.getTransactions().contains(this)) this.blockNumber = OptionalInt.of(block.getNumber());\n             }\n         }\n         return this.blockNumber;\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
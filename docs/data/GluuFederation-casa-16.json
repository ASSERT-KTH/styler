{
    "project_name": "GluuFederation-casa",
    "error_id": "16",
    "information": {
        "errors": [
            {
                "line": "85",
                "column": "13",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "        try {\n            List<Fido2RegistrationEntry> list = persistenceService.find(Fido2RegistrationEntry.class,\n            \tString.format(\"ou=%s,%s\", FIDO2_OU, persistenceService.getPersonDn(userId)), filter);\n\n            for (Fido2RegistrationEntry entry : list) {\n                SecurityKey sk = new SecurityKey();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/16/Fido2Service.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/styler/16/Fido2Service.java\nindex b3848cf98a5..04fcdd51772 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/16/Fido2Service.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/styler/16/Fido2Service.java\n@@ -82,7 +82,7 @@ public class Fido2Service extends BaseService {\n         List<SecurityKey> devices = new ArrayList<>();\n         try {\n             List<Fido2RegistrationEntry> list = persistenceService.find(Fido2RegistrationEntry.class,\n-            \tString.format(\"ou=%s,%s\", FIDO2_OU, persistenceService.getPersonDn(userId)), filter);\n+            String.format(\"ou=%s,%s\", FIDO2_OU, persistenceService.getPersonDn(userId)), filter);\n \n             for (Fido2RegistrationEntry entry : list) {\n                 SecurityKey sk = new SecurityKey();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/16/Fido2Service.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/intellij/16/Fido2Service.java\nindex b3848cf98a5..b3ed8b107d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/16/Fido2Service.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/intellij/16/Fido2Service.java\n@@ -76,13 +76,13 @@ public class Fido2Service extends BaseService {\n         String state = active ? Fido2RegistrationStatus.registered.getValue() : Fido2RegistrationStatus.pending.getValue();\n         logger.trace(\"Finding Fido 2 devices with state={} for user={}\", state, userId);\n         Filter filter = Filter.createANDFilter(\n-                Filter.createEqualityFilter(\"oxStatus\", state),\n-                Filter.createEqualityFilter(\"personInum\", userId));\n+            Filter.createEqualityFilter(\"oxStatus\", state),\n+            Filter.createEqualityFilter(\"personInum\", userId));\n \n         List<SecurityKey> devices = new ArrayList<>();\n         try {\n             List<Fido2RegistrationEntry> list = persistenceService.find(Fido2RegistrationEntry.class,\n-            \tString.format(\"ou=%s,%s\", FIDO2_OU, persistenceService.getPersonDn(userId)), filter);\n+                String.format(\"ou=%s,%s\", FIDO2_OU, persistenceService.getPersonDn(userId)), filter);\n \n             for (Fido2RegistrationEntry entry : list) {\n                 SecurityKey sk = new SecurityKey();\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/16/Fido2Service.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/naturalize/16/Fido2Service.java\nindex b3848cf98a5..3ec7adb8a78 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/16/Fido2Service.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/naturalize/16/Fido2Service.java\n@@ -76,15 +76,11 @@ public class Fido2Service extends BaseService {\n         String state = active ? Fido2RegistrationStatus.registered.getValue() : Fido2RegistrationStatus.pending.getValue();\n         logger.trace(\"Finding Fido 2 devices with state={} for user={}\", state, userId);\n         Filter filter = Filter.createANDFilter(\n-                Filter.createEqualityFilter(\"oxStatus\", state),\n-                Filter.createEqualityFilter(\"personInum\", userId));\n-\n-        List<SecurityKey> devices = new ArrayList<>();\n+                Filter.createEqualityFilter(\"oxStatus\", state), Filter.createEqualityFilter(\"personInum\", userId));\n+List<SecurityKey> devices = new ArrayList<>();\n         try {\n-            List<Fido2RegistrationEntry> list = persistenceService.find(Fido2RegistrationEntry.class,\n-            \tString.format(\"ou=%s,%s\", FIDO2_OU, persistenceService.getPersonDn(userId)), filter);\n-\n-            for (Fido2RegistrationEntry entry : list) {\n+            List<Fido2RegistrationEntry> list = persistenceService.find(Fido2RegistrationEntry.class, String.format(\"ou=%s,%s\", FIDO2_OU, persistenceService.getPersonDn(userId)), filter);\n+for (Fido2RegistrationEntry entry : list) {\n                 SecurityKey sk = new SecurityKey();\n                 sk.setId(entry.getId());\n                 sk.setCreationDate(entry.getCreationDate());\n@@ -169,4 +165,4 @@ public class Fido2Service extends BaseService {\n \n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/16/Fido2Service.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/codebuff/16/Fido2Service.java\nindex b3848cf98a5..294574462d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/16/Fido2Service.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/codebuff/16/Fido2Service.java\n@@ -10,7 +10,6 @@ import org.gluu.fido2.model.entry.Fido2RegistrationStatus;\n import org.gluu.search.filter.Filter;\n import org.jboss.resteasy.client.jaxrs.ResteasyClient;\n import org.slf4j.Logger;\n-\n import javax.annotation.PostConstruct;\n import javax.enterprise.context.ApplicationScoped;\n import javax.inject.Inject;\n@@ -24,17 +23,15 @@ import java.util.List;\n import java.util.Map;\n import java.util.stream.Collectors;\n \n+\n @Named\n @ApplicationScoped\n public class Fido2Service extends BaseService {\n \n     @Inject\n     private Logger logger;\n-\n     private ResteasyClient client;\n-\n     private AttestationService attestationService;\n-\n     private static final String FIDO2_OU = \"fido2_register\";\n \n     @PostConstruct\n@@ -43,19 +40,17 @@ public class Fido2Service extends BaseService {\n     }\n \n     public void reloadConfiguration() {\n-\n         props = persistenceService.getCustScriptConfigProperties(SecurityKey2Extension.ACR);\n         String tmp = getScriptPropertyValue(\"fido2_server_uri\");\n-\n         if (tmp == null) {\n             logger.error(\"No fido2_server_uri param found in fido2 script\");\n             logger.info(\"Fido 2 integration will not work properly\");\n         } else {\n+\n             try {\n                 tmp += \"/.well-known/fido2-configuration\";\n                 logger.info(\"Retrieving contents of URL {}\", tmp);\n                 String attestationURL = mapper.readTree(new URL(tmp)).get(\"attestation\").get(\"base_path\").asText();\n-\n                 logger.info(\"Base path is {}\", attestationURL);\n                 client = RSUtils.getClient();\n                 attestationService = client.target(attestationURL).proxy(AttestationService.class);\n@@ -75,15 +70,10 @@ public class Fido2Service extends BaseService {\n         //In CB the ou=fido2_register branch does not exist (not a hierarchical DB)\n         String state = active ? Fido2RegistrationStatus.registered.getValue() : Fido2RegistrationStatus.pending.getValue();\n         logger.trace(\"Finding Fido 2 devices with state={} for user={}\", state, userId);\n-        Filter filter = Filter.createANDFilter(\n-                Filter.createEqualityFilter(\"oxStatus\", state),\n-                Filter.createEqualityFilter(\"personInum\", userId));\n-\n+        Filter filter = Filter.createANDFilter(Filter.createEqualityFilter(\"oxStatus\", state), Filter.createEqualityFilter(\"personInum\", userId));\n         List<SecurityKey> devices = new ArrayList<>();\n         try {\n-            List<Fido2RegistrationEntry> list = persistenceService.find(Fido2RegistrationEntry.class,\n-            \tString.format(\"ou=%s,%s\", FIDO2_OU, persistenceService.getPersonDn(userId)), filter);\n-\n+            List<Fido2RegistrationEntry> list = persistenceService.find(Fido2RegistrationEntry.class, String.format(\"ou=%s,%s\", FIDO2_OU, persistenceService.getPersonDn(userId)), filter);\n             for (Fido2RegistrationEntry entry : list) {\n                 SecurityKey sk = new SecurityKey();\n                 sk.setId(entry.getId());\n@@ -108,7 +98,6 @@ public class Fido2Service extends BaseService {\n             success = persistenceService.modify(deviceRegistration);\n         }\n         return success;\n-\n     }\n \n     public boolean removeDevice(FidoDevice device) {\n@@ -119,16 +108,13 @@ public class Fido2Service extends BaseService {\n             success = persistenceService.delete(rentry);\n         }\n         return success;\n-\n     }\n \n     private Fido2RegistrationEntry getDeviceRegistrationFor(FidoDevice device) {\n-\n         String id = device.getId();\n         Fido2RegistrationEntry deviceRegistration = new Fido2RegistrationEntry();\n         deviceRegistration.setBaseDn(persistenceService.getPeopleDn());\n         deviceRegistration.setId(id);\n-\n         List<Fido2RegistrationEntry> list = persistenceService.find(deviceRegistration);\n         if (list.size() == 1) {\n             return list.get(0);\n@@ -140,13 +126,11 @@ public class Fido2Service extends BaseService {\n     }\n \n     public String doRegister(String userName, String displayName) throws Exception {\n-\n         Map<String, String> map = new HashMap<>();\n         map.put(\"username\", userName);\n         map.put(\"displayName\", displayName);\n         map.put(\"attestation\", \"direct\");\n         return attestationService.register(mapper.writeValueAsString(map)).readEntity(String.class);\n-\n     }\n \n     public boolean verifyRegistration(String tokenResponse) throws Exception {\n@@ -154,11 +138,11 @@ public class Fido2Service extends BaseService {\n     }\n \n     public SecurityKey getLatestSecurityKey(String userId, long time) {\n-\n         SecurityKey sk = null;\n         try {\n             List<SecurityKey> list = getDevices(userId, true);\n             sk = FidoService.getRecentlyCreatedDevice(list, time);\n+\n             if (sk != null && sk.getNickName() != null) {\n                 sk = null;    //should have no name\n             }\n@@ -166,7 +150,6 @@ public class Fido2Service extends BaseService {\n             logger.error(e.getMessage(), e);\n         }\n         return sk;\n-\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/16/Fido2Service.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/styler_random/16/Fido2Service.java\nindex b3848cf98a5..04fcdd51772 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/16/Fido2Service.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/styler_random/16/Fido2Service.java\n@@ -82,7 +82,7 @@ public class Fido2Service extends BaseService {\n         List<SecurityKey> devices = new ArrayList<>();\n         try {\n             List<Fido2RegistrationEntry> list = persistenceService.find(Fido2RegistrationEntry.class,\n-            \tString.format(\"ou=%s,%s\", FIDO2_OU, persistenceService.getPersonDn(userId)), filter);\n+            String.format(\"ou=%s,%s\", FIDO2_OU, persistenceService.getPersonDn(userId)), filter);\n \n             for (Fido2RegistrationEntry entry : list) {\n                 SecurityKey sk = new SecurityKey();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/16/Fido2Service.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/styler_three_grams/16/Fido2Service.java\nindex b3848cf98a5..f8c0e4e530d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/errored/1/16/Fido2Service.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/GluuFederation-casa/styler_three_grams/16/Fido2Service.java\n@@ -82,7 +82,7 @@ public class Fido2Service extends BaseService {\n         List<SecurityKey> devices = new ArrayList<>();\n         try {\n             List<Fido2RegistrationEntry> list = persistenceService.find(Fido2RegistrationEntry.class,\n-            \tString.format(\"ou=%s,%s\", FIDO2_OU, persistenceService.getPersonDn(userId)), filter);\n+                String.format(\"ou=%s,%s\", FIDO2_OU, persistenceService.getPersonDn(userId)), filter);\n \n             for (Fido2RegistrationEntry entry : list) {\n                 SecurityKey sk = new SecurityKey();\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
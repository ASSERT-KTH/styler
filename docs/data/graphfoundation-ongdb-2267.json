{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2267",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "78",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2267/ProtocolServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2267/ProtocolServer.java\nindex 0b63626c2fe..72a9c8358ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2267/ProtocolServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2267/ProtocolServer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster;\n \n import java.net.URI;\n@@ -37,107 +38,106 @@ import org.neo4j.logging.LogProvider;\n  * own server address (me), and provides a proxy factory for creating clients to invoke the CSM.\n  */\n public class ProtocolServer\n-        extends LifecycleAdapter\n-        implements BindingNotifier\n+    extends LifecycleAdapter\n+    implements BindingNotifier\n {\n-    private final InstanceId me;\n-    private URI boundAt;\n-    protected StateMachineProxyFactory proxyFactory;\n-    protected final StateMachines stateMachines;\n-    private final Listeners<BindingListener> bindingListeners = new Listeners<>();\n-    private Log msgLog;\n-\n-    public ProtocolServer( InstanceId me, StateMachines stateMachines, LogProvider logProvider )\n-    {\n-        this.me = me;\n-        this.stateMachines = stateMachines;\n-        this.msgLog = logProvider.getLog( getClass() );\n-\n-        StateMachineConversations conversations = new StateMachineConversations( me );\n-        proxyFactory = new StateMachineProxyFactory( stateMachines, conversations, me, logProvider );\n-        stateMachines.addMessageProcessor( proxyFactory );\n-    }\n-\n-    @Override\n-    public void shutdown()\n+  private final InstanceId me;\n+  private URI boundAt;\n+  protected StateMachineProxyFactory proxyFactory;\n+  protected final StateMachines stateMachines;\n+  private final Listeners<BindingListener> bindingListeners = new Listeners<>();\n+  private Log msgLog;\n+\n+  public ProtocolServer(InstanceId me, StateMachines stateMachines, LogProvider logProvider)\n+  {\n+    this.me = me;\n+    this.stateMachines = stateMachines;\n+    this.msgLog = logProvider.getLog(getClass());\n+\n+    StateMachineConversations conversations = new StateMachineConversations(me);\n+    proxyFactory = new StateMachineProxyFactory(stateMachines, conversations, me, logProvider);\n+    stateMachines.addMessageProcessor(proxyFactory);\n+  }\n+\n+  @Override\n+  public void shutdown()\n+  {\n+    msgLog = null;\n+  }\n+\n+  @Override\n+  public void addBindingListener(BindingListener listener)\n+  {\n+    bindingListeners.add(listener);\n+    try\n     {\n-        msgLog = null;\n-    }\n-\n-    @Override\n-    public void addBindingListener( BindingListener listener )\n-    {\n-        bindingListeners.add( listener );\n-        try\n-        {\n-            if ( boundAt != null )\n-            {\n-                listener.listeningAt( boundAt );\n-            }\n-        }\n-        catch ( Throwable t )\n-        {\n-            msgLog.error( \"Failed while adding BindingListener\", t );\n-        }\n-    }\n-\n-    @Override\n-    public void removeBindingListener( BindingListener listener )\n-    {\n-        bindingListeners.remove( listener );\n-    }\n-\n-    public void listeningAt( URI me )\n-    {\n-        this.boundAt = me;\n-\n-        bindingListeners.notify( listener -> listener.listeningAt( me ) );\n-    }\n-\n-    /**\n-     * Ok to have this accessible like this?\n-     *\n-     * @return server id\n-     */\n-    public InstanceId getServerId()\n+      if (boundAt != null)\n+      {\n+        listener.listeningAt(boundAt);\n+      }\n+    } catch (Throwable t)\n     {\n-        return me;\n+      msgLog.error(\"Failed while adding BindingListener\", t);\n     }\n-\n-    public StateMachines getStateMachines()\n-    {\n-        return stateMachines;\n-    }\n-\n-    public void addStateTransitionListener( StateTransitionListener stateTransitionListener )\n-    {\n-        stateMachines.addStateTransitionListener( stateTransitionListener );\n-    }\n-\n-    public <T> T newClient( Class<T> clientProxyInterface )\n-    {\n-        return proxyFactory.newProxy( clientProxyInterface );\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        StringBuilder builder = new StringBuilder();\n-        builder.append( \"Instance URI: \" ).append( boundAt.toString() ).append( \"\\n\" );\n-        for ( StateMachine stateMachine : stateMachines.getStateMachines() )\n-        {\n-            builder.append( \"  \" ).append( stateMachine ).append( \"\\n\" );\n-        }\n-        return builder.toString();\n-    }\n-\n-    public Timeouts getTimeouts()\n-    {\n-        return stateMachines.getTimeouts();\n-    }\n-\n-    public URI boundAt()\n+  }\n+\n+  @Override\n+  public void removeBindingListener(BindingListener listener)\n+  {\n+    bindingListeners.remove(listener);\n+  }\n+\n+  public void listeningAt(URI me)\n+  {\n+    this.boundAt = me;\n+\n+    bindingListeners.notify(listener -> listener.listeningAt(me));\n+  }\n+\n+  /**\n+   * Ok to have this accessible like this?\n+   *\n+   * @return server id\n+   */\n+  public InstanceId getServerId()\n+  {\n+    return me;\n+  }\n+\n+  public StateMachines getStateMachines()\n+  {\n+    return stateMachines;\n+  }\n+\n+  public void addStateTransitionListener(StateTransitionListener stateTransitionListener)\n+  {\n+    stateMachines.addStateTransitionListener(stateTransitionListener);\n+  }\n+\n+  public <T> T newClient(Class<T> clientProxyInterface)\n+  {\n+    return proxyFactory.newProxy(clientProxyInterface);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    StringBuilder builder = new StringBuilder();\n+    builder.append(\"Instance URI: \").append(boundAt.toString()).append(\"\\n\");\n+    for (StateMachine stateMachine : stateMachines.getStateMachines())\n     {\n-        return boundAt;\n+      builder.append(\"  \").append(stateMachine).append(\"\\n\");\n     }\n+    return builder.toString();\n+  }\n+\n+  public Timeouts getTimeouts()\n+  {\n+    return stateMachines.getTimeouts();\n+  }\n+\n+  public URI boundAt()\n+  {\n+    return boundAt;\n+  }\n }\n",
            "diff_size": 131
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2267/ProtocolServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2267/ProtocolServer.java\nindex 0b63626c2fe..a90efb5b61d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2267/ProtocolServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2267/ProtocolServer.java\n@@ -36,9 +36,7 @@ import org.neo4j.logging.LogProvider;\n  * A ProtocolServer ties together the underlying StateMachines with an understanding of ones\n  * own server address (me), and provides a proxy factory for creating clients to invoke the CSM.\n  */\n-public class ProtocolServer\n-        extends LifecycleAdapter\n-        implements BindingNotifier\n+public class ProtocolServer extends LifecycleAdapter implements BindingNotifier\n {\n     private final InstanceId me;\n     private URI boundAt;\n@@ -52,8 +50,7 @@ public class ProtocolServer\n         this.me = me;\n         this.stateMachines = stateMachines;\n         this.msgLog = logProvider.getLog( getClass() );\n-\n-        StateMachineConversations conversations = new StateMachineConversations( me );\n+StateMachineConversations conversations = new StateMachineConversations( me );\n         proxyFactory = new StateMachineProxyFactory( stateMachines, conversations, me, logProvider );\n         stateMachines.addMessageProcessor( proxyFactory );\n     }\n@@ -128,7 +125,8 @@ public class ProtocolServer\n         {\n             builder.append( \"  \" ).append( stateMachine ).append( \"\\n\" );\n         }\n-        return builder.toString();\n+\n+return builder.toString();\n     }\n \n     public Timeouts getTimeouts()\n@@ -140,4 +138,4 @@ public class ProtocolServer\n     {\n         return boundAt;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
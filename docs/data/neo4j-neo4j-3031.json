{
    "project_name": "neo4j-neo4j",
    "error_id": "3031",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "111",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "231",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "149",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3031/GeometryType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3031/GeometryType.java\nindex 3af37f970c1..ba17a28ddae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3031/GeometryType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3031/GeometryType.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import java.nio.ByteBuffer;\n@@ -39,79 +40,78 @@ import org.neo4j.values.storable.Values;\n  */\n public enum GeometryType\n {\n-    GEOMETRY_INVALID( 0, \"Invalid\" )\n-            {\n-                @Override\n-                public Value decode( CoordinateReferenceSystem crs, int dimension, long[] valueBlocks, int offset )\n-                {\n-                    throw new UnsupportedOperationException( \"Cannot decode invalid geometry\" );\n-                }\n-\n-                @Override\n-                public int calculateNumberOfBlocksUsedForGeometry( long firstBlock )\n-                {\n-                    return PropertyType.BLOCKS_USED_FOR_BAD_TYPE_OR_ENCODING;\n-                }\n-\n-                @Override\n-                public ArrayValue decodeArray( GeometryHeader header, byte[] data )\n-                {\n-                    throw new UnsupportedOperationException( \"Cannot decode invalid geometry array\" );\n-                }\n-            },\n-    GEOMETRY_POINT( 1, \"Point\" )\n-            {\n-                @Override\n-                public Value decode( CoordinateReferenceSystem crs, int dimension, long[] valueBlocks, int offset )\n-                {\n-                    double[] coordinate = new double[dimension];\n-                    for ( int i = 0; i < dimension; i++ )\n-                    {\n-                        coordinate[i] = Double.longBitsToDouble( valueBlocks[i + 1 + offset] );\n-                    }\n-                    return Values.pointValue( crs, coordinate );\n-                }\n-\n-                @Override\n-                public int calculateNumberOfBlocksUsedForGeometry( long firstBlock )\n-                {\n-                    int dimension = getDimension( firstBlock );\n-                    if ( dimension > GeometryType.getMaxSupportedDimensions() )\n-                    {\n-                        return PropertyType.BLOCKS_USED_FOR_BAD_TYPE_OR_ENCODING;\n-                    }\n-                    return 1 + dimension;\n-                }\n-\n-                @Override\n-                public ArrayValue decodeArray( GeometryHeader header, byte[] data )\n-                {\n-                    byte[] dataHeader = PropertyType.ARRAY.readDynamicRecordHeader( data );\n-                    byte[] dataBody = new byte[data.length - dataHeader.length];\n-                    System.arraycopy( data, dataHeader.length, dataBody, 0, dataBody.length );\n-                    Value dataValue = DynamicArrayStore.getRightArray( Pair.of( dataHeader, dataBody ) );\n-                    if ( dataValue instanceof FloatingPointArray )\n-                    {\n-                        FloatingPointArray numbers = (FloatingPointArray) dataValue;\n-                        PointValue[] points = new PointValue[numbers.length() / header.dimension];\n-                        for ( int i = 0; i < points.length; i++ )\n-                        {\n-                            double[] coords = new double[header.dimension];\n-                            for ( int d = 0; d < header.dimension; d++ )\n-                            {\n-                                coords[d] = numbers.doubleValue( i * header.dimension + d );\n-                            }\n-                            points[i] = Values.pointValue( header.crs, coords );\n-                        }\n-                        return Values.pointArray( points );\n-                    }\n-                    else\n-                    {\n-                        throw new InvalidRecordException(\n-                                \"Point array with unexpected type. Actual:\" + dataValue.getClass().getSimpleName() + \". Expected: FloatingPointArray.\" );\n-                    }\n-                }\n-            };\n+    GEOMETRY_INVALID(0, \"Invalid\")\n+      {\n+          @Override\n+          public Value decode(CoordinateReferenceSystem crs, int dimension, long[] valueBlocks, int offset)\n+          {\n+              throw new UnsupportedOperationException(\"Cannot decode invalid geometry\");\n+          }\n+\n+          @Override\n+          public int calculateNumberOfBlocksUsedForGeometry(long firstBlock)\n+          {\n+              return PropertyType.BLOCKS_USED_FOR_BAD_TYPE_OR_ENCODING;\n+          }\n+\n+          @Override\n+          public ArrayValue decodeArray(GeometryHeader header, byte[] data)\n+          {\n+              throw new UnsupportedOperationException(\"Cannot decode invalid geometry array\");\n+          }\n+      },\n+    GEOMETRY_POINT(1, \"Point\")\n+      {\n+          @Override\n+          public Value decode(CoordinateReferenceSystem crs, int dimension, long[] valueBlocks, int offset)\n+          {\n+              double[] coordinate = new double[dimension];\n+              for (int i = 0; i < dimension; i++)\n+              {\n+                  coordinate[i] = Double.longBitsToDouble(valueBlocks[i + 1 + offset]);\n+              }\n+              return Values.pointValue(crs, coordinate);\n+          }\n+\n+          @Override\n+          public int calculateNumberOfBlocksUsedForGeometry(long firstBlock)\n+          {\n+              int dimension = getDimension(firstBlock);\n+              if (dimension > GeometryType.getMaxSupportedDimensions())\n+              {\n+                  return PropertyType.BLOCKS_USED_FOR_BAD_TYPE_OR_ENCODING;\n+              }\n+              return 1 + dimension;\n+          }\n+\n+          @Override\n+          public ArrayValue decodeArray(GeometryHeader header, byte[] data)\n+          {\n+              byte[] dataHeader = PropertyType.ARRAY.readDynamicRecordHeader(data);\n+              byte[] dataBody = new byte[data.length - dataHeader.length];\n+              System.arraycopy(data, dataHeader.length, dataBody, 0, dataBody.length);\n+              Value dataValue = DynamicArrayStore.getRightArray(Pair.of(dataHeader, dataBody));\n+              if (dataValue instanceof FloatingPointArray)\n+              {\n+                  FloatingPointArray numbers = (FloatingPointArray) dataValue;\n+                  PointValue[] points = new PointValue[numbers.length() / header.dimension];\n+                  for (int i = 0; i < points.length; i++)\n+                  {\n+                      double[] coords = new double[header.dimension];\n+                      for (int d = 0; d < header.dimension; d++)\n+                      {\n+                          coords[d] = numbers.doubleValue(i * header.dimension + d);\n+                      }\n+                      points[i] = Values.pointValue(header.crs, coords);\n+                  }\n+                  return Values.pointArray(points);\n+              } else\n+              {\n+                  throw new InvalidRecordException(\n+                    \"Point array with unexpected type. Actual:\" + dataValue.getClass().getSimpleName() + \". Expected: FloatingPointArray.\");\n+              }\n+          }\n+      };\n \n     /**\n      * Handler for header information for Geometry objects and arrays of Geometry objects\n@@ -122,19 +122,19 @@ public enum GeometryType\n         private final int dimension;\n         private final CoordinateReferenceSystem crs;\n \n-        private GeometryHeader( int geometryType, int dimension, CoordinateReferenceSystem crs )\n+        private GeometryHeader(int geometryType, int dimension, CoordinateReferenceSystem crs)\n         {\n             this.geometryType = geometryType;\n             this.dimension = dimension;\n             this.crs = crs;\n         }\n \n-        private GeometryHeader( int geometryType, int dimension, int crsTableId, int crsCode )\n+        private GeometryHeader(int geometryType, int dimension, int crsTableId, int crsCode)\n         {\n-            this( geometryType, dimension, CoordinateReferenceSystem.get( crsTableId, crsCode ) );\n+            this(geometryType, dimension, CoordinateReferenceSystem.get(crsTableId, crsCode));\n         }\n \n-        private void writeArrayHeaderTo( byte[] bytes )\n+        private void writeArrayHeaderTo(byte[] bytes)\n         {\n             bytes[0] = (byte) PropertyType.GEOMETRY.intValue();\n             bytes[1] = (byte) geometryType;\n@@ -144,63 +144,63 @@ public enum GeometryType\n             bytes[5] = (byte) (crs.getCode() & 0xFFL);\n         }\n \n-        static GeometryHeader fromArrayHeaderBytes( byte[] header )\n+        static GeometryHeader fromArrayHeaderBytes(byte[] header)\n         {\n-            int geometryType = Byte.toUnsignedInt( header[1] );\n-            int dimension = Byte.toUnsignedInt( header[2] );\n-            int crsTableId = Byte.toUnsignedInt( header[3] );\n-            int crsCode = (Byte.toUnsignedInt( header[4] ) << 8) + Byte.toUnsignedInt( header[5] );\n-            return new GeometryHeader( geometryType, dimension, crsTableId, crsCode );\n+            int geometryType = Byte.toUnsignedInt(header[1]);\n+            int dimension = Byte.toUnsignedInt(header[2]);\n+            int crsTableId = Byte.toUnsignedInt(header[3]);\n+            int crsCode = (Byte.toUnsignedInt(header[4]) << 8) + Byte.toUnsignedInt(header[5]);\n+            return new GeometryHeader(geometryType, dimension, crsTableId, crsCode);\n         }\n \n-        public static GeometryHeader fromArrayHeaderByteBuffer( ByteBuffer buffer )\n+        public static GeometryHeader fromArrayHeaderByteBuffer(ByteBuffer buffer)\n         {\n-            int geometryType = Byte.toUnsignedInt( buffer.get() );\n-            int dimension = Byte.toUnsignedInt( buffer.get() );\n-            int crsTableId = Byte.toUnsignedInt( buffer.get() );\n-            int crsCode = (Byte.toUnsignedInt( buffer.get() ) << 8) + Byte.toUnsignedInt( buffer.get() );\n-            return new GeometryHeader( geometryType, dimension, crsTableId, crsCode );\n+            int geometryType = Byte.toUnsignedInt(buffer.get());\n+            int dimension = Byte.toUnsignedInt(buffer.get());\n+            int crsTableId = Byte.toUnsignedInt(buffer.get());\n+            int crsCode = (Byte.toUnsignedInt(buffer.get()) << 8) + Byte.toUnsignedInt(buffer.get());\n+            return new GeometryHeader(geometryType, dimension, crsTableId, crsCode);\n         }\n     }\n \n     private static final GeometryType[] TYPES = GeometryType.values();\n-    private static final Map<String, GeometryType> all = new HashMap<>( TYPES.length );\n+    private static final Map<String, GeometryType> all = new HashMap<>(TYPES.length);\n \n     static\n     {\n-        for ( GeometryType geometryType : TYPES )\n+        for (GeometryType geometryType : TYPES)\n         {\n-            all.put( geometryType.name, geometryType );\n+            all.put(geometryType.name, geometryType);\n         }\n     }\n \n-    private static final long GEOMETRY_TYPE_MASK =  0x00000000F0000000L;\n-    private static final long DIMENSION_MASK =      0x0000000F00000000L;\n-    private static final long CRS_TABLE_MASK =      0x000000F000000000L;\n-    private static final long CRS_CODE_MASK =       0x00FFFF0000000000L;\n-    private static final long PRECISION_MASK =      0x0100000000000000L;\n+    private static final long GEOMETRY_TYPE_MASK = 0x00000000F0000000L;\n+    private static final long DIMENSION_MASK = 0x0000000F00000000L;\n+    private static final long CRS_TABLE_MASK = 0x000000F000000000L;\n+    private static final long CRS_CODE_MASK = 0x00FFFF0000000000L;\n+    private static final long PRECISION_MASK = 0x0100000000000000L;\n \n-    private static int getGeometryType( long firstBlock )\n+    private static int getGeometryType(long firstBlock)\n     {\n         return (int) ((firstBlock & GEOMETRY_TYPE_MASK) >> 28);\n     }\n \n-    private static int getDimension( long firstBlock )\n+    private static int getDimension(long firstBlock)\n     {\n         return (int) ((firstBlock & DIMENSION_MASK) >> 32);\n     }\n \n-    private static int getCRSTable( long firstBlock )\n+    private static int getCRSTable(long firstBlock)\n     {\n         return (int) ((firstBlock & CRS_TABLE_MASK) >> 36);\n     }\n \n-    private static int getCRSCode( long firstBlock )\n+    private static int getCRSCode(long firstBlock)\n     {\n         return (int) ((firstBlock & CRS_CODE_MASK) >> 40);\n     }\n \n-    private static boolean isFloatPrecision( long firstBlock )\n+    private static boolean isFloatPrecision(long firstBlock)\n     {\n         return ((firstBlock & PRECISION_MASK) >> 56) == 1;\n     }\n@@ -210,58 +210,57 @@ public enum GeometryType\n         return PropertyType.getPayloadSizeLongs() - 1;\n     }\n \n-    public static int calculateNumberOfBlocksUsed( long firstBlock )\n+    public static int calculateNumberOfBlocksUsed(long firstBlock)\n     {\n-        GeometryType geometryType = find( getGeometryType( firstBlock ) );\n-        return geometryType.calculateNumberOfBlocksUsedForGeometry( firstBlock );\n+        GeometryType geometryType = find(getGeometryType(firstBlock));\n+        return geometryType.calculateNumberOfBlocksUsedForGeometry(firstBlock);\n     }\n \n-    private static GeometryType find( int gtype )\n+    private static GeometryType find(int gtype)\n     {\n-        if ( gtype < TYPES.length && gtype >= 0 )\n+        if (gtype < TYPES.length && gtype >= 0)\n         {\n             return TYPES[gtype];\n-        }\n-        else\n+        } else\n         {\n             // Kernel code requires no exceptions in deeper PropertyChain processing of corrupt/invalid data\n             return GEOMETRY_INVALID;\n         }\n     }\n \n-    public static Value decode( PropertyBlock block )\n+    public static Value decode(PropertyBlock block)\n     {\n-        return decode( block.getValueBlocks(), 0 );\n+        return decode(block.getValueBlocks(), 0);\n     }\n \n-    public static Value decode( long[] valueBlocks, int offset )\n+    public static Value decode(long[] valueBlocks, int offset)\n     {\n         long firstBlock = valueBlocks[offset];\n-        int gtype = getGeometryType( firstBlock );\n-        int dimension = getDimension( firstBlock );\n+        int gtype = getGeometryType(firstBlock);\n+        int dimension = getDimension(firstBlock);\n \n-        if ( isFloatPrecision( firstBlock ) )\n+        if (isFloatPrecision(firstBlock))\n         {\n-            throw new UnsupportedOperationException( \"Float precision is unsupported in Geometry properties\" );\n+            throw new UnsupportedOperationException(\"Float precision is unsupported in Geometry properties\");\n         }\n-        if ( dimension > GeometryType.getMaxSupportedDimensions() )\n+        if (dimension > GeometryType.getMaxSupportedDimensions())\n         {\n             throw new UnsupportedOperationException(\n-                    \"Points with more than \" + GeometryType.getMaxSupportedDimensions() +\n-                    \" dimensions are not supported\" );\n+              \"Points with more than \" + GeometryType.getMaxSupportedDimensions() +\n+                \" dimensions are not supported\");\n         }\n-        CoordinateReferenceSystem crs = CoordinateReferenceSystem.get( getCRSTable( firstBlock ), getCRSCode( firstBlock ) );\n-        return find( gtype ).decode( crs, dimension, valueBlocks, offset );\n+        CoordinateReferenceSystem crs = CoordinateReferenceSystem.get(getCRSTable(firstBlock), getCRSCode(firstBlock));\n+        return find(gtype).decode(crs, dimension, valueBlocks, offset);\n     }\n \n-    public static long[] encodePoint( int keyId, CoordinateReferenceSystem crs, double[] coordinate )\n+    public static long[] encodePoint(int keyId, CoordinateReferenceSystem crs, double[] coordinate)\n     {\n-        if ( coordinate.length > GeometryType.getMaxSupportedDimensions() )\n+        if (coordinate.length > GeometryType.getMaxSupportedDimensions())\n         {\n             // One property block can only contains at most 4x8 byte parts, one for header and 3 for coordinates\n             throw new UnsupportedOperationException(\n-                    \"Points with more than \" + GeometryType.getMaxSupportedDimensions() +\n-                    \" dimensions are not supported\" );\n+              \"Points with more than \" + GeometryType.getMaxSupportedDimensions() +\n+                \" dimensions are not supported\");\n         }\n \n         int idBits = StandardFormatSettings.PROPERTY_TOKEN_MAXIMUM_ID_BITS;\n@@ -274,60 +273,60 @@ public enum GeometryType\n \n         long[] data = new long[1 + coordinate.length];\n         data[0] = keyAndType | gtypeBits | dimensionBits | crsTableIdBits | crsCodeBits;\n-        for ( int i = 0; i < coordinate.length; i++ )\n+        for (int i = 0; i < coordinate.length; i++)\n         {\n-            data[1 + i] = Double.doubleToLongBits( coordinate[i] );\n+            data[1 + i] = Double.doubleToLongBits(coordinate[i]);\n         }\n         return data;\n     }\n \n-    public static byte[] encodePointArray( PointValue[] points )\n+    public static byte[] encodePointArray(PointValue[] points)\n     {\n         int dimension = points[0].coordinate().length;\n         CoordinateReferenceSystem crs = points[0].getCoordinateReferenceSystem();\n-        for ( int i = 1; i < points.length; i++ )\n+        for (int i = 1; i < points.length; i++)\n         {\n-            if ( dimension != points[i].coordinate().length )\n+            if (dimension != points[i].coordinate().length)\n             {\n                 throw new IllegalArgumentException(\n-                        \"Attempting to store array of points with inconsistent dimension. Point \" + i + \" has a different dimension.\" );\n+                  \"Attempting to store array of points with inconsistent dimension. Point \" + i + \" has a different dimension.\");\n             }\n-            if ( !crs.equals( points[i].getCoordinateReferenceSystem() ) )\n+            if (!crs.equals(points[i].getCoordinateReferenceSystem()))\n             {\n-                throw new IllegalArgumentException( \"Attempting to store array of points with inconsistent CRS. Point \" + i + \" has a different CRS.\" );\n+                throw new IllegalArgumentException(\"Attempting to store array of points with inconsistent CRS. Point \" + i + \" has a different CRS.\");\n             }\n         }\n \n         double[] data = new double[points.length * dimension];\n-        for ( int i = 0; i < data.length; i++ )\n+        for (int i = 0; i < data.length; i++)\n         {\n             data[i] = points[i / dimension].coordinate()[i % dimension];\n         }\n-        GeometryHeader geometryHeader = new GeometryHeader( GeometryType.GEOMETRY_POINT.gtype, dimension, crs );\n-        byte[] bytes = DynamicArrayStore.encodeFromNumbers( data, DynamicArrayStore.GEOMETRY_HEADER_SIZE );\n-        geometryHeader.writeArrayHeaderTo( bytes );\n+        GeometryHeader geometryHeader = new GeometryHeader(GeometryType.GEOMETRY_POINT.gtype, dimension, crs);\n+        byte[] bytes = DynamicArrayStore.encodeFromNumbers(data, DynamicArrayStore.GEOMETRY_HEADER_SIZE);\n+        geometryHeader.writeArrayHeaderTo(bytes);\n         return bytes;\n     }\n \n-    public static ArrayValue decodeGeometryArray( GeometryHeader header, byte[] data )\n+    public static ArrayValue decodeGeometryArray(GeometryHeader header, byte[] data)\n     {\n-        return find( header.geometryType ).decodeArray( header, data );\n+        return find(header.geometryType).decodeArray(header, data);\n     }\n \n     private final int gtype;\n     private final String name;\n \n-    GeometryType( int gtype, String name )\n+    GeometryType(int gtype, String name)\n     {\n         this.gtype = gtype;\n         this.name = name;\n     }\n \n-    public abstract Value decode( CoordinateReferenceSystem crs, int dimension, long[] valueBlocks, int offset );\n+    public abstract Value decode(CoordinateReferenceSystem crs, int dimension, long[] valueBlocks, int offset);\n \n-    public abstract int calculateNumberOfBlocksUsedForGeometry( long firstBlock );\n+    public abstract int calculateNumberOfBlocksUsedForGeometry(long firstBlock);\n \n-    public abstract ArrayValue decodeArray( GeometryHeader header, byte[] data );\n+    public abstract ArrayValue decodeArray(GeometryHeader header, byte[] data);\n \n     public int getGtype()\n     {\n",
            "diff_size": 144
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3031/GeometryType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3031/GeometryType.java\nindex 3af37f970c1..76dbbec9929 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3031/GeometryType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3031/GeometryType.java\n@@ -338,4 +338,4 @@ public enum GeometryType\n     {\n         return name;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
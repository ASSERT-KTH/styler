{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4237",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4237/RelationshipConstraintDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4237/RelationshipConstraintDefinition.java\nindex 078234b8a2b..b1997e13bc3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4237/RelationshipConstraintDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4237/RelationshipConstraintDefinition.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.coreapi.schema;\n \n import org.neo4j.graphdb.Label;\n@@ -26,47 +27,47 @@ import static java.util.Objects.requireNonNull;\n \n abstract class RelationshipConstraintDefinition extends SinglePropertyConstraintDefinition\n {\n-    protected final RelationshipType relationshipType;\n+  protected final RelationshipType relationshipType;\n \n-    protected RelationshipConstraintDefinition( InternalSchemaActions actions, RelationshipType relationshipType,\n-            String propertyKey )\n-    {\n-        super( actions, propertyKey );\n-        this.relationshipType = requireNonNull( relationshipType );\n-    }\n+  protected RelationshipConstraintDefinition(InternalSchemaActions actions, RelationshipType relationshipType,\n+                                             String propertyKey)\n+  {\n+    super(actions, propertyKey);\n+    this.relationshipType = requireNonNull(relationshipType);\n+  }\n \n-    @Override\n-    public Label getLabel()\n-    {\n-        assertInUnterminatedTransaction();\n-        throw new IllegalStateException( \"Constraint is associated with relationships\" );\n-    }\n+  @Override\n+  public Label getLabel()\n+  {\n+    assertInUnterminatedTransaction();\n+    throw new IllegalStateException(\"Constraint is associated with relationships\");\n+  }\n \n-    @Override\n-    public RelationshipType getRelationshipType()\n-    {\n-        assertInUnterminatedTransaction();\n-        return relationshipType;\n-    }\n+  @Override\n+  public RelationshipType getRelationshipType()\n+  {\n+    assertInUnterminatedTransaction();\n+    return relationshipType;\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        RelationshipConstraintDefinition that = (RelationshipConstraintDefinition) o;\n-        return relationshipType.name().equals( that.relationshipType.name() ) && propertyKey.equals( that.propertyKey );\n+      return true;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        return 31 * relationshipType.name().hashCode() + propertyKey.hashCode();\n+      return false;\n     }\n+    RelationshipConstraintDefinition that = (RelationshipConstraintDefinition) o;\n+    return relationshipType.name().equals(that.relationshipType.name()) && propertyKey.equals(that.propertyKey);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return 31 * relationshipType.name().hashCode() + propertyKey.hashCode();\n+  }\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4237/RelationshipConstraintDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4237/RelationshipConstraintDefinition.java\nindex 078234b8a2b..fbbc11a7711 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4237/RelationshipConstraintDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4237/RelationshipConstraintDefinition.java\n@@ -56,11 +56,13 @@ abstract class RelationshipConstraintDefinition extends SinglePropertyConstraint\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        RelationshipConstraintDefinition that = (RelationshipConstraintDefinition) o;\n+\n+RelationshipConstraintDefinition that = (RelationshipConstraintDefinition) o;\n         return relationshipType.name().equals( that.relationshipType.name() ) && propertyKey.equals( that.propertyKey );\n     }\n \n@@ -69,4 +71,4 @@ abstract class RelationshipConstraintDefinition extends SinglePropertyConstraint\n     {\n         return 31 * relationshipType.name().hashCode() + propertyKey.hashCode();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
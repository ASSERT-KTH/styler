{
    "project_name": "findbugsproject-findbugs",
    "error_id": "101",
    "information": {
        "errors": [
            {
                "line": "20",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    //If false will simply log onto logFile.\n    private final static boolean DEBUG = true;\n\tprivate static File logFile;\n\n    /**\n     * Set where Log will log any exceptions.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "25",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/101/Log.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/101/Log.java\nindex 4c6fcacc99e..b36b726eb99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/101/Log.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/101/Log.java\n@@ -17,7 +17,7 @@ public class Log\n     //If true will pop a window with the stackTrace in it.\n     //If false will simply log onto logFile.\n     private final static boolean DEBUG = true;\n-\tprivate static File logFile;\n+private static File logFile;\n \n     /**\n      * Set where Log will log any exceptions.\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/101/Log.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/101/Log.java\nindex 4c6fcacc99e..f5aaad4ac15 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/101/Log.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/101/Log.java\n@@ -9,50 +9,47 @@ import javax.swing.JOptionPane;\n /**\n  * Used to log any exceptions that are thrown. Can be used to log or debug.\n  * If debugging can use to pop a JOptionPane with the stackTrace.\n- * @author Kristin Stephens\n  *\n+ * @author Kristin Stephens\n  */\n-public class Log\n-{\n+public class Log {\n     //If true will pop a window with the stackTrace in it.\n     //If false will simply log onto logFile.\n     private final static boolean DEBUG = true;\n-\tprivate static File logFile;\n+    private static File logFile;\n \n     /**\n      * Set where Log will log any exceptions.\n+     *\n      * @param logFile\n-\t */\n-    static void setPath(File logFile)\n-    {\n+     */\n+    static void setPath(File logFile) {\n         Log.logFile = logFile;\n-\t}\n+    }\n \n     /**\n      * Takes the exception and dependi on DEBUG either posts onto a dialog box\n      * or will record it for later use.\n-\t * \n+     *\n      * @param e\n      */\n-    static void recordBug(Exception e)\n-\t{\n+    static void recordBug(Exception e) {\n         StringBuffer msg = new StringBuffer();\n         msg.append(e.getClass().getName() + \": \" + e.getMessage() + \"\\n\");\n-        for (StackTraceElement i : e.getStackTrace())\n-\t\t\tmsg.append(i + \"\\n\");\n+        for (StackTraceElement i : e.getStackTrace()) {\n+            msg.append(i + \"\\n\");\n+        }\n \n-        if (DEBUG)\n+        if (DEBUG) {\n             JOptionPane.showMessageDialog(null, msg);\n-        else\n-\t\t{\n-            try\n-            {\n+        } else {\n+            try {\n                 logFile.createNewFile();\n-\t\t\t\tPrintWriter pw = new PrintWriter(new FileOutputStream(logFile));\n+                PrintWriter pw = new PrintWriter(new FileOutputStream(logFile));\n                 pw.println(msg);\n                 pw.close();\n+            } catch (IOException ohWell) {\n             }\n-\t\t\tcatch (IOException ohWell) {}\n         }\n     }\n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "25",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/101/Log.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/101/Log.java\nindex 4c6fcacc99e..c0d2695b262 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/101/Log.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/101/Log.java\n@@ -12,47 +12,41 @@ import javax.swing.JOptionPane;\n  * @author Kristin Stephens\n  *\n  */\n-public class Log\n-{\n+public class Log {\n     //If true will pop a window with the stackTrace in it.\n     //If false will simply log onto logFile.\n     private final static boolean DEBUG = true;\n-\tprivate static File logFile;\n \n-    /**\n+private static File logFile;\n+\n+/**\n      * Set where Log will log any exceptions.\n      * @param logFile\n \t */\n-    static void setPath(File logFile)\n-    {\n+    static void setPath(File logFile) {\n         Log.logFile = logFile;\n-\t}\n+    }\n \n-    /**\n+/**\n      * Takes the exception and dependi on DEBUG either posts onto a dialog box\n      * or will record it for later use.\n \t * \n      * @param e\n      */\n-    static void recordBug(Exception e)\n-\t{\n-        StringBuffer msg = new StringBuffer();\n+    static void recordBug(Exception e) {\n+    StringBuffer msg = new StringBuffer();\n         msg.append(e.getClass().getName() + \": \" + e.getMessage() + \"\\n\");\n         for (StackTraceElement i : e.getStackTrace())\n-\t\t\tmsg.append(i + \"\\n\");\n-\n-        if (DEBUG)\n+    msg.append(i + \"\\n\");\n+if (DEBUG)\n             JOptionPane.showMessageDialog(null, msg);\n-        else\n-\t\t{\n-            try\n-            {\n+        else {\n+    try {\n                 logFile.createNewFile();\n-\t\t\t\tPrintWriter pw = new PrintWriter(new FileOutputStream(logFile));\n-                pw.println(msg);\n+PrintWriter pw = new PrintWriter(new FileOutputStream(logFile));\n+pw.println(msg);\n                 pw.close();\n-            }\n-\t\t\tcatch (IOException ohWell) {}\n-        }\n+            } catch (IOException ohWell) {}\n+    }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/101/Log.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/101/Log.java\nindex 4c6fcacc99e..550d863e3f5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/101/Log.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/101/Log.java\n@@ -12,47 +12,46 @@ import javax.swing.JOptionPane;\n  * @author Kristin Stephens\n  *\n  */\n-public class Log\n-{\n+\n+public class Log {\n     //If true will pop a window with the stackTrace in it.\n     //If false will simply log onto logFile.\n     private final static boolean DEBUG = true;\n-\tprivate static File logFile;\n+\n+    private static File logFile;\n \n     /**\n      * Set where Log will log any exceptions.\n      * @param logFile\n-\t */\n-    static void setPath(File logFile)\n-    {\n+     */\n+\n+    static void setPath(File logFile) {\n         Log.logFile = logFile;\n-\t}\n+    }\n \n     /**\n      * Takes the exception and dependi on DEBUG either posts onto a dialog box\n      * or will record it for later use.\n-\t * \n+     * \n      * @param e\n      */\n-    static void recordBug(Exception e)\n-\t{\n+\n+    static void recordBug(Exception e) {\n         StringBuffer msg = new StringBuffer();\n         msg.append(e.getClass().getName() + \": \" + e.getMessage() + \"\\n\");\n         for (StackTraceElement i : e.getStackTrace())\n-\t\t\tmsg.append(i + \"\\n\");\n-\n+            msg.append(i + \"\\n\");\n         if (DEBUG)\n             JOptionPane.showMessageDialog(null, msg);\n-        else\n-\t\t{\n-            try\n-            {\n+        else {\n+            try {\n                 logFile.createNewFile();\n-\t\t\t\tPrintWriter pw = new PrintWriter(new FileOutputStream(logFile));\n+                PrintWriter pw = new PrintWriter(new FileOutputStream(logFile));\n                 pw.println(msg);\n                 pw.close();\n+            } catch (IOException ohWell) {\n+\n             }\n-\t\t\tcatch (IOException ohWell) {}\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "25",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/101/Log.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/101/Log.java\nindex 4c6fcacc99e..b36b726eb99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/101/Log.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/101/Log.java\n@@ -17,7 +17,7 @@ public class Log\n     //If true will pop a window with the stackTrace in it.\n     //If false will simply log onto logFile.\n     private final static boolean DEBUG = true;\n-\tprivate static File logFile;\n+private static File logFile;\n \n     /**\n      * Set where Log will log any exceptions.\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
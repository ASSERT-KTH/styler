{
    "project_name": "graphfoundation-ongdb",
    "error_id": "880",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "109",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "210",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "216",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "221",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/880/GraphDatabaseFacadeFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/880/GraphDatabaseFacadeFactory.java\nindex 4da9638d69e..d53111d5027 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/880/GraphDatabaseFacadeFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/880/GraphDatabaseFacadeFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.factory;\n \n import java.io.File;\n@@ -63,214 +64,211 @@ import static org.neo4j.kernel.impl.query.QueryEngineProvider.noEngine;\n  */\n public class GraphDatabaseFacadeFactory\n {\n-    public interface Dependencies\n-    {\n-        /**\n-         * Allowed to be null. Null means that no external {@link org.neo4j.kernel.monitoring.Monitors} was created,\n-         * let the\n-         * database create its own monitors instance.\n-         */\n-        Monitors monitors();\n-\n-        LogProvider userLogProvider();\n-\n-        Iterable<Class<?>> settingsClasses();\n-\n-        Iterable<KernelExtensionFactory<?>> kernelExtensions();\n-\n-        Map<String,URLAccessRule> urlAccessRules();\n-\n-        Iterable<QueryEngineProvider> executionEngines();\n-    }\n-\n-    public static class Configuration implements LoadableConfig\n+  public interface Dependencies\n+  {\n+    /**\n+     * Allowed to be null. Null means that no external {@link org.neo4j.kernel.monitoring.Monitors} was created,\n+     * let the\n+     * database create its own monitors instance.\n+     */\n+    Monitors monitors();\n+\n+    LogProvider userLogProvider();\n+\n+    Iterable<Class<?>> settingsClasses();\n+\n+    Iterable<KernelExtensionFactory<?>> kernelExtensions();\n+\n+    Map<String, URLAccessRule> urlAccessRules();\n+\n+    Iterable<QueryEngineProvider> executionEngines();\n+  }\n+\n+  public static class Configuration implements LoadableConfig\n+  {\n+    @Internal\n+    public static final Setting<Boolean> ephemeral =\n+        setting(\"unsupported.dbms.ephemeral\", BOOLEAN, Settings.FALSE);\n+\n+    @Internal\n+    public static final Setting<String> lock_manager =\n+        setting(\"unsupported.dbms.lock_manager\", STRING, \"\");\n+\n+    @Internal\n+    public static final Setting<String> tracer =\n+        setting(\"unsupported.dbms.tracer\", STRING, Settings.NO_DEFAULT);\n+\n+    @Internal\n+    public static final Setting<String> editionName =\n+        setting(\"unsupported.dbms.edition\", STRING, Edition.unknown.toString());\n+  }\n+\n+  protected final DatabaseInfo databaseInfo;\n+  private final Function<PlatformModule, EditionModule> editionFactory;\n+\n+  public GraphDatabaseFacadeFactory(DatabaseInfo databaseInfo,\n+                                    Function<PlatformModule, EditionModule> editionFactory)\n+  {\n+    this.databaseInfo = databaseInfo;\n+    this.editionFactory = editionFactory;\n+  }\n+\n+  /**\n+   * Instantiate a graph database given configuration and dependencies.\n+   *\n+   * @param storeDir     the directory where the Neo4j data store is located\n+   * @param config       configuration\n+   * @param dependencies the dependencies required to construct the {@link GraphDatabaseFacade}\n+   * @return the newly constructed {@link GraphDatabaseFacade}\n+   */\n+  public GraphDatabaseFacade newFacade(File storeDir, Config config, final Dependencies dependencies)\n+  {\n+    return initFacade(storeDir, config, dependencies, new GraphDatabaseFacade());\n+  }\n+\n+  /**\n+   * Instantiate a graph database given configuration, dependencies, and a custom implementation of {@link org\n+   * .neo4j.kernel.impl.factory.GraphDatabaseFacade}.\n+   *\n+   * @param storeDir            the directory where the Neo4j data store is located\n+   * @param params              configuration parameters\n+   * @param dependencies        the dependencies required to construct the {@link GraphDatabaseFacade}\n+   * @param graphDatabaseFacade the already created facade which needs initialisation\n+   * @return the initialised {@link GraphDatabaseFacade}\n+   */\n+  public GraphDatabaseFacade initFacade(File storeDir, Map<String, String> params, final Dependencies dependencies,\n+                                        final GraphDatabaseFacade graphDatabaseFacade)\n+  {\n+    return initFacade(storeDir, Config.defaults(params), dependencies, graphDatabaseFacade);\n+  }\n+\n+  /**\n+   * Instantiate a graph database given configuration, dependencies, and a custom implementation of {@link org\n+   * .neo4j.kernel.impl.factory.GraphDatabaseFacade}.\n+   *\n+   * @param storeDir            the directory where the Neo4j data store is located\n+   * @param config              configuration\n+   * @param dependencies        the dependencies required to construct the {@link GraphDatabaseFacade}\n+   * @param graphDatabaseFacade the already created facade which needs initialisation\n+   * @return the initialised {@link GraphDatabaseFacade}\n+   */\n+  public GraphDatabaseFacade initFacade(File storeDir, Config config, final Dependencies dependencies,\n+                                        final GraphDatabaseFacade graphDatabaseFacade)\n+  {\n+    PlatformModule platform = createPlatform(storeDir, config, dependencies, graphDatabaseFacade);\n+    EditionModule edition = editionFactory.apply(platform);\n+\n+    AtomicReference<QueryExecutionEngine> queryEngine = new AtomicReference<>(noEngine());\n+\n+    final DataSourceModule dataSource = createDataSource(platform, edition, queryEngine::get);\n+    Logger msgLog = platform.logging.getInternalLog(getClass()).infoLogger();\n+    CoreAPIAvailabilityGuard coreAPIAvailabilityGuard = edition.coreAPIAvailabilityGuard;\n+\n+    ClassicCoreSPI spi = new ClassicCoreSPI(platform, dataSource, msgLog, coreAPIAvailabilityGuard);\n+    graphDatabaseFacade.init(\n+        edition,\n+        spi,\n+        dataSource.guard,\n+        dataSource.threadToTransactionBridge,\n+        platform.config,\n+        edition.relationshipTypeTokenHolder\n+    );\n+\n+    // Start it\n+    platform.dataSourceManager.addListener(new DataSourceManager.Listener()\n     {\n-        @Internal\n-        public static final Setting<Boolean> ephemeral =\n-                setting( \"unsupported.dbms.ephemeral\", BOOLEAN, Settings.FALSE );\n-\n-        @Internal\n-        public static final Setting<String> lock_manager =\n-                setting( \"unsupported.dbms.lock_manager\", STRING, \"\" );\n+      private QueryExecutionEngine engine;\n \n-        @Internal\n-        public static final Setting<String> tracer =\n-                setting( \"unsupported.dbms.tracer\", STRING, Settings.NO_DEFAULT );\n+      @Override\n+      public void registered(NeoStoreDataSource dataSource)\n+      {\n+        if (engine == null)\n+        {\n+          engine = QueryEngineProvider.initialize(\n+              platform.dependencies, platform.graphDatabaseFacade, dependencies.executionEngines()\n+          );\n+        }\n \n-        @Internal\n-        public static final Setting<String> editionName =\n-                setting( \"unsupported.dbms.edition\", STRING, Edition.unknown.toString() );\n-    }\n+        queryEngine.set(engine);\n+      }\n \n-    protected final DatabaseInfo databaseInfo;\n-    private final Function<PlatformModule,EditionModule> editionFactory;\n+      @Override\n+      public void unregistered(NeoStoreDataSource dataSource)\n+      {\n+        queryEngine.set(noEngine());\n+      }\n+    });\n \n-    public GraphDatabaseFacadeFactory( DatabaseInfo databaseInfo,\n-            Function<PlatformModule,EditionModule> editionFactory )\n+    RuntimeException error = null;\n+    try\n     {\n-        this.databaseInfo = databaseInfo;\n-        this.editionFactory = editionFactory;\n-    }\n+      // Done after create to avoid a redundant\n+      // \"database is now unavailable\"\n+      enableAvailabilityLogging(platform.availabilityGuard, msgLog);\n \n-    /**\n-     * Instantiate a graph database given configuration and dependencies.\n-     *\n-     * @param storeDir the directory where the Neo4j data store is located\n-     * @param config configuration\n-     * @param dependencies the dependencies required to construct the {@link GraphDatabaseFacade}\n-     * @return the newly constructed {@link GraphDatabaseFacade}\n-     */\n-    public GraphDatabaseFacade newFacade( File storeDir, Config config, final Dependencies dependencies )\n+      platform.life.start();\n+    } catch (final Throwable throwable)\n     {\n-        return initFacade( storeDir, config, dependencies, new GraphDatabaseFacade() );\n-    }\n-\n-    /**\n-     * Instantiate a graph database given configuration, dependencies, and a custom implementation of {@link org\n-     * .neo4j.kernel.impl.factory.GraphDatabaseFacade}.\n-     *\n-     * @param storeDir the directory where the Neo4j data store is located\n-     * @param params configuration parameters\n-     * @param dependencies the dependencies required to construct the {@link GraphDatabaseFacade}\n-     * @param graphDatabaseFacade the already created facade which needs initialisation\n-     * @return the initialised {@link GraphDatabaseFacade}\n-     */\n-    public GraphDatabaseFacade initFacade( File storeDir, Map<String,String> params, final Dependencies dependencies,\n-            final GraphDatabaseFacade graphDatabaseFacade )\n+      error = new RuntimeException(\"Error starting \" + getClass().getName() + \", \" +\n+          platform.storeDir, throwable);\n+    } finally\n     {\n-        return initFacade( storeDir, Config.defaults( params ), dependencies, graphDatabaseFacade );\n-    }\n-\n-    /**\n-     * Instantiate a graph database given configuration, dependencies, and a custom implementation of {@link org\n-     * .neo4j.kernel.impl.factory.GraphDatabaseFacade}.\n-     *\n-     * @param storeDir the directory where the Neo4j data store is located\n-     * @param config configuration\n-     * @param dependencies the dependencies required to construct the {@link GraphDatabaseFacade}\n-     * @param graphDatabaseFacade the already created facade which needs initialisation\n-     * @return the initialised {@link GraphDatabaseFacade}\n-     */\n-    public GraphDatabaseFacade initFacade( File storeDir, Config config, final Dependencies dependencies,\n-            final GraphDatabaseFacade graphDatabaseFacade )\n-    {\n-        PlatformModule platform = createPlatform( storeDir, config, dependencies, graphDatabaseFacade );\n-        EditionModule edition = editionFactory.apply( platform );\n-\n-        AtomicReference<QueryExecutionEngine> queryEngine = new AtomicReference<>( noEngine() );\n-\n-        final DataSourceModule dataSource = createDataSource( platform, edition, queryEngine::get );\n-        Logger msgLog = platform.logging.getInternalLog( getClass() ).infoLogger();\n-        CoreAPIAvailabilityGuard coreAPIAvailabilityGuard = edition.coreAPIAvailabilityGuard;\n-\n-        ClassicCoreSPI spi = new ClassicCoreSPI( platform, dataSource, msgLog, coreAPIAvailabilityGuard );\n-        graphDatabaseFacade.init(\n-                edition,\n-                spi,\n-                dataSource.guard,\n-                dataSource.threadToTransactionBridge,\n-                platform.config,\n-                edition.relationshipTypeTokenHolder\n-        );\n-\n-        // Start it\n-        platform.dataSourceManager.addListener( new DataSourceManager.Listener()\n-        {\n-            private QueryExecutionEngine engine;\n-\n-            @Override\n-            public void registered( NeoStoreDataSource dataSource )\n-            {\n-                if ( engine == null )\n-                {\n-                    engine = QueryEngineProvider.initialize(\n-                            platform.dependencies, platform.graphDatabaseFacade, dependencies.executionEngines()\n-                    );\n-                }\n-\n-                queryEngine.set( engine );\n-            }\n-\n-            @Override\n-            public void unregistered( NeoStoreDataSource dataSource )\n-            {\n-                queryEngine.set( noEngine() );\n-            }\n-        } );\n-\n-        RuntimeException error = null;\n+      if (error != null)\n+      {\n         try\n         {\n-            // Done after create to avoid a redundant\n-            // \"database is now unavailable\"\n-            enableAvailabilityLogging( platform.availabilityGuard, msgLog );\n-\n-            platform.life.start();\n-        }\n-        catch ( final Throwable throwable )\n-        {\n-            error = new RuntimeException( \"Error starting \" + getClass().getName() + \", \" +\n-                    platform.storeDir, throwable );\n-        }\n-        finally\n-        {\n-            if ( error != null )\n-            {\n-                try\n-                {\n-                    graphDatabaseFacade.shutdown();\n-                }\n-                catch ( Throwable shutdownError )\n-                {\n-                    error.addSuppressed( shutdownError );\n-                }\n-            }\n-        }\n-\n-        if ( error != null )\n+          graphDatabaseFacade.shutdown();\n+        } catch (Throwable shutdownError)\n         {\n-            msgLog.log( \"Failed to start database\", error );\n-            throw error;\n+          error.addSuppressed(shutdownError);\n         }\n-\n-        return graphDatabaseFacade;\n+      }\n     }\n \n-    /**\n-     * Create the platform module. Override to replace with custom module.\n-     */\n-    protected PlatformModule createPlatform( File storeDir, Config config, final Dependencies dependencies,\n-            final GraphDatabaseFacade graphDatabaseFacade )\n+    if (error != null)\n     {\n-        return new PlatformModule( storeDir, config, databaseInfo, dependencies, graphDatabaseFacade );\n+      msgLog.log(\"Failed to start database\", error);\n+      throw error;\n     }\n \n-    /**\n-     * Create the datasource module. Override to replace with custom module.\n-     */\n-    protected DataSourceModule createDataSource(\n-            PlatformModule platformModule,\n-            EditionModule editionModule,\n-            Supplier<QueryExecutionEngine> queryEngine )\n+    return graphDatabaseFacade;\n+  }\n+\n+  /**\n+   * Create the platform module. Override to replace with custom module.\n+   */\n+  protected PlatformModule createPlatform(File storeDir, Config config, final Dependencies dependencies,\n+                                          final GraphDatabaseFacade graphDatabaseFacade)\n+  {\n+    return new PlatformModule(storeDir, config, databaseInfo, dependencies, graphDatabaseFacade);\n+  }\n+\n+  /**\n+   * Create the datasource module. Override to replace with custom module.\n+   */\n+  protected DataSourceModule createDataSource(\n+      PlatformModule platformModule,\n+      EditionModule editionModule,\n+      Supplier<QueryExecutionEngine> queryEngine)\n+  {\n+    return new DataSourceModule(platformModule, editionModule, queryEngine);\n+  }\n+\n+  private void enableAvailabilityLogging(AvailabilityGuard availabilityGuard, final Logger msgLog)\n+  {\n+    availabilityGuard.addListener(new AvailabilityGuard.AvailabilityListener()\n     {\n-        return new DataSourceModule( platformModule, editionModule, queryEngine );\n-    }\n-\n-    private void enableAvailabilityLogging( AvailabilityGuard availabilityGuard, final Logger msgLog )\n-    {\n-        availabilityGuard.addListener( new AvailabilityGuard.AvailabilityListener()\n-        {\n-            @Override\n-            public void available()\n-            {\n-                msgLog.log( \"Database is now ready\" );\n-            }\n-\n-            @Override\n-            public void unavailable()\n-            {\n-                msgLog.log( \"Database is now unavailable\" );\n-            }\n-        } );\n-    }\n+      @Override\n+      public void available()\n+      {\n+        msgLog.log(\"Database is now ready\");\n+      }\n+\n+      @Override\n+      public void unavailable()\n+      {\n+        msgLog.log(\"Database is now unavailable\");\n+      }\n+    });\n+  }\n }\n",
            "diff_size": 313
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/880/GraphDatabaseFacadeFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/880/GraphDatabaseFacadeFactory.java\nindex 4da9638d69e..70d4a1f37d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/880/GraphDatabaseFacadeFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/880/GraphDatabaseFacadeFactory.java\n@@ -86,27 +86,22 @@ public class GraphDatabaseFacadeFactory\n     public static class Configuration implements LoadableConfig\n     {\n         @Internal\n-        public static final Setting<Boolean> ephemeral =\n-                setting( \"unsupported.dbms.ephemeral\", BOOLEAN, Settings.FALSE );\n+        public static final Setting<Boolean> ephemeral = setting( \"unsupported.dbms.ephemeral\", BOOLEAN, Settings.FALSE );\n \n-        @Internal\n-        public static final Setting<String> lock_manager =\n-                setting( \"unsupported.dbms.lock_manager\", STRING, \"\" );\n+@Internal\n+        public static final Setting<String> lock_manager = setting( \"unsupported.dbms.lock_manager\", STRING, \"\" );\n \n-        @Internal\n-        public static final Setting<String> tracer =\n-                setting( \"unsupported.dbms.tracer\", STRING, Settings.NO_DEFAULT );\n+@Internal\n+        public static final Setting<String> tracer = setting( \"unsupported.dbms.tracer\", STRING, Settings.NO_DEFAULT );\n \n-        @Internal\n-        public static final Setting<String> editionName =\n-                setting( \"unsupported.dbms.edition\", STRING, Edition.unknown.toString() );\n+@Internal\n+        public static final Setting<String> editionName = setting( \"unsupported.dbms.edition\", STRING, Edition.unknown.toString() );\n     }\n \n     protected final DatabaseInfo databaseInfo;\n     private final Function<PlatformModule,EditionModule> editionFactory;\n \n-    public GraphDatabaseFacadeFactory( DatabaseInfo databaseInfo,\n-            Function<PlatformModule,EditionModule> editionFactory )\n+    public GraphDatabaseFacadeFactory( DatabaseInfo databaseInfo, Function<PlatformModule,EditionModule> editionFactory )\n     {\n         this.databaseInfo = databaseInfo;\n         this.editionFactory = editionFactory;\n@@ -135,8 +130,7 @@ public class GraphDatabaseFacadeFactory\n      * @param graphDatabaseFacade the already created facade which needs initialisation\n      * @return the initialised {@link GraphDatabaseFacade}\n      */\n-    public GraphDatabaseFacade initFacade( File storeDir, Map<String,String> params, final Dependencies dependencies,\n-            final GraphDatabaseFacade graphDatabaseFacade )\n+    public GraphDatabaseFacade initFacade( File storeDir, Map<String,String> params, final Dependencies dependencies, final GraphDatabaseFacade graphDatabaseFacade )\n     {\n         return initFacade( storeDir, Config.defaults( params ), dependencies, graphDatabaseFacade );\n     }\n@@ -151,8 +145,7 @@ public class GraphDatabaseFacadeFactory\n      * @param graphDatabaseFacade the already created facade which needs initialisation\n      * @return the initialised {@link GraphDatabaseFacade}\n      */\n-    public GraphDatabaseFacade initFacade( File storeDir, Config config, final Dependencies dependencies,\n-            final GraphDatabaseFacade graphDatabaseFacade )\n+    public GraphDatabaseFacade initFacade( File storeDir, Config config, final Dependencies dependencies, final GraphDatabaseFacade graphDatabaseFacade )\n     {\n         PlatformModule platform = createPlatform( storeDir, config, dependencies, graphDatabaseFacade );\n         EditionModule edition = editionFactory.apply( platform );\n@@ -164,14 +157,11 @@ public class GraphDatabaseFacadeFactory\n         CoreAPIAvailabilityGuard coreAPIAvailabilityGuard = edition.coreAPIAvailabilityGuard;\n \n         ClassicCoreSPI spi = new ClassicCoreSPI( platform, dataSource, msgLog, coreAPIAvailabilityGuard );\n-        graphDatabaseFacade.init(\n-                edition,\n-                spi,\n+        graphDatabaseFacade.init( edition, spi,\n                 dataSource.guard,\n                 dataSource.threadToTransactionBridge,\n                 platform.config,\n-                edition.relationshipTypeTokenHolder\n-        );\n+                edition.relationshipTypeTokenHolder );\n \n         // Start it\n         platform.dataSourceManager.addListener( new DataSourceManager.Listener()\n@@ -183,9 +173,7 @@ public class GraphDatabaseFacadeFactory\n             {\n                 if ( engine == null )\n                 {\n-                    engine = QueryEngineProvider.initialize(\n-                            platform.dependencies, platform.graphDatabaseFacade, dependencies.executionEngines()\n-                    );\n+                    engine = QueryEngineProvider.initialize( platform.dependencies, platform.graphDatabaseFacade, dependencies.executionEngines() );\n                 }\n \n                 queryEngine.set( engine );\n@@ -197,20 +185,17 @@ public class GraphDatabaseFacadeFactory\n                 queryEngine.set( noEngine() );\n             }\n         } );\n-\n-        RuntimeException error = null;\n+RuntimeException error = null;\n         try\n         {\n             // Done after create to avoid a redundant\n             // \"database is now unavailable\"\n             enableAvailabilityLogging( platform.availabilityGuard, msgLog );\n-\n-            platform.life.start();\n+platform.life.start();\n         }\n         catch ( final Throwable throwable )\n         {\n-            error = new RuntimeException( \"Error starting \" + getClass().getName() + \", \" +\n-                    platform.storeDir, throwable );\n+            error = new RuntimeException( \"Error starting \" + getClass().getName() + \", \" + platform.storeDir, throwable );\n         }\n         finally\n         {\n@@ -239,8 +224,7 @@ public class GraphDatabaseFacadeFactory\n     /**\n      * Create the platform module. Override to replace with custom module.\n      */\n-    protected PlatformModule createPlatform( File storeDir, Config config, final Dependencies dependencies,\n-            final GraphDatabaseFacade graphDatabaseFacade )\n+    protected PlatformModule createPlatform( File storeDir, Config config, final Dependencies dependencies, final GraphDatabaseFacade graphDatabaseFacade )\n     {\n         return new PlatformModule( storeDir, config, databaseInfo, dependencies, graphDatabaseFacade );\n     }\n@@ -248,10 +232,8 @@ public class GraphDatabaseFacadeFactory\n     /**\n      * Create the datasource module. Override to replace with custom module.\n      */\n-    protected DataSourceModule createDataSource(\n-            PlatformModule platformModule,\n-            EditionModule editionModule,\n-            Supplier<QueryExecutionEngine> queryEngine )\n+    protected DataSourceModule createDataSource( PlatformModule platformModule,\n+            EditionModule editionModule, Supplier<QueryExecutionEngine> queryEngine )\n     {\n         return new DataSourceModule( platformModule, editionModule, queryEngine );\n     }\n@@ -273,4 +255,4 @@ public class GraphDatabaseFacadeFactory\n             }\n         } );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
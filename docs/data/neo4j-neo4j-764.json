{
    "project_name": "neo4j-neo4j",
    "error_id": "764",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/764/RecordProcessorStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/764/RecordProcessorStep.java\nindex cc01b3b838f..7956f969968 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/764/RecordProcessorStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/764/RecordProcessorStep.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport;\n \n import java.util.ArrayList;\n@@ -42,48 +43,48 @@ public class RecordProcessorStep<T extends AbstractBaseRecord> extends Processor\n {\n     private final Supplier<RecordProcessor<T>> processorFactory;\n     private final boolean endOfLine;\n-    private final List<RecordProcessor<T>> allProcessors = Collections.synchronizedList( new ArrayList<>() );\n+    private final List<RecordProcessor<T>> allProcessors = Collections.synchronizedList(new ArrayList<>());\n     private final ThreadLocal<RecordProcessor<T>> threadProcessors = new ThreadLocal<>()\n     {\n         @Override\n         protected RecordProcessor<T> initialValue()\n         {\n             RecordProcessor<T> processor = processorFactory.get();\n-            allProcessors.add( processor );\n+            allProcessors.add(processor);\n             return processor;\n         }\n     };\n \n-    public RecordProcessorStep( StageControl control, String name, Configuration config,\n-            Supplier<RecordProcessor<T>> processorFactory, boolean endOfLine, int maxProcessors, PageCacheTracer pageCacheTracer,\n-            StatsProvider... additionalStatsProviders )\n+    public RecordProcessorStep(StageControl control, String name, Configuration config,\n+                               Supplier<RecordProcessor<T>> processorFactory, boolean endOfLine, int maxProcessors, PageCacheTracer pageCacheTracer,\n+                               StatsProvider... additionalStatsProviders)\n     {\n-        super( control, name, config, maxProcessors, pageCacheTracer, additionalStatsProviders );\n+        super(control, name, config, maxProcessors, pageCacheTracer, additionalStatsProviders);\n         this.processorFactory = processorFactory;\n         this.endOfLine = endOfLine;\n     }\n \n     @Override\n-    protected void process( T[] batch, BatchSender sender, PageCursorTracer cursorTracer )\n+    protected void process(T[] batch, BatchSender sender, PageCursorTracer cursorTracer)\n     {\n         RecordProcessor<T> processor = threadProcessors.get();\n-        for ( T item : batch )\n+        for (T item : batch)\n         {\n-            if ( item != null && item.inUse() )\n+            if (item != null && item.inUse())\n             {\n-                if ( !processor.process( item, cursorTracer ) )\n+                if (!processor.process(item, cursorTracer))\n                 {\n                     // No change for this record\n-                    item.setInUse( false );\n+                    item.setInUse(false);\n                 }\n             }\n         }\n \n         // This step can be used in different stage settings, possible as the last step,\n         // where nothing should be emitted\n-        if ( !endOfLine )\n+        if (!endOfLine)\n         {\n-            sender.send( batch );\n+            sender.send(batch);\n         }\n     }\n \n@@ -92,12 +93,12 @@ public class RecordProcessorStep<T extends AbstractBaseRecord> extends Processor\n     {\n         super.done();\n         Iterator<RecordProcessor<T>> processors = allProcessors.iterator();\n-        if ( processors.hasNext() )\n+        if (processors.hasNext())\n         {\n             RecordProcessor<T> first = processors.next();\n-            while ( processors.hasNext() )\n+            while (processors.hasNext())\n             {\n-                first.mergeResultsFrom( processors.next() );\n+                first.mergeResultsFrom(processors.next());\n             }\n             first.done();\n         }\n@@ -107,6 +108,6 @@ public class RecordProcessorStep<T extends AbstractBaseRecord> extends Processor\n     public void close() throws Exception\n     {\n         super.close();\n-        IOUtils.closeAll( allProcessors );\n+        IOUtils.closeAll(allProcessors);\n     }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/764/RecordProcessorStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/764/RecordProcessorStep.java\nindex cc01b3b838f..80255c81b62 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/764/RecordProcessorStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/764/RecordProcessorStep.java\n@@ -109,4 +109,4 @@ public class RecordProcessorStep<T extends AbstractBaseRecord> extends Processor\n         super.close();\n         IOUtils.closeAll( allProcessors );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "244",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "70",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "191",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "218",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "225",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "229",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "233",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "239",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "287",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "312",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "320",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "330",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/244/DefaultBoltConnection.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/244/DefaultBoltConnection.java\nindex df323f8c95e..bfc52a88f95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/244/DefaultBoltConnection.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/244/DefaultBoltConnection.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.runtime;\n \n import io.netty.channel.Channel;\n@@ -46,331 +47,321 @@ import static java.util.concurrent.TimeUnit.SECONDS;\n \n public class DefaultBoltConnection implements BoltConnection\n {\n-    protected static final int DEFAULT_MAX_BATCH_SIZE = FeatureToggles.getInteger( BoltKernelExtension.class, \"max_batch_size\", 100 );\n-\n-    private final String id;\n-\n-    private final BoltChannel channel;\n-    private final BoltStateMachine machine;\n-    private final BoltConnectionLifetimeListener listener;\n-    private final BoltConnectionQueueMonitor queueMonitor;\n-    private final PackOutput output;\n-\n-    private final Log log;\n-    private final Log userLog;\n-\n-    private final int maxBatchSize;\n-    private final List<Job> batch;\n-    private final LinkedBlockingQueue<Job> queue = new LinkedBlockingQueue<>();\n-\n-    private final AtomicBoolean shouldClose = new AtomicBoolean();\n-    private final AtomicBoolean closed = new AtomicBoolean();\n-\n-    public DefaultBoltConnection( BoltChannel channel, PackOutput output, BoltStateMachine machine, LogService logService,\n-            BoltConnectionLifetimeListener listener,\n-            BoltConnectionQueueMonitor queueMonitor )\n-    {\n-        this( channel, output, machine, logService, listener, queueMonitor, DEFAULT_MAX_BATCH_SIZE );\n-    }\n-\n-    public DefaultBoltConnection( BoltChannel channel, PackOutput output, BoltStateMachine machine, LogService logService,\n-            BoltConnectionLifetimeListener listener,\n-            BoltConnectionQueueMonitor queueMonitor, int maxBatchSize )\n-    {\n-        this.id = channel.id();\n-        this.channel = channel;\n-        this.output = output;\n-        this.machine = machine;\n-        this.listener = listener;\n-        this.queueMonitor = queueMonitor;\n-        this.log = logService.getInternalLog( getClass() );\n-        this.userLog = logService.getUserLog( getClass() );\n-        this.maxBatchSize = maxBatchSize;\n-        this.batch = new ArrayList<>( maxBatchSize );\n-    }\n-\n-    @Override\n-    public String id()\n-    {\n-        return id;\n-    }\n-\n-    @Override\n-    public SocketAddress localAddress()\n-    {\n-        return channel.serverAddress();\n-    }\n-\n-    @Override\n-    public SocketAddress remoteAddress()\n-    {\n-        return channel.clientAddress();\n-    }\n-\n-    @Override\n-    public Channel channel()\n-    {\n-        return channel.rawChannel();\n-    }\n-\n-    @Override\n-    public PackOutput output()\n+  protected static final int DEFAULT_MAX_BATCH_SIZE = FeatureToggles.getInteger(BoltKernelExtension.class, \"max_batch_size\", 100);\n+\n+  private final String id;\n+\n+  private final BoltChannel channel;\n+  private final BoltStateMachine machine;\n+  private final BoltConnectionLifetimeListener listener;\n+  private final BoltConnectionQueueMonitor queueMonitor;\n+  private final PackOutput output;\n+\n+  private final Log log;\n+  private final Log userLog;\n+\n+  private final int maxBatchSize;\n+  private final List<Job> batch;\n+  private final LinkedBlockingQueue<Job> queue = new LinkedBlockingQueue<>();\n+\n+  private final AtomicBoolean shouldClose = new AtomicBoolean();\n+  private final AtomicBoolean closed = new AtomicBoolean();\n+\n+  public DefaultBoltConnection(BoltChannel channel, PackOutput output, BoltStateMachine machine, LogService logService,\n+                               BoltConnectionLifetimeListener listener,\n+                               BoltConnectionQueueMonitor queueMonitor)\n+  {\n+    this(channel, output, machine, logService, listener, queueMonitor, DEFAULT_MAX_BATCH_SIZE);\n+  }\n+\n+  public DefaultBoltConnection(BoltChannel channel, PackOutput output, BoltStateMachine machine, LogService logService,\n+                               BoltConnectionLifetimeListener listener,\n+                               BoltConnectionQueueMonitor queueMonitor, int maxBatchSize)\n+  {\n+    this.id = channel.id();\n+    this.channel = channel;\n+    this.output = output;\n+    this.machine = machine;\n+    this.listener = listener;\n+    this.queueMonitor = queueMonitor;\n+    this.log = logService.getInternalLog(getClass());\n+    this.userLog = logService.getUserLog(getClass());\n+    this.maxBatchSize = maxBatchSize;\n+    this.batch = new ArrayList<>(maxBatchSize);\n+  }\n+\n+  @Override\n+  public String id()\n+  {\n+    return id;\n+  }\n+\n+  @Override\n+  public SocketAddress localAddress()\n+  {\n+    return channel.serverAddress();\n+  }\n+\n+  @Override\n+  public SocketAddress remoteAddress()\n+  {\n+    return channel.clientAddress();\n+  }\n+\n+  @Override\n+  public Channel channel()\n+  {\n+    return channel.rawChannel();\n+  }\n+\n+  @Override\n+  public PackOutput output()\n+  {\n+    return output;\n+  }\n+\n+  @Override\n+  public boolean hasPendingJobs()\n+  {\n+    return !queue.isEmpty();\n+  }\n+\n+  @Override\n+  public void start()\n+  {\n+    notifyCreated();\n+  }\n+\n+  @Override\n+  public void enqueue(Job job)\n+  {\n+    enqueueInternal(job);\n+  }\n+\n+  @Override\n+  public boolean processNextBatch()\n+  {\n+    return processNextBatch(maxBatchSize, false);\n+  }\n+\n+  protected boolean processNextBatch(int batchCount, boolean exitIfNoJobsAvailable)\n+  {\n+    try\n     {\n-        return output;\n-    }\n-\n-    @Override\n-    public boolean hasPendingJobs()\n-    {\n-        return !queue.isEmpty();\n-    }\n-\n-    @Override\n-    public void start()\n-    {\n-        notifyCreated();\n-    }\n-\n-    @Override\n-    public void enqueue( Job job )\n-    {\n-        enqueueInternal( job );\n-    }\n-\n-    @Override\n-    public boolean processNextBatch()\n-    {\n-        return processNextBatch( maxBatchSize, false );\n-    }\n-\n-    protected boolean processNextBatch( int batchCount, boolean exitIfNoJobsAvailable )\n-    {\n-        try\n-        {\n-            boolean waitForMessage = false;\n-            boolean loop = false;\n-            do\n-            {\n-                // exit loop if we'll close the connection\n-                if ( willClose() )\n-                {\n-                    break;\n-                }\n-\n-                // do we have pending jobs or shall we wait for new jobs to\n-                // arrive, which is required only for releasing stickiness\n-                // condition to this thread\n-                if ( waitForMessage || !queue.isEmpty() )\n-                {\n-                    queue.drainTo( batch, batchCount );\n-                    // if we expect one message but did not get any (because it was already\n-                    // processed), silently exit\n-                    if ( batch.size() == 0 && !exitIfNoJobsAvailable )\n-                    {\n-                        // loop until we get a new job, if we cannot then validate\n-                        // transaction to check for termination condition. We'll\n-                        // break loop if we'll close the connection\n-                        while ( !willClose() )\n-                        {\n-                            Job nextJob = queue.poll( 10, SECONDS );\n-                            if ( nextJob != null )\n-                            {\n-                                batch.add( nextJob );\n-\n-                                break;\n-                            }\n-                            else\n-                            {\n-                                machine.validateTransaction();\n-                            }\n-                        }\n-                    }\n-                    notifyDrained( batch );\n-\n-                    // execute each job that's in the batch\n-                    while ( batch.size() > 0 )\n-                    {\n-                        Job current = batch.remove( 0 );\n-\n-                        current.perform( machine );\n-                    }\n-\n-                    // do we have any condition that require this connection to\n-                    // stick to the current thread (i.e. is there an open statement\n-                    // or an open transaction)?\n-                    loop = machine.shouldStickOnThread();\n-                    waitForMessage = loop;\n-                }\n-\n-                // we processed all pending messages, let's flush underlying channel\n-                if ( queue.size() == 0 || maxBatchSize == 1 )\n-                {\n-                    output.flush();\n-                }\n-            }\n-            while ( loop );\n-\n-            // assert only if we'll stay alive\n-            if ( !willClose() )\n-            {\n-                assert !machine.hasOpenStatement();\n-            }\n-        }\n-        catch ( BoltConnectionAuthFatality ex )\n+      boolean waitForMessage = false;\n+      boolean loop = false;\n+      do\n+      {\n+        // exit loop if we'll close the connection\n+        if (willClose())\n         {\n-            shouldClose.set( true );\n-            if ( ex.isLoggable() )\n-            {\n-                userLog.warn( ex.getMessage() );\n-            }\n+          break;\n         }\n-        catch ( BoltProtocolBreachFatality ex )\n-        {\n-            shouldClose.set( true );\n-            log.error( String.format( \"Protocol breach detected in bolt session '%s'.\", id() ), ex );\n-        }\n-        catch ( InterruptedException ex )\n-        {\n-            shouldClose.set( true );\n-            log.info( \"Bolt session '%s' is interrupted probably due to server shutdown.\", id() );\n-        }\n-        catch ( Throwable t )\n-        {\n-            shouldClose.set( true );\n-            userLog.error( String.format( \"Unexpected error detected in bolt session '%s'.\", id() ), t );\n-        }\n-        finally\n+\n+        // do we have pending jobs or shall we wait for new jobs to\n+        // arrive, which is required only for releasing stickiness\n+        // condition to this thread\n+        if (waitForMessage || !queue.isEmpty())\n         {\n-            if ( willClose() )\n+          queue.drainTo(batch, batchCount);\n+          // if we expect one message but did not get any (because it was already\n+          // processed), silently exit\n+          if (batch.size() == 0 && !exitIfNoJobsAvailable)\n+          {\n+            // loop until we get a new job, if we cannot then validate\n+            // transaction to check for termination condition. We'll\n+            // break loop if we'll close the connection\n+            while (!willClose())\n             {\n-                close();\n+              Job nextJob = queue.poll(10, SECONDS);\n+              if (nextJob != null)\n+              {\n+                batch.add(nextJob);\n+\n+                break;\n+              } else\n+              {\n+                machine.validateTransaction();\n+              }\n             }\n+          }\n+          notifyDrained(batch);\n+\n+          // execute each job that's in the batch\n+          while (batch.size() > 0)\n+          {\n+            Job current = batch.remove(0);\n+\n+            current.perform(machine);\n+          }\n+\n+          // do we have any condition that require this connection to\n+          // stick to the current thread (i.e. is there an open statement\n+          // or an open transaction)?\n+          loop = machine.shouldStickOnThread();\n+          waitForMessage = loop;\n         }\n \n-        return !closed.get();\n-    }\n-\n-    @Override\n-    public void handleSchedulingError( Throwable t )\n-    {\n-        // if the connection is closing, don't output any logs\n-        if ( !willClose() )\n+        // we processed all pending messages, let's flush underlying channel\n+        if (queue.size() == 0 || maxBatchSize == 1)\n         {\n-            String message;\n-            Neo4jError error;\n-            if ( ExceptionUtils.hasCause( t, RejectedExecutionException.class ) )\n-            {\n-                error = Neo4jError.from( Status.Request.NoThreadsAvailable, Status.Request.NoThreadsAvailable.code().description() );\n-                message = String.format( \"Unable to schedule bolt session '%s' for execution since there are no available threads to \" +\n-                        \"serve it at the moment. You can retry at a later time or consider increasing max thread pool size for bolt connector(s).\", id() );\n-            }\n-            else\n-            {\n-                error = Neo4jError.fatalFrom( t );\n-                message = String.format( \"Unexpected error during scheduling of bolt session '%s'.\", id() );\n-            }\n-\n-            log.error( message, t );\n-            userLog.error( message );\n-            machine.markFailed( error );\n+          output.flush();\n         }\n-\n-        // this will ensure that the scheduled job will be executed on this thread (fork-join pool)\n-        // and it will either send a failure response to the client or close the connection and its\n-        // related resources (if closing)\n-        processNextBatch( 1, true );\n+      }\n+      while (loop);\n+\n+      // assert only if we'll stay alive\n+      if (!willClose())\n+      {\n+        assert !machine.hasOpenStatement();\n+      }\n+    } catch (BoltConnectionAuthFatality ex)\n+    {\n+      shouldClose.set(true);\n+      if (ex.isLoggable())\n+      {\n+        userLog.warn(ex.getMessage());\n+      }\n+    } catch (BoltProtocolBreachFatality ex)\n+    {\n+      shouldClose.set(true);\n+      log.error(String.format(\"Protocol breach detected in bolt session '%s'.\", id()), ex);\n+    } catch (InterruptedException ex)\n+    {\n+      shouldClose.set(true);\n+      log.info(\"Bolt session '%s' is interrupted probably due to server shutdown.\", id());\n+    } catch (Throwable t)\n+    {\n+      shouldClose.set(true);\n+      userLog.error(String.format(\"Unexpected error detected in bolt session '%s'.\", id()), t);\n+    } finally\n+    {\n+      if (willClose())\n+      {\n+        close();\n+      }\n     }\n \n-    @Override\n-    public void interrupt()\n+    return !closed.get();\n+  }\n+\n+  @Override\n+  public void handleSchedulingError(Throwable t)\n+  {\n+    // if the connection is closing, don't output any logs\n+    if (!willClose())\n     {\n-        machine.interrupt();\n+      String message;\n+      Neo4jError error;\n+      if (ExceptionUtils.hasCause(t, RejectedExecutionException.class))\n+      {\n+        error = Neo4jError.from(Status.Request.NoThreadsAvailable, Status.Request.NoThreadsAvailable.code().description());\n+        message = String.format(\"Unable to schedule bolt session '%s' for execution since there are no available threads to \" +\n+            \"serve it at the moment. You can retry at a later time or consider increasing max thread pool size for bolt connector(s).\", id());\n+      } else\n+      {\n+        error = Neo4jError.fatalFrom(t);\n+        message = String.format(\"Unexpected error during scheduling of bolt session '%s'.\", id());\n+      }\n+\n+      log.error(message, t);\n+      userLog.error(message);\n+      machine.markFailed(error);\n     }\n \n-    @Override\n-    public void stop()\n+    // this will ensure that the scheduled job will be executed on this thread (fork-join pool)\n+    // and it will either send a failure response to the client or close the connection and its\n+    // related resources (if closing)\n+    processNextBatch(1, true);\n+  }\n+\n+  @Override\n+  public void interrupt()\n+  {\n+    machine.interrupt();\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+    if (shouldClose.compareAndSet(false, true))\n     {\n-        if ( shouldClose.compareAndSet( false, true ) )\n-        {\n-            machine.terminate();\n+      machine.terminate();\n \n-            // Enqueue an empty job for close to be handled linearly\n-            // This is for already executing connections\n-            enqueueInternal( ignore ->\n-            {\n+      // Enqueue an empty job for close to be handled linearly\n+      // This is for already executing connections\n+      enqueueInternal(ignore ->\n+      {\n \n-            } );\n-        }\n+      });\n     }\n+  }\n \n-    private boolean willClose()\n-    {\n-        return shouldClose.get();\n-    }\n+  private boolean willClose()\n+  {\n+    return shouldClose.get();\n+  }\n \n-    private void close()\n+  private void close()\n+  {\n+    if (closed.compareAndSet(false, true))\n     {\n-        if ( closed.compareAndSet( false, true ) )\n-        {\n-            try\n-            {\n-                output.close();\n-            }\n-            catch ( Throwable t )\n-            {\n-                log.error( String.format( \"Unable to close pack output of bolt session '%s'.\", id() ), t );\n-            }\n-\n-            try\n-            {\n-                machine.close();\n-            }\n-            catch ( Throwable t )\n-            {\n-                log.error( String.format( \"Unable to close state machine of bolt session '%s'.\", id() ), t );\n-            }\n-            finally\n-            {\n-                notifyDestroyed();\n-            }\n-        }\n+      try\n+      {\n+        output.close();\n+      } catch (Throwable t)\n+      {\n+        log.error(String.format(\"Unable to close pack output of bolt session '%s'.\", id()), t);\n+      }\n+\n+      try\n+      {\n+        machine.close();\n+      } catch (Throwable t)\n+      {\n+        log.error(String.format(\"Unable to close state machine of bolt session '%s'.\", id()), t);\n+      } finally\n+      {\n+        notifyDestroyed();\n+      }\n     }\n+  }\n \n-    private void enqueueInternal( Job job )\n-    {\n-        queue.offer( job );\n-        notifyEnqueued( job );\n-    }\n+  private void enqueueInternal(Job job)\n+  {\n+    queue.offer(job);\n+    notifyEnqueued(job);\n+  }\n \n-    private void notifyCreated()\n+  private void notifyCreated()\n+  {\n+    if (listener != null)\n     {\n-        if ( listener != null )\n-        {\n-            listener.created( this );\n-        }\n+      listener.created(this);\n     }\n+  }\n \n-    private void notifyDestroyed()\n+  private void notifyDestroyed()\n+  {\n+    if (listener != null)\n     {\n-        if ( listener != null )\n-        {\n-            listener.closed( this );\n-        }\n+      listener.closed(this);\n     }\n+  }\n \n-    private void notifyEnqueued( Job job )\n+  private void notifyEnqueued(Job job)\n+  {\n+    if (queueMonitor != null)\n     {\n-        if ( queueMonitor != null )\n-        {\n-            queueMonitor.enqueued( this, job );\n-        }\n+      queueMonitor.enqueued(this, job);\n     }\n+  }\n \n-    private void notifyDrained( List<Job> jobs )\n+  private void notifyDrained(List<Job> jobs)\n+  {\n+    if (queueMonitor != null && jobs.size() > 0)\n     {\n-        if ( queueMonitor != null && jobs.size() > 0 )\n-        {\n-            queueMonitor.drained( this, jobs );\n-        }\n+      queueMonitor.drained(this, jobs);\n     }\n+  }\n }\n",
            "diff_size": 435
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "263",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 268).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/244/DefaultBoltConnection.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/244/DefaultBoltConnection.java\nindex df323f8c95e..231e96f1f3d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/244/DefaultBoltConnection.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/244/DefaultBoltConnection.java\n@@ -176,8 +176,7 @@ public class DefaultBoltConnection implements BoltConnection\n                             if ( nextJob != null )\n                             {\n                                 batch.add( nextJob );\n-\n-                                break;\n+break;\n                             }\n                             else\n                             {\n@@ -185,14 +184,14 @@ public class DefaultBoltConnection implements BoltConnection\n                             }\n                         }\n                     }\n-                    notifyDrained( batch );\n+\n+notifyDrained( batch );\n \n                     // execute each job that's in the batch\n                     while ( batch.size() > 0 )\n                     {\n                         Job current = batch.remove( 0 );\n-\n-                        current.perform( machine );\n+current.perform( machine );\n                     }\n \n                     // do we have any condition that require this connection to\n@@ -261,8 +260,7 @@ public class DefaultBoltConnection implements BoltConnection\n             if ( ExceptionUtils.hasCause( t, RejectedExecutionException.class ) )\n             {\n                 error = Neo4jError.from( Status.Request.NoThreadsAvailable, Status.Request.NoThreadsAvailable.code().description() );\n-                message = String.format( \"Unable to schedule bolt session '%s' for execution since there are no available threads to \" +\n-                        \"serve it at the moment. You can retry at a later time or consider increasing max thread pool size for bolt connector(s).\", id() );\n+                message = String.format( \"Unable to schedule bolt session '%s' for execution since there are no available threads to \" + \"serve it at the moment. You can retry at a later time or consider increasing max thread pool size for bolt connector(s).\", id() );\n             }\n             else\n             {\n@@ -298,8 +296,7 @@ public class DefaultBoltConnection implements BoltConnection\n             // This is for already executing connections\n             enqueueInternal( ignore ->\n             {\n-\n-            } );\n+} );\n         }\n     }\n \n@@ -373,4 +370,4 @@ public class DefaultBoltConnection implements BoltConnection\n             queueMonitor.drained( this, jobs );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
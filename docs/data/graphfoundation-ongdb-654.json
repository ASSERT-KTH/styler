{
    "project_name": "graphfoundation-ongdb",
    "error_id": "654",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/654/DynamicNumberArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/654/DynamicNumberArray.java\nindex 769e7976825..ed2fb53d0dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/654/DynamicNumberArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/654/DynamicNumberArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.cache;\n \n import java.util.Arrays;\n@@ -30,85 +31,85 @@ import java.util.Arrays;\n  */\n abstract class DynamicNumberArray<N extends NumberArray<N>> implements NumberArray<N>\n {\n-    protected final NumberArrayFactory factory;\n-    protected final long chunkSize;\n-    protected N[] chunks;\n+  protected final NumberArrayFactory factory;\n+  protected final long chunkSize;\n+  protected N[] chunks;\n \n-    DynamicNumberArray( NumberArrayFactory factory, long chunkSize, N[] initialChunks )\n-    {\n-        this.factory = factory;\n-        this.chunkSize = chunkSize;\n-        this.chunks = initialChunks;\n-    }\n+  DynamicNumberArray(NumberArrayFactory factory, long chunkSize, N[] initialChunks)\n+  {\n+    this.factory = factory;\n+    this.chunkSize = chunkSize;\n+    this.chunks = initialChunks;\n+  }\n \n-    @Override\n-    public long length()\n-    {\n-        return chunks.length * chunkSize;\n-    }\n+  @Override\n+  public long length()\n+  {\n+    return chunks.length * chunkSize;\n+  }\n \n-    @Override\n-    public void clear()\n+  @Override\n+  public void clear()\n+  {\n+    for (N chunk : chunks)\n     {\n-        for ( N chunk : chunks )\n-        {\n-            chunk.clear();\n-        }\n+      chunk.clear();\n     }\n+  }\n \n-    @Override\n-    public void acceptMemoryStatsVisitor( MemoryStatsVisitor visitor )\n+  @Override\n+  public void acceptMemoryStatsVisitor(MemoryStatsVisitor visitor)\n+  {\n+    for (N chunk : chunks)\n     {\n-        for ( N chunk : chunks )\n-        {\n-            chunk.acceptMemoryStatsVisitor( visitor );\n-        }\n+      chunk.acceptMemoryStatsVisitor(visitor);\n     }\n+  }\n \n-    protected N chunkOrNullAt( long index )\n-    {\n-        int chunkIndex = chunkIndex( index );\n-        return chunkIndex < chunks.length ? chunks[chunkIndex] : null;\n-    }\n+  protected N chunkOrNullAt(long index)\n+  {\n+    int chunkIndex = chunkIndex(index);\n+    return chunkIndex < chunks.length ? chunks[chunkIndex] : null;\n+  }\n \n-    protected int chunkIndex( long index )\n-    {\n-        return (int) (index / chunkSize);\n-    }\n+  protected int chunkIndex(long index)\n+  {\n+    return (int) (index / chunkSize);\n+  }\n \n-    @Override\n-    public N at( long index )\n+  @Override\n+  public N at(long index)\n+  {\n+    if (index >= length())\n     {\n-        if ( index >= length() )\n-        {\n-            synchronizedAddChunk( index );\n-        }\n-\n-        int chunkIndex = chunkIndex( index );\n-        return chunks[chunkIndex];\n+      synchronizedAddChunk(index);\n     }\n \n-    private synchronized void synchronizedAddChunk( long index )\n+    int chunkIndex = chunkIndex(index);\n+    return chunks[chunkIndex];\n+  }\n+\n+  private synchronized void synchronizedAddChunk(long index)\n+  {\n+    if (index >= length())\n     {\n-        if ( index >= length() )\n-        {\n-            N[] newChunks = Arrays.copyOf( chunks, chunkIndex( index ) + 1 );\n-            for ( int i = chunks.length; i < newChunks.length; i++ )\n-            {\n-                newChunks[i] = addChunk( chunkSize, chunkSize * i );\n-            }\n-            chunks = newChunks;\n-        }\n+      N[] newChunks = Arrays.copyOf(chunks, chunkIndex(index) + 1);\n+      for (int i = chunks.length; i < newChunks.length; i++)\n+      {\n+        newChunks[i] = addChunk(chunkSize, chunkSize * i);\n+      }\n+      chunks = newChunks;\n     }\n+  }\n \n-    protected abstract N addChunk( long chunkSize, long base );\n+  protected abstract N addChunk(long chunkSize, long base);\n \n-    @Override\n-    public void close()\n+  @Override\n+  public void close()\n+  {\n+    for (N chunk : chunks)\n     {\n-        for ( N chunk : chunks )\n-        {\n-            chunk.close();\n-        }\n+      chunk.close();\n     }\n+  }\n }\n",
            "diff_size": 80
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "76",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/654/DynamicNumberArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/654/DynamicNumberArray.java\nindex 769e7976825..c33f07765dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/654/DynamicNumberArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/654/DynamicNumberArray.java\n@@ -73,7 +73,7 @@ abstract class DynamicNumberArray<N extends NumberArray<N>> implements NumberArr\n \n     protected int chunkIndex( long index )\n     {\n-        return (int) (index / chunkSize);\n+        return ( int) ( index / chunkSize);\n     }\n \n     @Override\n@@ -97,7 +97,8 @@ abstract class DynamicNumberArray<N extends NumberArray<N>> implements NumberArr\n             {\n                 newChunks[i] = addChunk( chunkSize, chunkSize * i );\n             }\n-            chunks = newChunks;\n+\n+chunks = newChunks;\n         }\n     }\n \n@@ -111,4 +112,4 @@ abstract class DynamicNumberArray<N extends NumberArray<N>> implements NumberArr\n             chunk.close();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "java110-MicroCommunity",
    "error_id": "16",
    "information": {
        "errors": [
            {
                "line": "46",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 178).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<FeeConfigDto> feeConfigs = BeanConvertUtil.covertBeanList(feeConfigServiceDaoImpl.getFeeConfigInfo(BeanConvertUtil.beanCovertMap(feeConfigDto)), FeeConfigDto.class);\n\n\n        return feeConfigs;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/16/FeeConfigInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/16/FeeConfigInnerServiceSMOImpl.java\nindex 6f59e920469..98a2c189c81 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/16/FeeConfigInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/16/FeeConfigInnerServiceSMOImpl.java\n@@ -43,7 +43,8 @@ public class FeeConfigInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n             feeConfigDto.setPage((page - 1) * feeConfigDto.getRow());\n         }\n \n-        List<FeeConfigDto> feeConfigs = BeanConvertUtil.covertBeanList(feeConfigServiceDaoImpl.getFeeConfigInfo(BeanConvertUtil.beanCovertMap(feeConfigDto)), FeeConfigDto.class);\n+        List<FeeConfigDto> feeConfigs =\n+            BeanConvertUtil.covertBeanList(feeConfigServiceDaoImpl.getFeeConfigInfo(BeanConvertUtil.beanCovertMap(feeConfigDto)), FeeConfigDto.class);\n \n \n         return feeConfigs;\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/16/FeeConfigInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/16/FeeConfigInnerServiceSMOImpl.java\nindex 6f59e920469..16fc729b207 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/16/FeeConfigInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/16/FeeConfigInnerServiceSMOImpl.java\n@@ -45,8 +45,7 @@ public class FeeConfigInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n \n         List<FeeConfigDto> feeConfigs = BeanConvertUtil.covertBeanList(feeConfigServiceDaoImpl.getFeeConfigInfo(BeanConvertUtil.beanCovertMap(feeConfigDto)), FeeConfigDto.class);\n \n-\n-        return feeConfigs;\n+return feeConfigs;\n     }\n \n \n@@ -75,4 +74,4 @@ public class FeeConfigInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/16/FeeConfigInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/16/FeeConfigInnerServiceSMOImpl.java\nindex 6f59e920469..df077ca3a2c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/16/FeeConfigInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/16/FeeConfigInnerServiceSMOImpl.java\n@@ -1,6 +1,5 @@\n package com.java110.fee.smo.impl;\n \n-\n import com.java110.core.base.smo.BaseServiceSMO;\n import com.java110.dto.PageDto;\n import com.java110.dto.fee.FeeConfigDto;\n@@ -12,7 +11,6 @@ import com.java110.utils.util.BeanConvertUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.List;\n \n /**\n@@ -23,6 +21,8 @@ import java.util.List;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class FeeConfigInnerServiceSMOImpl extends BaseServiceSMO implements IFeeConfigInnerServiceSMO {\n \n@@ -37,19 +37,17 @@ public class FeeConfigInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = feeConfigDto.getPage();\n \n+\n+        int page = feeConfigDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             feeConfigDto.setPage((page - 1) * feeConfigDto.getRow());\n         }\n \n         List<FeeConfigDto> feeConfigs = BeanConvertUtil.covertBeanList(feeConfigServiceDaoImpl.getFeeConfigInfo(BeanConvertUtil.beanCovertMap(feeConfigDto)), FeeConfigDto.class);\n-\n-\n         return feeConfigs;\n     }\n \n-\n     @Override\n     public int queryFeeConfigsCount(@RequestBody FeeConfigDto feeConfigDto) {\n         return feeConfigServiceDaoImpl.queryFeeConfigsCount(BeanConvertUtil.beanCovertMap(feeConfigDto));\n@@ -75,4 +73,4 @@ public class FeeConfigInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/16/FeeConfigInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/16/FeeConfigInnerServiceSMOImpl.java\nindex 6f59e920469..6769a2a2095 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/16/FeeConfigInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/16/FeeConfigInnerServiceSMOImpl.java\n@@ -42,8 +42,7 @@ public class FeeConfigInnerServiceSMOImpl extends BaseServiceSMO implements IFee\n         if (page != PageDto.DEFAULT_PAGE) {\n             feeConfigDto.setPage((page - 1) * feeConfigDto.getRow());\n         }\n-\n-        List<FeeConfigDto> feeConfigs = BeanConvertUtil.covertBeanList(feeConfigServiceDaoImpl.getFeeConfigInfo(BeanConvertUtil.beanCovertMap(feeConfigDto)), FeeConfigDto.class);\n+    List<FeeConfigDto> feeConfigs = BeanConvertUtil.covertBeanList(feeConfigServiceDaoImpl.getFeeConfigInfo(BeanConvertUtil.beanCovertMap(feeConfigDto)), FeeConfigDto.class);\n \n \n         return feeConfigs;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
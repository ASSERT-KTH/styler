{
    "project_name": "benetech-ServiceNet",
    "error_id": "56",
    "information": {
        "errors": [
            {
                "line": "318",
                "severity": "error",
                "message": "Line is longer than 125 characters (found 135).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    private boolean compareRegion(GeocodingResult geocodingResult, ProviderFilterDTO providerFilterDTO) {\n        if (StringUtils.isEmpty(geocodingResult.getAdministrativeAreaLevel2()) || StringUtils.isEmpty(providerFilterDTO.getRegion())) {\n            return true;\n        }\n        return geocodingResult.getAdministrativeAreaLevel2().equals(providerFilterDTO.getRegion());",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "318",
                    "severity": "error",
                    "message": "Line is longer than 125 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/benetech-ServiceNet/errored/1/56/ActivityServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/benetech-ServiceNet/intellij/56/ActivityServiceImpl.java\nindex 9004c14d612..fd61953a341 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/benetech-ServiceNet/errored/1/56/ActivityServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/benetech-ServiceNet/intellij/56/ActivityServiceImpl.java\n@@ -76,10 +76,11 @@ public class ActivityServiceImpl implements ActivityService {\n     private final OrganizationMapper organizationMapper;\n \n     public ActivityServiceImpl(ActivityRepository activityRepository, RecordsService recordsService,\n-        ExclusionsConfigService exclusionsConfigService, OrganizationMatchService organizationMatchService,\n-        OrganizationService organizationService, UserService userService,\n-        ProviderRecordsRepository providerRecordsRepository,\n-        OrganizationMapper organizationMapper) {\n+                               ExclusionsConfigService exclusionsConfigService,\n+                               OrganizationMatchService organizationMatchService,\n+                               OrganizationService organizationService, UserService userService,\n+                               ProviderRecordsRepository providerRecordsRepository,\n+                               OrganizationMapper organizationMapper) {\n         this.activityRepository = activityRepository;\n         this.recordsService = recordsService;\n         this.exclusionsConfigService = exclusionsConfigService;\n@@ -93,7 +94,7 @@ public class ActivityServiceImpl implements ActivityService {\n     @Override\n     @Transactional(readOnly = true)\n     public Page<ActivityDTO> getAllOrganizationActivities(Pageable pageable, UUID systemAccountId,\n-        String search, ActivityFilterDTO activityFilterDTO) {\n+                                                          String search, ActivityFilterDTO activityFilterDTO) {\n \n         Map<UUID, ExclusionsConfig> exclusionsMap = exclusionsConfigService.getAllBySystemAccountId();\n \n@@ -171,7 +172,7 @@ public class ActivityServiceImpl implements ActivityService {\n     @Override\n     @Transactional(readOnly = true)\n     public Page<ProviderRecordDTO> getAllPartnerActivities(ProviderFilterDTO providerFilterDTO,\n-        String search, Pageable pageable) {\n+                                                           String search, Pageable pageable) {\n         UserProfile userProfile = userService.getCurrentUserProfile();\n         Page<Organization> organizations = providerRecordsRepository\n             .findAllWithFilters(userProfile, providerFilterDTO, search, pageable);\n@@ -181,7 +182,7 @@ public class ActivityServiceImpl implements ActivityService {\n     @Override\n     @Transactional(readOnly = true)\n     public Page<ProviderRecordDTO> getAllPartnerActivitiesPublic(ProviderFilterDTO providerFilterDTO,\n-        Silo silo, String search, Pageable pageable) {\n+                                                                 Silo silo, String search, Pageable pageable) {\n         Page<Organization> organizations = providerRecordsRepository\n             .findAllWithFiltersPublic(providerFilterDTO, silo, search, pageable);\n         return organizations.map(this::getProviderRecordDTO);\n@@ -190,7 +191,7 @@ public class ActivityServiceImpl implements ActivityService {\n     @Override\n     @Transactional(readOnly = true)\n     public Page<ProviderRecordForMapDTO> getAllPartnerActivitiesForMap(ProviderFilterDTO providerFilterDTO,\n-        String search) {\n+                                                                       String search) {\n         UserProfile userProfile = userService.getCurrentUserProfile();\n         Page<ProviderRecordForMapDTO> providerRecordForMapDTOList = providerRecordsRepository\n             .findAllWithFiltersForMap(userProfile, providerFilterDTO, search)\n@@ -203,7 +204,7 @@ public class ActivityServiceImpl implements ActivityService {\n     @Override\n     @Transactional(readOnly = true)\n     public Page<ProviderRecordForMapDTO> getAllPartnerActivitiesForMap(ProviderFilterDTO providerFilterDTO,\n-        String search, Silo silo) {\n+                                                                       String search, Silo silo) {\n         Page<ProviderRecordForMapDTO> providerRecordForMapDTOList = providerRecordsRepository\n             .findAllWithFiltersForMap(silo, providerFilterDTO, search)\n             .map(this::getProviderRecordDTO)\n@@ -261,7 +262,7 @@ public class ActivityServiceImpl implements ActivityService {\n     }\n \n     private Page<ActivityInfo> findAllActivitiesInfoWithOwnerId(UUID ownerId, String search,\n-        Pageable pageable, ActivityFilterDTO activityFilterDTO) {\n+                                                                Pageable pageable, ActivityFilterDTO activityFilterDTO) {\n         if (ownerId != null) {\n             return activityRepository.findAllWithFilters(ownerId, search, activityFilterDTO, pageable);\n         } else {\n@@ -315,7 +316,8 @@ public class ActivityServiceImpl implements ActivityService {\n     }\n \n     private boolean compareRegion(GeocodingResult geocodingResult, ProviderFilterDTO providerFilterDTO) {\n-        if (StringUtils.isEmpty(geocodingResult.getAdministrativeAreaLevel2()) || StringUtils.isEmpty(providerFilterDTO.getRegion())) {\n+        if (StringUtils.isEmpty(geocodingResult.getAdministrativeAreaLevel2()) ||\n+            StringUtils.isEmpty(providerFilterDTO.getRegion())) {\n             return true;\n         }\n         return geocodingResult.getAdministrativeAreaLevel2().equals(providerFilterDTO.getRegion());\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "284",
                    "severity": "error",
                    "message": "Line is longer than 125 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "305",
                    "severity": "error",
                    "message": "Line is longer than 125 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "316",
                    "severity": "error",
                    "message": "Line is longer than 125 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/benetech-ServiceNet/errored/1/56/ActivityServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/benetech-ServiceNet/naturalize/56/ActivityServiceImpl.java\nindex 9004c14d612..00813c5d0e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/benetech-ServiceNet/errored/1/56/ActivityServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/benetech-ServiceNet/naturalize/56/ActivityServiceImpl.java\n@@ -281,8 +281,7 @@ public class ActivityServiceImpl implements ActivityService {\n     private ProviderRecordForMapDTO toProviderRecordForMapDTO(ProviderRecordDTO providerRecordDTO) {\n         Set<LocationRecordDTO> locationRecordDTOS = providerRecordDTO.getLocations();\n         Set<GeocodingResultDTO> geocodingResultDTOS = new HashSet<>();\n-        locationRecordDTOS.forEach(locationRecordDTO -> geocodingResultDTOS\n-            .addAll(locationRecordDTO.getLocation().getGeocodingResults())\n+        locationRecordDTOS.forEach(locationRecordDTO -> geocodingResultDTOS.addAll(locationRecordDTO.getLocation().getGeocodingResults())\n         );\n         return new ProviderRecordForMapDTO(\n             providerRecordDTO.getOrganization().getId(), geocodingResultDTOS\n@@ -296,15 +295,14 @@ public class ActivityServiceImpl implements ActivityService {\n                     .filter(Objects::nonNull)\n                     .filter(geo -> this.filterLocation(geo, providerFilterDTO))\n                     .collect(Collectors.toCollection(ArrayList::new))))\n-            .collect(Collectors.toCollection(HashSet::new));\n+.collect(Collectors.toCollection(HashSet::new));\n         organization.setLocations(locations);\n         return organization;\n     }\n \n     private boolean filterLocation(GeocodingResult geocodingResult, ProviderFilterDTO providerFilterDTO) {\n         return this.compareCity(geocodingResult, providerFilterDTO)\n-            && this.compareRegion(geocodingResult, providerFilterDTO)\n-            && this.comparePostalCode(geocodingResult, providerFilterDTO);\n+            && this.compareRegion(geocodingResult, providerFilterDTO) && this.comparePostalCode(geocodingResult, providerFilterDTO);\n     }\n \n     private boolean compareCity(GeocodingResult geocodingResult, ProviderFilterDTO providerFilterDTO) {\n@@ -327,4 +325,4 @@ public class ActivityServiceImpl implements ActivityService {\n         }\n         return geocodingResult.getPostalCode().equals(providerFilterDTO.getZip());\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "318",
                    "severity": "error",
                    "message": "Line is longer than 125 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "318",
                    "severity": "error",
                    "message": "Line is longer than 125 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "318",
                    "column": "79",
                    "severity": "error",
                    "message": "'||' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "318",
                    "column": "79",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "318",
                    "column": "132",
                    "severity": "error",
                    "message": "'{' at column 132 should have line break after.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "318",
                    "column": "132",
                    "severity": "error",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "318",
                    "column": "132",
                    "severity": "error",
                    "message": "'{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/benetech-ServiceNet/errored/1/56/ActivityServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/benetech-ServiceNet/styler_three_grams/56/ActivityServiceImpl.java\nindex 9004c14d612..379dd618cdc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/benetech-ServiceNet/errored/1/56/ActivityServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/benetech-ServiceNet/styler_three_grams/56/ActivityServiceImpl.java\n@@ -315,8 +315,7 @@ public class ActivityServiceImpl implements ActivityService {\n     }\n \n     private boolean compareRegion(GeocodingResult geocodingResult, ProviderFilterDTO providerFilterDTO) {\n-        if (StringUtils.isEmpty(geocodingResult.getAdministrativeAreaLevel2()) || StringUtils.isEmpty(providerFilterDTO.getRegion())) {\n-            return true;\n+        if (StringUtils.isEmpty(geocodingResult.getAdministrativeAreaLevel2())||StringUtils.isEmpty(providerFilterDTO.getRegion())){returntruetrue;\n         }\n         return geocodingResult.getAdministrativeAreaLevel2().equals(providerFilterDTO.getRegion());\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4445",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "75",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4445/WarmupAvailabilityListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4445/WarmupAvailabilityListener.java\nindex 13bdb45b065..2db0d129050 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4445/WarmupAvailabilityListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4445/WarmupAvailabilityListener.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.pagecache;\n \n import java.util.concurrent.TimeUnit;\n@@ -31,88 +32,86 @@ import static org.neo4j.scheduler.JobScheduler.Groups.pageCacheIOHelper;\n \n class WarmupAvailabilityListener implements AvailabilityListener\n {\n-    private final JobScheduler scheduler;\n-    private final PageCacheWarmer pageCacheWarmer;\n-    private final Config config;\n-    private final Log log;\n-    private final PageCacheWarmerMonitor monitor;\n+  private final JobScheduler scheduler;\n+  private final PageCacheWarmer pageCacheWarmer;\n+  private final Config config;\n+  private final Log log;\n+  private final PageCacheWarmerMonitor monitor;\n \n-    // We use the monitor lock to guard the job handle. However, it could happen that a job has already started, ends\n-    // up waiting for the lock while it's being held by another thread calling `unavailable()`. In that case, we need\n-    // to make sure that the signal to stop is not lost. Cancelling a job handle only works on jobs that haven't\n-    // started yet, since we don't propagate an interrupt. This is why we check the `available` field in the\n-    // `scheduleProfile` method.\n-    private volatile boolean available;\n-    private JobScheduler.JobHandle jobHandle; // Guarded by `this`.\n+  // We use the monitor lock to guard the job handle. However, it could happen that a job has already started, ends\n+  // up waiting for the lock while it's being held by another thread calling `unavailable()`. In that case, we need\n+  // to make sure that the signal to stop is not lost. Cancelling a job handle only works on jobs that haven't\n+  // started yet, since we don't propagate an interrupt. This is why we check the `available` field in the\n+  // `scheduleProfile` method.\n+  private volatile boolean available;\n+  private JobScheduler.JobHandle jobHandle; // Guarded by `this`.\n \n-    WarmupAvailabilityListener( JobScheduler scheduler, PageCacheWarmer pageCacheWarmer,\n-                                Config config, Log log, PageCacheWarmerMonitor monitor )\n-    {\n-        this.scheduler = scheduler;\n-        this.pageCacheWarmer = pageCacheWarmer;\n-        this.config = config;\n-        this.log = log;\n-        this.monitor = monitor;\n-    }\n+  WarmupAvailabilityListener(JobScheduler scheduler, PageCacheWarmer pageCacheWarmer,\n+                             Config config, Log log, PageCacheWarmerMonitor monitor)\n+  {\n+    this.scheduler = scheduler;\n+    this.pageCacheWarmer = pageCacheWarmer;\n+    this.config = config;\n+    this.log = log;\n+    this.monitor = monitor;\n+  }\n \n-    @Override\n-    public synchronized void available()\n+  @Override\n+  public synchronized void available()\n+  {\n+    available = true;\n+    jobHandle = scheduler.schedule(pageCacheIOHelper, this::startWarmup);\n+  }\n+\n+  private void startWarmup()\n+  {\n+    if (!available)\n     {\n-        available = true;\n-        jobHandle = scheduler.schedule( pageCacheIOHelper, this::startWarmup );\n+      return;\n     }\n-\n-    private void startWarmup()\n+    try\n     {\n-        if ( !available )\n-        {\n-            return;\n-        }\n-        try\n-        {\n-            pageCacheWarmer.reheat().ifPresent( monitor::warmupCompleted );\n-        }\n-        catch ( Exception e )\n-        {\n-            log.debug( \"Active page cache warmup failed, \" +\n-                       \"so it may take longer for the cache to be populated with hot data.\", e );\n-        }\n-\n-        scheduleProfile();\n+      pageCacheWarmer.reheat().ifPresent(monitor::warmupCompleted);\n+    } catch (Exception e)\n+    {\n+      log.debug(\"Active page cache warmup failed, \" +\n+          \"so it may take longer for the cache to be populated with hot data.\", e);\n     }\n \n-    private synchronized void scheduleProfile()\n+    scheduleProfile();\n+  }\n+\n+  private synchronized void scheduleProfile()\n+  {\n+    if (!available)\n     {\n-        if ( !available )\n-        {\n-            return;\n-        }\n-        long frequencyMillis = config.get( GraphDatabaseSettings.pagecache_warmup_profiling_interval ).toMillis();\n-        jobHandle = scheduler.scheduleRecurring(\n-                pageCacheIOHelper, this::doProfile, frequencyMillis, TimeUnit.MILLISECONDS );\n+      return;\n     }\n+    long frequencyMillis = config.get(GraphDatabaseSettings.pagecache_warmup_profiling_interval).toMillis();\n+    jobHandle = scheduler.scheduleRecurring(\n+        pageCacheIOHelper, this::doProfile, frequencyMillis, TimeUnit.MILLISECONDS);\n+  }\n \n-    private void doProfile()\n+  private void doProfile()\n+  {\n+    try\n+    {\n+      pageCacheWarmer.profile().ifPresent(monitor::profileCompleted);\n+    } catch (Exception e)\n     {\n-        try\n-        {\n-            pageCacheWarmer.profile().ifPresent( monitor::profileCompleted );\n-        }\n-        catch ( Exception e )\n-        {\n-            log.debug( \"Page cache profiling failed, so no new profile of what data is hot or not was produced. \" +\n-                       \"This may reduce the effectiveness of a future page cache warmup process.\", e );\n-        }\n+      log.debug(\"Page cache profiling failed, so no new profile of what data is hot or not was produced. \" +\n+          \"This may reduce the effectiveness of a future page cache warmup process.\", e);\n     }\n+  }\n \n-    @Override\n-    public synchronized void unavailable()\n+  @Override\n+  public synchronized void unavailable()\n+  {\n+    available = false;\n+    if (jobHandle != null)\n     {\n-        available = false;\n-        if ( jobHandle != null )\n-        {\n-            jobHandle.cancel( false );\n-            jobHandle = null;\n-        }\n+      jobHandle.cancel(false);\n+      jobHandle = null;\n     }\n+  }\n }\n",
            "diff_size": 96
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4445/WarmupAvailabilityListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4445/WarmupAvailabilityListener.java\nindex 13bdb45b065..16d803644a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4445/WarmupAvailabilityListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4445/WarmupAvailabilityListener.java\n@@ -45,9 +45,8 @@ class WarmupAvailabilityListener implements AvailabilityListener\n     private volatile boolean available;\n     private JobScheduler.JobHandle jobHandle; // Guarded by `this`.\n \n-    WarmupAvailabilityListener( JobScheduler scheduler, PageCacheWarmer pageCacheWarmer,\n-                                Config config, Log log, PageCacheWarmerMonitor monitor )\n-    {\n+    WarmupAvailabilityListener( JobScheduler scheduler, PageCacheWarmer pageCacheWarmer, Config config, Log log, PageCacheWarmerMonitor monitor )\n+{\n         this.scheduler = scheduler;\n         this.pageCacheWarmer = pageCacheWarmer;\n         this.config = config;\n@@ -68,15 +67,15 @@ class WarmupAvailabilityListener implements AvailabilityListener\n         {\n             return;\n         }\n-        try\n+\n+try\n         {\n             pageCacheWarmer.reheat().ifPresent( monitor::warmupCompleted );\n         }\n         catch ( Exception e )\n         {\n-            log.debug( \"Active page cache warmup failed, \" +\n-                       \"so it may take longer for the cache to be populated with hot data.\", e );\n-        }\n+            log.debug( \"Active page cache warmup failed, \" + \"so it may take longer for the cache to be populated with hot data.\", e );\n+    }\n \n         scheduleProfile();\n     }\n@@ -88,8 +87,7 @@ class WarmupAvailabilityListener implements AvailabilityListener\n             return;\n         }\n         long frequencyMillis = config.get( GraphDatabaseSettings.pagecache_warmup_profiling_interval ).toMillis();\n-        jobHandle = scheduler.scheduleRecurring(\n-                pageCacheIOHelper, this::doProfile, frequencyMillis, TimeUnit.MILLISECONDS );\n+        jobHandle = scheduler.scheduleRecurring( pageCacheIOHelper, this::doProfile, frequencyMillis, TimeUnit.MILLISECONDS );\n     }\n \n     private void doProfile()\n@@ -100,9 +98,8 @@ class WarmupAvailabilityListener implements AvailabilityListener\n         }\n         catch ( Exception e )\n         {\n-            log.debug( \"Page cache profiling failed, so no new profile of what data is hot or not was produced. \" +\n-                       \"This may reduce the effectiveness of a future page cache warmup process.\", e );\n-        }\n+            log.debug( \"Page cache profiling failed, so no new profile of what data is hot or not was produced. \" + \"This may reduce the effectiveness of a future page cache warmup process.\", e );\n+    }\n     }\n \n     @Override\n@@ -115,4 +112,4 @@ class WarmupAvailabilityListener implements AvailabilityListener\n             jobHandle = null;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "NationalSecurityAgency-datawave",
    "error_id": "52",
    "information": {
        "errors": [
            {
                "line": "10",
                "severity": "error",
                "message": "Accumulo non-public classes imported",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "import org.apache.accumulo.core.client.TableNotFoundException;\nimport org.apache.accumulo.core.client.admin.TableOperations;\nimport org.apache.accumulo.core.conf.Property;\nimport org.apache.accumulo.core.iterators.IteratorUtil;\nimport org.apache.hadoop.conf.Configuration;\nimport org.apache.log4j.Logger;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "10",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "10",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/52/ErrorMetadataTableConfigHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/intellij/52/ErrorMetadataTableConfigHelper.java\nindex 2590a4085ae..b4600a09295 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/52/ErrorMetadataTableConfigHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/intellij/52/ErrorMetadataTableConfigHelper.java\n@@ -15,36 +15,37 @@ import org.apache.log4j.Logger;\n /**\n  * Class to create the Metadata table for the sharded error tables. Extends the MetadataTableConfigHelper since all we want to do differently is change the name\n  * of the Metadata table that will be used.\n- * \n- * \n  */\n public class ErrorMetadataTableConfigHelper extends MetadataTableConfigHelper {\n-    @Override\n-    public void configure(TableOperations tops) throws AccumuloException, AccumuloSecurityException, TableNotFoundException {\n-        super.configure(tops);\n-        for (IteratorUtil.IteratorScope scope : IteratorUtil.IteratorScope.values()) {\n-            configureToDropBadData(tops, scope.name());\n-        }\n+  @Override\n+  public void configure(TableOperations tops)\n+      throws AccumuloException, AccumuloSecurityException, TableNotFoundException {\n+    super.configure(tops);\n+    for (IteratorUtil.IteratorScope scope : IteratorUtil.IteratorScope.values()) {\n+      configureToDropBadData(tops, scope.name());\n     }\n-    \n-    @Override\n-    public void setup(String tableName, Configuration config, Logger log) throws IllegalArgumentException {\n-        \n-        this.log = log;\n-        this.conf = config;\n-        this.tableName = conf.get(ErrorShardedDataTypeHandler.ERROR_PROP_PREFIX + ShardedDataTypeHandler.METADATA_TABLE_NAME, null);\n-        \n-        if (this.tableName == null || !this.tableName.equals(tableName)) {\n-            throw new IllegalArgumentException(\"No Such Table: \" + tableName);\n-        }\n-    }\n-    \n-    // MetricsFileProtoIngestHelper creates nonsense field names, each containing a '.'\n-    private void configureToDropBadData(TableOperations tops, String scopeName) throws AccumuloSecurityException, AccumuloException, TableNotFoundException {\n-        String stem = String.format(\"%s%s.%s\", Property.TABLE_ITERATOR_PREFIX, scopeName, \"dropBadData\");\n-        setPropertyIfNecessary(this.tableName, stem, \"30,org.apache.accumulo.core.iterators.user.RegExFilter\", tops, log);\n-        setPropertyIfNecessary(this.tableName, stem + \".opt.negate\", \"true\", tops, log);\n-        setPropertyIfNecessary(this.tableName, stem + \".opt.rowRegex\", \".*\\\\..*\", tops, log);\n-        setPropertyIfNecessary(this.tableName, stem + \".opt.encoding\", \"UTF-8\", tops, log);\n+  }\n+\n+  @Override\n+  public void setup(String tableName, Configuration config, Logger log) throws IllegalArgumentException {\n+\n+    this.log = log;\n+    this.conf = config;\n+    this.tableName =\n+        conf.get(ErrorShardedDataTypeHandler.ERROR_PROP_PREFIX + ShardedDataTypeHandler.METADATA_TABLE_NAME, null);\n+\n+    if (this.tableName == null || !this.tableName.equals(tableName)) {\n+      throw new IllegalArgumentException(\"No Such Table: \" + tableName);\n     }\n+  }\n+\n+  // MetricsFileProtoIngestHelper creates nonsense field names, each containing a '.'\n+  private void configureToDropBadData(TableOperations tops, String scopeName)\n+      throws AccumuloSecurityException, AccumuloException, TableNotFoundException {\n+    String stem = String.format(\"%s%s.%s\", Property.TABLE_ITERATOR_PREFIX, scopeName, \"dropBadData\");\n+    setPropertyIfNecessary(this.tableName, stem, \"30,org.apache.accumulo.core.iterators.user.RegExFilter\", tops, log);\n+    setPropertyIfNecessary(this.tableName, stem + \".opt.negate\", \"true\", tops, log);\n+    setPropertyIfNecessary(this.tableName, stem + \".opt.rowRegex\", \".*\\\\..*\", tops, log);\n+    setPropertyIfNecessary(this.tableName, stem + \".opt.encoding\", \"UTF-8\", tops, log);\n+  }\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "10",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/52/ErrorMetadataTableConfigHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/naturalize/52/ErrorMetadataTableConfigHelper.java\nindex 2590a4085ae..5b455276d38 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/52/ErrorMetadataTableConfigHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/naturalize/52/ErrorMetadataTableConfigHelper.java\n@@ -47,4 +47,4 @@ public class ErrorMetadataTableConfigHelper extends MetadataTableConfigHelper {\n         setPropertyIfNecessary(this.tableName, stem + \".opt.rowRegex\", \".*\\\\..*\", tops, log);\n         setPropertyIfNecessary(this.tableName, stem + \".opt.encoding\", \"UTF-8\", tops, log);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "9",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/52/ErrorMetadataTableConfigHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/codebuff/52/ErrorMetadataTableConfigHelper.java\nindex 2590a4085ae..1029237e9dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/errored/1/52/ErrorMetadataTableConfigHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-datawave/codebuff/52/ErrorMetadataTableConfigHelper.java\n@@ -2,7 +2,6 @@ package datawave.ingest.table.config;\n \n import datawave.ingest.mapreduce.handler.error.ErrorShardedDataTypeHandler;\n import datawave.ingest.mapreduce.handler.shard.ShardedDataTypeHandler;\n-\n import org.apache.accumulo.core.client.AccumuloException;\n import org.apache.accumulo.core.client.AccumuloSecurityException;\n import org.apache.accumulo.core.client.TableNotFoundException;\n@@ -18,28 +17,30 @@ import org.apache.log4j.Logger;\n  * \n  * \n  */\n+\n+\n public class ErrorMetadataTableConfigHelper extends MetadataTableConfigHelper {\n     @Override\n     public void configure(TableOperations tops) throws AccumuloException, AccumuloSecurityException, TableNotFoundException {\n         super.configure(tops);\n+\n         for (IteratorUtil.IteratorScope scope : IteratorUtil.IteratorScope.values()) {\n             configureToDropBadData(tops, scope.name());\n         }\n     }\n-    \n+\n     @Override\n     public void setup(String tableName, Configuration config, Logger log) throws IllegalArgumentException {\n-        \n         this.log = log;\n         this.conf = config;\n         this.tableName = conf.get(ErrorShardedDataTypeHandler.ERROR_PROP_PREFIX + ShardedDataTypeHandler.METADATA_TABLE_NAME, null);\n-        \n         if (this.tableName == null || !this.tableName.equals(tableName)) {\n             throw new IllegalArgumentException(\"No Such Table: \" + tableName);\n         }\n     }\n     \n     // MetricsFileProtoIngestHelper creates nonsense field names, each containing a '.'\n+\n     private void configureToDropBadData(TableOperations tops, String scopeName) throws AccumuloSecurityException, AccumuloException, TableNotFoundException {\n         String stem = String.format(\"%s%s.%s\", Property.TABLE_ITERATOR_PREFIX, scopeName, \"dropBadData\");\n         setPropertyIfNecessary(this.tableName, stem, \"30,org.apache.accumulo.core.iterators.user.RegExFilter\", tops, log);\n@@ -47,4 +48,4 @@ public class ErrorMetadataTableConfigHelper extends MetadataTableConfigHelper {\n         setPropertyIfNecessary(this.tableName, stem + \".opt.rowRegex\", \".*\\\\..*\", tops, log);\n         setPropertyIfNecessary(this.tableName, stem + \".opt.encoding\", \"UTF-8\", tops, log);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "10",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "10",
                    "severity": "error",
                    "message": "Accumulo non-public classes imported",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
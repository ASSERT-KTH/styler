{
    "project_name": "graphfoundation-ongdb",
    "error_id": "825",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "12",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "291",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "307",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "310",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "319",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "328",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "337",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "346",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/825/InputEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/825/InputEntity.java\nindex 4021adb9f8e..1ccb2a6d06b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/825/InputEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/825/InputEntity.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input;\n \n import java.io.IOException;\n@@ -30,331 +31,324 @@ import java.util.List;\n  */\n public class InputEntity implements InputEntityVisitor, Cloneable\n {\n-    public static final Object[] NO_PROPERTIES = new Object[0];\n-    public static final String[] NO_LABELS = new String[0];\n-\n-    private final InputEntityVisitor delegate;\n-\n-    public InputEntity( InputEntityVisitor delegate )\n-    {\n-        this.delegate = delegate;\n-        clear();\n-    }\n-\n-    public InputEntity()\n-    {\n-        this( InputEntityVisitor.NULL );\n-    }\n-\n-    public boolean hasPropertyId;\n-    public long propertyId;\n-    public boolean hasIntPropertyKeyIds;\n-    public final List<Object> properties = new ArrayList<>();\n-\n-    public boolean hasLongId;\n-    public long longId;\n-    public Object objectId;\n-    public Group idGroup;\n-\n-    public final List<String> labels = new ArrayList<>();\n-    public boolean hasLabelField;\n-    public long labelField;\n-\n-    public boolean hasLongStartId;\n-    public long longStartId;\n-    public Object objectStartId;\n-    public Group startIdGroup;\n-\n-    public boolean hasLongEndId;\n-    public long longEndId;\n-    public Object objectEndId;\n-    public Group endIdGroup;\n-\n-    public boolean hasIntType;\n-    public int intType;\n-    public String stringType;\n-\n-    private boolean end;\n-\n-    @Override\n-    public boolean propertyId( long nextProp )\n-    {\n-        checkClear();\n-        hasPropertyId = true;\n-        propertyId = nextProp;\n-        return delegate.propertyId( nextProp );\n-    }\n-\n-    @Override\n-    public boolean property( String key, Object value )\n-    {\n-        checkClear();\n-        properties.add( key );\n-        properties.add( value );\n-        return delegate.property( key, value );\n-    }\n-\n-    @Override\n-    public boolean property( int propertyKeyId, Object value )\n-    {\n-        checkClear();\n-        hasIntPropertyKeyIds = true;\n-        properties.add( propertyKeyId );\n-        properties.add( value );\n-        return delegate.property( propertyKeyId, value );\n-    }\n-\n-    @Override\n-    public boolean id( long id )\n-    {\n-        checkClear();\n-        hasLongId = true;\n-        longId = id;\n-        return delegate.id( id );\n-    }\n-\n-    @Override\n-    public boolean id( Object id, Group group )\n-    {\n-        checkClear();\n-        objectId = id;\n-        idGroup = group;\n-        return delegate.id( id, group );\n-    }\n-\n-    @Override\n-    public boolean labels( String[] labels )\n-    {\n-        checkClear();\n-        Collections.addAll( this.labels, labels );\n-        return delegate.labels( labels );\n-    }\n-\n-    @Override\n-    public boolean labelField( long labelField )\n-    {\n-        checkClear();\n-        hasLabelField = true;\n-        this.labelField = labelField;\n-        return delegate.labelField( labelField );\n-    }\n-\n-    @Override\n-    public boolean startId( long id )\n-    {\n-        checkClear();\n-        hasLongStartId = true;\n-        longStartId = id;\n-        return delegate.startId( id );\n-    }\n-\n-    @Override\n-    public boolean startId( Object id, Group group )\n-    {\n-        checkClear();\n-        objectStartId = id;\n-        startIdGroup = group;\n-        return delegate.startId( id, group );\n-    }\n-\n-    @Override\n-    public boolean endId( long id )\n-    {\n-        checkClear();\n-        hasLongEndId = true;\n-        longEndId = id;\n-        return delegate.endId( id );\n-    }\n-\n-    @Override\n-    public boolean endId( Object id, Group group )\n-    {\n-        checkClear();\n-        objectEndId = id;\n-        endIdGroup = group;\n-        return delegate.endId( id, group );\n-    }\n-\n-    @Override\n-    public boolean type( int type )\n-    {\n-        checkClear();\n-        hasIntType = true;\n-        intType = type;\n-        return delegate.type( type );\n-    }\n-\n-    @Override\n-    public boolean type( String type )\n+  public static final Object[] NO_PROPERTIES = new Object[0];\n+  public static final String[] NO_LABELS = new String[0];\n+\n+  private final InputEntityVisitor delegate;\n+\n+  public InputEntity(InputEntityVisitor delegate)\n+  {\n+    this.delegate = delegate;\n+    clear();\n+  }\n+\n+  public InputEntity()\n+  {\n+    this(InputEntityVisitor.NULL);\n+  }\n+\n+  public boolean hasPropertyId;\n+  public long propertyId;\n+  public boolean hasIntPropertyKeyIds;\n+  public final List<Object> properties = new ArrayList<>();\n+\n+  public boolean hasLongId;\n+  public long longId;\n+  public Object objectId;\n+  public Group idGroup;\n+\n+  public final List<String> labels = new ArrayList<>();\n+  public boolean hasLabelField;\n+  public long labelField;\n+\n+  public boolean hasLongStartId;\n+  public long longStartId;\n+  public Object objectStartId;\n+  public Group startIdGroup;\n+\n+  public boolean hasLongEndId;\n+  public long longEndId;\n+  public Object objectEndId;\n+  public Group endIdGroup;\n+\n+  public boolean hasIntType;\n+  public int intType;\n+  public String stringType;\n+\n+  private boolean end;\n+\n+  @Override\n+  public boolean propertyId(long nextProp)\n+  {\n+    checkClear();\n+    hasPropertyId = true;\n+    propertyId = nextProp;\n+    return delegate.propertyId(nextProp);\n+  }\n+\n+  @Override\n+  public boolean property(String key, Object value)\n+  {\n+    checkClear();\n+    properties.add(key);\n+    properties.add(value);\n+    return delegate.property(key, value);\n+  }\n+\n+  @Override\n+  public boolean property(int propertyKeyId, Object value)\n+  {\n+    checkClear();\n+    hasIntPropertyKeyIds = true;\n+    properties.add(propertyKeyId);\n+    properties.add(value);\n+    return delegate.property(propertyKeyId, value);\n+  }\n+\n+  @Override\n+  public boolean id(long id)\n+  {\n+    checkClear();\n+    hasLongId = true;\n+    longId = id;\n+    return delegate.id(id);\n+  }\n+\n+  @Override\n+  public boolean id(Object id, Group group)\n+  {\n+    checkClear();\n+    objectId = id;\n+    idGroup = group;\n+    return delegate.id(id, group);\n+  }\n+\n+  @Override\n+  public boolean labels(String[] labels)\n+  {\n+    checkClear();\n+    Collections.addAll(this.labels, labels);\n+    return delegate.labels(labels);\n+  }\n+\n+  @Override\n+  public boolean labelField(long labelField)\n+  {\n+    checkClear();\n+    hasLabelField = true;\n+    this.labelField = labelField;\n+    return delegate.labelField(labelField);\n+  }\n+\n+  @Override\n+  public boolean startId(long id)\n+  {\n+    checkClear();\n+    hasLongStartId = true;\n+    longStartId = id;\n+    return delegate.startId(id);\n+  }\n+\n+  @Override\n+  public boolean startId(Object id, Group group)\n+  {\n+    checkClear();\n+    objectStartId = id;\n+    startIdGroup = group;\n+    return delegate.startId(id, group);\n+  }\n+\n+  @Override\n+  public boolean endId(long id)\n+  {\n+    checkClear();\n+    hasLongEndId = true;\n+    longEndId = id;\n+    return delegate.endId(id);\n+  }\n+\n+  @Override\n+  public boolean endId(Object id, Group group)\n+  {\n+    checkClear();\n+    objectEndId = id;\n+    endIdGroup = group;\n+    return delegate.endId(id, group);\n+  }\n+\n+  @Override\n+  public boolean type(int type)\n+  {\n+    checkClear();\n+    hasIntType = true;\n+    intType = type;\n+    return delegate.type(type);\n+  }\n+\n+  @Override\n+  public boolean type(String type)\n+  {\n+    checkClear();\n+    stringType = type;\n+    return delegate.type(type);\n+  }\n+\n+  @Override\n+  public void endOfEntity() throws IOException\n+  {\n+    // Mark that the next call to any data method should clear the state\n+    end = true;\n+    delegate.endOfEntity();\n+  }\n+\n+  public String[] labels()\n+  {\n+    return labels.toArray(new String[labels.size()]);\n+  }\n+\n+  public Object[] properties()\n+  {\n+    return properties.toArray();\n+  }\n+\n+  public Object id()\n+  {\n+    return hasLongId ? longId : objectId;\n+  }\n+\n+  public Object endId()\n+  {\n+    return hasLongEndId ? longEndId : objectEndId;\n+  }\n+\n+  public Object startId()\n+  {\n+    return hasLongStartId ? longStartId : objectStartId;\n+  }\n+\n+  private void checkClear()\n+  {\n+    if (end)\n     {\n-        checkClear();\n-        stringType = type;\n-        return delegate.type( type );\n+      clear();\n     }\n-\n-    @Override\n-    public void endOfEntity() throws IOException\n+  }\n+\n+  private void clear()\n+  {\n+    end = false;\n+    hasPropertyId = false;\n+    propertyId = -1;\n+    hasIntPropertyKeyIds = false;\n+    properties.clear();\n+    hasLongId = false;\n+    longId = -1;\n+    objectId = null;\n+    idGroup = Group.GLOBAL;\n+    labels.clear();\n+    hasLabelField = false;\n+    labelField = -1;\n+    hasLongStartId = false;\n+    longStartId = -1;\n+    objectStartId = null;\n+    startIdGroup = Group.GLOBAL;\n+    hasLongEndId = false;\n+    longEndId = -1;\n+    objectEndId = null;\n+    endIdGroup = Group.GLOBAL;\n+    hasIntType = false;\n+    intType = -1;\n+    stringType = null;\n+  }\n+\n+  @Override\n+  public void close() throws IOException\n+  {\n+    delegate.close();\n+  }\n+\n+  public int propertyCount()\n+  {\n+    return properties.size() / 2;\n+  }\n+\n+  public Object propertyKey(int i)\n+  {\n+    return properties.get(i * 2);\n+  }\n+\n+  public Object propertyValue(int i)\n+  {\n+    return properties.get(i * 2 + 1);\n+  }\n+\n+  public void replayOnto(InputEntityVisitor visitor) throws IOException\n+  {\n+    // properties\n+    if (hasPropertyId)\n     {\n-        // Mark that the next call to any data method should clear the state\n-        end = true;\n-        delegate.endOfEntity();\n-    }\n-\n-    public String[] labels()\n+      visitor.propertyId(propertyId);\n+    } else if (!properties.isEmpty())\n     {\n-        return labels.toArray( new String[labels.size()] );\n+      int propertyCount = propertyCount();\n+      for (int i = 0; i < propertyCount; i++)\n+      {\n+        if (hasIntPropertyKeyIds)\n+        {\n+          visitor.property((Integer) propertyKey(i), propertyValue(i));\n+        } else\n+        {\n+          visitor.property((String) propertyKey(i), propertyValue(i));\n+        }\n+      }\n     }\n \n-    public Object[] properties()\n+    // id\n+    if (hasLongId)\n     {\n-        return properties.toArray();\n-    }\n-\n-    public Object id()\n+      visitor.id(longId);\n+    } else if (objectId != null)\n     {\n-        return hasLongId ? longId : objectId;\n+      visitor.id(objectId, idGroup);\n     }\n \n-    public Object endId()\n+    // labels\n+    if (hasLabelField)\n     {\n-        return hasLongEndId ? longEndId : objectEndId;\n-    }\n-\n-    public Object startId()\n+      visitor.labelField(labelField);\n+    } else if (!labels.isEmpty())\n     {\n-        return hasLongStartId ? longStartId : objectStartId;\n+      visitor.labels(labels.toArray(new String[labels.size()]));\n     }\n \n-    private void checkClear()\n+    // start id\n+    if (hasLongStartId)\n     {\n-        if ( end )\n-        {\n-            clear();\n-        }\n-    }\n-\n-    private void clear()\n+      visitor.startId(longStartId);\n+    } else if (objectStartId != null)\n     {\n-        end = false;\n-        hasPropertyId = false;\n-        propertyId = -1;\n-        hasIntPropertyKeyIds = false;\n-        properties.clear();\n-        hasLongId = false;\n-        longId = -1;\n-        objectId = null;\n-        idGroup = Group.GLOBAL;\n-        labels.clear();\n-        hasLabelField = false;\n-        labelField = -1;\n-        hasLongStartId = false;\n-        longStartId = -1;\n-        objectStartId = null;\n-        startIdGroup = Group.GLOBAL;\n-        hasLongEndId = false;\n-        longEndId = -1;\n-        objectEndId = null;\n-        endIdGroup = Group.GLOBAL;\n-        hasIntType = false;\n-        intType = -1;\n-        stringType = null;\n+      visitor.startId(objectStartId, startIdGroup);\n     }\n \n-    @Override\n-    public void close() throws IOException\n+    // end id\n+    if (hasLongEndId)\n     {\n-        delegate.close();\n-    }\n-\n-    public int propertyCount()\n+      visitor.endId(longEndId);\n+    } else if (objectEndId != null)\n     {\n-        return properties.size() / 2;\n+      visitor.endId(objectEndId, endIdGroup);\n     }\n \n-    public Object propertyKey( int i )\n+    // type\n+    if (hasIntType)\n     {\n-        return properties.get( i * 2 );\n-    }\n-\n-    public Object propertyValue( int i )\n+      visitor.type(intType);\n+    } else if (stringType != null)\n     {\n-        return properties.get( i * 2 + 1 );\n+      visitor.type(stringType);\n     }\n \n-    public void replayOnto( InputEntityVisitor visitor ) throws IOException\n-    {\n-        // properties\n-        if ( hasPropertyId )\n-        {\n-            visitor.propertyId( propertyId );\n-        }\n-        else if ( !properties.isEmpty() )\n-        {\n-            int propertyCount = propertyCount();\n-            for ( int i = 0; i < propertyCount; i++ )\n-            {\n-                if ( hasIntPropertyKeyIds )\n-                {\n-                    visitor.property( (Integer) propertyKey( i ), propertyValue( i ) );\n-                }\n-                else\n-                {\n-                    visitor.property( (String) propertyKey( i ), propertyValue( i ) );\n-                }\n-            }\n-        }\n-\n-        // id\n-        if ( hasLongId )\n-        {\n-            visitor.id( longId );\n-        }\n-        else if ( objectId != null )\n-        {\n-            visitor.id( objectId, idGroup );\n-        }\n-\n-        // labels\n-        if ( hasLabelField )\n-        {\n-            visitor.labelField( labelField );\n-        }\n-        else if ( !labels.isEmpty() )\n-        {\n-            visitor.labels( labels.toArray( new String[labels.size()] ) );\n-        }\n-\n-        // start id\n-        if ( hasLongStartId )\n-        {\n-            visitor.startId( longStartId );\n-        }\n-        else if ( objectStartId != null )\n-        {\n-            visitor.startId( objectStartId, startIdGroup );\n-        }\n-\n-        // end id\n-        if ( hasLongEndId )\n-        {\n-            visitor.endId( longEndId );\n-        }\n-        else if ( objectEndId != null )\n-        {\n-            visitor.endId( objectEndId, endIdGroup );\n-        }\n-\n-        // type\n-        if ( hasIntType )\n-        {\n-            visitor.type( intType );\n-        }\n-        else if ( stringType != null )\n-        {\n-            visitor.type( stringType );\n-        }\n-\n-        // all done\n-        visitor.endOfEntity();\n-    }\n+    // all done\n+    visitor.endOfEntity();\n+  }\n }\n",
            "diff_size": 409
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/825/InputEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/825/InputEntity.java\nindex 4021adb9f8e..77aae5ff9d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/825/InputEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/825/InputEntity.java\n@@ -47,31 +47,39 @@ public class InputEntity implements InputEntityVisitor, Cloneable\n     }\n \n     public boolean hasPropertyId;\n-    public long propertyId;\n-    public boolean hasIntPropertyKeyIds;\n-    public final List<Object> properties = new ArrayList<>();\n+\n+public long propertyId;\n+\n+public boolean hasIntPropertyKeyIds;\n+\n+public final List<Object> properties = new ArrayList<>();\n \n     public boolean hasLongId;\n-    public long longId;\n+\n+public long longId;\n     public Object objectId;\n     public Group idGroup;\n \n     public final List<String> labels = new ArrayList<>();\n     public boolean hasLabelField;\n-    public long labelField;\n+\n+public long labelField;\n \n     public boolean hasLongStartId;\n-    public long longStartId;\n+\n+public long longStartId;\n     public Object objectStartId;\n     public Group startIdGroup;\n \n     public boolean hasLongEndId;\n-    public long longEndId;\n+\n+public long longEndId;\n     public Object objectEndId;\n     public Group endIdGroup;\n \n     public boolean hasIntType;\n-    public int intType;\n+\n+public int intType;\n     public String stringType;\n \n     private boolean end;\n@@ -357,4 +365,4 @@ public class InputEntity implements InputEntityVisitor, Cloneable\n         // all done\n         visitor.endOfEntity();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "286",
                    "column": "33",
                    "severity": "error",
                    "message": "'/' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "291",
                    "column": "33",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "296",
                    "column": "33",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/825/InputEntity.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/825/InputEntity.java\nindex 4021adb9f8e..798d936b6df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/825/InputEntity.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/825/InputEntity.java\n@@ -28,11 +28,12 @@ import java.util.List;\n  * Simple utility for gathering all information about an {@link InputEntityVisitor} and exposing getters\n  * for that data. Easier to work with than purely visitor-based implementation in tests.\n  */\n+\n public class InputEntity implements InputEntityVisitor, Cloneable\n {\n     public static final Object[] NO_PROPERTIES = new Object[0];\n-    public static final String[] NO_LABELS = new String[0];\n \n+    public static final String[] NO_LABELS = new String[0];\n     private final InputEntityVisitor delegate;\n \n     public InputEntity( InputEntityVisitor delegate )\n@@ -43,39 +44,53 @@ public class InputEntity implements InputEntityVisitor, Cloneable\n \n     public InputEntity()\n     {\n-        this( InputEntityVisitor.NULL );\n+        this ( InputEntityVisitor.NULL );\n     }\n \n     public boolean hasPropertyId;\n+\n     public long propertyId;\n+\n     public boolean hasIntPropertyKeyIds;\n+\n     public final List<Object> properties = new ArrayList<>();\n \n     public boolean hasLongId;\n+\n     public long longId;\n+\n     public Object objectId;\n+\n     public Group idGroup;\n \n     public final List<String> labels = new ArrayList<>();\n+\n     public boolean hasLabelField;\n+\n     public long labelField;\n \n     public boolean hasLongStartId;\n+\n     public long longStartId;\n+\n     public Object objectStartId;\n+\n     public Group startIdGroup;\n \n     public boolean hasLongEndId;\n+\n     public long longEndId;\n+\n     public Object objectEndId;\n+\n     public Group endIdGroup;\n \n     public boolean hasIntType;\n+\n     public int intType;\n-    public String stringType;\n \n+    public String stringType;\n     private boolean end;\n-\n     @Override\n     public boolean propertyId( long nextProp )\n     {\n@@ -237,26 +252,26 @@ public class InputEntity implements InputEntityVisitor, Cloneable\n     {\n         end = false;\n         hasPropertyId = false;\n-        propertyId = -1;\n+        propertyId = - 1;\n         hasIntPropertyKeyIds = false;\n         properties.clear();\n         hasLongId = false;\n-        longId = -1;\n+        longId = - 1;\n         objectId = null;\n         idGroup = Group.GLOBAL;\n         labels.clear();\n         hasLabelField = false;\n-        labelField = -1;\n+        labelField = - 1;\n         hasLongStartId = false;\n-        longStartId = -1;\n+        longStartId = - 1;\n         objectStartId = null;\n         startIdGroup = Group.GLOBAL;\n         hasLongEndId = false;\n-        longEndId = -1;\n+        longEndId = - 1;\n         objectEndId = null;\n         endIdGroup = Group.GLOBAL;\n         hasIntType = false;\n-        intType = -1;\n+        intType = - 1;\n         stringType = null;\n     }\n \n@@ -268,17 +283,17 @@ public class InputEntity implements InputEntityVisitor, Cloneable\n \n     public int propertyCount()\n     {\n-        return properties.size() / 2;\n+        return properties.size()/ 2;\n     }\n \n     public Object propertyKey( int i )\n     {\n-        return properties.get( i * 2 );\n+        return properties.get( i* 2 );\n     }\n \n     public Object propertyValue( int i )\n     {\n-        return properties.get( i * 2 + 1 );\n+        return properties.get( i* 2 + 1 );\n     }\n \n     public void replayOnto( InputEntityVisitor visitor ) throws IOException\n@@ -288,7 +303,8 @@ public class InputEntity implements InputEntityVisitor, Cloneable\n         {\n             visitor.propertyId( propertyId );\n         }\n-        else if ( !properties.isEmpty() )\n+        else\n+        if ( ! properties.isEmpty() )\n         {\n             int propertyCount = propertyCount();\n             for ( int i = 0; i < propertyCount; i++ )\n@@ -305,56 +321,67 @@ public class InputEntity implements InputEntityVisitor, Cloneable\n         }\n \n         // id\n+\n         if ( hasLongId )\n         {\n             visitor.id( longId );\n         }\n-        else if ( objectId != null )\n+        else\n+        if ( objectId != null )\n         {\n             visitor.id( objectId, idGroup );\n         }\n \n         // labels\n+\n         if ( hasLabelField )\n         {\n             visitor.labelField( labelField );\n         }\n-        else if ( !labels.isEmpty() )\n+        else\n+        if ( ! labels.isEmpty() )\n         {\n             visitor.labels( labels.toArray( new String[labels.size()] ) );\n         }\n \n         // start id\n+\n         if ( hasLongStartId )\n         {\n             visitor.startId( longStartId );\n         }\n-        else if ( objectStartId != null )\n+        else\n+        if ( objectStartId != null )\n         {\n             visitor.startId( objectStartId, startIdGroup );\n         }\n \n         // end id\n+\n         if ( hasLongEndId )\n         {\n             visitor.endId( longEndId );\n         }\n-        else if ( objectEndId != null )\n+        else\n+        if ( objectEndId != null )\n         {\n             visitor.endId( objectEndId, endIdGroup );\n         }\n \n         // type\n+\n         if ( hasIntType )\n         {\n             visitor.type( intType );\n         }\n-        else if ( stringType != null )\n+        else\n+        if ( stringType != null )\n         {\n             visitor.type( stringType );\n         }\n \n         // all done\n+\n         visitor.endOfEntity();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 50
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
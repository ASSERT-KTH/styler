{
    "project_name": "neo4j-neo4j",
    "error_id": "1843",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "89",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1843/ExecutionSupervisors.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1843/ExecutionSupervisors.java\nindex e83738558c9..6c921c6a874 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1843/ExecutionSupervisors.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1843/ExecutionSupervisors.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport.staging;\n \n import org.neo4j.internal.batchimport.Configuration;\n@@ -33,37 +34,39 @@ public class ExecutionSupervisors\n \n     /**\n      * Using an {@link ExecutionMonitors#invisible() invisible} monitor.\n+     *\n      * @param stage {@link Stage} to supervise.\n      * @see #superviseDynamicExecution(ExecutionMonitor, Stage)\n      */\n-    public static void superviseDynamicExecution( Stage stage )\n+    public static void superviseDynamicExecution(Stage stage)\n     {\n-        superviseDynamicExecution( ExecutionMonitors.invisible(), stage );\n+        superviseDynamicExecution(ExecutionMonitors.invisible(), stage);\n     }\n \n     /**\n      * With {@link Configuration#DEFAULT}.\n+     *\n      * @param monitor {@link ExecutionMonitor} notifying user about progress.\n-     * @param stage {@link Stage} to supervise.\n+     * @param stage   {@link Stage} to supervise.\n      * @see #superviseDynamicExecution(ExecutionMonitor, Configuration, Stage)\n      */\n-    public static void superviseDynamicExecution( ExecutionMonitor monitor, Stage stage )\n+    public static void superviseDynamicExecution(ExecutionMonitor monitor, Stage stage)\n     {\n-        superviseDynamicExecution( monitor, Configuration.DEFAULT, stage );\n+        superviseDynamicExecution(monitor, Configuration.DEFAULT, stage);\n     }\n \n     /**\n      * Supervises an execution with the given monitor AND a {@link DynamicProcessorAssigner} to give\n      * the execution a dynamic and optimal nature.\n-     * @param monitor {@link ExecutionMonitor} notifying user about progress.\n-     * @param config {@link Configuration} of the import.\n-     * @param stage {@link Stage} to supervise.\n      *\n+     * @param monitor {@link ExecutionMonitor} notifying user about progress.\n+     * @param config  {@link Configuration} of the import.\n+     * @param stage   {@link Stage} to supervise.\n      * @see #superviseExecution(ExecutionMonitor, Stage)\n      */\n-    public static void superviseDynamicExecution( ExecutionMonitor monitor, Configuration config, Stage stage )\n+    public static void superviseDynamicExecution(ExecutionMonitor monitor, Configuration config, Stage stage)\n     {\n-        superviseExecution( withDynamicProcessorAssignment( monitor, config ), stage );\n+        superviseExecution(withDynamicProcessorAssignment(monitor, config), stage);\n     }\n \n     /**\n@@ -71,21 +74,20 @@ public class ExecutionSupervisors\n      * execution.\n      *\n      * @param monitor {@link ExecutionMonitor} to get insight into the execution.\n-     * @param stage {@link Stage stages} to execute.\n+     * @param stage   {@link Stage stages} to execute.\n      */\n-    public static void superviseExecution( ExecutionMonitor monitor, Stage stage )\n+    public static void superviseExecution(ExecutionMonitor monitor, Stage stage)\n     {\n-        ExecutionSupervisor supervisor = new ExecutionSupervisor( Clocks.systemClock(), monitor );\n+        ExecutionSupervisor supervisor = new ExecutionSupervisor(Clocks.systemClock(), monitor);\n         StageExecution execution = null;\n         try\n         {\n             execution = stage.execute();\n-            supervisor.supervise( execution );\n-        }\n-        finally\n+            supervisor.supervise(execution);\n+        } finally\n         {\n             stage.close();\n-            if ( execution != null )\n+            if (execution != null)\n             {\n                 execution.assertHealthy();\n             }\n@@ -97,13 +99,13 @@ public class ExecutionSupervisors\n      * constantly assigning and reevaluating an optimal number of processors to all individual steps.\n      *\n      * @param monitor {@link ExecutionMonitor} to decorate.\n-     * @param config {@link Configuration} that the {@link DynamicProcessorAssigner} will use. Max total processors\n-     * in a {@link Stage} will be the smallest of that value and {@link Runtime#availableProcessors()}.\n+     * @param config  {@link Configuration} that the {@link DynamicProcessorAssigner} will use. Max total processors\n+     *                in a {@link Stage} will be the smallest of that value and {@link Runtime#availableProcessors()}.\n      * @return the decorated monitor with dynamic processor assignment capabilities.\n      */\n-    public static ExecutionMonitor withDynamicProcessorAssignment( ExecutionMonitor monitor, Configuration config )\n+    public static ExecutionMonitor withDynamicProcessorAssignment(ExecutionMonitor monitor, Configuration config)\n     {\n-        DynamicProcessorAssigner dynamicProcessorAssigner = new DynamicProcessorAssigner( config );\n-        return new MultiExecutionMonitor( monitor, dynamicProcessorAssigner );\n+        DynamicProcessorAssigner dynamicProcessorAssigner = new DynamicProcessorAssigner(config);\n+        return new MultiExecutionMonitor(monitor, dynamicProcessorAssigner);\n     }\n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
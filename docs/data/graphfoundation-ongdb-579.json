{
    "project_name": "graphfoundation-ongdb",
    "error_id": "579",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "91",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "61",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "77",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "113",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "123",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "143",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/579/FulltextTransactionEventUpdater.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/579/FulltextTransactionEventUpdater.java\nindex 10ad6aec731..cdb39121600 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/579/FulltextTransactionEventUpdater.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/579/FulltextTransactionEventUpdater.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.fulltext;\n \n import java.io.IOException;\n@@ -34,148 +35,143 @@ import org.neo4j.graphdb.event.TransactionEventHandler;\n \n class FulltextTransactionEventUpdater implements TransactionEventHandler<FulltextTransactionEventUpdater.FulltextTransactionContext>\n {\n-    private final FulltextProviderImpl fulltextProvider;\n-    private final FulltextUpdateApplier applier;\n-\n-    FulltextTransactionEventUpdater( FulltextProviderImpl fulltextProvider, FulltextUpdateApplier applier )\n+  private final FulltextProviderImpl fulltextProvider;\n+  private final FulltextUpdateApplier applier;\n+\n+  FulltextTransactionEventUpdater(FulltextProviderImpl fulltextProvider, FulltextUpdateApplier applier)\n+  {\n+    this.fulltextProvider = fulltextProvider;\n+    this.applier = applier;\n+  }\n+\n+  @Override\n+  public FulltextTransactionContext beforeCommit(TransactionData data)\n+  {\n+    PrimitiveLongObjectMap<Map<String, Object>> nodeMap = Primitive.longObjectMap();\n+    PrimitiveLongObjectMap<Map<String, Object>> relationshipMap = Primitive.longObjectMap();\n+    Lock lock = fulltextProvider.readLockIndexConfiguration();\n+    FulltextTransactionContext fulltextTransactionContext = new FulltextTransactionContext(nodeMap, relationshipMap, lock);\n+\n+    String[] nodeProperties = fulltextProvider.getNodeProperties();\n+    data.removedNodeProperties().forEach(propertyEntry ->\n     {\n-        this.fulltextProvider = fulltextProvider;\n-        this.applier = applier;\n-    }\n-\n-    @Override\n-    public FulltextTransactionContext beforeCommit( TransactionData data )\n+      try\n+      {\n+        nodeMap.put(propertyEntry.entity().getId(), propertyEntry.entity().getProperties(nodeProperties));\n+      } catch (NotFoundException e)\n+      {\n+        //This means that the node was deleted.\n+      }\n+    });\n+    data.assignedNodeProperties().forEach(\n+        propertyEntry -> nodeMap.put(propertyEntry.entity().getId(),\n+            propertyEntry.entity().getProperties(nodeProperties)));\n+\n+    String[] relationshipProperties = fulltextProvider.getRelationshipProperties();\n+    data.removedRelationshipProperties().forEach(propertyEntry ->\n     {\n-        PrimitiveLongObjectMap<Map<String,Object>> nodeMap = Primitive.longObjectMap();\n-        PrimitiveLongObjectMap<Map<String,Object>> relationshipMap = Primitive.longObjectMap();\n-        Lock lock = fulltextProvider.readLockIndexConfiguration();\n-        FulltextTransactionContext fulltextTransactionContext = new FulltextTransactionContext( nodeMap, relationshipMap, lock );\n+      try\n+      {\n+        relationshipMap.put(propertyEntry.entity().getId(),\n+            propertyEntry.entity().getProperties(relationshipProperties));\n+      } catch (NotFoundException e)\n+      {\n+        //This means that the relationship was deleted.\n+      }\n+    });\n+    data.assignedRelationshipProperties().forEach(\n+        propertyEntry -> relationshipMap.put(propertyEntry.entity().getId(),\n+            propertyEntry.entity().getProperties(relationshipProperties)));\n+    return fulltextTransactionContext;\n+  }\n+\n+  @Override\n+  public void afterCommit(TransactionData data, FulltextTransactionContext state)\n+  {\n+    RuntimeException applyException = null;\n+    List<AsyncFulltextIndexOperation> completions = new ArrayList<>();\n+    try\n+    {\n+      try\n+      {\n+        PrimitiveLongObjectMap<Map<String, Object>> nodeMap = state.getNodeMap();\n+        PrimitiveLongObjectMap<Map<String, Object>> relationshipMap = state.getRelationshipMap();\n \n-        String[] nodeProperties = fulltextProvider.getNodeProperties();\n-        data.removedNodeProperties().forEach( propertyEntry ->\n+        //update node indices\n+        for (WritableFulltext nodeIndex : fulltextProvider.writableNodeIndices())\n         {\n-            try\n-            {\n-                nodeMap.put( propertyEntry.entity().getId(), propertyEntry.entity().getProperties( nodeProperties ) );\n-            }\n-            catch ( NotFoundException e )\n-            {\n-                //This means that the node was deleted.\n-            }\n-        } );\n-        data.assignedNodeProperties().forEach(\n-                propertyEntry -> nodeMap.put( propertyEntry.entity().getId(),\n-                        propertyEntry.entity().getProperties( nodeProperties ) ) );\n-\n-        String[] relationshipProperties = fulltextProvider.getRelationshipProperties();\n-        data.removedRelationshipProperties().forEach( propertyEntry ->\n+          completions.add(applier.removePropertyData(data.removedNodeProperties(), nodeMap, nodeIndex));\n+          completions.add(applier.updatePropertyData(nodeMap, nodeIndex));\n+        }\n+\n+        //update relationship indices\n+        for (WritableFulltext relationshipIndex : fulltextProvider.writableRelationshipIndices())\n         {\n-            try\n-            {\n-                relationshipMap.put( propertyEntry.entity().getId(),\n-                        propertyEntry.entity().getProperties( relationshipProperties ) );\n-            }\n-            catch ( NotFoundException e )\n-            {\n-                //This means that the relationship was deleted.\n-            }\n-        } );\n-        data.assignedRelationshipProperties().forEach(\n-                propertyEntry -> relationshipMap.put( propertyEntry.entity().getId(),\n-                        propertyEntry.entity().getProperties( relationshipProperties ) ) );\n-        return fulltextTransactionContext;\n-    }\n+          completions.add(applier.removePropertyData(data.removedRelationshipProperties(), relationshipMap, relationshipIndex));\n+          completions.add(applier.updatePropertyData(relationshipMap, relationshipIndex));\n+        }\n+      } catch (IOException e)\n+      {\n+        applyException = new RuntimeException(\"Failed to submit all index updates.\", e);\n+      }\n \n-    @Override\n-    public void afterCommit( TransactionData data, FulltextTransactionContext state )\n-    {\n-        RuntimeException applyException = null;\n-        List<AsyncFulltextIndexOperation> completions = new ArrayList<>();\n+      for (AsyncFulltextIndexOperation completion : completions)\n+      {\n         try\n         {\n-            try\n-            {\n-                PrimitiveLongObjectMap<Map<String,Object>> nodeMap = state.getNodeMap();\n-                PrimitiveLongObjectMap<Map<String,Object>> relationshipMap = state.getRelationshipMap();\n-\n-                //update node indices\n-                for ( WritableFulltext nodeIndex : fulltextProvider.writableNodeIndices() )\n-                {\n-                    completions.add( applier.removePropertyData( data.removedNodeProperties(), nodeMap, nodeIndex ) );\n-                    completions.add( applier.updatePropertyData( nodeMap, nodeIndex ) );\n-                }\n-\n-                //update relationship indices\n-                for ( WritableFulltext relationshipIndex : fulltextProvider.writableRelationshipIndices() )\n-                {\n-                    completions.add( applier.removePropertyData( data.removedRelationshipProperties(), relationshipMap, relationshipIndex ) );\n-                    completions.add( applier.updatePropertyData( relationshipMap, relationshipIndex ) );\n-                }\n-            }\n-            catch ( IOException e )\n-            {\n-                applyException = new RuntimeException( \"Failed to submit all index updates.\", e );\n-            }\n-\n-            for ( AsyncFulltextIndexOperation completion : completions )\n-            {\n-                try\n-                {\n-                    completion.awaitCompletion();\n-                }\n-                catch ( ExecutionException e )\n-                {\n-                    if ( applyException == null )\n-                    {\n-                        applyException = new RuntimeException( \"Failed to update fulltext index. See suppressed exceptions for details.\" );\n-                    }\n-                    applyException.addSuppressed( e );\n-                }\n-            }\n-            if ( applyException != null )\n-            {\n-                throw applyException;\n-            }\n-        }\n-        finally\n+          completion.awaitCompletion();\n+        } catch (ExecutionException e)\n         {\n-            state.release();\n+          if (applyException == null)\n+          {\n+            applyException = new RuntimeException(\"Failed to update fulltext index. See suppressed exceptions for details.\");\n+          }\n+          applyException.addSuppressed(e);\n         }\n+      }\n+      if (applyException != null)\n+      {\n+        throw applyException;\n+      }\n+    } finally\n+    {\n+      state.release();\n     }\n-\n-    @Override\n-    public void afterRollback( TransactionData data, FulltextTransactionContext state )\n+  }\n+\n+  @Override\n+  public void afterRollback(TransactionData data, FulltextTransactionContext state)\n+  {\n+    state.release();\n+  }\n+\n+  public static class FulltextTransactionContext\n+  {\n+    private final PrimitiveLongObjectMap<Map<String, Object>> nodeMap;\n+    private final PrimitiveLongObjectMap<Map<String, Object>> relationshipMap;\n+    private final Lock lock;\n+\n+    private FulltextTransactionContext(PrimitiveLongObjectMap<Map<String, Object>> nodeMap,\n+                                       PrimitiveLongObjectMap<Map<String, Object>> relationshipMap, Lock lock)\n     {\n-        state.release();\n+      this.nodeMap = nodeMap;\n+      this.relationshipMap = relationshipMap;\n+      this.lock = lock;\n     }\n \n-    public static class FulltextTransactionContext\n+    public PrimitiveLongObjectMap<Map<String, Object>> getRelationshipMap()\n     {\n-        private final PrimitiveLongObjectMap<Map<String,Object>> nodeMap;\n-        private final PrimitiveLongObjectMap<Map<String,Object>> relationshipMap;\n-        private final Lock lock;\n-\n-        private FulltextTransactionContext( PrimitiveLongObjectMap<Map<String,Object>> nodeMap,\n-                PrimitiveLongObjectMap<Map<String,Object>> relationshipMap, Lock lock )\n-        {\n-            this.nodeMap = nodeMap;\n-            this.relationshipMap = relationshipMap;\n-            this.lock = lock;\n-        }\n-\n-        public PrimitiveLongObjectMap<Map<String,Object>> getRelationshipMap()\n-        {\n-            return relationshipMap;\n-        }\n+      return relationshipMap;\n+    }\n \n-        public PrimitiveLongObjectMap<Map<String,Object>> getNodeMap()\n-        {\n-            return nodeMap;\n-        }\n+    public PrimitiveLongObjectMap<Map<String, Object>> getNodeMap()\n+    {\n+      return nodeMap;\n+    }\n \n-        public void release()\n-        {\n-            lock.unlock();\n-        }\n+    public void release()\n+    {\n+      lock.unlock();\n     }\n+  }\n }\n",
            "diff_size": 200
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 192).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/579/FulltextTransactionEventUpdater.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/579/FulltextTransactionEventUpdater.java\nindex 10ad6aec731..d9e63ed0d96 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/579/FulltextTransactionEventUpdater.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/579/FulltextTransactionEventUpdater.java\n@@ -63,27 +63,21 @@ class FulltextTransactionEventUpdater implements TransactionEventHandler<Fulltex\n                 //This means that the node was deleted.\n             }\n         } );\n-        data.assignedNodeProperties().forEach(\n-                propertyEntry -> nodeMap.put( propertyEntry.entity().getId(),\n-                        propertyEntry.entity().getProperties( nodeProperties ) ) );\n-\n-        String[] relationshipProperties = fulltextProvider.getRelationshipProperties();\n+        data.assignedNodeProperties().forEach( propertyEntry -> nodeMap.put( propertyEntry.entity().getId(), propertyEntry.entity().getProperties( nodeProperties ) ) );\n+String[] relationshipProperties = fulltextProvider.getRelationshipProperties();\n         data.removedRelationshipProperties().forEach( propertyEntry ->\n         {\n             try\n             {\n-                relationshipMap.put( propertyEntry.entity().getId(),\n-                        propertyEntry.entity().getProperties( relationshipProperties ) );\n-            }\n+                relationshipMap.put( propertyEntry.entity().getId(), propertyEntry.entity().getProperties( relationshipProperties ) );\n+    }\n             catch ( NotFoundException e )\n             {\n                 //This means that the relationship was deleted.\n             }\n         } );\n-        data.assignedRelationshipProperties().forEach(\n-                propertyEntry -> relationshipMap.put( propertyEntry.entity().getId(),\n-                        propertyEntry.entity().getProperties( relationshipProperties ) ) );\n-        return fulltextTransactionContext;\n+        data.assignedRelationshipProperties().forEach( propertyEntry -> relationshipMap.put( propertyEntry.entity().getId(), propertyEntry.entity().getProperties( relationshipProperties ) ) );\n+return fulltextTransactionContext;\n     }\n \n     @Override\n@@ -155,8 +149,7 @@ class FulltextTransactionEventUpdater implements TransactionEventHandler<Fulltex\n         private final PrimitiveLongObjectMap<Map<String,Object>> relationshipMap;\n         private final Lock lock;\n \n-        private FulltextTransactionContext( PrimitiveLongObjectMap<Map<String,Object>> nodeMap,\n-                PrimitiveLongObjectMap<Map<String,Object>> relationshipMap, Lock lock )\n+        private FulltextTransactionContext( PrimitiveLongObjectMap<Map<String,Object>> nodeMap, PrimitiveLongObjectMap<Map<String,Object>> relationshipMap, Lock lock )\n         {\n             this.nodeMap = nodeMap;\n             this.relationshipMap = relationshipMap;\n@@ -178,4 +171,4 @@ class FulltextTransactionEventUpdater implements TransactionEventHandler<Fulltex\n             lock.unlock();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
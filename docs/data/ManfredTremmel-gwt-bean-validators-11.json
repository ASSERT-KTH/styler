{
    "project_name": "ManfredTremmel-gwt-bean-validators",
    "error_id": "11",
    "information": {
        "errors": [
            {
                "line": "25",
                "column": "60",
                "severity": "warning",
                "message": "'}' at column 60 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\n  @Override\n  public void initialize(final Past constraintAnnotation) {}\n\n  @Override\n  public boolean isValid(final Date date,",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "25",
                    "column": "60",
                    "severity": "warning",
                    "message": "'}' at column 60 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/11/PastValidatorForDate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/intellij/11/PastValidatorForDate.java\nindex 0f850697cf8..ad66a5a2954 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/11/PastValidatorForDate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/intellij/11/PastValidatorForDate.java\n@@ -22,11 +22,12 @@ import javax.validation.constraints.Past;\n public class PastValidatorForDate implements ConstraintValidator<Past, Date> {\n \n   @Override\n-  public void initialize(final Past constraintAnnotation) {}\n+  public void initialize(final Past constraintAnnotation) {\n+  }\n \n   @Override\n   public boolean isValid(final Date date,\n-      final ConstraintValidatorContext constraintValidatorContext) {\n+                         final ConstraintValidatorContext constraintValidatorContext) {\n     // null values are valid\n     if (date == null) {\n       return true;\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "25",
                    "column": "60",
                    "severity": "warning",
                    "message": "'}' at column 60 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/11/PastValidatorForDate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/naturalize/11/PastValidatorForDate.java\nindex 0f850697cf8..bb54d834656 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/11/PastValidatorForDate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/naturalize/11/PastValidatorForDate.java\n@@ -34,4 +34,4 @@ public class PastValidatorForDate implements ConstraintValidator<Past, Date> {\n \n     return date.before(new Date());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'final' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/11/PastValidatorForDate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/codebuff/11/PastValidatorForDate.java\nindex 0f850697cf8..ba00a663d4a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/11/PastValidatorForDate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/codebuff/11/PastValidatorForDate.java\n@@ -8,7 +8,6 @@\n package org.hibernate.validator.internal.constraintvalidators.bv.time.past;\n \n import java.util.Date;\n-\n import javax.validation.ConstraintValidator;\n import javax.validation.ConstraintValidatorContext;\n import javax.validation.constraints.Past;\n@@ -19,19 +18,22 @@ import javax.validation.constraints.Past;\n  * @author Alaa Nassef\n  * @author Manfred Tremmel - GWT port\n  */\n+\n+\n public class PastValidatorForDate implements ConstraintValidator<Past, Date> {\n \n   @Override\n-  public void initialize(final Past constraintAnnotation) {}\n+  public void initialize(final Past constraintAnnotation) {\n+\n+  }\n \n   @Override\n   public boolean isValid(final Date date,\n-      final ConstraintValidatorContext constraintValidatorContext) {\n+    final ConstraintValidatorContext constraintValidatorContext) {\n     // null values are valid\n     if (date == null) {\n       return true;\n     }\n-\n     return date.before(new Date());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "25",
                    "column": "60",
                    "severity": "warning",
                    "message": "'}' at column 60 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "27",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "27",
                    "column": "3",
                    "severity": "warning",
                    "message": "'}' at column 3 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/11/PastValidatorForDate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/styler_three_grams/11/PastValidatorForDate.java\nindex 0f850697cf8..e82c29bf84b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/errored/1/11/PastValidatorForDate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ManfredTremmel-gwt-bean-validators/styler_three_grams/11/PastValidatorForDate.java\n@@ -22,9 +22,9 @@ import javax.validation.constraints.Past;\n public class PastValidatorForDate implements ConstraintValidator<Past, Date> {\n \n   @Override\n-  public void initialize(final Past constraintAnnotation) {}\n+  public void initialize(final Past constraintAnnotation) {\n \n-  @Override\n+  }@Override\n   public boolean isValid(final Date date,\n       final ConstraintValidatorContext constraintValidatorContext) {\n     // null values are valid\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
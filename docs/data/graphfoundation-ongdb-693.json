{
    "project_name": "graphfoundation-ongdb",
    "error_id": "693",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "26",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "26",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/693/RelationshipChainField.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/693/RelationshipChainField.java\nindex bbe4c200a15..0682547cad2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/693/RelationshipChainField.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/693/RelationshipChainField.java\n@@ -17,72 +17,73 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.repair;\n \n import org.neo4j.kernel.impl.store.record.Record;\n import org.neo4j.kernel.impl.store.record.RelationshipRecord;\n \n-@SuppressWarnings( \"boxing\" )\n+@SuppressWarnings(\"boxing\")\n public enum RelationshipChainField\n {\n-    FIRST_NEXT\n-    {\n+  FIRST_NEXT\n+      {\n         @Override\n-        public long relOf( RelationshipRecord rel )\n+        public long relOf(RelationshipRecord rel)\n         {\n-            return rel.getFirstNextRel();\n+          return rel.getFirstNextRel();\n         }\n \n         @Override\n-        public boolean endOfChain( RelationshipRecord rel )\n+        public boolean endOfChain(RelationshipRecord rel)\n         {\n-            return rel.getFirstNextRel() == Record.NO_NEXT_RELATIONSHIP.intValue();\n+          return rel.getFirstNextRel() == Record.NO_NEXT_RELATIONSHIP.intValue();\n         }\n-    },\n-    FIRST_PREV\n-    {\n+      },\n+  FIRST_PREV\n+      {\n         @Override\n-        public long relOf( RelationshipRecord rel )\n+        public long relOf(RelationshipRecord rel)\n         {\n-            return rel.getFirstPrevRel();\n+          return rel.getFirstPrevRel();\n         }\n \n         @Override\n-        public boolean endOfChain( RelationshipRecord rel )\n+        public boolean endOfChain(RelationshipRecord rel)\n         {\n-            return rel.isFirstInFirstChain();\n+          return rel.isFirstInFirstChain();\n         }\n-    },\n-    SECOND_NEXT\n-    {\n+      },\n+  SECOND_NEXT\n+      {\n         @Override\n-        public long relOf( RelationshipRecord rel )\n+        public long relOf(RelationshipRecord rel)\n         {\n-            return rel.getSecondNextRel();\n+          return rel.getSecondNextRel();\n         }\n \n         @Override\n-        public boolean endOfChain( RelationshipRecord rel )\n+        public boolean endOfChain(RelationshipRecord rel)\n         {\n-            return rel.getSecondNextRel() == Record.NO_NEXT_RELATIONSHIP.intValue();\n+          return rel.getSecondNextRel() == Record.NO_NEXT_RELATIONSHIP.intValue();\n         }\n-    },\n-    SECOND_PREV\n-    {\n+      },\n+  SECOND_PREV\n+      {\n         @Override\n-        public long relOf( RelationshipRecord rel )\n+        public long relOf(RelationshipRecord rel)\n         {\n-            return rel.getSecondPrevRel();\n+          return rel.getSecondPrevRel();\n         }\n \n         @Override\n-        public boolean endOfChain( RelationshipRecord rel )\n+        public boolean endOfChain(RelationshipRecord rel)\n         {\n-            return rel.isFirstInSecondChain();\n+          return rel.isFirstInSecondChain();\n         }\n-    };\n+      };\n \n-    public abstract long relOf( RelationshipRecord rel );\n+  public abstract long relOf(RelationshipRecord rel);\n \n-    public abstract boolean endOfChain( RelationshipRecord rel );\n+  public abstract boolean endOfChain(RelationshipRecord rel);\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/693/RelationshipChainField.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/693/RelationshipChainField.java\nindex bbe4c200a15..4155e25e240 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/693/RelationshipChainField.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/693/RelationshipChainField.java\n@@ -38,8 +38,7 @@ public enum RelationshipChainField\n         {\n             return rel.getFirstNextRel() == Record.NO_NEXT_RELATIONSHIP.intValue();\n         }\n-    },\n-    FIRST_PREV\n+    }, FIRST_PREV\n     {\n         @Override\n         public long relOf( RelationshipRecord rel )\n@@ -52,8 +51,7 @@ public enum RelationshipChainField\n         {\n             return rel.isFirstInFirstChain();\n         }\n-    },\n-    SECOND_NEXT\n+    }, SECOND_NEXT\n     {\n         @Override\n         public long relOf( RelationshipRecord rel )\n@@ -66,8 +64,7 @@ public enum RelationshipChainField\n         {\n             return rel.getSecondNextRel() == Record.NO_NEXT_RELATIONSHIP.intValue();\n         }\n-    },\n-    SECOND_PREV\n+    }, SECOND_PREV\n     {\n         @Override\n         public long relOf( RelationshipRecord rel )\n@@ -85,4 +82,4 @@ public enum RelationshipChainField\n     public abstract long relOf( RelationshipRecord rel );\n \n     public abstract boolean endOfChain( RelationshipRecord rel );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "25",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/693/RelationshipChainField.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/693/RelationshipChainField.java\nindex bbe4c200a15..2d20ed78d74 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/693/RelationshipChainField.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/693/RelationshipChainField.java\n@@ -22,67 +22,66 @@ package org.neo4j.consistency.repair;\n import org.neo4j.kernel.impl.store.record.Record;\n import org.neo4j.kernel.impl.store.record.RelationshipRecord;\n \n-@SuppressWarnings( \"boxing\" )\n+@ SuppressWarnings( \"boxing\")\n public enum RelationshipChainField\n-{\n-    FIRST_NEXT\n-    {\n-        @Override\n-        public long relOf( RelationshipRecord rel )\n-        {\n-            return rel.getFirstNextRel();\n-        }\n+{ FIRST_NEXT\n+  {\n+      @Override\n+      public long relOf( RelationshipRecord rel )\n+      {\n+          return rel.getFirstNextRel();\n+      }\n \n-        @Override\n-        public boolean endOfChain( RelationshipRecord rel )\n-        {\n-            return rel.getFirstNextRel() == Record.NO_NEXT_RELATIONSHIP.intValue();\n-        }\n-    },\n-    FIRST_PREV\n-    {\n-        @Override\n-        public long relOf( RelationshipRecord rel )\n-        {\n-            return rel.getFirstPrevRel();\n-        }\n+      @Override\n+      public boolean endOfChain( RelationshipRecord rel )\n+      {\n+          return rel.getFirstNextRel() == Record.NO_NEXT_RELATIONSHIP.intValue();\n+      }\n+  }, FIRST_PREV\n+     {\n+         @Override\n+         public long relOf( RelationshipRecord rel )\n+         {\n+             return rel.getFirstPrevRel();\n+         }\n \n-        @Override\n-        public boolean endOfChain( RelationshipRecord rel )\n-        {\n-            return rel.isFirstInFirstChain();\n-        }\n-    },\n-    SECOND_NEXT\n-    {\n-        @Override\n-        public long relOf( RelationshipRecord rel )\n+         @Override\n+         public boolean endOfChain( RelationshipRecord rel )\n+         {\n+             return rel.isFirstInFirstChain();\n+         }\n+     }, SECOND_NEXT\n         {\n-            return rel.getSecondNextRel();\n-        }\n+            @Override\n+            public long relOf( RelationshipRecord rel )\n+            {\n+                return rel.getSecondNextRel();\n+            }\n \n-        @Override\n-        public boolean endOfChain( RelationshipRecord rel )\n-        {\n-            return rel.getSecondNextRel() == Record.NO_NEXT_RELATIONSHIP.intValue();\n-        }\n-    },\n-    SECOND_PREV\n-    {\n-        @Override\n-        public long relOf( RelationshipRecord rel )\n-        {\n-            return rel.getSecondPrevRel();\n-        }\n+            @Override\n+            public boolean endOfChain( RelationshipRecord rel )\n+            {\n+                return rel.getSecondNextRel() == Record.NO_NEXT_RELATIONSHIP.intValue();\n+            }\n+        }, SECOND_PREV\n+           {\n+               @Override\n+               public long relOf( RelationshipRecord rel )\n+               {\n+                   return rel.getSecondPrevRel();\n+               }\n \n-        @Override\n-        public boolean endOfChain( RelationshipRecord rel )\n-        {\n-            return rel.isFirstInSecondChain();\n-        }\n-    };\n+               @Override\n+               public boolean endOfChain( RelationshipRecord rel )\n+               {\n+                   return rel.isFirstInSecondChain();\n+               }\n+           }\n+\n+  ;\n \n-    public abstract long relOf( RelationshipRecord rel );\n+      public abstract long relOf( RelationshipRecord rel )\n+      ;\n \n-    public abstract boolean endOfChain( RelationshipRecord rel );\n-}\n+      public abstract boolean endOfChain( RelationshipRecord rel )\n+      ; }\n\\ No newline at end of file\n",
            "diff_size": 62
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "IQSS-dataverse",
    "error_id": "80",
    "information": {
        "errors": [
            {
                "line": "515",
                "column": "5",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "       public Long getValueForCompoundKeyAsLong(Key key, String param){\n\n    \t   String val = this.getValueForKey(key);\n\n    \t   if (val == null){\n    \t\t   return null;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "517",
                    "column": "5",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/80/SettingsServiceBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/80/SettingsServiceBean.java\nindex 02637bfa8df..d98a5523f8e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/80/SettingsServiceBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/80/SettingsServiceBean.java\n@@ -512,7 +512,7 @@ public class SettingsServiceBean {\n         */\n        public Long getValueForCompoundKeyAsLong(Key key, String param){\n \n-    \t   String val = this.getValueForKey(key);\n+           String val = this.getValueForKey(key);\n \n     \t   if (val == null){\n     \t\t   return null;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/80/SettingsServiceBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/80/SettingsServiceBean.java\nindex 02637bfa8df..4743ff303a6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/80/SettingsServiceBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/80/SettingsServiceBean.java\n@@ -23,280 +23,307 @@ import javax.persistence.PersistenceContext;\n \n /**\n  * Service bean accessing a persistent hash map, used as settings in the application.\n+ *\n  * @author michael\n  */\n @Stateless\n @Named\n public class SettingsServiceBean {\n-    \n-    private static final Logger logger = Logger.getLogger(SettingsServiceBean.class.getCanonicalName());\n-    \n-    /**\n-     * Some convenient keys for the settings. Note that the setting's \n-     * name is really a {@code String}, but it's good to have the compiler look\n-     * over your shoulder when typing strings in various places of a large app. \n-     * So there.\n-     */\n-    public enum Key {\n-        AllowApiTokenLookupViaApi,\n-        /**\n-         * Ordered, comma-separated list of custom fields to show above the fold\n-         * on dataset page such as \"data_type,sample,pdb\"\n-         */\n-        CustomDatasetSummaryFields,\n-        /**\n-         * Defines a public installation -- all datafiles are unrestricted\n-         */\n-        PublicInstall,\n-        /**\n-         * Sets the name of your cloud computing environment.\n-         * For example, \"Massachusetts Open Cloud\"\n-         */\n-        CloudEnvironmentName,\n-        /**\n-         * Defines the base for a computing environment URL.\n-         * The container name will be appended to this on the \"Compute\" button \n-         */\n-        ComputeBaseUrl,\n-        /**\n-         * Enables the provenance collection popup.\n-         * Allows users to store their provenance json and description\n-         */\n-        ProvCollectionEnabled,\n-        /**\n-         * For example, https://datacapture.example.org\n-         */\n-        DataCaptureModuleUrl,\n-        RepositoryStorageAbstractionLayerUrl,\n-        UploadMethods,\n-        DownloadMethods,\n-        /**\n-         * If the data replicated around the world using RSAL (Repository\n-         * Storage Abstraction Layer) is locally available, this is its file\n-         * path, such as \"/programs/datagrid\".\n-         *\n-         * TODO: Think about if it makes sense to make this a column in the\n-         * StorageSite database table.\n-         */\n-        LocalDataAccessPath,\n-        IdentifierGenerationStyle,\n-        OAuth2CallbackUrl,\n-        DefaultAuthProvider,\n-        FooterCopyright,\n-        FileFixityChecksumAlgorithm,\n-        MinutesUntilConfirmEmailTokenExpires,\n-        /**\n-         * Override Solr highlighting \"fragsize\"\n-         * https://wiki.apache.org/solr/HighlightingParameters#hl.fragsize\n-         */\n-        SearchHighlightFragmentSize,\n-        /**\n-         * Revert to MyData *not* using the Solr \"permission documents\" which\n-         * was the behavior in Dataverse 4.2. Starting to use Solr permission\n-         * documents in MyData has been introduced in 4.2.1 as a fix for\n-         * https://github.com/IQSS/dataverse/issues/2649 where the \"File\n-         * Downloader\" role was exposing cards for unpublished datasets when it\n-         * shouldn't.\n-         */\n-        MyDataDoesNotUseSolrPermissionDocs,\n-        /**\n-         * In Dataverse 4.7 and earlier, an API token was required to use the\n-         * Search API. Tokens are no longer required but you can revert to the\n-         * old behavior by setting this to false.\n-         */\n-        SearchApiRequiresToken,\n-        /**\n-         * Experimental: Use Solr to power the file listing on the dataset page.\n-         */\n-        FilesOnDatasetPageFromSolr,\n-\n-        /**\n-         * API endpoints that are not accessible. Comma separated list.\n-         */\n-        BlockedApiEndpoints,\n-        \n-        /**\n-         * A key that, with the right {@link ApiBlockingFilter.BlockPolicy},\n-         * allows calling blocked APIs.\n-         */\n-        BlockedApiKey,\n-        \n-        \n-        /**\n-         * How to treat blocked APIs. One of drop, localhost-only, unblock-key\n-         */\n-        BlockedApiPolicy,\n-        \n-        /**\n-         * For development only (see dev guide for details). Backed by an enum\n-         * of possible account types.\n-         */\n-        DebugShibAccountType,\n-        DebugOAuthAccountType,\n-        /** Application-wide Terms of Use per installation. */\n-        ApplicationTermsOfUse,\n-        /** Terms of Use specific to API per installation. */\n-        ApiTermsOfUse,\n-        /**\n-         * URL for the application-wide Privacy Policy per installation, linked\n-         * to from the footer.\n-         */\n-        ApplicationPrivacyPolicyUrl,\n-        /**\n-         * A boolean defining if indexing and search should respect the concept\n-         * of \"permission root\".\n-         *\n-         * <p>\n-         *\n-         * If we ignore permissionRoot at index time, we should blindly give\n-         * search (\"discoverability\") access to people and group who have access\n-         * defined in a parent dataverse, all the way back to the root.\n-         *\n-         * <p>\n-         *\n-         * If we respect permissionRoot, this means that the dataverse being\n-         * indexed is an island of permissions all by itself. We should not look\n-         * to its parent to see if more people and groups might be able to\n-         * search the DvObjects within it. We would assume no implicit\n-         * inheritance of permissions. In this mode, all permissions must be\n-         * explicitly defined on DvObjects. No implied inheritance.\n-         *\n-         */\n-        SearchRespectPermissionRoot,\n-        /** Solr hostname and port, such as \"localhost:8983\". */\n-        SolrHostColonPort,\n-        /** Enable full-text indexing in solr up to max file size */\n-        SolrFullTextIndexing, //true or false (default)\n-        SolrMaxFileSizeForFullTextIndexing, //long - size in bytes (default unset/no limit)\n-        /** Default Key for limiting the number of bytes uploaded via the Data Deposit API, UI (web site and . */\n-        MaxFileUploadSizeInBytes,\n-        /** Key for if ScrubMigrationData is enabled or disabled. */\n-        ScrubMigrationData,\n-        /** Key for the url to send users who want to sign up to. */\n-        SignUpUrl,\n-        /** Key for whether we allow users to sign up */\n-        AllowSignUp,\n-        /** protocol for global id */\n-        Protocol,\n-        /** authority for global id */\n-        Authority,\n-        /** DoiProvider for global id */\n-        DoiProvider,\n-        /** Shoulder for global id - used to create a common prefix on identifiers */\n-        Shoulder,\n+\n+  private static final Logger logger = Logger.getLogger(SettingsServiceBean.class.getCanonicalName());\n+\n+  /**\n+   * Some convenient keys for the settings. Note that the setting's\n+   * name is really a {@code String}, but it's good to have the compiler look\n+   * over your shoulder when typing strings in various places of a large app.\n+   * So there.\n+   */\n+  public enum Key {\n+    AllowApiTokenLookupViaApi,\n+    /**\n+     * Ordered, comma-separated list of custom fields to show above the fold\n+     * on dataset page such as \"data_type,sample,pdb\"\n+     */\n+    CustomDatasetSummaryFields,\n+    /**\n+     * Defines a public installation -- all datafiles are unrestricted\n+     */\n+    PublicInstall,\n+    /**\n+     * Sets the name of your cloud computing environment.\n+     * For example, \"Massachusetts Open Cloud\"\n+     */\n+    CloudEnvironmentName,\n+    /**\n+     * Defines the base for a computing environment URL.\n+     * The container name will be appended to this on the \"Compute\" button\n+     */\n+    ComputeBaseUrl,\n+    /**\n+     * Enables the provenance collection popup.\n+     * Allows users to store their provenance json and description\n+     */\n+    ProvCollectionEnabled,\n+    /**\n+     * For example, https://datacapture.example.org\n+     */\n+    DataCaptureModuleUrl,\n+    RepositoryStorageAbstractionLayerUrl,\n+    UploadMethods,\n+    DownloadMethods,\n+    /**\n+     * If the data replicated around the world using RSAL (Repository\n+     * Storage Abstraction Layer) is locally available, this is its file\n+     * path, such as \"/programs/datagrid\".\n+     * <p>\n+     * TODO: Think about if it makes sense to make this a column in the\n+     * StorageSite database table.\n+     */\n+    LocalDataAccessPath,\n+    IdentifierGenerationStyle,\n+    OAuth2CallbackUrl,\n+    DefaultAuthProvider,\n+    FooterCopyright,\n+    FileFixityChecksumAlgorithm,\n+    MinutesUntilConfirmEmailTokenExpires,\n+    /**\n+     * Override Solr highlighting \"fragsize\"\n+     * https://wiki.apache.org/solr/HighlightingParameters#hl.fragsize\n+     */\n+    SearchHighlightFragmentSize,\n+    /**\n+     * Revert to MyData *not* using the Solr \"permission documents\" which\n+     * was the behavior in Dataverse 4.2. Starting to use Solr permission\n+     * documents in MyData has been introduced in 4.2.1 as a fix for\n+     * https://github.com/IQSS/dataverse/issues/2649 where the \"File\n+     * Downloader\" role was exposing cards for unpublished datasets when it\n+     * shouldn't.\n+     */\n+    MyDataDoesNotUseSolrPermissionDocs,\n+    /**\n+     * In Dataverse 4.7 and earlier, an API token was required to use the\n+     * Search API. Tokens are no longer required but you can revert to the\n+     * old behavior by setting this to false.\n+     */\n+    SearchApiRequiresToken,\n+    /**\n+     * Experimental: Use Solr to power the file listing on the dataset page.\n+     */\n+    FilesOnDatasetPageFromSolr,\n+\n+    /**\n+     * API endpoints that are not accessible. Comma separated list.\n+     */\n+    BlockedApiEndpoints,\n+\n+    /**\n+     * A key that, with the right {@link ApiBlockingFilter.BlockPolicy},\n+     * allows calling blocked APIs.\n+     */\n+    BlockedApiKey,\n+\n+\n+    /**\n+     * How to treat blocked APIs. One of drop, localhost-only, unblock-key\n+     */\n+    BlockedApiPolicy,\n+\n+    /**\n+     * For development only (see dev guide for details). Backed by an enum\n+     * of possible account types.\n+     */\n+    DebugShibAccountType,\n+    DebugOAuthAccountType,\n+    /**\n+     * Application-wide Terms of Use per installation.\n+     */\n+    ApplicationTermsOfUse,\n+    /**\n+     * Terms of Use specific to API per installation.\n+     */\n+    ApiTermsOfUse,\n+    /**\n+     * URL for the application-wide Privacy Policy per installation, linked\n+     * to from the footer.\n+     */\n+    ApplicationPrivacyPolicyUrl,\n+    /**\n+     * A boolean defining if indexing and search should respect the concept\n+     * of \"permission root\".\n+     *\n+     * <p>\n+     * <p>\n+     * If we ignore permissionRoot at index time, we should blindly give\n+     * search (\"discoverability\") access to people and group who have access\n+     * defined in a parent dataverse, all the way back to the root.\n+     *\n+     * <p>\n+     * <p>\n+     * If we respect permissionRoot, this means that the dataverse being\n+     * indexed is an island of permissions all by itself. We should not look\n+     * to its parent to see if more people and groups might be able to\n+     * search the DvObjects within it. We would assume no implicit\n+     * inheritance of permissions. In this mode, all permissions must be\n+     * explicitly defined on DvObjects. No implied inheritance.\n+     */\n+    SearchRespectPermissionRoot,\n+    /**\n+     * Solr hostname and port, such as \"localhost:8983\".\n+     */\n+    SolrHostColonPort,\n+    /**\n+     * Enable full-text indexing in solr up to max file size\n+     */\n+    SolrFullTextIndexing, //true or false (default)\n+    SolrMaxFileSizeForFullTextIndexing, //long - size in bytes (default unset/no limit)\n+    /**\n+     * Default Key for limiting the number of bytes uploaded via the Data Deposit API, UI (web site and .\n+     */\n+    MaxFileUploadSizeInBytes,\n+    /**\n+     * Key for if ScrubMigrationData is enabled or disabled.\n+     */\n+    ScrubMigrationData,\n+    /**\n+     * Key for the url to send users who want to sign up to.\n+     */\n+    SignUpUrl,\n+    /**\n+     * Key for whether we allow users to sign up\n+     */\n+    AllowSignUp,\n+    /**\n+     * protocol for global id\n+     */\n+    Protocol,\n+    /**\n+     * authority for global id\n+     */\n+    Authority,\n+    /**\n+     * DoiProvider for global id\n+     */\n+    DoiProvider,\n+    /**\n+     * Shoulder for global id - used to create a common prefix on identifiers\n+     */\n+    Shoulder,\n         /* Removed for now - tried to add here but DOI Service Bean didn't like it at start-up\n         DoiUsername,\n         DoiPassword,\n         DoiBaseurlstring,\n         */\n-        /** Optionally override http://guides.dataverse.org . */\n-        GuidesBaseUrl,\n-\n-        /**\n-         * A link to an installation of https://github.com/IQSS/miniverse or\n-         * some other metrics app.\n-         */\n-        MetricsUrl,\n-        \n-        /**\n-         * Number of minutes before a metrics query can be rerun. Otherwise a cached value is returned.\n-         * Previous month dates always return cache. Only applies to new internal caching system (not miniverse).\n-         */\n-        MetricsCacheTimeoutMinutes,\n-        /* zip download size limit */\n-        /** Optionally override version number in guides. */\n-        GuidesVersion,\n-        ZipDownloadLimit,\n-        /* zip upload number of files limit */\n-        ZipUploadFilesLimit,\n-        /* the number of files the GUI user is allowed to upload in one batch, \n-            via drag-and-drop, or through the file select dialog */\n-        MultipleUploadFilesLimit,\n-        /* Size limits for generating thumbnails on the fly */\n-        /* (i.e., we'll attempt to generate a thumbnail on the fly if the \n-         * size of the file is less than this)\n-        */\n-        ThumbnailSizeLimitImage,\n-        ThumbnailSizeLimitPDF,\n-        /* return email address for system emails such as notifications */\n-        SystemEmail, \n-        /* size limit for Tabular data file ingests */\n+    /**\n+     * Optionally override http://guides.dataverse.org .\n+     */\n+    GuidesBaseUrl,\n+\n+    /**\n+     * A link to an installation of https://github.com/IQSS/miniverse or\n+     * some other metrics app.\n+     */\n+    MetricsUrl,\n+\n+    /**\n+     * Number of minutes before a metrics query can be rerun. Otherwise a cached value is returned.\n+     * Previous month dates always return cache. Only applies to new internal caching system (not miniverse).\n+     */\n+    MetricsCacheTimeoutMinutes,\n+    /* zip download size limit */\n+    /**\n+     * Optionally override version number in guides.\n+     */\n+    GuidesVersion,\n+    ZipDownloadLimit,\n+    /* zip upload number of files limit */\n+    ZipUploadFilesLimit,\n+    /* the number of files the GUI user is allowed to upload in one batch,\n+        via drag-and-drop, or through the file select dialog */\n+    MultipleUploadFilesLimit,\n+    /* Size limits for generating thumbnails on the fly */\n+    /* (i.e., we'll attempt to generate a thumbnail on the fly if the\n+     * size of the file is less than this)\n+     */\n+    ThumbnailSizeLimitImage,\n+    ThumbnailSizeLimitPDF,\n+    /* return email address for system emails such as notifications */\n+    SystemEmail,\n+    /* size limit for Tabular data file ingests */\n         /* (can be set separately for specific ingestable formats; in which \n         case the actual stored option will be TabularIngestSizeLimit:{FORMAT_NAME}\n         where {FORMAT_NAME} is the format identification tag returned by the \n         getFormatName() method in the format-specific plugin; \"sav\" for the \n         SPSS/sav format, \"RData\" for R, etc.\n         for example: :TabularIngestSizeLimit:RData */\n-        TabularIngestSizeLimit,\n-        /**\n-         The message added to a popup upon dataset publish\n-         * \n-         */\n-        DatasetPublishPopupCustomText,\n-        /*\n-        Whether to display the publish text for every published version\n-        */\n-        DatasetPublishPopupCustomTextOnAllVersions,\n-        /*\n-        Whether Harvesting (OAI) service is enabled\n-        */\n-        OAIServerEnabled,\n-        \n-        /**\n-        * Whether Shibboleth passive authentication mode is enabled\n-        */\n-        ShibPassiveLoginEnabled,\n-        /**\n-         * Whether Export should exclude FieldType.EMAIL\n-         */\n-        ExcludeEmailFromExport,\n-        /*\n-         Location and name of HomePage customization file\n-        */\n-        HomePageCustomizationFile,\n-        /*\n-         Location and name of Header customization file\n-        */\n-        HeaderCustomizationFile,\n-        /*\n-         Location and name of Footer customization file\n-        */\n-        FooterCustomizationFile,\n-        /*\n-         Location and name of CSS customization file\n-        */\n-        StyleCustomizationFile,\n-        /*\n-         Location and name of analytics code file\n-        */\n-        WebAnalyticsCode,\n-        /*\n-         Location and name of installation logo customization file\n-        */\n-        LogoCustomizationFile,\n-        \n-        // Option to override the navbar url underlying the \"About\" link\n-        NavbarAboutUrl,\n-        \n-        // Option to override multiple guides with a single url\n-        NavbarGuidesUrl,\n-\n-        // Option to overide the feedback dialog display with a link to an external page via its url\n-        NavbarSupportUrl,\n-\n-        /**\n-         * The theme for the root dataverse can get in the way when you try make\n-         * use of HeaderCustomizationFile and LogoCustomizationFile so this is a\n-         * way to disable it.\n-         */\n-        DisableRootDataverseTheme,\n-        // Limit on how many guestbook entries to display on the guestbook-responses page:\n-        GuestbookResponsesPageDisplayLimit,\n-\n-        /**\n-         * The dictionary filepaths separated by a pipe (|)\n-         */\n-        PVDictionaries,\n+    TabularIngestSizeLimit,\n+    /**\n+     * The message added to a popup upon dataset publish\n+     */\n+    DatasetPublishPopupCustomText,\n+    /*\n+    Whether to display the publish text for every published version\n+    */\n+    DatasetPublishPopupCustomTextOnAllVersions,\n+    /*\n+    Whether Harvesting (OAI) service is enabled\n+    */\n+    OAIServerEnabled,\n+\n+    /**\n+     * Whether Shibboleth passive authentication mode is enabled\n+     */\n+    ShibPassiveLoginEnabled,\n+    /**\n+     * Whether Export should exclude FieldType.EMAIL\n+     */\n+    ExcludeEmailFromExport,\n+    /*\n+     Location and name of HomePage customization file\n+    */\n+    HomePageCustomizationFile,\n+    /*\n+     Location and name of Header customization file\n+    */\n+    HeaderCustomizationFile,\n+    /*\n+     Location and name of Footer customization file\n+    */\n+    FooterCustomizationFile,\n+    /*\n+     Location and name of CSS customization file\n+    */\n+    StyleCustomizationFile,\n+    /*\n+     Location and name of analytics code file\n+    */\n+    WebAnalyticsCode,\n+    /*\n+     Location and name of installation logo customization file\n+    */\n+    LogoCustomizationFile,\n+\n+    // Option to override the navbar url underlying the \"About\" link\n+    NavbarAboutUrl,\n+\n+    // Option to override multiple guides with a single url\n+    NavbarGuidesUrl,\n+\n+    // Option to overide the feedback dialog display with a link to an external page via its url\n+    NavbarSupportUrl,\n+\n+    /**\n+     * The theme for the root dataverse can get in the way when you try make\n+     * use of HeaderCustomizationFile and LogoCustomizationFile so this is a\n+     * way to disable it.\n+     */\n+    DisableRootDataverseTheme,\n+    // Limit on how many guestbook entries to display on the guestbook-responses page:\n+    GuestbookResponsesPageDisplayLimit,\n+\n+    /**\n+     * The dictionary filepaths separated by a pipe (|)\n+     */\n+    PVDictionaries,\n \n //        /**\n //         * The days and minimum length for when to apply an expiration date.\n@@ -304,370 +331,377 @@ public class SettingsServiceBean {\n //        PVExpirationDays,\n //        PVValidatorExpirationMaxLength,\n \n-        /**\n-         * The minimum length of a good, long, strong password.\n-         */\n-        PVGoodStrength,\n-\n-        /**\n-         * A password minimum and maximum length\n-         */\n-        PVMinLength,\n-        PVMaxLength,\n-\n-        /**\n-         * One letter, 2 special characters, etc.\n-         */\n-        PVCharacterRules,\n-\n-        /**\n-         * The number of M characteristics\n-         */\n-        PVNumberOfCharacteristics,\n-        \n-        /**\n-         * The number of consecutive digits allowed for a password\n-         */\n-        PVNumberOfConsecutiveDigitsAllowed,\n-        /**\n-         * Configurable text for alert/info message on passwordreset.xhtml when users are required to update their password.\n-         */\n-        PVCustomPasswordResetAlertMessage,\n-        /*\n-        String to describe DOI format for data files. Default is DEPENDENT. \n-        'DEPENEDENT' means the DOI will be the Dataset DOI plus a file DOI with a slash in between.\n-        'INDEPENDENT' means a new global id, completely independent from the dataset-level global id.\n-        */\n-        DataFilePIDFormat, \n-        /* Json array of supported languages\n-        */\n-        Languages,\n-        /*\n-        Number for the minimum number of files to send PID registration to asynchronous workflow\n-        */\n-        PIDAsynchRegFileCount,\n-        /**\n-         * \n-         */\n-        FilePIDsEnabled,\n-\n-        /**\n-         * Indicates if the Handle service is setup to work 'independently' (No communication with the Global Handle Registry)\n-         */\n-        IndependentHandleService,\n-\n-        /**\n-         * Archiving can be configured by providing an Archiver class name (class must extend AstractSubmitToArchiverCommand)\n-         * and a list of settings that should be passed to the Archiver.\n-         * Note: \n-         * Configuration may also require adding Archiver-specific jvm-options (i.e. for username and password) in glassfish.\n-         * \n-         * To automate the submission of an archival copy step as part of publication, a post-publication workflow must also be configured.\n-         * \n-         * For example:\n-         * ArchiverClassName - \"edu.harvard.iq.dataverse.engine.command.impl.DPNSubmitToArchiveCommand\"\n-         * ArchiverSettings - \"DuraCloudHost, DuraCloudPort, DuraCloudContext\"\n-         * \n-         * Note: Dataverse must be configured with values for these dynamically defined settings as well, e.g. \n-         * \n-         * DuraCloudHost , eg. \"qdr.duracloud.org\", a non-null value enables submission\n-         * DuraCloudPort, default is 443\n-         * DuraCloudContext, default is \"durastore\"\n-         */\n-        \n-        ArchiverClassName,\n-        ArchiverSettings,\n-        /**\n-         * A comma-separated list of roles for which new dataverses should inherit the\n-         * corresponding role assignments from the parent dataverse. Also affects\n-         * /api/admin/dataverse/{alias}/addRolesToChildren. Default is \"\", no\n-         * inheritance. \"*\" means inherit assignments for all roles\n-         */\n-        InheritParentRoleAssignments,\n-        \n-        /** Make Data Count Logging and Display */\n-        MDCLogPath, \n-        DisplayMDCMetrics,\n-\n-        /**\n-         * Allow CORS flag (true or false). It is true by default\n-         *\n-         */\n-        AllowCors, \n-        \n-        /**\n-         * Lifespan, in minutes, of a login user session\u00a0\n-         * (both DataverseSession and the underlying HttpSession)\n-         */\n-        LoginSessionTimeout,\n-\n-        /**\n-         * Shibboleth affiliation attribute which holds information about the affiliation of the user (e.g. ou)\n-         */\n-        ShibAffiliationAttribute,\n-        /**\n-         * Convert shibboleth AJP attributes from ISO-8859-1 to UTF-8\n-         */\n-        ShibAttributeCharacterSetConversionEnabled,\n-        /**\n-         * Validate physical files for all the datafiles in the dataset when publishing\n-         */\n-        FileValidationOnPublishEnabled,\n-        /**\n-         * If defined, this is the URL of the zipping service outside \n-         * the main Application Service where zip downloads should be directed\n-         * instead of /api/access/datafiles/\n-         */\n-        CustomZipDownloadServiceUrl,\n-        /**\n-         * Sort Date Facets Chronologically instead or presenting them in order of # of hits as other facets are. Default is true\n-         */\n-        ChronologicalDateFacets,\n-        \n-        /**\n-         * Used where BrandingUtil.getInstallationBrandName is called, overides the default use of the root Dataverse collection name\n-         */\n-        InstallationName,\n-        /**\n-         * In metadata exports that set a 'distributor' this flag determines whether the\n-         * Installation Brand Name is always included (default/false) or is not included\n-         * when the Distributor field (citation metadatablock) is set (true)\n-         */\n-        ExportInstallationAsDistributorOnlyWhenNotSet\n-        ;\n-\n-        @Override\n-        public String toString() {\n-            return \":\" + name();\n-        }\n-    }\n-    \n-    @PersistenceContext\n-    EntityManager em;\n-    \n-    @EJB\n-    ActionLogServiceBean actionLogSvc;\n-    \n-    /**\n-     * Basic functionality - get the name, return the setting, or {@code null}.\n-     * @param name of the setting\n-     * @return the actual setting, or {@code null}.\n-     */\n-    public String get( String name ) {\n-        List<Setting> tokens = em.createNamedQuery(\"Setting.findByName\", Setting.class)\n-                .setParameter(\"name\", name )\n-                .getResultList();\n-        String val = null;\n-        if(tokens.size() > 0) {\n-            val = tokens.get(0).getContent();\n-        }\n-        return (val!=null) ? val : null;\n-    }\n-    \n     /**\n-     * Same as {@link #get(java.lang.String)}, but with static checking.\n-     * @param key Enum value of the name.\n-     * @return The setting, or {@code null}.\n+     * The minimum length of a good, long, strong password.\n      */\n-    public String getValueForKey( Key key ) {\n-        return get(key.toString());\n-    }\n-    \n-    \n-    /**\n-     * Attempt to convert the value to an integer\n-     *  - Applicable for keys such as MaxFileUploadSizeInBytes\n-     * \n-     * On failure (key not found or string not convertible to a long), returns null\n-     * @param key\n-     * @return \n-     */\n-       public Long getValueForKeyAsLong(Key key){\n-        \n-        String val = this.getValueForKey(key);\n-\n-        if (val == null){\n-            return null;\n-        }\n+    PVGoodStrength,\n \n-        try {\n-            long valAsInt = Long.parseLong(val);\n-            return valAsInt;\n-        } catch (NumberFormatException ex) {\n-            logger.log(Level.WARNING, \"Incorrect setting.  Could not convert \\\"{0}\\\" from setting {1} to long.\", new Object[]{val, key.toString()});\n-            return null;\n-        }\n-        \n-    }\n-    \n-       /**\n-        * Attempt to convert a value in a compound key to a long\n-        *  - Applicable for keys such as MaxFileUploadSizeInBytes after multistore capabilities were added in ~v4.20\n-        *  backward compatible with a single value. For multi values, the key's value must be an object with param:value pairs.\n-        *  A \"default\":value pair is allowed and will be returned for any param that doesn't have a defined value.   \n-        * \n-        * On failure (key not found or string not convertible to a long), returns null\n-        * @param key\n-        * @return \n-        */\n-       public Long getValueForCompoundKeyAsLong(Key key, String param){\n-\n-    \t   String val = this.getValueForKey(key);\n-\n-    \t   if (val == null){\n-    \t\t   return null;\n-    \t   }\n-\n-    \t   try {\n-    \t\t   return Long.parseLong(val);\n-    \t   } catch (NumberFormatException ex) {\n-    \t\t   try ( StringReader rdr = new StringReader(val) ) {\n-    \t\t\t   JsonObject settings = Json.createReader(rdr).readObject();\n-    \t\t\t   if(settings.containsKey(param)) {\n-    \t\t\t\t   return Long.parseLong(settings.getString(param));\n-    \t\t\t   } else if(settings.containsKey(\"default\")) {\n-    \t\t\t\t   return Long.parseLong(settings.getString(\"default\"));\n-    \t\t\t   } else {\n-    \t\t\t\t   return null;\n-    \t\t\t   }\n-\n-    \t\t   } catch (Exception e) {\n-    \t\t\t   logger.log(Level.WARNING, \"Incorrect setting.  Could not convert \\\"{0}\\\" from setting {1} to long: {2}\", new Object[]{val, key.toString(), e.getMessage()});\n-    \t\t\t   return null;\n-    \t\t   }\n-    \t   }\n-\n-       }\n-    \n-    /**\n-     * Return the value stored, or the default value, in case no setting by that\n-     * name exists. The main difference between this method and the other {@code get()}s\n-     * is that is never returns null (unless {@code defaultValue} is {@code null}.\n-     * \n-     * @param name Name of the setting.\n-     * @param defaultValue The value to return if no setting is found in the DB.\n-     * @return Either the stored value, or the default value.\n-     */\n-    public String get( String name, String defaultValue ) {\n-        String val = get(name);\n-        return (val!=null) ? val : defaultValue;\n+    /**\n+     * A password minimum and maximum length\n+     */\n+    PVMinLength,\n+    PVMaxLength,\n+\n+    /**\n+     * One letter, 2 special characters, etc.\n+     */\n+    PVCharacterRules,\n+\n+    /**\n+     * The number of M characteristics\n+     */\n+    PVNumberOfCharacteristics,\n+\n+    /**\n+     * The number of consecutive digits allowed for a password\n+     */\n+    PVNumberOfConsecutiveDigitsAllowed,\n+    /**\n+     * Configurable text for alert/info message on passwordreset.xhtml when users are required to update their password.\n+     */\n+    PVCustomPasswordResetAlertMessage,\n+    /*\n+    String to describe DOI format for data files. Default is DEPENDENT.\n+    'DEPENEDENT' means the DOI will be the Dataset DOI plus a file DOI with a slash in between.\n+    'INDEPENDENT' means a new global id, completely independent from the dataset-level global id.\n+    */\n+    DataFilePIDFormat,\n+    /* Json array of supported languages\n+     */\n+    Languages,\n+    /*\n+    Number for the minimum number of files to send PID registration to asynchronous workflow\n+    */\n+    PIDAsynchRegFileCount,\n+    /**\n+     *\n+     */\n+    FilePIDsEnabled,\n+\n+    /**\n+     * Indicates if the Handle service is setup to work 'independently' (No communication with the Global Handle Registry)\n+     */\n+    IndependentHandleService,\n+\n+    /**\n+     * Archiving can be configured by providing an Archiver class name (class must extend AstractSubmitToArchiverCommand)\n+     * and a list of settings that should be passed to the Archiver.\n+     * Note:\n+     * Configuration may also require adding Archiver-specific jvm-options (i.e. for username and password) in glassfish.\n+     * <p>\n+     * To automate the submission of an archival copy step as part of publication, a post-publication workflow must also be configured.\n+     * <p>\n+     * For example:\n+     * ArchiverClassName - \"edu.harvard.iq.dataverse.engine.command.impl.DPNSubmitToArchiveCommand\"\n+     * ArchiverSettings - \"DuraCloudHost, DuraCloudPort, DuraCloudContext\"\n+     * <p>\n+     * Note: Dataverse must be configured with values for these dynamically defined settings as well, e.g.\n+     * <p>\n+     * DuraCloudHost , eg. \"qdr.duracloud.org\", a non-null value enables submission\n+     * DuraCloudPort, default is 443\n+     * DuraCloudContext, default is \"durastore\"\n+     */\n+\n+    ArchiverClassName,\n+    ArchiverSettings,\n+    /**\n+     * A comma-separated list of roles for which new dataverses should inherit the\n+     * corresponding role assignments from the parent dataverse. Also affects\n+     * /api/admin/dataverse/{alias}/addRolesToChildren. Default is \"\", no\n+     * inheritance. \"*\" means inherit assignments for all roles\n+     */\n+    InheritParentRoleAssignments,\n+\n+    /**\n+     * Make Data Count Logging and Display\n+     */\n+    MDCLogPath,\n+    DisplayMDCMetrics,\n+\n+    /**\n+     * Allow CORS flag (true or false). It is true by default\n+     */\n+    AllowCors,\n+\n+    /**\n+     * Lifespan, in minutes, of a login user session\u00a0\n+     * (both DataverseSession and the underlying HttpSession)\n+     */\n+    LoginSessionTimeout,\n+\n+    /**\n+     * Shibboleth affiliation attribute which holds information about the affiliation of the user (e.g. ou)\n+     */\n+    ShibAffiliationAttribute,\n+    /**\n+     * Convert shibboleth AJP attributes from ISO-8859-1 to UTF-8\n+     */\n+    ShibAttributeCharacterSetConversionEnabled,\n+    /**\n+     * Validate physical files for all the datafiles in the dataset when publishing\n+     */\n+    FileValidationOnPublishEnabled,\n+    /**\n+     * If defined, this is the URL of the zipping service outside\n+     * the main Application Service where zip downloads should be directed\n+     * instead of /api/access/datafiles/\n+     */\n+    CustomZipDownloadServiceUrl,\n+    /**\n+     * Sort Date Facets Chronologically instead or presenting them in order of # of hits as other facets are. Default is true\n+     */\n+    ChronologicalDateFacets,\n+\n+    /**\n+     * Used where BrandingUtil.getInstallationBrandName is called, overides the default use of the root Dataverse collection name\n+     */\n+    InstallationName,\n+    /**\n+     * In metadata exports that set a 'distributor' this flag determines whether the\n+     * Installation Brand Name is always included (default/false) or is not included\n+     * when the Distributor field (citation metadatablock) is set (true)\n+     */\n+    ExportInstallationAsDistributorOnlyWhenNotSet;\n+\n+    @Override\n+    public String toString() {\n+      return \":\" + name();\n     }\n+  }\n \n-    public String get(String name, String lang, String defaultValue ) {\n-        List<Setting> tokens = em.createNamedQuery(\"Setting.findByNameAndLang\", Setting.class)\n-                .setParameter(\"name\", name )\n-                .setParameter(\"lang\", lang )\n-                .getResultList();\n-        String val = null;\n-        if(tokens.size() > 0) {\n-            val = tokens.get(0).getContent();\n-        }\n-        return (val!=null) ? val : defaultValue;\n+  @PersistenceContext\n+  EntityManager em;\n+\n+  @EJB\n+  ActionLogServiceBean actionLogSvc;\n+\n+  /**\n+   * Basic functionality - get the name, return the setting, or {@code null}.\n+   *\n+   * @param name of the setting\n+   * @return the actual setting, or {@code null}.\n+   */\n+  public String get(String name) {\n+    List<Setting> tokens = em.createNamedQuery(\"Setting.findByName\", Setting.class)\n+      .setParameter(\"name\", name)\n+      .getResultList();\n+    String val = null;\n+    if (tokens.size() > 0) {\n+      val = tokens.get(0).getContent();\n     }\n-    \n-    public String getValueForKey( Key key, String defaultValue ) {\n-        return get( key.toString(), defaultValue );\n+    return (val != null) ? val : null;\n+  }\n+\n+  /**\n+   * Same as {@link #get(java.lang.String)}, but with static checking.\n+   *\n+   * @param key Enum value of the name.\n+   * @return The setting, or {@code null}.\n+   */\n+  public String getValueForKey(Key key) {\n+    return get(key.toString());\n+  }\n+\n+\n+  /**\n+   * Attempt to convert the value to an integer\n+   * - Applicable for keys such as MaxFileUploadSizeInBytes\n+   * <p>\n+   * On failure (key not found or string not convertible to a long), returns null\n+   *\n+   * @param key\n+   * @return\n+   */\n+  public Long getValueForKeyAsLong(Key key) {\n+\n+    String val = this.getValueForKey(key);\n+\n+    if (val == null) {\n+      return null;\n     }\n \n-    public String getValueForKey( Key key, String lang, String defaultValue ) {\n-        return get( key.toString(), lang, defaultValue );\n+    try {\n+      long valAsInt = Long.parseLong(val);\n+      return valAsInt;\n+    } catch (NumberFormatException ex) {\n+      logger.log(Level.WARNING, \"Incorrect setting.  Could not convert \\\"{0}\\\" from setting {1} to long.\",\n+        new Object[] {val, key.toString()});\n+      return null;\n     }\n-     \n-    public Setting set( String name, String content ) {\n-        Setting s = null; \n-        \n-        List<Setting> tokens = em.createNamedQuery(\"Setting.findByName\", Setting.class)\n-                .setParameter(\"name\", name )\n-                .getResultList();\n-        \n-        if(tokens.size() > 0) {\n-            s = tokens.get(0);\n-        }\n-        \n-        if (s == null) {\n-            s = new Setting( name, content );\n-        } else {\n-            s.setContent(content);\n-        }\n-        \n-        s = em.merge(s);\n-        actionLogSvc.log( new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"set\")\n-                            .setInfo(name + \": \" + content));\n-        return s;\n+\n+  }\n+\n+  /**\n+   * Attempt to convert a value in a compound key to a long\n+   * - Applicable for keys such as MaxFileUploadSizeInBytes after multistore capabilities were added in ~v4.20\n+   * backward compatible with a single value. For multi values, the key's value must be an object with param:value pairs.\n+   * A \"default\":value pair is allowed and will be returned for any param that doesn't have a defined value.\n+   * <p>\n+   * On failure (key not found or string not convertible to a long), returns null\n+   *\n+   * @param key\n+   * @return\n+   */\n+  public Long getValueForCompoundKeyAsLong(Key key, String param) {\n+\n+    String val = this.getValueForKey(key);\n+\n+    if (val == null) {\n+      return null;\n     }\n \n-    public Setting set( String name, String lang, String content ) {\n-        Setting s = null; \n-        \n-        List<Setting> tokens = em.createNamedQuery(\"Setting.findByNameAndLang\", Setting.class)\n-                .setParameter(\"name\", name )\n-                .setParameter(\"lang\", lang )\n-                .getResultList();\n-        \n-        if(tokens.size() > 0) {\n-            s = tokens.get(0);\n-        }\n-        \n-        if (s == null) {\n-            s = new Setting( name, lang, content );\n+    try {\n+      return Long.parseLong(val);\n+    } catch (NumberFormatException ex) {\n+      try (StringReader rdr = new StringReader(val)) {\n+        JsonObject settings = Json.createReader(rdr).readObject();\n+        if (settings.containsKey(param)) {\n+          return Long.parseLong(settings.getString(param));\n+        } else if (settings.containsKey(\"default\")) {\n+          return Long.parseLong(settings.getString(\"default\"));\n         } else {\n-            s.setContent(content);\n+          return null;\n         }\n-        \n-        em.merge(s);\n-        actionLogSvc.log( new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"set\")\n-                .setInfo(name + \": \" +lang + \": \" + content));\n-        return s;\n-    }\n-    \n-    public Setting setValueForKey( Key key, String content ) {\n-        return set( key.toString(), content );\n-    }\n-    \n-    /**\n-     * The correct way to decide whether a string value in the\n-     * settings table should be considered as {@code true}.\n-     * @param name name of the setting.\n-     * @param defaultValue logical value of {@code null}.\n-     * @return boolean value of the setting.\n-     */\n-    public boolean isTrue( String name, boolean defaultValue ) {\n-        String val = get(name);\n-        return ( val==null ) ? defaultValue : StringUtil.isTrue(val);\n-    }\n-    \n-    public boolean isTrueForKey( Key key, boolean defaultValue ) {\n-        return isTrue( key.toString(), defaultValue );\n+\n+      } catch (Exception e) {\n+        logger.log(Level.WARNING, \"Incorrect setting.  Could not convert \\\"{0}\\\" from setting {1} to long: {2}\",\n+          new Object[] {val, key.toString(), e.getMessage()});\n+        return null;\n+      }\n     }\n \n-    public boolean isFalseForKey( Key key, boolean defaultValue ) {\n-        return ! isTrue( key.toString(), defaultValue );\n+  }\n+\n+  /**\n+   * Return the value stored, or the default value, in case no setting by that\n+   * name exists. The main difference between this method and the other {@code get()}s\n+   * is that is never returns null (unless {@code defaultValue} is {@code null}.\n+   *\n+   * @param name         Name of the setting.\n+   * @param defaultValue The value to return if no setting is found in the DB.\n+   * @return Either the stored value, or the default value.\n+   */\n+  public String get(String name, String defaultValue) {\n+    String val = get(name);\n+    return (val != null) ? val : defaultValue;\n+  }\n+\n+  public String get(String name, String lang, String defaultValue) {\n+    List<Setting> tokens = em.createNamedQuery(\"Setting.findByNameAndLang\", Setting.class)\n+      .setParameter(\"name\", name)\n+      .setParameter(\"lang\", lang)\n+      .getResultList();\n+    String val = null;\n+    if (tokens.size() > 0) {\n+      val = tokens.get(0).getContent();\n     }\n-            \n-    public void deleteValueForKey( Key name ) {\n-        delete( name.toString() );\n+    return (val != null) ? val : defaultValue;\n+  }\n+\n+  public String getValueForKey(Key key, String defaultValue) {\n+    return get(key.toString(), defaultValue);\n+  }\n+\n+  public String getValueForKey(Key key, String lang, String defaultValue) {\n+    return get(key.toString(), lang, defaultValue);\n+  }\n+\n+  public Setting set(String name, String content) {\n+    Setting s = null;\n+\n+    List<Setting> tokens = em.createNamedQuery(\"Setting.findByName\", Setting.class)\n+      .setParameter(\"name\", name)\n+      .getResultList();\n+\n+    if (tokens.size() > 0) {\n+      s = tokens.get(0);\n     }\n-    \n-    public void delete( String name ) {\n-        actionLogSvc.log( new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"delete\")\n-                            .setInfo(name));\n-        em.createNamedQuery(\"Setting.deleteByName\")\n-                .setParameter(\"name\", name)\n-                .executeUpdate();\n+\n+    if (s == null) {\n+      s = new Setting(name, content);\n+    } else {\n+      s.setContent(content);\n     }\n \n-    public void delete( String name, String lang ) {\n-        actionLogSvc.log( new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"delete\")\n-                .setInfo(name));\n-        em.createNamedQuery(\"Setting.deleteByNameAndLang\")\n-                .setParameter(\"name\", name)\n-                .setParameter(\"lang\", lang)\n-                .executeUpdate();\n+    s = em.merge(s);\n+    actionLogSvc.log(new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"set\")\n+      .setInfo(name + \": \" + content));\n+    return s;\n+  }\n+\n+  public Setting set(String name, String lang, String content) {\n+    Setting s = null;\n+\n+    List<Setting> tokens = em.createNamedQuery(\"Setting.findByNameAndLang\", Setting.class)\n+      .setParameter(\"name\", name)\n+      .setParameter(\"lang\", lang)\n+      .getResultList();\n+\n+    if (tokens.size() > 0) {\n+      s = tokens.get(0);\n     }\n-    \n-    public Set<Setting> listAll() {\n-        return new HashSet<>(em.createNamedQuery(\"Setting.findAll\", Setting.class).getResultList());\n+\n+    if (s == null) {\n+      s = new Setting(name, lang, content);\n+    } else {\n+      s.setContent(content);\n     }\n-    \n-    \n+\n+    em.merge(s);\n+    actionLogSvc.log(new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"set\")\n+      .setInfo(name + \": \" + lang + \": \" + content));\n+    return s;\n+  }\n+\n+  public Setting setValueForKey(Key key, String content) {\n+    return set(key.toString(), content);\n+  }\n+\n+  /**\n+   * The correct way to decide whether a string value in the\n+   * settings table should be considered as {@code true}.\n+   *\n+   * @param name         name of the setting.\n+   * @param defaultValue logical value of {@code null}.\n+   * @return boolean value of the setting.\n+   */\n+  public boolean isTrue(String name, boolean defaultValue) {\n+    String val = get(name);\n+    return (val == null) ? defaultValue : StringUtil.isTrue(val);\n+  }\n+\n+  public boolean isTrueForKey(Key key, boolean defaultValue) {\n+    return isTrue(key.toString(), defaultValue);\n+  }\n+\n+  public boolean isFalseForKey(Key key, boolean defaultValue) {\n+    return !isTrue(key.toString(), defaultValue);\n+  }\n+\n+  public void deleteValueForKey(Key name) {\n+    delete(name.toString());\n+  }\n+\n+  public void delete(String name) {\n+    actionLogSvc.log(new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"delete\")\n+      .setInfo(name));\n+    em.createNamedQuery(\"Setting.deleteByName\")\n+      .setParameter(\"name\", name)\n+      .executeUpdate();\n+  }\n+\n+  public void delete(String name, String lang) {\n+    actionLogSvc.log(new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"delete\")\n+      .setInfo(name));\n+    em.createNamedQuery(\"Setting.deleteByNameAndLang\")\n+      .setParameter(\"name\", name)\n+      .setParameter(\"lang\", lang)\n+      .executeUpdate();\n+  }\n+\n+  public Set<Setting> listAll() {\n+    return new HashSet<>(em.createNamedQuery(\"Setting.findAll\", Setting.class).getResultList());\n+  }\n+\n+\n }\n",
            "diff_size": 847
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "505",
                    "column": "5",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/80/SettingsServiceBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/naturalize/80/SettingsServiceBean.java\nindex 02637bfa8df..db1486e0097 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/80/SettingsServiceBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/naturalize/80/SettingsServiceBean.java\n@@ -120,8 +120,7 @@ public class SettingsServiceBean {\n          * allows calling blocked APIs.\n          */\n         BlockedApiKey,\n-        \n-        \n+\n         /**\n          * How to treat blocked APIs. One of drop, localhost-only, unblock-key\n          */\n@@ -219,9 +218,9 @@ public class SettingsServiceBean {\n         ThumbnailSizeLimitImage,\n         ThumbnailSizeLimitPDF,\n         /* return email address for system emails such as notifications */\n-        SystemEmail, \n-        /* size limit for Tabular data file ingests */\n-        /* (can be set separately for specific ingestable formats; in which \n+        SystemEmail,\n+/* size limit for Tabular data file ingests */\n+/* (can be set separately for specific ingestable formats; in which \n         case the actual stored option will be TabularIngestSizeLimit:{FORMAT_NAME}\n         where {FORMAT_NAME} is the format identification tag returned by the \n         getFormatName() method in the format-specific plugin; \"sav\" for the \n@@ -279,9 +278,7 @@ public class SettingsServiceBean {\n         NavbarAboutUrl,\n         \n         // Option to override multiple guides with a single url\n-        NavbarGuidesUrl,\n-\n-        // Option to overide the feedback dialog display with a link to an external page via its url\n+        NavbarGuidesUrl,// Option to overide the feedback dialog display with a link to an external page via its url\n         NavbarSupportUrl,\n \n         /**\n@@ -297,13 +294,7 @@ public class SettingsServiceBean {\n          * The dictionary filepaths separated by a pipe (|)\n          */\n         PVDictionaries,\n-\n-//        /**\n-//         * The days and minimum length for when to apply an expiration date.\n-//         */\n-//        PVExpirationDays,\n-//        PVValidatorExpirationMaxLength,\n-\n+//       \n         /**\n          * The minimum length of a good, long, strong password.\n          */\n@@ -338,8 +329,8 @@ public class SettingsServiceBean {\n         'DEPENEDENT' means the DOI will be the Dataset DOI plus a file DOI with a slash in between.\n         'INDEPENDENT' means a new global id, completely independent from the dataset-level global id.\n         */\n-        DataFilePIDFormat, \n-        /* Json array of supported languages\n+        DataFilePIDFormat,\n+/* Json array of supported languages\n         */\n         Languages,\n         /*\n@@ -374,9 +365,9 @@ public class SettingsServiceBean {\n          * DuraCloudPort, default is 443\n          * DuraCloudContext, default is \"durastore\"\n          */\n-        \n-        ArchiverClassName,\n-        ArchiverSettings,\n+ArchiverClassName,\n+\n+ArchiverSettings,\n         /**\n          * A comma-separated list of roles for which new dataverses should inherit the\n          * corresponding role assignments from the parent dataverse. Also affects\n@@ -386,10 +377,10 @@ public class SettingsServiceBean {\n         InheritParentRoleAssignments,\n         \n         /** Make Data Count Logging and Display */\n-        MDCLogPath, \n-        DisplayMDCMetrics,\n+        MDCLogPath,\n \n-        /**\n+        DisplayMDCMetrics,\n+/**\n          * Allow CORS flag (true or false). It is true by default\n          *\n          */\n@@ -433,8 +424,7 @@ public class SettingsServiceBean {\n          * Installation Brand Name is always included (default/false) or is not included\n          * when the Distributor field (citation metadatablock) is set (true)\n          */\n-        ExportInstallationAsDistributorOnlyWhenNotSet\n-        ;\n+        ExportInstallationAsDistributorOnlyWhenNotSet;\n \n         @Override\n         public String toString() {\n@@ -482,9 +472,8 @@ public class SettingsServiceBean {\n      * @param key\n      * @return \n      */\n-       public Long getValueForKeyAsLong(Key key){\n-        \n-        String val = this.getValueForKey(key);\n+        public Long getValueForKeyAsLong(Key key){\n+    String val = this.getValueForKey(key);\n \n         if (val == null){\n             return null;\n@@ -497,10 +486,10 @@ public class SettingsServiceBean {\n             logger.log(Level.WARNING, \"Incorrect setting.  Could not convert \\\"{0}\\\" from setting {1} to long.\", new Object[]{val, key.toString()});\n             return null;\n         }\n-        \n-    }\n-    \n-       /**\n+\n+ }\n+\n+    /**\n         * Attempt to convert a value in a compound key to a long\n         *  - Applicable for keys such as MaxFileUploadSizeInBytes after multistore capabilities were added in ~v4.20\n         *  backward compatible with a single value. For multi values, the key's value must be an object with param:value pairs.\n@@ -511,34 +500,32 @@ public class SettingsServiceBean {\n         * @return \n         */\n        public Long getValueForCompoundKeyAsLong(Key key, String param){\n-\n-    \t   String val = this.getValueForKey(key);\n+    String val = this.getValueForKey(key);\n \n     \t   if (val == null){\n-    \t\t   return null;\n-    \t   }\n+    return null;\n+    }\n \n     \t   try {\n-    \t\t   return Long.parseLong(val);\n-    \t   } catch (NumberFormatException ex) {\n-    \t\t   try ( StringReader rdr = new StringReader(val) ) {\n-    \t\t\t   JsonObject settings = Json.createReader(rdr).readObject();\n-    \t\t\t   if(settings.containsKey(param)) {\n-    \t\t\t\t   return Long.parseLong(settings.getString(param));\n-    \t\t\t   } else if(settings.containsKey(\"default\")) {\n-    \t\t\t\t   return Long.parseLong(settings.getString(\"default\"));\n-    \t\t\t   } else {\n-    \t\t\t\t   return null;\n-    \t\t\t   }\n+    return Long.parseLong(val);\n+    } catch (NumberFormatException ex) {\n \n-    \t\t   } catch (Exception e) {\n-    \t\t\t   logger.log(Level.WARNING, \"Incorrect setting.  Could not convert \\\"{0}\\\" from setting {1} to long: {2}\", new Object[]{val, key.toString(), e.getMessage()});\n+            try ( StringReader rdr = new StringReader(val) ) {\n+    JsonObject settings = Json.createReader(rdr).readObject();\n+    \t\t\t   if(settings.containsKey(param)) {\n+    return Long.parseLong(settings.getString(param));\n+    } else if(settings.containsKey(\"default\")) {\n+    return Long.parseLong(settings.getString(\"default\"));\n+    } else {\n+    return null;\n+    }\n+    } catch (Exception e) {\n+    logger.log(Level.WARNING, \"Incorrect setting.  Could not convert \\\"{0}\\\" from setting {1} to long: {2}\", new Object[]{val, key.toString(), e.getMessage()});\n     \t\t\t   return null;\n-    \t\t   }\n-    \t   }\n+    }\n+    }\n+     }\n \n-       }\n-    \n     /**\n      * Return the value stored, or the default value, in case no setting by that\n      * name exists. The main difference between this method and the other {@code get()}s\n@@ -574,10 +561,9 @@ public class SettingsServiceBean {\n     }\n      \n     public Setting set( String name, String content ) {\n-        Setting s = null; \n+    Setting s = null; \n         \n-        List<Setting> tokens = em.createNamedQuery(\"Setting.findByName\", Setting.class)\n-                .setParameter(\"name\", name )\n+        List<Setting> tokens = em.createNamedQuery(\"Setting.findByName\", Setting.class).setParameter(\"name\", name )\n                 .getResultList();\n         \n         if(tokens.size() > 0) {\n@@ -591,16 +577,14 @@ public class SettingsServiceBean {\n         }\n         \n         s = em.merge(s);\n-        actionLogSvc.log( new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"set\")\n-                            .setInfo(name + \": \" + content));\n+        actionLogSvc.log( new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"set\").setInfo(name + \": \" + content));\n         return s;\n     }\n \n     public Setting set( String name, String lang, String content ) {\n         Setting s = null; \n         \n-        List<Setting> tokens = em.createNamedQuery(\"Setting.findByNameAndLang\", Setting.class)\n-                .setParameter(\"name\", name )\n+        List<Setting> tokens = em.createNamedQuery(\"Setting.findByNameAndLang\", Setting.class).setParameter(\"name\", name )\n                 .setParameter(\"lang\", lang )\n                 .getResultList();\n         \n@@ -616,7 +600,7 @@ public class SettingsServiceBean {\n         \n         em.merge(s);\n         actionLogSvc.log( new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"set\")\n-                .setInfo(name + \": \" +lang + \": \" + content));\n+                .setInfo(name + \": \" + lang + \": \" + content));\n         return s;\n     }\n     \n@@ -643,14 +627,13 @@ public class SettingsServiceBean {\n     public boolean isFalseForKey( Key key, boolean defaultValue ) {\n         return ! isTrue( key.toString(), defaultValue );\n     }\n-            \n-    public void deleteValueForKey( Key name ) {\n+\n+public void deleteValueForKey( Key name ) {\n         delete( name.toString() );\n     }\n     \n     public void delete( String name ) {\n-        actionLogSvc.log( new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"delete\")\n-                            .setInfo(name));\n+        actionLogSvc.log( new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"delete\").setInfo(name));\n         em.createNamedQuery(\"Setting.deleteByName\")\n                 .setParameter(\"name\", name)\n                 .executeUpdate();\n@@ -670,4 +653,4 @@ public class SettingsServiceBean {\n     }\n     \n     \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 77
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/80/SettingsServiceBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/80/SettingsServiceBean.java\nindex 02637bfa8df..58d0c040349 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/80/SettingsServiceBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/80/SettingsServiceBean.java\n@@ -6,7 +6,6 @@ import edu.harvard.iq.dataverse.actionlogging.ActionLogServiceBean;\n import edu.harvard.iq.dataverse.api.ApiBlockingFilter;\n import edu.harvard.iq.dataverse.engine.command.DataverseRequest;\n import edu.harvard.iq.dataverse.util.StringUtil;\n-\n import java.io.StringReader;\n import java.util.HashSet;\n import java.util.List;\n@@ -25,10 +24,12 @@ import javax.persistence.PersistenceContext;\n  * Service bean accessing a persistent hash map, used as settings in the application.\n  * @author michael\n  */\n+\n+\n @Stateless\n @Named\n public class SettingsServiceBean {\n-    \n+\n     private static final Logger logger = Logger.getLogger(SettingsServiceBean.class.getCanonicalName());\n     \n     /**\n@@ -37,39 +38,31 @@ public class SettingsServiceBean {\n      * over your shoulder when typing strings in various places of a large app. \n      * So there.\n      */\n+\n     public enum Key {\n         AllowApiTokenLookupViaApi,\n         /**\n          * Ordered, comma-separated list of custom fields to show above the fold\n          * on dataset page such as \"data_type,sample,pdb\"\n-         */\n-        CustomDatasetSummaryFields,\n+         */ CustomDatasetSummaryFields,\n         /**\n          * Defines a public installation -- all datafiles are unrestricted\n-         */\n-        PublicInstall,\n+         */ PublicInstall,\n         /**\n          * Sets the name of your cloud computing environment.\n          * For example, \"Massachusetts Open Cloud\"\n-         */\n-        CloudEnvironmentName,\n+         */ CloudEnvironmentName,\n         /**\n          * Defines the base for a computing environment URL.\n          * The container name will be appended to this on the \"Compute\" button \n-         */\n-        ComputeBaseUrl,\n+         */ ComputeBaseUrl,\n         /**\n          * Enables the provenance collection popup.\n          * Allows users to store their provenance json and description\n-         */\n-        ProvCollectionEnabled,\n+         */ ProvCollectionEnabled,\n         /**\n          * For example, https://datacapture.example.org\n-         */\n-        DataCaptureModuleUrl,\n-        RepositoryStorageAbstractionLayerUrl,\n-        UploadMethods,\n-        DownloadMethods,\n+         */ DataCaptureModuleUrl, RepositoryStorageAbstractionLayerUrl, UploadMethods, DownloadMethods,\n         /**\n          * If the data replicated around the world using RSAL (Repository\n          * Storage Abstraction Layer) is locally available, this is its file\n@@ -77,19 +70,11 @@ public class SettingsServiceBean {\n          *\n          * TODO: Think about if it makes sense to make this a column in the\n          * StorageSite database table.\n-         */\n-        LocalDataAccessPath,\n-        IdentifierGenerationStyle,\n-        OAuth2CallbackUrl,\n-        DefaultAuthProvider,\n-        FooterCopyright,\n-        FileFixityChecksumAlgorithm,\n-        MinutesUntilConfirmEmailTokenExpires,\n+         */ LocalDataAccessPath, IdentifierGenerationStyle, OAuth2CallbackUrl, DefaultAuthProvider, FooterCopyright, FileFixityChecksumAlgorithm, MinutesUntilConfirmEmailTokenExpires,\n         /**\n          * Override Solr highlighting \"fragsize\"\n          * https://wiki.apache.org/solr/HighlightingParameters#hl.fragsize\n-         */\n-        SearchHighlightFragmentSize,\n+         */ SearchHighlightFragmentSize,\n         /**\n          * Revert to MyData *not* using the Solr \"permission documents\" which\n          * was the behavior in Dataverse 4.2. Starting to use Solr permission\n@@ -97,51 +82,40 @@ public class SettingsServiceBean {\n          * https://github.com/IQSS/dataverse/issues/2649 where the \"File\n          * Downloader\" role was exposing cards for unpublished datasets when it\n          * shouldn't.\n-         */\n-        MyDataDoesNotUseSolrPermissionDocs,\n+         */ MyDataDoesNotUseSolrPermissionDocs,\n         /**\n          * In Dataverse 4.7 and earlier, an API token was required to use the\n          * Search API. Tokens are no longer required but you can revert to the\n          * old behavior by setting this to false.\n-         */\n-        SearchApiRequiresToken,\n+         */ SearchApiRequiresToken,\n         /**\n          * Experimental: Use Solr to power the file listing on the dataset page.\n-         */\n-        FilesOnDatasetPageFromSolr,\n+         */ FilesOnDatasetPageFromSolr,\n \n         /**\n          * API endpoints that are not accessible. Comma separated list.\n-         */\n-        BlockedApiEndpoints,\n+         */ BlockedApiEndpoints,\n         \n         /**\n          * A key that, with the right {@link ApiBlockingFilter.BlockPolicy},\n          * allows calling blocked APIs.\n-         */\n-        BlockedApiKey,\n+         */ BlockedApiKey,\n         \n         \n         /**\n          * How to treat blocked APIs. One of drop, localhost-only, unblock-key\n-         */\n-        BlockedApiPolicy,\n+         */ BlockedApiPolicy,\n         \n         /**\n          * For development only (see dev guide for details). Backed by an enum\n          * of possible account types.\n-         */\n-        DebugShibAccountType,\n-        DebugOAuthAccountType,\n-        /** Application-wide Terms of Use per installation. */\n-        ApplicationTermsOfUse,\n-        /** Terms of Use specific to API per installation. */\n-        ApiTermsOfUse,\n+         */ DebugShibAccountType, DebugOAuthAccountType,\n+        /** Application-wide Terms of Use per installation. */ ApplicationTermsOfUse,\n+        /** Terms of Use specific to API per installation. */ ApiTermsOfUse,\n         /**\n          * URL for the application-wide Privacy Policy per installation, linked\n          * to from the footer.\n-         */\n-        ApplicationPrivacyPolicyUrl,\n+         */ ApplicationPrivacyPolicyUrl,\n         /**\n          * A boolean defining if indexing and search should respect the concept\n          * of \"permission root\".\n@@ -161,142 +135,102 @@ public class SettingsServiceBean {\n          * inheritance of permissions. In this mode, all permissions must be\n          * explicitly defined on DvObjects. No implied inheritance.\n          *\n-         */\n-        SearchRespectPermissionRoot,\n-        /** Solr hostname and port, such as \"localhost:8983\". */\n-        SolrHostColonPort,\n-        /** Enable full-text indexing in solr up to max file size */\n-        SolrFullTextIndexing, //true or false (default)\n-        SolrMaxFileSizeForFullTextIndexing, //long - size in bytes (default unset/no limit)\n-        /** Default Key for limiting the number of bytes uploaded via the Data Deposit API, UI (web site and . */\n-        MaxFileUploadSizeInBytes,\n-        /** Key for if ScrubMigrationData is enabled or disabled. */\n-        ScrubMigrationData,\n-        /** Key for the url to send users who want to sign up to. */\n-        SignUpUrl,\n-        /** Key for whether we allow users to sign up */\n-        AllowSignUp,\n-        /** protocol for global id */\n-        Protocol,\n-        /** authority for global id */\n-        Authority,\n-        /** DoiProvider for global id */\n-        DoiProvider,\n-        /** Shoulder for global id - used to create a common prefix on identifiers */\n-        Shoulder,\n+         */ SearchRespectPermissionRoot,\n+        /** Solr hostname and port, such as \"localhost:8983\". */ SolrHostColonPort,\n+        /** Enable full-text indexing in solr up to max file size */ SolrFullTextIndexing, //true or false (default) SolrMaxFileSizeForFullTextIndexing, //long - size in bytes (default unset/no limit)\n+        /** Default Key for limiting the number of bytes uploaded via the Data Deposit API, UI (web site and . */ MaxFileUploadSizeInBytes,\n+        /** Key for if ScrubMigrationData is enabled or disabled. */ ScrubMigrationData,\n+        /** Key for the url to send users who want to sign up to. */ SignUpUrl,\n+        /** Key for whether we allow users to sign up */ AllowSignUp,\n+        /** protocol for global id */ Protocol,\n+        /** authority for global id */ Authority,\n+        /** DoiProvider for global id */ DoiProvider,\n+        /** Shoulder for global id - used to create a common prefix on identifiers */ Shoulder,\n         /* Removed for now - tried to add here but DOI Service Bean didn't like it at start-up\n         DoiUsername,\n         DoiPassword,\n         DoiBaseurlstring,\n         */\n-        /** Optionally override http://guides.dataverse.org . */\n-        GuidesBaseUrl,\n+        /** Optionally override http://guides.dataverse.org . */ GuidesBaseUrl,\n \n         /**\n          * A link to an installation of https://github.com/IQSS/miniverse or\n          * some other metrics app.\n-         */\n-        MetricsUrl,\n+         */ MetricsUrl,\n         \n         /**\n          * Number of minutes before a metrics query can be rerun. Otherwise a cached value is returned.\n          * Previous month dates always return cache. Only applies to new internal caching system (not miniverse).\n-         */\n-        MetricsCacheTimeoutMinutes,\n+         */ MetricsCacheTimeoutMinutes,\n         /* zip download size limit */\n-        /** Optionally override version number in guides. */\n-        GuidesVersion,\n-        ZipDownloadLimit,\n-        /* zip upload number of files limit */\n-        ZipUploadFilesLimit,\n+        /** Optionally override version number in guides. */ GuidesVersion, ZipDownloadLimit,\n+        /* zip upload number of files limit */ ZipUploadFilesLimit,\n         /* the number of files the GUI user is allowed to upload in one batch, \n-            via drag-and-drop, or through the file select dialog */\n-        MultipleUploadFilesLimit,\n+            via drag-and-drop, or through the file select dialog */ MultipleUploadFilesLimit,\n         /* Size limits for generating thumbnails on the fly */\n         /* (i.e., we'll attempt to generate a thumbnail on the fly if the \n          * size of the file is less than this)\n-        */\n-        ThumbnailSizeLimitImage,\n-        ThumbnailSizeLimitPDF,\n-        /* return email address for system emails such as notifications */\n-        SystemEmail, \n+        */ ThumbnailSizeLimitImage, ThumbnailSizeLimitPDF,\n+        /* return email address for system emails such as notifications */ SystemEmail, \n         /* size limit for Tabular data file ingests */\n         /* (can be set separately for specific ingestable formats; in which \n         case the actual stored option will be TabularIngestSizeLimit:{FORMAT_NAME}\n         where {FORMAT_NAME} is the format identification tag returned by the \n         getFormatName() method in the format-specific plugin; \"sav\" for the \n         SPSS/sav format, \"RData\" for R, etc.\n-        for example: :TabularIngestSizeLimit:RData */\n-        TabularIngestSizeLimit,\n+        for example: :TabularIngestSizeLimit:RData */ TabularIngestSizeLimit,\n         /**\n          The message added to a popup upon dataset publish\n          * \n-         */\n-        DatasetPublishPopupCustomText,\n+         */ DatasetPublishPopupCustomText,\n         /*\n         Whether to display the publish text for every published version\n-        */\n-        DatasetPublishPopupCustomTextOnAllVersions,\n+        */ DatasetPublishPopupCustomTextOnAllVersions,\n         /*\n         Whether Harvesting (OAI) service is enabled\n-        */\n-        OAIServerEnabled,\n+        */ OAIServerEnabled,\n         \n         /**\n         * Whether Shibboleth passive authentication mode is enabled\n-        */\n-        ShibPassiveLoginEnabled,\n+        */ ShibPassiveLoginEnabled,\n         /**\n          * Whether Export should exclude FieldType.EMAIL\n-         */\n-        ExcludeEmailFromExport,\n+         */ ExcludeEmailFromExport,\n         /*\n          Location and name of HomePage customization file\n-        */\n-        HomePageCustomizationFile,\n+        */ HomePageCustomizationFile,\n         /*\n          Location and name of Header customization file\n-        */\n-        HeaderCustomizationFile,\n+        */ HeaderCustomizationFile,\n         /*\n          Location and name of Footer customization file\n-        */\n-        FooterCustomizationFile,\n+        */ FooterCustomizationFile,\n         /*\n          Location and name of CSS customization file\n-        */\n-        StyleCustomizationFile,\n+        */ StyleCustomizationFile,\n         /*\n          Location and name of analytics code file\n-        */\n-        WebAnalyticsCode,\n+        */ WebAnalyticsCode,\n         /*\n          Location and name of installation logo customization file\n-        */\n-        LogoCustomizationFile,\n+        */ LogoCustomizationFile,\n         \n-        // Option to override the navbar url underlying the \"About\" link\n-        NavbarAboutUrl,\n+        // Option to override the navbar url underlying the \"About\" link NavbarAboutUrl,\n         \n-        // Option to override multiple guides with a single url\n-        NavbarGuidesUrl,\n+        // Option to override multiple guides with a single url NavbarGuidesUrl,\n \n-        // Option to overide the feedback dialog display with a link to an external page via its url\n-        NavbarSupportUrl,\n+        // Option to overide the feedback dialog display with a link to an external page via its url NavbarSupportUrl,\n \n         /**\n          * The theme for the root dataverse can get in the way when you try make\n          * use of HeaderCustomizationFile and LogoCustomizationFile so this is a\n          * way to disable it.\n-         */\n-        DisableRootDataverseTheme,\n-        // Limit on how many guestbook entries to display on the guestbook-responses page:\n-        GuestbookResponsesPageDisplayLimit,\n+         */ DisableRootDataverseTheme,\n+        // Limit on how many guestbook entries to display on the guestbook-responses page: GuestbookResponsesPageDisplayLimit,\n \n         /**\n          * The dictionary filepaths separated by a pipe (|)\n-         */\n-        PVDictionaries,\n+         */ PVDictionaries,\n \n //        /**\n //         * The days and minimum length for when to apply an expiration date.\n@@ -306,55 +240,43 @@ public class SettingsServiceBean {\n \n         /**\n          * The minimum length of a good, long, strong password.\n-         */\n-        PVGoodStrength,\n+         */ PVGoodStrength,\n \n         /**\n          * A password minimum and maximum length\n-         */\n-        PVMinLength,\n-        PVMaxLength,\n+         */ PVMinLength, PVMaxLength,\n \n         /**\n          * One letter, 2 special characters, etc.\n-         */\n-        PVCharacterRules,\n+         */ PVCharacterRules,\n \n         /**\n          * The number of M characteristics\n-         */\n-        PVNumberOfCharacteristics,\n+         */ PVNumberOfCharacteristics,\n         \n         /**\n          * The number of consecutive digits allowed for a password\n-         */\n-        PVNumberOfConsecutiveDigitsAllowed,\n+         */ PVNumberOfConsecutiveDigitsAllowed,\n         /**\n          * Configurable text for alert/info message on passwordreset.xhtml when users are required to update their password.\n-         */\n-        PVCustomPasswordResetAlertMessage,\n+         */ PVCustomPasswordResetAlertMessage,\n         /*\n         String to describe DOI format for data files. Default is DEPENDENT. \n         'DEPENEDENT' means the DOI will be the Dataset DOI plus a file DOI with a slash in between.\n         'INDEPENDENT' means a new global id, completely independent from the dataset-level global id.\n-        */\n-        DataFilePIDFormat, \n+        */ DataFilePIDFormat, \n         /* Json array of supported languages\n-        */\n-        Languages,\n+        */ Languages,\n         /*\n         Number for the minimum number of files to send PID registration to asynchronous workflow\n-        */\n-        PIDAsynchRegFileCount,\n+        */ PIDAsynchRegFileCount,\n         /**\n          * \n-         */\n-        FilePIDsEnabled,\n+         */ FilePIDsEnabled,\n \n         /**\n          * Indicates if the Handle service is setup to work 'independently' (No communication with the Global Handle Registry)\n-         */\n-        IndependentHandleService,\n+         */ IndependentHandleService,\n \n         /**\n          * Archiving can be configured by providing an Archiver class name (class must extend AstractSubmitToArchiverCommand)\n@@ -373,78 +295,63 @@ public class SettingsServiceBean {\n          * DuraCloudHost , eg. \"qdr.duracloud.org\", a non-null value enables submission\n          * DuraCloudPort, default is 443\n          * DuraCloudContext, default is \"durastore\"\n-         */\n-        \n-        ArchiverClassName,\n-        ArchiverSettings,\n+         */ ArchiverClassName, ArchiverSettings,\n         /**\n          * A comma-separated list of roles for which new dataverses should inherit the\n          * corresponding role assignments from the parent dataverse. Also affects\n          * /api/admin/dataverse/{alias}/addRolesToChildren. Default is \"\", no\n          * inheritance. \"*\" means inherit assignments for all roles\n-         */\n-        InheritParentRoleAssignments,\n+         */ InheritParentRoleAssignments,\n         \n-        /** Make Data Count Logging and Display */\n-        MDCLogPath, \n-        DisplayMDCMetrics,\n+        /** Make Data Count Logging and Display */ MDCLogPath, DisplayMDCMetrics,\n \n         /**\n          * Allow CORS flag (true or false). It is true by default\n          *\n-         */\n-        AllowCors, \n+         */ AllowCors, \n         \n         /**\n          * Lifespan, in minutes, of a login user session\u00a0\n          * (both DataverseSession and the underlying HttpSession)\n-         */\n-        LoginSessionTimeout,\n+         */ LoginSessionTimeout,\n \n         /**\n          * Shibboleth affiliation attribute which holds information about the affiliation of the user (e.g. ou)\n-         */\n-        ShibAffiliationAttribute,\n+         */ ShibAffiliationAttribute,\n         /**\n          * Convert shibboleth AJP attributes from ISO-8859-1 to UTF-8\n-         */\n-        ShibAttributeCharacterSetConversionEnabled,\n+         */ ShibAttributeCharacterSetConversionEnabled,\n         /**\n          * Validate physical files for all the datafiles in the dataset when publishing\n-         */\n-        FileValidationOnPublishEnabled,\n+         */ FileValidationOnPublishEnabled,\n         /**\n          * If defined, this is the URL of the zipping service outside \n          * the main Application Service where zip downloads should be directed\n          * instead of /api/access/datafiles/\n-         */\n-        CustomZipDownloadServiceUrl,\n+         */ CustomZipDownloadServiceUrl,\n         /**\n          * Sort Date Facets Chronologically instead or presenting them in order of # of hits as other facets are. Default is true\n-         */\n-        ChronologicalDateFacets,\n+         */ ChronologicalDateFacets,\n         \n         /**\n          * Used where BrandingUtil.getInstallationBrandName is called, overides the default use of the root Dataverse collection name\n-         */\n-        InstallationName,\n+         */ InstallationName,\n         /**\n          * In metadata exports that set a 'distributor' this flag determines whether the\n          * Installation Brand Name is always included (default/false) or is not included\n          * when the Distributor field (citation metadatablock) is set (true)\n-         */\n-        ExportInstallationAsDistributorOnlyWhenNotSet\n-        ;\n+         */ ExportInstallationAsDistributorOnlyWhenNotSet;\n \n         @Override\n         public String toString() {\n             return \":\" + name();\n         }\n+\n     }\n-    \n+\n     @PersistenceContext\n     EntityManager em;\n-    \n+\n     @EJB\n     ActionLogServiceBean actionLogSvc;\n     \n@@ -453,15 +360,14 @@ public class SettingsServiceBean {\n      * @param name of the setting\n      * @return the actual setting, or {@code null}.\n      */\n-    public String get( String name ) {\n-        List<Setting> tokens = em.createNamedQuery(\"Setting.findByName\", Setting.class)\n-                .setParameter(\"name\", name )\n-                .getResultList();\n+\n+    public String get(String name) {\n+        List<Setting> tokens = em.createNamedQuery(\"Setting.findByName\", Setting.class).setParameter(\"name\", name).getResultList();\n         String val = null;\n-        if(tokens.size() > 0) {\n+        if (tokens.size() > 0) {\n             val = tokens.get(0).getContent();\n         }\n-        return (val!=null) ? val : null;\n+        return (val != null) ? val : null;\n     }\n     \n     /**\n@@ -469,7 +375,8 @@ public class SettingsServiceBean {\n      * @param key Enum value of the name.\n      * @return The setting, or {@code null}.\n      */\n-    public String getValueForKey( Key key ) {\n+\n+    public String getValueForKey(Key key) {\n         return get(key.toString());\n     }\n     \n@@ -482,22 +389,21 @@ public class SettingsServiceBean {\n      * @param key\n      * @return \n      */\n-       public Long getValueForKeyAsLong(Key key){\n-        \n-        String val = this.getValueForKey(key);\n \n-        if (val == null){\n+    public Long getValueForKeyAsLong(Key key) {\n+        String val = this.getValueForKey(key);\n+        if (val == null) {\n             return null;\n         }\n-\n         try {\n             long valAsInt = Long.parseLong(val);\n             return valAsInt;\n         } catch (NumberFormatException ex) {\n-            logger.log(Level.WARNING, \"Incorrect setting.  Could not convert \\\"{0}\\\" from setting {1} to long.\", new Object[]{val, key.toString()});\n+            logger.log(Level.WARNING,\n+                       \"Incorrect setting.  Could not convert \\\"{0}\\\" from setting {1} to long.\",\n+                   new Object[]{val, key.toString()});\n             return null;\n         }\n-        \n     }\n     \n        /**\n@@ -510,34 +416,30 @@ public class SettingsServiceBean {\n         * @param key\n         * @return \n         */\n-       public Long getValueForCompoundKeyAsLong(Key key, String param){\n-\n-    \t   String val = this.getValueForKey(key);\n-\n-    \t   if (val == null){\n-    \t\t   return null;\n-    \t   }\n-\n-    \t   try {\n-    \t\t   return Long.parseLong(val);\n-    \t   } catch (NumberFormatException ex) {\n-    \t\t   try ( StringReader rdr = new StringReader(val) ) {\n-    \t\t\t   JsonObject settings = Json.createReader(rdr).readObject();\n-    \t\t\t   if(settings.containsKey(param)) {\n-    \t\t\t\t   return Long.parseLong(settings.getString(param));\n-    \t\t\t   } else if(settings.containsKey(\"default\")) {\n-    \t\t\t\t   return Long.parseLong(settings.getString(\"default\"));\n-    \t\t\t   } else {\n-    \t\t\t\t   return null;\n-    \t\t\t   }\n-\n-    \t\t   } catch (Exception e) {\n-    \t\t\t   logger.log(Level.WARNING, \"Incorrect setting.  Could not convert \\\"{0}\\\" from setting {1} to long: {2}\", new Object[]{val, key.toString(), e.getMessage()});\n-    \t\t\t   return null;\n-    \t\t   }\n-    \t   }\n-\n-       }\n+\n+    public Long getValueForCompoundKeyAsLong(Key key, String param) {\n+        String val = this.getValueForKey(key);\n+        if (val == null) {\n+            return null;\n+        }\n+        try {\n+            return Long.parseLong(val);\n+        } catch (NumberFormatException ex) {\n+            try (StringReader rdr = new StringReader(val)) {\n+                JsonObject settings = Json.createReader(rdr).readObject();\n+                if (settings.containsKey(param)) {\n+                    return Long.parseLong(settings.getString(param));\n+                } else if (settings.containsKey(\"default\")) {\n+                    return Long.parseLong(settings.getString(\"default\"));\n+                } else {\n+                    return null;\n+                }\n+            } catch (Exception e) {\n+                logger.log(Level.WARNING, \"Incorrect setting.  Could not convert \\\"{0}\\\" from setting {1} to long: {2}\", new Object[]{val, key.toString(), e.getMessage()});\n+                return null;\n+            }\n+        }\n+    }\n     \n     /**\n      * Return the value stored, or the default value, in case no setting by that\n@@ -548,80 +450,65 @@ public class SettingsServiceBean {\n      * @param defaultValue The value to return if no setting is found in the DB.\n      * @return Either the stored value, or the default value.\n      */\n-    public String get( String name, String defaultValue ) {\n+\n+    public String get(String name, String defaultValue) {\n         String val = get(name);\n-        return (val!=null) ? val : defaultValue;\n+        return (val != null) ? val : defaultValue;\n     }\n \n-    public String get(String name, String lang, String defaultValue ) {\n-        List<Setting> tokens = em.createNamedQuery(\"Setting.findByNameAndLang\", Setting.class)\n-                .setParameter(\"name\", name )\n-                .setParameter(\"lang\", lang )\n-                .getResultList();\n+    public String get(String name, String lang, String defaultValue) {\n+        List<Setting> tokens = em.createNamedQuery(\"Setting.findByNameAndLang\", Setting.class).setParameter(\"name\", name).setParameter(\"lang\", lang).getResultList();\n         String val = null;\n-        if(tokens.size() > 0) {\n+        if (tokens.size() > 0) {\n             val = tokens.get(0).getContent();\n         }\n-        return (val!=null) ? val : defaultValue;\n+        return (val != null) ? val : defaultValue;\n     }\n-    \n-    public String getValueForKey( Key key, String defaultValue ) {\n-        return get( key.toString(), defaultValue );\n+\n+    public String getValueForKey(Key key, String defaultValue) {\n+        return get(key.toString(), defaultValue);\n     }\n \n-    public String getValueForKey( Key key, String lang, String defaultValue ) {\n-        return get( key.toString(), lang, defaultValue );\n+    public String getValueForKey(Key key, String lang, String defaultValue) {\n+        return get(key.toString(), lang, defaultValue);\n     }\n-     \n-    public Setting set( String name, String content ) {\n-        Setting s = null; \n-        \n-        List<Setting> tokens = em.createNamedQuery(\"Setting.findByName\", Setting.class)\n-                .setParameter(\"name\", name )\n-                .getResultList();\n-        \n-        if(tokens.size() > 0) {\n+\n+    public Setting set(String name, String content) {\n+        Setting s = null;\n+        List<Setting> tokens = em.createNamedQuery(\"Setting.findByName\", Setting.class).setParameter(\"name\", name).getResultList();\n+        if (tokens.size() > 0) {\n             s = tokens.get(0);\n         }\n-        \n+\n         if (s == null) {\n-            s = new Setting( name, content );\n+            s = new Setting(name, content);\n         } else {\n             s.setContent(content);\n         }\n-        \n         s = em.merge(s);\n-        actionLogSvc.log( new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"set\")\n-                            .setInfo(name + \": \" + content));\n+        actionLogSvc.log(new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"set\").setInfo(name + \": \" + content));\n         return s;\n     }\n \n-    public Setting set( String name, String lang, String content ) {\n-        Setting s = null; \n-        \n-        List<Setting> tokens = em.createNamedQuery(\"Setting.findByNameAndLang\", Setting.class)\n-                .setParameter(\"name\", name )\n-                .setParameter(\"lang\", lang )\n-                .getResultList();\n-        \n-        if(tokens.size() > 0) {\n+    public Setting set(String name, String lang, String content) {\n+        Setting s = null;\n+        List<Setting> tokens = em.createNamedQuery(\"Setting.findByNameAndLang\", Setting.class).setParameter(\"name\", name).setParameter(\"lang\", lang).getResultList();\n+        if (tokens.size() > 0) {\n             s = tokens.get(0);\n         }\n-        \n+\n         if (s == null) {\n-            s = new Setting( name, lang, content );\n+            s = new Setting(name, lang, content);\n         } else {\n             s.setContent(content);\n         }\n-        \n         em.merge(s);\n-        actionLogSvc.log( new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"set\")\n-                .setInfo(name + \": \" +lang + \": \" + content));\n+        actionLogSvc.log(new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"set\").setInfo(name + \": \" + lang + \": \" + content));\n         return s;\n     }\n-    \n-    public Setting setValueForKey( Key key, String content ) {\n-        return set( key.toString(), content );\n+\n+    public Setting setValueForKey(Key key, String content) {\n+        return set(key.toString(), content);\n     }\n     \n     /**\n@@ -631,43 +518,36 @@ public class SettingsServiceBean {\n      * @param defaultValue logical value of {@code null}.\n      * @return boolean value of the setting.\n      */\n-    public boolean isTrue( String name, boolean defaultValue ) {\n+\n+    public boolean isTrue(String name, boolean defaultValue) {\n         String val = get(name);\n-        return ( val==null ) ? defaultValue : StringUtil.isTrue(val);\n+        return (val == null) ? defaultValue : StringUtil.isTrue(val);\n     }\n-    \n-    public boolean isTrueForKey( Key key, boolean defaultValue ) {\n-        return isTrue( key.toString(), defaultValue );\n+\n+    public boolean isTrueForKey(Key key, boolean defaultValue) {\n+        return isTrue(key.toString(), defaultValue);\n     }\n \n-    public boolean isFalseForKey( Key key, boolean defaultValue ) {\n-        return ! isTrue( key.toString(), defaultValue );\n+    public boolean isFalseForKey(Key key, boolean defaultValue) {\n+        return !isTrue(key.toString(), defaultValue);\n     }\n-            \n-    public void deleteValueForKey( Key name ) {\n-        delete( name.toString() );\n+\n+    public void deleteValueForKey(Key name) {\n+        delete(name.toString());\n     }\n-    \n-    public void delete( String name ) {\n-        actionLogSvc.log( new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"delete\")\n-                            .setInfo(name));\n-        em.createNamedQuery(\"Setting.deleteByName\")\n-                .setParameter(\"name\", name)\n-                .executeUpdate();\n+\n+    public void delete(String name) {\n+        actionLogSvc.log(new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"delete\").setInfo(name));\n+        em.createNamedQuery(\"Setting.deleteByName\").setParameter(\"name\", name).executeUpdate();\n     }\n \n-    public void delete( String name, String lang ) {\n-        actionLogSvc.log( new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"delete\")\n-                .setInfo(name));\n-        em.createNamedQuery(\"Setting.deleteByNameAndLang\")\n-                .setParameter(\"name\", name)\n-                .setParameter(\"lang\", lang)\n-                .executeUpdate();\n+    public void delete(String name, String lang) {\n+        actionLogSvc.log(new ActionLogRecord(ActionLogRecord.ActionType.Setting, \"delete\").setInfo(name));\n+        em.createNamedQuery(\"Setting.deleteByNameAndLang\").setParameter(\"name\", name).setParameter(\"lang\", lang).executeUpdate();\n     }\n-    \n+\n     public Set<Setting> listAll() {\n         return new HashSet<>(em.createNamedQuery(\"Setting.findAll\", Setting.class).getResultList());\n     }\n-    \n-    \n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 304
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "517",
                    "column": "5",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/80/SettingsServiceBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/80/SettingsServiceBean.java\nindex 02637bfa8df..d98a5523f8e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/80/SettingsServiceBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/80/SettingsServiceBean.java\n@@ -512,7 +512,7 @@ public class SettingsServiceBean {\n         */\n        public Long getValueForCompoundKeyAsLong(Key key, String param){\n \n-    \t   String val = this.getValueForKey(key);\n+           String val = this.getValueForKey(key);\n \n     \t   if (val == null){\n     \t\t   return null;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "517",
                    "column": "5",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/80/SettingsServiceBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/80/SettingsServiceBean.java\nindex 02637bfa8df..8b8c5bd84f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/80/SettingsServiceBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/80/SettingsServiceBean.java\n@@ -512,7 +512,7 @@ public class SettingsServiceBean {\n         */\n        public Long getValueForCompoundKeyAsLong(Key key, String param){\n \n-    \t   String val = this.getValueForKey(key);\n+       String val = this.getValueForKey(key);\n \n     \t   if (val == null){\n     \t\t   return null;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
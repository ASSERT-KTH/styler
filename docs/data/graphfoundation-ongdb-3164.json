{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3164",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3164/Neo4jError.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3164/Neo4jError.java\nindex ed0aa527bb2..efcb22e4caa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3164/Neo4jError.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3164/Neo4jError.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.transactional.error;\n \n import java.io.PrintWriter;\n@@ -37,84 +38,84 @@ import org.neo4j.kernel.api.exceptions.Status;\n  */\n public class Neo4jError\n {\n-    private final Status status;\n-    private final Throwable cause;\n+  private final Status status;\n+  private final Throwable cause;\n \n-    public Neo4jError( Status status, String message )\n-    {\n-        this( status, new RuntimeException( message ) );\n-    }\n+  public Neo4jError(Status status, String message)\n+  {\n+    this(status, new RuntimeException(message));\n+  }\n \n-    public Neo4jError( Status status, Throwable cause )\n+  public Neo4jError(Status status, Throwable cause)\n+  {\n+    if (status == null)\n     {\n-        if ( status == null )\n-        {\n-            throw new IllegalArgumentException( \"statusCode must not be null\" );\n-        }\n-        if ( cause == null )\n-        {\n-            throw new IllegalArgumentException( \"cause must not be null\" );\n-        }\n-\n-        this.status = status;\n-        this.cause = cause;\n+      throw new IllegalArgumentException(\"statusCode must not be null\");\n     }\n-\n-    @Override\n-    public String toString()\n+    if (cause == null)\n     {\n-        cause.printStackTrace();\n-        return String.format( \"%s[%s, cause=\\\"%s\\\"]\",\n-                              getClass().getSimpleName(), status.code(), cause );\n+      throw new IllegalArgumentException(\"cause must not be null\");\n     }\n \n-    public Throwable cause()\n-    {\n-        return cause;\n-    }\n+    this.status = status;\n+    this.cause = cause;\n+  }\n \n-    public Status status()\n-    {\n-        return status;\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    cause.printStackTrace();\n+    return String.format(\"%s[%s, cause=\\\"%s\\\"]\",\n+        getClass().getSimpleName(), status.code(), cause);\n+  }\n \n-    public String getMessage()\n-    {\n-        return cause.getMessage();\n-    }\n+  public Throwable cause()\n+  {\n+    return cause;\n+  }\n+\n+  public Status status()\n+  {\n+    return status;\n+  }\n+\n+  public String getMessage()\n+  {\n+    return cause.getMessage();\n+  }\n \n-    public boolean shouldSerializeStackTrace()\n+  public boolean shouldSerializeStackTrace()\n+  {\n+    switch (status.code().classification())\n     {\n-        switch ( status.code().classification() )\n-        {\n-        case ClientError:\n-            return false;\n-        default:\n-            return true;\n-        }\n+      case ClientError:\n+        return false;\n+      default:\n+        return true;\n     }\n+  }\n+\n+  public String getStackTraceAsString()\n+  {\n+    StringWriter stringWriter = new StringWriter();\n+    PrintWriter printWriter = new PrintWriter(stringWriter);\n+    cause.printStackTrace(printWriter);\n+    return stringWriter.toString();\n+  }\n \n-    public String getStackTraceAsString()\n+  public static boolean shouldRollBackOn(Collection<Neo4jError> errors)\n+  {\n+    if (errors.isEmpty())\n     {\n-        StringWriter stringWriter = new StringWriter(  );\n-        PrintWriter printWriter = new PrintWriter( stringWriter );\n-        cause.printStackTrace( printWriter );\n-        return stringWriter.toString();\n+      return false;\n     }\n-\n-    public static boolean shouldRollBackOn( Collection<Neo4jError> errors )\n+    for (Neo4jError error : errors)\n     {\n-        if ( errors.isEmpty() )\n-        {\n-            return false;\n-        }\n-        for ( Neo4jError error : errors )\n-        {\n-            if ( error.status().code().classification().rollbackTransaction() )\n-            {\n-                return true;\n-            }\n-        }\n-        return false;\n+      if (error.status().code().classification().rollbackTransaction())\n+      {\n+        return true;\n+      }\n     }\n+    return false;\n+  }\n }\n",
            "diff_size": 94
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3164/Neo4jError.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3164/Neo4jError.java\nindex ed0aa527bb2..7adf6c35b24 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3164/Neo4jError.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3164/Neo4jError.java\n@@ -51,7 +51,8 @@ public class Neo4jError\n         {\n             throw new IllegalArgumentException( \"statusCode must not be null\" );\n         }\n-        if ( cause == null )\n+\n+if ( cause == null )\n         {\n             throw new IllegalArgumentException( \"cause must not be null\" );\n         }\n@@ -64,8 +65,7 @@ public class Neo4jError\n     public String toString()\n     {\n         cause.printStackTrace();\n-        return String.format( \"%s[%s, cause=\\\"%s\\\"]\",\n-                              getClass().getSimpleName(), status.code(), cause );\n+        return String.format( \"%s[%s, cause=\\\"%s\\\"]\", getClass().getSimpleName(), status.code(), cause );\n     }\n \n     public Throwable cause()\n@@ -96,7 +96,7 @@ public class Neo4jError\n \n     public String getStackTraceAsString()\n     {\n-        StringWriter stringWriter = new StringWriter(  );\n+        StringWriter stringWriter = new StringWriter();\n         PrintWriter printWriter = new PrintWriter( stringWriter );\n         cause.printStackTrace( printWriter );\n         return stringWriter.toString();\n@@ -117,4 +117,4 @@ public class Neo4jError\n         }\n         return false;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "112",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "112",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3164/Neo4jError.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3164/Neo4jError.java\nindex ed0aa527bb2..d409b8ff1cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3164/Neo4jError.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3164/Neo4jError.java\n@@ -22,7 +22,6 @@ package org.neo4j.server.rest.transactional.error;\n import java.io.PrintWriter;\n import java.io.StringWriter;\n import java.util.Collection;\n-\n import org.neo4j.kernel.api.exceptions.Status;\n \n /**\n@@ -35,6 +34,7 @@ import org.neo4j.kernel.api.exceptions.Status;\n  * <p>\n  * This way, we make it easy to transition this service over to a unified error code based error scheme.\n  */\n+\n public class Neo4jError\n {\n     private final Status status;\n@@ -51,6 +51,7 @@ public class Neo4jError\n         {\n             throw new IllegalArgumentException( \"statusCode must not be null\" );\n         }\n+\n         if ( cause == null )\n         {\n             throw new IllegalArgumentException( \"cause must not be null\" );\n@@ -64,8 +65,7 @@ public class Neo4jError\n     public String toString()\n     {\n         cause.printStackTrace();\n-        return String.format( \"%s[%s, cause=\\\"%s\\\"]\",\n-                              getClass().getSimpleName(), status.code(), cause );\n+        return String.format( \"%s[%s, cause=\\\"%s\\\"]\", getClass().getSimpleName(), status.code(), cause );\n     }\n \n     public Throwable cause()\n@@ -96,7 +96,7 @@ public class Neo4jError\n \n     public String getStackTraceAsString()\n     {\n-        StringWriter stringWriter = new StringWriter(  );\n+        StringWriter stringWriter = new StringWriter();\n         PrintWriter printWriter = new PrintWriter( stringWriter );\n         cause.printStackTrace( printWriter );\n         return stringWriter.toString();\n@@ -108,13 +108,15 @@ public class Neo4jError\n         {\n             return false;\n         }\n-        for ( Neo4jError error : errors )\n+\n+        for( Neo4jError error : errors)\n         {\n             if ( error.status().code().classification().rollbackTransaction() )\n             {\n                 return true;\n             }\n         }\n+\n         return false;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
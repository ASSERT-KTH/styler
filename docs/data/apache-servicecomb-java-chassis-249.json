{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "249",
    "information": {
        "errors": [
            {
                "line": "192",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  /**\n   * after this method, connection will be recycled to connection pool\n   * @param responseBuf response body buffer, when download, responseBuf is null, because download data by ReadStreamPart\n   */\n  protected void processResponseBody(Buffer responseBuf) {\n    DefaultHttpSocketMetric httpSocketMetric = (DefaultHttpSocketMetric) ((ConnectionBase) clientRequest.connection())",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "192",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "193",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/249/RestClientInvocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/249/RestClientInvocation.java\nindex 12d433d5599..78854bd44e1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/249/RestClientInvocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/249/RestClientInvocation.java\n@@ -189,6 +189,7 @@ public class RestClientInvocation {\n \n   /**\n    * after this method, connection will be recycled to connection pool\n+   *\n    * @param responseBuf response body buffer, when download, responseBuf is null, because download data by ReadStreamPart\n    */\n   protected void processResponseBody(Buffer responseBuf) {\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "188",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/249/RestClientInvocation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/249/RestClientInvocation.java\nindex 12d433d5599..adb4aab1636 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/249/RestClientInvocation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/249/RestClientInvocation.java\n@@ -108,14 +108,10 @@ public class RestClientInvocation {\n     clientRequest.connectionHandler(connection -> {\n       LOGGER.debug(\"http connection connected, local:{}, remote:{}.\",\n           connection.localAddress(), connection.remoteAddress());\n-      connection.closeHandler(v ->\n-          LOGGER.debug(\"http connection closed, local:{}, remote:{}.\",\n-              connection.localAddress(), connection.remoteAddress())\n-      );\n-      connection.exceptionHandler(e ->\n-          LOGGER.info(\"http connection exception, local:{}, remote:{}.\",\n-              connection.localAddress(), connection.remoteAddress(), e)\n-      );\n+      connection.closeHandler(v -> LOGGER.debug(\"http connection closed, local:{}, remote:{}.\",\n+              connection.localAddress(), connection.remoteAddress()));\n+      connection.exceptionHandler(e -> LOGGER.info(\"http connection exception, local:{}, remote:{}.\",\n+              connection.localAddress(), connection.remoteAddress(), e));\n     });\n \n     // \u4ece\u4e1a\u52a1\u7ebf\u7a0b\u8f6c\u79fb\u5230\u7f51\u7edc\u7ebf\u7a0b\u4e2d\u53bb\u53d1\u9001\n@@ -281,4 +277,4 @@ public class RestClientInvocation {\n \n     return urlPrefix + path;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "192",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "192",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
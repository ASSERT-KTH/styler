{
    "project_name": "wso2-attic-commons",
    "error_id": "55",
    "information": {
        "errors": [
            {
                "line": "63",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 158).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    @NamedQuery(name = \"ShowTiming.findAll\", query = \"SELECT s FROM ShowTiming s\"),\n    @NamedQuery(name = \"ShowTiming.findById\", query = \"SELECT s FROM ShowTiming s WHERE s.id = :id\"),\n    @NamedQuery(name = \"ShowTiming.findByMovieAndTimingId\", query = \"SELECT s FROM ShowTiming s WHERE s.movieId.id = :movieId AND s.timingId.id = :timingId\"),\n    @NamedQuery(name = \"ShowTiming.findByDay\", query = \"SELECT s FROM ShowTiming s WHERE s.day = :day\")})\npublic class ShowTiming implements Serializable {\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/55/ShowTiming.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/55/ShowTiming.java\nindex 59eb80db81c..1a07fb36924 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/55/ShowTiming.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/55/ShowTiming.java\n@@ -60,8 +60,9 @@ import javax.xml.bind.annotation.XmlRootElement;\n @NamedQueries({\n     @NamedQuery(name = \"ShowTiming.findAll\", query = \"SELECT s FROM ShowTiming s\"),\n     @NamedQuery(name = \"ShowTiming.findById\", query = \"SELECT s FROM ShowTiming s WHERE s.id = :id\"),\n-    @NamedQuery(name = \"ShowTiming.findByMovieAndTimingId\", query = \"SELECT s FROM ShowTiming s WHERE s.movieId.id = :movieId AND s.timingId.id = :timingId\"),\n-    @NamedQuery(name = \"ShowTiming.findByDay\", query = \"SELECT s FROM ShowTiming s WHERE s.day = :day\")})\n+    @NamedQuery(name = \"ShowTiming.findByMovieAndTimingId\", query =\n+            \"SELECT s FROM ShowTiming s WHERE s.movieId.id = :movieId AND s.timingId.id = :timingId\"),\n+     @NamedQuery(name = \"ShowTiming.findByDay\", query = \"SELECT s FROM ShowTiming s WHERE s.day = :day\")})\n public class ShowTiming implements Serializable {\n \n     private static final long serialVersionUID = 1L;\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/55/ShowTiming.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/55/ShowTiming.java\nindex 59eb80db81c..88db1cab8a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/55/ShowTiming.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/55/ShowTiming.java\n@@ -37,6 +37,7 @@\n  * only if the new code is made subject to such option by the copyright\n  * holder.\n  */\n+\n package org.glassfish.movieplex7.entities;\n \n import java.io.Serializable;\n@@ -58,106 +59,106 @@ import javax.xml.bind.annotation.XmlRootElement;\n @Table(name = \"SHOW_TIMING\")\n @XmlRootElement\n @NamedQueries({\n-    @NamedQuery(name = \"ShowTiming.findAll\", query = \"SELECT s FROM ShowTiming s\"),\n-    @NamedQuery(name = \"ShowTiming.findById\", query = \"SELECT s FROM ShowTiming s WHERE s.id = :id\"),\n-    @NamedQuery(name = \"ShowTiming.findByMovieAndTimingId\", query = \"SELECT s FROM ShowTiming s WHERE s.movieId.id = :movieId AND s.timingId.id = :timingId\"),\n-    @NamedQuery(name = \"ShowTiming.findByDay\", query = \"SELECT s FROM ShowTiming s WHERE s.day = :day\")})\n+  @NamedQuery(name = \"ShowTiming.findAll\", query = \"SELECT s FROM ShowTiming s\"),\n+  @NamedQuery(name = \"ShowTiming.findById\", query = \"SELECT s FROM ShowTiming s WHERE s.id = :id\"),\n+  @NamedQuery(name = \"ShowTiming.findByMovieAndTimingId\", query = \"SELECT s FROM ShowTiming s WHERE s.movieId.id = :movieId AND s.timingId.id = :timingId\"),\n+  @NamedQuery(name = \"ShowTiming.findByDay\", query = \"SELECT s FROM ShowTiming s WHERE s.day = :day\")})\n public class ShowTiming implements Serializable {\n \n-    private static final long serialVersionUID = 1L;\n-    @Id\n-    @NotNull\n-    private Integer id;\n-    \n-    @NotNull\n-    private int day;\n-    \n-    @JoinColumn(name = \"TIMING_ID\", referencedColumnName = \"ID\")\n-    @ManyToOne(optional = false)\n-    private Timeslot timingId;\n-    \n-    @JoinColumn(name = \"THEATER_ID\", referencedColumnName = \"ID\")\n-    @ManyToOne(optional = false)\n-    private Theater theaterId;\n-    \n-    @JoinColumn(name = \"MOVIE_ID\", referencedColumnName = \"ID\")\n-    @ManyToOne(optional = false)\n-    private Movie movieId;\n-    \n-    public ShowTiming() {\n-    }\n-\n-    public ShowTiming(Integer id) {\n-        this.id = id;\n-    }\n-\n-    public ShowTiming(Integer id, int day) {\n-        this.id = id;\n-        this.day = day;\n-    }\n-\n-    public Integer getId() {\n-        return id;\n-    }\n-\n-    public void setId(Integer id) {\n-        this.id = id;\n-    }\n-\n-    public int getDay() {\n-        return day;\n-    }\n-\n-    public void setDay(int day) {\n-        this.day = day;\n-    }\n-\n-    public Timeslot getTimingId() {\n-        return timingId;\n-    }\n-\n-    public void setTimingId(Timeslot timingId) {\n-        this.timingId = timingId;\n-    }\n-\n-    public Theater getTheaterId() {\n-        return theaterId;\n-    }\n-\n-    public void setTheaterId(Theater theaterId) {\n-        this.theaterId = theaterId;\n-    }\n-\n-    public Movie getMovieId() {\n-        return movieId;\n-    }\n-\n-    public void setMovieId(Movie movieId) {\n-        this.movieId = movieId;\n-    }\n-\n-    @Override\n-    public int hashCode() {\n-        int hash = 0;\n-        hash += (id != null ? id.hashCode() : 0);\n-        return hash;\n-    }\n-\n-    @Override\n-    public boolean equals(Object object) {\n-        // TODO: Warning - this method won't work in the case the id fields are not set\n-        if (!(object instanceof ShowTiming)) {\n-            return false;\n-        }\n-        ShowTiming other = (ShowTiming) object;\n-        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return movieId.getName() + \", \" + timingId.getStartTime();\n-    }\n+  private static final long serialVersionUID = 1L;\n+  @Id\n+  @NotNull\n+  private Integer id;\n+\n+  @NotNull\n+  private int day;\n+\n+  @JoinColumn(name = \"TIMING_ID\", referencedColumnName = \"ID\")\n+  @ManyToOne(optional = false)\n+  private Timeslot timingId;\n+\n+  @JoinColumn(name = \"THEATER_ID\", referencedColumnName = \"ID\")\n+  @ManyToOne(optional = false)\n+  private Theater theaterId;\n+\n+  @JoinColumn(name = \"MOVIE_ID\", referencedColumnName = \"ID\")\n+  @ManyToOne(optional = false)\n+  private Movie movieId;\n+\n+  public ShowTiming() {\n+  }\n+\n+  public ShowTiming(Integer id) {\n+    this.id = id;\n+  }\n+\n+  public ShowTiming(Integer id, int day) {\n+    this.id = id;\n+    this.day = day;\n+  }\n+\n+  public Integer getId() {\n+    return id;\n+  }\n+\n+  public void setId(Integer id) {\n+    this.id = id;\n+  }\n+\n+  public int getDay() {\n+    return day;\n+  }\n+\n+  public void setDay(int day) {\n+    this.day = day;\n+  }\n+\n+  public Timeslot getTimingId() {\n+    return timingId;\n+  }\n+\n+  public void setTimingId(Timeslot timingId) {\n+    this.timingId = timingId;\n+  }\n+\n+  public Theater getTheaterId() {\n+    return theaterId;\n+  }\n+\n+  public void setTheaterId(Theater theaterId) {\n+    this.theaterId = theaterId;\n+  }\n+\n+  public Movie getMovieId() {\n+    return movieId;\n+  }\n+\n+  public void setMovieId(Movie movieId) {\n+    this.movieId = movieId;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    int hash = 0;\n+    hash += (id != null ? id.hashCode() : 0);\n+    return hash;\n+  }\n+\n+  @Override\n+  public boolean equals(Object object) {\n+    // TODO: Warning - this method won't work in the case the id fields are not set\n+    if (!(object instanceof ShowTiming)) {\n+      return false;\n+    }\n+    ShowTiming other = (ShowTiming) object;\n+    if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {\n+      return false;\n+    }\n+    return true;\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return movieId.getName() + \", \" + timingId.getStartTime();\n+  }\n }\n",
            "diff_size": 101
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/55/ShowTiming.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/55/ShowTiming.java\nindex 59eb80db81c..a717d648f63 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/55/ShowTiming.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/55/ShowTiming.java\n@@ -160,4 +160,4 @@ public class ShowTiming implements Serializable {\n     public String toString() {\n         return movieId.getName() + \", \" + timingId.getStartTime();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 158).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/55/ShowTiming.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/55/ShowTiming.java\nindex 59eb80db81c..1a07fb36924 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/55/ShowTiming.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/55/ShowTiming.java\n@@ -60,8 +60,9 @@ import javax.xml.bind.annotation.XmlRootElement;\n @NamedQueries({\n     @NamedQuery(name = \"ShowTiming.findAll\", query = \"SELECT s FROM ShowTiming s\"),\n     @NamedQuery(name = \"ShowTiming.findById\", query = \"SELECT s FROM ShowTiming s WHERE s.id = :id\"),\n-    @NamedQuery(name = \"ShowTiming.findByMovieAndTimingId\", query = \"SELECT s FROM ShowTiming s WHERE s.movieId.id = :movieId AND s.timingId.id = :timingId\"),\n-    @NamedQuery(name = \"ShowTiming.findByDay\", query = \"SELECT s FROM ShowTiming s WHERE s.day = :day\")})\n+    @NamedQuery(name = \"ShowTiming.findByMovieAndTimingId\", query =\n+            \"SELECT s FROM ShowTiming s WHERE s.movieId.id = :movieId AND s.timingId.id = :timingId\"),\n+     @NamedQuery(name = \"ShowTiming.findByDay\", query = \"SELECT s FROM ShowTiming s WHERE s.day = :day\")})\n public class ShowTiming implements Serializable {\n \n     private static final long serialVersionUID = 1L;\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
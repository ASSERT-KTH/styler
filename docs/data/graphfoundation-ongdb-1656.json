{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1656",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "93",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "113",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "117",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "129",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "131",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "150",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1656/StoreCopyCheckPointMutex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1656/StoreCopyCheckPointMutex.java\nindex 09e24f589fd..305ef7a4cf1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1656/StoreCopyCheckPointMutex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1656/StoreCopyCheckPointMutex.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.checkpoint;\n \n import java.io.IOException;\n@@ -50,7 +51,7 @@ import static java.util.concurrent.TimeUnit.MILLISECONDS;\n  *            |                                   |\n  *            <-CHECKPOINT--|-STORE-COPY---------->\n  * </pre>\n- *\n+ * <p>\n  * In the image above there are three \"events\":\n  * <ol>\n  * <li>Store-copy 1, where there are three concurrent store-copies going on.\n@@ -59,145 +60,140 @@ import static java.util.concurrent.TimeUnit.MILLISECONDS;\n  * <li>Store-copy 2, which waits for the external check-point to complete and then starts its own\n  * check-point, which is part of the store-copy algorithm to then perform the store-copy.</li>\n  * </ol>\n- *\n+ * <p>\n  * Status changes are made in synchronized as opposed to atomic CAS operations, since this results\n  * in simpler code and since this mutex is normally called a couple of times per hour it's not an issue.\n  */\n public class StoreCopyCheckPointMutex\n {\n-    /**\n-     * Main lock. Read-lock is for {@link #storeCopy(ThrowingAction)} and write-lock is for {@link #checkPoint()}.\n-     */\n-    private final ReadWriteLock lock;\n-\n-    /**\n-     * Number of currently ongoing store-copy requests.\n-     */\n-    private int storeCopyCount;\n-\n-    /**\n-     * Whether or not the first (of the concurrently ongoing store-copy requests) has had its \"before\"\n-     * action completed. The other store-copy requests will wait for this flag to be {@code true}.\n-     */\n-    private volatile boolean storeCopyActionCompleted;\n-\n-    /**\n-     * Error which may have happened during first concurrent store-copy request. Made available to\n-     * the other concurrent store-copy requests so that they can fail instead of waiting forever.\n-     */\n-    private volatile Throwable storeCopyActionError;\n-\n-    public StoreCopyCheckPointMutex()\n-    {\n-        this( new ReentrantReadWriteLock( true ) );\n-    }\n-\n-    public StoreCopyCheckPointMutex( ReadWriteLock lock )\n+  /**\n+   * Main lock. Read-lock is for {@link #storeCopy(ThrowingAction)} and write-lock is for {@link #checkPoint()}.\n+   */\n+  private final ReadWriteLock lock;\n+\n+  /**\n+   * Number of currently ongoing store-copy requests.\n+   */\n+  private int storeCopyCount;\n+\n+  /**\n+   * Whether or not the first (of the concurrently ongoing store-copy requests) has had its \"before\"\n+   * action completed. The other store-copy requests will wait for this flag to be {@code true}.\n+   */\n+  private volatile boolean storeCopyActionCompleted;\n+\n+  /**\n+   * Error which may have happened during first concurrent store-copy request. Made available to\n+   * the other concurrent store-copy requests so that they can fail instead of waiting forever.\n+   */\n+  private volatile Throwable storeCopyActionError;\n+\n+  public StoreCopyCheckPointMutex()\n+  {\n+    this(new ReentrantReadWriteLock(true));\n+  }\n+\n+  public StoreCopyCheckPointMutex(ReadWriteLock lock)\n+  {\n+    this.lock = lock;\n+  }\n+\n+  public Resource storeCopy(ThrowingAction<IOException> beforeFirstConcurrentStoreCopy) throws IOException\n+  {\n+    Lock readLock = lock.readLock();\n+    boolean firstConcurrentRead = incrementCount() == 0;\n+    boolean success = false;\n+    try\n     {\n-        this.lock = lock;\n-    }\n-\n-    public Resource storeCopy( ThrowingAction<IOException> beforeFirstConcurrentStoreCopy ) throws IOException\n-    {\n-        Lock readLock = lock.readLock();\n-        boolean firstConcurrentRead = incrementCount() == 0;\n-        boolean success = false;\n+      if (firstConcurrentRead)\n+      {\n         try\n         {\n-            if ( firstConcurrentRead )\n-            {\n-                try\n-                {\n-                    beforeFirstConcurrentStoreCopy.apply();\n-                }\n-                catch ( IOException e )\n-                {\n-                    storeCopyActionError = e;\n-                    throw e;\n-                }\n-                catch ( Throwable e )\n-                {\n-                    storeCopyActionError = e;\n-                    throw new IOException( e );\n-                }\n-                storeCopyActionCompleted = true;\n-            }\n-            else\n-            {\n-                // Wait for the \"before\" first store copy to complete\n-                waitForFirstStoreCopyActionToComplete();\n-            }\n-            success = true;\n-        }\n-        finally\n-        {\n-            if ( success )\n-            {\n-                readLock.lock();\n-            }\n-            else\n-            {\n-                decrementCount();\n-            }\n-        }\n-\n-        return () ->\n-        {\n-            // Decrement concurrent store-copy count\n-            decrementCount();\n-            readLock.unlock();\n-        };\n-    }\n-\n-    private void waitForFirstStoreCopyActionToComplete() throws IOException\n-    {\n-        while ( !storeCopyActionCompleted )\n+          beforeFirstConcurrentStoreCopy.apply();\n+        } catch (IOException e)\n         {\n-            if ( storeCopyActionError != null )\n-            {\n-                throw new IOException( \"Co-operative action before store-copy failed\", storeCopyActionError );\n-            }\n-            parkAWhile();\n-        }\n-    }\n-\n-    private synchronized void decrementCount()\n-    {\n-        storeCopyCount--;\n-        if ( storeCopyCount == 0 )\n+          storeCopyActionError = e;\n+          throw e;\n+        } catch (Throwable e)\n         {\n-            // If I'm the last one then also clear the other status fields so that a clean new session\n-            // can begin on the next store-copy request\n-            clear();\n+          storeCopyActionError = e;\n+          throw new IOException(e);\n         }\n-    }\n-\n-    private void clear()\n+        storeCopyActionCompleted = true;\n+      } else\n+      {\n+        // Wait for the \"before\" first store copy to complete\n+        waitForFirstStoreCopyActionToComplete();\n+      }\n+      success = true;\n+    } finally\n     {\n-        storeCopyActionCompleted = false;\n-        storeCopyActionError = null;\n+      if (success)\n+      {\n+        readLock.lock();\n+      } else\n+      {\n+        decrementCount();\n+      }\n     }\n \n-    private synchronized int incrementCount()\n+    return () ->\n     {\n-        return storeCopyCount++;\n-    }\n-\n-    private static void parkAWhile()\n-    {\n-        LockSupport.parkNanos( MILLISECONDS.toNanos( 100 ) );\n-    }\n-\n-    public Resource tryCheckPoint()\n+      // Decrement concurrent store-copy count\n+      decrementCount();\n+      readLock.unlock();\n+    };\n+  }\n+\n+  private void waitForFirstStoreCopyActionToComplete() throws IOException\n+  {\n+    while (!storeCopyActionCompleted)\n     {\n-        Lock writeLock = lock.writeLock();\n-        return writeLock.tryLock() ? writeLock::unlock : null;\n+      if (storeCopyActionError != null)\n+      {\n+        throw new IOException(\"Co-operative action before store-copy failed\", storeCopyActionError);\n+      }\n+      parkAWhile();\n     }\n+  }\n \n-    public Resource checkPoint()\n+  private synchronized void decrementCount()\n+  {\n+    storeCopyCount--;\n+    if (storeCopyCount == 0)\n     {\n-        Lock writeLock = lock.writeLock();\n-        writeLock.lock();\n-        return writeLock::unlock;\n+      // If I'm the last one then also clear the other status fields so that a clean new session\n+      // can begin on the next store-copy request\n+      clear();\n     }\n+  }\n+\n+  private void clear()\n+  {\n+    storeCopyActionCompleted = false;\n+    storeCopyActionError = null;\n+  }\n+\n+  private synchronized int incrementCount()\n+  {\n+    return storeCopyCount++;\n+  }\n+\n+  private static void parkAWhile()\n+  {\n+    LockSupport.parkNanos(MILLISECONDS.toNanos(100));\n+  }\n+\n+  public Resource tryCheckPoint()\n+  {\n+    Lock writeLock = lock.writeLock();\n+    return writeLock.tryLock() ? writeLock::unlock : null;\n+  }\n+\n+  public Resource checkPoint()\n+  {\n+    Lock writeLock = lock.writeLock();\n+    writeLock.lock();\n+    return writeLock::unlock;\n+  }\n }\n",
            "diff_size": 180
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1656/StoreCopyCheckPointMutex.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1656/StoreCopyCheckPointMutex.java\nindex 09e24f589fd..b16da353702 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1656/StoreCopyCheckPointMutex.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1656/StoreCopyCheckPointMutex.java\n@@ -120,14 +120,16 @@ public class StoreCopyCheckPointMutex\n                     storeCopyActionError = e;\n                     throw new IOException( e );\n                 }\n-                storeCopyActionCompleted = true;\n+\n+storeCopyActionCompleted = true;\n             }\n             else\n             {\n                 // Wait for the \"before\" first store copy to complete\n                 waitForFirstStoreCopyActionToComplete();\n             }\n-            success = true;\n+\n+success = true;\n         }\n         finally\n         {\n@@ -157,7 +159,8 @@ public class StoreCopyCheckPointMutex\n             {\n                 throw new IOException( \"Co-operative action before store-copy failed\", storeCopyActionError );\n             }\n-            parkAWhile();\n+\n+parkAWhile();\n         }\n     }\n \n@@ -200,4 +203,4 @@ public class StoreCopyCheckPointMutex\n         writeLock.lock();\n         return writeLock::unlock;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3004",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "94",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3004/IntegrityValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3004/IntegrityValidator.java\nindex deaa8aa0076..d59104ccd53 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3004/IntegrityValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3004/IntegrityValidator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.state;\n \n import org.neo4j.kernel.api.exceptions.ConstraintViolationTransactionFailureException;\n@@ -37,70 +38,68 @@ import org.neo4j.storageengine.api.schema.SchemaRule;\n  */\n public class IntegrityValidator\n {\n-    private final NeoStores neoStores;\n-    private final IndexingService indexes;\n+  private final NeoStores neoStores;\n+  private final IndexingService indexes;\n \n-    public IntegrityValidator( NeoStores neoStores, IndexingService indexes )\n-    {\n-        this.neoStores = neoStores;\n-        this.indexes = indexes;\n-    }\n+  public IntegrityValidator(NeoStores neoStores, IndexingService indexes)\n+  {\n+    this.neoStores = neoStores;\n+    this.indexes = indexes;\n+  }\n \n-    public void validateNodeRecord( NodeRecord record ) throws TransactionFailureException\n+  public void validateNodeRecord(NodeRecord record) throws TransactionFailureException\n+  {\n+    if (!record.inUse() && record.getNextRel() != Record.NO_NEXT_RELATIONSHIP.intValue())\n     {\n-        if ( !record.inUse() && record.getNextRel() != Record.NO_NEXT_RELATIONSHIP.intValue() )\n-        {\n-            throw new ConstraintViolationTransactionFailureException(\n-                    \"Cannot delete node<\" + record.getId() + \">, because it still has relationships. \" +\n-                    \"To delete this node, you must first delete its relationships.\" );\n-        }\n+      throw new ConstraintViolationTransactionFailureException(\n+          \"Cannot delete node<\" + record.getId() + \">, because it still has relationships. \" +\n+              \"To delete this node, you must first delete its relationships.\");\n     }\n+  }\n \n-    public void validateTransactionStartKnowledge( long lastCommittedTxWhenTransactionStarted )\n-            throws TransactionFailureException\n+  public void validateTransactionStartKnowledge(long lastCommittedTxWhenTransactionStarted)\n+      throws TransactionFailureException\n+  {\n+    long latestConstraintIntroducingTx = neoStores.getMetaDataStore().getLatestConstraintIntroducingTx();\n+    if (lastCommittedTxWhenTransactionStarted < latestConstraintIntroducingTx)\n     {\n-        long latestConstraintIntroducingTx = neoStores.getMetaDataStore().getLatestConstraintIntroducingTx();\n-        if ( lastCommittedTxWhenTransactionStarted < latestConstraintIntroducingTx )\n-        {\n-            // Constraints have changed since the transaction begun\n+      // Constraints have changed since the transaction begun\n \n-            // This should be a relatively uncommon case, window for this happening is a few milliseconds when an admin\n-            // explicitly creates a constraint, after the index has been populated. We can improve this later on by\n-            // replicating the constraint validation logic down here, or rethinking where we validate constraints.\n-            // For now, we just kill these transactions.\n-            throw new TransactionFailureException( Status.Transaction.ConstraintsChanged,\n-                            \"Database constraints have changed (txId=%d) after this transaction (txId=%d) started, \" +\n-                            \"which is not yet supported. Please retry your transaction to ensure all \" +\n-                            \"constraints are executed.\", latestConstraintIntroducingTx,\n-                            lastCommittedTxWhenTransactionStarted );\n-        }\n+      // This should be a relatively uncommon case, window for this happening is a few milliseconds when an admin\n+      // explicitly creates a constraint, after the index has been populated. We can improve this later on by\n+      // replicating the constraint validation logic down here, or rethinking where we validate constraints.\n+      // For now, we just kill these transactions.\n+      throw new TransactionFailureException(Status.Transaction.ConstraintsChanged,\n+          \"Database constraints have changed (txId=%d) after this transaction (txId=%d) started, \" +\n+              \"which is not yet supported. Please retry your transaction to ensure all \" +\n+              \"constraints are executed.\", latestConstraintIntroducingTx,\n+          lastCommittedTxWhenTransactionStarted);\n     }\n+  }\n \n-    public void validateSchemaRule( SchemaRule schemaRule ) throws TransactionFailureException\n+  public void validateSchemaRule(SchemaRule schemaRule) throws TransactionFailureException\n+  {\n+    if (schemaRule instanceof ConstraintRule)\n     {\n-        if ( schemaRule instanceof ConstraintRule )\n+      ConstraintRule constraintRule = (ConstraintRule) schemaRule;\n+      if (constraintRule.getConstraintDescriptor().enforcesUniqueness())\n+      {\n+        try\n+        {\n+          indexes.validateIndex(constraintRule.getOwnedIndex());\n+        } catch (UniquePropertyValueValidationException e)\n+        {\n+          throw new TransactionFailureException(Status.Transaction.TransactionValidationFailed, e,\n+              \"Index validation failed\");\n+        } catch (IndexNotFoundKernelException | IndexPopulationFailedKernelException e)\n         {\n-            ConstraintRule constraintRule = (ConstraintRule) schemaRule;\n-            if ( constraintRule.getConstraintDescriptor().enforcesUniqueness() )\n-            {\n-                try\n-                {\n-                    indexes.validateIndex( constraintRule.getOwnedIndex() );\n-                }\n-                catch ( UniquePropertyValueValidationException e )\n-                {\n-                    throw new TransactionFailureException( Status.Transaction.TransactionValidationFailed, e,\n-                            \"Index validation failed\" );\n-                }\n-                catch ( IndexNotFoundKernelException | IndexPopulationFailedKernelException e )\n-                {\n-                    // We don't expect this to occur, and if they do, it is because we are in a very bad state - out of\n-                    // disk or index corruption, or similar. This will kill the database such that it can be shut down\n-                    // and have recovery performed. It's the safest bet to avoid loosing data.\n-                    throw new TransactionFailureException( Status.Transaction.TransactionValidationFailed, e,\n-                            \"Index population failure\" );\n-                }\n-            }\n+          // We don't expect this to occur, and if they do, it is because we are in a very bad state - out of\n+          // disk or index corruption, or similar. This will kill the database such that it can be shut down\n+          // and have recovery performed. It's the safest bet to avoid loosing data.\n+          throw new TransactionFailureException(Status.Transaction.TransactionValidationFailed, e,\n+              \"Index population failure\");\n         }\n+      }\n     }\n+  }\n }\n",
            "diff_size": 75
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "ita-social-projects-GreenCity",
    "error_id": "16",
    "information": {
        "errors": [
            {
                "line": "646",
                "column": "48",
                "severity": "error",
                "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    public String getProfilePicturePathByUserId(Long id) {\n        String profilePicturePathByUserId = userRepo.getProfilePicturePathByUserId(id);\n        if (profilePicturePathByUserId == null){\n            throw new NotFoundException(id.toString());\n        }\n        return profilePicturePathByUserId;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/16/UserServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/styler/16/UserServiceImpl.java\nindex 76cf8258981..08682dd10b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/16/UserServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/styler/16/UserServiceImpl.java\n@@ -643,7 +643,7 @@ public class UserServiceImpl implements UserService {\n     @Override\n     public String getProfilePicturePathByUserId(Long id) {\n         String profilePicturePathByUserId = userRepo.getProfilePicturePathByUserId(id);\n-        if (profilePicturePathByUserId == null){\n+        if (profilePicturePathByUserId == null) {\n             throw new NotFoundException(id.toString());\n         }\n         return profilePicturePathByUserId;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/16/UserServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/intellij/16/UserServiceImpl.java\nindex 76cf8258981..44876b2dfdc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/16/UserServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/intellij/16/UserServiceImpl.java\n@@ -91,8 +91,8 @@ public class UserServiceImpl implements UserService {\n     private final FileService fileService;\n \n     private final String defaultProfilePicture = \"https://storage.cloud.google.com\"\n-            + \"/staging.greencity-c5a3a.appspot.com\"\n-            + \"/d333665a-9269-49ef-bc77-2d8d4090290f\";\n+        + \"/staging.greencity-c5a3a.appspot.com\"\n+        + \"/d333665a-9269-49ef-bc77-2d8d4090290f\";\n \n     /**\n      * Autowired mapper.\n@@ -643,7 +643,7 @@ public class UserServiceImpl implements UserService {\n     @Override\n     public String getProfilePicturePathByUserId(Long id) {\n         String profilePicturePathByUserId = userRepo.getProfilePicturePathByUserId(id);\n-        if (profilePicturePathByUserId == null){\n+        if (profilePicturePathByUserId == null) {\n             throw new NotFoundException(id.toString());\n         }\n         return profilePicturePathByUserId;\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'+' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "240",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "255",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "265",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "268",
                    "column": "74",
                    "severity": "error",
                    "message": "WhitespaceAround: ':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "282",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "283",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "299",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 246).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "299",
                    "column": "81",
                    "severity": "error",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "299",
                    "column": "173",
                    "severity": "error",
                    "message": "WhitespaceAround: ':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "409",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "433",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "434",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "435",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "436",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "498",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "513",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "551",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "554",
                    "column": "9",
                    "severity": "error",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "555",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "556",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "556",
                    "column": "5",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "578",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "625",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "630",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "631",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "632",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "633",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "650",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/16/UserServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/codebuff/16/UserServiceImpl.java\nindex 76cf8258981..8d0cf5e379f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/16/UserServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/codebuff/16/UserServiceImpl.java\n@@ -43,7 +43,6 @@ import greencity.repository.UserGoalRepo;\n import greencity.repository.UserRepo;\n import greencity.repository.options.UserFilter;\n import greencity.service.*;\n-\n import java.time.LocalDateTime;\n import java.util.ArrayList;\n import java.util.Arrays;\n@@ -60,7 +59,6 @@ import org.springframework.data.domain.Pageable;\n import org.springframework.stereotype.Service;\n import org.springframework.transaction.annotation.Transactional;\n import org.springframework.web.multipart.MultipartFile;\n-\n import static greencity.constant.ErrorMessage.USER_GOAL_NOT_FOUND;\n import static greencity.constant.ErrorMessage.USER_HAS_NO_AVAILABLE_GOALS;\n import static greencity.constant.ErrorMessage.USER_HAS_NO_AVAILABLE_HABIT_DICTIONARY;\n@@ -72,6 +70,7 @@ import static greencity.constant.ErrorMessage.USER_NOT_FOUND_BY_ID;\n /**\n  * The class provides implementation of the {@code UserService}.\n  */\n+\n @Slf4j\n @Service\n @RequiredArgsConstructor\n@@ -89,10 +88,8 @@ public class UserServiceImpl implements UserService {\n     private final HabitDictionaryService habitDictionaryService;\n     private final HabitDictionaryTranslationRepo habitDictionaryTranslationRepo;\n     private final FileService fileService;\n-\n     private final String defaultProfilePicture = \"https://storage.cloud.google.com\"\n-            + \"/staging.greencity-c5a3a.appspot.com\"\n-            + \"/d333665a-9269-49ef-bc77-2d8d4090290f\";\n+    + \"/staging.greencity-c5a3a.appspot.com\" + \"/d333665a-9269-49ef-bc77-2d8d4090290f\";\n \n     /**\n      * Autowired mapper.\n@@ -102,6 +99,7 @@ public class UserServiceImpl implements UserService {\n     /**\n      * {@inheritDoc}\n      */\n+\n     @Override\n     public User save(User user) {\n         return userRepo.save(user);\n@@ -110,22 +108,24 @@ public class UserServiceImpl implements UserService {\n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Override\n     public User findById(Long id) {\n-        return userRepo.findById(id)\n-            .orElseThrow(() -> new WrongIdException(USER_NOT_FOUND_BY_ID + id));\n+        return userRepo.findById(id).orElseThrow(() -> new WrongIdException(USER_NOT_FOUND_BY_ID + id));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Override\n     public PageableDto<UserForListDto> findByPage(Pageable pageable) {\n         Page<User> users = userRepo.findAll(pageable);\n-        List<UserForListDto> userForListDtos =\n-            users.getContent().stream()\n-                .map(user -> modelMapper.map(user, UserForListDto.class))\n-                .collect(Collectors.toList());\n+        List<UserForListDto> userForListDtos = users.getContent().stream()\n+                                                                 .map(user -> modelMapper.map(user, UserForListDto.class))\n+                                                                 .collect(Collectors.toList());\n         return new PageableDto<>(\n             userForListDtos,\n             users.getTotalElements(),\n@@ -135,6 +135,8 @@ public class UserServiceImpl implements UserService {\n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Override\n     public void deleteById(Long id) {\n         User user = findById(id);\n@@ -144,6 +146,8 @@ public class UserServiceImpl implements UserService {\n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Override\n     public User findByEmail(String email) {\n         Optional<User> optionalUser = userRepo.findByEmail(email);\n@@ -155,16 +159,19 @@ public class UserServiceImpl implements UserService {\n      *\n      * @author Zakhar Skaletskyi\n      */\n+\n+\n     @Override\n     public Long findIdByEmail(String email) {\n         log.info(LogMessage.IN_FIND_ID_BY_EMAIL, email);\n-        return userRepo.findIdByEmail(email).orElseThrow(\n-            () -> new WrongEmailException(ErrorMessage.USER_NOT_FOUND_BY_EMAIL));\n+        return userRepo.findIdByEmail(email).orElseThrow(() -> new WrongEmailException(ErrorMessage.USER_NOT_FOUND_BY_EMAIL));\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Override\n     public UserRoleDto updateRole(Long id, ROLE role, String email) {\n         checkUpdatableUser(id, email);\n@@ -176,6 +183,8 @@ public class UserServiceImpl implements UserService {\n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Override\n     public UserStatusDto updateStatus(Long id, UserStatus userStatus, String email) {\n         checkUpdatableUser(id, email);\n@@ -188,6 +197,8 @@ public class UserServiceImpl implements UserService {\n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Override\n     public RoleDto getRoles() {\n         return new RoleDto(ROLE.class.getEnumConstants());\n@@ -198,6 +209,8 @@ public class UserServiceImpl implements UserService {\n      *\n      * @author Nazar Vladyka\n      */\n+\n+\n     @Override\n     public List<EmailNotification> getEmailNotificationsStatuses() {\n         return Arrays.asList(EmailNotification.class.getEnumConstants());\n@@ -206,6 +219,8 @@ public class UserServiceImpl implements UserService {\n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Override\n     public User updateLastVisit(User user) {\n         User updatable = findById(user.getId());\n@@ -217,12 +232,13 @@ public class UserServiceImpl implements UserService {\n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     public PageableDto<UserForListDto> getUsersByFilter(FilterUserDto filterUserDto, Pageable pageable) {\n         Page<User> users = userRepo.findAll(new UserFilter(filterUserDto), pageable);\n-        List<UserForListDto> userForListDtos =\n-            users.getContent().stream()\n-                .map(user -> modelMapper.map(user, UserForListDto.class))\n-                .collect(Collectors.toList());\n+        List<UserForListDto> userForListDtos = users.getContent().stream()\n+                                                                 .map(user -> modelMapper.map(user, UserForListDto.class))\n+                                                                 .collect(Collectors.toList());\n         return new PageableDto<>(\n             userForListDtos,\n             users.getTotalElements(),\n@@ -232,26 +248,24 @@ public class UserServiceImpl implements UserService {\n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Override\n     public UserUpdateDto getUserUpdateDtoByEmail(String email) {\n-        return modelMapper.map(\n-            userRepo.findByEmail(email).orElseThrow(() -> new WrongEmailException(USER_NOT_FOUND_BY_EMAIL + email)),\n-            UserUpdateDto.class\n-        );\n+        return modelMapper.map(userRepo.findByEmail(email).orElseThrow(() -> new WrongEmailException(USER_NOT_FOUND_BY_EMAIL + email)), UserUpdateDto.class);\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Override\n     public User update(UserUpdateDto dto, String email, MultipartFile image) {\n-        User user = userRepo\n-            .findByEmail(email)\n-            .orElseThrow(() -> new WrongEmailException(USER_NOT_FOUND_BY_EMAIL + email));\n+        User user = userRepo.findByEmail(email).orElseThrow(() -> new WrongEmailException(USER_NOT_FOUND_BY_EMAIL + email));\n         user.setName(dto.getName());\n         user.setEmailNotification(dto.getEmailNotification());\n-\n-        String url = image != null ? fileService.upload(image).toString() : defaultProfilePicture;\n+        String url = image != null ? fileService.upload(image).toString(): defaultProfilePicture;\n         user.setProfilePicturePath(url);\n         return userRepo.save(user);\n     }\n@@ -259,14 +273,14 @@ public class UserServiceImpl implements UserService {\n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Transactional\n     @Override\n     public List<UserGoalResponseDto> getUserGoals(Long userId, String language) {\n-        List<UserGoalResponseDto> userGoalResponseDtos = userGoalRepo\n-            .findAllByUserId(userId)\n-            .stream()\n-            .map(userGoal -> modelMapper.map(userGoal, UserGoalResponseDto.class))\n-            .collect(Collectors.toList());\n+        List<UserGoalResponseDto> userGoalResponseDtos = userGoalRepo.findAllByUserId(userId).stream()\n+                                                                                             .map(userGoal -> modelMapper.map(userGoal, UserGoalResponseDto.class))\n+                                                                                             .collect(Collectors.toList());\n         if (userGoalResponseDtos.isEmpty()) {\n             throw new UserHasNoGoalsException(USER_HAS_NO_GOALS);\n         }\n@@ -280,10 +294,9 @@ public class UserServiceImpl implements UserService {\n      * @param userId id of the current user.\n      * @param dto    {@link UserGoalResponseDto}\n      */\n+\n     private UserGoalResponseDto setTextForAnyUserGoal(UserGoalResponseDto dto, Long userId, String language) {\n-        String text = userGoalRepo.findGoalByUserGoalId(dto.getId()).isPresent()\n-            ? goalTranslationRepo.findByUserIdLangAndUserGoalId(userId, language, dto.getId()).getText()\n-            : customGoalRepo.findByUserGoalIdAndUserId(dto.getId(), userId).getText();\n+        String text = userGoalRepo.findGoalByUserGoalId(dto.getId()).isPresent()? goalTranslationRepo.findByUserIdLangAndUserGoalId(userId, language, dto.getId()).getText(): customGoalRepo.findByUserGoalIdAndUserId(dto.getId(), userId).getText();\n         dto.setText(text);\n         return dto;\n     }\n@@ -291,37 +304,40 @@ public class UserServiceImpl implements UserService {\n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Transactional\n     @Override\n     public List<GoalDto> getAvailableGoals(Long userId, String language) {\n-        List<GoalTranslation> goalTranslations = goalTranslationRepo\n-            .findAvailableByUserId(userId, language);\n+        List<GoalTranslation> goalTranslations = goalTranslationRepo.findAvailableByUserId(userId, language);\n         if (goalTranslations.isEmpty()) {\n             throw new UserHasNoAvailableGoalsException(USER_HAS_NO_AVAILABLE_GOALS);\n         }\n-        return goalTranslations\n-            .stream()\n-            .map(g -> modelMapper.map(g, GoalDto.class))\n-            .collect(Collectors.toList());\n+        return goalTranslations.stream().map(g -> modelMapper.map(g, GoalDto.class))\n+                                        .collect(Collectors.toList());\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Transactional\n     @Override\n     public List<UserGoalResponseDto> saveUserGoals(Long userId, BulkSaveUserGoalDto bulkDto, String language) {\n         List<UserGoalDto> goalDtos = bulkDto.getUserGoals();\n         List<UserCustomGoalDto> customGoalDtos = bulkDto.getUserCustomGoal();\n-        User user = userRepo.findById(userId)\n-            .orElseThrow(() -> new WrongIdException(USER_NOT_FOUND_BY_ID + userId));\n-        if (goalDtos == null && customGoalDtos != null) {\n+        User user = userRepo.findById(userId).orElseThrow(() -> new WrongIdException(USER_NOT_FOUND_BY_ID + userId));\n+        if (goalDtos == null\n+            && customGoalDtos != null) {\n             saveCustomGoalsForUserGoals(user, customGoalDtos);\n         }\n-        if (goalDtos != null && customGoalDtos == null) {\n+        if (goalDtos != null\n+            && customGoalDtos == null) {\n             saveGoalForUserGoal(user, goalDtos);\n         }\n-        if (goalDtos != null && customGoalDtos != null) {\n+        if (goalDtos != null\n+            && customGoalDtos != null) {\n             saveGoalForUserGoal(user, goalDtos);\n             saveCustomGoalsForUserGoals(user, customGoalDtos);\n         }\n@@ -335,6 +351,7 @@ public class UserServiceImpl implements UserService {\n      * @param goals list {@link UserGoalDto} for saving\n      * @author Bogdan Kuzenko\n      */\n+\n     private void saveGoalForUserGoal(User user, List<UserGoalDto> goals) {\n         for (UserGoalDto el : goals) {\n             UserGoal userGoal = modelMapper.map(el, UserGoal.class);\n@@ -351,6 +368,7 @@ public class UserServiceImpl implements UserService {\n      * @param customGoals list {@link UserCustomGoalDto} for saving\n      * @author Bogdan Kuzenko\n      */\n+\n     private void saveCustomGoalsForUserGoals(User user, List<UserCustomGoalDto> customGoals) {\n         for (UserCustomGoalDto el1 : customGoals) {\n             UserGoal userGoal = modelMapper.map(el1, UserGoal.class);\n@@ -365,13 +383,13 @@ public class UserServiceImpl implements UserService {\n      *\n      * @author Bogdan Kuzenko\n      */\n+\n+\n     @Transactional\n     @Override\n     public List<Long> deleteUserGoals(String ids) {\n-        List<Long> arrayId = Arrays.stream(ids.split(\",\"))\n-            .map(Long::valueOf)\n-            .collect(Collectors.toList());\n-\n+        List<Long> arrayId = Arrays.stream(ids.split(\",\")).map(Long::valueOf)\n+                                                          .collect(Collectors.toList());\n         List<Long> deleted = new ArrayList<>();\n         for (Long id : arrayId) {\n             deleted.add(delete(id));\n@@ -386,9 +404,9 @@ public class UserServiceImpl implements UserService {\n      * @return id of deleted {@link UserGoal}\n      * @author Bogdan Kuzenko\n      */\n+\n     private Long delete(Long id) {\n-        UserGoal userGoal = userGoalRepo\n-            .findById(id).orElseThrow(() -> new NotFoundException(USER_GOAL_NOT_FOUND + id));\n+        UserGoal userGoal = userGoalRepo.findById(id).orElseThrow(() -> new NotFoundException(USER_GOAL_NOT_FOUND + id));\n         userGoalRepo.delete(userGoal);\n         return id;\n     }\n@@ -396,23 +414,26 @@ public class UserServiceImpl implements UserService {\n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Transactional\n     @Override\n     public UserGoalResponseDto updateUserGoalStatus(Long userId, Long goalId, String language) {\n         UserGoal userGoal;\n-        User user = userRepo.findById(userId)\n-            .orElseThrow(() -> new WrongIdException(USER_NOT_FOUND_BY_ID + userId));\n-        if (user.getUserGoals().stream().anyMatch(o -> o.getId().equals(goalId))) {\n+        User user = userRepo.findById(userId).orElseThrow(() -> new WrongIdException(USER_NOT_FOUND_BY_ID + userId));\n+        if (user.getUserGoals().stream()\n+                               .anyMatch(o -> o.getId().equals(goalId))) {\n             userGoal = userGoalRepo.getOne(goalId);\n+\n             if (userGoal.getStatus().equals(GoalStatus.DONE)) {\n                 userGoal.setStatus(GoalStatus.ACTIVE);\n                 userGoal.setDateCompleted(null);\n                 userGoalRepo.save(userGoal);\n             } else if (userGoal.getStatus().equals(GoalStatus.ACTIVE)) {\n-                userGoal.setStatus(GoalStatus.DONE);\n-                userGoal.setDateCompleted(LocalDateTime.now());\n-                userGoalRepo.save(userGoal);\n-            }\n+                       userGoal.setStatus(GoalStatus.DONE);\n+                       userGoal.setDateCompleted(LocalDateTime.now());\n+                       userGoalRepo.save(userGoal);\n+                   }\n         } else {\n             throw new UserGoalStatusNotUpdatedException(USER_HAS_NO_SUCH_GOAL + goalId);\n         }\n@@ -424,6 +445,8 @@ public class UserServiceImpl implements UserService {\n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Override\n     public int updateUserRefreshToken(String refreshTokenKey, Long id) {\n         return userRepo.updateUserRefreshToken(refreshTokenKey, id);\n@@ -436,6 +459,7 @@ public class UserServiceImpl implements UserService {\n      * @param email email of admin/moderator.\n      * @author Rostyslav Khasanov\n      */\n+\n     private void checkUpdatableUser(Long id, String email) {\n         User user = findByEmail(email);\n         if (id.equals(user.getId())) {\n@@ -450,6 +474,7 @@ public class UserServiceImpl implements UserService {\n      * @param email email of admin/moderator.\n      * @author Rostyslav Khasanov\n      */\n+\n     private void accessForUpdateUserStatus(Long id, String email) {\n         User user = findByEmail(email);\n         if (user.getRole() == ROLE.ROLE_MODERATOR) {\n@@ -465,11 +490,12 @@ public class UserServiceImpl implements UserService {\n      *\n      * @author Bogdan Kuzenko\n      */\n+\n+\n     @Transactional\n     @Override\n     public List<greencity.dto.user.HabitDictionaryDto> getAvailableHabitDictionary(Long userId, String language) {\n-        List<HabitDictionaryTranslation> availableHabitDictionary = habitDictionaryTranslationRepo\n-            .findAvailableHabitDictionaryByUser(userId, language);\n+        List<HabitDictionaryTranslation> availableHabitDictionary = habitDictionaryTranslationRepo.findAvailableHabitDictionaryByUser(userId, language);\n         if (availableHabitDictionary.isEmpty()) {\n             throw new UserHasNoAvailableHabitDictionaryException(USER_HAS_NO_AVAILABLE_HABIT_DICTIONARY);\n         }\n@@ -479,11 +505,12 @@ public class UserServiceImpl implements UserService {\n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Override\n     public List<HabitCreateDto> createUserHabit(Long userId, List<HabitIdDto> habitIdDto, String language) {\n         if (checkHabitId(userId, habitIdDto)) {\n-            User user = userRepo.findById(userId)\n-                .orElseThrow(() -> new WrongIdException(USER_NOT_FOUND_BY_ID + userId));\n+            User user = userRepo.findById(userId).orElseThrow(() -> new WrongIdException(USER_NOT_FOUND_BY_ID + userId));\n             List<Habit> habits = habitRepo.saveAll(convertToHabit(habitIdDto, user));\n             return convertToHabitCreateDto(habits, language);\n         } else {\n@@ -498,21 +525,17 @@ public class UserServiceImpl implements UserService {\n      * @param user        current user.\n      * @return list habits.\n      */\n-    private List<Habit> convertToHabit(List<HabitIdDto> habitIdDtos, final User user) {\n-        List<HabitDictionary> habitDictionaries =\n-            habitIdDtos.stream()\n-                .map(HabitIdDto::getHabitDictionaryId)\n-                .map(habitDictionaryService::findById)\n-                .collect(Collectors.toList());\n \n+    private List<Habit> convertToHabit(List<HabitIdDto> habitIdDtos, final User user) {\n+        List<HabitDictionary> habitDictionaries = habitIdDtos.stream().map(HabitIdDto::getHabitDictionaryId)\n+                                                                      .map(habitDictionaryService::findById)\n+                                                                      .collect(Collectors.toList());\n         List<Habit> habits = new ArrayList<>();\n-\n         for (HabitDictionary habitDictionary : habitDictionaries) {\n             Habit habit = modelMapper.map(user, Habit.class);\n             habit.setHabitDictionary(habitDictionary);\n             habits.add(habit);\n         }\n-\n         return habits;\n     }\n \n@@ -523,17 +546,15 @@ public class UserServiceImpl implements UserService {\n      * @param language - languageCode.\n      * @return List {@link HabitCreateDto}.\n      */\n-    private List<HabitCreateDto> convertToHabitCreateDto(List<Habit> habits, String language) {\n-        List<HabitCreateDto> habitCreateDtos = habits\n-            .stream()\n-            .map(habit -> modelMapper.map(habit, HabitCreateDto.class))\n-            .collect(Collectors.toList());\n \n+    private List<HabitCreateDto> convertToHabitCreateDto(List<Habit> habits, String language) {\n+        List<HabitCreateDto> habitCreateDtos = habits.stream().map(habit -> modelMapper.map(habit, HabitCreateDto.class))\n+                                                              .collect(Collectors.toList());\n         List<HabitCreateDto> habitCreateDtoResultList = new ArrayList<>();\n-\n-        for (int i = 0; i < habits.size(); i++) {\n-            HabitDictionaryTranslation htd = habitService.getHabitDictionaryTranslation(\n-                habits.get(i), language);\n+        for(int i = 0;\n+i < habits.size();\n+i++ ) {\n+            HabitDictionaryTranslation htd = habitService.getHabitDictionaryTranslation(habits.get(i), language);\n             HabitCreateDto habitCreateDto = habitCreateDtos.get(i);\n             HabitDictionaryDto habitDictionaryDto = habitCreateDto.getHabitDictionary();\n             habitDictionaryDto.setName(htd.getName());\n@@ -541,7 +562,6 @@ public class UserServiceImpl implements UserService {\n             habitCreateDto.setHabitDictionary(habitDictionaryDto);\n             habitCreateDtoResultList.add(habitCreateDto);\n         }\n-\n         return habitCreateDtoResultList;\n     }\n \n@@ -550,17 +570,20 @@ public class UserServiceImpl implements UserService {\n      *\n      * @author Bogdan Kuzenko\n      */\n+\n+\n     @Transactional\n     @Override\n     public List<CustomGoalResponseDto> getAvailableCustomGoals(Long userId) {\n-        return modelMapper.map(customGoalRepo.findAllAvailableCustomGoalsForUserId(userId),\n-            new TypeToken<List<CustomGoalResponseDto>>() {\n-            }.getType());\n+        return modelMapper.map(customGoalRepo.findAllAvailableCustomGoalsForUserId(userId), new TypeToken<List<CustomGoalResponseDto>>() {}\n+                                   .getType());\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Override\n     public long getActivatedUsersAmount() {\n         return userRepo.countAllByUserStatus(UserStatus.ACTIVATED);\n@@ -573,6 +596,7 @@ public class UserServiceImpl implements UserService {\n      * @param habitIdDtos {@link HabitIdDto}\n      * @return boolean\n      */\n+\n     private boolean checkHabitId(Long userId, List<HabitIdDto> habitIdDtos) {\n         List<Habit> habits = habitRepo.findByUserIdAndStatusHabit(userId);\n         if (!habits.isEmpty()) {\n@@ -590,27 +614,30 @@ public class UserServiceImpl implements UserService {\n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Transactional\n     @Override\n     public void deleteHabitByUserIdAndHabitDictionary(Long userId, Long habitId) {\n         if (habitId == null) {\n             throw new NotDeletedException(ErrorMessage.DELETE_LIST_ID_CANNOT_BE_EMPTY);\n         }\n-        Habit habit = habitRepo.findById(habitId)\n-            .orElseThrow(() -> new WrongIdException(ErrorMessage.HABIT_NOT_FOUND_BY_USER_ID_AND_HABIT_DICTIONARY_ID));\n+        Habit habit = habitRepo.findById(habitId).orElseThrow(() -> new WrongIdException(ErrorMessage.HABIT_NOT_FOUND_BY_USER_ID_AND_HABIT_DICTIONARY_ID));\n         int countHabit = habitRepo.countHabitByUserId(userId);\n         if (!habitStatisticRepo.findAllByHabitId(habit.getId()).isEmpty() && countHabit > 1) {\n             habitRepo.updateHabitStatusById(habit.getId(), false);\n         } else if (countHabit > 1) {\n-            habitRepo.deleteById(habit.getId());\n-        } else {\n-            throw new NotDeletedException(ErrorMessage.NOT_DELETE_LAST_HABIT);\n-        }\n+                   habitRepo.deleteById(habit.getId());\n+               } else {\n+                   throw new NotDeletedException(ErrorMessage.NOT_DELETE_LAST_HABIT);\n+               }\n     }\n \n     /**\n      * {@inheritDoc}\n      */\n+\n+\n     @Override\n     public void addDefaultHabit(Long userId, String language) {\n         if (habitRepo.findByUserIdAndStatusHabit(userId).isEmpty()) {\n@@ -620,8 +647,7 @@ public class UserServiceImpl implements UserService {\n         }\n     }\n \n-    private List<greencity.dto.user.HabitDictionaryDto> habitDictionaryDtos(\n-        List<HabitDictionaryTranslation> habitDictionaryTranslations) {\n+    private List<greencity.dto.user.HabitDictionaryDto> habitDictionaryDtos(List<HabitDictionaryTranslation> habitDictionaryTranslations) {\n         List<greencity.dto.user.HabitDictionaryDto> habitDictionaryDtos = new ArrayList<>();\n         for (HabitDictionaryTranslation hdt : habitDictionaryTranslations) {\n             greencity.dto.user.HabitDictionaryDto hd = new greencity.dto.user.HabitDictionaryDto();\n@@ -640,10 +666,12 @@ public class UserServiceImpl implements UserService {\n      *\n      * @return profile picture path {@link String}\n      */\n+\n+\n     @Override\n     public String getProfilePicturePathByUserId(Long id) {\n         String profilePicturePathByUserId = userRepo.getProfilePicturePathByUserId(id);\n-        if (profilePicturePathByUserId == null){\n+        if (profilePicturePathByUserId == null) {\n             throw new NotFoundException(id.toString());\n         }\n         return profilePicturePathByUserId;\n",
            "diff_size": 163
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/16/UserServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/styler_random/16/UserServiceImpl.java\nindex 76cf8258981..08682dd10b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/16/UserServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/styler_random/16/UserServiceImpl.java\n@@ -643,7 +643,7 @@ public class UserServiceImpl implements UserService {\n     @Override\n     public String getProfilePicturePathByUserId(Long id) {\n         String profilePicturePathByUserId = userRepo.getProfilePicturePathByUserId(id);\n-        if (profilePicturePathByUserId == null){\n+        if (profilePicturePathByUserId == null) {\n             throw new NotFoundException(id.toString());\n         }\n         return profilePicturePathByUserId;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/16/UserServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/styler_three_grams/16/UserServiceImpl.java\nindex 76cf8258981..08682dd10b0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/16/UserServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/styler_three_grams/16/UserServiceImpl.java\n@@ -643,7 +643,7 @@ public class UserServiceImpl implements UserService {\n     @Override\n     public String getProfilePicturePathByUserId(Long id) {\n         String profilePicturePathByUserId = userRepo.getProfilePicturePathByUserId(id);\n-        if (profilePicturePathByUserId == null){\n+        if (profilePicturePathByUserId == null) {\n             throw new NotFoundException(id.toString());\n         }\n         return profilePicturePathByUserId;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
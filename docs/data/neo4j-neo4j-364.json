{
    "project_name": "neo4j-neo4j",
    "error_id": "364",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "97",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "87",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "88",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "99",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "99",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "163",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "176",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "190",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/364/OutputFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/364/OutputFormat.java\nindex 8ebc26d7af7..44854cefe5a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/364/OutputFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/364/OutputFormat.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.repr;\n \n import java.net.URI;\n@@ -40,13 +41,13 @@ public class OutputFormat\n \n     private RepresentationWriteHandler representationWriteHandler = RepresentationWriteHandler.DO_NOTHING;\n \n-    public OutputFormat( RepresentationFormat format, URI baseUri )\n+    public OutputFormat(RepresentationFormat format, URI baseUri)\n     {\n         this.format = format;\n         this.baseUri = baseUri;\n     }\n \n-    public void setRepresentationWriteHandler( RepresentationWriteHandler representationWriteHandler )\n+    public void setRepresentationWriteHandler(RepresentationWriteHandler representationWriteHandler)\n     {\n         this.representationWriteHandler = representationWriteHandler;\n     }\n@@ -56,147 +57,145 @@ public class OutputFormat\n         return this.representationWriteHandler;\n     }\n \n-    public final Response ok( Representation representation )\n+    public final Response ok(Representation representation)\n     {\n-        if ( representation.isEmpty() )\n+        if (representation.isEmpty())\n         {\n             return noContent();\n         }\n-        return response( Response.ok(), representation );\n+        return response(Response.ok(), representation);\n     }\n \n-    public final <REPR extends Representation & EntityRepresentation> Response okIncludeLocation( REPR representation )\n+    public final <REPR extends Representation & EntityRepresentation> Response okIncludeLocation(REPR representation)\n     {\n-        if ( representation.isEmpty() )\n+        if (representation.isEmpty())\n         {\n             return noContent();\n         }\n-        return response( Response.ok().header( HttpHeaders.LOCATION, uri( representation ) ), representation );\n+        return response(Response.ok().header(HttpHeaders.LOCATION, uri(representation)), representation);\n     }\n \n-    public final <REPR extends Representation & EntityRepresentation> Response created( REPR representation )\n+    public final <REPR extends Representation & EntityRepresentation> Response created(REPR representation)\n     {\n-        return response( Response.created( uri( representation ) ), representation );\n+        return response(Response.created(uri(representation)), representation);\n     }\n \n-    public final Response response( Response.StatusType status, Representation representation )\n+    public final Response response(Response.StatusType status, Representation representation)\n     {\n-        return response( Response.status( status ), representation );\n+        return response(Response.status(status), representation);\n     }\n \n-    public Response badRequest( Throwable exception )\n+    public Response badRequest(Throwable exception)\n     {\n-        return response( Response.status( BAD_REQUEST ), new ExceptionRepresentation( exception ) );\n+        return response(Response.status(BAD_REQUEST), new ExceptionRepresentation(exception));\n     }\n \n-    public Response notFound( Throwable exception )\n+    public Response notFound(Throwable exception)\n     {\n-        return response( Response.status( Status.NOT_FOUND ), new ExceptionRepresentation( exception ) );\n+        return response(Response.status(Status.NOT_FOUND), new ExceptionRepresentation(exception));\n     }\n \n     public Response notFound()\n     {\n         representationWriteHandler.onRepresentationFinal();\n-        return Response.status( Status.NOT_FOUND )\n-                .build();\n+        return Response.status(Status.NOT_FOUND)\n+          .build();\n     }\n \n-    public Response seeOther( URI uri )\n+    public Response seeOther(URI uri)\n     {\n-        return Response.seeOther( baseUri.resolve( uri ) ).build();\n+        return Response.seeOther(baseUri.resolve(uri)).build();\n     }\n \n-    public Response conflict( Throwable exception )\n+    public Response conflict(Throwable exception)\n     {\n-        return response( Response.status( Status.CONFLICT ), new ExceptionRepresentation( exception ) );\n+        return response(Response.status(Status.CONFLICT), new ExceptionRepresentation(exception));\n     }\n \n-    public final <REPR extends Representation & EntityRepresentation> Response conflict( REPR representation )\n+    public final <REPR extends Representation & EntityRepresentation> Response conflict(REPR representation)\n     {\n-        return response( Response.status( Status.CONFLICT ), representation );\n+        return response(Response.status(Status.CONFLICT), representation);\n     }\n \n     /**\n      * Server error with stack trace included as needed.\n+     *\n      * @param exception the error\n      * @return the internal server error response\n      */\n-    public Response serverErrorWithoutLegacyStacktrace( Throwable exception )\n+    public Response serverErrorWithoutLegacyStacktrace(Throwable exception)\n     {\n-        return response( Response.status( Status.INTERNAL_SERVER_ERROR ), new ExceptionRepresentation( exception, false ) );\n+        return response(Response.status(Status.INTERNAL_SERVER_ERROR), new ExceptionRepresentation(exception, false));\n     }\n \n-    public Response serverError( Throwable exception )\n+    public Response serverError(Throwable exception)\n     {\n-        return response( Response.status( Status.INTERNAL_SERVER_ERROR ), new ExceptionRepresentation( exception ) );\n+        return response(Response.status(Status.INTERNAL_SERVER_ERROR), new ExceptionRepresentation(exception));\n     }\n \n-    private URI uri( EntityRepresentation representation )\n+    private URI uri(EntityRepresentation representation)\n     {\n-        return URI.create( assemble( representation.selfUri() ) );\n+        return URI.create(assemble(representation.selfUri()));\n     }\n \n-    protected Response response( ResponseBuilder response, Representation representation )\n+    protected Response response(ResponseBuilder response, Representation representation)\n     {\n-        return formatRepresentation( response, representation )\n-                .type( HttpHeaderUtils.mediaTypeWithCharsetUtf8( getMediaType() ) )\n-                .build();\n+        return formatRepresentation(response, representation)\n+          .type(HttpHeaderUtils.mediaTypeWithCharsetUtf8(getMediaType()))\n+          .build();\n     }\n \n-    private ResponseBuilder formatRepresentation( ResponseBuilder response, final Representation representation )\n+    private ResponseBuilder formatRepresentation(ResponseBuilder response, final Representation representation)\n     {\n         representationWriteHandler.onRepresentationStartWriting();\n \n         boolean mustFail = representation instanceof ExceptionRepresentation;\n \n-        if ( format instanceof StreamingFormat )\n+        if (format instanceof StreamingFormat)\n         {\n-            return response.entity( stream( representation, (StreamingFormat) format, mustFail ) );\n-        }\n-        else\n+            return response.entity(stream(representation, (StreamingFormat) format, mustFail));\n+        } else\n         {\n-            return response.entity( toBytes( assemble( representation ), mustFail ) );\n+            return response.entity(toBytes(assemble(representation), mustFail));\n         }\n     }\n \n-    private Object stream( final Representation representation, final StreamingFormat streamingFormat, final boolean mustFail )\n+    private Object stream(final Representation representation, final StreamingFormat streamingFormat, final boolean mustFail)\n     {\n         return (StreamingOutput) output ->\n         {\n-            RepresentationFormat outputStreamFormat = streamingFormat.writeTo( output );\n+            RepresentationFormat outputStreamFormat = streamingFormat.writeTo(output);\n             try\n             {\n-                representation.serialize( outputStreamFormat, baseUri );\n+                representation.serialize(outputStreamFormat, baseUri);\n \n-                if ( !mustFail )\n+                if (!mustFail)\n                 {\n                     representationWriteHandler.onRepresentationWritten();\n                 }\n-            }\n-            catch ( Exception e )\n+            } catch (Exception e)\n             {\n-                if ( e instanceof BadInputException )\n+                if (e instanceof BadInputException)\n                 {\n-                    throw new WebApplicationException( badRequest( e ) );\n+                    throw new WebApplicationException(badRequest(e));\n                 }\n-                throw new WebApplicationException( e, serverError( e ) );\n-            }\n-            finally\n+                throw new WebApplicationException(e, serverError(e));\n+            } finally\n             {\n                 representationWriteHandler.onRepresentationFinal();\n             }\n         };\n     }\n \n-    public static void write( Representation representation, RepresentationFormat format, URI baseUri )\n+    public static void write(Representation representation, RepresentationFormat format, URI baseUri)\n     {\n-        representation.serialize( format, baseUri );\n+        representation.serialize(format, baseUri);\n     }\n \n-    private byte[] toBytes( String entity, boolean mustFail )\n+    private byte[] toBytes(String entity, boolean mustFail)\n     {\n-        byte[] entityAsBytes = UTF8.encode( entity );\n-        if ( !mustFail )\n+        byte[] entityAsBytes = UTF8.encode(entity);\n+        if (!mustFail)\n         {\n             representationWriteHandler.onRepresentationWritten();\n         }\n@@ -209,9 +208,9 @@ public class OutputFormat\n         return format.mediaType;\n     }\n \n-    public String assemble( Representation representation )\n+    public String assemble(Representation representation)\n     {\n-        return representation.serialize( format, baseUri );\n+        return representation.serialize(format, baseUri);\n     }\n \n     public Response noContent()\n@@ -219,13 +218,13 @@ public class OutputFormat\n         representationWriteHandler.onRepresentationStartWriting();\n         representationWriteHandler.onRepresentationWritten();\n         representationWriteHandler.onRepresentationFinal();\n-        return Response.status( Status.NO_CONTENT )\n-                .build();\n+        return Response.status(Status.NO_CONTENT)\n+          .build();\n     }\n \n-    public Response methodNotAllowed( UnsupportedOperationException e )\n+    public Response methodNotAllowed(UnsupportedOperationException e)\n     {\n-        return response( Response.status( 405 ), new ExceptionRepresentation( e ) );\n+        return response(Response.status(405), new ExceptionRepresentation(e));\n     }\n \n     public Response ok()\n@@ -236,10 +235,10 @@ public class OutputFormat\n         return Response.ok().build();\n     }\n \n-    public Response badRequest( MediaType mediaType, String entity )\n+    public Response badRequest(MediaType mediaType, String entity)\n     {\n         representationWriteHandler.onRepresentationStartWriting();\n         representationWriteHandler.onRepresentationFinal();\n-        return Response.status( BAD_REQUEST ).type( mediaType ).entity( entity ).build();\n+        return Response.status(BAD_REQUEST).type(mediaType).entity(entity).build();\n     }\n }\n",
            "diff_size": 66
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1096",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docsubmission.adapter.component.proxy;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\nimport gov.hhs.fha.nhinc.docsubmission.adapter.component.AdapterComponentDocSubmissionOrchImpl;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1096/AdapterComponentDocSubmissionProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\nindex f989f559a00..fce6475de98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.adapter.component.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1096/AdapterComponentDocSubmissionProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\nindex f989f559a00..1bd8f422c3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.adapter.component.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -37,17 +38,16 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- *\n  * @author jhoppesc\n  */\n public class AdapterComponentDocSubmissionProxyJavaImpl implements AdapterComponentDocSubmissionProxy {\n-    private static final Logger LOG = LoggerFactory.getLogger(AdapterComponentDocSubmissionProxyJavaImpl.class);\n-\n-    @Override\n-    public RegistryResponseType provideAndRegisterDocumentSetB(ProvideAndRegisterDocumentSetRequestType msg,\n-            AssertionType assertion) {\n-        LOG.trace(\"Using Java Implementation for Adapter Doc Submission Service\");\n-        return new AdapterComponentDocSubmissionOrchImpl().provideAndRegisterDocumentSetB(msg, assertion);\n-    }\n+  private static final Logger LOG = LoggerFactory.getLogger(AdapterComponentDocSubmissionProxyJavaImpl.class);\n+\n+  @Override\n+  public RegistryResponseType provideAndRegisterDocumentSetB(ProvideAndRegisterDocumentSetRequestType msg,\n+                                                             AssertionType assertion) {\n+    LOG.trace(\"Using Java Implementation for Adapter Doc Submission Service\");\n+    return new AdapterComponentDocSubmissionOrchImpl().provideAndRegisterDocumentSetB(msg, assertion);\n+  }\n \n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1096/AdapterComponentDocSubmissionProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\nindex f989f559a00..4ecc41c70b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.adapter.component.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -44,10 +45,10 @@ public class AdapterComponentDocSubmissionProxyJavaImpl implements AdapterCompon\n     private static final Logger LOG = LoggerFactory.getLogger(AdapterComponentDocSubmissionProxyJavaImpl.class);\n \n     @Override\n-    public RegistryResponseType provideAndRegisterDocumentSetB(ProvideAndRegisterDocumentSetRequestType msg,\n-            AssertionType assertion) {\n+    public RegistryResponseType provideAndRegisterDocumentSetB(ProvideAndRegisterDocumentSetRequestType msg, AssertionType assertion) {\n         LOG.trace(\"Using Java Implementation for Adapter Doc Submission Service\");\n-        return new AdapterComponentDocSubmissionOrchImpl().provideAndRegisterDocumentSetB(msg, assertion);\n+\n+return new AdapterComponentDocSubmissionOrchImpl().provideAndRegisterDocumentSetB(msg, assertion);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1096/AdapterComponentDocSubmissionProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\nindex f989f559a00..7ac0ac3c563 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\n@@ -28,11 +28,8 @@ package gov.hhs.fha.nhinc.docsubmission.adapter.component.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n import gov.hhs.fha.nhinc.docsubmission.adapter.component.AdapterComponentDocSubmissionOrchImpl;\n-\n import ihe.iti.xds_b._2007.ProvideAndRegisterDocumentSetRequestType;\n-\n import oasis.names.tc.ebxml_regrep.xsd.rs._3.RegistryResponseType;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n@@ -40,14 +37,17 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author jhoppesc\n  */\n+\n+\n public class AdapterComponentDocSubmissionProxyJavaImpl implements AdapterComponentDocSubmissionProxy {\n+\n     private static final Logger LOG = LoggerFactory.getLogger(AdapterComponentDocSubmissionProxyJavaImpl.class);\n \n+\n     @Override\n-    public RegistryResponseType provideAndRegisterDocumentSetB(ProvideAndRegisterDocumentSetRequestType msg,\n-            AssertionType assertion) {\n+    public RegistryResponseType provideAndRegisterDocumentSetB(ProvideAndRegisterDocumentSetRequestType msg, AssertionType assertion) {\n         LOG.trace(\"Using Java Implementation for Adapter Doc Submission Service\");\n         return new AdapterComponentDocSubmissionOrchImpl().provideAndRegisterDocumentSetB(msg, assertion);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1096/AdapterComponentDocSubmissionProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\nindex f989f559a00..032d0cd2cf3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.docsubmission.adapter.component.proxy;\n-\n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n import gov.hhs.fha.nhinc.docsubmission.adapter.component.AdapterComponentDocSubmissionOrchImpl;\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1096/AdapterComponentDocSubmissionProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\nindex f989f559a00..fce6475de98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1096/AdapterComponentDocSubmissionProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docsubmission.adapter.component.proxy;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
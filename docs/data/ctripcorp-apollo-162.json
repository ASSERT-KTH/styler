{
    "project_name": "ctripcorp-apollo",
    "error_id": "162",
    "information": {
        "errors": [
            {
                "line": "27",
                "column": "55",
                "severity": "warning",
                "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    } else {\n      ItemDTO beforeItem = baseItems.get(0);\n      if (!configText.equals(beforeItem.getValue())) {//update\n        changeSets.addUpdateItem(createItem(namespaceId, configText));\n      }\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/162/FileTextResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/styler/162/FileTextResolver.java\nindex 6aaf5440534..627b55e4a29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/162/FileTextResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/styler/162/FileTextResolver.java\n@@ -24,7 +24,7 @@ public class FileTextResolver implements ConfigTextResolver {\n       changeSets.addCreateItem(createItem(namespaceId, configText));\n     } else {\n       ItemDTO beforeItem = baseItems.get(0);\n-      if (!configText.equals(beforeItem.getValue())) {//update\n+      if (!configText.equals(beforeItem.getValue())) { //update\n         changeSets.addUpdateItem(createItem(namespaceId, configText));\n       }\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "27",
                    "column": "55",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "25",
                    "column": "55",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/162/FileTextResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/codebuff/162/FileTextResolver.java\nindex 6aaf5440534..294acee3bc0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/162/FileTextResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/codebuff/162/FileTextResolver.java\n@@ -4,22 +4,20 @@ import com.ctrip.framework.apollo.core.ConfigConsts;\n import com.ctrip.framework.apollo.core.dto.ItemChangeSets;\n import com.ctrip.framework.apollo.core.dto.ItemDTO;\n import com.ctrip.framework.apollo.core.utils.StringUtils;\n-\n import org.springframework.stereotype.Component;\n import org.springframework.util.CollectionUtils;\n-\n import java.util.List;\n \n @Component(\"fileTextResolver\")\n public class FileTextResolver implements ConfigTextResolver {\n \n-\n   @Override\n   public ItemChangeSets resolve(long namespaceId, String configText, List<ItemDTO> baseItems) {\n     ItemChangeSets changeSets = new ItemChangeSets();\n     if (StringUtils.isEmpty(configText)) {\n       return changeSets;\n     }\n+\n     if (CollectionUtils.isEmpty(baseItems)) {\n       changeSets.addCreateItem(createItem(namespaceId, configText));\n     } else {\n@@ -28,7 +26,6 @@ public class FileTextResolver implements ConfigTextResolver {\n         changeSets.addUpdateItem(createItem(namespaceId, configText));\n       }\n     }\n-\n     return changeSets;\n   }\n \n@@ -39,4 +36,4 @@ public class FileTextResolver implements ConfigTextResolver {\n     item.setKey(ConfigConsts.FILE_NAMESPACE_KEY_NAME);\n     return item;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/162/FileTextResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/styler_random/162/FileTextResolver.java\nindex 6aaf5440534..627b55e4a29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/162/FileTextResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/styler_random/162/FileTextResolver.java\n@@ -24,7 +24,7 @@ public class FileTextResolver implements ConfigTextResolver {\n       changeSets.addCreateItem(createItem(namespaceId, configText));\n     } else {\n       ItemDTO beforeItem = baseItems.get(0);\n-      if (!configText.equals(beforeItem.getValue())) {//update\n+      if (!configText.equals(beforeItem.getValue())) { //update\n         changeSets.addUpdateItem(createItem(namespaceId, configText));\n       }\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/162/FileTextResolver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/styler_three_grams/162/FileTextResolver.java\nindex 6aaf5440534..627b55e4a29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/errored/1/162/FileTextResolver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ctripcorp-apollo/styler_three_grams/162/FileTextResolver.java\n@@ -24,7 +24,7 @@ public class FileTextResolver implements ConfigTextResolver {\n       changeSets.addCreateItem(createItem(namespaceId, configText));\n     } else {\n       ItemDTO beforeItem = baseItems.get(0);\n-      if (!configText.equals(beforeItem.getValue())) {//update\n+      if (!configText.equals(beforeItem.getValue())) { //update\n         changeSets.addUpdateItem(createItem(namespaceId, configText));\n       }\n     }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
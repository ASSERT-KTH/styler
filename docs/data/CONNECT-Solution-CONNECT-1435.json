{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1435",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.docquery.builder.impl;\n\nimport gov.hhs.fha.nhinc.docquery.builder.AdhocQueryRequestBuilder;\nimport gov.hhs.fha.nhinc.docquery.xdsb.helper.XDSbConstants.ReturnType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1435/AbstractAdhocQueryRequestBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1435/AbstractAdhocQueryRequestBuilder.java\nindex 794cc74140b..f7319518ebd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1435/AbstractAdhocQueryRequestBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1435/AbstractAdhocQueryRequestBuilder.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.builder.impl;\n \n import gov.hhs.fha.nhinc.docquery.builder.AdhocQueryRequestBuilder;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1435/AbstractAdhocQueryRequestBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1435/AbstractAdhocQueryRequestBuilder.java\nindex 794cc74140b..9f9463744a7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1435/AbstractAdhocQueryRequestBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1435/AbstractAdhocQueryRequestBuilder.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.builder.impl;\n \n import gov.hhs.fha.nhinc.docquery.builder.AdhocQueryRequestBuilder;\n@@ -33,52 +34,51 @@ import oasis.names.tc.ebxml_regrep.xsd.query._3.ResponseOptionType;\n import oasis.names.tc.ebxml_regrep.xsd.rim._3.AdhocQueryType;\n \n /**\n- *\n  * @author tjafri\n  */\n public abstract class AbstractAdhocQueryRequestBuilder implements AdhocQueryRequestBuilder {\n \n-    /**\n-     * The request.\n-     */\n-    private AdhocQueryRequest request = null;\n+  /**\n+   * The request.\n+   */\n+  private AdhocQueryRequest request = null;\n \n-    /**\n-     * The return composed objects.\n-     */\n-    private boolean returnComposedObjects = true;\n+  /**\n+   * The return composed objects.\n+   */\n+  private boolean returnComposedObjects = true;\n \n-    /**\n-     * The return type.\n-     */\n-    private ReturnType returnType = ReturnType.LeafClass;\n+  /**\n+   * The return type.\n+   */\n+  private ReturnType returnType = ReturnType.LeafClass;\n \n-    @Override\n-    public void build() {\n-        request = new AdhocQueryRequest();\n+  @Override\n+  public void build() {\n+    request = new AdhocQueryRequest();\n \n-        ResponseOptionType responseOption = new ResponseOptionType();\n-        responseOption.setReturnComposedObjects(returnComposedObjects);\n-        responseOption.setReturnType(returnType.toString());\n-        request.setResponseOption(responseOption);\n+    ResponseOptionType responseOption = new ResponseOptionType();\n+    responseOption.setReturnComposedObjects(returnComposedObjects);\n+    responseOption.setReturnType(returnType.toString());\n+    request.setResponseOption(responseOption);\n \n-        AdhocQueryType adhocQuery = new AdhocQueryType();\n-        adhocQuery.setId(getQueryId().toString());\n-        request.setAdhocQuery(adhocQuery);\n-    }\n+    AdhocQueryType adhocQuery = new AdhocQueryType();\n+    adhocQuery.setId(getQueryId().toString());\n+    request.setAdhocQuery(adhocQuery);\n+  }\n \n-    @Override\n-    public AdhocQueryRequest getMessage() {\n-        return request;\n-    }\n+  @Override\n+  public AdhocQueryRequest getMessage() {\n+    return request;\n+  }\n \n-    @Override\n-    public void setReturnComposedObjects(boolean bool) {\n-        this.returnComposedObjects = bool;\n-    }\n+  @Override\n+  public void setReturnComposedObjects(boolean bool) {\n+    this.returnComposedObjects = bool;\n+  }\n \n-    @Override\n-    public void setReturnType(ReturnType returnType) {\n-        this.returnType = returnType;\n-    }\n+  @Override\n+  public void setReturnType(ReturnType returnType) {\n+    this.returnType = returnType;\n+  }\n }\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1435/AbstractAdhocQueryRequestBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1435/AbstractAdhocQueryRequestBuilder.java\nindex 794cc74140b..59b6f54e7cc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1435/AbstractAdhocQueryRequestBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1435/AbstractAdhocQueryRequestBuilder.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.builder.impl;\n \n import gov.hhs.fha.nhinc.docquery.builder.AdhocQueryRequestBuilder;\n@@ -81,4 +82,4 @@ public abstract class AbstractAdhocQueryRequestBuilder implements AdhocQueryRequ\n     public void setReturnType(ReturnType returnType) {\n         this.returnType = returnType;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1435/AbstractAdhocQueryRequestBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1435/AbstractAdhocQueryRequestBuilder.java\nindex 794cc74140b..a97c5ce3a54 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1435/AbstractAdhocQueryRequestBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1435/AbstractAdhocQueryRequestBuilder.java\n@@ -36,11 +36,14 @@ import oasis.names.tc.ebxml_regrep.xsd.rim._3.AdhocQueryType;\n  *\n  * @author tjafri\n  */\n+\n+\n public abstract class AbstractAdhocQueryRequestBuilder implements AdhocQueryRequestBuilder {\n \n     /**\n      * The request.\n      */\n+\n     private AdhocQueryRequest request = null;\n \n     /**\n@@ -53,32 +56,35 @@ public abstract class AbstractAdhocQueryRequestBuilder implements AdhocQueryRequ\n      */\n     private ReturnType returnType = ReturnType.LeafClass;\n \n+\n     @Override\n     public void build() {\n         request = new AdhocQueryRequest();\n-\n         ResponseOptionType responseOption = new ResponseOptionType();\n         responseOption.setReturnComposedObjects(returnComposedObjects);\n         responseOption.setReturnType(returnType.toString());\n         request.setResponseOption(responseOption);\n-\n         AdhocQueryType adhocQuery = new AdhocQueryType();\n         adhocQuery.setId(getQueryId().toString());\n         request.setAdhocQuery(adhocQuery);\n     }\n \n+\n     @Override\n     public AdhocQueryRequest getMessage() {\n         return request;\n     }\n \n+\n     @Override\n     public void setReturnComposedObjects(boolean bool) {\n         this.returnComposedObjects = bool;\n     }\n \n+\n     @Override\n     public void setReturnType(ReturnType returnType) {\n         this.returnType = returnType;\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1435/AbstractAdhocQueryRequestBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1435/AbstractAdhocQueryRequestBuilder.java\nindex 794cc74140b..f7319518ebd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1435/AbstractAdhocQueryRequestBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1435/AbstractAdhocQueryRequestBuilder.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.docquery.builder.impl;\n \n import gov.hhs.fha.nhinc.docquery.builder.AdhocQueryRequestBuilder;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_random"
    ]
}
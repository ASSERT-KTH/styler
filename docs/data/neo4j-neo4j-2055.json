{
    "project_name": "neo4j-neo4j",
    "error_id": "2055",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2055/BatchRelationshipIterable.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2055/BatchRelationshipIterable.java\nindex 4fa6978b967..816df7ec8aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2055/BatchRelationshipIterable.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2055/BatchRelationshipIterable.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.batchinsert.internal;\n \n import java.util.Iterator;\n@@ -34,16 +35,16 @@ abstract class BatchRelationshipIterable<T> implements Iterable<T>\n {\n     private final StorageRelationshipTraversalCursor relationshipCursor;\n \n-    BatchRelationshipIterable( RecordStorageReader storageReader, long nodeId, PageCursorTracer cursorTracer )\n+    BatchRelationshipIterable(RecordStorageReader storageReader, long nodeId, PageCursorTracer cursorTracer)\n     {\n-        relationshipCursor = storageReader.allocateRelationshipTraversalCursor( cursorTracer );\n-        RecordNodeCursor nodeCursor = storageReader.allocateNodeCursor( cursorTracer );\n-        nodeCursor.single( nodeId );\n-        if ( !nodeCursor.next() )\n+        relationshipCursor = storageReader.allocateRelationshipTraversalCursor(cursorTracer);\n+        RecordNodeCursor nodeCursor = storageReader.allocateNodeCursor(cursorTracer);\n+        nodeCursor.single(nodeId);\n+        if (!nodeCursor.next())\n         {\n-            throw new NotFoundException( \"Node \" + nodeId + \" not found\" );\n+            throw new NotFoundException(\"Node \" + nodeId + \" not found\");\n         }\n-        relationshipCursor.init( nodeId, nodeCursor.relationshipsReference(), ALL_RELATIONSHIPS );\n+        relationshipCursor.init(nodeId, nodeCursor.relationshipsReference(), ALL_RELATIONSHIPS);\n     }\n \n     @Override\n@@ -54,16 +55,16 @@ abstract class BatchRelationshipIterable<T> implements Iterable<T>\n             @Override\n             protected T fetchNextOrNull()\n             {\n-                if ( !relationshipCursor.next() )\n+                if (!relationshipCursor.next())\n                 {\n                     return null;\n                 }\n \n-                return nextFrom( relationshipCursor.entityReference(), relationshipCursor.type(),\n-                                 relationshipCursor.sourceNodeReference(), relationshipCursor.targetNodeReference() );\n+                return nextFrom(relationshipCursor.entityReference(), relationshipCursor.type(),\n+                  relationshipCursor.sourceNodeReference(), relationshipCursor.targetNodeReference());\n             }\n         };\n     }\n \n-    protected abstract T nextFrom( long relId, int type, long startNode, long endNode );\n+    protected abstract T nextFrom(long relId, int type, long startNode, long endNode);\n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
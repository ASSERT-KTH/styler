{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4485",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "168",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "168",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "185",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "213",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "95",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "95",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "101",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "83",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "89",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "114",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "84",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "349",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "358",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "411",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "445",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "452",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "466",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "466",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "472",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "478",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "494",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4485/EnterpriseCoreEditionModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4485/EnterpriseCoreEditionModule.java\nindex b2de831bd02..743692053e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4485/EnterpriseCoreEditionModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4485/EnterpriseCoreEditionModule.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core;\n \n import java.io.File;\n@@ -144,365 +145,359 @@ import static org.neo4j.causalclustering.core.CausalClusteringSettings.raft_mess\n  */\n public class EnterpriseCoreEditionModule extends EditionModule\n {\n-    private final ConsensusModule consensusModule;\n-    private final ReplicationModule replicationModule;\n-    private final CoreTopologyService topologyService;\n-    protected final LogProvider logProvider;\n-    protected final Config config;\n-    private final Supplier<Stream<Pair<AdvertisedSocketAddress,ProtocolStack>>> clientInstalledProtocols;\n-    private final Supplier<Stream<Pair<SocketAddress,ProtocolStack>>> serverInstalledProtocols;\n-    private final CoreServerModule coreServerModule;\n-    private final CoreStateMachinesModule coreStateMachinesModule;\n-\n-    public enum RaftLogImplementation\n+  private final ConsensusModule consensusModule;\n+  private final ReplicationModule replicationModule;\n+  private final CoreTopologyService topologyService;\n+  protected final LogProvider logProvider;\n+  protected final Config config;\n+  private final Supplier<Stream<Pair<AdvertisedSocketAddress, ProtocolStack>>> clientInstalledProtocols;\n+  private final Supplier<Stream<Pair<SocketAddress, ProtocolStack>>> serverInstalledProtocols;\n+  private final CoreServerModule coreServerModule;\n+  private final CoreStateMachinesModule coreStateMachinesModule;\n+\n+  public enum RaftLogImplementation\n+  {\n+    IN_MEMORY, SEGMENTED\n+  }\n+\n+  private LoadBalancingProcessor getLoadBalancingProcessor()\n+  {\n+    try\n+    {\n+      return LoadBalancingPluginLoader.load(topologyService, consensusModule.raftMachine(), logProvider, config);\n+    } catch (Throwable e)\n     {\n-        IN_MEMORY, SEGMENTED\n+      throw new RuntimeException(e);\n     }\n+  }\n \n-    private LoadBalancingProcessor getLoadBalancingProcessor()\n+  @Override\n+  public void registerEditionSpecificProcedures(Procedures procedures) throws KernelException\n+  {\n+    procedures.registerProcedure(EnterpriseBuiltInDbmsProcedures.class, true);\n+    procedures.register(new LegacyGetServersProcedure(topologyService, consensusModule.raftMachine(), config, logProvider));\n+\n+    if (config.get(CausalClusteringSettings.multi_dc_license))\n+    {\n+      procedures.register(new GetServersProcedureForMultiDC(getLoadBalancingProcessor()));\n+    } else\n     {\n-        try\n-        {\n-            return LoadBalancingPluginLoader.load( topologyService, consensusModule.raftMachine(), logProvider, config );\n-        }\n-        catch ( Throwable e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      procedures.register(new GetServersProcedureForSingleDC(topologyService, consensusModule.raftMachine(),\n+          config, logProvider));\n     }\n \n-    @Override\n-    public void registerEditionSpecificProcedures( Procedures procedures ) throws KernelException\n+    procedures.register(new GetRoutersForAllDatabasesProcedure(topologyService, config));\n+    procedures.register(new GetRoutersForDatabaseProcedure(topologyService, config));\n+    procedures.register(new ClusterOverviewProcedure(topologyService, logProvider));\n+    procedures.register(new CoreRoleProcedure(consensusModule.raftMachine()));\n+    procedures.register(new InstalledProtocolsProcedure(clientInstalledProtocols, serverInstalledProtocols));\n+    procedures.registerComponent(Replicator.class, x -> replicationModule.getReplicator(), false);\n+    procedures.registerProcedure(ReplicationBenchmarkProcedure.class);\n+  }\n+\n+  public EnterpriseCoreEditionModule(final PlatformModule platformModule,\n+                                     final DiscoveryServiceFactory discoveryServiceFactory)\n+  {\n+    final Dependencies dependencies = platformModule.dependencies;\n+    config = platformModule.config;\n+    final LogService logging = platformModule.logging;\n+    final FileSystemAbstraction fileSystem = platformModule.fileSystem;\n+    final File storeDir = platformModule.storeDir;\n+    final LifeSupport life = platformModule.life;\n+\n+    final File dataDir = config.get(GraphDatabaseSettings.data_directory);\n+    final ClusterStateDirectory clusterStateDirectory = new ClusterStateDirectory(dataDir, storeDir, false);\n+    try\n     {\n-        procedures.registerProcedure( EnterpriseBuiltInDbmsProcedures.class, true );\n-        procedures.register( new LegacyGetServersProcedure( topologyService, consensusModule.raftMachine(), config, logProvider ) );\n-\n-        if ( config.get( CausalClusteringSettings.multi_dc_license ) )\n-        {\n-            procedures.register( new GetServersProcedureForMultiDC( getLoadBalancingProcessor() ) );\n-        }\n-        else\n-        {\n-            procedures.register( new GetServersProcedureForSingleDC( topologyService, consensusModule.raftMachine(),\n-                    config, logProvider ) );\n-        }\n-\n-        procedures.register( new GetRoutersForAllDatabasesProcedure( topologyService, config ) );\n-        procedures.register( new GetRoutersForDatabaseProcedure( topologyService, config ) );\n-        procedures.register( new ClusterOverviewProcedure( topologyService, logProvider ) );\n-        procedures.register( new CoreRoleProcedure( consensusModule.raftMachine() ) );\n-        procedures.register( new InstalledProtocolsProcedure( clientInstalledProtocols, serverInstalledProtocols ) );\n-        procedures.registerComponent( Replicator.class, x -> replicationModule.getReplicator(), false );\n-        procedures.registerProcedure( ReplicationBenchmarkProcedure.class );\n+      clusterStateDirectory.initialize(fileSystem);\n+    } catch (ClusterStateException e)\n+    {\n+      throw new RuntimeException(e);\n     }\n+    dependencies.satisfyDependency(clusterStateDirectory);\n \n-    public EnterpriseCoreEditionModule( final PlatformModule platformModule,\n-            final DiscoveryServiceFactory discoveryServiceFactory )\n-    {\n-        final Dependencies dependencies = platformModule.dependencies;\n-        config = platformModule.config;\n-        final LogService logging = platformModule.logging;\n-        final FileSystemAbstraction fileSystem = platformModule.fileSystem;\n-        final File storeDir = platformModule.storeDir;\n-        final LifeSupport life = platformModule.life;\n-\n-        final File dataDir = config.get( GraphDatabaseSettings.data_directory );\n-        final ClusterStateDirectory clusterStateDirectory = new ClusterStateDirectory( dataDir, storeDir, false );\n-        try\n-        {\n-            clusterStateDirectory.initialize( fileSystem );\n-        }\n-        catch ( ClusterStateException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-        dependencies.satisfyDependency( clusterStateDirectory );\n-\n-        eligibleForIdReuse = IdReuseEligibility.ALWAYS;\n-\n-        logProvider = logging.getInternalLogProvider();\n-        final Supplier<DatabaseHealth> databaseHealthSupplier = dependencies.provideDependency( DatabaseHealth.class );\n-\n-        watcherService = createFileSystemWatcherService( fileSystem, storeDir, logging,\n-                platformModule.jobScheduler, config, fileWatcherFileNameFilter() );\n-        dependencies.satisfyDependencies( watcherService );\n-        LogFiles logFiles = buildLocalDatabaseLogFiles( platformModule, fileSystem, storeDir );\n-        LocalDatabase localDatabase = new LocalDatabase( platformModule.storeDir,\n-                new StoreFiles( fileSystem, platformModule.pageCache ),\n-                logFiles,\n-                platformModule.dataSourceManager,\n-                databaseHealthSupplier,\n-                watcherService,\n-                platformModule.availabilityGuard,\n-                logProvider );\n-\n-        IdentityModule identityModule = new IdentityModule( platformModule, clusterStateDirectory.get() );\n-\n-        ClusteringModule clusteringModule = getClusteringModule( platformModule, discoveryServiceFactory,\n-                clusterStateDirectory, identityModule, dependencies );\n-\n-        // We need to satisfy the dependency here to keep users of it, such as BoltKernelExtension, happy.\n-        dependencies.satisfyDependency( SslPolicyLoader.create( config, logProvider ) );\n-\n-        PipelineWrapper clientPipelineWrapper = pipelineWrapperFactory().forClient( config, dependencies, logProvider, CausalClusteringSettings.ssl_policy );\n-        PipelineWrapper serverPipelineWrapper = pipelineWrapperFactory().forServer( config, dependencies, logProvider, CausalClusteringSettings.ssl_policy );\n-        PipelineWrapper backupServerPipelineWrapper = pipelineWrapperFactory().forServer( config, dependencies, logProvider, OnlineBackupSettings.ssl_policy );\n-\n-        NettyPipelineBuilderFactory clientPipelineBuilderFactory = new NettyPipelineBuilderFactory( clientPipelineWrapper );\n-        NettyPipelineBuilderFactory serverPipelineBuilderFactory = new NettyPipelineBuilderFactory( serverPipelineWrapper );\n-        NettyPipelineBuilderFactory backupServerPipelineBuilderFactory = new NettyPipelineBuilderFactory( backupServerPipelineWrapper );\n-\n-        topologyService = clusteringModule.topologyService();\n-\n-        long logThresholdMillis = config.get( CausalClusteringSettings.unknown_address_logging_throttle ).toMillis();\n-\n-        SupportedProtocolCreator supportedProtocolCreator = new SupportedProtocolCreator( config, logProvider );\n-        ApplicationSupportedProtocols supportedRaftProtocols = supportedProtocolCreator.createSupportedRaftProtocol();\n-        Collection<ModifierSupportedProtocols> supportedModifierProtocols = supportedProtocolCreator.createSupportedModifierProtocols();\n-\n-        ApplicationProtocolRepository applicationProtocolRepository =\n-                new ApplicationProtocolRepository( Protocol.ApplicationProtocols.values(), supportedRaftProtocols );\n-        ModifierProtocolRepository modifierProtocolRepository =\n-                new ModifierProtocolRepository( Protocol.ModifierProtocols.values(), supportedModifierProtocols );\n-\n-        ProtocolInstallerRepository<ProtocolInstaller.Orientation.Client> protocolInstallerRepository =\n-                new ProtocolInstallerRepository<>(\n-                        singletonList( new RaftProtocolClientInstaller.Factory( clientPipelineBuilderFactory, logProvider ) ),\n-                        ModifierProtocolInstaller.allClientInstallers );\n-\n-        Duration handshakeTimeout = config.get( CausalClusteringSettings.handshake_timeout );\n-        HandshakeClientInitializer channelInitializer = new HandshakeClientInitializer( applicationProtocolRepository, modifierProtocolRepository,\n-                protocolInstallerRepository, clientPipelineBuilderFactory, handshakeTimeout, logProvider );\n-        final SenderService raftSender = new SenderService( channelInitializer, logProvider );\n-        life.add( raftSender );\n-        this.clientInstalledProtocols = raftSender::installedProtocols;\n-\n-        final MessageLogger<MemberId> messageLogger = createMessageLogger( config, life, identityModule.myself() );\n-\n-        RaftOutbound raftOutbound = new RaftOutbound( topologyService, raftSender, clusteringModule.clusterIdentity(),\n-                logProvider, logThresholdMillis );\n-        Outbound<MemberId,RaftMessages.RaftMessage> loggingOutbound = new LoggingOutbound<>( raftOutbound,\n-                identityModule.myself(), messageLogger );\n-\n-        consensusModule = new ConsensusModule( identityModule.myself(), platformModule, loggingOutbound,\n-                clusterStateDirectory.get(), topologyService );\n-\n-        dependencies.satisfyDependency( consensusModule.raftMachine() );\n-\n-        replicationModule = new ReplicationModule( identityModule.myself(), platformModule, config, consensusModule,\n-                loggingOutbound, clusterStateDirectory.get(), fileSystem, logProvider );\n-\n-        coreStateMachinesModule = new CoreStateMachinesModule( identityModule.myself(),\n-                platformModule, clusterStateDirectory.get(), config, replicationModule.getReplicator(),\n-                consensusModule.raftMachine(), dependencies, localDatabase );\n-\n-        this.idTypeConfigurationProvider = coreStateMachinesModule.idTypeConfigurationProvider;\n-\n-        createIdComponents( platformModule, dependencies, coreStateMachinesModule.idGeneratorFactory );\n-        dependencies.satisfyDependency( idGeneratorFactory );\n-        dependencies.satisfyDependency( idController );\n-\n-        this.labelTokenHolder = coreStateMachinesModule.labelTokenHolder;\n-        this.propertyKeyTokenHolder = coreStateMachinesModule.propertyKeyTokenHolder;\n-        this.relationshipTypeTokenHolder = coreStateMachinesModule.relationshipTypeTokenHolder;\n-        this.lockManager = coreStateMachinesModule.lockManager;\n-        this.commitProcessFactory = coreStateMachinesModule.commitProcessFactory;\n-        this.accessCapability = new LeaderCanWrite( consensusModule.raftMachine() );\n-\n-        InstalledProtocolHandler serverInstalledProtocolHandler = new InstalledProtocolHandler();\n+    eligibleForIdReuse = IdReuseEligibility.ALWAYS;\n \n-        this.coreServerModule = new CoreServerModule( identityModule, platformModule, consensusModule, coreStateMachinesModule, clusteringModule,\n-                replicationModule, localDatabase, databaseHealthSupplier, clusterStateDirectory.get(), clientPipelineBuilderFactory,\n-                serverPipelineBuilderFactory, backupServerPipelineBuilderFactory, serverInstalledProtocolHandler );\n+    logProvider = logging.getInternalLogProvider();\n+    final Supplier<DatabaseHealth> databaseHealthSupplier = dependencies.provideDependency(DatabaseHealth.class);\n \n-        TypicallyConnectToRandomReadReplicaStrategy defaultStrategy = new TypicallyConnectToRandomReadReplicaStrategy( 2 );\n-        defaultStrategy.inject( topologyService, config, logProvider, identityModule.myself() );\n-        UpstreamDatabaseStrategySelector catchupStrategySelector =\n-                createUpstreamDatabaseStrategySelector( identityModule.myself(), config, logProvider, topologyService, defaultStrategy );\n+    watcherService = createFileSystemWatcherService(fileSystem, storeDir, logging,\n+        platformModule.jobScheduler, config, fileWatcherFileNameFilter());\n+    dependencies.satisfyDependencies(watcherService);\n+    LogFiles logFiles = buildLocalDatabaseLogFiles(platformModule, fileSystem, storeDir);\n+    LocalDatabase localDatabase = new LocalDatabase(platformModule.storeDir,\n+        new StoreFiles(fileSystem, platformModule.pageCache),\n+        logFiles,\n+        platformModule.dataSourceManager,\n+        databaseHealthSupplier,\n+        watcherService,\n+        platformModule.availabilityGuard,\n+        logProvider);\n \n-        CatchupAddressProvider.PrioritisingUpstreamStrategyBasedAddressProvider catchupAddressProvider =\n-                new CatchupAddressProvider.PrioritisingUpstreamStrategyBasedAddressProvider( consensusModule.raftMachine(), topologyService,\n-                        catchupStrategySelector );\n-        RaftServerModule.createAndStart( platformModule, consensusModule, identityModule, coreServerModule, localDatabase, serverPipelineBuilderFactory,\n-                messageLogger, catchupAddressProvider, supportedRaftProtocols, supportedModifierProtocols, serverInstalledProtocolHandler );\n-        serverInstalledProtocols = serverInstalledProtocolHandler::installedProtocols;\n+    IdentityModule identityModule = new IdentityModule(platformModule, clusterStateDirectory.get());\n \n-        editionInvariants( platformModule, dependencies, config, logging, life );\n+    ClusteringModule clusteringModule = getClusteringModule(platformModule, discoveryServiceFactory,\n+        clusterStateDirectory, identityModule, dependencies);\n \n-        dependencies.satisfyDependency( lockManager );\n+    // We need to satisfy the dependency here to keep users of it, such as BoltKernelExtension, happy.\n+    dependencies.satisfyDependency(SslPolicyLoader.create(config, logProvider));\n \n-        life.add( coreServerModule.membershipWaiterLifecycle );\n-    }\n+    PipelineWrapper clientPipelineWrapper = pipelineWrapperFactory().forClient(config, dependencies, logProvider, CausalClusteringSettings.ssl_policy);\n+    PipelineWrapper serverPipelineWrapper = pipelineWrapperFactory().forServer(config, dependencies, logProvider, CausalClusteringSettings.ssl_policy);\n+    PipelineWrapper backupServerPipelineWrapper = pipelineWrapperFactory().forServer(config, dependencies, logProvider, OnlineBackupSettings.ssl_policy);\n \n-    private UpstreamDatabaseStrategySelector createUpstreamDatabaseStrategySelector( MemberId myself, Config config, LogProvider logProvider,\n-            TopologyService topologyService, UpstreamDatabaseSelectionStrategy defaultStrategy )\n-    {\n-        UpstreamDatabaseStrategiesLoader loader;\n-        if ( config.get( CausalClusteringSettings.multi_dc_license ) )\n-        {\n-            loader = new UpstreamDatabaseStrategiesLoader( topologyService, config, myself, logProvider );\n-            logProvider.getLog( getClass() ).info( \"Multi-Data Center option enabled.\" );\n-        }\n-        else\n-        {\n-            loader = new NoOpUpstreamDatabaseStrategiesLoader();\n-        }\n-\n-        return new UpstreamDatabaseStrategySelector( defaultStrategy, loader, logProvider );\n-    }\n+    NettyPipelineBuilderFactory clientPipelineBuilderFactory = new NettyPipelineBuilderFactory(clientPipelineWrapper);\n+    NettyPipelineBuilderFactory serverPipelineBuilderFactory = new NettyPipelineBuilderFactory(serverPipelineWrapper);\n+    NettyPipelineBuilderFactory backupServerPipelineBuilderFactory = new NettyPipelineBuilderFactory(backupServerPipelineWrapper);\n \n-    private LogFiles buildLocalDatabaseLogFiles( PlatformModule platformModule, FileSystemAbstraction fileSystem,\n-            File storeDir )\n-    {\n-        try\n-        {\n-            return LogFilesBuilder.activeFilesBuilder( storeDir, fileSystem, platformModule.pageCache ).withConfig( config ).build();\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-    }\n+    topologyService = clusteringModule.topologyService();\n \n-    protected ClusteringModule getClusteringModule( PlatformModule platformModule,\n-                                                  DiscoveryServiceFactory discoveryServiceFactory,\n-                                                  ClusterStateDirectory clusterStateDirectory,\n-                                                  IdentityModule identityModule, Dependencies dependencies )\n-    {\n-        return new ClusteringModule( discoveryServiceFactory, identityModule.myself(),\n-                platformModule, clusterStateDirectory.get() );\n-    }\n+    long logThresholdMillis = config.get(CausalClusteringSettings.unknown_address_logging_throttle).toMillis();\n \n-    protected DuplexPipelineWrapperFactory pipelineWrapperFactory()\n-    {\n-        return new VoidPipelineWrapperFactory();\n-    }\n+    SupportedProtocolCreator supportedProtocolCreator = new SupportedProtocolCreator(config, logProvider);\n+    ApplicationSupportedProtocols supportedRaftProtocols = supportedProtocolCreator.createSupportedRaftProtocol();\n+    Collection<ModifierSupportedProtocols> supportedModifierProtocols = supportedProtocolCreator.createSupportedModifierProtocols();\n \n-    @Override\n-    protected void createIdComponents( PlatformModule platformModule, Dependencies dependencies,\n-            IdGeneratorFactory editionIdGeneratorFactory )\n-    {\n-        super.createIdComponents( platformModule, dependencies, editionIdGeneratorFactory );\n-        this.idGeneratorFactory =\n-                new FreeIdFilteredIdGeneratorFactory( this.idGeneratorFactory, coreStateMachinesModule.freeIdCondition );\n-    }\n+    ApplicationProtocolRepository applicationProtocolRepository =\n+        new ApplicationProtocolRepository(Protocol.ApplicationProtocols.values(), supportedRaftProtocols);\n+    ModifierProtocolRepository modifierProtocolRepository =\n+        new ModifierProtocolRepository(Protocol.ModifierProtocols.values(), supportedModifierProtocols);\n \n-    static Predicate<String> fileWatcherFileNameFilter()\n-    {\n-        return Predicates.any(\n-                fileName -> fileName.startsWith( TransactionLogFiles.DEFAULT_NAME ),\n-                fileName -> fileName.startsWith( IndexConfigStore.INDEX_DB_FILE_NAME ),\n-                filename -> filename.startsWith( StoreUtil.TEMP_COPY_DIRECTORY_NAME ),\n-                filename -> filename.endsWith( PageCacheWarmer.SUFFIX_CACHEPROF )\n-        );\n-    }\n+    ProtocolInstallerRepository<ProtocolInstaller.Orientation.Client> protocolInstallerRepository =\n+        new ProtocolInstallerRepository<>(\n+            singletonList(new RaftProtocolClientInstaller.Factory(clientPipelineBuilderFactory, logProvider)),\n+            ModifierProtocolInstaller.allClientInstallers);\n \n-    private MessageLogger<MemberId> createMessageLogger( Config config, LifeSupport life, MemberId myself )\n-    {\n-        final MessageLogger<MemberId> messageLogger;\n-        if ( config.get( CausalClusteringSettings.raft_messages_log_enable ) )\n-        {\n-            File logFile = config.get( raft_messages_log_path );\n-            messageLogger = life.add( new BetterMessageLogger<>( myself, raftMessagesLog( logFile ), Clocks.systemClock() ) );\n-        }\n-        else\n-        {\n-            messageLogger = new NullMessageLogger<>();\n-        }\n-        return messageLogger;\n-    }\n+    Duration handshakeTimeout = config.get(CausalClusteringSettings.handshake_timeout);\n+    HandshakeClientInitializer channelInitializer = new HandshakeClientInitializer(applicationProtocolRepository, modifierProtocolRepository,\n+        protocolInstallerRepository, clientPipelineBuilderFactory, handshakeTimeout, logProvider);\n+    final SenderService raftSender = new SenderService(channelInitializer, logProvider);\n+    life.add(raftSender);\n+    this.clientInstalledProtocols = raftSender::installedProtocols;\n \n-    private void editionInvariants( PlatformModule platformModule, Dependencies dependencies, Config config,\n-            LogService logging, LifeSupport life )\n-    {\n-        statementLocksFactory = new StatementLocksFactorySelector( lockManager, config, logging ).select();\n+    final MessageLogger<MemberId> messageLogger = createMessageLogger(config, life, identityModule.myself());\n \n-        dependencies.satisfyDependency(\n-                createKernelData( platformModule.fileSystem, platformModule.pageCache, platformModule.storeDir,\n-                        config, platformModule.graphDatabaseFacade, life ) );\n+    RaftOutbound raftOutbound = new RaftOutbound(topologyService, raftSender, clusteringModule.clusterIdentity(),\n+        logProvider, logThresholdMillis);\n+    Outbound<MemberId, RaftMessages.RaftMessage> loggingOutbound = new LoggingOutbound<>(raftOutbound,\n+        identityModule.myself(), messageLogger);\n \n-        ioLimiter = new ConfigurableIOLimiter( platformModule.config );\n+    consensusModule = new ConsensusModule(identityModule.myself(), platformModule, loggingOutbound,\n+        clusterStateDirectory.get(), topologyService);\n \n-        headerInformationFactory = createHeaderInformationFactory();\n+    dependencies.satisfyDependency(consensusModule.raftMachine());\n \n-        schemaWriteGuard = createSchemaWriteGuard();\n+    replicationModule = new ReplicationModule(identityModule.myself(), platformModule, config, consensusModule,\n+        loggingOutbound, clusterStateDirectory.get(), fileSystem, logProvider);\n \n-        transactionStartTimeout = config.get( GraphDatabaseSettings.transaction_start_timeout ).toMillis();\n+    coreStateMachinesModule = new CoreStateMachinesModule(identityModule.myself(),\n+        platformModule, clusterStateDirectory.get(), config, replicationModule.getReplicator(),\n+        consensusModule.raftMachine(), dependencies, localDatabase);\n \n-        constraintSemantics = new EnterpriseConstraintSemantics();\n+    this.idTypeConfigurationProvider = coreStateMachinesModule.idTypeConfigurationProvider;\n \n-        coreAPIAvailabilityGuard =\n-                new CoreAPIAvailabilityGuard( platformModule.availabilityGuard, transactionStartTimeout );\n+    createIdComponents(platformModule, dependencies, coreStateMachinesModule.idGeneratorFactory);\n+    dependencies.satisfyDependency(idGeneratorFactory);\n+    dependencies.satisfyDependency(idController);\n \n-        registerRecovery( platformModule.databaseInfo, life, dependencies );\n+    this.labelTokenHolder = coreStateMachinesModule.labelTokenHolder;\n+    this.propertyKeyTokenHolder = coreStateMachinesModule.propertyKeyTokenHolder;\n+    this.relationshipTypeTokenHolder = coreStateMachinesModule.relationshipTypeTokenHolder;\n+    this.lockManager = coreStateMachinesModule.lockManager;\n+    this.commitProcessFactory = coreStateMachinesModule.commitProcessFactory;\n+    this.accessCapability = new LeaderCanWrite(consensusModule.raftMachine());\n \n-        publishEditionInfo( dependencies.resolveDependency( UsageData.class ), platformModule.databaseInfo, config );\n+    InstalledProtocolHandler serverInstalledProtocolHandler = new InstalledProtocolHandler();\n \n-        dependencies.satisfyDependency( createSessionTracker() );\n-    }\n+    this.coreServerModule = new CoreServerModule(identityModule, platformModule, consensusModule, coreStateMachinesModule, clusteringModule,\n+        replicationModule, localDatabase, databaseHealthSupplier, clusterStateDirectory.get(), clientPipelineBuilderFactory,\n+        serverPipelineBuilderFactory, backupServerPipelineBuilderFactory, serverInstalledProtocolHandler);\n \n-    public boolean isLeader()\n-    {\n-        return consensusModule.raftMachine().currentRole() == Role.LEADER;\n-    }\n+    TypicallyConnectToRandomReadReplicaStrategy defaultStrategy = new TypicallyConnectToRandomReadReplicaStrategy(2);\n+    defaultStrategy.inject(topologyService, config, logProvider, identityModule.myself());\n+    UpstreamDatabaseStrategySelector catchupStrategySelector =\n+        createUpstreamDatabaseStrategySelector(identityModule.myself(), config, logProvider, topologyService, defaultStrategy);\n \n-    private static PrintWriter raftMessagesLog( File logFile )\n-    {\n-        //noinspection ResultOfMethodCallIgnored\n-        logFile.getParentFile().mkdirs();\n-        try\n-        {\n-            return new PrintWriter( new FileOutputStream( logFile, true ) );\n-        }\n-        catch ( FileNotFoundException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-    }\n+    CatchupAddressProvider.PrioritisingUpstreamStrategyBasedAddressProvider catchupAddressProvider =\n+        new CatchupAddressProvider.PrioritisingUpstreamStrategyBasedAddressProvider(consensusModule.raftMachine(), topologyService,\n+            catchupStrategySelector);\n+    RaftServerModule.createAndStart(platformModule, consensusModule, identityModule, coreServerModule, localDatabase, serverPipelineBuilderFactory,\n+        messageLogger, catchupAddressProvider, supportedRaftProtocols, supportedModifierProtocols, serverInstalledProtocolHandler);\n+    serverInstalledProtocols = serverInstalledProtocolHandler::installedProtocols;\n \n-    private SchemaWriteGuard createSchemaWriteGuard()\n-    {\n-        return SchemaWriteGuard.ALLOW_ALL_WRITES;\n-    }\n+    editionInvariants(platformModule, dependencies, config, logging, life);\n \n-    private KernelData createKernelData( FileSystemAbstraction fileSystem, PageCache pageCache, File storeDir,\n-            Config config, GraphDatabaseAPI graphAPI, LifeSupport life )\n-    {\n-        DefaultKernelData kernelData = new DefaultKernelData( fileSystem, pageCache, storeDir, config, graphAPI );\n-        return life.add( kernelData );\n-    }\n+    dependencies.satisfyDependency(lockManager);\n \n-    private TransactionHeaderInformationFactory createHeaderInformationFactory()\n-    {\n-        return () -> new TransactionHeaderInformation( -1, -1, new byte[0] );\n-    }\n+    life.add(coreServerModule.membershipWaiterLifecycle);\n+  }\n \n-    private void registerRecovery( final DatabaseInfo databaseInfo, LifeSupport life,\n-            final DependencyResolver dependencyResolver )\n+  private UpstreamDatabaseStrategySelector createUpstreamDatabaseStrategySelector(MemberId myself, Config config, LogProvider logProvider,\n+                                                                                  TopologyService topologyService,\n+                                                                                  UpstreamDatabaseSelectionStrategy defaultStrategy)\n+  {\n+    UpstreamDatabaseStrategiesLoader loader;\n+    if (config.get(CausalClusteringSettings.multi_dc_license))\n     {\n-        life.addLifecycleListener( ( instance, from, to ) ->\n-        {\n-            if ( instance instanceof DatabaseAvailability && LifecycleStatus.STARTED.equals( to ) )\n-            {\n-                doAfterRecoveryAndStartup( databaseInfo, dependencyResolver );\n-            }\n-        } );\n+      loader = new UpstreamDatabaseStrategiesLoader(topologyService, config, myself, logProvider);\n+      logProvider.getLog(getClass()).info(\"Multi-Data Center option enabled.\");\n+    } else\n+    {\n+      loader = new NoOpUpstreamDatabaseStrategiesLoader();\n     }\n \n-    @Override\n-    protected BoltConnectionTracker createSessionTracker()\n+    return new UpstreamDatabaseStrategySelector(defaultStrategy, loader, logProvider);\n+  }\n+\n+  private LogFiles buildLocalDatabaseLogFiles(PlatformModule platformModule, FileSystemAbstraction fileSystem,\n+                                              File storeDir)\n+  {\n+    try\n+    {\n+      return LogFilesBuilder.activeFilesBuilder(storeDir, fileSystem, platformModule.pageCache).withConfig(config).build();\n+    } catch (IOException e)\n     {\n-        return new StandardBoltConnectionTracker();\n+      throw new RuntimeException(e);\n     }\n-\n-    @Override\n-    public void setupSecurityModule( PlatformModule platformModule, Procedures procedures )\n+  }\n+\n+  protected ClusteringModule getClusteringModule(PlatformModule platformModule,\n+                                                 DiscoveryServiceFactory discoveryServiceFactory,\n+                                                 ClusterStateDirectory clusterStateDirectory,\n+                                                 IdentityModule identityModule, Dependencies dependencies)\n+  {\n+    return new ClusteringModule(discoveryServiceFactory, identityModule.myself(),\n+        platformModule, clusterStateDirectory.get());\n+  }\n+\n+  protected DuplexPipelineWrapperFactory pipelineWrapperFactory()\n+  {\n+    return new VoidPipelineWrapperFactory();\n+  }\n+\n+  @Override\n+  protected void createIdComponents(PlatformModule platformModule, Dependencies dependencies,\n+                                    IdGeneratorFactory editionIdGeneratorFactory)\n+  {\n+    super.createIdComponents(platformModule, dependencies, editionIdGeneratorFactory);\n+    this.idGeneratorFactory =\n+        new FreeIdFilteredIdGeneratorFactory(this.idGeneratorFactory, coreStateMachinesModule.freeIdCondition);\n+  }\n+\n+  static Predicate<String> fileWatcherFileNameFilter()\n+  {\n+    return Predicates.any(\n+        fileName -> fileName.startsWith(TransactionLogFiles.DEFAULT_NAME),\n+        fileName -> fileName.startsWith(IndexConfigStore.INDEX_DB_FILE_NAME),\n+        filename -> filename.startsWith(StoreUtil.TEMP_COPY_DIRECTORY_NAME),\n+        filename -> filename.endsWith(PageCacheWarmer.SUFFIX_CACHEPROF)\n+    );\n+  }\n+\n+  private MessageLogger<MemberId> createMessageLogger(Config config, LifeSupport life, MemberId myself)\n+  {\n+    final MessageLogger<MemberId> messageLogger;\n+    if (config.get(CausalClusteringSettings.raft_messages_log_enable))\n+    {\n+      File logFile = config.get(raft_messages_log_path);\n+      messageLogger = life.add(new BetterMessageLogger<>(myself, raftMessagesLog(logFile), Clocks.systemClock()));\n+    } else\n     {\n-        EnterpriseEditionModule.setupEnterpriseSecurityModule( platformModule, procedures );\n+      messageLogger = new NullMessageLogger<>();\n     }\n+    return messageLogger;\n+  }\n+\n+  private void editionInvariants(PlatformModule platformModule, Dependencies dependencies, Config config,\n+                                 LogService logging, LifeSupport life)\n+  {\n+    statementLocksFactory = new StatementLocksFactorySelector(lockManager, config, logging).select();\n \n-    public void disableCatchupServer() throws Throwable\n+    dependencies.satisfyDependency(\n+        createKernelData(platformModule.fileSystem, platformModule.pageCache, platformModule.storeDir,\n+            config, platformModule.graphDatabaseFacade, life));\n+\n+    ioLimiter = new ConfigurableIOLimiter(platformModule.config);\n+\n+    headerInformationFactory = createHeaderInformationFactory();\n+\n+    schemaWriteGuard = createSchemaWriteGuard();\n+\n+    transactionStartTimeout = config.get(GraphDatabaseSettings.transaction_start_timeout).toMillis();\n+\n+    constraintSemantics = new EnterpriseConstraintSemantics();\n+\n+    coreAPIAvailabilityGuard =\n+        new CoreAPIAvailabilityGuard(platformModule.availabilityGuard, transactionStartTimeout);\n+\n+    registerRecovery(platformModule.databaseInfo, life, dependencies);\n+\n+    publishEditionInfo(dependencies.resolveDependency(UsageData.class), platformModule.databaseInfo, config);\n+\n+    dependencies.satisfyDependency(createSessionTracker());\n+  }\n+\n+  public boolean isLeader()\n+  {\n+    return consensusModule.raftMachine().currentRole() == Role.LEADER;\n+  }\n+\n+  private static PrintWriter raftMessagesLog(File logFile)\n+  {\n+    //noinspection ResultOfMethodCallIgnored\n+    logFile.getParentFile().mkdirs();\n+    try\n+    {\n+      return new PrintWriter(new FileOutputStream(logFile, true));\n+    } catch (FileNotFoundException e)\n     {\n-        coreServerModule.catchupServer().disable();\n+      throw new RuntimeException(e);\n     }\n+  }\n+\n+  private SchemaWriteGuard createSchemaWriteGuard()\n+  {\n+    return SchemaWriteGuard.ALLOW_ALL_WRITES;\n+  }\n+\n+  private KernelData createKernelData(FileSystemAbstraction fileSystem, PageCache pageCache, File storeDir,\n+                                      Config config, GraphDatabaseAPI graphAPI, LifeSupport life)\n+  {\n+    DefaultKernelData kernelData = new DefaultKernelData(fileSystem, pageCache, storeDir, config, graphAPI);\n+    return life.add(kernelData);\n+  }\n+\n+  private TransactionHeaderInformationFactory createHeaderInformationFactory()\n+  {\n+    return () -> new TransactionHeaderInformation(-1, -1, new byte[0]);\n+  }\n+\n+  private void registerRecovery(final DatabaseInfo databaseInfo, LifeSupport life,\n+                                final DependencyResolver dependencyResolver)\n+  {\n+    life.addLifecycleListener((instance, from, to) ->\n+    {\n+      if (instance instanceof DatabaseAvailability && LifecycleStatus.STARTED.equals(to))\n+      {\n+        doAfterRecoveryAndStartup(databaseInfo, dependencyResolver);\n+      }\n+    });\n+  }\n+\n+  @Override\n+  protected BoltConnectionTracker createSessionTracker()\n+  {\n+    return new StandardBoltConnectionTracker();\n+  }\n+\n+  @Override\n+  public void setupSecurityModule(PlatformModule platformModule, Procedures procedures)\n+  {\n+    EnterpriseEditionModule.setupEnterpriseSecurityModule(platformModule, procedures);\n+  }\n+\n+  public void disableCatchupServer() throws Throwable\n+  {\n+    coreServerModule.catchupServer().disable();\n+  }\n }\n",
            "diff_size": 519
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "246",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "248",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 282).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "251",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 194).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "251",
                    "column": "194",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "266",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 165).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "280",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 232).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "283",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "284",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 221).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "348",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 311).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4485/EnterpriseCoreEditionModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4485/EnterpriseCoreEditionModule.java\nindex b2de831bd02..fad06613fc3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4485/EnterpriseCoreEditionModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4485/EnterpriseCoreEditionModule.java\n@@ -176,8 +176,7 @@ public class EnterpriseCoreEditionModule extends EditionModule\n     {\n         procedures.registerProcedure( EnterpriseBuiltInDbmsProcedures.class, true );\n         procedures.register( new LegacyGetServersProcedure( topologyService, consensusModule.raftMachine(), config, logProvider ) );\n-\n-        if ( config.get( CausalClusteringSettings.multi_dc_license ) )\n+if ( config.get( CausalClusteringSettings.multi_dc_license ) )\n         {\n             procedures.register( new GetServersProcedureForMultiDC( getLoadBalancingProcessor() ) );\n         }\n@@ -196,8 +195,7 @@ public class EnterpriseCoreEditionModule extends EditionModule\n         procedures.registerProcedure( ReplicationBenchmarkProcedure.class );\n     }\n \n-    public EnterpriseCoreEditionModule( final PlatformModule platformModule,\n-            final DiscoveryServiceFactory discoveryServiceFactory )\n+    public EnterpriseCoreEditionModule( final PlatformModule platformModule, final DiscoveryServiceFactory discoveryServiceFactory )\n     {\n         final Dependencies dependencies = platformModule.dependencies;\n         config = platformModule.config;\n@@ -217,121 +215,81 @@ public class EnterpriseCoreEditionModule extends EditionModule\n             throw new RuntimeException( e );\n         }\n         dependencies.satisfyDependency( clusterStateDirectory );\n-\n-        eligibleForIdReuse = IdReuseEligibility.ALWAYS;\n+eligibleForIdReuse = IdReuseEligibility.ALWAYS;\n \n         logProvider = logging.getInternalLogProvider();\n         final Supplier<DatabaseHealth> databaseHealthSupplier = dependencies.provideDependency( DatabaseHealth.class );\n-\n-        watcherService = createFileSystemWatcherService( fileSystem, storeDir, logging,\n+watcherService = createFileSystemWatcherService( fileSystem, storeDir, logging,\n                 platformModule.jobScheduler, config, fileWatcherFileNameFilter() );\n-        dependencies.satisfyDependencies( watcherService );\n+dependencies.satisfyDependencies( watcherService );\n         LogFiles logFiles = buildLocalDatabaseLogFiles( platformModule, fileSystem, storeDir );\n-        LocalDatabase localDatabase = new LocalDatabase( platformModule.storeDir,\n-                new StoreFiles( fileSystem, platformModule.pageCache ),\n-                logFiles,\n-                platformModule.dataSourceManager,\n-                databaseHealthSupplier,\n-                watcherService,\n-                platformModule.availabilityGuard,\n-                logProvider );\n-\n-        IdentityModule identityModule = new IdentityModule( platformModule, clusterStateDirectory.get() );\n-\n-        ClusteringModule clusteringModule = getClusteringModule( platformModule, discoveryServiceFactory,\n+        LocalDatabase localDatabase = new LocalDatabase( platformModule.storeDir, new StoreFiles( fileSystem, platformModule.pageCache ), logFiles,\n+                platformModule.dataSourceManager, databaseHealthSupplier, watcherService,\n+                platformModule.availabilityGuard, logProvider );\n+IdentityModule identityModule = new IdentityModule( platformModule, clusterStateDirectory.get() );\n+ClusteringModule clusteringModule = getClusteringModule( platformModule, discoveryServiceFactory,\n                 clusterStateDirectory, identityModule, dependencies );\n-\n-        // We need to satisfy the dependency here to keep users of it, such as BoltKernelExtension, happy.\n+    // We need to satisfy the dependency here to keep users of it, such as BoltKernelExtension, happy.\n         dependencies.satisfyDependency( SslPolicyLoader.create( config, logProvider ) );\n-\n-        PipelineWrapper clientPipelineWrapper = pipelineWrapperFactory().forClient( config, dependencies, logProvider, CausalClusteringSettings.ssl_policy );\n+PipelineWrapper clientPipelineWrapper = pipelineWrapperFactory().forClient( config, dependencies, logProvider, CausalClusteringSettings.ssl_policy );\n         PipelineWrapper serverPipelineWrapper = pipelineWrapperFactory().forServer( config, dependencies, logProvider, CausalClusteringSettings.ssl_policy );\n         PipelineWrapper backupServerPipelineWrapper = pipelineWrapperFactory().forServer( config, dependencies, logProvider, OnlineBackupSettings.ssl_policy );\n-\n-        NettyPipelineBuilderFactory clientPipelineBuilderFactory = new NettyPipelineBuilderFactory( clientPipelineWrapper );\n+NettyPipelineBuilderFactory clientPipelineBuilderFactory = new NettyPipelineBuilderFactory( clientPipelineWrapper );\n         NettyPipelineBuilderFactory serverPipelineBuilderFactory = new NettyPipelineBuilderFactory( serverPipelineWrapper );\n         NettyPipelineBuilderFactory backupServerPipelineBuilderFactory = new NettyPipelineBuilderFactory( backupServerPipelineWrapper );\n-\n-        topologyService = clusteringModule.topologyService();\n+topologyService = clusteringModule.topologyService();\n \n         long logThresholdMillis = config.get( CausalClusteringSettings.unknown_address_logging_throttle ).toMillis();\n-\n-        SupportedProtocolCreator supportedProtocolCreator = new SupportedProtocolCreator( config, logProvider );\n+SupportedProtocolCreator supportedProtocolCreator = new SupportedProtocolCreator( config, logProvider );\n         ApplicationSupportedProtocols supportedRaftProtocols = supportedProtocolCreator.createSupportedRaftProtocol();\n         Collection<ModifierSupportedProtocols> supportedModifierProtocols = supportedProtocolCreator.createSupportedModifierProtocols();\n-\n-        ApplicationProtocolRepository applicationProtocolRepository =\n-                new ApplicationProtocolRepository( Protocol.ApplicationProtocols.values(), supportedRaftProtocols );\n-        ModifierProtocolRepository modifierProtocolRepository =\n-                new ModifierProtocolRepository( Protocol.ModifierProtocols.values(), supportedModifierProtocols );\n-\n-        ProtocolInstallerRepository<ProtocolInstaller.Orientation.Client> protocolInstallerRepository =\n-                new ProtocolInstallerRepository<>(\n-                        singletonList( new RaftProtocolClientInstaller.Factory( clientPipelineBuilderFactory, logProvider ) ),\n-                        ModifierProtocolInstaller.allClientInstallers );\n-\n-        Duration handshakeTimeout = config.get( CausalClusteringSettings.handshake_timeout );\n+ApplicationProtocolRepository applicationProtocolRepository = new ApplicationProtocolRepository( Protocol.ApplicationProtocols.values(), supportedRaftProtocols );\n+ModifierProtocolRepository modifierProtocolRepository = new ModifierProtocolRepository( Protocol.ModifierProtocols.values(), supportedModifierProtocols );\n+ProtocolInstallerRepository<ProtocolInstaller.Orientation.Client> protocolInstallerRepository = new ProtocolInstallerRepository<>( singletonList( new RaftProtocolClientInstaller.Factory( clientPipelineBuilderFactory, logProvider ) ), ModifierProtocolInstaller.allClientInstallers );\n+Duration handshakeTimeout = config.get( CausalClusteringSettings.handshake_timeout );\n         HandshakeClientInitializer channelInitializer = new HandshakeClientInitializer( applicationProtocolRepository, modifierProtocolRepository,\n-                protocolInstallerRepository, clientPipelineBuilderFactory, handshakeTimeout, logProvider );\n-        final SenderService raftSender = new SenderService( channelInitializer, logProvider );\n+                protocolInstallerRepository, clientPipelineBuilderFactory, handshakeTimeout, logProvider ); final SenderService raftSender = new SenderService( channelInitializer, logProvider );\n         life.add( raftSender );\n         this.clientInstalledProtocols = raftSender::installedProtocols;\n \n         final MessageLogger<MemberId> messageLogger = createMessageLogger( config, life, identityModule.myself() );\n-\n-        RaftOutbound raftOutbound = new RaftOutbound( topologyService, raftSender, clusteringModule.clusterIdentity(),\n+RaftOutbound raftOutbound = new RaftOutbound( topologyService, raftSender, clusteringModule.clusterIdentity(),\n                 logProvider, logThresholdMillis );\n-        Outbound<MemberId,RaftMessages.RaftMessage> loggingOutbound = new LoggingOutbound<>( raftOutbound,\n+Outbound<MemberId,RaftMessages.RaftMessage> loggingOutbound = new LoggingOutbound<>( raftOutbound,\n                 identityModule.myself(), messageLogger );\n-\n-        consensusModule = new ConsensusModule( identityModule.myself(), platformModule, loggingOutbound,\n+consensusModule = new ConsensusModule( identityModule.myself(), platformModule, loggingOutbound,\n                 clusterStateDirectory.get(), topologyService );\n-\n-        dependencies.satisfyDependency( consensusModule.raftMachine() );\n-\n-        replicationModule = new ReplicationModule( identityModule.myself(), platformModule, config, consensusModule,\n+dependencies.satisfyDependency( consensusModule.raftMachine() );\n+replicationModule = new ReplicationModule( identityModule.myself(), platformModule, config, consensusModule,\n                 loggingOutbound, clusterStateDirectory.get(), fileSystem, logProvider );\n-\n-        coreStateMachinesModule = new CoreStateMachinesModule( identityModule.myself(),\n-                platformModule, clusterStateDirectory.get(), config, replicationModule.getReplicator(),\n-                consensusModule.raftMachine(), dependencies, localDatabase );\n-\n-        this.idTypeConfigurationProvider = coreStateMachinesModule.idTypeConfigurationProvider;\n+coreStateMachinesModule = new CoreStateMachinesModule( identityModule.myself(),\n+                platformModule, clusterStateDirectory.get(), config, replicationModule.getReplicator(), consensusModule.raftMachine(), dependencies, localDatabase );\n+this.idTypeConfigurationProvider = coreStateMachinesModule.idTypeConfigurationProvider;\n \n         createIdComponents( platformModule, dependencies, coreStateMachinesModule.idGeneratorFactory );\n         dependencies.satisfyDependency( idGeneratorFactory );\n         dependencies.satisfyDependency( idController );\n-\n-        this.labelTokenHolder = coreStateMachinesModule.labelTokenHolder;\n+this.labelTokenHolder = coreStateMachinesModule.labelTokenHolder;\n         this.propertyKeyTokenHolder = coreStateMachinesModule.propertyKeyTokenHolder;\n         this.relationshipTypeTokenHolder = coreStateMachinesModule.relationshipTypeTokenHolder;\n         this.lockManager = coreStateMachinesModule.lockManager;\n         this.commitProcessFactory = coreStateMachinesModule.commitProcessFactory;\n         this.accessCapability = new LeaderCanWrite( consensusModule.raftMachine() );\n-\n-        InstalledProtocolHandler serverInstalledProtocolHandler = new InstalledProtocolHandler();\n-\n-        this.coreServerModule = new CoreServerModule( identityModule, platformModule, consensusModule, coreStateMachinesModule, clusteringModule,\n-                replicationModule, localDatabase, databaseHealthSupplier, clusterStateDirectory.get(), clientPipelineBuilderFactory,\n-                serverPipelineBuilderFactory, backupServerPipelineBuilderFactory, serverInstalledProtocolHandler );\n-\n-        TypicallyConnectToRandomReadReplicaStrategy defaultStrategy = new TypicallyConnectToRandomReadReplicaStrategy( 2 );\n+InstalledProtocolHandler serverInstalledProtocolHandler = new InstalledProtocolHandler();\n+this.coreServerModule = new CoreServerModule( identityModule, platformModule, consensusModule, coreStateMachinesModule, clusteringModule,\n+                replicationModule, localDatabase, databaseHealthSupplier, clusterStateDirectory.get(), clientPipelineBuilderFactory, serverPipelineBuilderFactory, backupServerPipelineBuilderFactory, serverInstalledProtocolHandler );\n+TypicallyConnectToRandomReadReplicaStrategy defaultStrategy = new TypicallyConnectToRandomReadReplicaStrategy( 2 );\n         defaultStrategy.inject( topologyService, config, logProvider, identityModule.myself() );\n-        UpstreamDatabaseStrategySelector catchupStrategySelector =\n-                createUpstreamDatabaseStrategySelector( identityModule.myself(), config, logProvider, topologyService, defaultStrategy );\n-\n-        CatchupAddressProvider.PrioritisingUpstreamStrategyBasedAddressProvider catchupAddressProvider =\n-                new CatchupAddressProvider.PrioritisingUpstreamStrategyBasedAddressProvider( consensusModule.raftMachine(), topologyService,\n+        UpstreamDatabaseStrategySelector catchupStrategySelector = createUpstreamDatabaseStrategySelector( identityModule.myself(), config, logProvider, topologyService, defaultStrategy );\n+CatchupAddressProvider.PrioritisingUpstreamStrategyBasedAddressProvider catchupAddressProvider = new CatchupAddressProvider.PrioritisingUpstreamStrategyBasedAddressProvider( consensusModule.raftMachine(), topologyService,\n                         catchupStrategySelector );\n-        RaftServerModule.createAndStart( platformModule, consensusModule, identityModule, coreServerModule, localDatabase, serverPipelineBuilderFactory,\n+RaftServerModule.createAndStart( platformModule, consensusModule, identityModule, coreServerModule, localDatabase, serverPipelineBuilderFactory,\n                 messageLogger, catchupAddressProvider, supportedRaftProtocols, supportedModifierProtocols, serverInstalledProtocolHandler );\n-        serverInstalledProtocols = serverInstalledProtocolHandler::installedProtocols;\n+serverInstalledProtocols = serverInstalledProtocolHandler::installedProtocols;\n \n         editionInvariants( platformModule, dependencies, config, logging, life );\n-\n-        dependencies.satisfyDependency( lockManager );\n-\n-        life.add( coreServerModule.membershipWaiterLifecycle );\n+dependencies.satisfyDependency( lockManager );\n+life.add( coreServerModule.membershipWaiterLifecycle );\n     }\n \n     private UpstreamDatabaseStrategySelector createUpstreamDatabaseStrategySelector( MemberId myself, Config config, LogProvider logProvider,\n@@ -364,11 +322,10 @@ public class EnterpriseCoreEditionModule extends EditionModule\n         }\n     }\n \n-    protected ClusteringModule getClusteringModule( PlatformModule platformModule,\n-                                                  DiscoveryServiceFactory discoveryServiceFactory,\n+    protected ClusteringModule getClusteringModule( PlatformModule platformModule, DiscoveryServiceFactory discoveryServiceFactory,\n                                                   ClusterStateDirectory clusterStateDirectory,\n                                                   IdentityModule identityModule, Dependencies dependencies )\n-    {\n+{\n         return new ClusteringModule( discoveryServiceFactory, identityModule.myself(),\n                 platformModule, clusterStateDirectory.get() );\n     }\n@@ -383,18 +340,12 @@ public class EnterpriseCoreEditionModule extends EditionModule\n             IdGeneratorFactory editionIdGeneratorFactory )\n     {\n         super.createIdComponents( platformModule, dependencies, editionIdGeneratorFactory );\n-        this.idGeneratorFactory =\n-                new FreeIdFilteredIdGeneratorFactory( this.idGeneratorFactory, coreStateMachinesModule.freeIdCondition );\n+        this.idGeneratorFactory = new FreeIdFilteredIdGeneratorFactory( this.idGeneratorFactory, coreStateMachinesModule.freeIdCondition );\n     }\n \n     static Predicate<String> fileWatcherFileNameFilter()\n     {\n-        return Predicates.any(\n-                fileName -> fileName.startsWith( TransactionLogFiles.DEFAULT_NAME ),\n-                fileName -> fileName.startsWith( IndexConfigStore.INDEX_DB_FILE_NAME ),\n-                filename -> filename.startsWith( StoreUtil.TEMP_COPY_DIRECTORY_NAME ),\n-                filename -> filename.endsWith( PageCacheWarmer.SUFFIX_CACHEPROF )\n-        );\n+        return Predicates.any( fileName -> fileName.startsWith( TransactionLogFiles.DEFAULT_NAME ), fileName -> fileName.startsWith( IndexConfigStore.INDEX_DB_FILE_NAME ), filename -> filename.startsWith( StoreUtil.TEMP_COPY_DIRECTORY_NAME ), filename -> filename.endsWith( PageCacheWarmer.SUFFIX_CACHEPROF ) );\n     }\n \n     private MessageLogger<MemberId> createMessageLogger( Config config, LifeSupport life, MemberId myself )\n@@ -409,21 +360,18 @@ public class EnterpriseCoreEditionModule extends EditionModule\n         {\n             messageLogger = new NullMessageLogger<>();\n         }\n-        return messageLogger;\n+\n+return messageLogger;\n     }\n \n     private void editionInvariants( PlatformModule platformModule, Dependencies dependencies, Config config,\n             LogService logging, LifeSupport life )\n     {\n         statementLocksFactory = new StatementLocksFactorySelector( lockManager, config, logging ).select();\n-\n-        dependencies.satisfyDependency(\n-                createKernelData( platformModule.fileSystem, platformModule.pageCache, platformModule.storeDir,\n+dependencies.satisfyDependency( createKernelData( platformModule.fileSystem, platformModule.pageCache, platformModule.storeDir,\n                         config, platformModule.graphDatabaseFacade, life ) );\n-\n-        ioLimiter = new ConfigurableIOLimiter( platformModule.config );\n-\n-        headerInformationFactory = createHeaderInformationFactory();\n+ioLimiter = new ConfigurableIOLimiter( platformModule.config );\n+headerInformationFactory = createHeaderInformationFactory();\n \n         schemaWriteGuard = createSchemaWriteGuard();\n \n@@ -431,14 +379,11 @@ public class EnterpriseCoreEditionModule extends EditionModule\n \n         constraintSemantics = new EnterpriseConstraintSemantics();\n \n-        coreAPIAvailabilityGuard =\n-                new CoreAPIAvailabilityGuard( platformModule.availabilityGuard, transactionStartTimeout );\n-\n-        registerRecovery( platformModule.databaseInfo, life, dependencies );\n+        coreAPIAvailabilityGuard = new CoreAPIAvailabilityGuard( platformModule.availabilityGuard, transactionStartTimeout );\n+registerRecovery( platformModule.databaseInfo, life, dependencies );\n \n         publishEditionInfo( dependencies.resolveDependency( UsageData.class ), platformModule.databaseInfo, config );\n-\n-        dependencies.satisfyDependency( createSessionTracker() );\n+dependencies.satisfyDependency( createSessionTracker() );\n     }\n \n     public boolean isLeader()\n@@ -477,8 +422,7 @@ public class EnterpriseCoreEditionModule extends EditionModule\n         return () -> new TransactionHeaderInformation( -1, -1, new byte[0] );\n     }\n \n-    private void registerRecovery( final DatabaseInfo databaseInfo, LifeSupport life,\n-            final DependencyResolver dependencyResolver )\n+    private void registerRecovery( final DatabaseInfo databaseInfo, LifeSupport life, final DependencyResolver dependencyResolver )\n     {\n         life.addLifecycleListener( ( instance, from, to ) ->\n         {\n@@ -505,4 +449,4 @@ public class EnterpriseCoreEditionModule extends EditionModule\n     {\n         coreServerModule.catchupServer().disable();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 110
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
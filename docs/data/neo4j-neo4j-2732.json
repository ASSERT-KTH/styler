{
    "project_name": "neo4j-neo4j",
    "error_id": "2732",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "28",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "28",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2732/AdversarialInputStream.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2732/AdversarialInputStream.java\nindex fe429a93278..e5edb54d754 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2732/AdversarialInputStream.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2732/AdversarialInputStream.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.adversaries.fs;\n \n import java.io.IOException;\n@@ -24,13 +25,13 @@ import java.io.InputStream;\n \n import org.neo4j.adversaries.Adversary;\n \n-@SuppressWarnings( \"unchecked\" )\n+@SuppressWarnings(\"unchecked\")\n public class AdversarialInputStream extends InputStream\n {\n     private final InputStream inputStream;\n     private final Adversary adversary;\n \n-    public AdversarialInputStream( InputStream inputStream, Adversary adversary )\n+    public AdversarialInputStream(InputStream inputStream, Adversary adversary)\n     {\n         this.inputStream = inputStream;\n         this.adversary = adversary;\n@@ -39,67 +40,67 @@ public class AdversarialInputStream extends InputStream\n     @Override\n     public int read() throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n+        adversary.injectFailure(IOException.class);\n         return inputStream.read();\n     }\n \n     @Override\n-    public int read( byte[] b ) throws IOException\n+    public int read(byte[] b) throws IOException\n     {\n-        if ( adversary.injectFailureOrMischief( IOException.class, NullPointerException.class ) )\n+        if (adversary.injectFailureOrMischief(IOException.class, NullPointerException.class))\n         {\n-            byte[] dup = new byte[Math.max( b.length / 2, 1 )];\n-            int read = inputStream.read( dup );\n-            System.arraycopy( dup, 0, b, 0, read );\n+            byte[] dup = new byte[Math.max(b.length / 2, 1)];\n+            int read = inputStream.read(dup);\n+            System.arraycopy(dup, 0, b, 0, read);\n             return read;\n         }\n-        return inputStream.read( b );\n+        return inputStream.read(b);\n     }\n \n     @Override\n-    public int read( byte[] b, int off, int len ) throws IOException\n+    public int read(byte[] b, int off, int len) throws IOException\n     {\n-        if ( adversary.injectFailureOrMischief(\n-                IOException.class, NullPointerException.class, IndexOutOfBoundsException.class ) )\n+        if (adversary.injectFailureOrMischief(\n+          IOException.class, NullPointerException.class, IndexOutOfBoundsException.class))\n         {\n-            int halflen = Math.max( len / 2, 1 );\n-            return inputStream.read( b, off, halflen );\n+            int halflen = Math.max(len / 2, 1);\n+            return inputStream.read(b, off, halflen);\n         }\n-        return inputStream.read( b, off, len );\n+        return inputStream.read(b, off, len);\n     }\n \n     @Override\n-    public long skip( long n ) throws IOException\n+    public long skip(long n) throws IOException\n     {\n-        adversary.injectFailure( IOException.class, NullPointerException.class, IndexOutOfBoundsException.class );\n-        return inputStream.skip( n );\n+        adversary.injectFailure(IOException.class, NullPointerException.class, IndexOutOfBoundsException.class);\n+        return inputStream.skip(n);\n     }\n \n     @Override\n     public int available() throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n+        adversary.injectFailure(IOException.class);\n         return inputStream.available();\n     }\n \n     @Override\n     public void close() throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n+        adversary.injectFailure(IOException.class);\n         inputStream.close();\n     }\n \n     @Override\n-    public void mark( int readlimit )\n+    public void mark(int readlimit)\n     {\n         adversary.injectFailure();\n-        inputStream.mark( readlimit );\n+        inputStream.mark(readlimit);\n     }\n \n     @Override\n     public void reset() throws IOException\n     {\n-        adversary.injectFailure( IOException.class );\n+        adversary.injectFailure(IOException.class);\n         inputStream.reset();\n     }\n \n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
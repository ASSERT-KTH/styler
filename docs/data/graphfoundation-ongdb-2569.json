{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2569",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2569/CountsComputer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2569/CountsComputer.java\nindex df19a8badb2..b93e0810200 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2569/CountsComputer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2569/CountsComputer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import org.neo4j.io.pagecache.PageCache;\n@@ -36,79 +37,78 @@ import static org.neo4j.unsafe.impl.batchimport.staging.ExecutionSupervisors.sup\n public class CountsComputer implements DataInitializer<CountsAccessor.Updater>\n {\n \n-    private final NumberArrayFactory numberArrayFactory;\n+  private final NumberArrayFactory numberArrayFactory;\n \n-    public static void recomputeCounts( NeoStores stores, PageCache pageCache )\n+  public static void recomputeCounts(NeoStores stores, PageCache pageCache)\n+  {\n+    MetaDataStore metaDataStore = stores.getMetaDataStore();\n+    CountsTracker counts = stores.getCounts();\n+    try (CountsAccessor.Updater updater = counts.reset(metaDataStore.getLastCommittedTransactionId()))\n     {\n-        MetaDataStore metaDataStore = stores.getMetaDataStore();\n-        CountsTracker counts = stores.getCounts();\n-        try ( CountsAccessor.Updater updater = counts.reset( metaDataStore.getLastCommittedTransactionId() ) )\n-        {\n-            new CountsComputer( stores, pageCache ).initialize( updater );\n-        }\n+      new CountsComputer(stores, pageCache).initialize(updater);\n     }\n+  }\n \n-    private final NodeStore nodes;\n-    private final RelationshipStore relationships;\n-    private final int highLabelId;\n-    private final int highRelationshipTypeId;\n-    private final long lastCommittedTransactionId;\n-    private final ProgressReporter progressMonitor;\n+  private final NodeStore nodes;\n+  private final RelationshipStore relationships;\n+  private final int highLabelId;\n+  private final int highRelationshipTypeId;\n+  private final long lastCommittedTransactionId;\n+  private final ProgressReporter progressMonitor;\n \n-    public CountsComputer( NeoStores stores, PageCache pageCache )\n-    {\n-        this( stores.getMetaDataStore().getLastCommittedTransactionId(),\n-                stores.getNodeStore(), stores.getRelationshipStore(),\n-                (int) stores.getLabelTokenStore().getHighId(),\n-                (int) stores.getRelationshipTypeTokenStore().getHighId(),\n-                NumberArrayFactory.auto( pageCache, stores.getStoreDir(), true, NumberArrayFactory.NO_MONITOR ) );\n-    }\n+  public CountsComputer(NeoStores stores, PageCache pageCache)\n+  {\n+    this(stores.getMetaDataStore().getLastCommittedTransactionId(),\n+        stores.getNodeStore(), stores.getRelationshipStore(),\n+        (int) stores.getLabelTokenStore().getHighId(),\n+        (int) stores.getRelationshipTypeTokenStore().getHighId(),\n+        NumberArrayFactory.auto(pageCache, stores.getStoreDir(), true, NumberArrayFactory.NO_MONITOR));\n+  }\n \n-    public CountsComputer( long lastCommittedTransactionId, NodeStore nodes, RelationshipStore relationships,\n-            int highLabelId, int highRelationshipTypeId, NumberArrayFactory numberArrayFactory )\n-    {\n-        this( lastCommittedTransactionId, nodes, relationships, highLabelId, highRelationshipTypeId,\n-                numberArrayFactory, SilentProgressReporter.INSTANCE );\n-    }\n+  public CountsComputer(long lastCommittedTransactionId, NodeStore nodes, RelationshipStore relationships,\n+                        int highLabelId, int highRelationshipTypeId, NumberArrayFactory numberArrayFactory)\n+  {\n+    this(lastCommittedTransactionId, nodes, relationships, highLabelId, highRelationshipTypeId,\n+        numberArrayFactory, SilentProgressReporter.INSTANCE);\n+  }\n \n-    public CountsComputer( long lastCommittedTransactionId, NodeStore nodes, RelationshipStore relationships,\n-            int highLabelId, int highRelationshipTypeId, NumberArrayFactory numberArrayFactory, ProgressReporter progressMonitor )\n-    {\n-        this.lastCommittedTransactionId = lastCommittedTransactionId;\n-        this.nodes = nodes;\n-        this.relationships = relationships;\n-        this.highLabelId = highLabelId;\n-        this.highRelationshipTypeId = highRelationshipTypeId;\n-        this.numberArrayFactory = numberArrayFactory;\n-        this.progressMonitor = progressMonitor;\n-    }\n+  public CountsComputer(long lastCommittedTransactionId, NodeStore nodes, RelationshipStore relationships,\n+                        int highLabelId, int highRelationshipTypeId, NumberArrayFactory numberArrayFactory, ProgressReporter progressMonitor)\n+  {\n+    this.lastCommittedTransactionId = lastCommittedTransactionId;\n+    this.nodes = nodes;\n+    this.relationships = relationships;\n+    this.highLabelId = highLabelId;\n+    this.highRelationshipTypeId = highRelationshipTypeId;\n+    this.numberArrayFactory = numberArrayFactory;\n+    this.progressMonitor = progressMonitor;\n+  }\n \n-    @Override\n-    public void initialize( CountsAccessor.Updater countsUpdater )\n+  @Override\n+  public void initialize(CountsAccessor.Updater countsUpdater)\n+  {\n+    progressMonitor.start(nodes.getHighestPossibleIdInUse() + relationships.getHighestPossibleIdInUse());\n+    NodeLabelsCache cache = new NodeLabelsCache(numberArrayFactory, highLabelId);\n+    try\n     {\n-        progressMonitor.start( nodes.getHighestPossibleIdInUse() + relationships.getHighestPossibleIdInUse() );\n-        NodeLabelsCache cache = new NodeLabelsCache( numberArrayFactory, highLabelId );\n-        try\n-        {\n-            // Count nodes\n-            superviseDynamicExecution(\n-                    new NodeCountsStage( Configuration.DEFAULT, cache, nodes, highLabelId, countsUpdater,\n-                            progressMonitor ) );\n-            // Count relationships\n-            superviseDynamicExecution(\n-                    new RelationshipCountsStage( Configuration.DEFAULT, cache, relationships, highLabelId,\n-                            highRelationshipTypeId, countsUpdater, numberArrayFactory, progressMonitor ) );\n-        }\n-        finally\n-        {\n-            cache.close();\n-            progressMonitor.completed();\n-        }\n-    }\n-\n-    @Override\n-    public long initialVersion()\n+      // Count nodes\n+      superviseDynamicExecution(\n+          new NodeCountsStage(Configuration.DEFAULT, cache, nodes, highLabelId, countsUpdater,\n+              progressMonitor));\n+      // Count relationships\n+      superviseDynamicExecution(\n+          new RelationshipCountsStage(Configuration.DEFAULT, cache, relationships, highLabelId,\n+              highRelationshipTypeId, countsUpdater, numberArrayFactory, progressMonitor));\n+    } finally\n     {\n-        return lastCommittedTransactionId;\n+      cache.close();\n+      progressMonitor.completed();\n     }\n+  }\n+\n+  @Override\n+  public long initialVersion()\n+  {\n+    return lastCommittedTransactionId;\n+  }\n }\n",
            "diff_size": 82
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 194).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 228).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2569/CountsComputer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2569/CountsComputer.java\nindex df19a8badb2..58c90087f3f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2569/CountsComputer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2569/CountsComputer.java\n@@ -35,7 +35,6 @@ import static org.neo4j.unsafe.impl.batchimport.staging.ExecutionSupervisors.sup\n \n public class CountsComputer implements DataInitializer<CountsAccessor.Updater>\n {\n-\n     private final NumberArrayFactory numberArrayFactory;\n \n     public static void recomputeCounts( NeoStores stores, PageCache pageCache )\n@@ -57,22 +56,18 @@ public class CountsComputer implements DataInitializer<CountsAccessor.Updater>\n \n     public CountsComputer( NeoStores stores, PageCache pageCache )\n     {\n-        this( stores.getMetaDataStore().getLastCommittedTransactionId(),\n-                stores.getNodeStore(), stores.getRelationshipStore(),\n+        this( stores.getMetaDataStore().getLastCommittedTransactionId(), stores.getNodeStore(), stores.getRelationshipStore(),\n                 (int) stores.getLabelTokenStore().getHighId(),\n-                (int) stores.getRelationshipTypeTokenStore().getHighId(),\n-                NumberArrayFactory.auto( pageCache, stores.getStoreDir(), true, NumberArrayFactory.NO_MONITOR ) );\n+                (int) stores.getRelationshipTypeTokenStore().getHighId(), NumberArrayFactory.auto( pageCache, stores.getStoreDir(), true, NumberArrayFactory.NO_MONITOR ) );\n     }\n \n-    public CountsComputer( long lastCommittedTransactionId, NodeStore nodes, RelationshipStore relationships,\n-            int highLabelId, int highRelationshipTypeId, NumberArrayFactory numberArrayFactory )\n+    public CountsComputer( long lastCommittedTransactionId, NodeStore nodes, RelationshipStore relationships, int highLabelId, int highRelationshipTypeId, NumberArrayFactory numberArrayFactory )\n     {\n         this( lastCommittedTransactionId, nodes, relationships, highLabelId, highRelationshipTypeId,\n                 numberArrayFactory, SilentProgressReporter.INSTANCE );\n     }\n \n-    public CountsComputer( long lastCommittedTransactionId, NodeStore nodes, RelationshipStore relationships,\n-            int highLabelId, int highRelationshipTypeId, NumberArrayFactory numberArrayFactory, ProgressReporter progressMonitor )\n+    public CountsComputer( long lastCommittedTransactionId, NodeStore nodes, RelationshipStore relationships, int highLabelId, int highRelationshipTypeId, NumberArrayFactory numberArrayFactory, ProgressReporter progressMonitor )\n     {\n         this.lastCommittedTransactionId = lastCommittedTransactionId;\n         this.nodes = nodes;\n@@ -91,14 +86,12 @@ public class CountsComputer implements DataInitializer<CountsAccessor.Updater>\n         try\n         {\n             // Count nodes\n-            superviseDynamicExecution(\n-                    new NodeCountsStage( Configuration.DEFAULT, cache, nodes, highLabelId, countsUpdater,\n+            superviseDynamicExecution( new NodeCountsStage( Configuration.DEFAULT, cache, nodes, highLabelId, countsUpdater,\n                             progressMonitor ) );\n-            // Count relationships\n-            superviseDynamicExecution(\n-                    new RelationshipCountsStage( Configuration.DEFAULT, cache, relationships, highLabelId,\n+    // Count relationships\n+            superviseDynamicExecution( new RelationshipCountsStage( Configuration.DEFAULT, cache, relationships, highLabelId,\n                             highRelationshipTypeId, countsUpdater, numberArrayFactory, progressMonitor ) );\n-        }\n+    }\n         finally\n         {\n             cache.close();\n@@ -111,4 +104,4 @@ public class CountsComputer implements DataInitializer<CountsAccessor.Updater>\n     {\n         return lastCommittedTransactionId;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
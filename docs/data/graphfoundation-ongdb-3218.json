{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3218",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3218/MultipleUnderlyingStorageExceptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3218/MultipleUnderlyingStorageExceptions.java\nindex 921c5dcc9af..8f4968989ed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3218/MultipleUnderlyingStorageExceptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3218/MultipleUnderlyingStorageExceptions.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import java.util.Collections;\n@@ -29,30 +30,30 @@ import static java.lang.String.format;\n \n public class MultipleUnderlyingStorageExceptions extends UnderlyingStorageException\n {\n-    public final Set<Pair<SchemaDescriptor, UnderlyingStorageException>> exceptions;\n-\n-    public MultipleUnderlyingStorageExceptions( Set<Pair<SchemaDescriptor, UnderlyingStorageException>> exceptions )\n-    {\n-        super( buildMessage( exceptions ) );\n-        this.exceptions = Collections.unmodifiableSet( exceptions );\n+  public final Set<Pair<SchemaDescriptor, UnderlyingStorageException>> exceptions;\n \n-        for ( Pair<SchemaDescriptor, UnderlyingStorageException> exception : exceptions )\n-        {\n-            this.addSuppressed( exception.other() );\n-        }\n-    }\n+  public MultipleUnderlyingStorageExceptions(Set<Pair<SchemaDescriptor, UnderlyingStorageException>> exceptions)\n+  {\n+    super(buildMessage(exceptions));\n+    this.exceptions = Collections.unmodifiableSet(exceptions);\n \n-    private static String buildMessage( Set<Pair<SchemaDescriptor, UnderlyingStorageException>> exceptions )\n+    for (Pair<SchemaDescriptor, UnderlyingStorageException> exception : exceptions)\n     {\n-        StringBuilder builder = new StringBuilder( );\n-        builder.append(\"Errors when closing (flushing) index updaters:\");\n+      this.addSuppressed(exception.other());\n+    }\n+  }\n \n-        for ( Pair<SchemaDescriptor, UnderlyingStorageException> pair : exceptions )\n-        {\n-            builder.append( format( \" (%s) %s\", pair.first().toString(), pair.other().getMessage() ) );\n-        }\n+  private static String buildMessage(Set<Pair<SchemaDescriptor, UnderlyingStorageException>> exceptions)\n+  {\n+    StringBuilder builder = new StringBuilder();\n+    builder.append(\"Errors when closing (flushing) index updaters:\");\n \n-        return builder.toString();\n+    for (Pair<SchemaDescriptor, UnderlyingStorageException> pair : exceptions)\n+    {\n+      builder.append(format(\" (%s) %s\", pair.first().toString(), pair.other().getMessage()));\n     }\n \n+    return builder.toString();\n+  }\n+\n }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3218/MultipleUnderlyingStorageExceptions.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3218/MultipleUnderlyingStorageExceptions.java\nindex 921c5dcc9af..a6ed467eaf2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3218/MultipleUnderlyingStorageExceptions.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3218/MultipleUnderlyingStorageExceptions.java\n@@ -35,8 +35,7 @@ public class MultipleUnderlyingStorageExceptions extends UnderlyingStorageExcept\n     {\n         super( buildMessage( exceptions ) );\n         this.exceptions = Collections.unmodifiableSet( exceptions );\n-\n-        for ( Pair<SchemaDescriptor, UnderlyingStorageException> exception : exceptions )\n+for ( Pair<SchemaDescriptor,UnderlyingStorageException> exception : exceptions )\n         {\n             this.addSuppressed( exception.other() );\n         }\n@@ -45,14 +44,12 @@ public class MultipleUnderlyingStorageExceptions extends UnderlyingStorageExcept\n     private static String buildMessage( Set<Pair<SchemaDescriptor, UnderlyingStorageException>> exceptions )\n     {\n         StringBuilder builder = new StringBuilder( );\n-        builder.append(\"Errors when closing (flushing) index updaters:\");\n-\n-        for ( Pair<SchemaDescriptor, UnderlyingStorageException> pair : exceptions )\n+        builder.append( \"Errors when closing (flushing) index updaters:\");\n+for ( Pair<SchemaDescriptor,UnderlyingStorageException> pair : exceptions )\n         {\n             builder.append( format( \" (%s) %s\", pair.first().toString(), pair.other().getMessage() ) );\n         }\n \n         return builder.toString();\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
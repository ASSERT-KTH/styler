{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4405",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "114",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4405/VerbosePageCacheTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4405/VerbosePageCacheTracer.java\nindex 04f370864f7..055e952d765 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4405/VerbosePageCacheTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4405/VerbosePageCacheTracer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.monitoring.tracing;\n \n import java.io.File;\n@@ -40,213 +41,212 @@ import static org.neo4j.util.FeatureToggles.getInteger;\n \n public class VerbosePageCacheTracer extends DefaultPageCacheTracer\n {\n-    private static final boolean USE_RAW_REPORTING_UNITS =\n-            flag( VerbosePageCacheTracer.class, \"reportInRawUnits\", false );\n-    private static final int SPEED_REPORTING_TIME_THRESHOLD = getInteger( VerbosePageCacheTracer.class,\n-            \"speedReportingThresholdSeconds\", 10 );\n+  private static final boolean USE_RAW_REPORTING_UNITS =\n+      flag(VerbosePageCacheTracer.class, \"reportInRawUnits\", false);\n+  private static final int SPEED_REPORTING_TIME_THRESHOLD = getInteger(VerbosePageCacheTracer.class,\n+      \"speedReportingThresholdSeconds\", 10);\n+\n+  private final Log log;\n+  private final SystemNanoClock clock;\n+  private final AtomicLong flushedPages = new AtomicLong();\n+  private final AtomicLong flushBytesWritten = new AtomicLong();\n+\n+  VerbosePageCacheTracer(Log log, SystemNanoClock clock)\n+  {\n+    this.log = log;\n+    this.clock = clock;\n+  }\n+\n+  @Override\n+  public void mappedFile(File file)\n+  {\n+    log.info(format(\"Map file: '%s'.\", file.getName()));\n+    super.mappedFile(file);\n+  }\n+\n+  @Override\n+  public void unmappedFile(File file)\n+  {\n+    log.info(format(\"Unmap file: '%s'.\", file.getName()));\n+    super.unmappedFile(file);\n+  }\n+\n+  @Override\n+  public MajorFlushEvent beginCacheFlush()\n+  {\n+    log.info(\"Start whole page cache flush.\");\n+    return new PageCacheMajorFlushEvent(flushedPages.get(), flushBytesWritten.get(), clock.nanos());\n+  }\n+\n+  @Override\n+  public MajorFlushEvent beginFileFlush(PageSwapper swapper)\n+  {\n+    String fileName = swapper.file().getName();\n+    log.info(format(\"Flushing file: '%s'.\", fileName));\n+    return new FileFlushEvent(fileName, flushedPages.get(), flushBytesWritten.get(), clock.nanos());\n+  }\n+\n+  private static String nanosToString(long nanos)\n+  {\n+    if (USE_RAW_REPORTING_UNITS)\n+    {\n+      return nanos + \"ns\";\n+    }\n+    return TimeUtil.nanosToString(nanos);\n+  }\n+\n+  private static String flushSpeed(long bytesWrittenInTotal, long flushTimeNanos)\n+  {\n+    if (USE_RAW_REPORTING_UNITS)\n+    {\n+      return bytesInNanoSeconds(bytesWrittenInTotal, flushTimeNanos);\n+    }\n+    long seconds = TimeUnit.NANOSECONDS.toSeconds(flushTimeNanos);\n+    if (seconds > 0)\n+    {\n+      return bytesToString(bytesWrittenInTotal / seconds) + \"/s\";\n+    } else\n+    {\n+      return bytesInNanoSeconds(bytesWrittenInTotal, flushTimeNanos);\n+    }\n+  }\n+\n+  private static String bytesInNanoSeconds(long bytesWrittenInTotal, long flushTimeNanos)\n+  {\n+    long bytesInNanoSecond = flushTimeNanos > 0 ? (bytesWrittenInTotal / flushTimeNanos) : bytesWrittenInTotal;\n+    return bytesInNanoSecond + \"bytes/ns\";\n+  }\n+\n+  private static String bytesToString(long bytes)\n+  {\n+    if (USE_RAW_REPORTING_UNITS)\n+    {\n+      return bytes + \"bytes\";\n+    }\n+    return ByteUnit.bytesToString(bytes);\n+  }\n+\n+  private final FlushEvent flushEvent = new FlushEvent()\n+  {\n+    @Override\n+    public void addBytesWritten(long bytes)\n+    {\n+      bytesWritten.add(bytes);\n+      flushBytesWritten.getAndAdd(bytes);\n+    }\n+\n+    @Override\n+    public void done()\n+    {\n+      flushes.increment();\n+    }\n \n-    private final Log log;\n-    private final SystemNanoClock clock;\n-    private final AtomicLong flushedPages = new AtomicLong();\n-    private final AtomicLong flushBytesWritten = new AtomicLong();\n+    @Override\n+    public void done(IOException exception)\n+    {\n+      done();\n+    }\n \n-    VerbosePageCacheTracer( Log log, SystemNanoClock clock )\n+    @Override\n+    public void addPagesFlushed(int pageCount)\n     {\n-        this.log = log;\n-        this.clock = clock;\n+      flushedPages.getAndAdd(pageCount);\n+    }\n+  };\n+\n+  private class FileFlushEvent implements MajorFlushEvent\n+  {\n+    private final long startTimeNanos;\n+    private final String fileName;\n+    private long flushesOnStart;\n+    private long bytesWrittenOnStart;\n+\n+    FileFlushEvent(String fileName, long flushesOnStart, long bytesWrittenOnStart, long startTimeNanos)\n+    {\n+      this.fileName = fileName;\n+      this.flushesOnStart = flushesOnStart;\n+      this.bytesWrittenOnStart = bytesWrittenOnStart;\n+      this.startTimeNanos = startTimeNanos;\n     }\n \n     @Override\n-    public void mappedFile( File file )\n+    public FlushEventOpportunity flushEventOpportunity()\n     {\n-        log.info( format( \"Map file: '%s'.\", file.getName() ) );\n-        super.mappedFile( file );\n+      return new VerboseFlushOpportunity(fileName, startTimeNanos, bytesWrittenOnStart);\n     }\n \n     @Override\n-    public void unmappedFile( File file )\n+    public void close()\n     {\n-        log.info( format( \"Unmap file: '%s'.\", file.getName() ) );\n-        super.unmappedFile( file );\n+      long fileFlushNanos = clock.nanos() - startTimeNanos;\n+      long bytesWrittenInTotal = flushBytesWritten.get() - bytesWrittenOnStart;\n+      long flushedPagesInTotal = flushedPages.get() - flushesOnStart;\n+      log.info(\"'%s' flush completed. Flushed %s in %d pages. Flush took: %s. Average speed: %s.\",\n+          fileName,\n+          bytesToString(bytesWrittenInTotal), flushedPagesInTotal,\n+          nanosToString(fileFlushNanos), flushSpeed(bytesWrittenInTotal, fileFlushNanos));\n+    }\n+  }\n+\n+  private class PageCacheMajorFlushEvent implements MajorFlushEvent\n+  {\n+    private final long flushesOnStart;\n+    private final long bytesWrittenOnStart;\n+    private final long startTimeNanos;\n+\n+    PageCacheMajorFlushEvent(long flushesOnStart, long bytesWrittenOnStart, long startTimeNanos)\n+    {\n+      this.flushesOnStart = flushesOnStart;\n+      this.bytesWrittenOnStart = bytesWrittenOnStart;\n+      this.startTimeNanos = startTimeNanos;\n+    }\n+\n+    @Override\n+    public FlushEventOpportunity flushEventOpportunity()\n+    {\n+      return new VerboseFlushOpportunity(\"Page Cache\", startTimeNanos, bytesWrittenOnStart);\n     }\n \n     @Override\n-    public MajorFlushEvent beginCacheFlush()\n+    public void close()\n     {\n-        log.info( \"Start whole page cache flush.\" );\n-        return new PageCacheMajorFlushEvent( flushedPages.get(), flushBytesWritten.get(), clock.nanos() );\n+      long pageCacheFlushNanos = clock.nanos() - startTimeNanos;\n+      long bytesWrittenInTotal = flushBytesWritten.get() - bytesWrittenOnStart;\n+      long flushedPagesInTotal = flushedPages.get() - flushesOnStart;\n+      log.info(\"Page cache flush completed. Flushed %s in %d pages. Flush took: %s. Average speed: %s.\",\n+          bytesToString(bytesWrittenInTotal), flushedPagesInTotal,\n+          nanosToString(pageCacheFlushNanos),\n+          flushSpeed(bytesWrittenInTotal, pageCacheFlushNanos));\n+    }\n+  }\n+\n+  private class VerboseFlushOpportunity implements FlushEventOpportunity\n+  {\n+    private final String fileName;\n+    private long lastReportingTime;\n+    private long lastReportedBytesWritten;\n+\n+    VerboseFlushOpportunity(String fileName, long nanoStartTime, long bytesWrittenOnStart)\n+    {\n+      this.fileName = fileName;\n+      this.lastReportingTime = nanoStartTime;\n+      this.lastReportedBytesWritten = bytesWrittenOnStart;\n     }\n \n     @Override\n-    public MajorFlushEvent beginFileFlush( PageSwapper swapper )\n-    {\n-        String fileName = swapper.file().getName();\n-        log.info( format( \"Flushing file: '%s'.\", fileName ) );\n-        return new FileFlushEvent( fileName, flushedPages.get(), flushBytesWritten.get(), clock.nanos() );\n-    }\n-\n-    private static String nanosToString( long nanos )\n-    {\n-        if ( USE_RAW_REPORTING_UNITS )\n-        {\n-            return nanos + \"ns\";\n-        }\n-        return TimeUtil.nanosToString( nanos );\n-    }\n-\n-    private static String flushSpeed( long bytesWrittenInTotal, long flushTimeNanos )\n-    {\n-        if ( USE_RAW_REPORTING_UNITS )\n-        {\n-            return bytesInNanoSeconds( bytesWrittenInTotal, flushTimeNanos );\n-        }\n-        long seconds = TimeUnit.NANOSECONDS.toSeconds( flushTimeNanos );\n-        if ( seconds > 0 )\n-        {\n-            return bytesToString( bytesWrittenInTotal / seconds ) + \"/s\";\n-        }\n-        else\n-        {\n-            return bytesInNanoSeconds( bytesWrittenInTotal, flushTimeNanos );\n-        }\n-    }\n-\n-    private static String bytesInNanoSeconds( long bytesWrittenInTotal, long flushTimeNanos )\n-    {\n-        long bytesInNanoSecond = flushTimeNanos > 0 ? (bytesWrittenInTotal / flushTimeNanos) : bytesWrittenInTotal;\n-        return bytesInNanoSecond + \"bytes/ns\";\n-    }\n-\n-    private static String bytesToString( long bytes )\n-    {\n-        if ( USE_RAW_REPORTING_UNITS )\n-        {\n-            return bytes + \"bytes\";\n-        }\n-        return ByteUnit.bytesToString( bytes );\n-    }\n-\n-    private final FlushEvent flushEvent = new FlushEvent()\n-    {\n-        @Override\n-        public void addBytesWritten( long bytes )\n-        {\n-            bytesWritten.add( bytes );\n-            flushBytesWritten.getAndAdd( bytes );\n-        }\n-\n-        @Override\n-        public void done()\n-        {\n-            flushes.increment();\n-        }\n-\n-        @Override\n-        public void done( IOException exception )\n-        {\n-            done();\n-        }\n-\n-        @Override\n-        public void addPagesFlushed( int pageCount )\n-        {\n-            flushedPages.getAndAdd( pageCount );\n-        }\n-    };\n-\n-    private class FileFlushEvent implements MajorFlushEvent\n-    {\n-        private final long startTimeNanos;\n-        private final String fileName;\n-        private long flushesOnStart;\n-        private long bytesWrittenOnStart;\n-\n-        FileFlushEvent( String fileName, long flushesOnStart, long bytesWrittenOnStart, long startTimeNanos )\n-        {\n-            this.fileName = fileName;\n-            this.flushesOnStart = flushesOnStart;\n-            this.bytesWrittenOnStart = bytesWrittenOnStart;\n-            this.startTimeNanos = startTimeNanos;\n-        }\n-\n-        @Override\n-        public FlushEventOpportunity flushEventOpportunity()\n-        {\n-            return new VerboseFlushOpportunity( fileName, startTimeNanos, bytesWrittenOnStart );\n-        }\n-\n-        @Override\n-        public void close()\n-        {\n-            long fileFlushNanos = clock.nanos() - startTimeNanos;\n-            long bytesWrittenInTotal = flushBytesWritten.get() - bytesWrittenOnStart;\n-            long flushedPagesInTotal = flushedPages.get() - flushesOnStart;\n-            log.info( \"'%s' flush completed. Flushed %s in %d pages. Flush took: %s. Average speed: %s.\",\n-                    fileName,\n-                    bytesToString( bytesWrittenInTotal ), flushedPagesInTotal,\n-                    nanosToString( fileFlushNanos ), flushSpeed( bytesWrittenInTotal, fileFlushNanos ) );\n-        }\n-    }\n-\n-    private class PageCacheMajorFlushEvent implements MajorFlushEvent\n-    {\n-        private final long flushesOnStart;\n-        private final long bytesWrittenOnStart;\n-        private final long startTimeNanos;\n-\n-        PageCacheMajorFlushEvent( long flushesOnStart, long bytesWrittenOnStart, long startTimeNanos )\n-        {\n-            this.flushesOnStart = flushesOnStart;\n-            this.bytesWrittenOnStart = bytesWrittenOnStart;\n-            this.startTimeNanos = startTimeNanos;\n-        }\n-\n-        @Override\n-        public FlushEventOpportunity flushEventOpportunity()\n-        {\n-            return new VerboseFlushOpportunity( \"Page Cache\", startTimeNanos, bytesWrittenOnStart );\n-        }\n-\n-        @Override\n-        public void close()\n-        {\n-            long pageCacheFlushNanos = clock.nanos() - startTimeNanos;\n-            long bytesWrittenInTotal = flushBytesWritten.get() - bytesWrittenOnStart;\n-            long flushedPagesInTotal = flushedPages.get() - flushesOnStart;\n-            log.info( \"Page cache flush completed. Flushed %s in %d pages. Flush took: %s. Average speed: %s.\",\n-                    bytesToString( bytesWrittenInTotal ), flushedPagesInTotal,\n-                    nanosToString(pageCacheFlushNanos),\n-                    flushSpeed( bytesWrittenInTotal, pageCacheFlushNanos ) );\n-        }\n-    }\n-\n-    private class VerboseFlushOpportunity implements FlushEventOpportunity\n-    {\n-        private final String fileName;\n-        private long lastReportingTime;\n-        private long lastReportedBytesWritten;\n-\n-        VerboseFlushOpportunity( String fileName, long nanoStartTime, long bytesWrittenOnStart )\n-        {\n-            this.fileName = fileName;\n-            this.lastReportingTime = nanoStartTime;\n-            this.lastReportedBytesWritten = bytesWrittenOnStart;\n-        }\n-\n-        @Override\n-        public FlushEvent beginFlush( long filePageId, long cachePageId, PageSwapper swapper )\n-        {\n-            long now = clock.nanos();\n-            long opportunityIntervalNanos = now - lastReportingTime;\n-            if ( TimeUnit.NANOSECONDS.toSeconds( opportunityIntervalNanos ) > SPEED_REPORTING_TIME_THRESHOLD )\n-            {\n-                long writtenBytes = flushBytesWritten.get();\n-                log.info( format(\"'%s' flushing speed: %s.\", fileName,\n-                        flushSpeed( writtenBytes - lastReportedBytesWritten, opportunityIntervalNanos ) ) );\n-                lastReportingTime = now;\n-                lastReportedBytesWritten = writtenBytes;\n-            }\n-            return flushEvent;\n-        }\n+    public FlushEvent beginFlush(long filePageId, long cachePageId, PageSwapper swapper)\n+    {\n+      long now = clock.nanos();\n+      long opportunityIntervalNanos = now - lastReportingTime;\n+      if (TimeUnit.NANOSECONDS.toSeconds(opportunityIntervalNanos) > SPEED_REPORTING_TIME_THRESHOLD)\n+      {\n+        long writtenBytes = flushBytesWritten.get();\n+        log.info(format(\"'%s' flushing speed: %s.\", fileName,\n+            flushSpeed(writtenBytes - lastReportedBytesWritten, opportunityIntervalNanos)));\n+        lastReportingTime = now;\n+        lastReportedBytesWritten = writtenBytes;\n+      }\n+      return flushEvent;\n     }\n+  }\n }\n",
            "diff_size": 348
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "115",
                    "column": "48",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4405/VerbosePageCacheTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4405/VerbosePageCacheTracer.java\nindex 04f370864f7..d572f80941b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4405/VerbosePageCacheTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4405/VerbosePageCacheTracer.java\n@@ -40,12 +40,10 @@ import static org.neo4j.util.FeatureToggles.getInteger;\n \n public class VerbosePageCacheTracer extends DefaultPageCacheTracer\n {\n-    private static final boolean USE_RAW_REPORTING_UNITS =\n-            flag( VerbosePageCacheTracer.class, \"reportInRawUnits\", false );\n-    private static final int SPEED_REPORTING_TIME_THRESHOLD = getInteger( VerbosePageCacheTracer.class,\n-            \"speedReportingThresholdSeconds\", 10 );\n+    private static final boolean USE_RAW_REPORTING_UNITS = flag( VerbosePageCacheTracer.class, \"reportInRawUnits\", false );\n \n-    private final Log log;\n+private static final int SPEED_REPORTING_TIME_THRESHOLD = getInteger( VerbosePageCacheTracer.class, \"speedReportingThresholdSeconds\", 10 );\n+private final Log log;\n     private final SystemNanoClock clock;\n     private final AtomicLong flushedPages = new AtomicLong();\n     private final AtomicLong flushBytesWritten = new AtomicLong();\n@@ -91,7 +89,8 @@ public class VerbosePageCacheTracer extends DefaultPageCacheTracer\n         {\n             return nanos + \"ns\";\n         }\n-        return TimeUtil.nanosToString( nanos );\n+\n+return TimeUtil.nanosToString( nanos );\n     }\n \n     private static String flushSpeed( long bytesWrittenInTotal, long flushTimeNanos )\n@@ -113,7 +112,7 @@ public class VerbosePageCacheTracer extends DefaultPageCacheTracer\n \n     private static String bytesInNanoSeconds( long bytesWrittenInTotal, long flushTimeNanos )\n     {\n-        long bytesInNanoSecond = flushTimeNanos > 0 ? (bytesWrittenInTotal / flushTimeNanos) : bytesWrittenInTotal;\n+        long bytesInNanoSecond = flushTimeNanos> 0 ? ( bytesWrittenInTotal / flushTimeNanos) : bytesWrittenInTotal;\n         return bytesInNanoSecond + \"bytes/ns\";\n     }\n \n@@ -123,7 +122,8 @@ public class VerbosePageCacheTracer extends DefaultPageCacheTracer\n         {\n             return bytes + \"bytes\";\n         }\n-        return ByteUnit.bytesToString( bytes );\n+\n+return ByteUnit.bytesToString( bytes );\n     }\n \n     private final FlushEvent flushEvent = new FlushEvent()\n@@ -182,10 +182,9 @@ public class VerbosePageCacheTracer extends DefaultPageCacheTracer\n             long bytesWrittenInTotal = flushBytesWritten.get() - bytesWrittenOnStart;\n             long flushedPagesInTotal = flushedPages.get() - flushesOnStart;\n             log.info( \"'%s' flush completed. Flushed %s in %d pages. Flush took: %s. Average speed: %s.\",\n-                    fileName,\n-                    bytesToString( bytesWrittenInTotal ), flushedPagesInTotal,\n+                    fileName, bytesToString( bytesWrittenInTotal ), flushedPagesInTotal,\n                     nanosToString( fileFlushNanos ), flushSpeed( bytesWrittenInTotal, fileFlushNanos ) );\n-        }\n+    }\n     }\n \n     private class PageCacheMajorFlushEvent implements MajorFlushEvent\n@@ -214,10 +213,9 @@ public class VerbosePageCacheTracer extends DefaultPageCacheTracer\n             long bytesWrittenInTotal = flushBytesWritten.get() - bytesWrittenOnStart;\n             long flushedPagesInTotal = flushedPages.get() - flushesOnStart;\n             log.info( \"Page cache flush completed. Flushed %s in %d pages. Flush took: %s. Average speed: %s.\",\n-                    bytesToString( bytesWrittenInTotal ), flushedPagesInTotal,\n-                    nanosToString(pageCacheFlushNanos),\n+                    bytesToString( bytesWrittenInTotal ), flushedPagesInTotal, nanosToString(pageCacheFlushNanos),\n                     flushSpeed( bytesWrittenInTotal, pageCacheFlushNanos ) );\n-        }\n+    }\n     }\n \n     private class VerboseFlushOpportunity implements FlushEventOpportunity\n@@ -241,12 +239,13 @@ public class VerbosePageCacheTracer extends DefaultPageCacheTracer\n             if ( TimeUnit.NANOSECONDS.toSeconds( opportunityIntervalNanos ) > SPEED_REPORTING_TIME_THRESHOLD )\n             {\n                 long writtenBytes = flushBytesWritten.get();\n-                log.info( format(\"'%s' flushing speed: %s.\", fileName,\n+                log.info( format( \"'%s' flushing speed: %s.\", fileName,\n                         flushSpeed( writtenBytes - lastReportedBytesWritten, opportunityIntervalNanos ) ) );\n-                lastReportingTime = now;\n+lastReportingTime = now;\n                 lastReportedBytesWritten = writtenBytes;\n             }\n-            return flushEvent;\n+\n+return flushEvent;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Qihoo360-Quicksql",
    "error_id": "100",
    "information": {
        "errors": [
            {
                "line": "17",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.apache.calcite.plan.hep;\n\n/**\n * HepMatchOrder specifies the order of graph traversal when looking for rule",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/100/HepMatchOrder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler/100/HepMatchOrder.java\nindex d98af10a123..1cbcc98d77d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/100/HepMatchOrder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler/100/HepMatchOrder.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.apache.calcite.plan.hep;\r\n \r\n /**\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/100/HepMatchOrder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/intellij/100/HepMatchOrder.java\nindex d98af10a123..e2a2f442e54 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/100/HepMatchOrder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/intellij/100/HepMatchOrder.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.apache.calcite.plan.hep;\r\n \r\n /**\r\n@@ -21,34 +22,34 @@ package org.apache.calcite.plan.hep;\n  * matches.\r\n  */\r\n public enum HepMatchOrder {\r\n-  /**\r\n-   * Match in arbitrary order. This is the default because it is\r\n-   * efficient, and most rules don't care about order.\r\n-   */\r\n-  ARBITRARY,\r\n+    /**\r\n+     * Match in arbitrary order. This is the default because it is\r\n+     * efficient, and most rules don't care about order.\r\n+     */\r\n+    ARBITRARY,\r\n \r\n-  /**\r\n-   * Match from leaves up. A match attempt at a descendant precedes all match\r\n-   * attempts at its ancestors.\r\n-   */\r\n-  BOTTOM_UP,\r\n+    /**\r\n+     * Match from leaves up. A match attempt at a descendant precedes all match\r\n+     * attempts at its ancestors.\r\n+     */\r\n+    BOTTOM_UP,\r\n \r\n-  /**\r\n-   * Match from root down. A match attempt at an ancestor always precedes all\r\n-   * match attempts at its descendants.\r\n-   */\r\n-  TOP_DOWN,\r\n+    /**\r\n+     * Match from root down. A match attempt at an ancestor always precedes all\r\n+     * match attempts at its descendants.\r\n+     */\r\n+    TOP_DOWN,\r\n \r\n-  /**\r\n-   * Match in depth-first order.\r\n-   *\r\n-   * <p>It avoids applying a rule to the previous\r\n-   * {@link org.apache.calcite.rel.RelNode} repeatedly after new vertex is\r\n-   * generated in one rule application. It can therefore be more efficient than\r\n-   * {@link #ARBITRARY} in cases such as\r\n-   * {@link org.apache.calcite.rel.core.Union} with large fan-out.\r\n-   */\r\n-  DEPTH_FIRST\r\n+    /**\r\n+     * Match in depth-first order.\r\n+     *\r\n+     * <p>It avoids applying a rule to the previous\r\n+     * {@link org.apache.calcite.rel.RelNode} repeatedly after new vertex is\r\n+     * generated in one rule application. It can therefore be more efficient than\r\n+     * {@link #ARBITRARY} in cases such as\r\n+     * {@link org.apache.calcite.rel.core.Union} with large fan-out.\r\n+     */\r\n+    DEPTH_FIRST\r\n }\r\n \r\n // End HepMatchOrder.java\r\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 30.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 6, indentation should be the same level as line 35.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 6, indentation should be the same level as line 40.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 6, indentation should be the same level as line 50.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/100/HepMatchOrder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/codebuff/100/HepMatchOrder.java\nindex d98af10a123..49d73e1c23b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/100/HepMatchOrder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/codebuff/100/HepMatchOrder.java\n@@ -19,25 +19,25 @@ package org.apache.calcite.plan.hep;\n /**\r\n  * HepMatchOrder specifies the order of graph traversal when looking for rule\r\n  * matches.\r\n- */\r\n+ */\n+\n+\n public enum HepMatchOrder {\r\n   /**\r\n    * Match in arbitrary order. This is the default because it is\r\n    * efficient, and most rules don't care about order.\r\n-   */\r\n-  ARBITRARY,\r\n+   */\n+    ARBITRARY,\r\n \r\n   /**\r\n    * Match from leaves up. A match attempt at a descendant precedes all match\r\n    * attempts at its ancestors.\r\n-   */\r\n-  BOTTOM_UP,\r\n+   */ BOTTOM_UP,\r\n \r\n   /**\r\n    * Match from root down. A match attempt at an ancestor always precedes all\r\n    * match attempts at its descendants.\r\n-   */\r\n-  TOP_DOWN,\r\n+   */ TOP_DOWN,\r\n \r\n   /**\r\n    * Match in depth-first order.\r\n@@ -47,8 +47,5 @@ public enum HepMatchOrder {\n    * generated in one rule application. It can therefore be more efficient than\r\n    * {@link #ARBITRARY} in cases such as\r\n    * {@link org.apache.calcite.rel.core.Union} with large fan-out.\r\n-   */\r\n-  DEPTH_FIRST\r\n-}\r\n-\r\n-// End HepMatchOrder.java\r\n+   */ DEPTH_FIRST\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/100/HepMatchOrder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_random/100/HepMatchOrder.java\nindex d98af10a123..1cbcc98d77d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/100/HepMatchOrder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_random/100/HepMatchOrder.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.apache.calcite.plan.hep;\r\n \r\n /**\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/100/HepMatchOrder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_three_grams/100/HepMatchOrder.java\nindex d98af10a123..1cbcc98d77d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/100/HepMatchOrder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_three_grams/100/HepMatchOrder.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package org.apache.calcite.plan.hep;\r\n \r\n /**\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
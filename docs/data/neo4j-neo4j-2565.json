{
    "project_name": "neo4j-neo4j",
    "error_id": "2565",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "137",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "160",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2565/HilbertSpaceFillingCurve3D.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2565/HilbertSpaceFillingCurve3D.java\nindex b5342aa2d5f..dba036ab9fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2565/HilbertSpaceFillingCurve3D.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2565/HilbertSpaceFillingCurve3D.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.gis.spatial.index.curves;\n \n import java.util.LinkedHashMap;\n@@ -39,22 +40,22 @@ public class HilbertSpaceFillingCurve3D extends SpaceFillingCurve\n      */\n     static class BinaryCoordinateRotationUtils3D\n     {\n-        static int rotateNPointLeft( int value )\n+        static int rotateNPointLeft(int value)\n         {\n             return (value << 1) & 0b111 | ((value & 0b100) >> 2);\n         }\n \n-        static int rotateNPointRight( int value )\n+        static int rotateNPointRight(int value)\n         {\n             return (value >> 1) | ((value & 0b001) << 2);\n         }\n \n-        static int xXOR( int value )\n+        static int xXOR(int value)\n         {\n             return value ^ 0b100;\n         }\n \n-        static int rotateYZ( int value )\n+        static int rotateYZ(int value)\n         {\n             return value ^ 0b011;\n         }\n@@ -67,14 +68,14 @@ public class HilbertSpaceFillingCurve3D extends SpaceFillingCurve\n     {\n         HilbertCurve3D[] children;\n \n-        private HilbertCurve3D( int... npointValues )\n+        private HilbertCurve3D(int... npointValues)\n         {\n-            super( 3, npointValues );\n+            super(3, npointValues);\n             assert npointValues[0] == 0 || npointValues[0] == 3 || npointValues[0] == 5 || npointValues[0] == 6;\n         }\n \n         @Override\n-        public CurveRule childAt( int npoint )\n+        public CurveRule childAt(int npoint)\n         {\n             return children[npoint];\n         }\n@@ -85,34 +86,34 @@ public class HilbertSpaceFillingCurve3D extends SpaceFillingCurve\n             return name().toString();\n         }\n \n-        private static Direction3D direction( int start, int end )\n+        private static Direction3D direction(int start, int end)\n         {\n             end -= start;\n-            switch ( end )\n+            switch (end)\n             {\n-            case 1:\n-                return FRONT; // move forward 000->001\n-            case 2:\n-                return UP;    // move up      000->010\n-            case 4:\n-                return RIGHT; // move right   000->100\n-            case -4:\n-                return LEFT;  // move left    111->011\n-            case -2:\n-                return DOWN;  // move down    111->101\n-            case -1:\n-                return BACK;  // move back    111->110\n-            default:\n-                throw new IllegalArgumentException( \"Illegal direction: \" + end );\n+                case 1:\n+                    return FRONT; // move forward 000->001\n+                case 2:\n+                    return UP;    // move up      000->010\n+                case 4:\n+                    return RIGHT; // move right   000->100\n+                case -4:\n+                    return LEFT;  // move left    111->011\n+                case -2:\n+                    return DOWN;  // move down    111->101\n+                case -1:\n+                    return BACK;  // move back    111->110\n+                default:\n+                    throw new IllegalArgumentException(\"Illegal direction: \" + end);\n             }\n         }\n \n         SubCurve3D name()\n         {\n             return new SubCurve3D(\n-                    direction( npointValues[0], npointValues[1] ),\n-                    direction( npointValues[1], npointValues[2] ),\n-                    direction( npointValues[0], npointValues[length() - 1] ) );\n+              direction(npointValues[0], npointValues[1]),\n+              direction(npointValues[1], npointValues[2]),\n+              direction(npointValues[0], npointValues[length() - 1]));\n         }\n \n         /**\n@@ -120,21 +121,20 @@ public class HilbertSpaceFillingCurve3D extends SpaceFillingCurve\n          * rotating the bits of all npoint values either left or right depending on the\n          * direction of rotation, normal or reversed (positive or negative).\n          */\n-        private HilbertCurve3D rotateOneThirdDiagonalPos( boolean direction )\n+        private HilbertCurve3D rotateOneThirdDiagonalPos(boolean direction)\n         {\n             int[] newNpoints = new int[length()];\n-            for ( int i = 0; i < length(); i++ )\n+            for (int i = 0; i < length(); i++)\n             {\n-                if ( direction )\n+                if (direction)\n                 {\n-                    newNpoints[i] = BinaryCoordinateRotationUtils3D.rotateNPointRight( npointValues[i] );\n-                }\n-                else\n+                    newNpoints[i] = BinaryCoordinateRotationUtils3D.rotateNPointRight(npointValues[i]);\n+                } else\n                 {\n-                    newNpoints[i] = BinaryCoordinateRotationUtils3D.rotateNPointLeft( npointValues[i] );\n+                    newNpoints[i] = BinaryCoordinateRotationUtils3D.rotateNPointLeft(npointValues[i]);\n                 }\n             }\n-            return new HilbertCurve3D( newNpoints );\n+            return new HilbertCurve3D(newNpoints);\n         }\n \n         /**\n@@ -142,23 +142,22 @@ public class HilbertSpaceFillingCurve3D extends SpaceFillingCurve\n          * normal diagonal rotation, but with x-switched, so we XOR the x value before and after\n          * the rotation, and rotate in the opposite direction to specified.\n          */\n-        private HilbertCurve3D rotateOneThirdDiagonalNeg( boolean direction )\n+        private HilbertCurve3D rotateOneThirdDiagonalNeg(boolean direction)\n         {\n             int[] newNpoints = new int[length()];\n-            for ( int i = 0; i < length(); i++ )\n+            for (int i = 0; i < length(); i++)\n             {\n-                if ( direction )\n+                if (direction)\n                 {\n                     newNpoints[i] = BinaryCoordinateRotationUtils3D.xXOR(\n-                            BinaryCoordinateRotationUtils3D.rotateNPointLeft( BinaryCoordinateRotationUtils3D.xXOR( npointValues[i] ) ) );\n-                }\n-                else\n+                      BinaryCoordinateRotationUtils3D.rotateNPointLeft(BinaryCoordinateRotationUtils3D.xXOR(npointValues[i])));\n+                } else\n                 {\n                     newNpoints[i] = BinaryCoordinateRotationUtils3D.xXOR(\n-                            BinaryCoordinateRotationUtils3D.rotateNPointRight( BinaryCoordinateRotationUtils3D.xXOR( npointValues[i] ) ) );\n+                      BinaryCoordinateRotationUtils3D.rotateNPointRight(BinaryCoordinateRotationUtils3D.xXOR(npointValues[i])));\n                 }\n             }\n-            return new HilbertCurve3D( newNpoints );\n+            return new HilbertCurve3D(newNpoints);\n         }\n \n         /**\n@@ -167,43 +166,43 @@ public class HilbertSpaceFillingCurve3D extends SpaceFillingCurve\n         private HilbertCurve3D rotateAboutX()\n         {\n             int[] newNpoints = new int[length()];\n-            for ( int i = 0; i < length(); i++ )\n+            for (int i = 0; i < length(); i++)\n             {\n-                newNpoints[i] = BinaryCoordinateRotationUtils3D.rotateYZ( npointValues[i] );\n+                newNpoints[i] = BinaryCoordinateRotationUtils3D.rotateYZ(npointValues[i]);\n             }\n-            return new HilbertCurve3D( newNpoints );\n+            return new HilbertCurve3D(newNpoints);\n         }\n \n-        private void buildCurveTree( Map<SubCurve3D,HilbertCurve3D> curves )\n+        private void buildCurveTree(Map<SubCurve3D, HilbertCurve3D> curves)\n         {\n-            if ( children == null )\n+            if (children == null)\n             {\n-                makeChildren( curves );\n-                curves.put( name(), this );\n+                makeChildren(curves);\n+                curves.put(name(), this);\n \n-                for ( HilbertCurve3D child : children )\n+                for (HilbertCurve3D child : children)\n                 {\n-                    child.buildCurveTree( curves );\n+                    child.buildCurveTree(curves);\n                 }\n             }\n         }\n \n-        private void makeChildren( Map<SubCurve3D,HilbertCurve3D> curves )\n+        private void makeChildren(Map<SubCurve3D, HilbertCurve3D> curves)\n         {\n             children = new HilbertCurve3D[length()];\n-            children[0] = singleton( curves, rotateOneThirdDiagonalPos( true ) );\n-            children[1] = singleton( curves, rotateOneThirdDiagonalPos( false ) );\n-            children[2] = singleton( curves, rotateOneThirdDiagonalPos( false ) );\n-            children[3] = singleton( curves, rotateAboutX() );\n-            children[4] = singleton( curves, rotateAboutX() );\n-            children[5] = singleton( curves, rotateOneThirdDiagonalNeg( true ) );\n-            children[6] = singleton( curves, rotateOneThirdDiagonalNeg( true ) );\n-            children[7] = singleton( curves, rotateOneThirdDiagonalNeg( false ) );\n+            children[0] = singleton(curves, rotateOneThirdDiagonalPos(true));\n+            children[1] = singleton(curves, rotateOneThirdDiagonalPos(false));\n+            children[2] = singleton(curves, rotateOneThirdDiagonalPos(false));\n+            children[3] = singleton(curves, rotateAboutX());\n+            children[4] = singleton(curves, rotateAboutX());\n+            children[5] = singleton(curves, rotateOneThirdDiagonalNeg(true));\n+            children[6] = singleton(curves, rotateOneThirdDiagonalNeg(true));\n+            children[7] = singleton(curves, rotateOneThirdDiagonalNeg(false));\n         }\n \n-        private static HilbertCurve3D singleton( Map<SubCurve3D,HilbertCurve3D> curves, HilbertCurve3D newCurve )\n+        private static HilbertCurve3D singleton(Map<SubCurve3D, HilbertCurve3D> curves, HilbertCurve3D newCurve)\n         {\n-            return curves.computeIfAbsent( newCurve.name(), key -> newCurve );\n+            return curves.computeIfAbsent(newCurve.name(), key -> newCurve);\n         }\n     }\n \n@@ -218,7 +217,7 @@ public class HilbertSpaceFillingCurve3D extends SpaceFillingCurve\n         private final Direction3D secondMove;\n         private final Direction3D overallDirection;\n \n-        SubCurve3D( Direction3D firstMove, Direction3D secondMove, Direction3D overallDirection )\n+        SubCurve3D(Direction3D firstMove, Direction3D secondMove, Direction3D overallDirection)\n         {\n             this.firstMove = firstMove;\n             this.secondMove = secondMove;\n@@ -228,13 +227,13 @@ public class HilbertSpaceFillingCurve3D extends SpaceFillingCurve\n         @Override\n         public int hashCode()\n         {\n-            return java.util.Objects.hash( firstMove, secondMove, overallDirection );\n+            return java.util.Objects.hash(firstMove, secondMove, overallDirection);\n         }\n \n         @Override\n-        public boolean equals( Object obj )\n+        public boolean equals(Object obj)\n         {\n-            if ( obj == null || this.getClass() != obj.getClass() )\n+            if (obj == null || this.getClass() != obj.getClass())\n             {\n                 return false;\n             }\n@@ -249,15 +248,15 @@ public class HilbertSpaceFillingCurve3D extends SpaceFillingCurve\n         }\n     }\n \n-    private static final Map<SubCurve3D,HilbertCurve3D> CURVES = new LinkedHashMap<>();\n+    private static final Map<SubCurve3D, HilbertCurve3D> CURVES = new LinkedHashMap<>();\n \n     private static HilbertCurve3D buildTheCurve()\n     {\n         // We start with a UFR curve\n         int[] npointValues = {0b000, 0b010, 0b011, 0b001, 0b101, 0b111, 0b110, 0b100};\n-        HilbertCurve3D theCurve = new HilbertCurve3D( npointValues );\n+        HilbertCurve3D theCurve = new HilbertCurve3D(npointValues);\n \n-        theCurve.buildCurveTree( CURVES );\n+        theCurve.buildCurveTree(CURVES);\n         return theCurve;\n     }\n \n@@ -265,14 +264,14 @@ public class HilbertSpaceFillingCurve3D extends SpaceFillingCurve\n \n     public static final int MAX_LEVEL = 63 / 3 - 1;\n \n-    HilbertSpaceFillingCurve3D( Envelope range )\n+    HilbertSpaceFillingCurve3D(Envelope range)\n     {\n-        this( range, MAX_LEVEL );\n+        this(range, MAX_LEVEL);\n     }\n \n-    public HilbertSpaceFillingCurve3D( Envelope range, int maxLevel )\n+    public HilbertSpaceFillingCurve3D(Envelope range, int maxLevel)\n     {\n-        super( range, maxLevel );\n+        super(range, maxLevel);\n         assert maxLevel <= MAX_LEVEL;\n         assert range.getDimension() == 3;\n     }\n",
            "diff_size": 74
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2565/HilbertSpaceFillingCurve3D.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2565/HilbertSpaceFillingCurve3D.java\nindex b5342aa2d5f..1c9bd7c752b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2565/HilbertSpaceFillingCurve3D.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2565/HilbertSpaceFillingCurve3D.java\n@@ -282,4 +282,4 @@ public class HilbertSpaceFillingCurve3D extends SpaceFillingCurve\n     {\n         return THE_CURVE;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
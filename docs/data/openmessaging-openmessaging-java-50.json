{
    "project_name": "openmessaging-openmessaging-java",
    "error_id": "50",
    "information": {
        "errors": [
            {
                "line": "56",
                "severity": "error",
                "message": "Prohibit invoking System.out.println in source code !",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "                try {\n                    final CallResponse response = helloServiceGen.sayHello(req);\n                    System.out.println(response);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/openmessaging-openmessaging-java/errored/1/50/Consumer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/openmessaging-openmessaging-java/styler/50/Consumer.java\nindex 69ebc7b0883..c74ac01934d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/openmessaging-openmessaging-java/errored/1/50/Consumer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/openmessaging-openmessaging-java/styler/50/Consumer.java\n@@ -52,8 +52,8 @@ public class Consumer {\n                 CallRequest req = new CallRequest();\n                 req.setValue(\"hello \");\n                 try {\n-                    final CallResponse response = helloServiceGen.sayHello(req);\n-                    System.out.println(response);\n+                    final CallResponse response = helloServiceGen.sayHello(req);System\n+                    .out.println(response);\n                 } catch (Exception e) {\n                     e.printStackTrace();\n                 }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Prohibit invoking System.out.println in source code !",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "31",
                    "column": "5",
                    "severity": "error",
                    "message": "'try' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "column": "1",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "column": "1",
                    "severity": "error",
                    "message": "'try' has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Prohibit invoking System.out.println in source code !",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "5",
                    "severity": "error",
                    "message": "'try rcurly' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/openmessaging-openmessaging-java/errored/1/50/Consumer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/openmessaging-openmessaging-java/naturalize/50/Consumer.java\nindex 69ebc7b0883..0e6cf38ab69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/openmessaging-openmessaging-java/errored/1/50/Consumer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/openmessaging-openmessaging-java/naturalize/50/Consumer.java\n@@ -28,8 +28,7 @@ import java.util.concurrent.TimeUnit;\n \n public class Consumer {\n     public static void main(String[] args) throws ExecutionException, InterruptedException {\n-\n-        try {\n+    try {\n             final MessagingAccessPoint messagingAccessPoint = MessagingAccessPointFactory\n                 .getMessagingAccessPoint(\"oms:rocketmq://localhost:10911/us-east:namespace\");\n \n@@ -38,8 +37,7 @@ public class Consumer {\n             messagingAccessPoint.startup();\n \n             serviceEndPoint.startup();\n-\n-            HelloService helloServiceGen = serviceEndPoint.bind(HelloService.class);\n+HelloService helloServiceGen = serviceEndPoint.bind(HelloService.class);\n \n             Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {\n                 public void run() {\n@@ -51,7 +49,8 @@ public class Consumer {\n             for (int i = 0; i < 1000; i++) {\n                 CallRequest req = new CallRequest();\n                 req.setValue(\"hello \");\n-                try {\n+\n+try {\n                     final CallResponse response = helloServiceGen.sayHello(req);\n                     System.out.println(response);\n                 } catch (Exception e) {\n@@ -60,10 +59,8 @@ public class Consumer {\n \n                 TimeUnit.MILLISECONDS.sleep(10);\n             }\n-\n-        } catch (Exception e) {\n+    } catch (Exception e) {\n             e.printStackTrace();\n         }\n-\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Prohibit invoking System.out.println in source code !",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/openmessaging-openmessaging-java/errored/1/50/Consumer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/openmessaging-openmessaging-java/codebuff/50/Consumer.java\nindex 69ebc7b0883..fa295e6bc88 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/openmessaging-openmessaging-java/errored/1/50/Consumer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/openmessaging-openmessaging-java/codebuff/50/Consumer.java\n@@ -28,19 +28,12 @@ import java.util.concurrent.TimeUnit;\n \n public class Consumer {\n     public static void main(String[] args) throws ExecutionException, InterruptedException {\n-\n         try {\n-            final MessagingAccessPoint messagingAccessPoint = MessagingAccessPointFactory\n-                .getMessagingAccessPoint(\"oms:rocketmq://localhost:10911/us-east:namespace\");\n-\n+            final MessagingAccessPoint messagingAccessPoint = MessagingAccessPointFactory.getMessagingAccessPoint(\"oms:rocketmq://localhost:10911/us-east:namespace\");\n             final ServiceEndPoint serviceEndPoint = messagingAccessPoint.createServiceEndPoint();\n-\n             messagingAccessPoint.startup();\n-\n             serviceEndPoint.startup();\n-\n             HelloService helloServiceGen = serviceEndPoint.bind(HelloService.class);\n-\n             Runtime.getRuntime().addShutdownHook(new Thread(new Runnable() {\n                 public void run() {\n                     messagingAccessPoint.shutdown();\n@@ -51,19 +44,17 @@ public class Consumer {\n             for (int i = 0; i < 1000; i++) {\n                 CallRequest req = new CallRequest();\n                 req.setValue(\"hello \");\n+\n                 try {\n                     final CallResponse response = helloServiceGen.sayHello(req);\n                     System.out.println(response);\n                 } catch (Exception e) {\n                     e.printStackTrace();\n                 }\n-\n                 TimeUnit.MILLISECONDS.sleep(10);\n             }\n-\n         } catch (Exception e) {\n             e.printStackTrace();\n         }\n-\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Prohibit invoking System.out.println in source code !",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/openmessaging-openmessaging-java/errored/1/50/Consumer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/openmessaging-openmessaging-java/styler_three_grams/50/Consumer.java\nindex 69ebc7b0883..c74ac01934d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/openmessaging-openmessaging-java/errored/1/50/Consumer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/openmessaging-openmessaging-java/styler_three_grams/50/Consumer.java\n@@ -52,8 +52,8 @@ public class Consumer {\n                 CallRequest req = new CallRequest();\n                 req.setValue(\"hello \");\n                 try {\n-                    final CallResponse response = helloServiceGen.sayHello(req);\n-                    System.out.println(response);\n+                    final CallResponse response = helloServiceGen.sayHello(req);System\n+                    .out.println(response);\n                 } catch (Exception e) {\n                     e.printStackTrace();\n                 }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "969",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "114",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/969/TraversalAStar.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/969/TraversalAStar.java\nindex 039cb4e0f1e..f6c54f36397 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/969/TraversalAStar.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/969/TraversalAStar.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphalgo.impl.path;\n \n import org.neo4j.graphalgo.CostEvaluator;\n@@ -47,7 +48,7 @@ import static org.neo4j.internal.helpers.MathUtil.DEFAULT_EPSILON;\n  * Implementation of A* algorithm, see {@link AStar}, but using the traversal\n  * framework. It's still in an experimental state.\n  */\n-public class TraversalAStar<T>  implements PathFinder<WeightedPath>\n+public class TraversalAStar<T> implements PathFinder<WeightedPath>\n {\n     private final EvaluationContext context;\n     private final CostEvaluator<Double> costEvaluator;\n@@ -58,22 +59,22 @@ public class TraversalAStar<T>  implements PathFinder<WeightedPath>\n     private final EstimateEvaluator<Double> estimateEvaluator;\n     private final boolean stopAfterLowestWeight;\n \n-    @SuppressWarnings( \"unchecked\" )\n-    public TraversalAStar( EvaluationContext context, PathExpander<T> expander,\n-            CostEvaluator<Double> costEvaluator, EstimateEvaluator<Double> estimateEvaluator )\n+    @SuppressWarnings(\"unchecked\")\n+    public TraversalAStar(EvaluationContext context, PathExpander<T> expander,\n+                          CostEvaluator<Double> costEvaluator, EstimateEvaluator<Double> estimateEvaluator)\n     {\n-        this( context, expander, (InitialBranchState<T>)NO_STATE, costEvaluator, estimateEvaluator, true );\n+        this(context, expander, (InitialBranchState<T>) NO_STATE, costEvaluator, estimateEvaluator, true);\n     }\n \n-    public TraversalAStar( EvaluationContext context, PathExpander<T> expander, InitialBranchState<T> initialState,\n-            CostEvaluator<Double> costEvaluator, EstimateEvaluator<Double> estimateEvaluator )\n+    public TraversalAStar(EvaluationContext context, PathExpander<T> expander, InitialBranchState<T> initialState,\n+                          CostEvaluator<Double> costEvaluator, EstimateEvaluator<Double> estimateEvaluator)\n     {\n-        this( context, expander, initialState, costEvaluator, estimateEvaluator, true );\n+        this(context, expander, initialState, costEvaluator, estimateEvaluator, true);\n     }\n \n-    private TraversalAStar( EvaluationContext context, PathExpander<T> expander, InitialBranchState<T> initialState,\n-            CostEvaluator<Double> costEvaluator, EstimateEvaluator<Double> estimateEvaluator,\n-            boolean stopAfterLowestWeight )\n+    private TraversalAStar(EvaluationContext context, PathExpander<T> expander, InitialBranchState<T> initialState,\n+                           CostEvaluator<Double> costEvaluator, EstimateEvaluator<Double> estimateEvaluator,\n+                           boolean stopAfterLowestWeight)\n     {\n         this.context = context;\n         this.costEvaluator = costEvaluator;\n@@ -84,37 +85,36 @@ public class TraversalAStar<T>  implements PathFinder<WeightedPath>\n     }\n \n     @Override\n-    public Iterable<WeightedPath> findAllPaths( Node start, final Node end )\n+    public Iterable<WeightedPath> findAllPaths(Node start, final Node end)\n     {\n-        return Iterables.asIterable( findSinglePath( start, end ) );\n+        return Iterables.asIterable(findSinglePath(start, end));\n     }\n \n     @Override\n-    public WeightedPath findSinglePath( Node start, Node end )\n+    public WeightedPath findSinglePath(Node start, Node end)\n     {\n-        return Iterables.firstOrNull( findPaths( start, end, false ) );\n+        return Iterables.firstOrNull(findPaths(start, end, false));\n     }\n \n-    private Iterable<WeightedPath> findPaths( Node start, Node end, boolean multiplePaths )\n+    private Iterable<WeightedPath> findPaths(Node start, Node end, boolean multiplePaths)\n     {\n         PathInterest<PositionData> interest;\n-        if ( multiplePaths )\n+        if (multiplePaths)\n         {\n-            interest = (PathInterest<PositionData>) (stopAfterLowestWeight ? PathInterestFactory.allShortest() : PathInterestFactory.all() );\n-        }\n-        else\n+            interest = (PathInterest<PositionData>) (stopAfterLowestWeight ? PathInterestFactory.allShortest() : PathInterestFactory.all());\n+        } else\n         {\n             interest = (PathInterest<PositionData>) PathInterestFactory.single();\n         }\n \n-        TraversalDescription traversalDescription = context.transaction().traversalDescription().uniqueness( Uniqueness.NONE )\n-                .expand( expander, initialState );\n+        TraversalDescription traversalDescription = context.transaction().traversalDescription().uniqueness(Uniqueness.NONE)\n+          .expand(expander, initialState);\n \n         lastTraverser = traversalDescription.order(\n-                new SelectorFactory( end, interest ) )\n-                .evaluator( includeWhereEndNodeIs( end ) )\n-                .traverse( start );\n-        return () -> new WeightedPathIterator( lastTraverser.iterator(), costEvaluator, DEFAULT_EPSILON, stopAfterLowestWeight );\n+          new SelectorFactory(end, interest))\n+          .evaluator(includeWhereEndNodeIs(end))\n+          .traverse(start);\n+        return () -> new WeightedPathIterator(lastTraverser.iterator(), costEvaluator, DEFAULT_EPSILON, stopAfterLowestWeight);\n     }\n \n     @Override\n@@ -128,7 +128,7 @@ public class TraversalAStar<T>  implements PathFinder<WeightedPath>\n         private final double wayLengthG;\n         private final double estimateH;\n \n-        PositionData( double wayLengthG, double estimateH )\n+        PositionData(double wayLengthG, double estimateH)\n         {\n             this.wayLengthG = wayLengthG;\n             this.estimateH = estimateH;\n@@ -140,9 +140,9 @@ public class TraversalAStar<T>  implements PathFinder<WeightedPath>\n         }\n \n         @Override\n-        public int compareTo( PositionData o )\n+        public int compareTo(PositionData o)\n         {\n-            return f().compareTo( o.f() );\n+            return f().compareTo(o.f());\n         }\n \n         @Override\n@@ -156,31 +156,31 @@ public class TraversalAStar<T>  implements PathFinder<WeightedPath>\n     {\n         private final Node end;\n \n-        SelectorFactory( Node end, PathInterest<PositionData> interest )\n+        SelectorFactory(Node end, PathInterest<PositionData> interest)\n         {\n-            super( interest );\n+            super(interest);\n             this.end = end;\n         }\n \n         @Override\n-        protected PositionData addPriority( TraversalBranch source,\n-                PositionData currentAggregatedValue, Double value )\n+        protected PositionData addPriority(TraversalBranch source,\n+                                           PositionData currentAggregatedValue, Double value)\n         {\n-            return new PositionData( currentAggregatedValue.wayLengthG + value,\n-                    estimateEvaluator.getCost( source.endNode(), end ) );\n+            return new PositionData(currentAggregatedValue.wayLengthG + value,\n+              estimateEvaluator.getCost(source.endNode(), end));\n         }\n \n         @Override\n-        protected Double calculateValue( TraversalBranch next )\n+        protected Double calculateValue(TraversalBranch next)\n         {\n             return next.length() == 0 ? 0d :\n-                costEvaluator.getCost( next.lastRelationship(), Direction.OUTGOING );\n+              costEvaluator.getCost(next.lastRelationship(), Direction.OUTGOING);\n         }\n \n         @Override\n         protected PositionData getStartData()\n         {\n-            return new PositionData( 0, 0 );\n+            return new PositionData(0, 0);\n         }\n     }\n }\n",
            "diff_size": 39
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
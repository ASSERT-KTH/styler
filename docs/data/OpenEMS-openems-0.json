{
    "project_name": "OpenEMS-openems",
    "error_id": "0",
    "information": {
        "errors": [
            {
                "line": "89",
                "column": "44",
                "severity": "warning",
                "message": "'(' is followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
            }
        ]
    },
    "source_code": "\t@Override\n\tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n\t\treturn new ModbusSlaveTable( //\n\t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n\t\t\t\tModbusSlaveNatureTable.of(KmtronicRelay4Port.class, accessMode, 100)//\n\t\t\t\t\t\t.channel(0, KmtronicRelay4Port.ChannelId.RELAY_1, ModbusType.UINT16) //",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/0/KmtronicRelay4PortImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler/0/KmtronicRelay4PortImpl.java\nindex 9208826c0b8..1002b29db2f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/0/KmtronicRelay4PortImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler/0/KmtronicRelay4PortImpl.java\n@@ -86,7 +86,7 @@ public class KmtronicRelay4PortImpl extends AbstractKmtronicRelay\n \n \t@Override\n \tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n-\t\treturn new ModbusSlaveTable( //\n+\t\treturn new ModbusSlaveTable(//\n \t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n \t\t\t\tModbusSlaveNatureTable.of(KmtronicRelay4Port.class, accessMode, 100)//\n \t\t\t\t\t\t.channel(0, KmtronicRelay4Port.ChannelId.RELAY_1, ModbusType.UINT16) //\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "89",
                    "column": "32",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/0/KmtronicRelay4PortImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/intellij/0/KmtronicRelay4PortImpl.java\nindex 9208826c0b8..6a00c9a0a93 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/0/KmtronicRelay4PortImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/intellij/0/KmtronicRelay4PortImpl.java\n@@ -30,71 +30,71 @@ import io.openems.edge.io.kmtronic.AbstractKmtronicRelay;\n \n @Designate(ocd = Config.class, factory = true)\n @Component(//\n-\t\tname = \"IO.KMtronic.4Port\", //\n-\t\timmediate = true, //\n-\t\tconfigurationPolicy = ConfigurationPolicy.REQUIRE //\n+    name = \"IO.KMtronic.4Port\", //\n+    immediate = true, //\n+    configurationPolicy = ConfigurationPolicy.REQUIRE //\n )\n public class KmtronicRelay4PortImpl extends AbstractKmtronicRelay\n-\t\timplements KmtronicRelay4Port, DigitalOutput, OpenemsComponent, ModbusSlave {\n+    implements KmtronicRelay4Port, DigitalOutput, OpenemsComponent, ModbusSlave {\n \n-\t@Reference\n-\tprotected ConfigurationAdmin cm;\n+  @Reference\n+  protected ConfigurationAdmin cm;\n \n-\t@Reference(policy = ReferencePolicy.STATIC, policyOption = ReferencePolicyOption.GREEDY, cardinality = ReferenceCardinality.MANDATORY)\n-\tprotected void setModbus(BridgeModbus modbus) {\n-\t\tsuper.setModbus(modbus);\n-\t}\n+  @Reference(policy = ReferencePolicy.STATIC, policyOption = ReferencePolicyOption.GREEDY, cardinality = ReferenceCardinality.MANDATORY)\n+  protected void setModbus(BridgeModbus modbus) {\n+    super.setModbus(modbus);\n+  }\n \n-\tpublic KmtronicRelay4PortImpl() {\n-\t\tsuper(KmtronicRelay4Port.ChannelId.values());\n-\t}\n+  public KmtronicRelay4PortImpl() {\n+    super(KmtronicRelay4Port.ChannelId.values());\n+  }\n \n-\t@Activate\n-\tvoid activate(ComponentContext context, Config config) throws OpenemsException {\n-\t\tif (super.activate(context, config.id(), config.alias(), config.enabled(), config.modbusUnitId(), this.cm,\n-\t\t\t\t\"Modbus\", config.modbus_id())) {\n-\t\t\treturn;\n-\t\t}\n-\t}\n+  @Activate\n+  void activate(ComponentContext context, Config config) throws OpenemsException {\n+    if (super.activate(context, config.id(), config.alias(), config.enabled(), config.modbusUnitId(), this.cm,\n+        \"Modbus\", config.modbus_id())) {\n+      return;\n+    }\n+  }\n \n-\t@Deactivate\n-\tprotected void deactivate() {\n-\t\tsuper.deactivate();\n-\t}\n+  @Deactivate\n+  protected void deactivate() {\n+    super.deactivate();\n+  }\n \n-\t@Override\n-\tprotected ModbusProtocol defineModbusProtocol() throws OpenemsException {\n-\t\treturn new ModbusProtocol(this, //\n-\t\t\t\t/*\n-\t\t\t\t * For Read: Read Coils\n-\t\t\t\t */\n-\t\t\t\tnew FC1ReadCoilsTask(0, Priority.LOW, //\n-\t\t\t\t\t\tm(KmtronicRelay4Port.ChannelId.RELAY_1, new CoilElement(0)), //\n-\t\t\t\t\t\tm(KmtronicRelay4Port.ChannelId.RELAY_2, new CoilElement(1)), //\n-\t\t\t\t\t\tm(KmtronicRelay4Port.ChannelId.RELAY_3, new CoilElement(2)), //\n-\t\t\t\t\t\tm(KmtronicRelay4Port.ChannelId.RELAY_4, new CoilElement(3)) //\n-\t\t\t\t),\n-\t\t\t\t/*\n-\t\t\t\t * For Write: Write Single Coil\n-\t\t\t\t */\n-\t\t\t\tnew FC5WriteCoilTask(0, m(KmtronicRelay4Port.ChannelId.RELAY_1, new CoilElement(0))), //\n-\t\t\t\tnew FC5WriteCoilTask(1, m(KmtronicRelay4Port.ChannelId.RELAY_2, new CoilElement(1))), //\n-\t\t\t\tnew FC5WriteCoilTask(2, m(KmtronicRelay4Port.ChannelId.RELAY_3, new CoilElement(2))), //\n-\t\t\t\tnew FC5WriteCoilTask(3, m(KmtronicRelay4Port.ChannelId.RELAY_4, new CoilElement(3))) //\n-\t\t);\n-\t}\n+  @Override\n+  protected ModbusProtocol defineModbusProtocol() throws OpenemsException {\n+    return new ModbusProtocol(this, //\n+        /*\n+         * For Read: Read Coils\n+         */\n+        new FC1ReadCoilsTask(0, Priority.LOW, //\n+            m(KmtronicRelay4Port.ChannelId.RELAY_1, new CoilElement(0)), //\n+            m(KmtronicRelay4Port.ChannelId.RELAY_2, new CoilElement(1)), //\n+            m(KmtronicRelay4Port.ChannelId.RELAY_3, new CoilElement(2)), //\n+            m(KmtronicRelay4Port.ChannelId.RELAY_4, new CoilElement(3)) //\n+        ),\n+        /*\n+         * For Write: Write Single Coil\n+         */\n+        new FC5WriteCoilTask(0, m(KmtronicRelay4Port.ChannelId.RELAY_1, new CoilElement(0))), //\n+        new FC5WriteCoilTask(1, m(KmtronicRelay4Port.ChannelId.RELAY_2, new CoilElement(1))), //\n+        new FC5WriteCoilTask(2, m(KmtronicRelay4Port.ChannelId.RELAY_3, new CoilElement(2))), //\n+        new FC5WriteCoilTask(3, m(KmtronicRelay4Port.ChannelId.RELAY_4, new CoilElement(3))) //\n+    );\n+  }\n \n-\t@Override\n-\tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n-\t\treturn new ModbusSlaveTable( //\n-\t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n-\t\t\t\tModbusSlaveNatureTable.of(KmtronicRelay4Port.class, accessMode, 100)//\n-\t\t\t\t\t\t.channel(0, KmtronicRelay4Port.ChannelId.RELAY_1, ModbusType.UINT16) //\n-\t\t\t\t\t\t.channel(1, KmtronicRelay4Port.ChannelId.RELAY_2, ModbusType.UINT16) //\n-\t\t\t\t\t\t.channel(2, KmtronicRelay4Port.ChannelId.RELAY_3, ModbusType.UINT16) //\n-\t\t\t\t\t\t.channel(3, KmtronicRelay4Port.ChannelId.RELAY_4, ModbusType.UINT16) //\n-\t\t\t\t\t\t.build()//\n-\t\t);\n-\t}\n+  @Override\n+  public ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n+    return new ModbusSlaveTable( //\n+        OpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n+        ModbusSlaveNatureTable.of(KmtronicRelay4Port.class, accessMode, 100)//\n+            .channel(0, KmtronicRelay4Port.ChannelId.RELAY_1, ModbusType.UINT16) //\n+            .channel(1, KmtronicRelay4Port.ChannelId.RELAY_2, ModbusType.UINT16) //\n+            .channel(2, KmtronicRelay4Port.ChannelId.RELAY_3, ModbusType.UINT16) //\n+            .channel(3, KmtronicRelay4Port.ChannelId.RELAY_4, ModbusType.UINT16) //\n+            .build()//\n+    );\n+  }\n \n }\n",
            "diff_size": 57
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/0/KmtronicRelay4PortImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/naturalize/0/KmtronicRelay4PortImpl.java\nindex 9208826c0b8..7e14e3576ac 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/0/KmtronicRelay4PortImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/naturalize/0/KmtronicRelay4PortImpl.java\n@@ -86,7 +86,7 @@ public class KmtronicRelay4PortImpl extends AbstractKmtronicRelay\n \n \t@Override\n \tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n-\t\treturn new ModbusSlaveTable( //\n+\t\treturn new ModbusSlaveTable(//\n \t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n \t\t\t\tModbusSlaveNatureTable.of(KmtronicRelay4Port.class, accessMode, 100)//\n \t\t\t\t\t\t.channel(0, KmtronicRelay4Port.ChannelId.RELAY_1, ModbusType.UINT16) //\n@@ -97,4 +97,4 @@ public class KmtronicRelay4PortImpl extends AbstractKmtronicRelay\n \t\t);\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/0/KmtronicRelay4PortImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler_random/0/KmtronicRelay4PortImpl.java\nindex 9208826c0b8..1002b29db2f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/0/KmtronicRelay4PortImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler_random/0/KmtronicRelay4PortImpl.java\n@@ -86,7 +86,7 @@ public class KmtronicRelay4PortImpl extends AbstractKmtronicRelay\n \n \t@Override\n \tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n-\t\treturn new ModbusSlaveTable( //\n+\t\treturn new ModbusSlaveTable(//\n \t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n \t\t\t\tModbusSlaveNatureTable.of(KmtronicRelay4Port.class, accessMode, 100)//\n \t\t\t\t\t\t.channel(0, KmtronicRelay4Port.ChannelId.RELAY_1, ModbusType.UINT16) //\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/0/KmtronicRelay4PortImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler_three_grams/0/KmtronicRelay4PortImpl.java\nindex 9208826c0b8..1002b29db2f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/errored/1/0/KmtronicRelay4PortImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/OpenEMS-openems/styler_three_grams/0/KmtronicRelay4PortImpl.java\n@@ -86,7 +86,7 @@ public class KmtronicRelay4PortImpl extends AbstractKmtronicRelay\n \n \t@Override\n \tpublic ModbusSlaveTable getModbusSlaveTable(AccessMode accessMode) {\n-\t\treturn new ModbusSlaveTable( //\n+\t\treturn new ModbusSlaveTable(//\n \t\t\t\tOpenemsComponent.getModbusSlaveNatureTable(accessMode), //\n \t\t\t\tModbusSlaveNatureTable.of(KmtronicRelay4Port.class, accessMode, 100)//\n \t\t\t\t\t\t.channel(0, KmtronicRelay4Port.ChannelId.RELAY_1, ModbusType.UINT16) //\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
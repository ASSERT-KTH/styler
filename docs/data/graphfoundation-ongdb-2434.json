{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2434",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "188",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "231",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2434/StandardEnterpriseLoginContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2434/StandardEnterpriseLoginContext.java\nindex 91d51e73f1f..28ca470e805 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2434/StandardEnterpriseLoginContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2434/StandardEnterpriseLoginContext.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.enterprise.auth;\n \n import org.apache.shiro.authz.AuthorizationInfo;\n@@ -39,273 +40,271 @@ import org.neo4j.kernel.enterprise.api.security.EnterpriseSecurityContext;\n \n class StandardEnterpriseLoginContext implements EnterpriseLoginContext\n {\n-    private static final String SCHEMA_READ_WRITE = \"schema:read,write\";\n-    private static final String TOKEN_CREATE = \"token:create\";\n-    private static final String READ_WRITE = \"data:read,write\";\n-    private static final String READ = \"data:read\";\n-\n-    private final MultiRealmAuthManager authManager;\n-    private final ShiroSubject shiroSubject;\n-    private final NeoShiroSubject neoShiroSubject;\n-\n-    StandardEnterpriseLoginContext( MultiRealmAuthManager authManager, ShiroSubject shiroSubject )\n+  private static final String SCHEMA_READ_WRITE = \"schema:read,write\";\n+  private static final String TOKEN_CREATE = \"token:create\";\n+  private static final String READ_WRITE = \"data:read,write\";\n+  private static final String READ = \"data:read\";\n+\n+  private final MultiRealmAuthManager authManager;\n+  private final ShiroSubject shiroSubject;\n+  private final NeoShiroSubject neoShiroSubject;\n+\n+  StandardEnterpriseLoginContext(MultiRealmAuthManager authManager, ShiroSubject shiroSubject)\n+  {\n+    this.authManager = authManager;\n+    this.shiroSubject = shiroSubject;\n+    this.neoShiroSubject = new NeoShiroSubject();\n+  }\n+\n+  private boolean isAdmin()\n+  {\n+    return shiroSubject.isAuthenticated() && shiroSubject.isPermitted(\"*\");\n+  }\n+\n+  @Override\n+  public AuthSubject subject()\n+  {\n+    return neoShiroSubject;\n+  }\n+\n+  private StandardAccessMode mode(Function<String, Integer> tokenLookup)\n+  {\n+    boolean isAuthenticated = shiroSubject.isAuthenticated();\n+    return new StandardAccessMode(\n+        isAuthenticated && shiroSubject.isPermitted(READ),\n+        isAuthenticated && shiroSubject.isPermitted(READ_WRITE),\n+        isAuthenticated && shiroSubject.isPermitted(TOKEN_CREATE),\n+        isAuthenticated && shiroSubject.isPermitted(SCHEMA_READ_WRITE),\n+        shiroSubject.getAuthenticationResult() == AuthenticationResult.PASSWORD_CHANGE_REQUIRED,\n+        queryForRoleNames(),\n+        queryForPropertyPermissions(tokenLookup)\n+    );\n+  }\n+\n+  @Override\n+  public EnterpriseSecurityContext authorize(Function<String, Integer> propertyIdLookup)\n+  {\n+    StandardAccessMode mode = mode(propertyIdLookup);\n+    return new EnterpriseSecurityContext(neoShiroSubject, mode, mode.roles, isAdmin());\n+  }\n+\n+  @Override\n+  public Set<String> roles()\n+  {\n+    return queryForRoleNames();\n+  }\n+\n+  private Set<String> queryForRoleNames()\n+  {\n+    Collection<AuthorizationInfo> authorizationInfo =\n+        authManager.getAuthorizationInfo(shiroSubject.getPrincipals());\n+    return authorizationInfo.stream()\n+        .flatMap(authInfo ->\n+        {\n+          Collection<String> roles = authInfo.getRoles();\n+          return roles == null ? Stream.empty() : roles.stream();\n+        })\n+        .collect(Collectors.toSet());\n+  }\n+\n+  private IntPredicate queryForPropertyPermissions(Function<String, Integer> tokenLookup)\n+  {\n+    return authManager.getPropertyPermissions(roles(), tokenLookup);\n+  }\n+\n+  private static class StandardAccessMode implements AccessMode\n+  {\n+    private final boolean allowsReads;\n+    private final boolean allowsWrites;\n+    private final boolean allowsSchemaWrites;\n+    private final boolean allowsTokenCreates;\n+    private final boolean passwordChangeRequired;\n+    private final Set<String> roles;\n+    private final IntPredicate propertyPermissions;\n+\n+    StandardAccessMode(boolean allowsReads, boolean allowsWrites, boolean allowsTokenCreates, boolean allowsSchemaWrites,\n+                       boolean passwordChangeRequired, Set<String> roles, IntPredicate propertyPermissions)\n     {\n-        this.authManager = authManager;\n-        this.shiroSubject = shiroSubject;\n-        this.neoShiroSubject = new NeoShiroSubject();\n+      this.allowsReads = allowsReads;\n+      this.allowsWrites = allowsWrites;\n+      this.allowsTokenCreates = allowsTokenCreates;\n+      this.allowsSchemaWrites = allowsSchemaWrites;\n+      this.passwordChangeRequired = passwordChangeRequired;\n+      this.roles = roles;\n+      this.propertyPermissions = propertyPermissions;\n     }\n \n-    private boolean isAdmin()\n+    @Override\n+    public boolean allowsReads()\n     {\n-        return shiroSubject.isAuthenticated() && shiroSubject.isPermitted( \"*\" );\n+      return allowsReads;\n     }\n \n     @Override\n-    public AuthSubject subject()\n+    public boolean allowsWrites()\n     {\n-        return neoShiroSubject;\n+      return allowsWrites;\n     }\n \n-    private StandardAccessMode mode( Function<String, Integer> tokenLookup )\n+    @Override\n+    public boolean allowsTokenCreates()\n     {\n-        boolean isAuthenticated = shiroSubject.isAuthenticated();\n-        return new StandardAccessMode(\n-                isAuthenticated && shiroSubject.isPermitted( READ ),\n-                isAuthenticated && shiroSubject.isPermitted( READ_WRITE ),\n-                isAuthenticated && shiroSubject.isPermitted( TOKEN_CREATE ),\n-                isAuthenticated && shiroSubject.isPermitted( SCHEMA_READ_WRITE ),\n-                shiroSubject.getAuthenticationResult() == AuthenticationResult.PASSWORD_CHANGE_REQUIRED,\n-                queryForRoleNames(),\n-                queryForPropertyPermissions( tokenLookup )\n-            );\n+      return allowsTokenCreates;\n     }\n \n     @Override\n-    public EnterpriseSecurityContext authorize( Function<String, Integer> propertyIdLookup )\n+    public boolean allowsSchemaWrites()\n     {\n-        StandardAccessMode mode = mode( propertyIdLookup );\n-        return new EnterpriseSecurityContext( neoShiroSubject, mode, mode.roles, isAdmin() );\n+      return allowsSchemaWrites;\n     }\n \n     @Override\n-    public Set<String> roles()\n+    public boolean allowsPropertyReads(int propertyKey)\n     {\n-        return queryForRoleNames();\n+      return propertyPermissions.test(propertyKey);\n     }\n \n-    private Set<String> queryForRoleNames()\n+    @Override\n+    public boolean allowsProcedureWith(String[] roleNames)\n     {\n-        Collection<AuthorizationInfo> authorizationInfo =\n-                authManager.getAuthorizationInfo( shiroSubject.getPrincipals() );\n-        return authorizationInfo.stream()\n-                .flatMap( authInfo ->\n-                {\n-                    Collection<String> roles = authInfo.getRoles();\n-                    return roles == null ? Stream.empty() : roles.stream();\n-                } )\n-                .collect( Collectors.toSet() );\n+      for (String roleName : roleNames)\n+      {\n+        if (roles.contains(roleName))\n+        {\n+          return true;\n+        }\n+      }\n+      return false;\n     }\n \n-    private IntPredicate queryForPropertyPermissions( Function<String, Integer> tokenLookup )\n+    @Override\n+    public AuthorizationViolationException onViolation(String msg)\n     {\n-        return authManager.getPropertyPermissions( roles(), tokenLookup );\n+      if (passwordChangeRequired)\n+      {\n+        return AccessMode.Static.CREDENTIALS_EXPIRED.onViolation(msg);\n+      } else\n+      {\n+        return new AuthorizationViolationException(msg);\n+      }\n     }\n \n-    private static class StandardAccessMode implements AccessMode\n+    @Override\n+    public String name()\n     {\n-        private final boolean allowsReads;\n-        private final boolean allowsWrites;\n-        private final boolean allowsSchemaWrites;\n-        private final boolean allowsTokenCreates;\n-        private final boolean passwordChangeRequired;\n-        private final Set<String> roles;\n-        private final IntPredicate propertyPermissions;\n-\n-        StandardAccessMode( boolean allowsReads, boolean allowsWrites, boolean allowsTokenCreates, boolean allowsSchemaWrites,\n-                boolean passwordChangeRequired, Set<String> roles, IntPredicate propertyPermissions )\n-        {\n-            this.allowsReads = allowsReads;\n-            this.allowsWrites = allowsWrites;\n-            this.allowsTokenCreates = allowsTokenCreates;\n-            this.allowsSchemaWrites = allowsSchemaWrites;\n-            this.passwordChangeRequired = passwordChangeRequired;\n-            this.roles = roles;\n-            this.propertyPermissions = propertyPermissions;\n-        }\n-\n-        @Override\n-        public boolean allowsReads()\n-        {\n-            return allowsReads;\n-        }\n-\n-        @Override\n-        public boolean allowsWrites()\n-        {\n-            return allowsWrites;\n-        }\n-\n-        @Override\n-        public boolean allowsTokenCreates()\n-        {\n-            return allowsTokenCreates;\n-        }\n-\n-        @Override\n-        public boolean allowsSchemaWrites()\n-        {\n-            return allowsSchemaWrites;\n-        }\n-\n-        @Override\n-        public boolean allowsPropertyReads( int propertyKey )\n-        {\n-            return propertyPermissions.test( propertyKey );\n-        }\n-\n-        @Override\n-        public boolean allowsProcedureWith( String[] roleNames )\n-        {\n-            for ( String roleName : roleNames )\n-            {\n-                if ( roles.contains( roleName ) )\n-                {\n-                    return true;\n-                }\n-            }\n-            return false;\n-        }\n+      Set<String> sortedRoles = new TreeSet<>(roles);\n+      return roles.isEmpty() ? \"no roles\" : \"roles [\" + String.join(\",\", sortedRoles) + \"]\";\n+    }\n+  }\n \n-        @Override\n-        public AuthorizationViolationException onViolation( String msg )\n-        {\n-            if ( passwordChangeRequired )\n-            {\n-                return AccessMode.Static.CREDENTIALS_EXPIRED.onViolation( msg );\n-            }\n-            else\n-            {\n-                return new AuthorizationViolationException( msg );\n-            }\n-        }\n+  class NeoShiroSubject implements AuthSubject\n+  {\n \n-        @Override\n-        public String name()\n-        {\n-            Set<String> sortedRoles = new TreeSet<>( roles );\n-            return roles.isEmpty() ? \"no roles\" : \"roles [\" + String.join( \",\", sortedRoles ) + \"]\";\n-        }\n+    @Override\n+    public String username()\n+    {\n+      Object principal = shiroSubject.getPrincipal();\n+      if (principal != null)\n+      {\n+        return principal.toString();\n+      } else\n+      {\n+        return \"\"; // Should never clash with a valid username\n+      }\n     }\n \n-    class NeoShiroSubject implements AuthSubject\n+    @Override\n+    public void logout()\n     {\n+      shiroSubject.logout();\n+    }\n \n-        @Override\n-        public String username()\n-        {\n-            Object principal = shiroSubject.getPrincipal();\n-            if ( principal != null )\n-            {\n-                return principal.toString();\n-            }\n-            else\n-            {\n-                return \"\"; // Should never clash with a valid username\n-            }\n-        }\n+    @Override\n+    public AuthenticationResult getAuthenticationResult()\n+    {\n+      return shiroSubject.getAuthenticationResult();\n+    }\n \n-        @Override\n-        public void logout()\n-        {\n-            shiroSubject.logout();\n-        }\n+    @Override\n+    public void setPasswordChangeNoLongerRequired()\n+    {\n+      if (getAuthenticationResult() == AuthenticationResult.PASSWORD_CHANGE_REQUIRED)\n+      {\n+        shiroSubject.setAuthenticationResult(AuthenticationResult.SUCCESS);\n+      }\n+    }\n \n-        @Override\n-        public AuthenticationResult getAuthenticationResult()\n-        {\n-            return shiroSubject.getAuthenticationResult();\n-        }\n+    @Override\n+    public boolean hasUsername(String username)\n+    {\n+      Object principal = shiroSubject.getPrincipal();\n+      return principal != null && username != null && username.equals(principal);\n+    }\n \n-        @Override\n-        public void setPasswordChangeNoLongerRequired()\n+    public String getAuthenticationFailureMessage()\n+    {\n+      String message = \"\";\n+      List<Throwable> throwables = shiroSubject.getAuthenticationInfo().getThrowables();\n+      switch (shiroSubject.getAuthenticationResult())\n+      {\n+        case FAILURE:\n         {\n-            if ( getAuthenticationResult() == AuthenticationResult.PASSWORD_CHANGE_REQUIRED )\n-            {\n-                shiroSubject.setAuthenticationResult( AuthenticationResult.SUCCESS );\n-            }\n+          message = buildMessageFromThrowables(\"invalid principal or credentials\", throwables);\n         }\n-\n-        @Override\n-        public boolean hasUsername( String username )\n+        break;\n+        case TOO_MANY_ATTEMPTS:\n         {\n-            Object principal = shiroSubject.getPrincipal();\n-            return principal != null && username != null && username.equals( principal );\n+          message = buildMessageFromThrowables(\"too many failed attempts\", throwables);\n         }\n-\n-        public String getAuthenticationFailureMessage()\n+        break;\n+        case PASSWORD_CHANGE_REQUIRED:\n         {\n-            String message = \"\";\n-            List<Throwable> throwables = shiroSubject.getAuthenticationInfo().getThrowables();\n-            switch ( shiroSubject.getAuthenticationResult() )\n-            {\n-            case FAILURE:\n-                {\n-                    message = buildMessageFromThrowables( \"invalid principal or credentials\", throwables );\n-                }\n-                break;\n-            case TOO_MANY_ATTEMPTS:\n-                {\n-                    message = buildMessageFromThrowables( \"too many failed attempts\", throwables );\n-                }\n-                break;\n-            case PASSWORD_CHANGE_REQUIRED:\n-                {\n-                    message = buildMessageFromThrowables( \"password change required\", throwables );\n-                }\n-                break;\n-            default:\n-            }\n-            return message;\n+          message = buildMessageFromThrowables(\"password change required\", throwables);\n         }\n+        break;\n+        default:\n+      }\n+      return message;\n+    }\n \n-        public void clearAuthenticationInfo()\n-        {\n-            shiroSubject.clearAuthenticationInfo();\n-        }\n+    public void clearAuthenticationInfo()\n+    {\n+      shiroSubject.clearAuthenticationInfo();\n     }\n+  }\n \n-    private static String buildMessageFromThrowables( String baseMessage, List<Throwable> throwables )\n+  private static String buildMessageFromThrowables(String baseMessage, List<Throwable> throwables)\n+  {\n+    if (throwables == null)\n     {\n-        if ( throwables == null )\n-        {\n-            return baseMessage;\n-        }\n+      return baseMessage;\n+    }\n \n-        StringBuilder sb = new StringBuilder( baseMessage );\n+    StringBuilder sb = new StringBuilder(baseMessage);\n \n-        for ( Throwable t : throwables )\n-        {\n-            if ( t.getMessage() != null )\n-            {\n-                sb.append( \" (\" );\n-                sb.append( t.getMessage() );\n-                sb.append( \")\" );\n-            }\n-            Throwable cause = t.getCause();\n-            if ( cause != null && cause.getMessage() != null )\n-            {\n-                sb.append( \" (\" );\n-                sb.append( cause.getMessage() );\n-                sb.append( \")\" );\n-            }\n-            Throwable causeCause = cause != null ? cause.getCause() : null;\n-            if ( causeCause != null && causeCause.getMessage() != null )\n-            {\n-                sb.append( \" (\" );\n-                sb.append( causeCause.getMessage() );\n-                sb.append( \")\" );\n-            }\n-        }\n-        return sb.toString();\n+    for (Throwable t : throwables)\n+    {\n+      if (t.getMessage() != null)\n+      {\n+        sb.append(\" (\");\n+        sb.append(t.getMessage());\n+        sb.append(\")\");\n+      }\n+      Throwable cause = t.getCause();\n+      if (cause != null && cause.getMessage() != null)\n+      {\n+        sb.append(\" (\");\n+        sb.append(cause.getMessage());\n+        sb.append(\")\");\n+      }\n+      Throwable causeCause = cause != null ? cause.getCause() : null;\n+      if (causeCause != null && causeCause.getMessage() != null)\n+      {\n+        sb.append(\" (\");\n+        sb.append(causeCause.getMessage());\n+        sb.append(\")\");\n+      }\n     }\n+    return sb.toString();\n+  }\n }\n",
            "diff_size": 336
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 386).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2434/StandardEnterpriseLoginContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2434/StandardEnterpriseLoginContext.java\nindex 91d51e73f1f..1e272701a3f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2434/StandardEnterpriseLoginContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2434/StandardEnterpriseLoginContext.java\n@@ -43,8 +43,7 @@ class StandardEnterpriseLoginContext implements EnterpriseLoginContext\n     private static final String TOKEN_CREATE = \"token:create\";\n     private static final String READ_WRITE = \"data:read,write\";\n     private static final String READ = \"data:read\";\n-\n-    private final MultiRealmAuthManager authManager;\n+private final MultiRealmAuthManager authManager;\n     private final ShiroSubject shiroSubject;\n     private final NeoShiroSubject neoShiroSubject;\n \n@@ -66,22 +65,15 @@ class StandardEnterpriseLoginContext implements EnterpriseLoginContext\n         return neoShiroSubject;\n     }\n \n-    private StandardAccessMode mode( Function<String, Integer> tokenLookup )\n+    private StandardAccessMode mode( Function<String,Integer> tokenLookup )\n     {\n         boolean isAuthenticated = shiroSubject.isAuthenticated();\n-        return new StandardAccessMode(\n-                isAuthenticated && shiroSubject.isPermitted( READ ),\n-                isAuthenticated && shiroSubject.isPermitted( READ_WRITE ),\n-                isAuthenticated && shiroSubject.isPermitted( TOKEN_CREATE ),\n-                isAuthenticated && shiroSubject.isPermitted( SCHEMA_READ_WRITE ),\n-                shiroSubject.getAuthenticationResult() == AuthenticationResult.PASSWORD_CHANGE_REQUIRED,\n-                queryForRoleNames(),\n-                queryForPropertyPermissions( tokenLookup )\n-            );\n+        return new StandardAccessMode( isAuthenticated && shiroSubject.isPermitted( READ ), isAuthenticated && shiroSubject.isPermitted( READ_WRITE ), isAuthenticated && shiroSubject.isPermitted( TOKEN_CREATE ), isAuthenticated && shiroSubject.isPermitted( SCHEMA_READ_WRITE ), shiroSubject.getAuthenticationResult() == AuthenticationResult.PASSWORD_CHANGE_REQUIRED,queryForRoleNames(),\n+                queryForPropertyPermissions( tokenLookup ) );\n     }\n \n     @Override\n-    public EnterpriseSecurityContext authorize( Function<String, Integer> propertyIdLookup )\n+    public EnterpriseSecurityContext authorize( Function<String,Integer> propertyIdLookup )\n     {\n         StandardAccessMode mode = mode( propertyIdLookup );\n         return new EnterpriseSecurityContext( neoShiroSubject, mode, mode.roles, isAdmin() );\n@@ -95,18 +87,15 @@ class StandardEnterpriseLoginContext implements EnterpriseLoginContext\n \n     private Set<String> queryForRoleNames()\n     {\n-        Collection<AuthorizationInfo> authorizationInfo =\n-                authManager.getAuthorizationInfo( shiroSubject.getPrincipals() );\n-        return authorizationInfo.stream()\n-                .flatMap( authInfo ->\n+        Collection<AuthorizationInfo> authorizationInfo = authManager.getAuthorizationInfo( shiroSubject.getPrincipals() );\n+return authorizationInfo.stream().flatMap( authInfo ->\n                 {\n                     Collection<String> roles = authInfo.getRoles();\n                     return roles == null ? Stream.empty() : roles.stream();\n-                } )\n-                .collect( Collectors.toSet() );\n+                } ).collect( Collectors.toSet() );\n     }\n \n-    private IntPredicate queryForPropertyPermissions( Function<String, Integer> tokenLookup )\n+    private IntPredicate queryForPropertyPermissions( Function<String,Integer> tokenLookup )\n     {\n         return authManager.getPropertyPermissions( roles(), tokenLookup );\n     }\n@@ -199,8 +188,7 @@ class StandardEnterpriseLoginContext implements EnterpriseLoginContext\n \n     class NeoShiroSubject implements AuthSubject\n     {\n-\n-        @Override\n+    @Override\n         public String username()\n         {\n             Object principal = shiroSubject.getPrincipal();\n@@ -282,8 +270,7 @@ class StandardEnterpriseLoginContext implements EnterpriseLoginContext\n         }\n \n         StringBuilder sb = new StringBuilder( baseMessage );\n-\n-        for ( Throwable t : throwables )\n+for ( Throwable t : throwables )\n         {\n             if ( t.getMessage() != null )\n             {\n@@ -291,14 +278,16 @@ class StandardEnterpriseLoginContext implements EnterpriseLoginContext\n                 sb.append( t.getMessage() );\n                 sb.append( \")\" );\n             }\n-            Throwable cause = t.getCause();\n+\n+Throwable cause = t.getCause();\n             if ( cause != null && cause.getMessage() != null )\n             {\n                 sb.append( \" (\" );\n                 sb.append( cause.getMessage() );\n                 sb.append( \")\" );\n             }\n-            Throwable causeCause = cause != null ? cause.getCause() : null;\n+\n+Throwable causeCause = cause != null ? cause.getCause() : null;\n             if ( causeCause != null && causeCause.getMessage() != null )\n             {\n                 sb.append( \" (\" );\n@@ -308,4 +297,4 @@ class StandardEnterpriseLoginContext implements EnterpriseLoginContext\n         }\n         return sb.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "intuit-Tank",
    "error_id": "101",
    "information": {
        "errors": [
            {
                "line": "64",
                "column": "13",
                "severity": "warning",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "            AuditReader reader = AuditReaderFactory.get(getEntityManager());\n            result = reader.find(JobNotification.class, id, revisionNumber);\n            if(result != null) {\n                Hibernate.initialize(result.getLifecycleEvents());\n                result.getLifecycleEvents().contains(JobLifecycleEvent.QUEUE_ADD);\n            }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/101/JobNotificationDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/101/JobNotificationDao.java\nindex fcbc4ce45e9..deac05fd741 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/101/JobNotificationDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/101/JobNotificationDao.java\n@@ -61,7 +61,7 @@ public class JobNotificationDao extends BaseDao<JobNotification> {\n             begin();\n             AuditReader reader = AuditReaderFactory.get(getEntityManager());\n             result = reader.find(JobNotification.class, id, revisionNumber);\n-            if(result != null) {\n+            if (result != null) {\n                 Hibernate.initialize(result.getLifecycleEvents());\n                 result.getLifecycleEvents().contains(JobLifecycleEvent.QUEUE_ADD);\n             }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/101/JobNotificationDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/101/JobNotificationDao.java\nindex fcbc4ce45e9..136fe9b6cbb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/101/JobNotificationDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/101/JobNotificationDao.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.dao;\n \n /*\n@@ -30,49 +31,46 @@ import com.intuit.tank.vm.api.enumerated.JobLifecycleEvent;\n \n /**\n  * JobInstance\n- * \n+ *\n  * @author dangleton\n- * \n  */\n public class JobNotificationDao extends BaseDao<JobNotification> {\n-    private static final Logger LOG = LogManager.getLogger(JobNotificationDao.class);\n+  private static final Logger LOG = LogManager.getLogger(JobNotificationDao.class);\n \n-    /**\n-     * @param entityClass\n-     */\n-    public JobNotificationDao() {\n-        super();\n-    }\n+  /**\n+   * @param entityClass\n+   */\n+  public JobNotificationDao() {\n+    super();\n+  }\n \n-    /**\n-     * gets the entity at the specified revision\n-     * \n-     * @param id\n-     *            the id of the entity to fetch\n-     * @param revisionNumber\n-     *            the revision number\n-     * @return the entity or null if no entity can be found\n-     */\n-    @Nullable\n-    @Override\n-    public JobNotification findRevision(int id, int revisionNumber) {\n-        JobNotification result = null;\n-        try {\n-            begin();\n-            AuditReader reader = AuditReaderFactory.get(getEntityManager());\n-            result = reader.find(JobNotification.class, id, revisionNumber);\n-            if(result != null) {\n-                Hibernate.initialize(result.getLifecycleEvents());\n-                result.getLifecycleEvents().contains(JobLifecycleEvent.QUEUE_ADD);\n-            }\n-            commit();\n-        } catch (NoResultException e) {\n-            rollback();\n-            LOG.warn(\"No result for revision \" + revisionNumber + \" with id of \" + id);\n-        } finally {\n-            cleanup();\n-        }\n-        return result;\n+  /**\n+   * gets the entity at the specified revision\n+   *\n+   * @param id             the id of the entity to fetch\n+   * @param revisionNumber the revision number\n+   * @return the entity or null if no entity can be found\n+   */\n+  @Nullable\n+  @Override\n+  public JobNotification findRevision(int id, int revisionNumber) {\n+    JobNotification result = null;\n+    try {\n+      begin();\n+      AuditReader reader = AuditReaderFactory.get(getEntityManager());\n+      result = reader.find(JobNotification.class, id, revisionNumber);\n+      if (result != null) {\n+        Hibernate.initialize(result.getLifecycleEvents());\n+        result.getLifecycleEvents().contains(JobLifecycleEvent.QUEUE_ADD);\n+      }\n+      commit();\n+    } catch (NoResultException e) {\n+      rollback();\n+      LOG.warn(\"No result for revision \" + revisionNumber + \" with id of \" + id);\n+    } finally {\n+      cleanup();\n     }\n+    return result;\n+  }\n \n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/101/JobNotificationDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/101/JobNotificationDao.java\nindex fcbc4ce45e9..20bcadf3ea0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/101/JobNotificationDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/101/JobNotificationDao.java\n@@ -61,7 +61,7 @@ public class JobNotificationDao extends BaseDao<JobNotification> {\n             begin();\n             AuditReader reader = AuditReaderFactory.get(getEntityManager());\n             result = reader.find(JobNotification.class, id, revisionNumber);\n-            if(result != null) {\n+            if (result != null) {\n                 Hibernate.initialize(result.getLifecycleEvents());\n                 result.getLifecycleEvents().contains(JobLifecycleEvent.QUEUE_ADD);\n             }\n@@ -75,4 +75,4 @@ public class JobNotificationDao extends BaseDao<JobNotification> {\n         return result;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/101/JobNotificationDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/101/JobNotificationDao.java\nindex fcbc4ce45e9..256b6426e25 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/101/JobNotificationDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/101/JobNotificationDao.java\n@@ -16,15 +16,15 @@ package com.intuit.tank.dao;\n  * #L%\n  */\n \n+\n+\n import javax.annotation.Nullable;\n import javax.persistence.NoResultException;\n-\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n import org.hibernate.Hibernate;\n import org.hibernate.envers.AuditReader;\n import org.hibernate.envers.AuditReaderFactory;\n-\n import com.intuit.tank.project.JobNotification;\n import com.intuit.tank.vm.api.enumerated.JobLifecycleEvent;\n \n@@ -34,12 +34,16 @@ import com.intuit.tank.vm.api.enumerated.JobLifecycleEvent;\n  * @author dangleton\n  * \n  */\n+\n+\n public class JobNotificationDao extends BaseDao<JobNotification> {\n+\n     private static final Logger LOG = LogManager.getLogger(JobNotificationDao.class);\n \n     /**\n      * @param entityClass\n      */\n+\n     public JobNotificationDao() {\n         super();\n     }\n@@ -53,6 +57,7 @@ public class JobNotificationDao extends BaseDao<JobNotification> {\n      *            the revision number\n      * @return the entity or null if no entity can be found\n      */\n+\n     @Nullable\n     @Override\n     public JobNotification findRevision(int id, int revisionNumber) {\n@@ -61,7 +66,7 @@ public class JobNotificationDao extends BaseDao<JobNotification> {\n             begin();\n             AuditReader reader = AuditReaderFactory.get(getEntityManager());\n             result = reader.find(JobNotification.class, id, revisionNumber);\n-            if(result != null) {\n+            if (result != null) {\n                 Hibernate.initialize(result.getLifecycleEvents());\n                 result.getLifecycleEvents().contains(JobLifecycleEvent.QUEUE_ADD);\n             }\n@@ -74,5 +79,4 @@ public class JobNotificationDao extends BaseDao<JobNotification> {\n         }\n         return result;\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/101/JobNotificationDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/101/JobNotificationDao.java\nindex fcbc4ce45e9..deac05fd741 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/101/JobNotificationDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/101/JobNotificationDao.java\n@@ -61,7 +61,7 @@ public class JobNotificationDao extends BaseDao<JobNotification> {\n             begin();\n             AuditReader reader = AuditReaderFactory.get(getEntityManager());\n             result = reader.find(JobNotification.class, id, revisionNumber);\n-            if(result != null) {\n+            if (result != null) {\n                 Hibernate.initialize(result.getLifecycleEvents());\n                 result.getLifecycleEvents().contains(JobLifecycleEvent.QUEUE_ADD);\n             }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/101/JobNotificationDao.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/101/JobNotificationDao.java\nindex fcbc4ce45e9..deac05fd741 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/101/JobNotificationDao.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/101/JobNotificationDao.java\n@@ -61,7 +61,7 @@ public class JobNotificationDao extends BaseDao<JobNotification> {\n             begin();\n             AuditReader reader = AuditReaderFactory.get(getEntityManager());\n             result = reader.find(JobNotification.class, id, revisionNumber);\n-            if(result != null) {\n+            if (result != null) {\n                 Hibernate.initialize(result.getLifecycleEvents());\n                 result.getLifecycleEvents().contains(JobLifecycleEvent.QUEUE_ADD);\n             }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
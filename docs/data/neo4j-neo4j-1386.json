{
    "project_name": "neo4j-neo4j",
    "error_id": "1386",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "71",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "93",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "183",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1386/TentativeConstraintIndexProxy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1386/TentativeConstraintIndexProxy.java\nindex 3dec65b633a..ae56beaa05e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1386/TentativeConstraintIndexProxy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1386/TentativeConstraintIndexProxy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index;\n \n import java.io.IOException;\n@@ -49,7 +50,7 @@ import org.neo4j.storageengine.api.NodePropertyAccessor;\n  * <li>In T: Sit and wait for the index to be built</li>\n  * <li>In T: Create the constraint rule and connect the two</li>\n  * </ol>\n- *\n+ * <p>\n  * The fully populated index flips to a tentative index. The reason for that is to guard for incoming transactions\n  * that gets applied.\n  * Such incoming transactions have potentially been verified on another instance with a slightly dated view\n@@ -67,7 +68,7 @@ public class TentativeConstraintIndexProxy extends AbstractDelegatingIndexProxy\n     private final Collection<IndexEntryConflictException> failures = new CopyOnWriteArrayList<>();\n     private TokenNameLookup tokenNameLookup;\n \n-    TentativeConstraintIndexProxy( FlippableIndexProxy flipper, OnlineIndexProxy target, TokenNameLookup tokenNameLookup )\n+    TentativeConstraintIndexProxy(FlippableIndexProxy flipper, OnlineIndexProxy target, TokenNameLookup tokenNameLookup)\n     {\n         this.flipper = flipper;\n         this.target = target;\n@@ -75,24 +76,23 @@ public class TentativeConstraintIndexProxy extends AbstractDelegatingIndexProxy\n     }\n \n     @Override\n-    public IndexUpdater newUpdater( IndexUpdateMode mode, PageCursorTracer cursorTracer )\n+    public IndexUpdater newUpdater(IndexUpdateMode mode, PageCursorTracer cursorTracer)\n     {\n-        switch ( mode )\n+        switch (mode)\n         {\n             case ONLINE:\n-                return new DelegatingIndexUpdater( new DeferredConflictCheckingIndexUpdater(\n-                        target.accessor.newUpdater( mode, cursorTracer ), target::newReader, target.getDescriptor(), cursorTracer ) )\n+                return new DelegatingIndexUpdater(new DeferredConflictCheckingIndexUpdater(\n+                  target.accessor.newUpdater(mode, cursorTracer), target::newReader, target.getDescriptor(), cursorTracer))\n                 {\n                     @Override\n-                    public void process( IndexEntryUpdate<?> update )\n+                    public void process(IndexEntryUpdate<?> update)\n                     {\n                         try\n                         {\n-                            delegate.process( update );\n-                        }\n-                        catch ( IndexEntryConflictException conflict )\n+                            delegate.process(update);\n+                        } catch (IndexEntryConflictException conflict)\n                         {\n-                            failures.add( conflict );\n+                            failures.add(conflict);\n                         }\n                     }\n \n@@ -102,19 +102,18 @@ public class TentativeConstraintIndexProxy extends AbstractDelegatingIndexProxy\n                         try\n                         {\n                             delegate.close();\n-                        }\n-                        catch ( IndexEntryConflictException conflict )\n+                        } catch (IndexEntryConflictException conflict)\n                         {\n-                            failures.add( conflict );\n+                            failures.add(conflict);\n                         }\n                     }\n                 };\n \n             case RECOVERY:\n-                return super.newUpdater( mode, cursorTracer );\n+                return super.newUpdater(mode, cursorTracer);\n \n             default:\n-                throw new IllegalArgumentException( \"Unsupported update mode: \" + mode );\n+                throw new IllegalArgumentException(\"Unsupported update mode: \" + mode);\n \n         }\n     }\n@@ -134,7 +133,7 @@ public class TentativeConstraintIndexProxy extends AbstractDelegatingIndexProxy\n     @Override\n     public IndexReader newReader() throws IndexNotFoundKernelException\n     {\n-        throw new IndexNotFoundKernelException( getDescriptor() + \" is still populating\" );\n+        throw new IndexNotFoundKernelException(getDescriptor() + \" is still populating\");\n     }\n \n     @Override\n@@ -144,45 +143,44 @@ public class TentativeConstraintIndexProxy extends AbstractDelegatingIndexProxy\n     }\n \n     @Override\n-    public void verifyDeferredConstraints( NodePropertyAccessor accessor ) throws IndexEntryConflictException, IOException\n+    public void verifyDeferredConstraints(NodePropertyAccessor accessor) throws IndexEntryConflictException, IOException\n     {\n         // If we've seen constraint violation failures in here when updates came in then fail immediately with those\n-        if ( !failures.isEmpty() )\n+        if (!failures.isEmpty())\n         {\n             Iterator<IndexEntryConflictException> failureIterator = failures.iterator();\n             IndexEntryConflictException conflict = failureIterator.next();\n-            failureIterator.forEachRemaining( conflict::addSuppressed );\n+            failureIterator.forEachRemaining(conflict::addSuppressed);\n             throw conflict;\n         }\n \n         // Otherwise consolidate the usual verification\n-        super.verifyDeferredConstraints( accessor );\n+        super.verifyDeferredConstraints(accessor);\n     }\n \n     @Override\n     public void validate() throws UniquePropertyValueValidationException\n     {\n-        if ( !failures.isEmpty() )\n+        if (!failures.isEmpty())\n         {\n             SchemaDescriptor descriptor = getDescriptor().schema();\n             throw new UniquePropertyValueValidationException(\n-                    ConstraintDescriptorFactory.uniqueForSchema( descriptor ),\n-                    ConstraintValidationException.Phase.VERIFICATION,\n-                    new HashSet<>( failures ), tokenNameLookup );\n+              ConstraintDescriptorFactory.uniqueForSchema(descriptor),\n+              ConstraintValidationException.Phase.VERIFICATION,\n+              new HashSet<>(failures), tokenNameLookup);\n         }\n     }\n \n     @Override\n     public void activate()\n     {\n-        if ( failures.isEmpty() )\n+        if (failures.isEmpty())\n         {\n-            flipper.flipTo( target );\n-        }\n-        else\n+            flipper.flipTo(target);\n+        } else\n         {\n             throw new IllegalStateException(\n-                    \"Trying to activate failed index, should have checked the failures earlier...\" );\n+              \"Trying to activate failed index, should have checked the failures earlier...\");\n         }\n     }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2459",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "95",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2459/OnlineBackupCommandProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2459/OnlineBackupCommandProvider.java\nindex e8c27e57765..921df7f9e37 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2459/OnlineBackupCommandProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2459/OnlineBackupCommandProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.backup.impl;\n \n import java.nio.file.Path;\n@@ -38,70 +39,70 @@ import static org.neo4j.backup.impl.BackupSupportingClassesFactoryProvider.getPr\n \n public class OnlineBackupCommandProvider extends AdminCommand.Provider\n {\n-    public OnlineBackupCommandProvider()\n-    {\n-        super( \"backup\" );\n-    }\n+  public OnlineBackupCommandProvider()\n+  {\n+    super(\"backup\");\n+  }\n \n-    @Override\n-    @Nonnull\n-    public Arguments allArguments()\n-    {\n-        return OnlineBackupContextBuilder.arguments();\n-    }\n+  @Override\n+  @Nonnull\n+  public Arguments allArguments()\n+  {\n+    return OnlineBackupContextBuilder.arguments();\n+  }\n \n-    @Override\n-    @Nonnull\n-    public String description()\n-    {\n-        return format( \"Perform an online backup from a running Neo4j enterprise server. Neo4j's backup service must \" +\n-                \"have been configured on the server beforehand.%n\" +\n-                \"%n\" +\n-                \"All consistency checks except 'cc-graph' can be quite expensive so it may be useful to turn them off\" +\n-                \" for very large databases. Increasing the heap size can also be a good idea.\" +\n-                \" See 'neo4j-admin help' for details.%n\" +\n-                \"%n\" +\n-                \"For more information see: https://neo4j.com/docs/operations-manual/current/backup/\" );\n-    }\n+  @Override\n+  @Nonnull\n+  public String description()\n+  {\n+    return format(\"Perform an online backup from a running Neo4j enterprise server. Neo4j's backup service must \" +\n+        \"have been configured on the server beforehand.%n\" +\n+        \"%n\" +\n+        \"All consistency checks except 'cc-graph' can be quite expensive so it may be useful to turn them off\" +\n+        \" for very large databases. Increasing the heap size can also be a good idea.\" +\n+        \" See 'neo4j-admin help' for details.%n\" +\n+        \"%n\" +\n+        \"For more information see: https://neo4j.com/docs/operations-manual/current/backup/\");\n+  }\n \n-    @Override\n-    @Nonnull\n-    public String summary()\n-    {\n-        return \"Perform an online backup from a running Neo4j enterprise server.\";\n-    }\n+  @Override\n+  @Nonnull\n+  public String summary()\n+  {\n+    return \"Perform an online backup from a running Neo4j enterprise server.\";\n+  }\n \n-    @Override\n-    @Nonnull\n-    public AdminCommandSection commandSection()\n-    {\n-        return OnlineBackupCommandSection.instance();\n-    }\n+  @Override\n+  @Nonnull\n+  public AdminCommandSection commandSection()\n+  {\n+    return OnlineBackupCommandSection.instance();\n+  }\n \n-    @Override\n-    @Nonnull\n-    public AdminCommand create( Path homeDir, Path configDir, OutsideWorld outsideWorld )\n-    {\n-        boolean debug = System.getenv().get( \"NEO4J_DEBUG\") != null;\n-        LogProvider logProvider = FormattedLogProvider.withDefaultLogLevel( debug ? Level.DEBUG : Level.NONE ).toOutputStream( outsideWorld.outStream() );\n-        Monitors monitors = new Monitors();\n+  @Override\n+  @Nonnull\n+  public AdminCommand create(Path homeDir, Path configDir, OutsideWorld outsideWorld)\n+  {\n+    boolean debug = System.getenv().get(\"NEO4J_DEBUG\") != null;\n+    LogProvider logProvider = FormattedLogProvider.withDefaultLogLevel(debug ? Level.DEBUG : Level.NONE).toOutputStream(outsideWorld.outStream());\n+    Monitors monitors = new Monitors();\n \n-        OnlineBackupContextBuilder contextBuilder = new OnlineBackupContextBuilder( homeDir, configDir );\n-        BackupModule backupModule = new BackupModule( outsideWorld, logProvider, monitors );\n+    OnlineBackupContextBuilder contextBuilder = new OnlineBackupContextBuilder(homeDir, configDir);\n+    BackupModule backupModule = new BackupModule(outsideWorld, logProvider, monitors);\n \n-        BackupSupportingClassesFactoryProvider classesFactoryProvider =\n-                getProvidersByPriority().findFirst().orElseThrow( noProviderException() );\n-        BackupSupportingClassesFactory supportingClassesFactory =\n-                classesFactoryProvider.getFactory( backupModule );\n-        BackupStrategyCoordinatorFactory coordinatorFactory = new BackupStrategyCoordinatorFactory( backupModule );\n+    BackupSupportingClassesFactoryProvider classesFactoryProvider =\n+        getProvidersByPriority().findFirst().orElseThrow(noProviderException());\n+    BackupSupportingClassesFactory supportingClassesFactory =\n+        classesFactoryProvider.getFactory(backupModule);\n+    BackupStrategyCoordinatorFactory coordinatorFactory = new BackupStrategyCoordinatorFactory(backupModule);\n \n-        return new OnlineBackupCommand(\n-                outsideWorld, contextBuilder, supportingClassesFactory, coordinatorFactory );\n-    }\n+    return new OnlineBackupCommand(\n+        outsideWorld, contextBuilder, supportingClassesFactory, coordinatorFactory);\n+  }\n \n-    private static Supplier<IllegalStateException> noProviderException()\n-    {\n-        return () -> new IllegalStateException(\n-                \"Unable to find a suitable backup supporting classes provider in the classpath\" );\n-    }\n+  private static Supplier<IllegalStateException> noProviderException()\n+  {\n+    return () -> new IllegalStateException(\n+        \"Unable to find a suitable backup supporting classes provider in the classpath\");\n+  }\n }\n",
            "diff_size": 58
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2459/OnlineBackupCommandProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2459/OnlineBackupCommandProvider.java\nindex e8c27e57765..bc9bf8ff818 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2459/OnlineBackupCommandProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2459/OnlineBackupCommandProvider.java\n@@ -54,14 +54,7 @@ public class OnlineBackupCommandProvider extends AdminCommand.Provider\n     @Nonnull\n     public String description()\n     {\n-        return format( \"Perform an online backup from a running Neo4j enterprise server. Neo4j's backup service must \" +\n-                \"have been configured on the server beforehand.%n\" +\n-                \"%n\" +\n-                \"All consistency checks except 'cc-graph' can be quite expensive so it may be useful to turn them off\" +\n-                \" for very large databases. Increasing the heap size can also be a good idea.\" +\n-                \" See 'neo4j-admin help' for details.%n\" +\n-                \"%n\" +\n-                \"For more information see: https://neo4j.com/docs/operations-manual/current/backup/\" );\n+        return format( \"Perform an online backup from a running Neo4j enterprise server. Neo4j's backup service must \" + \"have been configured on the server beforehand.%n\" + \"%n\" + \"All consistency checks except 'cc-graph' can be quite expensive so it may be useful to turn them off\" + \" for very large databases. Increasing the heap size can also be a good idea.\" + \" See 'neo4j-admin help' for details.%n\" + \"%n\" + \"For more information see: https://neo4j.com/docs/operations-manual/current/backup/\" );\n     }\n \n     @Override\n@@ -85,23 +78,16 @@ public class OnlineBackupCommandProvider extends AdminCommand.Provider\n         boolean debug = System.getenv().get( \"NEO4J_DEBUG\") != null;\n         LogProvider logProvider = FormattedLogProvider.withDefaultLogLevel( debug ? Level.DEBUG : Level.NONE ).toOutputStream( outsideWorld.outStream() );\n         Monitors monitors = new Monitors();\n-\n-        OnlineBackupContextBuilder contextBuilder = new OnlineBackupContextBuilder( homeDir, configDir );\n+OnlineBackupContextBuilder contextBuilder = new OnlineBackupContextBuilder( homeDir, configDir );\n         BackupModule backupModule = new BackupModule( outsideWorld, logProvider, monitors );\n-\n-        BackupSupportingClassesFactoryProvider classesFactoryProvider =\n-                getProvidersByPriority().findFirst().orElseThrow( noProviderException() );\n-        BackupSupportingClassesFactory supportingClassesFactory =\n-                classesFactoryProvider.getFactory( backupModule );\n-        BackupStrategyCoordinatorFactory coordinatorFactory = new BackupStrategyCoordinatorFactory( backupModule );\n-\n-        return new OnlineBackupCommand(\n-                outsideWorld, contextBuilder, supportingClassesFactory, coordinatorFactory );\n+BackupSupportingClassesFactoryProvider classesFactoryProvider = getProvidersByPriority().findFirst().orElseThrow( noProviderException() );\n+BackupSupportingClassesFactory supportingClassesFactory = classesFactoryProvider.getFactory( backupModule );\n+BackupStrategyCoordinatorFactory coordinatorFactory = new BackupStrategyCoordinatorFactory( backupModule );\n+return new OnlineBackupCommand( outsideWorld, contextBuilder, supportingClassesFactory, coordinatorFactory );\n     }\n \n     private static Supplier<IllegalStateException> noProviderException()\n     {\n-        return () -> new IllegalStateException(\n-                \"Unable to find a suitable backup supporting classes provider in the classpath\" );\n+        return () -> new IllegalStateException( \"Unable to find a suitable backup supporting classes provider in the classpath\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
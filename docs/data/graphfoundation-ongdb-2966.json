{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2966",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "94",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "127",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "136",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "220",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "262",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "265",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2966/Neo4jPackV2.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2966/Neo4jPackV2.java\nindex 228c7f857c3..6b371e44055 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2966/Neo4jPackV2.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2966/Neo4jPackV2.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.v2.messaging;\n \n import java.io.IOException;\n@@ -60,298 +61,293 @@ import static org.neo4j.values.storable.Values.pointValue;\n \n public class Neo4jPackV2 extends Neo4jPackV1\n {\n-    public static final long VERSION = 2;\n+  public static final long VERSION = 2;\n \n-    public static final byte POINT_2D = 'X';\n-    public static final int POINT_2D_SIZE = 3;\n+  public static final byte POINT_2D = 'X';\n+  public static final int POINT_2D_SIZE = 3;\n \n-    public static final byte POINT_3D = 'Y';\n-    public static final int POINT_3D_SIZE = 4;\n+  public static final byte POINT_3D = 'Y';\n+  public static final int POINT_3D_SIZE = 4;\n \n-    public static final byte DATE = 'D';\n-    public static final int DATE_SIZE = 1;\n+  public static final byte DATE = 'D';\n+  public static final int DATE_SIZE = 1;\n \n-    public static final byte TIME = 'T';\n-    public static final int TIME_SIZE = 2;\n+  public static final byte TIME = 'T';\n+  public static final int TIME_SIZE = 2;\n \n-    public static final byte LOCAL_TIME = 't';\n-    public static final int LOCAL_TIME_SIZE = 1;\n+  public static final byte LOCAL_TIME = 't';\n+  public static final int LOCAL_TIME_SIZE = 1;\n \n-    public static final byte LOCAL_DATE_TIME = 'd';\n-    public static final int LOCAL_DATE_TIME_SIZE = 2;\n+  public static final byte LOCAL_DATE_TIME = 'd';\n+  public static final int LOCAL_DATE_TIME_SIZE = 2;\n \n-    public static final byte DATE_TIME_WITH_ZONE_OFFSET = 'F';\n-    public static final int DATE_TIME_WITH_ZONE_OFFSET_SIZE = 3;\n+  public static final byte DATE_TIME_WITH_ZONE_OFFSET = 'F';\n+  public static final int DATE_TIME_WITH_ZONE_OFFSET_SIZE = 3;\n \n-    public static final byte DATE_TIME_WITH_ZONE_NAME = 'f';\n-    public static final int DATE_TIME_WITH_ZONE_NAME_SIZE = 3;\n+  public static final byte DATE_TIME_WITH_ZONE_NAME = 'f';\n+  public static final int DATE_TIME_WITH_ZONE_NAME_SIZE = 3;\n \n-    public static final byte DURATION = 'E';\n-    public static final int DURATION_SIZE = 4;\n+  public static final byte DURATION = 'E';\n+  public static final int DURATION_SIZE = 4;\n \n-    @Override\n-    public Neo4jPack.Packer newPacker( PackOutput output )\n+  @Override\n+  public Neo4jPack.Packer newPacker(PackOutput output)\n+  {\n+    return new PackerV2(output);\n+  }\n+\n+  @Override\n+  public Neo4jPack.Unpacker newUnpacker(PackInput input)\n+  {\n+    return new UnpackerV2(input);\n+  }\n+\n+  @Override\n+  public long version()\n+  {\n+    return VERSION;\n+  }\n+\n+  private static class PackerV2 extends Neo4jPackV1.PackerV1\n+  {\n+    PackerV2(PackOutput output)\n     {\n-        return new PackerV2( output );\n+      super(output);\n     }\n \n     @Override\n-    public Neo4jPack.Unpacker newUnpacker( PackInput input )\n+    public void writePoint(CoordinateReferenceSystem crs, double[] coordinate) throws IOException\n     {\n-        return new UnpackerV2( input );\n+      if (coordinate.length == 2)\n+      {\n+        packStructHeader(POINT_2D_SIZE, POINT_2D);\n+        pack(crs.getCode());\n+        pack(coordinate[0]);\n+        pack(coordinate[1]);\n+      } else if (coordinate.length == 3)\n+      {\n+        packStructHeader(POINT_3D_SIZE, POINT_3D);\n+        pack(crs.getCode());\n+        pack(coordinate[0]);\n+        pack(coordinate[1]);\n+        pack(coordinate[2]);\n+      } else\n+      {\n+        throw new IllegalArgumentException(\"Point with 2D or 3D coordinate expected, \" +\n+            \"got crs=\" + crs + \", coordinate=\" + Arrays.toString(coordinate));\n+      }\n     }\n \n     @Override\n-    public long version()\n+    public void writeDuration(long months, long days, long seconds, int nanos) throws IOException\n     {\n-        return VERSION;\n+      packStructHeader(DURATION_SIZE, DURATION);\n+      pack(months);\n+      pack(days);\n+      pack(seconds);\n+      pack(nanos);\n     }\n \n-    private static class PackerV2 extends Neo4jPackV1.PackerV1\n+    @Override\n+    public void writeDate(LocalDate localDate) throws IOException\n     {\n-        PackerV2( PackOutput output )\n-        {\n-            super( output );\n-        }\n-\n-        @Override\n-        public void writePoint( CoordinateReferenceSystem crs, double[] coordinate ) throws IOException\n-        {\n-            if ( coordinate.length == 2 )\n-            {\n-                packStructHeader( POINT_2D_SIZE, POINT_2D );\n-                pack( crs.getCode() );\n-                pack( coordinate[0] );\n-                pack( coordinate[1] );\n-            }\n-            else if ( coordinate.length == 3 )\n-            {\n-                packStructHeader( POINT_3D_SIZE, POINT_3D );\n-                pack( crs.getCode() );\n-                pack( coordinate[0] );\n-                pack( coordinate[1] );\n-                pack( coordinate[2] );\n-            }\n-            else\n-            {\n-                throw new IllegalArgumentException( \"Point with 2D or 3D coordinate expected, \" +\n-                                                    \"got crs=\" + crs + \", coordinate=\" + Arrays.toString( coordinate ) );\n-            }\n-        }\n+      long epochDay = localDate.toEpochDay();\n \n-        @Override\n-        public void writeDuration( long months, long days, long seconds, int nanos ) throws IOException\n-        {\n-            packStructHeader( DURATION_SIZE, DURATION );\n-            pack( months );\n-            pack( days );\n-            pack( seconds );\n-            pack( nanos );\n-        }\n-\n-        @Override\n-        public void writeDate( LocalDate localDate ) throws IOException\n-        {\n-            long epochDay = localDate.toEpochDay();\n+      packStructHeader(DATE_SIZE, DATE);\n+      pack(epochDay);\n+    }\n \n-            packStructHeader( DATE_SIZE, DATE );\n-            pack( epochDay );\n-        }\n+    @Override\n+    public void writeLocalTime(LocalTime localTime) throws IOException\n+    {\n+      long nanoOfDay = localTime.toNanoOfDay();\n \n-        @Override\n-        public void writeLocalTime( LocalTime localTime ) throws IOException\n-        {\n-            long nanoOfDay = localTime.toNanoOfDay();\n+      packStructHeader(LOCAL_TIME_SIZE, LOCAL_TIME);\n+      pack(nanoOfDay);\n+    }\n \n-            packStructHeader( LOCAL_TIME_SIZE, LOCAL_TIME );\n-            pack( nanoOfDay );\n-        }\n+    @Override\n+    public void writeTime(OffsetTime offsetTime) throws IOException\n+    {\n+      long nanosOfDayLocal = offsetTime.toLocalTime().toNanoOfDay();\n+      int offsetSeconds = offsetTime.getOffset().getTotalSeconds();\n \n-        @Override\n-        public void writeTime( OffsetTime offsetTime ) throws IOException\n-        {\n-            long nanosOfDayLocal = offsetTime.toLocalTime().toNanoOfDay();\n-            int offsetSeconds = offsetTime.getOffset().getTotalSeconds();\n+      packStructHeader(TIME_SIZE, TIME);\n+      pack(nanosOfDayLocal);\n+      pack(offsetSeconds);\n+    }\n \n-            packStructHeader( TIME_SIZE, TIME );\n-            pack( nanosOfDayLocal );\n-            pack( offsetSeconds );\n-        }\n+    @Override\n+    public void writeLocalDateTime(LocalDateTime localDateTime) throws IOException\n+    {\n+      long epochSecond = localDateTime.toEpochSecond(UTC);\n+      int nano = localDateTime.getNano();\n \n-        @Override\n-        public void writeLocalDateTime( LocalDateTime localDateTime ) throws IOException\n-        {\n-            long epochSecond = localDateTime.toEpochSecond( UTC );\n-            int nano = localDateTime.getNano();\n+      packStructHeader(LOCAL_DATE_TIME_SIZE, LOCAL_DATE_TIME);\n+      pack(epochSecond);\n+      pack(nano);\n+    }\n \n-            packStructHeader( LOCAL_DATE_TIME_SIZE, LOCAL_DATE_TIME );\n-            pack( epochSecond );\n-            pack( nano );\n-        }\n+    @Override\n+    public void writeDateTime(ZonedDateTime zonedDateTime) throws IOException\n+    {\n+      long epochSecondLocal = zonedDateTime.toLocalDateTime().toEpochSecond(UTC);\n+      int nano = zonedDateTime.getNano();\n+\n+      ZoneId zone = zonedDateTime.getZone();\n+      if (zone instanceof ZoneOffset)\n+      {\n+        int offsetSeconds = ((ZoneOffset) zone).getTotalSeconds();\n+\n+        packStructHeader(DATE_TIME_WITH_ZONE_OFFSET_SIZE, DATE_TIME_WITH_ZONE_OFFSET);\n+        pack(epochSecondLocal);\n+        pack(nano);\n+        pack(offsetSeconds);\n+      } else\n+      {\n+        String zoneId = zone.getId();\n+\n+        packStructHeader(DATE_TIME_WITH_ZONE_NAME_SIZE, DATE_TIME_WITH_ZONE_NAME);\n+        pack(epochSecondLocal);\n+        pack(nano);\n+        pack(zoneId);\n+      }\n+    }\n+  }\n \n-        @Override\n-        public void writeDateTime( ZonedDateTime zonedDateTime ) throws IOException\n-        {\n-            long epochSecondLocal = zonedDateTime.toLocalDateTime().toEpochSecond( UTC );\n-            int nano = zonedDateTime.getNano();\n-\n-            ZoneId zone = zonedDateTime.getZone();\n-            if ( zone instanceof ZoneOffset )\n-            {\n-                int offsetSeconds = ((ZoneOffset) zone).getTotalSeconds();\n-\n-                packStructHeader( DATE_TIME_WITH_ZONE_OFFSET_SIZE, DATE_TIME_WITH_ZONE_OFFSET );\n-                pack( epochSecondLocal );\n-                pack( nano );\n-                pack( offsetSeconds );\n-            }\n-            else\n-            {\n-                String zoneId = zone.getId();\n-\n-                packStructHeader( DATE_TIME_WITH_ZONE_NAME_SIZE, DATE_TIME_WITH_ZONE_NAME );\n-                pack( epochSecondLocal );\n-                pack( nano );\n-                pack( zoneId );\n-            }\n-        }\n+  private static class UnpackerV2 extends Neo4jPackV1.UnpackerV1\n+  {\n+    UnpackerV2(PackInput input)\n+    {\n+      super(input);\n     }\n \n-    private static class UnpackerV2 extends Neo4jPackV1.UnpackerV1\n+    @Override\n+    protected AnyValue unpackStruct(char signature, long size) throws IOException\n     {\n-        UnpackerV2( PackInput input )\n+      try\n+      {\n+        switch (signature)\n         {\n-            super( input );\n+          case POINT_2D:\n+            ensureCorrectStructSize(StructType.POINT_2D, POINT_2D_SIZE, size);\n+            return unpackPoint2D();\n+          case POINT_3D:\n+            ensureCorrectStructSize(StructType.POINT_3D, POINT_3D_SIZE, size);\n+            return unpackPoint3D();\n+          case DURATION:\n+            ensureCorrectStructSize(StructType.DURATION, DURATION_SIZE, size);\n+            return unpackDuration();\n+          case DATE:\n+            ensureCorrectStructSize(StructType.DATE, DATE_SIZE, size);\n+            return unpackDate();\n+          case LOCAL_TIME:\n+            ensureCorrectStructSize(StructType.LOCAL_TIME, LOCAL_TIME_SIZE, size);\n+            return unpackLocalTime();\n+          case TIME:\n+            ensureCorrectStructSize(StructType.TIME, TIME_SIZE, size);\n+            return unpackTime();\n+          case LOCAL_DATE_TIME:\n+            ensureCorrectStructSize(StructType.LOCAL_DATE_TIME, LOCAL_DATE_TIME_SIZE, size);\n+            return unpackLocalDateTime();\n+          case DATE_TIME_WITH_ZONE_OFFSET:\n+            ensureCorrectStructSize(StructType.DATE_TIME_WITH_ZONE_OFFSET, DATE_TIME_WITH_ZONE_OFFSET_SIZE, size);\n+            return unpackDateTimeWithZoneOffset();\n+          case DATE_TIME_WITH_ZONE_NAME:\n+            ensureCorrectStructSize(StructType.DATE_TIME_WITH_ZONE_NAME, DATE_TIME_WITH_ZONE_NAME_SIZE, size);\n+            return unpackDateTimeWithZoneName();\n+          default:\n+            return super.unpackStruct(signature, size);\n         }\n-\n-        @Override\n-        protected AnyValue unpackStruct( char signature, long size ) throws IOException\n+      } catch (PackStream.PackStreamException | BoltIOException ex)\n+      {\n+        throw ex;\n+      } catch (Throwable ex)\n+      {\n+        StructType type = StructType.valueOf(signature);\n+        if (type != null)\n         {\n-            try\n-            {\n-                switch ( signature )\n-                {\n-                case POINT_2D:\n-                    ensureCorrectStructSize( StructType.POINT_2D, POINT_2D_SIZE, size );\n-                    return unpackPoint2D();\n-                case POINT_3D:\n-                    ensureCorrectStructSize( StructType.POINT_3D, POINT_3D_SIZE, size );\n-                    return unpackPoint3D();\n-                case DURATION:\n-                    ensureCorrectStructSize( StructType.DURATION, DURATION_SIZE, size );\n-                    return unpackDuration();\n-                case DATE:\n-                    ensureCorrectStructSize( StructType.DATE, DATE_SIZE, size );\n-                    return unpackDate();\n-                case LOCAL_TIME:\n-                    ensureCorrectStructSize( StructType.LOCAL_TIME, LOCAL_TIME_SIZE, size );\n-                    return unpackLocalTime();\n-                case TIME:\n-                    ensureCorrectStructSize( StructType.TIME, TIME_SIZE, size );\n-                    return unpackTime();\n-                case LOCAL_DATE_TIME:\n-                    ensureCorrectStructSize( StructType.LOCAL_DATE_TIME, LOCAL_DATE_TIME_SIZE, size );\n-                    return unpackLocalDateTime();\n-                case DATE_TIME_WITH_ZONE_OFFSET:\n-                    ensureCorrectStructSize( StructType.DATE_TIME_WITH_ZONE_OFFSET, DATE_TIME_WITH_ZONE_OFFSET_SIZE, size );\n-                    return unpackDateTimeWithZoneOffset();\n-                case DATE_TIME_WITH_ZONE_NAME:\n-                    ensureCorrectStructSize( StructType.DATE_TIME_WITH_ZONE_NAME, DATE_TIME_WITH_ZONE_NAME_SIZE, size );\n-                    return unpackDateTimeWithZoneName();\n-                default:\n-                    return super.unpackStruct( signature, size );\n-                }\n-            }\n-            catch ( PackStream.PackStreamException | BoltIOException ex )\n-            {\n-                throw ex;\n-            }\n-            catch ( Throwable ex )\n-            {\n-                StructType type = StructType.valueOf( signature );\n-                if ( type != null )\n-                {\n-                    throw new BoltIOException( Status.Statement.TypeError,\n-                            String.format( \"Unable to construct %s value: `%s`\", type.description(), ex.getMessage() ), ex );\n-                }\n-\n-                throw ex;\n-            }\n+          throw new BoltIOException(Status.Statement.TypeError,\n+              String.format(\"Unable to construct %s value: `%s`\", type.description(), ex.getMessage()), ex);\n         }\n \n-        private PointValue unpackPoint2D() throws IOException\n-        {\n+        throw ex;\n+      }\n+    }\n \n-            int crsCode = unpackInteger();\n-            CoordinateReferenceSystem crs = CoordinateReferenceSystem.get( crsCode );\n-            double[] coordinates = {unpackDouble(), unpackDouble()};\n-            return pointValue( crs, coordinates );\n-        }\n+    private PointValue unpackPoint2D() throws IOException\n+    {\n \n-        private PointValue unpackPoint3D() throws IOException\n-        {\n-            int crsCode = unpackInteger();\n-            CoordinateReferenceSystem crs = CoordinateReferenceSystem.get( crsCode );\n-            double[] coordinates = {unpackDouble(), unpackDouble(), unpackDouble()};\n-            return pointValue( crs, coordinates );\n-        }\n+      int crsCode = unpackInteger();\n+      CoordinateReferenceSystem crs = CoordinateReferenceSystem.get(crsCode);\n+      double[] coordinates = {unpackDouble(), unpackDouble()};\n+      return pointValue(crs, coordinates);\n+    }\n \n-        private DurationValue unpackDuration() throws IOException\n-        {\n-            long months = unpackLong();\n-            long days = unpackLong();\n-            long seconds = unpackLong();\n-            long nanos = unpackInteger();\n-            return duration( months, days, seconds, nanos );\n-        }\n+    private PointValue unpackPoint3D() throws IOException\n+    {\n+      int crsCode = unpackInteger();\n+      CoordinateReferenceSystem crs = CoordinateReferenceSystem.get(crsCode);\n+      double[] coordinates = {unpackDouble(), unpackDouble(), unpackDouble()};\n+      return pointValue(crs, coordinates);\n+    }\n \n-        private DateValue unpackDate() throws IOException\n-        {\n-            long epochDay = unpackLong();\n-            return epochDate( epochDay );\n-        }\n+    private DurationValue unpackDuration() throws IOException\n+    {\n+      long months = unpackLong();\n+      long days = unpackLong();\n+      long seconds = unpackLong();\n+      long nanos = unpackInteger();\n+      return duration(months, days, seconds, nanos);\n+    }\n \n-        private LocalTimeValue unpackLocalTime() throws IOException\n-        {\n-            long nanoOfDay = unpackLong();\n-            return localTime( nanoOfDay );\n-        }\n+    private DateValue unpackDate() throws IOException\n+    {\n+      long epochDay = unpackLong();\n+      return epochDate(epochDay);\n+    }\n \n-        private TimeValue unpackTime() throws IOException\n-        {\n-            long nanosOfDayLocal = unpackLong();\n-            int offsetSeconds = unpackInteger();\n-            return time( TemporalUtil.nanosOfDayToUTC( nanosOfDayLocal, offsetSeconds ), ZoneOffset.ofTotalSeconds( offsetSeconds ) );\n-        }\n+    private LocalTimeValue unpackLocalTime() throws IOException\n+    {\n+      long nanoOfDay = unpackLong();\n+      return localTime(nanoOfDay);\n+    }\n \n-        private LocalDateTimeValue unpackLocalDateTime() throws IOException\n-        {\n-            long epochSecond = unpackLong();\n-            long nano = unpackLong();\n-            return localDateTime( epochSecond, nano );\n-        }\n+    private TimeValue unpackTime() throws IOException\n+    {\n+      long nanosOfDayLocal = unpackLong();\n+      int offsetSeconds = unpackInteger();\n+      return time(TemporalUtil.nanosOfDayToUTC(nanosOfDayLocal, offsetSeconds), ZoneOffset.ofTotalSeconds(offsetSeconds));\n+    }\n \n-        private DateTimeValue unpackDateTimeWithZoneOffset() throws IOException\n-        {\n-            long epochSecondLocal = unpackLong();\n-            long nano = unpackLong();\n-            int offsetSeconds = unpackInteger();\n-            return datetime( newZonedDateTime( epochSecondLocal, nano, ZoneOffset.ofTotalSeconds( offsetSeconds ) ) );\n-        }\n+    private LocalDateTimeValue unpackLocalDateTime() throws IOException\n+    {\n+      long epochSecond = unpackLong();\n+      long nano = unpackLong();\n+      return localDateTime(epochSecond, nano);\n+    }\n \n-        private DateTimeValue unpackDateTimeWithZoneName() throws IOException\n-        {\n-            long epochSecondLocal = unpackLong();\n-            long nano = unpackLong();\n-            String zoneId = unpackString();\n-            return datetime( newZonedDateTime( epochSecondLocal, nano, ZoneId.of( zoneId ) ) );\n-        }\n+    private DateTimeValue unpackDateTimeWithZoneOffset() throws IOException\n+    {\n+      long epochSecondLocal = unpackLong();\n+      long nano = unpackLong();\n+      int offsetSeconds = unpackInteger();\n+      return datetime(newZonedDateTime(epochSecondLocal, nano, ZoneOffset.ofTotalSeconds(offsetSeconds)));\n+    }\n \n-        private static ZonedDateTime newZonedDateTime( long epochSecondLocal, long nano, ZoneId zoneId )\n-        {\n-            Instant instant = Instant.ofEpochSecond( epochSecondLocal, nano );\n-            LocalDateTime localDateTime = LocalDateTime.ofInstant( instant, UTC );\n-            return ZonedDateTime.of( localDateTime, zoneId );\n-        }\n+    private DateTimeValue unpackDateTimeWithZoneName() throws IOException\n+    {\n+      long epochSecondLocal = unpackLong();\n+      long nano = unpackLong();\n+      String zoneId = unpackString();\n+      return datetime(newZonedDateTime(epochSecondLocal, nano, ZoneId.of(zoneId)));\n+    }\n+\n+    private static ZonedDateTime newZonedDateTime(long epochSecondLocal, long nano, ZoneId zoneId)\n+    {\n+      Instant instant = Instant.ofEpochSecond(epochSecondLocal, nano);\n+      LocalDateTime localDateTime = LocalDateTime.ofInstant(instant, UTC);\n+      return ZonedDateTime.of(localDateTime, zoneId);\n     }\n+  }\n }\n",
            "diff_size": 359
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2966/Neo4jPackV2.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2966/Neo4jPackV2.java\nindex 228c7f857c3..1b99fcf7484 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2966/Neo4jPackV2.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2966/Neo4jPackV2.java\n@@ -63,31 +63,40 @@ public class Neo4jPackV2 extends Neo4jPackV1\n     public static final long VERSION = 2;\n \n     public static final byte POINT_2D = 'X';\n-    public static final int POINT_2D_SIZE = 3;\n+\n+public static final int POINT_2D_SIZE = 3;\n \n     public static final byte POINT_3D = 'Y';\n-    public static final int POINT_3D_SIZE = 4;\n+\n+public static final int POINT_3D_SIZE = 4;\n \n     public static final byte DATE = 'D';\n-    public static final int DATE_SIZE = 1;\n+\n+public static final int DATE_SIZE = 1;\n \n     public static final byte TIME = 'T';\n-    public static final int TIME_SIZE = 2;\n+\n+public static final int TIME_SIZE = 2;\n \n     public static final byte LOCAL_TIME = 't';\n-    public static final int LOCAL_TIME_SIZE = 1;\n+\n+public static final int LOCAL_TIME_SIZE = 1;\n \n     public static final byte LOCAL_DATE_TIME = 'd';\n-    public static final int LOCAL_DATE_TIME_SIZE = 2;\n+\n+public static final int LOCAL_DATE_TIME_SIZE = 2;\n \n     public static final byte DATE_TIME_WITH_ZONE_OFFSET = 'F';\n-    public static final int DATE_TIME_WITH_ZONE_OFFSET_SIZE = 3;\n+\n+public static final int DATE_TIME_WITH_ZONE_OFFSET_SIZE = 3;\n \n     public static final byte DATE_TIME_WITH_ZONE_NAME = 'f';\n-    public static final int DATE_TIME_WITH_ZONE_NAME_SIZE = 3;\n+\n+public static final int DATE_TIME_WITH_ZONE_NAME_SIZE = 3;\n \n     public static final byte DURATION = 'E';\n-    public static final int DURATION_SIZE = 4;\n+\n+public static final int DURATION_SIZE = 4;\n \n     @Override\n     public Neo4jPack.Packer newPacker( PackOutput output )\n@@ -134,9 +143,8 @@ public class Neo4jPackV2 extends Neo4jPackV1\n             }\n             else\n             {\n-                throw new IllegalArgumentException( \"Point with 2D or 3D coordinate expected, \" +\n-                                                    \"got crs=\" + crs + \", coordinate=\" + Arrays.toString( coordinate ) );\n-            }\n+                throw new IllegalArgumentException( \"Point with 2D or 3D coordinate expected, \" + \"got crs=\" + crs + \", coordinate=\" + Arrays.toString( coordinate ) );\n+    }\n         }\n \n         @Override\n@@ -194,8 +202,7 @@ public class Neo4jPackV2 extends Neo4jPackV1\n         {\n             long epochSecondLocal = zonedDateTime.toLocalDateTime().toEpochSecond( UTC );\n             int nano = zonedDateTime.getNano();\n-\n-            ZoneId zone = zonedDateTime.getZone();\n+ZoneId zone = zonedDateTime.getZone();\n             if ( zone instanceof ZoneOffset )\n             {\n                 int offsetSeconds = ((ZoneOffset) zone).getTotalSeconds();\n@@ -281,8 +288,7 @@ public class Neo4jPackV2 extends Neo4jPackV1\n \n         private PointValue unpackPoint2D() throws IOException\n         {\n-\n-            int crsCode = unpackInteger();\n+    int crsCode = unpackInteger();\n             CoordinateReferenceSystem crs = CoordinateReferenceSystem.get( crsCode );\n             double[] coordinates = {unpackDouble(), unpackDouble()};\n             return pointValue( crs, coordinates );\n@@ -354,4 +360,4 @@ public class Neo4jPackV2 extends Neo4jPackV1\n             return ZonedDateTime.of( localDateTime, zoneId );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
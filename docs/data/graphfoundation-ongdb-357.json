{
    "project_name": "graphfoundation-ongdb",
    "error_id": "357",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/357/TermState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/357/TermState.java\nindex 54244809b06..2cf1b114000 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/357/TermState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/357/TermState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.term;\n \n import java.io.IOException;\n@@ -27,83 +28,83 @@ import org.neo4j.storageengine.api.WritableChannel;\n \n public class TermState\n {\n-    private volatile long term;\n+  private volatile long term;\n \n-    public TermState()\n-    {\n-    }\n+  public TermState()\n+  {\n+  }\n \n-    private TermState( long term )\n-    {\n-        this.term = term;\n-    }\n+  private TermState(long term)\n+  {\n+    this.term = term;\n+  }\n+\n+  public long currentTerm()\n+  {\n+    return term;\n+  }\n+\n+  /**\n+   * Updates the term to a new value. This value is generally expected, but not required, to be persisted. Consecutive\n+   * calls to this method should always have monotonically increasing arguments, thus maintaining the raft invariant\n+   * that the term is always non-decreasing. {@link IllegalArgumentException} can be thrown if an invalid value is\n+   * passed as argument.\n+   *\n+   * @param newTerm The new value.\n+   */\n+  public boolean update(long newTerm)\n+  {\n+    failIfInvalid(newTerm);\n+    boolean changed = term != newTerm;\n+    term = newTerm;\n+    return changed;\n+  }\n \n-    public long currentTerm()\n+  /**\n+   * This method implements the invariant of this class, that term never transitions to lower values. If\n+   * newTerm is lower than the term already stored in this class, it will throw an\n+   * {@link IllegalArgumentException}.\n+   */\n+  private void failIfInvalid(long newTerm)\n+  {\n+    if (newTerm < term)\n     {\n-        return term;\n+      throw new IllegalArgumentException(\"Cannot move to a lower term\");\n     }\n+  }\n \n-    /**\n-     * Updates the term to a new value. This value is generally expected, but not required, to be persisted. Consecutive\n-     * calls to this method should always have monotonically increasing arguments, thus maintaining the raft invariant\n-     * that the term is always non-decreasing. {@link IllegalArgumentException} can be thrown if an invalid value is\n-     * passed as argument.\n-     *\n-     * @param newTerm The new value.\n-     */\n-    public boolean update( long newTerm )\n+  public static class Marshal extends SafeStateMarshal<TermState>\n+  {\n+    @Override\n+    public void marshal(TermState termState, WritableChannel channel) throws IOException\n     {\n-        failIfInvalid( newTerm );\n-        boolean changed = term != newTerm;\n-        term = newTerm;\n-        return changed;\n+      channel.putLong(termState.currentTerm());\n     }\n \n-    /**\n-     * This method implements the invariant of this class, that term never transitions to lower values. If\n-     * newTerm is lower than the term already stored in this class, it will throw an\n-     * {@link IllegalArgumentException}.\n-     */\n-    private void failIfInvalid( long newTerm )\n+    @Override\n+    protected TermState unmarshal0(ReadableChannel channel) throws IOException\n     {\n-        if ( newTerm < term )\n-        {\n-            throw new IllegalArgumentException( \"Cannot move to a lower term\" );\n-        }\n+      return new TermState(channel.getLong());\n     }\n \n-    public static class Marshal extends SafeStateMarshal<TermState>\n+    @Override\n+    public TermState startState()\n     {\n-        @Override\n-        public void marshal( TermState termState, WritableChannel channel ) throws IOException\n-        {\n-            channel.putLong( termState.currentTerm() );\n-        }\n-\n-        @Override\n-        protected TermState unmarshal0( ReadableChannel channel ) throws IOException\n-        {\n-            return new TermState( channel.getLong() );\n-        }\n-\n-        @Override\n-        public TermState startState()\n-        {\n-            return new TermState();\n-        }\n-\n-        @Override\n-        public long ordinal( TermState state )\n-        {\n-            return state.currentTerm();\n-        }\n+      return new TermState();\n     }\n \n     @Override\n-    public String toString()\n+    public long ordinal(TermState state)\n     {\n-        return \"TermState{\" +\n-               \"term=\" + term +\n-               '}';\n+      return state.currentTerm();\n     }\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"TermState{\" +\n+        \"term=\" + term +\n+        '}';\n+  }\n }\n",
            "diff_size": 101
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/357/TermState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/357/TermState.java\nindex 54244809b06..de6f9c4d98c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/357/TermState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/357/TermState.java\n@@ -102,8 +102,6 @@ public class TermState\n     @Override\n     public String toString()\n     {\n-        return \"TermState{\" +\n-               \"term=\" + term +\n-               '}';\n+        return \"TermState{\" + \"term=\" + term + '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/357/TermState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/357/TermState.java\nindex 54244809b06..b6675645de5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/357/TermState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/357/TermState.java\n@@ -20,7 +20,6 @@\n package org.neo4j.causalclustering.core.consensus.term;\n \n import java.io.IOException;\n-\n import org.neo4j.causalclustering.core.state.storage.SafeStateMarshal;\n import org.neo4j.storageengine.api.ReadableChannel;\n import org.neo4j.storageengine.api.WritableChannel;\n@@ -51,6 +50,7 @@ public class TermState\n      *\n      * @param newTerm The new value.\n      */\n+\n     public boolean update( long newTerm )\n     {\n         failIfInvalid( newTerm );\n@@ -64,6 +64,7 @@ public class TermState\n      * newTerm is lower than the term already stored in this class, it will throw an\n      * {@link IllegalArgumentException}.\n      */\n+\n     private void failIfInvalid( long newTerm )\n     {\n         if ( newTerm < term )\n@@ -102,8 +103,6 @@ public class TermState\n     @Override\n     public String toString()\n     {\n-        return \"TermState{\" +\n-               \"term=\" + term +\n-               '}';\n+        return \"TermState{\" + \"term=\" + term + '}';\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
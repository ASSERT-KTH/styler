{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1206",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1206/AbstractSelectorOrderer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1206/AbstractSelectorOrderer.java\nindex 5991feb3340..7896a807615 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1206/AbstractSelectorOrderer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1206/AbstractSelectorOrderer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.impl.traversal;\n \n import org.neo4j.graphdb.Direction;\n@@ -27,76 +28,76 @@ import org.neo4j.graphdb.traversal.TraversalContext;\n \n public abstract class AbstractSelectorOrderer<T> implements SideSelector\n {\n-    private static final BranchSelector EMPTY_SELECTOR = metadata -> null;\n+  private static final BranchSelector EMPTY_SELECTOR = metadata -> null;\n \n-    private final BranchSelector[] selectors;\n-    @SuppressWarnings( \"unchecked\" )\n-    private final T[] states = (T[]) new Object[2];\n-    private int selectorIndex;\n+  private final BranchSelector[] selectors;\n+  @SuppressWarnings(\"unchecked\")\n+  private final T[] states = (T[]) new Object[2];\n+  private int selectorIndex;\n \n-    public AbstractSelectorOrderer( BranchSelector startSelector, BranchSelector endSelector )\n-    {\n-        selectors = new BranchSelector[] { startSelector, endSelector };\n-        states[0] = initialState();\n-        states[1] = initialState();\n-    }\n+  public AbstractSelectorOrderer(BranchSelector startSelector, BranchSelector endSelector)\n+  {\n+    selectors = new BranchSelector[] {startSelector, endSelector};\n+    states[0] = initialState();\n+    states[1] = initialState();\n+  }\n \n-    protected T initialState()\n-    {\n-        return null;\n-    }\n+  protected T initialState()\n+  {\n+    return null;\n+  }\n \n-    protected void setStateForCurrentSelector( T state )\n-    {\n-        states[selectorIndex] = state;\n-    }\n+  protected void setStateForCurrentSelector(T state)\n+  {\n+    states[selectorIndex] = state;\n+  }\n \n-    protected T getStateForCurrentSelector()\n-    {\n-        return states[selectorIndex];\n-    }\n+  protected T getStateForCurrentSelector()\n+  {\n+    return states[selectorIndex];\n+  }\n \n-    protected TraversalBranch nextBranchFromCurrentSelector( TraversalContext metadata,\n-            boolean switchIfExhausted )\n-    {\n-        return nextBranchFromSelector( metadata, selectors[selectorIndex], switchIfExhausted );\n-    }\n+  protected TraversalBranch nextBranchFromCurrentSelector(TraversalContext metadata,\n+                                                          boolean switchIfExhausted)\n+  {\n+    return nextBranchFromSelector(metadata, selectors[selectorIndex], switchIfExhausted);\n+  }\n \n-    protected TraversalBranch nextBranchFromNextSelector( TraversalContext metadata,\n-            boolean switchIfExhausted )\n-    {\n-        return nextBranchFromSelector( metadata, nextSelector(), switchIfExhausted );\n-    }\n+  protected TraversalBranch nextBranchFromNextSelector(TraversalContext metadata,\n+                                                       boolean switchIfExhausted)\n+  {\n+    return nextBranchFromSelector(metadata, nextSelector(), switchIfExhausted);\n+  }\n \n-    private TraversalBranch nextBranchFromSelector( TraversalContext metadata,\n-            BranchSelector selector, boolean switchIfExhausted )\n+  private TraversalBranch nextBranchFromSelector(TraversalContext metadata,\n+                                                 BranchSelector selector, boolean switchIfExhausted)\n+  {\n+    TraversalBranch result = selector.next(metadata);\n+    if (result == null)\n     {\n-        TraversalBranch result = selector.next( metadata );\n-        if ( result == null )\n+      selectors[selectorIndex] = EMPTY_SELECTOR;\n+      if (switchIfExhausted)\n+      {\n+        result = nextSelector().next(metadata);\n+        if (result == null)\n         {\n-            selectors[selectorIndex] = EMPTY_SELECTOR;\n-            if ( switchIfExhausted )\n-            {\n-                result = nextSelector().next( metadata );\n-                if ( result == null )\n-                {\n-                    selectors[selectorIndex] = EMPTY_SELECTOR;\n-                }\n-            }\n+          selectors[selectorIndex] = EMPTY_SELECTOR;\n         }\n-        return result;\n+      }\n     }\n+    return result;\n+  }\n \n-    protected BranchSelector nextSelector()\n-    {\n-        selectorIndex = (selectorIndex + 1) % 2;\n-        return selectors[selectorIndex];\n-    }\n+  protected BranchSelector nextSelector()\n+  {\n+    selectorIndex = (selectorIndex + 1) % 2;\n+    return selectors[selectorIndex];\n+  }\n \n-    @Override\n-    public Direction currentSide()\n-    {\n-        return selectorIndex == 0 ? Direction.OUTGOING : Direction.INCOMING;\n-    }\n+  @Override\n+  public Direction currentSide()\n+  {\n+    return selectorIndex == 0 ? Direction.OUTGOING : Direction.INCOMING;\n+  }\n \n }\n",
            "diff_size": 66
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1206/AbstractSelectorOrderer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1206/AbstractSelectorOrderer.java\nindex 5991feb3340..c5ab7f2fe3d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1206/AbstractSelectorOrderer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1206/AbstractSelectorOrderer.java\n@@ -30,7 +30,8 @@ public abstract class AbstractSelectorOrderer<T> implements SideSelector\n     private static final BranchSelector EMPTY_SELECTOR = metadata -> null;\n \n     private final BranchSelector[] selectors;\n-    @SuppressWarnings( \"unchecked\" )\n+\n+@SuppressWarnings( \"unchecked\" )\n     private final T[] states = (T[]) new Object[2];\n     private int selectorIndex;\n \n@@ -89,7 +90,7 @@ public abstract class AbstractSelectorOrderer<T> implements SideSelector\n \n     protected BranchSelector nextSelector()\n     {\n-        selectorIndex = (selectorIndex + 1) % 2;\n+        selectorIndex = (selectorIndex + 1 ) % 2;\n         return selectors[selectorIndex];\n     }\n \n@@ -98,5 +99,4 @@ public abstract class AbstractSelectorOrderer<T> implements SideSelector\n     {\n         return selectorIndex == 0 ? Direction.OUTGOING : Direction.INCOMING;\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "28",
                    "column": "47",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "32",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "45",
                    "severity": "error",
                    "message": "'%' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1206/AbstractSelectorOrderer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1206/AbstractSelectorOrderer.java\nindex 5991feb3340..4919f19a838 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1206/AbstractSelectorOrderer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1206/AbstractSelectorOrderer.java\n@@ -25,12 +25,11 @@ import org.neo4j.graphdb.traversal.SideSelector;\n import org.neo4j.graphdb.traversal.TraversalBranch;\n import org.neo4j.graphdb.traversal.TraversalContext;\n \n-public abstract class AbstractSelectorOrderer<T> implements SideSelector\n+public abstract class AbstractSelectorOrderer <T> implements SideSelector\n {\n     private static final BranchSelector EMPTY_SELECTOR = metadata -> null;\n-\n     private final BranchSelector[] selectors;\n-    @SuppressWarnings( \"unchecked\" )\n+    @ SuppressWarnings( \"unchecked\")\n     private final T[] states = (T[]) new Object[2];\n     private int selectorIndex;\n \n@@ -53,23 +52,20 @@ public abstract class AbstractSelectorOrderer<T> implements SideSelector\n \n     protected T getStateForCurrentSelector()\n     {\n-        return states[selectorIndex];\n+        return states[ selectorIndex];\n     }\n \n-    protected TraversalBranch nextBranchFromCurrentSelector( TraversalContext metadata,\n-            boolean switchIfExhausted )\n+    protected TraversalBranch nextBranchFromCurrentSelector( TraversalContext metadata, boolean switchIfExhausted )\n     {\n-        return nextBranchFromSelector( metadata, selectors[selectorIndex], switchIfExhausted );\n+        return nextBranchFromSelector( metadata, selectors[ selectorIndex], switchIfExhausted );\n     }\n \n-    protected TraversalBranch nextBranchFromNextSelector( TraversalContext metadata,\n-            boolean switchIfExhausted )\n+    protected TraversalBranch nextBranchFromNextSelector( TraversalContext metadata, boolean switchIfExhausted )\n     {\n         return nextBranchFromSelector( metadata, nextSelector(), switchIfExhausted );\n     }\n \n-    private TraversalBranch nextBranchFromSelector( TraversalContext metadata,\n-            BranchSelector selector, boolean switchIfExhausted )\n+    private TraversalBranch nextBranchFromSelector( TraversalContext metadata, BranchSelector selector, boolean switchIfExhausted )\n     {\n         TraversalBranch result = selector.next( metadata );\n         if ( result == null )\n@@ -84,13 +80,14 @@ public abstract class AbstractSelectorOrderer<T> implements SideSelector\n                 }\n             }\n         }\n+\n         return result;\n     }\n \n     protected BranchSelector nextSelector()\n     {\n-        selectorIndex = (selectorIndex + 1) % 2;\n-        return selectors[selectorIndex];\n+        selectorIndex = ( selectorIndex + 1)% 2;\n+        return selectors[ selectorIndex];\n     }\n \n     @Override\n@@ -98,5 +95,4 @@ public abstract class AbstractSelectorOrderer<T> implements SideSelector\n     {\n         return selectorIndex == 0 ? Direction.OUTGOING : Direction.INCOMING;\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
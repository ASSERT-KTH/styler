{
    "project_name": "neo4j-neo4j",
    "error_id": "1232",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "100",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "84",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "202",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "81",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "321",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "321",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "339",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1232/TypeCheckers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1232/TypeCheckers.java\nindex 0b31da52c71..c172fecd5b9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1232/TypeCheckers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1232/TypeCheckers.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.procedure.impl;\n \n import java.lang.reflect.ParameterizedType;\n@@ -87,39 +88,39 @@ public class TypeCheckers\n {\n     private static final ExpressionEvaluator EVALUATOR = Evaluator.expressionEvaluator();\n \n-    private static final Function<String,DefaultParameterValue> PARSE_STRING = DefaultParameterValue::ntString;\n-    private static final Function<String,DefaultParameterValue> PARSE_INTEGER = s -> ntInteger( parseLong( s ) );\n-    private static final Function<String,DefaultParameterValue> PARSE_FLOAT = s -> ntFloat( parseDouble( s ) );\n-    private static final Function<String,DefaultParameterValue> PARSE_NUMBER = new CompositeConverter(\n-            NTNumber,\n-            PARSE_INTEGER,\n-            PARSE_FLOAT\n+    private static final Function<String, DefaultParameterValue> PARSE_STRING = DefaultParameterValue::ntString;\n+    private static final Function<String, DefaultParameterValue> PARSE_INTEGER = s -> ntInteger(parseLong(s));\n+    private static final Function<String, DefaultParameterValue> PARSE_FLOAT = s -> ntFloat(parseDouble(s));\n+    private static final Function<String, DefaultParameterValue> PARSE_NUMBER = new CompositeConverter(\n+      NTNumber,\n+      PARSE_INTEGER,\n+      PARSE_FLOAT\n     );\n-    private static final Function<String,DefaultParameterValue> PARSE_BOOLEAN = s -> ntBoolean( parseBooleanOrFail( s ) );\n-    private static final MapConverter PARSE_MAP = new MapConverter( EVALUATOR );\n-    private static final ListConverter PARSE_LIST = new ListConverter( Object.class, NTAny, EVALUATOR );\n-    private static final ByteArrayConverter PARSE_BYTE_ARRAY = new ByteArrayConverter( EVALUATOR );\n+    private static final Function<String, DefaultParameterValue> PARSE_BOOLEAN = s -> ntBoolean(parseBooleanOrFail(s));\n+    private static final MapConverter PARSE_MAP = new MapConverter(EVALUATOR);\n+    private static final ListConverter PARSE_LIST = new ListConverter(Object.class, NTAny, EVALUATOR);\n+    private static final ByteArrayConverter PARSE_BYTE_ARRAY = new ByteArrayConverter(EVALUATOR);\n \n     private static final CompositeConverter PARSE_ANY = new CompositeConverter(\n-            NTAny,\n-            DefaultValueConverter.nullParser( NTAny ),\n-            PARSE_MAP,\n-            PARSE_LIST,\n-            PARSE_BOOLEAN,\n-            PARSE_NUMBER,\n-            PARSE_STRING\n+      NTAny,\n+      DefaultValueConverter.nullParser(NTAny),\n+      PARSE_MAP,\n+      PARSE_LIST,\n+      PARSE_BOOLEAN,\n+      PARSE_NUMBER,\n+      PARSE_STRING\n     );\n-    private static final DefaultValueConverter TO_ANY = new DefaultValueConverter( NTAny, PARSE_ANY );\n-    private static final DefaultValueConverter TO_STRING = new DefaultValueConverter( NTString, PARSE_STRING );\n-    private static final DefaultValueConverter TO_INTEGER = new DefaultValueConverter( NTInteger, PARSE_INTEGER );\n-    private static final DefaultValueConverter TO_FLOAT = new DefaultValueConverter( NTFloat, PARSE_FLOAT );\n-    private static final DefaultValueConverter TO_NUMBER = new DefaultValueConverter( NTNumber, PARSE_NUMBER );\n-    private static final DefaultValueConverter TO_BOOLEAN = new DefaultValueConverter( NTBoolean, PARSE_BOOLEAN );\n-    private static final DefaultValueConverter TO_MAP = new DefaultValueConverter( NTMap, PARSE_MAP );\n-    private static final DefaultValueConverter TO_LIST = toList( TO_ANY, Object.class );\n-    private final DefaultValueConverter TO_BYTE_ARRAY = new DefaultValueConverter( NTByteArray, PARSE_BYTE_ARRAY );\n+    private static final DefaultValueConverter TO_ANY = new DefaultValueConverter(NTAny, PARSE_ANY);\n+    private static final DefaultValueConverter TO_STRING = new DefaultValueConverter(NTString, PARSE_STRING);\n+    private static final DefaultValueConverter TO_INTEGER = new DefaultValueConverter(NTInteger, PARSE_INTEGER);\n+    private static final DefaultValueConverter TO_FLOAT = new DefaultValueConverter(NTFloat, PARSE_FLOAT);\n+    private static final DefaultValueConverter TO_NUMBER = new DefaultValueConverter(NTNumber, PARSE_NUMBER);\n+    private static final DefaultValueConverter TO_BOOLEAN = new DefaultValueConverter(NTBoolean, PARSE_BOOLEAN);\n+    private static final DefaultValueConverter TO_MAP = new DefaultValueConverter(NTMap, PARSE_MAP);\n+    private static final DefaultValueConverter TO_LIST = toList(TO_ANY, Object.class);\n+    private final DefaultValueConverter TO_BYTE_ARRAY = new DefaultValueConverter(NTByteArray, PARSE_BYTE_ARRAY);\n \n-    private final Map<Type,DefaultValueConverter> javaToNeo = new HashMap<>();\n+    private final Map<Type, DefaultValueConverter> javaToNeo = new HashMap<>();\n \n     public TypeCheckers()\n     {\n@@ -135,97 +136,96 @@ public class TypeCheckers\n      */\n     private void registerScalarsAndCollections()\n     {\n-        registerType( String.class, TO_STRING );\n-        registerType( TextValue.class, TO_STRING );\n-        registerType( long.class, TO_INTEGER );\n-        registerType( Long.class, TO_INTEGER );\n-        registerType( IntegralValue.class, TO_INTEGER );\n-        registerType( double.class, TO_FLOAT );\n-        registerType( Double.class, TO_FLOAT );\n-        registerType( FloatingPointValue.class, TO_FLOAT );\n-        registerType( Number.class, TO_NUMBER );\n-        registerType( NumberValue.class, TO_NUMBER );\n-        registerType( boolean.class, TO_BOOLEAN );\n-        registerType( Boolean.class, TO_BOOLEAN );\n-        registerType( BooleanValue.class, TO_BOOLEAN );\n-        registerType( Map.class, TO_MAP );\n-        registerType( MapValue.class, TO_MAP );\n-        registerType( List.class, TO_LIST );\n-        registerType( ListValue.class, TO_LIST );\n-        registerType( Object.class, TO_ANY );\n-        registerType( AnyValue.class, TO_ANY );\n-        registerType( byte[].class, TO_BYTE_ARRAY );\n-        registerType( ByteArray.class, TO_BYTE_ARRAY );\n-        registerType( ZonedDateTime.class, new DefaultValueConverter( NTDateTime ) );\n-        registerType( DateTimeValue.class, new DefaultValueConverter( NTDateTime ) );\n-        registerType( LocalDateTime.class, new DefaultValueConverter( NTLocalDateTime ) );\n-        registerType( LocalDateTimeValue.class, new DefaultValueConverter( NTLocalDateTime ) );\n-        registerType( LocalDate.class, new DefaultValueConverter( NTDate ) );\n-        registerType( DateValue.class, new DefaultValueConverter( NTDate ) );\n-        registerType( OffsetTime.class, new DefaultValueConverter( NTTime ) );\n-        registerType( TimeValue.class, new DefaultValueConverter( NTTime ) );\n-        registerType( LocalTime.class, new DefaultValueConverter( NTLocalTime ) );\n-        registerType( LocalTimeValue.class, new DefaultValueConverter( NTLocalTime ) );\n-        registerType( TemporalAmount.class, new DefaultValueConverter( NTDuration ) );\n-        registerType( DurationValue.class, new DefaultValueConverter( NTDuration ) );\n+        registerType(String.class, TO_STRING);\n+        registerType(TextValue.class, TO_STRING);\n+        registerType(long.class, TO_INTEGER);\n+        registerType(Long.class, TO_INTEGER);\n+        registerType(IntegralValue.class, TO_INTEGER);\n+        registerType(double.class, TO_FLOAT);\n+        registerType(Double.class, TO_FLOAT);\n+        registerType(FloatingPointValue.class, TO_FLOAT);\n+        registerType(Number.class, TO_NUMBER);\n+        registerType(NumberValue.class, TO_NUMBER);\n+        registerType(boolean.class, TO_BOOLEAN);\n+        registerType(Boolean.class, TO_BOOLEAN);\n+        registerType(BooleanValue.class, TO_BOOLEAN);\n+        registerType(Map.class, TO_MAP);\n+        registerType(MapValue.class, TO_MAP);\n+        registerType(List.class, TO_LIST);\n+        registerType(ListValue.class, TO_LIST);\n+        registerType(Object.class, TO_ANY);\n+        registerType(AnyValue.class, TO_ANY);\n+        registerType(byte[].class, TO_BYTE_ARRAY);\n+        registerType(ByteArray.class, TO_BYTE_ARRAY);\n+        registerType(ZonedDateTime.class, new DefaultValueConverter(NTDateTime));\n+        registerType(DateTimeValue.class, new DefaultValueConverter(NTDateTime));\n+        registerType(LocalDateTime.class, new DefaultValueConverter(NTLocalDateTime));\n+        registerType(LocalDateTimeValue.class, new DefaultValueConverter(NTLocalDateTime));\n+        registerType(LocalDate.class, new DefaultValueConverter(NTDate));\n+        registerType(DateValue.class, new DefaultValueConverter(NTDate));\n+        registerType(OffsetTime.class, new DefaultValueConverter(NTTime));\n+        registerType(TimeValue.class, new DefaultValueConverter(NTTime));\n+        registerType(LocalTime.class, new DefaultValueConverter(NTLocalTime));\n+        registerType(LocalTimeValue.class, new DefaultValueConverter(NTLocalTime));\n+        registerType(TemporalAmount.class, new DefaultValueConverter(NTDuration));\n+        registerType(DurationValue.class, new DefaultValueConverter(NTDuration));\n     }\n \n-    TypeChecker checkerFor( Type javaType ) throws ProcedureException\n+    TypeChecker checkerFor(Type javaType) throws ProcedureException\n     {\n-        return converterFor( javaType );\n+        return converterFor(javaType);\n     }\n \n-    DefaultValueConverter converterFor( Type javaType ) throws ProcedureException\n+    DefaultValueConverter converterFor(Type javaType) throws ProcedureException\n     {\n-        if ( isAnyValue( javaType ) )\n+        if (isAnyValue(javaType))\n         {\n             //For AnyValue we support subtyping\n-            javaType = findValidSuperClass( javaType );\n+            javaType = findValidSuperClass(javaType);\n         }\n \n-        DefaultValueConverter converter = javaToNeo.get( javaType );\n-        if ( converter != null )\n+        DefaultValueConverter converter = javaToNeo.get(javaType);\n+        if (converter != null)\n         {\n             return converter;\n         }\n \n-        if ( javaType instanceof ParameterizedType )\n+        if (javaType instanceof ParameterizedType)\n         {\n             ParameterizedType pt = (ParameterizedType) javaType;\n             Type rawType = pt.getRawType();\n \n-            if ( rawType == List.class )\n+            if (rawType == List.class)\n             {\n                 Type type = pt.getActualTypeArguments()[0];\n-                return toList( converterFor( type ), type );\n-            }\n-            else if ( rawType == Map.class )\n+                return toList(converterFor(type), type);\n+            } else if (rawType == Map.class)\n             {\n                 Type type = pt.getActualTypeArguments()[0];\n-                if ( type != String.class )\n+                if (type != String.class)\n                 {\n                     throw new ProcedureException(\n-                            Status.Procedure.ProcedureRegistrationFailed,\n-                            \"Maps are required to have `String` keys - but this map has `%s` keys.\",\n-                            type.getTypeName() );\n+                      Status.Procedure.ProcedureRegistrationFailed,\n+                      \"Maps are required to have `String` keys - but this map has `%s` keys.\",\n+                      type.getTypeName());\n                 }\n                 return TO_MAP;\n             }\n         }\n-        throw javaToNeoMappingError( javaType );\n+        throw javaToNeoMappingError(javaType);\n     }\n \n-    private boolean isAnyValue( Type type )\n+    private boolean isAnyValue(Type type)\n     {\n-        return type instanceof Class<?> && AnyValue.class.isAssignableFrom( (Class<?>) type );\n+        return type instanceof Class<?> && AnyValue.class.isAssignableFrom((Class<?>) type);\n     }\n \n-    private Type findValidSuperClass( Type type )\n+    private Type findValidSuperClass(Type type)\n     {\n-        if ( type instanceof Class<?> )\n+        if (type instanceof Class<?>)\n         {\n             Class<?> aClass = (Class<?>) type;\n-            while ( !javaToNeo.containsKey( aClass ) )\n+            while (!javaToNeo.containsKey(aClass))\n             {\n                 aClass = aClass.getSuperclass();\n             }\n@@ -234,9 +234,9 @@ public class TypeCheckers\n         return type;\n     }\n \n-    void registerType( Class<?> javaClass, DefaultValueConverter toNeo )\n+    void registerType(Class<?> javaClass, DefaultValueConverter toNeo)\n     {\n-        javaToNeo.put( javaClass, toNeo );\n+        javaToNeo.put(javaClass, toNeo);\n     }\n \n     @VisibleForTesting\n@@ -245,44 +245,44 @@ public class TypeCheckers\n         return javaToNeo.keySet();\n     }\n \n-    private static boolean parseBooleanOrFail( String s )\n+    private static boolean parseBooleanOrFail(String s)\n     {\n-        if ( \"true\".equalsIgnoreCase( s ) )\n+        if (\"true\".equalsIgnoreCase(s))\n         {\n             return true;\n         }\n-        if ( \"false\".equalsIgnoreCase( s ) )\n+        if (\"false\".equalsIgnoreCase(s))\n         {\n             return false;\n         }\n-        throw new IllegalArgumentException( String.format( \"%s is not a valid boolean expression\", s ) );\n+        throw new IllegalArgumentException(String.format(\"%s is not a valid boolean expression\", s));\n     }\n \n-    private static DefaultValueConverter toList( DefaultValueConverter inner, Type type )\n+    private static DefaultValueConverter toList(DefaultValueConverter inner, Type type)\n     {\n-        return new DefaultValueConverter( NTList( inner.type() ), new ListConverter( type, inner.type(), EVALUATOR ) );\n+        return new DefaultValueConverter(NTList(inner.type()), new ListConverter(type, inner.type(), EVALUATOR));\n     }\n \n-    private ProcedureException javaToNeoMappingError( Type cls )\n+    private ProcedureException javaToNeoMappingError(Type cls)\n     {\n-        List<String> types = Iterables.asList( javaToNeo.keySet() )\n-                                      .stream()\n-                                      .filter( t -> !isAnyValue( t ) )\n-                                      .map( Type::getTypeName )\n-                                      .sorted( String::compareTo )\n-                                      .collect( Collectors.toList() );\n+        List<String> types = Iterables.asList(javaToNeo.keySet())\n+          .stream()\n+          .filter(t -> !isAnyValue(t))\n+          .map(Type::getTypeName)\n+          .sorted(String::compareTo)\n+          .collect(Collectors.toList());\n \n-        return new ProcedureException( Status.Statement.TypeError,\n-                                       \"Don't know how to map `%s` to the Neo4j Type System.%n\" +\n-                                       \"Please refer to to the documentation for full details.%n\" +\n-                                       \"For your reference, known types are: %s\", cls.getTypeName(), types );\n+        return new ProcedureException(Status.Statement.TypeError,\n+          \"Don't know how to map `%s` to the Neo4j Type System.%n\" +\n+            \"Please refer to to the documentation for full details.%n\" +\n+            \"For your reference, known types are: %s\", cls.getTypeName(), types);\n     }\n \n     public abstract static class TypeChecker\n     {\n         final AnyType type;\n \n-        private TypeChecker( AnyType type )\n+        private TypeChecker(AnyType type)\n         {\n             this.type = type;\n         }\n@@ -295,53 +295,50 @@ public class TypeCheckers\n \n     public static final class DefaultValueConverter extends TypeChecker\n     {\n-        private final Function<String,DefaultParameterValue> parser;\n+        private final Function<String, DefaultParameterValue> parser;\n \n-        DefaultValueConverter( AnyType type )\n+        DefaultValueConverter(AnyType type)\n         {\n-            this( type, nullParser( type ) );\n+            this(type, nullParser(type));\n         }\n \n-        private DefaultValueConverter( AnyType type, Function<String,DefaultParameterValue> parser )\n+        private DefaultValueConverter(AnyType type, Function<String, DefaultParameterValue> parser)\n         {\n-            super( type );\n+            super(type);\n             this.parser = parser;\n         }\n \n-        public Optional<DefaultParameterValue> defaultValue( String defaultValue ) throws ProcedureException\n+        public Optional<DefaultParameterValue> defaultValue(String defaultValue) throws ProcedureException\n         {\n-            if ( defaultValue.equals( Name.DEFAULT_VALUE ) )\n+            if (defaultValue.equals(Name.DEFAULT_VALUE))\n             {\n                 return Optional.empty();\n-            }\n-            else\n+            } else\n             {\n                 try\n                 {\n-                    return Optional.of( parser.apply( defaultValue ) );\n-                }\n-                catch ( Exception e )\n+                    return Optional.of(parser.apply(defaultValue));\n+                } catch (Exception e)\n                 {\n-                    throw new ProcedureException( Status.Procedure.ProcedureRegistrationFailed,\n-                                                  \"Default value `%s` could not be parsed as a %s\", defaultValue,\n-                                                  type.toString() );\n+                    throw new ProcedureException(Status.Procedure.ProcedureRegistrationFailed,\n+                      \"Default value `%s` could not be parsed as a %s\", defaultValue,\n+                      type.toString());\n                 }\n             }\n         }\n \n-        private static Function<String,DefaultParameterValue> nullParser( Neo4jTypes.AnyType neoType )\n+        private static Function<String, DefaultParameterValue> nullParser(Neo4jTypes.AnyType neoType)\n         {\n             return s ->\n             {\n-                if ( s.equalsIgnoreCase( \"null\" ) )\n+                if (s.equalsIgnoreCase(\"null\"))\n                 {\n-                    return nullValue( neoType );\n-                }\n-                else\n+                    return nullValue(neoType);\n+                } else\n                 {\n-                    throw new IllegalArgumentException( String.format(\n-                            \"A %s can only have a `defaultValue = \\\"null\\\"\",\n-                            neoType.toString() ) );\n+                    throw new IllegalArgumentException(String.format(\n+                      \"A %s can only have a `defaultValue = \\\"null\\\"\",\n+                      neoType.toString()));\n                 }\n             };\n         }\n",
            "diff_size": 127
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
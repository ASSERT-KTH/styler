{
    "project_name": "HuygensING-timbuctoo",
    "error_id": "2",
    "information": {
        "errors": [
            {
                "line": "173",
                "column": "33",
                "severity": "error",
                "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "      throws RdfProcessingFailedException {\n\n    new RelationDatabaseAction(){\n      @Override\n      public void executeAction(String key, String value) {\n        delete(key, value);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/2/BdbTripleStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler/2/BdbTripleStore.java\nindex 6736774787d..049ce8b101d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/2/BdbTripleStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler/2/BdbTripleStore.java\n@@ -170,7 +170,7 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n   public void delRelation(String cursor, String subject, String predicate, String object, String graph)\n       throws RdfProcessingFailedException {\n \n-    new RelationDatabaseAction(){\n+    new RelationDatabaseAction() {\n       @Override\n       public void executeAction(String key, String value) {\n         delete(key, value);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/2/BdbTripleStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/intellij/2/BdbTripleStore.java\nindex 6736774787d..125f451ee1b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/2/BdbTripleStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/intellij/2/BdbTripleStore.java\n@@ -122,11 +122,12 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n   }\n \n   @Override\n-  public void setPrefix(String cursor, String prefix, String iri) throws RdfProcessingFailedException {}\n+  public void setPrefix(String cursor, String prefix, String iri) throws RdfProcessingFailedException {\n+  }\n \n   @Override\n   public void addRelation(String cursor, String subject, String predicate, String object, String graph)\n-      throws RdfProcessingFailedException {\n+    throws RdfProcessingFailedException {\n     new RelationDatabaseAction() {\n \n       @Override\n@@ -138,13 +139,13 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n \n   @Override\n   public void addValue(String cursor, String subject, String predicate, String value, String dataType, String graph)\n-      throws RdfProcessingFailedException {\n+    throws RdfProcessingFailedException {\n     try {\n       put(subject + \"\\n\" +\n-        predicate,\n+          predicate,\n         dataType + \"\\n\" +\n-        /*language*/ \"\\n\" +\n-        value\n+          /*language*/ \"\\n\" +\n+          value\n       );\n     } catch (DatabaseException e) {\n       throw new RdfProcessingFailedException(e);\n@@ -157,7 +158,7 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n     try {\n       put(subject + \"\\n\" +\n           predicate,\n-          RdfConstants.LANGSTRING + \"\\n\" +\n+        RdfConstants.LANGSTRING + \"\\n\" +\n           language + \"\\n\" +\n           value\n       );\n@@ -168,9 +169,9 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n \n   @Override\n   public void delRelation(String cursor, String subject, String predicate, String object, String graph)\n-      throws RdfProcessingFailedException {\n+    throws RdfProcessingFailedException {\n \n-    new RelationDatabaseAction(){\n+    new RelationDatabaseAction() {\n       @Override\n       public void executeAction(String key, String value) {\n         delete(key, value);\n@@ -180,12 +181,12 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n \n   @Override\n   public void delValue(String cursor, String subject, String predicate, String value, String dataType, String graph)\n-      throws RdfProcessingFailedException {\n+    throws RdfProcessingFailedException {\n     try {\n       delete(subject + \"\\n\" +\n           predicate,\n         dataType + \"\\n\" +\n-      /*language*/ \"\\n\" +\n+          /*language*/ \"\\n\" +\n           value\n       );\n     } catch (DatabaseException e) {\n@@ -230,7 +231,7 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n         long elapsed = stopwatch.elapsed(TimeUnit.SECONDS);\n         if (elapsed > 5) {\n           LOG.info(\"Processed \" + tripleCount + \" triples and \" + subjectCount + \" subjects (\" +\n-            ((tripleCount - prevTripleCount) / (elapsed == 0 ? 1 : elapsed)) + \" triples/s)\" );\n+            ((tripleCount - prevTripleCount) / (elapsed == 0 ? 1 : elapsed)) + \" triples/s)\");\n           stopwatch.reset();\n           stopwatch.start();\n           prevTripleCount = tripleCount;\n@@ -270,7 +271,7 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n     }\n     long elapsed = stopwatch.elapsed(TimeUnit.SECONDS);\n     LOG.info(\"Done. Processed \" + tripleCount + \" triples and \" + subjectCount + \" subjects (\" +\n-      ((tripleCount - prevTripleCount) / (elapsed == 0 ? 1 : elapsed)) + \" triples/s)\" );\n+      ((tripleCount - prevTripleCount) / (elapsed == 0 ? 1 : elapsed)) + \" triples/s)\");\n \n     processor.finish();\n   }\n@@ -280,15 +281,15 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n       try {\n         executeAction(subject + \"\\n\" +\n             predicate,\n-        /*dataType*/ \"\\n\" +\n-        /*language*/ \"\\n\" +\n+          /*dataType*/ \"\\n\" +\n+            /*language*/ \"\\n\" +\n             object\n         );\n         if (!predicate.equals(RDF_TYPE)) {\n           executeAction(object + \"\\n\" +\n               predicate + \"_inverse\",//FIXME!\n             /*dataType*/ \"\\n\" +\n-            /*language*/ \"\\n\" +\n+              /*language*/ \"\\n\" +\n               subject\n           );\n         }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "130",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "'try' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "171",
                    "column": "31",
                    "severity": "error",
                    "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "184",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "186",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "195",
                    "severity": "error",
                    "message": "'try' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "197",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "198",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "201",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "228",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "267",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "278",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 2, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/2/BdbTripleStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/naturalize/2/BdbTripleStore.java\nindex 6736774787d..b05939f90d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/2/BdbTripleStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/naturalize/2/BdbTripleStore.java\n@@ -40,7 +40,7 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n \n   public BdbTripleStore(DataProvider dataProvider, BdbDatabaseCreator dbFactory, String userId, String datasetId)\n     throws DataStoreCreationException {\n-    super(dbFactory, \"rdfData\", userId, datasetId);\n+  super(dbFactory, \"rdfData\", userId, datasetId);\n     dataProvider.subscribeToRdf(this, null);\n   }\n \n@@ -127,7 +127,7 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n   @Override\n   public void addRelation(String cursor, String subject, String predicate, String object, String graph)\n       throws RdfProcessingFailedException {\n-    new RelationDatabaseAction() {\n+  new RelationDatabaseAction() {\n \n       @Override\n       public void executeAction(String key, String value) throws DatabaseException {\n@@ -154,13 +154,12 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n   @Override\n   public void addLanguageTaggedString(String cursor, String subject, String predicate, String value, String language,\n                                       String graph) throws RdfProcessingFailedException {\n-    try {\n+  try {\n       put(subject + \"\\n\" +\n-          predicate,\n-          RdfConstants.LANGSTRING + \"\\n\" +\n-          language + \"\\n\" +\n-          value\n-      );\n+  predicate,\n+          RdfConstants.LANGSTRING + \"\\n\" + language + \"\\n\" +\n+  value\n+  );\n     } catch (DatabaseException e) {\n       throw new RdfProcessingFailedException(e);\n     }\n@@ -169,8 +168,7 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n   @Override\n   public void delRelation(String cursor, String subject, String predicate, String object, String graph)\n       throws RdfProcessingFailedException {\n-\n-    new RelationDatabaseAction(){\n+  new RelationDatabaseAction(){\n       @Override\n       public void executeAction(String key, String value) {\n         delete(key, value);\n@@ -183,11 +181,9 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n       throws RdfProcessingFailedException {\n     try {\n       delete(subject + \"\\n\" +\n-          predicate,\n-        dataType + \"\\n\" +\n-      /*language*/ \"\\n\" +\n-          value\n-      );\n+  predicate, dataType + \"\\n\" +\n+  /*language*/ \"\\n\" +\n+  value);\n     } catch (DatabaseException e) {\n       throw new RdfProcessingFailedException(e);\n     }\n@@ -196,13 +192,13 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n   @Override\n   public void delLanguageTaggedString(String cursor, String subject, String predicate, String value, String language,\n                                       String graph) throws RdfProcessingFailedException {\n-    try {\n+  try {\n       delete(subject + \"\\n\" +\n-          predicate,\n-        RdfConstants.LANGSTRING + \"\\n\" +\n+  predicate,\n+RdfConstants.LANGSTRING + \"\\n\" +\n           language + \"\\n\" +\n-          value\n-      );\n+  value\n+  );\n     } catch (DatabaseException e) {\n       throw new RdfProcessingFailedException(e);\n     }\n@@ -229,8 +225,7 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n         tripleCount++;\n         long elapsed = stopwatch.elapsed(TimeUnit.SECONDS);\n         if (elapsed > 5) {\n-          LOG.info(\"Processed \" + tripleCount + \" triples and \" + subjectCount + \" subjects (\" +\n-            ((tripleCount - prevTripleCount) / (elapsed == 0 ? 1 : elapsed)) + \" triples/s)\" );\n+          LOG.info(\"Processed \" + tripleCount + \" triples and \" + subjectCount + \" subjects (\" + ((tripleCount - prevTripleCount) / (elapsed == 0 ? 1 : elapsed)) + \" triples/s)\");\n           stopwatch.reset();\n           stopwatch.start();\n           prevTripleCount = tripleCount;\n@@ -269,8 +264,7 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n       }\n     }\n     long elapsed = stopwatch.elapsed(TimeUnit.SECONDS);\n-    LOG.info(\"Done. Processed \" + tripleCount + \" triples and \" + subjectCount + \" subjects (\" +\n-      ((tripleCount - prevTripleCount) / (elapsed == 0 ? 1 : elapsed)) + \" triples/s)\" );\n+    LOG.info(\"Done. Processed \" + tripleCount + \" triples and \" + subjectCount + \" subjects (\" + ((tripleCount - prevTripleCount) / (elapsed == 0 ? 1 : elapsed)) + \" triples/s)\");\n \n     processor.finish();\n   }\n@@ -278,12 +272,10 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n   private abstract class RelationDatabaseAction {\n     public void execute(String subject, String predicate, String object) throws RdfProcessingFailedException {\n       try {\n-        executeAction(subject + \"\\n\" +\n-            predicate,\n-        /*dataType*/ \"\\n\" +\n+        executeAction(subject + \"\\n\" + predicate,\n+/*dataType*/ \"\\n\" +\n         /*language*/ \"\\n\" +\n-            object\n-        );\n+  object);\n         if (!predicate.equals(RDF_TYPE)) {\n           executeAction(object + \"\\n\" +\n               predicate + \"_inverse\",//FIXME!\n@@ -299,4 +291,4 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n \n     public abstract void executeAction(String key, String value) throws DatabaseException;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 149).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "'lambda arguments' has incorrect indentation level 20, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be one of the following: 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be one of the following: 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 2, expected level should be one of the following: 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be one of the following: 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be one of the following: 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 2, expected level should be one of the following: 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "194",
                    "severity": "error",
                    "message": "'lambda arguments' has incorrect indentation level 50, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "200",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "237",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/2/BdbTripleStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/codebuff/2/BdbTripleStore.java\nindex 6736774787d..6036c0a1923 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/2/BdbTripleStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/codebuff/2/BdbTripleStore.java\n@@ -22,7 +22,6 @@ import nl.knaw.huygens.timbuctoo.v5.dataset.exceptions.RdfProcessingFailedExcept\n import nl.knaw.huygens.timbuctoo.v5.datastores.exceptions.DataStoreCreationException;\n import nl.knaw.huygens.timbuctoo.v5.util.RdfConstants;\n import org.slf4j.Logger;\n-\n import java.util.HashMap;\n import java.util.Iterator;\n import java.util.List;\n@@ -35,11 +34,9 @@ import static nl.knaw.huygens.timbuctoo.v5.util.RdfConstants.RDF_TYPE;\n import static org.slf4j.LoggerFactory.getLogger;\n \n public class BdbTripleStore extends BerkeleyStore implements EntityProvider, QuadStore {\n-\n   private static final Logger LOG = getLogger(BdbTripleStore.class);\n \n-  public BdbTripleStore(DataProvider dataProvider, BdbDatabaseCreator dbFactory, String userId, String datasetId)\n-    throws DataStoreCreationException {\n+  public BdbTripleStore(DataProvider dataProvider, BdbDatabaseCreator dbFactory, String userId, String datasetId) throws DataStoreCreationException {\n     super(dbFactory, \"rdfData\", userId, datasetId);\n     dataProvider.subscribeToRdf(this, null);\n   }\n@@ -56,10 +53,8 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n   public Stream<CursorQuad> getQuads(String subject, String predicate, String cursor) {\n     DatabaseEntry key = new DatabaseEntry();\n     DatabaseEntry value = new DatabaseEntry();\n-\n     DatabaseFunction iterateForwards = dbCursor -> dbCursor.getNextDup(key, value, LockMode.DEFAULT);\n     DatabaseFunction iterateBackwards = dbCursor -> dbCursor.getPrevDup(key, value, LockMode.DEFAULT);\n-\n     DatabaseFunction initializer;\n     DatabaseFunction iterator;\n     if (cursor.isEmpty()) {\n@@ -101,11 +96,8 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n         };\n       }\n     }\n-    return getItems(\n-      initializer,\n-      iterator,\n-      () -> formatResult(key, value)\n-    );\n+    return getItems(initializer, iterator,\n+                    () -> formatResult(key, value));\n   }\n \n   private CursorQuad formatResult(DatabaseEntry key, DatabaseEntry value) {\n@@ -122,87 +114,63 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n   }\n \n   @Override\n-  public void setPrefix(String cursor, String prefix, String iri) throws RdfProcessingFailedException {}\n+  public void setPrefix(String cursor, String prefix, String iri) throws RdfProcessingFailedException {\n+\n+  }\n \n   @Override\n-  public void addRelation(String cursor, String subject, String predicate, String object, String graph)\n-      throws RdfProcessingFailedException {\n+  public void addRelation(String cursor, String subject, String predicate, String object, String graph) throws RdfProcessingFailedException {\n     new RelationDatabaseAction() {\n-\n-      @Override\n-      public void executeAction(String key, String value) throws DatabaseException {\n-        put(key, value);\n-      }\n-    }.execute(subject, predicate, object);\n+  @Override\n+  public void executeAction(String key, String value) throws DatabaseException {\n+    put(key, value);\n+  }\n+}.execute(subject, predicate, object);\n   }\n \n   @Override\n-  public void addValue(String cursor, String subject, String predicate, String value, String dataType, String graph)\n-      throws RdfProcessingFailedException {\n+  public void addValue(String cursor, String subject, String predicate, String value, String dataType, String graph) throws RdfProcessingFailedException {\n     try {\n-      put(subject + \"\\n\" +\n-        predicate,\n-        dataType + \"\\n\" +\n-        /*language*/ \"\\n\" +\n-        value\n-      );\n+      put(subject + \"\\n\" + predicate, dataType + \"\\n\" +\n+        /*language*/ \"\\n\" + value);\n     } catch (DatabaseException e) {\n       throw new RdfProcessingFailedException(e);\n     }\n   }\n \n   @Override\n-  public void addLanguageTaggedString(String cursor, String subject, String predicate, String value, String language,\n-                                      String graph) throws RdfProcessingFailedException {\n+  public void addLanguageTaggedString(String cursor, String subject, String predicate, String value, String language, String graph) throws RdfProcessingFailedException {\n     try {\n-      put(subject + \"\\n\" +\n-          predicate,\n-          RdfConstants.LANGSTRING + \"\\n\" +\n-          language + \"\\n\" +\n-          value\n-      );\n+      put(subject + \"\\n\" + predicate, RdfConstants.LANGSTRING + \"\\n\" + language + \"\\n\" + value);\n     } catch (DatabaseException e) {\n       throw new RdfProcessingFailedException(e);\n     }\n   }\n \n   @Override\n-  public void delRelation(String cursor, String subject, String predicate, String object, String graph)\n-      throws RdfProcessingFailedException {\n-\n-    new RelationDatabaseAction(){\n-      @Override\n-      public void executeAction(String key, String value) {\n-        delete(key, value);\n-      }\n-    }.execute(subject, predicate, object);\n+  public void delRelation(String cursor, String subject, String predicate, String object, String graph) throws RdfProcessingFailedException {\n+    new RelationDatabaseAction() {\n+  @Override\n+  public void executeAction(String key, String value) {\n+    delete(key, value);\n+  }\n+}.execute(subject, predicate, object);\n   }\n \n   @Override\n-  public void delValue(String cursor, String subject, String predicate, String value, String dataType, String graph)\n-      throws RdfProcessingFailedException {\n+  public void delValue(String cursor, String subject, String predicate, String value, String dataType, String graph) throws RdfProcessingFailedException {\n     try {\n-      delete(subject + \"\\n\" +\n-          predicate,\n-        dataType + \"\\n\" +\n-      /*language*/ \"\\n\" +\n-          value\n-      );\n+      delete(subject + \"\\n\" + predicate, dataType + \"\\n\" +\n+      /*language*/ \"\\n\" + value);\n     } catch (DatabaseException e) {\n       throw new RdfProcessingFailedException(e);\n     }\n   }\n \n   @Override\n-  public void delLanguageTaggedString(String cursor, String subject, String predicate, String value, String language,\n-                                      String graph) throws RdfProcessingFailedException {\n+  public void delLanguageTaggedString(String cursor, String subject, String predicate, String value, String language, String graph) throws RdfProcessingFailedException {\n     try {\n-      delete(subject + \"\\n\" +\n-          predicate,\n-        RdfConstants.LANGSTRING + \"\\n\" +\n-          language + \"\\n\" +\n-          value\n-      );\n+      delete(subject + \"\\n\" + predicate, RdfConstants.LANGSTRING + \"\\n\" + language + \"\\n\" + value);\n     } catch (DatabaseException e) {\n       throw new RdfProcessingFailedException(e);\n     }\n@@ -210,31 +178,31 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n \n   @Override\n   public void processEntities(String cursor, EntityProcessor processor) throws RdfProcessingFailedException {\n-    ListMultimap<String, PredicateData> predicates = MultimapBuilder.hashKeys().arrayListValues().build();\n+    ListMultimap<String, PredicateData> predicates = MultimapBuilder.hashKeys().arrayListValues()\n+                                                                               .build();\n     Map<String, Boolean> inversePredicates = new HashMap<>();\n     String curSubject = \"\";\n     processor.start();\n-\n     DatabaseEntry key = new DatabaseEntry();\n     DatabaseEntry value = new DatabaseEntry();\n     DatabaseFunction getNext = dbCursor -> dbCursor.getNext(key, value, LockMode.DEFAULT);\n-\n     Stopwatch stopwatch = Stopwatch.createStarted();\n     int prevTripleCount = 0;\n     int tripleCount = 0;\n     int subjectCount = 0;\n-    try (Stream<CursorQuad> quadStream = getItems(getNext, getNext, () -> formatResult(key, value))) {\n+    try (Stream<CursorQuad> quadStream = getItems(getNext, getNext,\n+                                                  () -> formatResult(key, value))) {\n       Iterator<CursorQuad> quads = quadStream.iterator();\n       while (quads.hasNext()) {\n         tripleCount++;\n         long elapsed = stopwatch.elapsed(TimeUnit.SECONDS);\n         if (elapsed > 5) {\n-          LOG.info(\"Processed \" + tripleCount + \" triples and \" + subjectCount + \" subjects (\" +\n-            ((tripleCount - prevTripleCount) / (elapsed == 0 ? 1 : elapsed)) + \" triples/s)\" );\n+          LOG.info(\"Processed \" + tripleCount + \" triples and \" + subjectCount + \" subjects (\" + ((tripleCount - prevTripleCount) / (elapsed == 0 ? 1 : elapsed)) + \" triples/s)\");\n           stopwatch.reset();\n           stopwatch.start();\n           prevTripleCount = tripleCount;\n         }\n+\n         CursorQuad quad = quads.next();\n         if (!curSubject.equals(quad.getSubject())) {\n           subjectCount++;\n@@ -243,6 +211,7 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n           predicates.clear();\n           inversePredicates.clear();\n         }\n+\n         String predicate = quad.getPredicate();\n         if (predicate.endsWith(\"_inverse\")) {\n           String origPredicateName = predicate.substring(0, predicate.length() - \"_inverse\".length());\n@@ -253,44 +222,32 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n           }\n         } else {\n           if (quad.getValuetype().isPresent()) {\n-            predicates.put(\n-              predicate,\n-              new ValuePredicate(predicate, quad.getObject(), quad.getValuetype().get())\n-            );\n+            predicates.put(predicate, new ValuePredicate(predicate, quad.getObject(), quad.getValuetype().get()));\n           } else {\n             try (Stream<CursorQuad> objectTypes = this.getQuads(quad.getObject(), RDF_TYPE, \"\")) {\n-              List<String> types = objectTypes\n-                .map(CursorQuad::getObject)\n-                .collect(Collectors.toList());\n+              List<String> types = objectTypes.map(CursorQuad::getObject).collect(Collectors.toList());\n               predicates.put(predicate, new RelationPredicate(predicate, quad.getObject(), types));\n             }\n           }\n         }\n       }\n     }\n-    long elapsed = stopwatch.elapsed(TimeUnit.SECONDS);\n-    LOG.info(\"Done. Processed \" + tripleCount + \" triples and \" + subjectCount + \" subjects (\" +\n-      ((tripleCount - prevTripleCount) / (elapsed == 0 ? 1 : elapsed)) + \" triples/s)\" );\n \n+    long elapsed = stopwatch.elapsed(TimeUnit.SECONDS);\n+    LOG.info(\"Done. Processed \" + tripleCount + \" triples and \" + subjectCount + \" subjects (\" + ((tripleCount - prevTripleCount) / (elapsed == 0 ? 1 : elapsed)) + \" triples/s)\");\n     processor.finish();\n   }\n \n   private abstract class RelationDatabaseAction {\n     public void execute(String subject, String predicate, String object) throws RdfProcessingFailedException {\n       try {\n-        executeAction(subject + \"\\n\" +\n-            predicate,\n+        executeAction(subject + \"\\n\" + predicate,\n         /*dataType*/ \"\\n\" +\n-        /*language*/ \"\\n\" +\n-            object\n-        );\n+        /*language*/ \"\\n\" + object);\n         if (!predicate.equals(RDF_TYPE)) {\n-          executeAction(object + \"\\n\" +\n-              predicate + \"_inverse\",//FIXME!\n+          executeAction(object + \"\\n\" + predicate + \"_inverse\",//FIXME!\n             /*dataType*/ \"\\n\" +\n-            /*language*/ \"\\n\" +\n-              subject\n-          );\n+            /*language*/ \"\\n\" + subject);\n         }\n       } catch (DatabaseException e) {\n         throw new RdfProcessingFailedException(e);\n@@ -299,4 +256,4 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n \n     public abstract void executeAction(String key, String value) throws DatabaseException;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 96
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/2/BdbTripleStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_random/2/BdbTripleStore.java\nindex 6736774787d..049ce8b101d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/2/BdbTripleStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_random/2/BdbTripleStore.java\n@@ -170,7 +170,7 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n   public void delRelation(String cursor, String subject, String predicate, String object, String graph)\n       throws RdfProcessingFailedException {\n \n-    new RelationDatabaseAction(){\n+    new RelationDatabaseAction() {\n       @Override\n       public void executeAction(String key, String value) {\n         delete(key, value);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/2/BdbTripleStore.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_three_grams/2/BdbTripleStore.java\nindex 6736774787d..049ce8b101d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/2/BdbTripleStore.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_three_grams/2/BdbTripleStore.java\n@@ -170,7 +170,7 @@ public class BdbTripleStore extends BerkeleyStore implements EntityProvider, Qua\n   public void delRelation(String cursor, String subject, String predicate, String object, String graph)\n       throws RdfProcessingFailedException {\n \n-    new RelationDatabaseAction(){\n+    new RelationDatabaseAction() {\n       @Override\n       public void executeAction(String key, String value) {\n         delete(key, value);\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
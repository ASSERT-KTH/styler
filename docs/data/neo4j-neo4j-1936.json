{
    "project_name": "neo4j-neo4j",
    "error_id": "1936",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "147",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "321",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1936/Read.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1936/Read.java\nindex a55c40e957a..df22785d4c7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1936/Read.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1936/Read.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api;\n \n import org.neo4j.exceptions.KernelException;\n@@ -40,7 +41,7 @@ public interface Read\n      * @param index descriptor for the index to read from\n      * @return the IndexReadSession.\n      */\n-    IndexReadSession indexReadSession( IndexDescriptor index ) throws IndexNotFoundKernelException;\n+    IndexReadSession indexReadSession(IndexDescriptor index) throws IndexNotFoundKernelException;\n \n     /**\n      * Ensure this transaction is prepared for node label scans. This avoids concurrency issues. Not Thread-safe.\n@@ -49,93 +50,95 @@ public interface Read\n \n     /**\n      * Seek all nodes matching the provided index query in an index.\n-     * @param index {@link IndexReadSession} referencing index to query. This must be an index of nodes.\n-     * @param cursor the cursor to use for consuming the results.\n+     *\n+     * @param index       {@link IndexReadSession} referencing index to query. This must be an index of nodes.\n+     * @param cursor      the cursor to use for consuming the results.\n      * @param constraints The requested constraints on the query result, such as the {@link IndexOrder}, or whether the index should fetch property values\n-     * together with node ids for index queries. The constraints must be satisfiable given the capabilities of the index.\n-     * @param query Combination of {@link IndexQuery index queries} to run against referenced index.\n+     *                    together with node ids for index queries. The constraints must be satisfiable given the capabilities of the index.\n+     * @param query       Combination of {@link IndexQuery index queries} to run against referenced index.\n      */\n-    void nodeIndexSeek( IndexReadSession index, NodeValueIndexCursor cursor, IndexQueryConstraints constraints, IndexQuery... query )\n-            throws KernelException;\n+    void nodeIndexSeek(IndexReadSession index, NodeValueIndexCursor cursor, IndexQueryConstraints constraints, IndexQuery... query)\n+      throws KernelException;\n \n     /**\n      * Seek all relationships matching the provided index query in an index.\n-     * @param index {@link IndexReadSession} referencing index to query. This must be an index of relationships.\n-     * @param cursor the cursor to use for consuming the results.\n+     *\n+     * @param index       {@link IndexReadSession} referencing index to query. This must be an index of relationships.\n+     * @param cursor      the cursor to use for consuming the results.\n      * @param constraints The requested constraints on the query result, such as the {@link IndexOrder}, or whether the index should fetch property values\n-     * together with relationship ids for index queries. The constraints must be satisfiable given the capabilities of the index.\n-     * @param query Combination of {@link IndexQuery index queries} to run against referenced index.\n+     *                    together with relationship ids for index queries. The constraints must be satisfiable given the capabilities of the index.\n+     * @param query       Combination of {@link IndexQuery index queries} to run against referenced index.\n      */\n-    void relationshipIndexSeek( IndexReadSession index, RelationshipValueIndexCursor cursor, IndexQueryConstraints constraints, IndexQuery... query )\n-            throws KernelException;\n+    void relationshipIndexSeek(IndexReadSession index, RelationshipValueIndexCursor cursor, IndexQueryConstraints constraints, IndexQuery... query)\n+      throws KernelException;\n \n     /**\n      * Returns node id of node found in the unique index, or -1 if no node was found.\n-     *\n+     * <p>\n      * Note that this is a very special method and should be use with caution. It has special locking semantics in\n      * order to facilitate unique creation of nodes. If a node is found; a shared lock for the index entry will be\n      * held whereas if no node is found we will hold onto an exclusive lock until the close of the transaction.\n-     *\n+     * <p>\n      * Note: This method does not take an IndexReadSession, as it has to acquire a new index session internally to\n      * ensure node uniqueness.\n      *\n-     * @param index {@link IndexDescriptor} for the index to query.\n-     * @param cursor cursor to use for performing the index seek\n+     * @param index      {@link IndexDescriptor} for the index to query.\n+     * @param cursor     cursor to use for performing the index seek\n      * @param predicates Combination of {@link IndexQuery.ExactPredicate index queries} to run against referenced index.\n      */\n-    long lockingNodeUniqueIndexSeek( IndexDescriptor index,\n-                                     NodeValueIndexCursor cursor,\n-                                     IndexQuery.ExactPredicate... predicates )\n-            throws KernelException;\n+    long lockingNodeUniqueIndexSeek(IndexDescriptor index,\n+                                    NodeValueIndexCursor cursor,\n+                                    IndexQuery.ExactPredicate... predicates)\n+      throws KernelException;\n \n     /**\n      * Scan all values in an index.\n      *\n-     * @param index {@link IndexReadSession} index read session to query.\n-     * @param cursor the cursor to use for consuming the results.\n+     * @param index       {@link IndexReadSession} index read session to query.\n+     * @param cursor      the cursor to use for consuming the results.\n      * @param constraints The requested constraints on the query result, such as the {@link IndexOrder}, or whether the index should fetch property values\n-     * together with node ids for index queries. The constraints must be satisfiable given the capabilities of the index.\n+     *                    together with node ids for index queries. The constraints must be satisfiable given the capabilities of the index.\n      */\n-    void nodeIndexScan( IndexReadSession index, NodeValueIndexCursor cursor, IndexQueryConstraints constraints ) throws KernelException;\n+    void nodeIndexScan(IndexReadSession index, NodeValueIndexCursor cursor, IndexQueryConstraints constraints) throws KernelException;\n \n     /**\n      * Scan all values in an index.\n      *\n-     * @param index {@link IndexReadSession} index read session to query.\n-     * @param cursor the cursor to use for consuming the results.\n+     * @param index       {@link IndexReadSession} index read session to query.\n+     * @param cursor      the cursor to use for consuming the results.\n      * @param constraints The requested constraints on the query result, such as the {@link IndexOrder}, or whether the index should fetch property values\n-     * together with relationship ids for index queries. The constraints must be satisfiable given the capabilities of the index.\n+     *                    together with relationship ids for index queries. The constraints must be satisfiable given the capabilities of the index.\n      */\n-    void relationshipIndexScan( IndexReadSession index, RelationshipValueIndexCursor cursor, IndexQueryConstraints constraints ) throws KernelException;\n+    void relationshipIndexScan(IndexReadSession index, RelationshipValueIndexCursor cursor, IndexQueryConstraints constraints) throws KernelException;\n \n     /**\n      * Scan all nodes with a label.\n      *\n-     * @param label the label\n+     * @param label  the label\n      * @param cursor the cursor to use for consuming the results.\n-     * @param order the requested order on the query result.\n+     * @param order  the requested order on the query result.\n      */\n-    void nodeLabelScan( int label, NodeLabelIndexCursor cursor, IndexOrder order );\n+    void nodeLabelScan(int label, NodeLabelIndexCursor cursor, IndexOrder order);\n \n-    Scan<NodeLabelIndexCursor> nodeLabelScan( int label );\n+    Scan<NodeLabelIndexCursor> nodeLabelScan(int label);\n \n     /**\n      * Return all nodes in the graph.\n      *\n      * @param cursor Cursor to initialize for scanning.\n      */\n-    void allNodesScan( NodeCursor cursor );\n+    void allNodesScan(NodeCursor cursor);\n \n     Scan<NodeCursor> allNodesScan();\n \n     /**\n      * @param reference a reference from {@link NodeCursor#nodeReference()}, {@link\n-     * RelationshipDataAccessor#sourceNodeReference()},\n-     * {@link RelationshipDataAccessor#targetNodeReference()}, {@link NodeIndexCursor#nodeReference()},\n-     * {@link RelationshipIndexCursor#sourceNodeReference()}, or {@link RelationshipIndexCursor#targetNodeReference()}.\n-     * @param cursor the cursor to use for consuming the results.\n+     *                  RelationshipDataAccessor#sourceNodeReference()},\n+     *                  {@link RelationshipDataAccessor#targetNodeReference()}, {@link NodeIndexCursor#nodeReference()},\n+     *                  {@link RelationshipIndexCursor#sourceNodeReference()}, or {@link RelationshipIndexCursor#targetNodeReference()}.\n+     * @param cursor    the cursor to use for consuming the results.\n      */\n-    void singleNode( long reference, NodeCursor cursor );\n+    void singleNode(long reference, NodeCursor cursor);\n \n     /**\n      * Checks if a node exists in the database\n@@ -143,39 +146,39 @@ public interface Read\n      * @param reference The reference of the node to check\n      * @return {@code true} if the node exists, otherwise {@code false}\n      */\n-    boolean nodeExists( long reference );\n+    boolean nodeExists(long reference);\n \n     /**\n      * The number of nodes in the graph, including anything changed in the transaction state.\n-     *\n+     * <p>\n      * If the label parameter is {@link TokenRead#ANY_LABEL}, this method returns the total number of nodes in the graph, i.e.\n      * {@code MATCH (n) RETURN count(n)}.\n-     *\n+     * <p>\n      * If the label parameter is set to any other value, this method returns the number of nodes that has that label,\n      * i.e. {@code MATCH (n:LBL) RETURN count(n)}.\n      *\n      * @param labelId the label to get the count for, or {@link TokenRead#ANY_LABEL} to get the total number of nodes.\n      * @return the number of matching nodes in the graph.\n      */\n-    long countsForNode( int labelId );\n+    long countsForNode(int labelId);\n \n     /**\n      * The number of nodes in the graph, without taking into account anything in the transaction state.\n-     *\n+     * <p>\n      * If the label parameter is {@link TokenRead#ANY_LABEL}, this method returns the total number of nodes in the graph, i.e.\n      * {@code MATCH (n) RETURN count(n)}.\n-     *\n+     * <p>\n      * If the label parameter is set to any other value, this method returns the number of nodes that has that label,\n      * i.e. {@code MATCH (n:LBL) RETURN count(n)}.\n      *\n      * @param labelId the label to get the count for, or {@link TokenRead#ANY_LABEL} to get the total number of nodes.\n      * @return the number of matching nodes in the graph.\n      */\n-    long countsForNodeWithoutTxState( int labelId );\n+    long countsForNodeWithoutTxState(int labelId);\n \n     /**\n      * The number of relationships in the graph, including anything changed in the transaction state.\n-     *\n+     * <p>\n      * Returns the number of relationships in the graph that matches the specified pattern,\n      * {@code (:startLabelId)-[:typeId]->(:endLabelId)}, like so:\n      *\n@@ -217,11 +220,11 @@ public interface Read\n      * @param endLabelId   the label of the end node of relationships to get the count for, or {@link TokenRead#ANY_LABEL}.\n      * @return the number of matching relationships in the graph.\n      */\n-    long countsForRelationship( int startLabelId, int typeId, int endLabelId );\n+    long countsForRelationship(int startLabelId, int typeId, int endLabelId);\n \n     /**\n      * The number of relationships in the graph, without taking into account anything in the transaction state.\n-     *\n+     * <p>\n      * Returns the number of relationships in the graph that matches the specified pattern,\n      * {@code (:startLabelId)-[:typeId]->(:endLabelId)}, like so:\n      *\n@@ -263,29 +266,27 @@ public interface Read\n      * @param endLabelId   the label of the end node of relationships to get the count for, or {@link TokenRead#ANY_LABEL}.\n      * @return the number of matching relationships in the graph.\n      */\n-    long countsForRelationshipWithoutTxState( int startLabelId, int typeId, int endLabelId );\n+    long countsForRelationshipWithoutTxState(int startLabelId, int typeId, int endLabelId);\n \n     /**\n      * Count of the total number of nodes in the database including changes in the current transaction.\n      *\n      * @return the total number of nodes in the database\n      */\n-    long nodesGetCount( );\n+    long nodesGetCount();\n \n     /**\n      * Count of the total number of relationships in the database including changes in the current transaction.\n      *\n      * @return the total number of relationships in the database\n      */\n-    long relationshipsGetCount( );\n+    long relationshipsGetCount();\n \n     /**\n-     * @param reference\n-     *         a reference from {@link RelationshipDataAccessor#relationshipReference()}.\n-     * @param cursor\n-     *         the cursor to use for consuming the results.\n+     * @param reference a reference from {@link RelationshipDataAccessor#relationshipReference()}.\n+     * @param cursor    the cursor to use for consuming the results.\n      */\n-    void singleRelationship( long reference, RelationshipScanCursor cursor );\n+    void singleRelationship(long reference, RelationshipScanCursor cursor);\n \n     /**\n      * Checks if a relationship exists in the database\n@@ -293,88 +294,82 @@ public interface Read\n      * @param reference The reference of the relationship to check\n      * @return <tt>true</tt> if the relationship exists, otherwise <tt>false</tt>\n      */\n-    boolean relationshipExists( long reference );\n+    boolean relationshipExists(long reference);\n \n-    void allRelationshipsScan( RelationshipScanCursor cursor );\n+    void allRelationshipsScan(RelationshipScanCursor cursor);\n \n     Scan<RelationshipScanCursor> allRelationshipsScan();\n \n-    void relationshipTypeScan( int type, RelationshipScanCursor cursor );\n+    void relationshipTypeScan(int type, RelationshipScanCursor cursor);\n \n     /**\n      * Scan all relationships of a type.\n      *\n-     * @param type the relationship type\n+     * @param type                        the relationship type\n      * @param relationshipTypeIndexCursor the cursor to use for consuming the results.\n-     * @param order the requested order on the query result.\n+     * @param order                       the requested order on the query result.\n      */\n-    void relationshipTypeScan( int type, RelationshipTypeIndexCursor relationshipTypeIndexCursor, IndexOrder order );\n+    void relationshipTypeScan(int type, RelationshipTypeIndexCursor relationshipTypeIndexCursor, IndexOrder order);\n \n     /**\n-     * @param nodeReference\n-     *         a reference from {@link NodeCursor#nodeReference()}.\n-     * @param reference\n-     *         a reference to start of relationships.\n-     * @param selection\n-     *         which relationships to select.\n-     * @param cursor\n-     *         the cursor to use for consuming the results.\n+     * @param nodeReference a reference from {@link NodeCursor#nodeReference()}.\n+     * @param reference     a reference to start of relationships.\n+     * @param selection     which relationships to select.\n+     * @param cursor        the cursor to use for consuming the results.\n      */\n     // Used by APOC.\n-    void relationships( long nodeReference, long reference, RelationshipSelection selection, RelationshipTraversalCursor cursor );\n+    void relationships(long nodeReference, long reference, RelationshipSelection selection, RelationshipTraversalCursor cursor);\n \n     /**\n-     * @param nodeReference\n-     *         the owner of the properties.\n-     * @param reference\n-     *         a reference from {@link NodeCursor#propertiesReference()}.\n-     * @param cursor\n-     *         the cursor to use for consuming the results.\n+     * @param nodeReference the owner of the properties.\n+     * @param reference     a reference from {@link NodeCursor#propertiesReference()}.\n+     * @param cursor        the cursor to use for consuming the results.\n      */\n     // Used by APOC and GDS.\n-    void nodeProperties( long nodeReference, long reference, PropertyCursor cursor );\n+    void nodeProperties(long nodeReference, long reference, PropertyCursor cursor);\n \n     /**\n-     * @param relationshipReference\n-     *         the owner of the properties.\n-     * @param reference\n-     *         a reference from {@link RelationshipDataAccessor#propertiesReference()}.\n-     * @param cursor\n-     *         the cursor to use for consuming the results.\n+     * @param relationshipReference the owner of the properties.\n+     * @param reference             a reference from {@link RelationshipDataAccessor#propertiesReference()}.\n+     * @param cursor                the cursor to use for consuming the results.\n      */\n-    void relationshipProperties( long relationshipReference, long reference, PropertyCursor cursor );\n+    void relationshipProperties(long relationshipReference, long reference, PropertyCursor cursor);\n \n     /**\n      * Checks if a node was deleted in the current transaction\n+     *\n      * @param node the node to check\n      * @return <code>true</code> if the node was deleted otherwise <code>false</code>\n      */\n-    boolean nodeDeletedInTransaction( long node );\n+    boolean nodeDeletedInTransaction(long node);\n \n     /**\n      * Checks if a relationship was deleted in the current transaction\n+     *\n      * @param relationship the relationship to check\n      * @return <code>true</code> if the relationship was deleted otherwise <code>false</code>\n      */\n-    boolean relationshipDeletedInTransaction( long relationship );\n+    boolean relationshipDeletedInTransaction(long relationship);\n \n     /**\n      * Returns the value of a node property if set in this transaction.\n-     * @param node the node\n+     *\n+     * @param node          the node\n      * @param propertyKeyId the property key id of interest\n      * @return <code>null</code> if the property has not been changed for the node in this transaction. Otherwise returns\n-     *         the new property value, or {@link Values#NO_VALUE} if the property has been removed in this transaction.\n+     * the new property value, or {@link Values#NO_VALUE} if the property has been removed in this transaction.\n      */\n-    Value nodePropertyChangeInTransactionOrNull( long node, int propertyKeyId );\n+    Value nodePropertyChangeInTransactionOrNull(long node, int propertyKeyId);\n \n     /**\n      * Returns the value of a relationship property if set in this transaction.\n-     * @param relationship the relationship\n+     *\n+     * @param relationship  the relationship\n      * @param propertyKeyId the property key id of interest\n      * @return <code>null</code> if the property has not been changed for the relationship in this transaction. Otherwise returns\n-     *         the new property value, or {@link Values#NO_VALUE} if the property has been removed in this transaction.\n+     * the new property value, or {@link Values#NO_VALUE} if the property has been removed in this transaction.\n      */\n-    Value relationshipPropertyChangeInTransactionOrNull( long relationship, int propertyKeyId );\n+    Value relationshipPropertyChangeInTransactionOrNull(long relationship, int propertyKeyId);\n \n     /**\n      * @return whether there are changes in the transaction state.\n",
            "diff_size": 101
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1936/Read.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1936/Read.java\nindex a55c40e957a..add3cf71806 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1936/Read.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1936/Read.java\n@@ -83,8 +83,7 @@ public interface Read\n      * @param cursor cursor to use for performing the index seek\n      * @param predicates Combination of {@link IndexQuery.ExactPredicate index queries} to run against referenced index.\n      */\n-    long lockingNodeUniqueIndexSeek( IndexDescriptor index,\n-                                     NodeValueIndexCursor cursor,\n+    long lockingNodeUniqueIndexSeek( IndexDescriptor index, NodeValueIndexCursor cursor,\n                                      IndexQuery.ExactPredicate... predicates )\n             throws KernelException;\n \n@@ -270,14 +269,14 @@ public interface Read\n      *\n      * @return the total number of nodes in the database\n      */\n-    long nodesGetCount( );\n+    long nodesGetCount();\n \n     /**\n      * Count of the total number of relationships in the database including changes in the current transaction.\n      *\n      * @return the total number of relationships in the database\n      */\n-    long relationshipsGetCount( );\n+    long relationshipsGetCount();\n \n     /**\n      * @param reference\n@@ -380,4 +379,4 @@ public interface Read\n      * @return whether there are changes in the transaction state.\n      */\n     boolean transactionStateHasChanges();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "3065",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "153",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3065/IndexConfigMigrator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3065/IndexConfigMigrator.java\nindex 598652954e2..9c62895f3c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3065/IndexConfigMigrator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3065/IndexConfigMigrator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.storemigration;\n \n import java.io.IOException;\n@@ -57,10 +58,10 @@ public class IndexConfigMigrator extends AbstractStoreMigrationParticipant\n     private final PageCacheTracer pageCacheTracer;\n     private final MemoryTracker memoryTracker;\n \n-    IndexConfigMigrator( FileSystemAbstraction fs, Config config, PageCache pageCache, LogService logService, StorageEngineFactory storageEngineFactory,\n-            IndexProviderMap indexProviderMap, Log log, PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker )\n+    IndexConfigMigrator(FileSystemAbstraction fs, Config config, PageCache pageCache, LogService logService, StorageEngineFactory storageEngineFactory,\n+                        IndexProviderMap indexProviderMap, Log log, PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker)\n     {\n-        super( \"Index config\" );\n+        super(\"Index config\");\n         this.fs = fs;\n         this.config = config;\n         this.pageCache = pageCache;\n@@ -73,81 +74,81 @@ public class IndexConfigMigrator extends AbstractStoreMigrationParticipant\n     }\n \n     @Override\n-    public void migrate( DatabaseLayout directoryLayout, DatabaseLayout migrationLayout, ProgressReporter progress, String versionToMigrateFrom,\n-            String versionToMigrateTo ) throws IOException, KernelException\n+    public void migrate(DatabaseLayout directoryLayout, DatabaseLayout migrationLayout, ProgressReporter progress, String versionToMigrateFrom,\n+                        String versionToMigrateTo) throws IOException, KernelException\n     {\n-        if ( needConfigMigration( versionToMigrateFrom, versionToMigrateTo ) )\n+        if (needConfigMigration(versionToMigrateFrom, versionToMigrateTo))\n         {\n-            migrateIndexConfigs( directoryLayout, migrationLayout, versionToMigrateTo );\n+            migrateIndexConfigs(directoryLayout, migrationLayout, versionToMigrateTo);\n         }\n     }\n \n-    private void migrateIndexConfigs( DatabaseLayout directoryLayout, DatabaseLayout migrationLayout, String versionToMigrateTo )\n-            throws IOException, KernelException\n+    private void migrateIndexConfigs(DatabaseLayout directoryLayout, DatabaseLayout migrationLayout, String versionToMigrateTo)\n+      throws IOException, KernelException\n     {\n-        try ( var cursorTracer = pageCacheTracer.createPageCursorTracer( INDEX_CONFIG_MIGRATION_TAG );\n-                var ruleAccess = storageEngineFactory.schemaRuleMigrationAccess( fs, pageCache, config, migrationLayout, logService,\n-                versionToMigrateTo, pageCacheTracer, cursorTracer, memoryTracker ) )\n+        try (var cursorTracer = pageCacheTracer.createPageCursorTracer(INDEX_CONFIG_MIGRATION_TAG);\n+             var ruleAccess = storageEngineFactory.schemaRuleMigrationAccess(fs, pageCache, config, migrationLayout, logService,\n+               versionToMigrateTo, pageCacheTracer, cursorTracer, memoryTracker))\n         {\n-            for ( SchemaRule rule : ruleAccess.getAll() )\n+            for (SchemaRule rule : ruleAccess.getAll())\n             {\n-                SchemaRule upgraded = migrateIndexConfig( rule, directoryLayout, fs, pageCache, indexProviderMap, log, cursorTracer );\n+                SchemaRule upgraded = migrateIndexConfig(rule, directoryLayout, fs, pageCache, indexProviderMap, log, cursorTracer);\n \n-                if ( upgraded != rule )\n+                if (upgraded != rule)\n                 {\n-                    ruleAccess.writeSchemaRule( upgraded );\n+                    ruleAccess.writeSchemaRule(upgraded);\n                 }\n             }\n         }\n     }\n \n-    public static SchemaRule migrateIndexConfig( SchemaRule rule, DatabaseLayout directoryLayout, FileSystemAbstraction fs, PageCache pageCache,\n-            IndexProviderMap indexProviderMap, Log log, PageCursorTracer cursorTracer ) throws IOException\n+    public static SchemaRule migrateIndexConfig(SchemaRule rule, DatabaseLayout directoryLayout, FileSystemAbstraction fs, PageCache pageCache,\n+                                                IndexProviderMap indexProviderMap, Log log, PageCursorTracer cursorTracer) throws IOException\n     {\n-        if ( rule instanceof IndexDescriptor )\n+        if (rule instanceof IndexDescriptor)\n         {\n             IndexDescriptor old = (IndexDescriptor) rule;\n             long indexId = old.getId();\n             IndexProviderDescriptor provider = old.getIndexProvider();\n \n-            IndexMigration indexMigration = IndexMigration.migrationFromOldProvider( provider.getKey(), provider.getVersion() );\n+            IndexMigration indexMigration = IndexMigration.migrationFromOldProvider(provider.getKey(), provider.getVersion());\n \n-            IndexConfig indexConfig = indexMigration.extractIndexConfig( fs, pageCache, directoryLayout, indexId, cursorTracer, log );\n+            IndexConfig indexConfig = indexMigration.extractIndexConfig(fs, pageCache, directoryLayout, indexId, cursorTracer, log);\n \n-            IndexDescriptor newIndexReference = old.withIndexConfig( indexConfig );\n-            IndexProvider indexProvider = indexProviderMap.lookup( indexMigration.desiredAlternativeProvider );\n-            return indexProvider.completeConfiguration( newIndexReference );\n+            IndexDescriptor newIndexReference = old.withIndexConfig(indexConfig);\n+            IndexProvider indexProvider = indexProviderMap.lookup(indexMigration.desiredAlternativeProvider);\n+            return indexProvider.completeConfiguration(newIndexReference);\n         }\n         return rule;\n     }\n \n     @Override\n-    public void moveMigratedFiles( DatabaseLayout migrationLayout, DatabaseLayout directoryLayout, String versionToMigrateFrom, String versionToMigrateTo )\n-            throws IOException\n+    public void moveMigratedFiles(DatabaseLayout migrationLayout, DatabaseLayout directoryLayout, String versionToMigrateFrom, String versionToMigrateTo)\n+      throws IOException\n     {\n-        if ( needConfigMigration( versionToMigrateFrom, versionToMigrateTo ) )\n+        if (needConfigMigration(versionToMigrateFrom, versionToMigrateTo))\n         {\n-            for ( IndexMigration indexMigration : IndexMigration.nonRetired() )\n+            for (IndexMigration indexMigration : IndexMigration.nonRetired())\n             {\n-                for ( Path nonRetiredRootDirectory : indexMigration.providerRootDirectories( directoryLayout ) )\n+                for (Path nonRetiredRootDirectory : indexMigration.providerRootDirectories(directoryLayout))\n                 {\n-                    fs.deleteRecursively( nonRetiredRootDirectory );\n+                    fs.deleteRecursively(nonRetiredRootDirectory);\n                 }\n             }\n         }\n     }\n \n     @Override\n-    public void cleanup( DatabaseLayout migrationLayout )\n+    public void cleanup(DatabaseLayout migrationLayout)\n \n     {\n         // Nothing to clean up\n     }\n \n-    private boolean needConfigMigration( String versionToMigrateFrom, String versionToMigrateTo )\n+    private boolean needConfigMigration(String versionToMigrateFrom, String versionToMigrateTo)\n     {\n-        StoreVersion fromVersionInformation = storageEngineFactory.versionInformation( versionToMigrateFrom );\n-        StoreVersion toVersionInformation = storageEngineFactory.versionInformation( versionToMigrateTo );\n-        return !fromVersionInformation.hasCompatibleCapabilities( toVersionInformation, CapabilityType.INDEX_CONFIG );\n+        StoreVersion fromVersionInformation = storageEngineFactory.versionInformation(versionToMigrateFrom);\n+        StoreVersion toVersionInformation = storageEngineFactory.versionInformation(versionToMigrateTo);\n+        return !fromVersionInformation.hasCompatibleCapabilities(toVersionInformation, CapabilityType.INDEX_CONFIG);\n     }\n }\n",
            "diff_size": 36
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3065/IndexConfigMigrator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3065/IndexConfigMigrator.java\nindex 598652954e2..7100bc2ca3f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3065/IndexConfigMigrator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3065/IndexConfigMigrator.java\n@@ -150,4 +150,4 @@ public class IndexConfigMigrator extends AbstractStoreMigrationParticipant\n         StoreVersion toVersionInformation = storageEngineFactory.versionInformation( versionToMigrateTo );\n         return !fromVersionInformation.hasCompatibleCapabilities( toVersionInformation, CapabilityType.INDEX_CONFIG );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
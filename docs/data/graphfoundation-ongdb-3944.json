{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3944",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "58",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3944/VersionContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3944/VersionContext.java\nindex 00dcfc33b52..b1cb6854956 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3944/VersionContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3944/VersionContext.java\n@@ -17,11 +17,12 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.tracing.cursor.context;\n \n /**\n  * Context that contains state of ongoing versioned data read or write.\n- *\n+ * <p>\n  * <br/>\n  * Context can be in one of two states:\n  * <ul>\n@@ -44,38 +45,42 @@ package org.neo4j.io.pagecache.tracing.cursor.context;\n  */\n public interface VersionContext\n {\n-    /**\n-     * Initialise read context with latest closed transaction id as it current version.\n-     */\n-    void initRead();\n+  /**\n+   * Initialise read context with latest closed transaction id as it current version.\n+   */\n+  void initRead();\n \n-    /**\n-     * Initialise write context with committingTxId as modification version.\n-     * @param committingTxId currently committing transaction id\n-     */\n-    void initWrite( long committingTxId );\n+  /**\n+   * Initialise write context with committingTxId as modification version.\n+   *\n+   * @param committingTxId currently committing transaction id\n+   */\n+  void initWrite(long committingTxId);\n \n-    /**\n-     * Context currently committing transaction id\n-     * @return committing transaction id\n-     */\n-    long committingTransactionId();\n+  /**\n+   * Context currently committing transaction id\n+   *\n+   * @return committing transaction id\n+   */\n+  long committingTransactionId();\n \n-    /**\n-     * Last closed transaction id that read context was initialised with\n-     * @return last closed transaction id\n-     */\n-    long lastClosedTransactionId();\n+  /**\n+   * Last closed transaction id that read context was initialised with\n+   *\n+   * @return last closed transaction id\n+   */\n+  long lastClosedTransactionId();\n \n-    /**\n-     * Mark current context as dirty\n-     */\n-    void markAsDirty();\n+  /**\n+   * Mark current context as dirty\n+   */\n+  void markAsDirty();\n \n-    /**\n-     * Check whenever current context is dirty\n-     * @return true if context is dirty, false otherwise\n-     */\n-    boolean isDirty();\n+  /**\n+   * Check whenever current context is dirty\n+   *\n+   * @return true if context is dirty, false otherwise\n+   */\n+  boolean isDirty();\n \n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3944/VersionContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3944/VersionContext.java\nindex 00dcfc33b52..beaef91dbd7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3944/VersionContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3944/VersionContext.java\n@@ -77,5 +77,4 @@ public interface VersionContext\n      * @return true if context is dirty, false otherwise\n      */\n     boolean isDirty();\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
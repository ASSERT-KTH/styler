{
    "project_name": "graphfoundation-ongdb",
    "error_id": "434",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "115",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/434/DelegateInvocationHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/434/DelegateInvocationHandler.java\nindex 3e356182219..9f61888d065 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/434/DelegateInvocationHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/434/DelegateInvocationHandler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha;\n \n import java.lang.reflect.InvocationHandler;\n@@ -32,153 +33,152 @@ import org.neo4j.kernel.impl.util.LazySingleReference;\n /**\n  * InvocationHandler for dynamic proxies that delegate calls to a given backing implementation. This is mostly\n  * used to present a single object to others, while being able to switch implementation at runtime.\n- *\n+ * <p>\n  * {@link #cement()}: acquire a proxy that will have its delegate assigned the next call to\n  * {@link #setDelegate(Object)}. This is useful if one {@link DelegateInvocationHandler} depends on\n  * another which will have its delegate set later than this one.\n  */\n public class DelegateInvocationHandler<T> implements InvocationHandler\n {\n-    private volatile T delegate;\n+  private volatile T delegate;\n \n-    // A concrete version of delegate, where a user can request to cement this delegate so that it gets concrete\n-    // the next call to setDelegate and will never change since.\n-    private final LazySingleReference<T> concrete;\n+  // A concrete version of delegate, where a user can request to cement this delegate so that it gets concrete\n+  // the next call to setDelegate and will never change since.\n+  private final LazySingleReference<T> concrete;\n \n-    public DelegateInvocationHandler( final Class<T> interfaceClass )\n+  public DelegateInvocationHandler(final Class<T> interfaceClass)\n+  {\n+    concrete = new LazySingleReference<T>()\n     {\n-        concrete = new LazySingleReference<T>()\n-        {\n-            @SuppressWarnings( \"unchecked\" )\n-            @Override\n-            protected T create()\n-            {\n-                return (T) Proxy.newProxyInstance( DelegateInvocationHandler.class.getClassLoader(),\n-                        new Class[] {interfaceClass}, new Concrete<>() );\n-            }\n-        };\n-    }\n-\n-    /**\n-     * Updates the delegate for this handler, also {@link #harden() hardens} instances\n-     * {@link #cement() cemented} from the last call to {@link #setDelegate(Object)}.\n-     * This call will also dereference the {@link DelegateInvocationHandler.Concrete},\n-     * such that future calls to {@link #harden()} cannot affect any reference received\n-     * from {@link #cement()} prior to this call.\n-     * @param delegate the new delegate to set.\n-     *\n-     * @return the old delegate\n-     */\n-    public T setDelegate( T delegate )\n+      @SuppressWarnings(\"unchecked\")\n+      @Override\n+      protected T create()\n+      {\n+        return (T) Proxy.newProxyInstance(DelegateInvocationHandler.class.getClassLoader(),\n+            new Class[] {interfaceClass}, new Concrete<>());\n+      }\n+    };\n+  }\n+\n+  /**\n+   * Updates the delegate for this handler, also {@link #harden() hardens} instances\n+   * {@link #cement() cemented} from the last call to {@link #setDelegate(Object)}.\n+   * This call will also dereference the {@link DelegateInvocationHandler.Concrete},\n+   * such that future calls to {@link #harden()} cannot affect any reference received\n+   * from {@link #cement()} prior to this call.\n+   *\n+   * @param delegate the new delegate to set.\n+   * @return the old delegate\n+   */\n+  public T setDelegate(T delegate)\n+  {\n+    T oldDelegate = this.delegate;\n+    this.delegate = delegate;\n+    harden();\n+    concrete.invalidate();\n+    return oldDelegate;\n+  }\n+\n+  /**\n+   * Updates {@link #cement() cemented} delegates with the current delegate, making it concrete.\n+   * Callers of {@link #cement()} in between this call and the previous call to {@link #setDelegate(Object)}\n+   * will see the current delegate.\n+   */\n+  @SuppressWarnings(\"unchecked\")\n+  void harden()\n+  {\n+    ((Concrete<T>) Proxy.getInvocationHandler(concrete.get())).set(delegate);\n+  }\n+\n+  @Override\n+  public Object invoke(Object proxy, Method method, Object[] args) throws Throwable\n+  {\n+    if (delegate == null)\n     {\n-        T oldDelegate = this.delegate;\n-        this.delegate = delegate;\n-        harden();\n-        concrete.invalidate();\n-        return oldDelegate;\n+      throw new StateChangedTransactionFailureException(\n+          \"This transaction made assumptions about the instance it is executing \" +\n+              \"on that no longer hold true. This normally happens when a transaction \" +\n+              \"expects the instance it is executing on to be in some specific cluster role\" +\n+              \"(such as 'master' or 'slave') and the instance \" +\n+              \"changing state while the transaction is executing. Simply retry your \" +\n+              \"transaction and you should see a successful outcome.\");\n     }\n+    return proxyInvoke(delegate, method, args);\n+  }\n \n-    /**\n-     * Updates {@link #cement() cemented} delegates with the current delegate, making it concrete.\n-     * Callers of {@link #cement()} in between this call and the previous call to {@link #setDelegate(Object)}\n-     * will see the current delegate.\n-     */\n-    @SuppressWarnings( \"unchecked\" )\n-    void harden()\n+  private static Object proxyInvoke(Object delegate, Method method, Object[] args)\n+      throws Throwable\n+  {\n+    try\n     {\n-        ((Concrete<T>) Proxy.getInvocationHandler( concrete.get() )).set( delegate );\n-    }\n-\n-    @Override\n-    public Object invoke( Object proxy, Method method, Object[] args ) throws Throwable\n+      return method.invoke(delegate, args);\n+    } catch (InvocationTargetException e)\n     {\n-        if ( delegate == null )\n-        {\n-            throw new StateChangedTransactionFailureException(\n-                    \"This transaction made assumptions about the instance it is executing \" +\n-                    \"on that no longer hold true. This normally happens when a transaction \" +\n-                    \"expects the instance it is executing on to be in some specific cluster role\" +\n-                    \"(such as 'master' or 'slave') and the instance \" +\n-                    \"changing state while the transaction is executing. Simply retry your \" +\n-                    \"transaction and you should see a successful outcome.\" );\n-        }\n-        return proxyInvoke( delegate, method, args );\n+      throw e.getCause();\n     }\n+  }\n+\n+  /**\n+   * Cements this delegate, i.e. returns an instance which will have its delegate assigned and hardened\n+   * later on so that it never will change after that point.\n+   */\n+  public T cement()\n+  {\n+    return concrete.get();\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"Delegate[\" + delegate + \"]\";\n+  }\n+\n+  private static class Concrete<T> implements InvocationHandler\n+  {\n+    private volatile T delegate;\n \n-    private static Object proxyInvoke( Object delegate, Method method, Object[] args )\n-            throws Throwable\n+    void set(T delegate)\n     {\n-        try\n-        {\n-            return method.invoke( delegate, args );\n-        }\n-        catch ( InvocationTargetException e )\n-        {\n-            throw e.getCause();\n-        }\n+      this.delegate = delegate;\n     }\n \n-    /**\n-     * Cements this delegate, i.e. returns an instance which will have its delegate assigned and hardened\n-     * later on so that it never will change after that point.\n-     */\n-    public T cement()\n+    @Override\n+    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable\n     {\n-        return concrete.get();\n+      if (delegate == null)\n+      {\n+        throw new TransientDatabaseFailureException(\n+            \"Instance state is not valid. There is no master currently available. Possible causes \" +\n+                \"include unavailability of a majority of the cluster members or network failure \" +\n+                \"that caused this instance to be partitioned away from the cluster\");\n+      }\n+\n+      return proxyInvoke(delegate, method, args);\n     }\n \n     @Override\n     public String toString()\n     {\n-        return \"Delegate[\" + delegate + \"]\";\n+      return \"Concrete[\" + delegate + \"]\";\n     }\n-\n-    private static class Concrete<T> implements InvocationHandler\n+  }\n+\n+  /**\n+   * Because we don't want the public API to implement `HasStatus`, and because\n+   * we don't want to change the API from throwing `TransactionFailureException` for\n+   * backwards compat reasons, we throw this sub-class that adds a status code.\n+   */\n+  static class StateChangedTransactionFailureException extends TransactionFailureException implements Status.HasStatus\n+  {\n+    StateChangedTransactionFailureException(String msg)\n     {\n-        private volatile T delegate;\n-\n-        void set( T delegate )\n-        {\n-            this.delegate = delegate;\n-        }\n-\n-        @Override\n-        public Object invoke( Object proxy, Method method, Object[] args ) throws Throwable\n-        {\n-            if ( delegate == null )\n-            {\n-                throw new TransientDatabaseFailureException(\n-                        \"Instance state is not valid. There is no master currently available. Possible causes \" +\n-                                \"include unavailability of a majority of the cluster members or network failure \" +\n-                                \"that caused this instance to be partitioned away from the cluster\" );\n-            }\n-\n-            return proxyInvoke( delegate, method, args );\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"Concrete[\" + delegate + \"]\";\n-        }\n+      super(msg);\n     }\n \n-    /**\n-     * Because we don't want the public API to implement `HasStatus`, and because\n-     * we don't want to change the API from throwing `TransactionFailureException` for\n-     * backwards compat reasons, we throw this sub-class that adds a status code.\n-     */\n-    static class StateChangedTransactionFailureException extends TransactionFailureException implements Status.HasStatus\n+    @Override\n+    public Status status()\n     {\n-        StateChangedTransactionFailureException( String msg )\n-        {\n-            super( msg );\n-        }\n-\n-        @Override\n-        public Status status()\n-        {\n-            return Status.Transaction.InstanceStateChanged;\n-        }\n+      return Status.Transaction.InstanceStateChanged;\n     }\n+  }\n }\n",
            "diff_size": 183
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 475).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "143",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 305).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/434/DelegateInvocationHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/434/DelegateInvocationHandler.java\nindex 3e356182219..10160d05b6d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/434/DelegateInvocationHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/434/DelegateInvocationHandler.java\n@@ -53,9 +53,8 @@ public class DelegateInvocationHandler<T> implements InvocationHandler\n             @Override\n             protected T create()\n             {\n-                return (T) Proxy.newProxyInstance( DelegateInvocationHandler.class.getClassLoader(),\n-                        new Class[] {interfaceClass}, new Concrete<>() );\n-            }\n+                return (T) Proxy.newProxyInstance( DelegateInvocationHandler.class.getClassLoader(), new Class[]{interfaceClass}, new Concrete<>() );\n+    }\n         };\n     }\n \n@@ -94,20 +93,14 @@ public class DelegateInvocationHandler<T> implements InvocationHandler\n     {\n         if ( delegate == null )\n         {\n-            throw new StateChangedTransactionFailureException(\n-                    \"This transaction made assumptions about the instance it is executing \" +\n-                    \"on that no longer hold true. This normally happens when a transaction \" +\n-                    \"expects the instance it is executing on to be in some specific cluster role\" +\n-                    \"(such as 'master' or 'slave') and the instance \" +\n-                    \"changing state while the transaction is executing. Simply retry your \" +\n-                    \"transaction and you should see a successful outcome.\" );\n+            throw new StateChangedTransactionFailureException( \"This transaction made assumptions about the instance it is executing \" + \"on that no longer hold true. This normally happens when a transaction \" + \"expects the instance it is executing on to be in some specific cluster role\" + \"(such as 'master' or 'slave') and the instance \" + \"changing state while the transaction is executing. Simply retry your \" + \"transaction and you should see a successful outcome.\" );\n         }\n-        return proxyInvoke( delegate, method, args );\n+\n+return proxyInvoke( delegate, method, args );\n     }\n \n-    private static Object proxyInvoke( Object delegate, Method method, Object[] args )\n-            throws Throwable\n-    {\n+    private static Object proxyInvoke( Object delegate, Method method, Object[] args ) throws Throwable\n+{\n         try\n         {\n             return method.invoke( delegate, args );\n@@ -147,11 +140,8 @@ public class DelegateInvocationHandler<T> implements InvocationHandler\n         {\n             if ( delegate == null )\n             {\n-                throw new TransientDatabaseFailureException(\n-                        \"Instance state is not valid. There is no master currently available. Possible causes \" +\n-                                \"include unavailability of a majority of the cluster members or network failure \" +\n-                                \"that caused this instance to be partitioned away from the cluster\" );\n-            }\n+                throw new TransientDatabaseFailureException( \"Instance state is not valid. There is no master currently available. Possible causes \" + \"include unavailability of a majority of the cluster members or network failure \" + \"that caused this instance to be partitioned away from the cluster\" );\n+    }\n \n             return proxyInvoke( delegate, method, args );\n         }\n@@ -181,4 +171,4 @@ public class DelegateInvocationHandler<T> implements InvocationHandler\n             return Status.Transaction.InstanceStateChanged;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
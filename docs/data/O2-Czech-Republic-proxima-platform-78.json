{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "78",
    "information": {
        "errors": [
            {
                "line": "30",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 95).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import org.apache.beam.sdk.values.TypeDescriptor;\n\npublic class AttributeDescriptorCoder extends AbstractRepositoryCoder<AttributeDescriptor<?>> {\n\n  private static final long serialVersionUID = 1L;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/78/AttributeDescriptorCoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/78/AttributeDescriptorCoder.java\nindex b7950c0a5a2..eefdada91fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/78/AttributeDescriptorCoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/78/AttributeDescriptorCoder.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.beam.core.io;\n \n import cz.o2.proxima.repository.AttributeDescriptor;\n@@ -27,7 +28,8 @@ import org.apache.beam.sdk.coders.CoderException;\n import org.apache.beam.sdk.coders.StringUtf8Coder;\n import org.apache.beam.sdk.values.TypeDescriptor;\n \n-public class AttributeDescriptorCoder extends AbstractRepositoryCoder<AttributeDescriptor<?>> {\n+public class AttributeDescriptorCoder\n+    extends AbstractRepositoryCoder<AttributeDescriptor<?>> {\n \n   private static final long serialVersionUID = 1L;\n \n@@ -78,5 +80,6 @@ public class AttributeDescriptorCoder extends AbstractRepositoryCoder<AttributeD\n   }\n \n   @Override\n-  public void verifyDeterministic() {}\n+  public void verifyDeterministic() {\n+  }\n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/78/AttributeDescriptorCoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/78/AttributeDescriptorCoder.java\nindex b7950c0a5a2..167b5f1e039 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/78/AttributeDescriptorCoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/78/AttributeDescriptorCoder.java\n@@ -79,4 +79,4 @@ public class AttributeDescriptorCoder extends AbstractRepositoryCoder<AttributeD\n \n   @Override\n   public void verifyDeterministic() {}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/78/AttributeDescriptorCoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/78/AttributeDescriptorCoder.java\nindex b7950c0a5a2..77795e8053b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/78/AttributeDescriptorCoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/78/AttributeDescriptorCoder.java\n@@ -27,6 +27,7 @@ import org.apache.beam.sdk.coders.CoderException;\n import org.apache.beam.sdk.coders.StringUtf8Coder;\n import org.apache.beam.sdk.values.TypeDescriptor;\n \n+\n public class AttributeDescriptorCoder extends AbstractRepositoryCoder<AttributeDescriptor<?>> {\n \n   private static final long serialVersionUID = 1L;\n@@ -47,6 +48,7 @@ public class AttributeDescriptorCoder extends AbstractRepositoryCoder<AttributeD\n    * @param factory the repository factory for the coder\n    * @return the coder\n    */\n+\n   public static AttributeDescriptorCoder of(RepositoryFactory factory) {\n     return new AttributeDescriptorCoder(factory);\n   }\n@@ -58,8 +60,7 @@ public class AttributeDescriptorCoder extends AbstractRepositoryCoder<AttributeD\n   }\n \n   @Override\n-  public void encode(AttributeDescriptor<?> value, OutputStream outStream)\n-      throws CoderException, IOException {\n+  public void encode(AttributeDescriptor<?> value, OutputStream outStream) throws CoderException, IOException {\n     STRING_CODER.encode(value.getEntity(), outStream);\n     STRING_CODER.encode(value.getName(), outStream);\n   }\n@@ -79,4 +80,4 @@ public class AttributeDescriptorCoder extends AbstractRepositoryCoder<AttributeD\n \n   @Override\n   public void verifyDeterministic() {}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "30",
                    "column": "93",
                    "severity": "error",
                    "message": "GenericWhitespace '>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "30",
                    "column": "93",
                    "severity": "error",
                    "message": "GenericWhitespace '>' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "'class def lcurly' has incorrect indentation level 2, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "column": "3",
                    "severity": "error",
                    "message": "'{' at column 3 should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/78/AttributeDescriptorCoder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/78/AttributeDescriptorCoder.java\nindex b7950c0a5a2..3214a4d3e91 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/78/AttributeDescriptorCoder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/78/AttributeDescriptorCoder.java\n@@ -27,9 +27,9 @@ import org.apache.beam.sdk.coders.CoderException;\n import org.apache.beam.sdk.coders.StringUtf8Coder;\n import org.apache.beam.sdk.values.TypeDescriptor;\n \n-public class AttributeDescriptorCoder extends AbstractRepositoryCoder<AttributeDescriptor<?>> {\n+public class AttributeDescriptorCoder extends AbstractRepositoryCoder<AttributeDescriptor<?> >\n \n-  private static final long serialVersionUID = 1L;\n+  { private static final long serialVersionUID = 1L;\n \n   /**\n    * Create {@link AttributeDescriptorCoder} from {@link Repository}.\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4312",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4312/RelationshipLinkbackStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4312/RelationshipLinkbackStep.java\nindex 98e6ac78b9a..36e31c3c2da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4312/RelationshipLinkbackStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4312/RelationshipLinkbackStep.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport;\n \n import java.util.function.Predicate;\n@@ -36,54 +37,54 @@ import static org.neo4j.unsafe.impl.batchimport.cache.idmapping.IdMapper.ID_NOT_\n  */\n public class RelationshipLinkbackStep extends RelationshipLinkStep\n {\n-    public RelationshipLinkbackStep( StageControl control, Configuration config,\n-            NodeRelationshipCache cache, Predicate<RelationshipRecord> filter, int nodeTypes,\n-            StatsProvider... additionalStatsProvider )\n-    {\n-        super( control, config, cache, filter, nodeTypes, false, additionalStatsProvider );\n-    }\n+  public RelationshipLinkbackStep(StageControl control, Configuration config,\n+                                  NodeRelationshipCache cache, Predicate<RelationshipRecord> filter, int nodeTypes,\n+                                  StatsProvider... additionalStatsProvider)\n+  {\n+    super(control, config, cache, filter, nodeTypes, false, additionalStatsProvider);\n+  }\n \n-    @Override\n-    protected void linkStart( RelationshipRecord record )\n-    {\n-        int typeId = record.getType();\n-        long firstPrevRel = cache.getAndPutRelationship( record.getFirstNode(),\n-                typeId, Direction.OUTGOING, record.getId(), false );\n-        if ( firstPrevRel == ID_NOT_FOUND )\n-        {   // First one\n-            record.setFirstInFirstChain( true );\n-            firstPrevRel = cache.getCount( record.getFirstNode(), typeId, Direction.OUTGOING );\n-        }\n-        record.setFirstPrevRel( firstPrevRel );\n+  @Override\n+  protected void linkStart(RelationshipRecord record)\n+  {\n+    int typeId = record.getType();\n+    long firstPrevRel = cache.getAndPutRelationship(record.getFirstNode(),\n+        typeId, Direction.OUTGOING, record.getId(), false);\n+    if (firstPrevRel == ID_NOT_FOUND)\n+    {   // First one\n+      record.setFirstInFirstChain(true);\n+      firstPrevRel = cache.getCount(record.getFirstNode(), typeId, Direction.OUTGOING);\n     }\n+    record.setFirstPrevRel(firstPrevRel);\n+  }\n \n-    @Override\n-    protected void linkEnd( RelationshipRecord record )\n-    {\n-        int typeId = record.getType();\n-        long secondPrevRel = cache.getAndPutRelationship( record.getSecondNode(),\n-                typeId, Direction.INCOMING, record.getId(), false );\n-        if ( secondPrevRel == ID_NOT_FOUND )\n-        {   // First one\n-            record.setFirstInSecondChain( true );\n-            secondPrevRel = cache.getCount( record.getSecondNode(), typeId, Direction.INCOMING );\n-        }\n-        record.setSecondPrevRel( secondPrevRel );\n+  @Override\n+  protected void linkEnd(RelationshipRecord record)\n+  {\n+    int typeId = record.getType();\n+    long secondPrevRel = cache.getAndPutRelationship(record.getSecondNode(),\n+        typeId, Direction.INCOMING, record.getId(), false);\n+    if (secondPrevRel == ID_NOT_FOUND)\n+    {   // First one\n+      record.setFirstInSecondChain(true);\n+      secondPrevRel = cache.getCount(record.getSecondNode(), typeId, Direction.INCOMING);\n     }\n+    record.setSecondPrevRel(secondPrevRel);\n+  }\n \n-    @Override\n-    protected void linkLoop( RelationshipRecord record )\n-    {\n-        int typeId = record.getType();\n-        long prevRel = cache.getAndPutRelationship( record.getFirstNode(),\n-                typeId, Direction.BOTH, record.getId(), false );\n-        if ( prevRel == ID_NOT_FOUND )\n-        {   // First one\n-            record.setFirstInFirstChain( true );\n-            record.setFirstInSecondChain( true );\n-            prevRel = cache.getCount( record.getFirstNode(), typeId, Direction.BOTH );\n-        }\n-        record.setFirstPrevRel( prevRel );\n-        record.setSecondPrevRel( prevRel );\n+  @Override\n+  protected void linkLoop(RelationshipRecord record)\n+  {\n+    int typeId = record.getType();\n+    long prevRel = cache.getAndPutRelationship(record.getFirstNode(),\n+        typeId, Direction.BOTH, record.getId(), false);\n+    if (prevRel == ID_NOT_FOUND)\n+    {   // First one\n+      record.setFirstInFirstChain(true);\n+      record.setFirstInSecondChain(true);\n+      prevRel = cache.getCount(record.getFirstNode(), typeId, Direction.BOTH);\n     }\n+    record.setFirstPrevRel(prevRel);\n+    record.setSecondPrevRel(prevRel);\n+  }\n }\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4312/RelationshipLinkbackStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4312/RelationshipLinkbackStep.java\nindex 98e6ac78b9a..4c5b41a7c3b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4312/RelationshipLinkbackStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4312/RelationshipLinkbackStep.java\n@@ -49,8 +49,9 @@ public class RelationshipLinkbackStep extends RelationshipLinkStep\n         int typeId = record.getType();\n         long firstPrevRel = cache.getAndPutRelationship( record.getFirstNode(),\n                 typeId, Direction.OUTGOING, record.getId(), false );\n-        if ( firstPrevRel == ID_NOT_FOUND )\n-        {   // First one\n+if ( firstPrevRel == ID_NOT_FOUND )\n+        {\n+    // First one\n             record.setFirstInFirstChain( true );\n             firstPrevRel = cache.getCount( record.getFirstNode(), typeId, Direction.OUTGOING );\n         }\n@@ -63,8 +64,9 @@ public class RelationshipLinkbackStep extends RelationshipLinkStep\n         int typeId = record.getType();\n         long secondPrevRel = cache.getAndPutRelationship( record.getSecondNode(),\n                 typeId, Direction.INCOMING, record.getId(), false );\n-        if ( secondPrevRel == ID_NOT_FOUND )\n-        {   // First one\n+if ( secondPrevRel == ID_NOT_FOUND )\n+        {\n+    // First one\n             record.setFirstInSecondChain( true );\n             secondPrevRel = cache.getCount( record.getSecondNode(), typeId, Direction.INCOMING );\n         }\n@@ -77,8 +79,9 @@ public class RelationshipLinkbackStep extends RelationshipLinkStep\n         int typeId = record.getType();\n         long prevRel = cache.getAndPutRelationship( record.getFirstNode(),\n                 typeId, Direction.BOTH, record.getId(), false );\n-        if ( prevRel == ID_NOT_FOUND )\n-        {   // First one\n+if ( prevRel == ID_NOT_FOUND )\n+        {\n+    // First one\n             record.setFirstInFirstChain( true );\n             record.setFirstInSecondChain( true );\n             prevRel = cache.getCount( record.getFirstNode(), typeId, Direction.BOTH );\n@@ -86,4 +89,4 @@ public class RelationshipLinkbackStep extends RelationshipLinkStep\n         record.setFirstPrevRel( prevRel );\n         record.setSecondPrevRel( prevRel );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
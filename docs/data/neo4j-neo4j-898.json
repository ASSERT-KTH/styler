{
    "project_name": "neo4j-neo4j",
    "error_id": "898",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "250",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "253",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "309",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "309",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/898/ForkedProcessorStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/898/ForkedProcessorStep.java\nindex f8d647b7ede..7adfb897df0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/898/ForkedProcessorStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/898/ForkedProcessorStep.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport.staging;\n \n import java.util.Arrays;\n@@ -43,8 +44,8 @@ import static org.neo4j.internal.unsafe.UnsafeUtil.getFieldOffset;\n  */\n public abstract class ForkedProcessorStep<T> extends AbstractStep<T>\n {\n-    private final long COMPLETED_PROCESSORS_OFFSET = getFieldOffset( Unit.class, \"completedProcessors\" );\n-    private final long PROCESSING_TIME_OFFSET = getFieldOffset( Unit.class, \"processingTime\" );\n+    private final long COMPLETED_PROCESSORS_OFFSET = getFieldOffset(Unit.class, \"completedProcessors\");\n+    private final long PROCESSING_TIME_OFFSET = getFieldOffset(Unit.class, \"processingTime\");\n \n     private final Object[] forkedProcessors;\n     private volatile int numberOfForkedProcessors;\n@@ -57,42 +58,42 @@ public abstract class ForkedProcessorStep<T> extends AbstractStep<T>\n     private volatile Thread receiverThread;\n     private final StampedLock stripingLock;\n \n-    protected ForkedProcessorStep( StageControl control, String name, Configuration config, StatsProvider... statsProviders )\n+    protected ForkedProcessorStep(StageControl control, String name, Configuration config, StatsProvider... statsProviders)\n     {\n-        super( control, name, config, statsProviders );\n+        super(control, name, config, statsProviders);\n         // Limit max processors to some extent because adding processors to a forked processor step doesn't scale linearly,\n         // at least not given that all known implementations do semi-cheap work. Adding more will on the contrary add more\n         // \"wasted\" CPU cycles potentially cause scheduling problems which will affect processing times negatively instead.\n-        this.maxProcessors = max( 1, (int) (config.maxNumberOfProcessors() * 0.7D) );\n+        this.maxProcessors = max(1, (int) (config.maxNumberOfProcessors() * 0.7D));\n         this.forkedProcessors = new Object[this.maxProcessors];\n         stripingLock = new StampedLock();\n \n-        Unit noop = new Unit( -1, null, 0 );\n-        head = new AtomicReference<>( noop );\n-        tail = new AtomicReference<>( noop );\n+        Unit noop = new Unit(-1, null, 0);\n+        head = new AtomicReference<>(noop);\n+        tail = new AtomicReference<>(noop);\n \n-        stripingLock.unlock( applyProcessorCount( stripingLock.readLock() ) );\n-        downstreamSender = new CompletedBatchesSender( name + \" [CompletedBatchSender]\" );\n+        stripingLock.unlock(applyProcessorCount(stripingLock.readLock()));\n+        downstreamSender = new CompletedBatchesSender(name + \" [CompletedBatchSender]\");\n         maxQueueLength = 200 + maxProcessors;\n     }\n \n-    private long applyProcessorCount( long lock )\n+    private long applyProcessorCount(long lock)\n     {\n-        if ( numberOfForkedProcessors != targetNumberOfProcessors )\n+        if (numberOfForkedProcessors != targetNumberOfProcessors)\n         {\n-            stripingLock.unlock( lock );\n+            stripingLock.unlock(lock);\n             lock = stripingLock.writeLock();\n             awaitAllCompleted();\n             int processors = targetNumberOfProcessors;\n-            while ( numberOfForkedProcessors < processors )\n+            while (numberOfForkedProcessors < processors)\n             {\n-                if ( forkedProcessors[numberOfForkedProcessors] == null )\n+                if (forkedProcessors[numberOfForkedProcessors] == null)\n                 {\n-                    forkedProcessors[numberOfForkedProcessors] = new ForkedProcessor( numberOfForkedProcessors, tail.get() );\n+                    forkedProcessors[numberOfForkedProcessors] = new ForkedProcessor(numberOfForkedProcessors, tail.get());\n                 }\n                 numberOfForkedProcessors++;\n             }\n-            if ( numberOfForkedProcessors > processors )\n+            if (numberOfForkedProcessors > processors)\n             {\n                 numberOfForkedProcessors = processors;\n                 // Excess processors will notice that they are not needed right now, and will park until they are.\n@@ -104,16 +105,16 @@ public abstract class ForkedProcessorStep<T> extends AbstractStep<T>\n \n     private void awaitAllCompleted()\n     {\n-        while ( head.get() != tail.get() )\n+        while (head.get() != tail.get())\n         {\n-            PARK.park( receiverThread = Thread.currentThread() );\n+            PARK.park(receiverThread = Thread.currentThread());\n         }\n     }\n \n     @Override\n-    public int processors( int delta )\n+    public int processors(int delta)\n     {\n-        targetNumberOfProcessors = max( 1, min( targetNumberOfProcessors + delta, maxProcessors ) );\n+        targetNumberOfProcessors = max(1, min(targetNumberOfProcessors + delta, maxProcessors));\n         return targetNumberOfProcessors;\n     }\n \n@@ -124,43 +125,43 @@ public abstract class ForkedProcessorStep<T> extends AbstractStep<T>\n     }\n \n     @Override\n-    public void start( int orderingGuarantees )\n+    public void start(int orderingGuarantees)\n     {\n-        super.start( orderingGuarantees );\n+        super.start(orderingGuarantees);\n         downstreamSender.start();\n     }\n \n     @Override\n-    public long receive( long ticket, T batch )\n+    public long receive(long ticket, T batch)\n     {\n         long time = nanoTime();\n-        while ( queuedBatches.get() >= maxQueueLength )\n+        while (queuedBatches.get() >= maxQueueLength)\n         {\n-            PARK.park( receiverThread = Thread.currentThread() );\n+            PARK.park(receiverThread = Thread.currentThread());\n         }\n         // It is of importance that all items in the queue at the same time agree on the number of processors. We take this lock in order to make sure that we\n         // do not interfere with another thread trying to drain the queue in order to change the processor count.\n-        long lock = applyProcessorCount( stripingLock.readLock() );\n+        long lock = applyProcessorCount(stripingLock.readLock());\n         queuedBatches.incrementAndGet();\n-        Unit unit = new Unit( ticket, batch, numberOfForkedProcessors );\n+        Unit unit = new Unit(ticket, batch, numberOfForkedProcessors);\n \n         // [old head] [unit]\n         //               ^\n         //              head\n-        Unit myHead = head.getAndSet( unit );\n+        Unit myHead = head.getAndSet(unit);\n \n         // [old head] -next-> [unit]\n         myHead.next = unit;\n-        stripingLock.unlock( lock );\n+        stripingLock.unlock(lock);\n \n         return nanoTime() - time;\n     }\n \n-    protected abstract void forkedProcess( int id, int processors, T batch ) throws Throwable;\n+    protected abstract void forkedProcess(int id, int processors, T batch) throws Throwable;\n \n-    void sendDownstream( Unit unit )\n+    void sendDownstream(Unit unit)\n     {\n-        downstreamIdleTime.add( downstream.receive( unit.ticket, unit.batch ) );\n+        downstreamIdleTime.add(downstream.receive(unit.ticket, unit.batch));\n     }\n \n     // One unit of work. Contains the batch along with ticket and meta state during processing such\n@@ -177,15 +178,15 @@ public abstract class ForkedProcessorStep<T> extends AbstractStep<T>\n         // Updated when a ForkedProcessor have processed this unit.\n         // Atomic since changed by UnsafeUtil#getAndAddInt/Long.\n         // Volatile since read by CompletedBatchesSender.\n-        @SuppressWarnings( \"unused\" )\n+        @SuppressWarnings(\"unused\")\n         private volatile int completedProcessors;\n-        @SuppressWarnings( \"unused\" )\n+        @SuppressWarnings(\"unused\")\n         private volatile long processingTime;\n \n         // Volatile since assigned by thread enqueueing this unit after changing head of the queue.\n         private volatile Unit next;\n \n-        Unit( long ticket, T batch, int processors )\n+        Unit(long ticket, T batch, int processors)\n         {\n             this.ticket = ticket;\n             this.batch = batch;\n@@ -197,17 +198,17 @@ public abstract class ForkedProcessorStep<T> extends AbstractStep<T>\n             return processors > 0 && processors == completedProcessors;\n         }\n \n-        void processorDone( long time )\n+        void processorDone(long time)\n         {\n-            UnsafeUtil.getAndAddLong( this, PROCESSING_TIME_OFFSET, time );\n-            int prevCompletedProcessors = UnsafeUtil.getAndAddInt( this, COMPLETED_PROCESSORS_OFFSET, 1 );\n+            UnsafeUtil.getAndAddLong(this, PROCESSING_TIME_OFFSET, time);\n+            int prevCompletedProcessors = UnsafeUtil.getAndAddInt(this, COMPLETED_PROCESSORS_OFFSET, 1);\n             assert prevCompletedProcessors < processors : prevCompletedProcessors + \" vs \" + processors + \" for \" + ticket;\n         }\n \n         @Override\n         public String toString()\n         {\n-            return format( \"Unit[%d/%d]\", completedProcessors, processors );\n+            return format(\"Unit[%d/%d]\", completedProcessors, processors);\n         }\n     }\n \n@@ -219,43 +220,41 @@ public abstract class ForkedProcessorStep<T> extends AbstractStep<T>\n      */\n     private final class CompletedBatchesSender extends Thread\n     {\n-        CompletedBatchesSender( String name )\n+        CompletedBatchesSender(String name)\n         {\n-            super( name );\n+            super(name);\n         }\n \n         @Override\n         public void run()\n         {\n             Unit current = tail.get();\n-            while ( !isCompleted() )\n+            while (!isCompleted())\n             {\n                 Unit candidate = current.next;\n-                if ( candidate != null && candidate.isCompleted() )\n+                if (candidate != null && candidate.isCompleted())\n                 {\n-                    if ( downstream != null )\n+                    if (downstream != null)\n                     {\n-                        sendDownstream( candidate );\n-                    }\n-                    else\n+                        sendDownstream(candidate);\n+                    } else\n                     {\n-                        control.recycle( candidate.batch );\n+                        control.recycle(candidate.batch);\n                     }\n                     current = candidate;\n-                    tail.set( current );\n+                    tail.set(current);\n                     queuedBatches.decrementAndGet();\n                     doneBatches.incrementAndGet();\n-                    totalProcessingTime.add( candidate.processingTime );\n+                    totalProcessingTime.add(candidate.processingTime);\n                     checkNotifyEndDownstream();\n-                }\n-                else\n+                } else\n                 {\n                     Thread receiver = ForkedProcessorStep.this.receiverThread;\n-                    if ( receiver != null )\n+                    if (receiver != null)\n                     {\n-                        PARK.unpark( receiver );\n+                        PARK.unpark(receiver);\n                     }\n-                    PARK.park( this );\n+                    PARK.park(this);\n                 }\n             }\n         }\n@@ -271,9 +270,9 @@ public abstract class ForkedProcessorStep<T> extends AbstractStep<T>\n         private final int id;\n         private Unit current;\n \n-        ForkedProcessor( int id, Unit startingUnit )\n+        ForkedProcessor(int id, Unit startingUnit)\n         {\n-            super( name() + \"-\" + id );\n+            super(name() + \"-\" + id);\n             this.id = id;\n             this.current = startingUnit;\n             start();\n@@ -284,34 +283,32 @@ public abstract class ForkedProcessorStep<T> extends AbstractStep<T>\n         {\n             try\n             {\n-                while ( !isCompleted() )\n+                while (!isCompleted())\n                 {\n                     Unit candidate = current.next;\n-                    if ( candidate != null )\n+                    if (candidate != null)\n                     {\n                         // There's work to do.\n-                        if ( id < candidate.processors )\n+                        if (id < candidate.processors)\n                         {\n                             // We are expected to take care of this one.\n                             long time = nanoTime();\n-                            forkedProcess( id, candidate.processors, candidate.batch );\n-                            candidate.processorDone( nanoTime() - time );\n+                            forkedProcess(id, candidate.processors, candidate.batch);\n+                            candidate.processorDone(nanoTime() - time);\n                         }\n                         // Skip to the next.\n \n                         current = candidate;\n-                    }\n-                    else\n+                    } else\n                     {\n                         // There's no work to be done right now, park a while. When we wake up and work have accumulated\n                         // we'll plow throw them w/o park in between anyway.\n-                        PARK.park( this );\n+                        PARK.park(this);\n                     }\n                 }\n-            }\n-            catch ( Throwable e )\n+            } catch (Throwable e)\n             {\n-                issuePanic( e, false );\n+                issuePanic(e, false);\n             }\n         }\n     }\n@@ -319,7 +316,7 @@ public abstract class ForkedProcessorStep<T> extends AbstractStep<T>\n     @Override\n     public void close() throws Exception\n     {\n-        Arrays.fill( forkedProcessors, null );\n+        Arrays.fill(forkedProcessors, null);\n         super.close();\n     }\n }\n",
            "diff_size": 71
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Rugal-algorithm",
    "error_id": "23",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage ga.rugal.leetcode.matrix01;\n\nimport java.awt.Point;\nimport java.util.LinkedList;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/23/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler/23/Solution.java\nindex f5b1668a5ac..f4324a9de8a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/23/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler/23/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.leetcode.matrix01;\r\n \r\n import java.awt.Point;\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/23/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/intellij/23/Solution.java\nindex f5b1668a5ac..d1ed47485c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/23/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/intellij/23/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.leetcode.matrix01;\r\n \r\n import java.awt.Point;\r\n@@ -26,7 +27,7 @@ import java.util.Queue;\n  */\r\n public class Solution {\r\n \r\n-  private static final int[][] N = new int[][]{{0, 1, 0, -1}, {1, 0, -1, 0}};\r\n+  private static final int[][] N = new int[][] {{0, 1, 0, -1}, {1, 0, -1, 0}};\r\n \r\n   private int[][] matrix;\r\n \r\n@@ -60,6 +61,6 @@ public class Solution {\n \r\n   private boolean isValid(final int row, final int column) {\r\n     return 0 <= row && row < this.matrix.length\r\n-           && 0 <= column && column < this.matrix[0].length;\r\n+      && 0 <= column && column < this.matrix[0].length;\r\n   }\r\n }\r\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 3, indentation should be the same level as line 15.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'while' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/23/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/naturalize/23/Solution.java\nindex f5b1668a5ac..8689b57e78d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/23/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/naturalize/23/Solution.java\n@@ -12,8 +12,7 @@\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n- */\r\n-package ga.rugal.leetcode.matrix01;\r\n+ */package ga.rugal.leetcode.matrix01;\r\n \r\n import java.awt.Point;\r\n import java.util.LinkedList;\r\n@@ -42,9 +41,8 @@ public class Solution {\n           queue.offer(new Point(i, j));\r\n         }\r\n       }\r\n-    }\r\n-\r\n-    while (!queue.isEmpty()) {\r\n+    }\n+while (!queue.isEmpty()) {\r\n       final Point top = queue.poll();\r\n       for (int i = 0; i < N[0].length; ++i) {\r\n         final int x = N[0][i] + top.x;\r\n@@ -62,4 +60,4 @@ public class Solution {\n     return 0 <= row && row < this.matrix.length\r\n            && 0 <= column && column < this.matrix[0].length;\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/23/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/codebuff/23/Solution.java\nindex f5b1668a5ac..1e185e984d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/23/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/codebuff/23/Solution.java\n@@ -13,53 +13,54 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package ga.rugal.leetcode.matrix01;\r\n-\r\n-import java.awt.Point;\r\n-import java.util.LinkedList;\r\n+package ga.rugal.leetcode.matrix01;\n+\n+import java.awt.Point;\n+import java.util.LinkedList;\n import java.util.Queue;\r\n \r\n /**\r\n  * https://leetcode.com/problems/01-matrix/\r\n  *\r\n  * @author rugal\r\n- */\r\n-public class Solution {\r\n-\r\n-  private static final int[][] N = new int[][]{{0, 1, 0, -1}, {1, 0, -1, 0}};\r\n-\r\n-  private int[][] matrix;\r\n-\r\n-  public int[][] updateMatrix(final int[][] matrix) {\r\n-    this.matrix = matrix;\r\n-    final int[][] result = new int[matrix.length][matrix[0].length];\r\n-    final Queue<Point> queue = new LinkedList<>();\r\n-    for (int i = 0; i < matrix.length; ++i) {\r\n-      for (int j = 0; j < matrix[0].length; ++j) {\r\n-        result[i][j] = Integer.MAX_VALUE;\r\n-        if (this.matrix[i][j] == 0) {\r\n-          result[i][j] = 0;\r\n-          queue.offer(new Point(i, j));\r\n-        }\r\n-      }\r\n-    }\r\n-\r\n-    while (!queue.isEmpty()) {\r\n-      final Point top = queue.poll();\r\n-      for (int i = 0; i < N[0].length; ++i) {\r\n-        final int x = N[0][i] + top.x;\r\n-        final int y = N[1][i] + top.y;\r\n-        if (this.isValid(x, y) && result[x][y] > result[top.x][top.y] + 1) {\r\n-          result[x][y] = result[top.x][top.y] + 1;\r\n-          queue.offer(new Point(x, y));\r\n-        }\r\n-      }\r\n-    }\r\n-    return result;\r\n-  }\r\n-\r\n-  private boolean isValid(final int row, final int column) {\r\n-    return 0 <= row && row < this.matrix.length\r\n-           && 0 <= column && column < this.matrix[0].length;\r\n-  }\r\n-}\r\n+ */\n+\n+\n+public class Solution {\n+\n+  private static final int[][] N = new int[][]{{0, 1, 0, -1}, {1, 0, -1, 0}};\n+\n+  private int[][] matrix;\n+\n+  public int[][] updateMatrix(final int[][] matrix) {\n+    this.matrix = matrix;\n+    final int[][] result = new int[matrix.length][matrix[0].length];\n+    final Queue<Point> queue = new LinkedList<>();\n+    for (int i = 0; i < matrix.length; ++i) {\n+      for (int j = 0; j < matrix[0].length; ++j) {\n+        result[i][j] = Integer.MAX_VALUE;\n+        if (this.matrix[i][j] == 0) {\n+          result[i][j] = 0;\n+          queue.offer(new Point(i, j));\n+        }\n+      }\n+    }\n+    while (!queue.isEmpty()) {\n+      final Point top = queue.poll();\n+      for (int i = 0; i < N[0].length; ++i) {\n+        final int x = N[0][i] + top.x;\n+        final int y = N[1][i] + top.y;\n+        if (this.isValid(x, y) && result[x][y] > result[top.x][top.y] + 1) {\n+          result[x][y] = result[top.x][top.y] + 1;\n+          queue.offer(new Point(x, y));\n+        }\n+      }\n+    }\n+    return result;\n+  }\n+\n+  private boolean isValid(final int row, final int column) {\n+    return 0 <= row && row < this.matrix.length\n+           && 0 <= column && column < this.matrix[0].length;\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 45
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/23/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_random/23/Solution.java\nindex f5b1668a5ac..f4324a9de8a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/23/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_random/23/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.leetcode.matrix01;\r\n \r\n import java.awt.Point;\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/23/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_three_grams/23/Solution.java\nindex f5b1668a5ac..f4324a9de8a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/23/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_three_grams/23/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.leetcode.matrix01;\r\n \r\n import java.awt.Point;\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
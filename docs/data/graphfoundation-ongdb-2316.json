{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2316",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2316/NeoStoreTransactionLogModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2316/NeoStoreTransactionLogModule.java\nindex 7187f2eaaeb..bfb7f36d607 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2316/NeoStoreTransactionLogModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2316/NeoStoreTransactionLogModule.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel;\n \n import org.neo4j.kernel.impl.transaction.log.LogicalTransactionStore;\n@@ -30,49 +31,49 @@ import org.neo4j.kernel.impl.util.SynchronizedArrayIdOrderingQueue;\n \n class NeoStoreTransactionLogModule\n {\n-    private final LogicalTransactionStore logicalTransactionStore;\n-    private final LogFiles logFiles;\n-    private final LogRotation logRotation;\n-    private final CheckPointerImpl checkPointer;\n-    private final TransactionAppender appender;\n-    private final SynchronizedArrayIdOrderingQueue explicitIndexTransactionOrdering;\n+  private final LogicalTransactionStore logicalTransactionStore;\n+  private final LogFiles logFiles;\n+  private final LogRotation logRotation;\n+  private final CheckPointerImpl checkPointer;\n+  private final TransactionAppender appender;\n+  private final SynchronizedArrayIdOrderingQueue explicitIndexTransactionOrdering;\n \n-    NeoStoreTransactionLogModule( LogicalTransactionStore logicalTransactionStore,\n-            LogFiles logFiles, LogRotation logRotation,\n-            CheckPointerImpl checkPointer, TransactionAppender appender,\n-            SynchronizedArrayIdOrderingQueue explicitIndexTransactionOrdering )\n-    {\n-        this.logicalTransactionStore = logicalTransactionStore;\n-        this.logFiles = logFiles;\n-        this.logRotation = logRotation;\n-        this.checkPointer = checkPointer;\n-        this.appender = appender;\n-        this.explicitIndexTransactionOrdering = explicitIndexTransactionOrdering;\n-    }\n+  NeoStoreTransactionLogModule(LogicalTransactionStore logicalTransactionStore,\n+                               LogFiles logFiles, LogRotation logRotation,\n+                               CheckPointerImpl checkPointer, TransactionAppender appender,\n+                               SynchronizedArrayIdOrderingQueue explicitIndexTransactionOrdering)\n+  {\n+    this.logicalTransactionStore = logicalTransactionStore;\n+    this.logFiles = logFiles;\n+    this.logRotation = logRotation;\n+    this.checkPointer = checkPointer;\n+    this.appender = appender;\n+    this.explicitIndexTransactionOrdering = explicitIndexTransactionOrdering;\n+  }\n \n-    public LogicalTransactionStore logicalTransactionStore()\n-    {\n-        return logicalTransactionStore;\n-    }\n+  public LogicalTransactionStore logicalTransactionStore()\n+  {\n+    return logicalTransactionStore;\n+  }\n \n-    CheckPointer checkPointing()\n-    {\n-        return checkPointer;\n-    }\n+  CheckPointer checkPointing()\n+  {\n+    return checkPointer;\n+  }\n \n-    TransactionAppender transactionAppender()\n-    {\n-        return appender;\n-    }\n+  TransactionAppender transactionAppender()\n+  {\n+    return appender;\n+  }\n \n-    public void satisfyDependencies( Dependencies dependencies )\n-    {\n-        dependencies.satisfyDependencies( checkPointer,\n-                                          logFiles,\n-                                          logFiles.getLogFileInformation(),\n-                                          explicitIndexTransactionOrdering,\n-                                          logicalTransactionStore,\n-                                          logRotation,\n-                                          appender );\n-    }\n+  public void satisfyDependencies(Dependencies dependencies)\n+  {\n+    dependencies.satisfyDependencies(checkPointer,\n+        logFiles,\n+        logFiles.getLogFileInformation(),\n+        explicitIndexTransactionOrdering,\n+        logicalTransactionStore,\n+        logRotation,\n+        appender);\n+  }\n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2316/NeoStoreTransactionLogModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2316/NeoStoreTransactionLogModule.java\nindex 7187f2eaaeb..5ece246b7d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2316/NeoStoreTransactionLogModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2316/NeoStoreTransactionLogModule.java\n@@ -67,12 +67,7 @@ class NeoStoreTransactionLogModule\n \n     public void satisfyDependencies( Dependencies dependencies )\n     {\n-        dependencies.satisfyDependencies( checkPointer,\n-                                          logFiles,\n-                                          logFiles.getLogFileInformation(),\n-                                          explicitIndexTransactionOrdering,\n-                                          logicalTransactionStore,\n-                                          logRotation,\n-                                          appender );\n+        dependencies.satisfyDependencies( checkPointer, logFiles,\n+                                          logFiles.getLogFileInformation(), explicitIndexTransactionOrdering, logicalTransactionStore, logRotation, appender );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
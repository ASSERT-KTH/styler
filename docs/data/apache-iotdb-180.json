{
    "project_name": "apache-iotdb",
    "error_id": "180",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.engine.querycontext;\n\nimport org.apache.iotdb.db.exception.query.QueryProcessException;\nimport org.apache.iotdb.db.query.reader.chunk.MemChunkLoader;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/180/ReadOnlyMemChunk.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/180/ReadOnlyMemChunk.java\nindex 8236e15c175..2af93a6c181 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/180/ReadOnlyMemChunk.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/180/ReadOnlyMemChunk.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.engine.querycontext;\n \n import org.apache.iotdb.db.exception.query.QueryProcessException;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/180/ReadOnlyMemChunk.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/180/ReadOnlyMemChunk.java\nindex 8236e15c175..2af93a6c181 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/180/ReadOnlyMemChunk.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/180/ReadOnlyMemChunk.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.engine.querycontext;\n \n import org.apache.iotdb.db.exception.query.QueryProcessException;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'String' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'TSDataType' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "warning",
                    "message": "'TSEncoding' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'TVList' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "'Map' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'int' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'throws' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "warning",
                    "message": "'\"The MAX_POINT_NUMBER shouldn't be less than 0.\"' has incorrect indentation level 11, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "warning",
                    "message": "'TSFileDescriptor' has incorrect indentation level 11, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/180/ReadOnlyMemChunk.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/180/ReadOnlyMemChunk.java\nindex 8236e15c175..42703c0ffcc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/180/ReadOnlyMemChunk.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/180/ReadOnlyMemChunk.java\n@@ -30,10 +30,8 @@ import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;\n import org.apache.iotdb.tsfile.read.TimeValuePair;\n import org.apache.iotdb.tsfile.read.common.TimeRange;\n import org.apache.iotdb.tsfile.read.reader.IPointReader;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.io.IOException;\n import java.util.List;\n import java.util.Map;\n@@ -41,33 +39,26 @@ import java.util.Map;\n public class ReadOnlyMemChunk {\n \n   // deletion list for this chunk\n-  private final List<TimeRange> deletionList;\n \n+  private final List<TimeRange> deletionList;\n   private String measurementUid;\n   private TSDataType dataType;\n   private TSEncoding encoding;\n-\n   private static final Logger logger = LoggerFactory.getLogger(ReadOnlyMemChunk.class);\n-\n   private int floatPrecision = TSFileDescriptor.getInstance().getConfig().getFloatPrecision();\n-\n   private ChunkMetadata cachedMetaData;\n-\n   private TVList chunkData;\n-\n   private IPointReader chunkPointReader;\n-\n   private int chunkDataSize;\n \n   public ReadOnlyMemChunk(\n-      String measurementUid,\n-      TSDataType dataType,\n-      TSEncoding encoding,\n-      TVList tvList,\n-      Map<String, String> props,\n-      int size,\n-      List<TimeRange> deletionList)\n-      throws IOException, QueryProcessException {\n+    String measurementUid,\n+    TSDataType dataType,\n+    TSEncoding encoding,\n+    TVList tvList,\n+    Map<String, String> props,\n+    int size, List<TimeRange> deletionList)\n+    throws IOException, QueryProcessException {\n     this.measurementUid = measurementUid;\n     this.dataType = dataType;\n     this.encoding = encoding;\n@@ -77,23 +68,21 @@ public class ReadOnlyMemChunk {\n       } catch (NumberFormatException e) {\n         logger.warn(\n             \"The format of MAX_POINT_NUMBER {}  is not correct.\"\n-                + \" Using default float precision.\",\n+              + \" Using default float precision.\",\n             props.get(Encoder.MAX_POINT_NUMBER));\n       }\n       if (floatPrecision < 0) {\n         logger.warn(\n-            \"The MAX_POINT_NUMBER shouldn't be less than 0.\" + \" Using default float precision {}.\",\n-            TSFileDescriptor.getInstance().getConfig().getFloatPrecision());\n+           \"The MAX_POINT_NUMBER shouldn't be less than 0.\"\n+             + \" Using default float precision {}.\",\n+           TSFileDescriptor.getInstance().getConfig().getFloatPrecision());\n         floatPrecision = TSFileDescriptor.getInstance().getConfig().getFloatPrecision();\n       }\n     }\n-\n     this.chunkData = tvList;\n     this.chunkDataSize = size;\n     this.deletionList = deletionList;\n-\n-    this.chunkPointReader =\n-        tvList.getIterator(floatPrecision, encoding, chunkDataSize, deletionList);\n+    this.chunkPointReader = tvList.getIterator(floatPrecision, encoding, chunkDataSize, deletionList);\n     initChunkMeta();\n   }\n \n@@ -101,8 +90,7 @@ public class ReadOnlyMemChunk {\n     Statistics statsByType = Statistics.getStatsByType(dataType);\n     ChunkMetadata metaData = new ChunkMetadata(measurementUid, dataType, 0, statsByType);\n     if (!isEmpty()) {\n-      IPointReader iterator =\n-          chunkData.getIterator(floatPrecision, encoding, chunkDataSize, deletionList);\n+      IPointReader iterator = chunkData.getIterator(floatPrecision, encoding, chunkDataSize, deletionList);\n       while (iterator.hasNextTimeValuePair()) {\n         TimeValuePair timeValuePair = iterator.nextTimeValuePair();\n         switch (dataType) {\n@@ -155,4 +143,4 @@ public class ReadOnlyMemChunk {\n   public String getMeasurementUid() {\n     return measurementUid;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/180/ReadOnlyMemChunk.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/180/ReadOnlyMemChunk.java\nindex 8236e15c175..2af93a6c181 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/180/ReadOnlyMemChunk.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/180/ReadOnlyMemChunk.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.engine.querycontext;\n \n import org.apache.iotdb.db.exception.query.QueryProcessException;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/180/ReadOnlyMemChunk.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/180/ReadOnlyMemChunk.java\nindex 8236e15c175..2af93a6c181 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/180/ReadOnlyMemChunk.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/180/ReadOnlyMemChunk.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.engine.querycontext;\n \n import org.apache.iotdb.db.exception.query.QueryProcessException;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
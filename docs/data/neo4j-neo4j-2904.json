{
    "project_name": "neo4j-neo4j",
    "error_id": "2904",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "100",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "250",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "374",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "444",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "444",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "486",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "490",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "490",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "497",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "505",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "505",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "510",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "510",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "540",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "540",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "555",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "555",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "559",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "559",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "563",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "563",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "571",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "575",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "575",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "583",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "583",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "589",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "590",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "598",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "598",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "615",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "629",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "629",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "634",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "634",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "658",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "658",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "664",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "664",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "683",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "683",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "685",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "685",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "687",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "687",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "693",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "693",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "710",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "710",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "715",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "715",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "717",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "717",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "721",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "721",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "726",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "726",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "735",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "735",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "753",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "753",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "758",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "758",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "763",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "763",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "767",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "767",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "782",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "782",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "787",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "787",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "791",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "791",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "799",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "799",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "802",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "802",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "806",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "806",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "809",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "809",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "811",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "811",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "817",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "817",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "826",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "841",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "841",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "850",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "850",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "852",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "852",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "869",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "869",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "873",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "873",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "877",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "877",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "884",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "884",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "896",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "896",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "910",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "910",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "913",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "913",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2904/EncodingIdMapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2904/EncodingIdMapper.java\nindex ee1e6ac7499..deb4f95e441 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2904/EncodingIdMapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2904/EncodingIdMapper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport.cache.idmapping.string;\n \n import org.eclipse.collections.api.iterator.LongIterator;\n@@ -55,37 +56,37 @@ import static org.neo4j.internal.batchimport.cache.idmapping.string.ParallelSort\n /**\n  * Maps arbitrary values to long ids. The values can be {@link #put(Object, long, Group) added} in any order,\n  * but {@link #needsPreparation() needs} {@link IdMapper#prepare(PropertyValueLookup, Collector, ProgressListener) preparation}\n- *\n+ * <p>\n  * in order to {@link #get(Object, Group) get} ids back later.\n- *\n+ * <p>\n  * In the {@link IdMapper#prepare(PropertyValueLookup, Collector, ProgressListener) preparation phase} the added entries are\n  * sorted according to a number representation of each input value and {@link #get(Object, Group)} does simple\n  * binary search to find the correct one.\n- *\n+ * <p>\n  * The implementation is space-efficient, much more so than using, say, a {@link HashMap}.\n- *\n+ * <p>\n  * Terminology... there's a lot going on in here, and to help you understand the code here's a list\n  * of terms used in comments and variable names and some description what each generally means\n  * (also applies to {@link ParallelSort} btw):\n  * - input id:\n- *       An id coming from the user that is associated with a neo4j id by calling {@link #put(Object, long, Group)}.\n- *       the first argument is the id that the user specified, the second is the neo4j id that user id will\n- *       be associated with.\n+ * An id coming from the user that is associated with a neo4j id by calling {@link #put(Object, long, Group)}.\n+ * the first argument is the id that the user specified, the second is the neo4j id that user id will\n+ * be associated with.\n  * - encoder:\n- *       Encodes an input id into an internal, more space efficient representation (a {@code long}) of that input id.\n+ * Encodes an input id into an internal, more space efficient representation (a {@code long}) of that input id.\n  * - eId:\n- *       The internal representation of an input id, generated by an encoder.\n+ * The internal representation of an input id, generated by an encoder.\n  * - data cache:\n- *       An array of eIds. eIds are added in the order of neo4j ids, i.e. in the order in which they are put.\n+ * An array of eIds. eIds are added in the order of neo4j ids, i.e. in the order in which they are put.\n  * - tracker cache:\n- *       An array where every array item is a pointer to an index into the data cache it's set to track.\n- *       After the data cache has been filled the eIds are sorted. This is done by _not_ sorting the data cache,\n- *       but instead sorting the tracker cache as a proxy to its data cache. The reason it's done like this\n- *       is that id spaces ({@link Group}) are kept as data cache ranges, since all ids for any given id space\n- *       must be added together before adding any id for another id space.\n+ * An array where every array item is a pointer to an index into the data cache it's set to track.\n+ * After the data cache has been filled the eIds are sorted. This is done by _not_ sorting the data cache,\n+ * but instead sorting the tracker cache as a proxy to its data cache. The reason it's done like this\n+ * is that id spaces ({@link Group}) are kept as data cache ranges, since all ids for any given id space\n+ * must be added together before adding any id for another id space.\n  * - collision:\n- *       Since eId has potentially fewer bits than an input id there's a chance multiple different (or equal)\n- *       input ids will be encoded into the same eId. These are called collisions.\n+ * Since eId has potentially fewer bits than an input id there's a chance multiple different (or equal)\n+ * input ids will be encoded into the same eId. These are called collisions.\n  */\n public class EncodingIdMapper implements IdMapper\n {\n@@ -96,7 +97,7 @@ public class EncodingIdMapper implements IdMapper\n         /**\n          * @param count Number of eIds that have been marked as collisions.\n          */\n-        void numberOfCollisions( long count );\n+        void numberOfCollisions(long count);\n     }\n \n     public static final Monitor NO_MONITOR = count ->\n@@ -108,7 +109,7 @@ public class EncodingIdMapper implements IdMapper\n     // This bit is the least significant in the most significant byte of the encoded values,\n     // where the 7 most significant bits in that byte denotes length of original string.\n     // See StringEncoder.\n-    private static final LongBitsManipulator COLLISION_BIT = new LongBitsManipulator( 56, 1 );\n+    private static final LongBitsManipulator COLLISION_BIT = new LongBitsManipulator(56, 1);\n     private static final int DEFAULT_CACHE_CHUNK_SIZE = 1_000_000; // 8MB a piece\n     private static final int COLLISION_ENTRY_SIZE = 5/*nodeId*/ + 6/*offset*/;\n     // Using 0 as gap value, i.e. value for a node not having an id, i.e. not present in dataCache is safe\n@@ -123,7 +124,7 @@ public class EncodingIdMapper implements IdMapper\n     // values are the encoded versions of the input ids.\n     private final LongArray dataCache;\n     private final GroupCache groupCache;\n-    private final HighestId candidateHighestSetIndex = new HighestId( -1 );\n+    private final HighestId candidateHighestSetIndex = new HighestId(-1);\n     private long highestSetIndex;\n \n     // Ordering information about values in dataCache; the ordering of values in dataCache remains unchanged.\n@@ -154,18 +155,18 @@ public class EncodingIdMapper implements IdMapper\n     private CollisionValues collisionValues;\n     private final PageCacheTracer pageCacheTracer;\n \n-    public EncodingIdMapper( NumberArrayFactory cacheFactory, Encoder encoder, Factory<Radix> radixFactory,\n-            Monitor monitor, TrackerFactory trackerFactory, ReadableGroups groups, LongFunction<CollisionValues> collisionValuesFactory,\n-            PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker )\n+    public EncodingIdMapper(NumberArrayFactory cacheFactory, Encoder encoder, Factory<Radix> radixFactory,\n+                            Monitor monitor, TrackerFactory trackerFactory, ReadableGroups groups, LongFunction<CollisionValues> collisionValuesFactory,\n+                            PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker)\n     {\n-        this( cacheFactory, encoder, radixFactory, monitor, trackerFactory, groups, collisionValuesFactory, DEFAULT_CACHE_CHUNK_SIZE,\n-                Runtime.getRuntime().availableProcessors() - 1, DEFAULT, pageCacheTracer, memoryTracker );\n+        this(cacheFactory, encoder, radixFactory, monitor, trackerFactory, groups, collisionValuesFactory, DEFAULT_CACHE_CHUNK_SIZE,\n+          Runtime.getRuntime().availableProcessors() - 1, DEFAULT, pageCacheTracer, memoryTracker);\n     }\n \n-    EncodingIdMapper( NumberArrayFactory cacheFactory, Encoder encoder, Factory<Radix> radixFactory,\n-            Monitor monitor, TrackerFactory trackerFactory, ReadableGroups groups, LongFunction<CollisionValues> collisionValuesFactory,\n-            int chunkSize, int processorsForParallelWork, Comparator comparator, PageCacheTracer pageCacheTracer,\n-            MemoryTracker memoryTracker )\n+    EncodingIdMapper(NumberArrayFactory cacheFactory, Encoder encoder, Factory<Radix> radixFactory,\n+                     Monitor monitor, TrackerFactory trackerFactory, ReadableGroups groups, LongFunction<CollisionValues> collisionValuesFactory,\n+                     int chunkSize, int processorsForParallelWork, Comparator comparator, PageCacheTracer pageCacheTracer,\n+                     MemoryTracker memoryTracker)\n     {\n         this.radixFactory = radixFactory;\n         this.monitor = monitor;\n@@ -173,10 +174,10 @@ public class EncodingIdMapper implements IdMapper\n         this.trackerFactory = trackerFactory;\n         this.collisionValuesFactory = collisionValuesFactory;\n         this.comparator = comparator;\n-        this.processorsForParallelWork = max( processorsForParallelWork, 1 );\n+        this.processorsForParallelWork = max(processorsForParallelWork, 1);\n         this.memoryTracker = memoryTracker;\n-        this.dataCache = cacheFactory.newDynamicLongArray( chunkSize, GAP_VALUE, memoryTracker );\n-        this.groupCache = GroupCache.select( cacheFactory, chunkSize, groups.size(), memoryTracker );\n+        this.dataCache = cacheFactory.newDynamicLongArray(chunkSize, GAP_VALUE, memoryTracker);\n+        this.groupCache = GroupCache.select(cacheFactory, chunkSize, groups.size(), memoryTracker);\n         this.groups = groups;\n         this.encoder = encoder;\n         this.radix = radixFactory.newInstance();\n@@ -187,28 +188,28 @@ public class EncodingIdMapper implements IdMapper\n      * Returns the data index (i.e. node id) if found, or {@code -1} if not found.\n      */\n     @Override\n-    public long get( Object inputId, Group group )\n+    public long get(Object inputId, Group group)\n     {\n         assert readyForUse;\n-        return binarySearch( inputId, group.id() );\n+        return binarySearch(inputId, group.id());\n     }\n \n     @Override\n-    public void put( Object inputId, long nodeId, Group group )\n+    public void put(Object inputId, long nodeId, Group group)\n     {\n         // Encode and add the input id\n-        long eId = encode( inputId );\n-        dataCache.set( nodeId, eId );\n-        groupCache.set( nodeId, group.id() );\n-        candidateHighestSetIndex.offer( nodeId );\n+        long eId = encode(inputId);\n+        dataCache.set(nodeId, eId);\n+        groupCache.set(nodeId, group.id());\n+        candidateHighestSetIndex.offer(nodeId);\n     }\n \n-    private long encode( Object inputId )\n+    private long encode(Object inputId)\n     {\n-        long eId = encoder.encode( inputId );\n-        if ( eId == GAP_VALUE )\n+        long eId = encoder.encode(inputId);\n+        if (eId == GAP_VALUE)\n         {\n-            throw new IllegalStateException( \"Encoder \" + encoder + \" returned an illegal encoded value \" + GAP_VALUE );\n+            throw new IllegalStateException(\"Encoder \" + encoder + \" returned an illegal encoded value \" + GAP_VALUE);\n         }\n         return eId;\n     }\n@@ -230,55 +231,54 @@ public class EncodingIdMapper implements IdMapper\n      * </ol>\n      */\n     @Override\n-    public void prepare( PropertyValueLookup inputIdLookup, Collector collector, ProgressListener progress )\n+    public void prepare(PropertyValueLookup inputIdLookup, Collector collector, ProgressListener progress)\n     {\n         highestSetIndex = candidateHighestSetIndex.get();\n-        updateRadix( dataCache, radix, highestSetIndex );\n-        trackerCache = trackerFactory.create( cacheFactory, highestSetIndex + 1 );\n+        updateRadix(dataCache, radix, highestSetIndex);\n+        trackerCache = trackerFactory.create(cacheFactory, highestSetIndex + 1);\n \n         try\n         {\n-            sortBuckets = new ParallelSort( radix, dataCache, highestSetIndex, trackerCache,\n-                    processorsForParallelWork, progress, comparator ).run();\n+            sortBuckets = new ParallelSort(radix, dataCache, highestSetIndex, trackerCache,\n+              processorsForParallelWork, progress, comparator).run();\n \n-            long pessimisticNumberOfCollisions = detectAndMarkCollisions( progress );\n-            if ( pessimisticNumberOfCollisions > 0 )\n+            long pessimisticNumberOfCollisions = detectAndMarkCollisions(progress);\n+            if (pessimisticNumberOfCollisions > 0)\n             {\n-                buildCollisionInfo( inputIdLookup, pessimisticNumberOfCollisions, collector, progress );\n+                buildCollisionInfo(inputIdLookup, pessimisticNumberOfCollisions, collector, progress);\n             }\n-        }\n-        catch ( InterruptedException e )\n+        } catch (InterruptedException e)\n         {\n             Thread.interrupted();\n-            throw new RuntimeException( \"Got interrupted while preparing the index. Throwing this exception \"\n-                    + \"onwards will cause a chain reaction which will cause a panic in the whole import, \"\n-                    + \"so mission accomplished\" );\n+            throw new RuntimeException(\"Got interrupted while preparing the index. Throwing this exception \"\n+              + \"onwards will cause a chain reaction which will cause a panic in the whole import, \"\n+              + \"so mission accomplished\");\n         }\n         readyForUse = true;\n     }\n \n-    private static void updateRadix( LongArray values, Radix radix, long highestSetIndex )\n+    private static void updateRadix(LongArray values, Radix radix, long highestSetIndex)\n     {\n-        for ( long dataIndex = 0; dataIndex <= highestSetIndex; dataIndex++ )\n+        for (long dataIndex = 0; dataIndex <= highestSetIndex; dataIndex++)\n         {\n-            radix.registerRadixOf( values.get( dataIndex ) );\n+            radix.registerRadixOf(values.get(dataIndex));\n         }\n     }\n \n-    private int radixOf( long value )\n+    private int radixOf(long value)\n     {\n-        return radix.calculator().radixOf( value );\n+        return radix.calculator().radixOf(value);\n     }\n \n-    private long binarySearch( Object inputId, int groupId )\n+    private long binarySearch(Object inputId, int groupId)\n     {\n         long low = 0;\n         long high = highestSetIndex;\n-        long x = encode( inputId );\n-        int rIndex = radixOf( x );\n-        for ( int k = 0; k < sortBuckets.length; k++ )\n+        long x = encode(inputId);\n+        int rIndex = radixOf(x);\n+        for (int k = 0; k < sortBuckets.length; k++)\n         {\n-            if ( rIndex <= sortBuckets[k][0] )//bucketRange[k] > rIndex )\n+            if (rIndex <= sortBuckets[k][0])//bucketRange[k] > rIndex )\n             {\n                 low = sortBuckets[k][1];\n                 high = (k == sortBuckets.length - 1) ? highestSetIndex : sortBuckets[k + 1][1];\n@@ -286,29 +286,29 @@ public class EncodingIdMapper implements IdMapper\n             }\n         }\n \n-        long returnVal = binarySearch( x, inputId, low, high, groupId );\n-        if ( returnVal == ID_NOT_FOUND )\n+        long returnVal = binarySearch(x, inputId, low, high, groupId);\n+        if (returnVal == ID_NOT_FOUND)\n         {\n             low = 0;\n             high = highestSetIndex;\n-            returnVal = binarySearch( x, inputId, low, high, groupId );\n+            returnVal = binarySearch(x, inputId, low, high, groupId);\n         }\n         return returnVal;\n     }\n \n-    private static long setCollision( long eId )\n+    private static long setCollision(long eId)\n     {\n-        return COLLISION_BIT.set( eId, 1, 1 );\n+        return COLLISION_BIT.set(eId, 1, 1);\n     }\n \n-    static long clearCollision( long eId )\n+    static long clearCollision(long eId)\n     {\n-        return COLLISION_BIT.clear( eId, 1, false );\n+        return COLLISION_BIT.clear(eId, 1, false);\n     }\n \n-    private static boolean isCollision( long eId )\n+    private static boolean isCollision(long eId)\n     {\n-        return COLLISION_BIT.get( eId, 1 ) != 0;\n+        return COLLISION_BIT.get(eId, 1) != 0;\n     }\n \n     private class DetectWorker implements Runnable\n@@ -321,7 +321,7 @@ public class EncodingIdMapper implements IdMapper\n         private int numberOfCollisions;\n         private int localProgress;\n \n-        DetectWorker( long fromInclusive, long toExclusive, boolean last, ProgressListener progress )\n+        DetectWorker(long fromInclusive, long toExclusive, boolean last, ProgressListener progress)\n         {\n             this.fromInclusive = fromInclusive;\n             this.toExclusive = toExclusive;\n@@ -338,67 +338,68 @@ public class EncodingIdMapper implements IdMapper\n             // but for the last one there's no seam at the end.\n             long end = last ? toExclusive - 1 : toExclusive;\n \n-            for ( long i = fromInclusive; i < end; i++ )\n+            for (long i = fromInclusive; i < end; i++)\n             {\n-                detect( sameGroupDetector, i );\n-                if ( ++localProgress == 1000 )\n+                detect(sameGroupDetector, i);\n+                if (++localProgress == 1000)\n                 {\n-                    progress.add( localProgress );\n+                    progress.add(localProgress);\n                     localProgress = 0;\n                 }\n             }\n-            progress.add( localProgress );\n+            progress.add(localProgress);\n         }\n \n-        private void detect( SameGroupDetector sameGroupDetector, long i )\n+        private void detect(SameGroupDetector sameGroupDetector, long i)\n         {\n-            long dataIndexA = trackerCache.get( i );\n-            long dataIndexB = trackerCache.get( i + 1 );\n-            if ( dataIndexA == ID_NOT_FOUND || dataIndexB == ID_NOT_FOUND )\n+            long dataIndexA = trackerCache.get(i);\n+            long dataIndexB = trackerCache.get(i + 1);\n+            if (dataIndexA == ID_NOT_FOUND || dataIndexB == ID_NOT_FOUND)\n             {\n                 sameGroupDetector.reset();\n                 return;\n             }\n \n-            long eIdA = clearCollision( dataCache.get( dataIndexA ) );\n-            long eIdB = clearCollision( dataCache.get( dataIndexB ) );\n-            if ( eIdA == GAP_VALUE || eIdB == GAP_VALUE )\n+            long eIdA = clearCollision(dataCache.get(dataIndexA));\n+            long eIdB = clearCollision(dataCache.get(dataIndexB));\n+            if (eIdA == GAP_VALUE || eIdB == GAP_VALUE)\n             {\n                 sameGroupDetector.reset();\n                 return;\n             }\n \n-            switch ( Utils.unsignedDifference( eIdA, eIdB ) )\n+            switch (Utils.unsignedDifference(eIdA, eIdB))\n             {\n-            case GT: throw new IllegalStateException( \"Unsorted data, a > b Failure:[\" + i + \"] \" +\n-                    Long.toHexString( eIdA ) + \" > \" + Long.toHexString( eIdB ) + \" | \" +\n-                    radixOf( eIdA ) + \":\" + radixOf( eIdB ) );\n-            case EQ:\n-                // Here we have two equal encoded values. First let's check if they are in the same id space.\n-                long collision = sameGroupDetector.collisionWithinSameGroup(\n-                        dataIndexA, groupOf( dataIndexA ),\n-                        dataIndexB, groupOf( dataIndexB ) );\n-\n-                if ( dataIndexA > dataIndexB )\n-                {\n-                    // Swap so that lower tracker index means lower data index. TODO Why do we do this?\n-                    trackerCache.swap( i, i + 1 );\n-                }\n-\n-                if ( collision != ID_NOT_FOUND )\n-                {\n-                    if ( markAsCollision( collision ) )\n+                case GT:\n+                    throw new IllegalStateException(\"Unsorted data, a > b Failure:[\" + i + \"] \" +\n+                      Long.toHexString(eIdA) + \" > \" + Long.toHexString(eIdB) + \" | \" +\n+                      radixOf(eIdA) + \":\" + radixOf(eIdB));\n+                case EQ:\n+                    // Here we have two equal encoded values. First let's check if they are in the same id space.\n+                    long collision = sameGroupDetector.collisionWithinSameGroup(\n+                      dataIndexA, groupOf(dataIndexA),\n+                      dataIndexB, groupOf(dataIndexB));\n+\n+                    if (dataIndexA > dataIndexB)\n                     {\n-                        numberOfCollisions++;\n+                        // Swap so that lower tracker index means lower data index. TODO Why do we do this?\n+                        trackerCache.swap(i, i + 1);\n                     }\n-                    if ( markAsCollision( dataIndexB ) )\n+\n+                    if (collision != ID_NOT_FOUND)\n                     {\n-                        numberOfCollisions++;\n+                        if (markAsCollision(collision))\n+                        {\n+                            numberOfCollisions++;\n+                        }\n+                        if (markAsCollision(dataIndexB))\n+                        {\n+                            numberOfCollisions++;\n+                        }\n                     }\n-                }\n-                break;\n-            default:\n-                sameGroupDetector.reset();\n+                    break;\n+                default:\n+                    sameGroupDetector.reset();\n             }\n         }\n     }\n@@ -406,33 +407,33 @@ public class EncodingIdMapper implements IdMapper\n     /**\n      * There are two types of collisions:\n      * - actual: collisions coming from equal input value. These might however not impose\n-     *   keeping original input value since the colliding values might be for separate id groups,\n-     *   just as long as there's at most one per id space.\n+     * keeping original input value since the colliding values might be for separate id groups,\n+     * just as long as there's at most one per id space.\n      * - accidental: collisions coming from different input values that happens to coerce into\n-     *   the same encoded value internally.\n-     *\n+     * the same encoded value internally.\n+     * <p>\n      * For any encoded value there might be a mix of actual and accidental collisions. As long as there's\n      * only one such value (accidental or actual) per id space the original input id doesn't need to be kept.\n      * For scenarios where there are multiple per for any given id space:\n      * - actual: there are two equal input values in the same id space\n-     *     ==> fail, not allowed\n+     * ==> fail, not allowed\n      * - accidental: there are two different input values coerced into the same encoded value\n-     *   in the same id space\n-     *     ==> original input values needs to be kept\n+     * in the same id space\n+     * ==> original input values needs to be kept\n      *\n      * @return rough number of collisions. The number can be slightly more than it actually is due to benign\n      * races between detector workers. This is not a problem though, this value serves as a pessimistic value\n      * for allocating arrays to hold collision data to later sort and use to discover duplicates.\n      */\n-    private long detectAndMarkCollisions( ProgressListener progress )\n+    private long detectAndMarkCollisions(ProgressListener progress)\n     {\n-        progress.started( \"DETECT\" );\n+        progress.started(\"DETECT\");\n         long totalCount = highestSetIndex + 1;\n \n-        Workers<DetectWorker> workers = new Workers<>( \"DETECT\" );\n+        Workers<DetectWorker> workers = new Workers<>(\"DETECT\");\n         int processors = processorsForParallelWork;\n         long stride = totalCount / processorsForParallelWork;\n-        if ( stride < 10 )\n+        if (stride < 10)\n         {\n             // Multi-threading would be overhead\n             processors = 1;\n@@ -440,104 +441,104 @@ public class EncodingIdMapper implements IdMapper\n         }\n         long fromInclusive;\n         long toExclusive = 0;\n-        for ( int i = 0; i < processors; i++ )\n+        for (int i = 0; i < processors; i++)\n         {\n             boolean last = i == processors - 1;\n             fromInclusive = toExclusive;\n             toExclusive = last ? totalCount : toExclusive + stride;\n-            workers.start( new DetectWorker( fromInclusive, toExclusive, last, progress ) );\n+            workers.start(new DetectWorker(fromInclusive, toExclusive, last, progress));\n         }\n         workers.awaitAndThrowOnErrorStrict();\n \n         long numberOfCollisions = 0;\n-        for ( DetectWorker detectWorker : workers )\n+        for (DetectWorker detectWorker : workers)\n         {\n             numberOfCollisions += detectWorker.numberOfCollisions;\n         }\n \n         progress.done();\n-        if ( numberOfCollisions > Integer.MAX_VALUE )\n+        if (numberOfCollisions > Integer.MAX_VALUE)\n         {\n-            throw new InputException( \"Too many collisions: \" + numberOfCollisions );\n+            throw new InputException(\"Too many collisions: \" + numberOfCollisions);\n         }\n \n-        int intNumberOfCollisions = toIntExact( numberOfCollisions );\n-        monitor.numberOfCollisions( intNumberOfCollisions );\n+        int intNumberOfCollisions = toIntExact(numberOfCollisions);\n+        monitor.numberOfCollisions(intNumberOfCollisions);\n         return intNumberOfCollisions;\n     }\n \n     /**\n      * @return {@code true} if marked as collision in this call, {@code false} if it was already marked as collision.\n      */\n-    private boolean markAsCollision( long nodeId )\n+    private boolean markAsCollision(long nodeId)\n     {\n-        long eId = dataCache.get( nodeId );\n-        boolean isAlreadyMarked = isCollision( eId );\n-        if ( isAlreadyMarked )\n+        long eId = dataCache.get(nodeId);\n+        boolean isAlreadyMarked = isCollision(eId);\n+        if (isAlreadyMarked)\n         {\n             return false;\n         }\n \n-        dataCache.set( nodeId, setCollision( eId ) );\n+        dataCache.set(nodeId, setCollision(eId));\n         return true;\n     }\n \n-    private void unmarkAsCollision( long dataIndex )\n+    private void unmarkAsCollision(long dataIndex)\n     {\n-        long eId = dataCache.get( dataIndex );\n-        boolean isMarked = isCollision( eId );\n-        if ( isMarked )\n+        long eId = dataCache.get(dataIndex);\n+        boolean isMarked = isCollision(eId);\n+        if (isMarked)\n         {\n-            dataCache.set( dataIndex, clearCollision( eId ) );\n+            dataCache.set(dataIndex, clearCollision(eId));\n         }\n     }\n \n-    private void buildCollisionInfo( PropertyValueLookup inputIdLookup, long pessimisticNumberOfCollisions,\n-            Collector collector, ProgressListener progress )\n-            throws InterruptedException\n+    private void buildCollisionInfo(PropertyValueLookup inputIdLookup, long pessimisticNumberOfCollisions,\n+                                    Collector collector, ProgressListener progress)\n+      throws InterruptedException\n     {\n-        progress.started( \"RESOLVE (~\" + pessimisticNumberOfCollisions + \" collisions)\" );\n+        progress.started(\"RESOLVE (~\" + pessimisticNumberOfCollisions + \" collisions)\");\n         Radix radix = radixFactory.newInstance();\n-        collisionNodeIdCache = cacheFactory.newByteArray( pessimisticNumberOfCollisions, new byte[COLLISION_ENTRY_SIZE], memoryTracker );\n-        collisionTrackerCache = trackerFactory.create( cacheFactory, pessimisticNumberOfCollisions );\n-        collisionValues = collisionValuesFactory.apply( pessimisticNumberOfCollisions );\n-        try ( var cursorTracer = pageCacheTracer.createPageCursorTracer( IMPORT_COLLISION_INFO_TAG ) )\n+        collisionNodeIdCache = cacheFactory.newByteArray(pessimisticNumberOfCollisions, new byte[COLLISION_ENTRY_SIZE], memoryTracker);\n+        collisionTrackerCache = trackerFactory.create(cacheFactory, pessimisticNumberOfCollisions);\n+        collisionValues = collisionValuesFactory.apply(pessimisticNumberOfCollisions);\n+        try (var cursorTracer = pageCacheTracer.createPageCursorTracer(IMPORT_COLLISION_INFO_TAG))\n         {\n-            for ( long nodeId = 0; nodeId <= highestSetIndex; nodeId++ )\n+            for (long nodeId = 0; nodeId <= highestSetIndex; nodeId++)\n             {\n-                long eId = dataCache.get( nodeId );\n-                if ( isCollision( eId ) )\n+                long eId = dataCache.get(nodeId);\n+                if (isCollision(eId))\n                 {\n                     // Store this collision input id for matching later in get()\n                     long collisionIndex = numberOfCollisions++;\n-                    Object id = inputIdLookup.lookupProperty( nodeId, cursorTracer );\n-                    long eIdFromInputId = encode( id );\n-                    long eIdWithoutCollisionBit = clearCollision( eId );\n-                    assert eIdFromInputId == eIdWithoutCollisionBit : format( \"Encoding mismatch during building of \" +\n-                            \"collision info. input id %s (a %s) marked as collision where this id was encoded into \" +\n-                            \"%d when put, but was now encoded into %d\", id, id.getClass().getSimpleName(), eIdWithoutCollisionBit, eIdFromInputId );\n-                    long offset = collisionValues.add( id );\n-                    collisionNodeIdCache.set5ByteLong( collisionIndex, 0, nodeId );\n-                    collisionNodeIdCache.set6ByteLong( collisionIndex, 5, offset );\n+                    Object id = inputIdLookup.lookupProperty(nodeId, cursorTracer);\n+                    long eIdFromInputId = encode(id);\n+                    long eIdWithoutCollisionBit = clearCollision(eId);\n+                    assert eIdFromInputId == eIdWithoutCollisionBit : format(\"Encoding mismatch during building of \" +\n+                      \"collision info. input id %s (a %s) marked as collision where this id was encoded into \" +\n+                      \"%d when put, but was now encoded into %d\", id, id.getClass().getSimpleName(), eIdWithoutCollisionBit, eIdFromInputId);\n+                    long offset = collisionValues.add(id);\n+                    collisionNodeIdCache.set5ByteLong(collisionIndex, 0, nodeId);\n+                    collisionNodeIdCache.set6ByteLong(collisionIndex, 5, offset);\n \n                     // The base of our sorting this time is going to be node id, so register that in the radix\n-                    radix.registerRadixOf( eIdWithoutCollisionBit );\n+                    radix.registerRadixOf(eIdWithoutCollisionBit);\n                 }\n-                progress.add( 1 );\n+                progress.add(1);\n             }\n         }\n         progress.done();\n \n         // Detect input id duplicates within the same group, with source information, line number and the works\n-        detectDuplicateInputIds( radix, collector, progress );\n+        detectDuplicateInputIds(radix, collector, progress);\n \n         // We won't be needing these anymore\n         collisionTrackerCache.close();\n         collisionTrackerCache = null;\n     }\n \n-    private void detectDuplicateInputIds( Radix radix, Collector collector, ProgressListener progress )\n-            throws InterruptedException\n+    private void detectDuplicateInputIds(Radix radix, Collector collector, ProgressListener progress)\n+      throws InterruptedException\n     {\n         // We do this collision sort using ParallelSort which has the data cache and the tracker cache,\n         // the tracker cache gets sorted, data cache stays intact. In the collision data case we actually\n@@ -551,15 +552,15 @@ public class EncodingIdMapper implements IdMapper\n         Comparator duplicateComparator = new Comparator()\n         {\n             @Override\n-            public boolean lt( long left, long pivot )\n+            public boolean lt(long left, long pivot)\n             {\n-                long leftEId = dataCache.get( left );\n-                long pivotEId = dataCache.get( pivot );\n-                if ( comparator.lt( leftEId, pivotEId ) )\n+                long leftEId = dataCache.get(left);\n+                long pivotEId = dataCache.get(pivot);\n+                if (comparator.lt(leftEId, pivotEId))\n                 {\n                     return true;\n                 }\n-                if ( leftEId == pivotEId )\n+                if (leftEId == pivotEId)\n                 {\n                     return left < pivot;\n                 }\n@@ -567,11 +568,11 @@ public class EncodingIdMapper implements IdMapper\n             }\n \n             @Override\n-            public boolean ge( long right, long pivot )\n+            public boolean ge(long right, long pivot)\n             {\n-                long rightEId = dataCache.get( right );\n-                long pivotEId = dataCache.get( pivot );\n-                if ( comparator.ge( rightEId, pivotEId ) )\n+                long rightEId = dataCache.get(right);\n+                long pivotEId = dataCache.get(pivot);\n+                if (comparator.ge(rightEId, pivotEId))\n                 {\n                     return rightEId != pivotEId || right > pivot;\n                 }\n@@ -579,60 +580,60 @@ public class EncodingIdMapper implements IdMapper\n             }\n \n             @Override\n-            public long dataValue( long nodeId )\n+            public long dataValue(long nodeId)\n             {\n-                return dataCache.get( nodeId );\n+                return dataCache.get(nodeId);\n             }\n         };\n \n-        new ParallelSort( radix, as5ByteLongArray( collisionNodeIdCache ), numberOfCollisions - 1,\n-                collisionTrackerCache, processorsForParallelWork, progress, duplicateComparator ).run();\n+        new ParallelSort(radix, as5ByteLongArray(collisionNodeIdCache), numberOfCollisions - 1,\n+          collisionTrackerCache, processorsForParallelWork, progress, duplicateComparator).run();\n \n         // Here we have a populated C\n         // We want to detect duplicate input ids within it\n         long previousEid = 0;\n         int previousGroupId = -1;\n         SameInputIdDetector detector = new SameInputIdDetector();\n-        progress.started( \"DEDUPLICATE\" );\n-        for ( int i = 0; i < numberOfCollisions; i++ )\n-        {\n-            long collisionIndex = collisionTrackerCache.get( i );\n-            long nodeId = collisionNodeIdCache.get5ByteLong( collisionIndex, 0 );\n-            long offset = collisionNodeIdCache.get6ByteLong( collisionIndex, 5 );\n-            long eid = dataCache.get( nodeId );\n-            int groupId = groupOf( nodeId );\n+        progress.started(\"DEDUPLICATE\");\n+        for (int i = 0; i < numberOfCollisions; i++)\n+        {\n+            long collisionIndex = collisionTrackerCache.get(i);\n+            long nodeId = collisionNodeIdCache.get5ByteLong(collisionIndex, 0);\n+            long offset = collisionNodeIdCache.get6ByteLong(collisionIndex, 5);\n+            long eid = dataCache.get(nodeId);\n+            int groupId = groupOf(nodeId);\n             // collisions of same eId AND groupId are always together\n             boolean same = eid == previousEid && previousGroupId == groupId;\n-            if ( !same )\n+            if (!same)\n             {\n                 detector.clear();\n             }\n \n             // Potential duplicate\n-            Object inputId = collisionValues.get( offset );\n-            long nonDuplicateNodeId = detector.add( nodeId, inputId );\n-            if ( nonDuplicateNodeId != -1 )\n+            Object inputId = collisionValues.get(offset);\n+            long nonDuplicateNodeId = detector.add(nodeId, inputId);\n+            if (nonDuplicateNodeId != -1)\n             {   // Duplicate\n-                collector.collectDuplicateNode( inputId, nodeId, groups.get( groupId ).name() );\n-                trackerCache.markAsDuplicate( nodeId );\n-                unmarkAsCollision( nonDuplicateNodeId );\n+                collector.collectDuplicateNode(inputId, nodeId, groups.get(groupId).name());\n+                trackerCache.markAsDuplicate(nodeId);\n+                unmarkAsCollision(nonDuplicateNodeId);\n             }\n \n             previousEid = eid;\n             previousGroupId = groupId;\n-            progress.add( 1 );\n+            progress.add(1);\n         }\n         progress.done();\n     }\n \n-    private LongArray as5ByteLongArray( ByteArray byteArray )\n+    private LongArray as5ByteLongArray(ByteArray byteArray)\n     {\n         return new LongArray()\n         {\n             @Override\n-            public void acceptMemoryStatsVisitor( MemoryStatsVisitor visitor )\n+            public void acceptMemoryStatsVisitor(MemoryStatsVisitor visitor)\n             {\n-                byteArray.acceptMemoryStatsVisitor( visitor );\n+                byteArray.acceptMemoryStatsVisitor(visitor);\n             }\n \n             @Override\n@@ -654,21 +655,21 @@ public class EncodingIdMapper implements IdMapper\n             }\n \n             @Override\n-            public LongArray at( long index )\n+            public LongArray at(long index)\n             {\n                 return null;\n             }\n \n             @Override\n-            public void set( long index, long value )\n+            public void set(long index, long value)\n             {\n                 throw new UnsupportedOperationException();\n             }\n \n             @Override\n-            public long get( long index )\n+            public long get(long index)\n             {\n-                return byteArray.get5ByteLong( index, 0 );\n+                return byteArray.get5ByteLong(index, 0);\n             }\n         };\n     }\n@@ -679,20 +680,20 @@ public class EncodingIdMapper implements IdMapper\n         private Object[] inputIdArray = new Object[10]; // grows on demand\n         private int cursor;\n \n-        long add( long nodeId, Object inputId )\n+        long add(long nodeId, Object inputId)\n         {\n-            for ( int i = 0; i < cursor; i++ )\n+            for (int i = 0; i < cursor; i++)\n             {\n-                if ( inputIdArray[i].equals( inputId ) )\n+                if (inputIdArray[i].equals(inputId))\n                 {\n                     return nodeIdArray[i];\n                 }\n             }\n \n-            if ( cursor == inputIdArray.length )\n+            if (cursor == inputIdArray.length)\n             {\n-                inputIdArray = Arrays.copyOf( inputIdArray, cursor * 2 );\n-                nodeIdArray = Arrays.copyOf( nodeIdArray, cursor * 2 );\n+                inputIdArray = Arrays.copyOf(inputIdArray, cursor * 2);\n+                nodeIdArray = Arrays.copyOf(nodeIdArray, cursor * 2);\n             }\n             inputIdArray[cursor] = inputId;\n             nodeIdArray[cursor] = nodeId;\n@@ -706,123 +707,123 @@ public class EncodingIdMapper implements IdMapper\n         }\n     }\n \n-    private int groupOf( long dataIndex )\n+    private int groupOf(long dataIndex)\n     {\n-        return groupCache.get( dataIndex );\n+        return groupCache.get(dataIndex);\n     }\n \n-    private long binarySearch( long x, Object inputId, long low, long high, int groupId )\n+    private long binarySearch(long x, Object inputId, long low, long high, int groupId)\n     {\n-        while ( low <= high )\n+        while (low <= high)\n         {\n             long mid = low + (high - low) / 2;//(low + high) / 2;\n-            long dataIndex = trackerCache.get( mid );\n-            if ( dataIndex == ID_NOT_FOUND )\n+            long dataIndex = trackerCache.get(mid);\n+            if (dataIndex == ID_NOT_FOUND)\n             {\n                 return ID_NOT_FOUND;\n             }\n-            long midValue = dataCache.get( dataIndex );\n-            switch ( Utils.unsignedDifference( clearCollision( midValue ), x ) )\n+            long midValue = dataCache.get(dataIndex);\n+            switch (Utils.unsignedDifference(clearCollision(midValue), x))\n             {\n-            case EQ:\n-                // We found the value we were looking for. Question now is whether or not it's the only\n-                // of its kind. Not all values that there are duplicates of are considered collisions,\n-                // read more in detectAndMarkCollisions(). So regardless we need to check previous/next\n-                // if they are the same value.\n-                boolean leftEq = mid > 0 && Utils.unsignedCompare( x, dataValue( mid - 1 ), Utils.CompareType.EQ );\n-                boolean rightEq = mid < highestSetIndex && Utils.unsignedCompare( x, dataValue( mid + 1 ), Utils.CompareType.EQ );\n-                if ( leftEq || rightEq )\n-                {   // OK so there are actually multiple equal data values here, we need to go through them all\n-                    // to be sure we find the correct one.\n-                    return findFromEIdRange( leftEq ? mid - 1 : mid, rightEq ? mid + 1 : mid, midValue, inputId, x, groupId );\n-                }\n-                // This is the only value here, let's do a simple comparison with correct group id and return\n-                return groupOf( dataIndex ) == groupId ? dataIndex : ID_NOT_FOUND;\n-            case LT:\n-                low = mid + 1;\n-                break;\n-            default:\n-                high = mid - 1;\n-                break;\n+                case EQ:\n+                    // We found the value we were looking for. Question now is whether or not it's the only\n+                    // of its kind. Not all values that there are duplicates of are considered collisions,\n+                    // read more in detectAndMarkCollisions(). So regardless we need to check previous/next\n+                    // if they are the same value.\n+                    boolean leftEq = mid > 0 && Utils.unsignedCompare(x, dataValue(mid - 1), Utils.CompareType.EQ);\n+                    boolean rightEq = mid < highestSetIndex && Utils.unsignedCompare(x, dataValue(mid + 1), Utils.CompareType.EQ);\n+                    if (leftEq || rightEq)\n+                    {   // OK so there are actually multiple equal data values here, we need to go through them all\n+                        // to be sure we find the correct one.\n+                        return findFromEIdRange(leftEq ? mid - 1 : mid, rightEq ? mid + 1 : mid, midValue, inputId, x, groupId);\n+                    }\n+                    // This is the only value here, let's do a simple comparison with correct group id and return\n+                    return groupOf(dataIndex) == groupId ? dataIndex : ID_NOT_FOUND;\n+                case LT:\n+                    low = mid + 1;\n+                    break;\n+                default:\n+                    high = mid - 1;\n+                    break;\n             }\n         }\n         return ID_NOT_FOUND;\n     }\n \n-    private long dataValue( long index )\n+    private long dataValue(long index)\n     {\n-        return clearCollision( dataCache.get( trackerCache.get( index ) ) );\n+        return clearCollision(dataCache.get(trackerCache.get(index)));\n     }\n \n-    private long findCollisionIndex( long value )\n+    private long findCollisionIndex(long value)\n     {\n         // can't be done on unsorted data\n         long low = 0;\n         long high = numberOfCollisions - 1;\n-        while ( low <= high )\n+        while (low <= high)\n         {\n             long mid = (low + high) / 2;\n-            long midValue = collisionNodeIdCache.get5ByteLong( mid, 0 );\n-            switch ( Utils.unsignedDifference( midValue, value ) )\n+            long midValue = collisionNodeIdCache.get5ByteLong(mid, 0);\n+            switch (Utils.unsignedDifference(midValue, value))\n             {\n-            case EQ: return mid;\n-            case LT:\n-                low = mid + 1;\n-                break;\n-            default:\n-                high = mid - 1;\n-                break;\n+                case EQ:\n+                    return mid;\n+                case LT:\n+                    low = mid + 1;\n+                    break;\n+                default:\n+                    high = mid - 1;\n+                    break;\n             }\n         }\n         return ID_NOT_FOUND;\n     }\n \n-    private long findFromEIdRange( long fromIndex, long toIndex, long val, Object inputId, long x, int groupId )\n+    private long findFromEIdRange(long fromIndex, long toIndex, long val, Object inputId, long x, int groupId)\n     {\n-        val = clearCollision( val );\n+        val = clearCollision(val);\n         assert val == x;\n \n-        while ( fromIndex > 0 && Utils.unsignedCompare( val, dataValue( fromIndex - 1 ), Utils.CompareType.EQ ) )\n+        while (fromIndex > 0 && Utils.unsignedCompare(val, dataValue(fromIndex - 1), Utils.CompareType.EQ))\n         {\n             fromIndex--;\n         }\n-        while ( toIndex < highestSetIndex && Utils.unsignedCompare( val, dataValue( toIndex + 1 ), Utils.CompareType.EQ ) )\n+        while (toIndex < highestSetIndex && Utils.unsignedCompare(val, dataValue(toIndex + 1), Utils.CompareType.EQ))\n         {\n             toIndex++;\n         }\n \n-        return findFromEIdRange( fromIndex, toIndex, groupId, inputId );\n+        return findFromEIdRange(fromIndex, toIndex, groupId, inputId);\n     }\n \n-    private long findFromEIdRange( long fromIndex, long toIndex, int groupId, Object inputId )\n+    private long findFromEIdRange(long fromIndex, long toIndex, int groupId, Object inputId)\n     {\n         long lowestFound = ID_NOT_FOUND; // lowest data index means \"first put\"\n-        for ( long index = fromIndex; index <= toIndex; index++ )\n+        for (long index = fromIndex; index <= toIndex; index++)\n         {\n-            long nodeId = trackerCache.get( index );\n-            int group = groupOf( nodeId );\n-            if ( groupId == group )\n+            long nodeId = trackerCache.get(index);\n+            int group = groupOf(nodeId);\n+            if (groupId == group)\n             {\n-                long eId = dataCache.get( nodeId );\n-                if ( isCollision( eId ) )\n+                long eId = dataCache.get(nodeId);\n+                if (isCollision(eId))\n                 {\n-                    if ( !trackerCache.isMarkedAsDuplicate( nodeId ) )\n+                    if (!trackerCache.isMarkedAsDuplicate(nodeId))\n                     {   // We found a data value for our group, but there are collisions within this group.\n                         // We need to consult the collision cache and original input id\n-                        long collisionIndex = findCollisionIndex( nodeId );\n-                        long offset = collisionNodeIdCache.get6ByteLong( collisionIndex, 5 );\n-                        Object value = collisionValues.get( offset );\n-                        if ( inputId.equals( value ) )\n+                        long collisionIndex = findCollisionIndex(nodeId);\n+                        long offset = collisionNodeIdCache.get6ByteLong(collisionIndex, 5);\n+                        Object value = collisionValues.get(offset);\n+                        if (inputId.equals(value))\n                         {\n                             // :)\n-                            lowestFound = lowestFound == ID_NOT_FOUND ? nodeId : min( lowestFound, nodeId );\n+                            lowestFound = lowestFound == ID_NOT_FOUND ? nodeId : min(lowestFound, nodeId);\n                             // continue checking so that we can find the lowest one. It's not up to us here to\n                             // consider multiple equal ids in this group an error or not. That should have been\n                             // decided in #prepare.\n                         }\n                     }\n-                }\n-                else\n+                } else\n                 {   // We found a data value that is alone in its group. Just return it\n                     // :D\n                     lowestFound = nodeId;\n@@ -837,20 +838,20 @@ public class EncodingIdMapper implements IdMapper\n     }\n \n     @Override\n-    public void acceptMemoryStatsVisitor( MemoryStatsVisitor visitor )\n+    public void acceptMemoryStatsVisitor(MemoryStatsVisitor visitor)\n     {\n-        nullSafeAcceptMemoryStatsVisitor( visitor, dataCache );\n-        nullSafeAcceptMemoryStatsVisitor( visitor, trackerCache );\n-        nullSafeAcceptMemoryStatsVisitor( visitor, collisionTrackerCache );\n-        nullSafeAcceptMemoryStatsVisitor( visitor, collisionNodeIdCache );\n-        nullSafeAcceptMemoryStatsVisitor( visitor, collisionValues );\n+        nullSafeAcceptMemoryStatsVisitor(visitor, dataCache);\n+        nullSafeAcceptMemoryStatsVisitor(visitor, trackerCache);\n+        nullSafeAcceptMemoryStatsVisitor(visitor, collisionTrackerCache);\n+        nullSafeAcceptMemoryStatsVisitor(visitor, collisionNodeIdCache);\n+        nullSafeAcceptMemoryStatsVisitor(visitor, collisionValues);\n     }\n \n-    private void nullSafeAcceptMemoryStatsVisitor( MemoryStatsVisitor visitor, MemoryStatsVisitor.Visitable mem )\n+    private void nullSafeAcceptMemoryStatsVisitor(MemoryStatsVisitor visitor, MemoryStatsVisitor.Visitable mem)\n     {\n-        if ( mem != null )\n+        if (mem != null)\n         {\n-            mem.acceptMemoryStatsVisitor( visitor );\n+            mem.acceptMemoryStatsVisitor(visitor);\n         }\n     }\n \n@@ -865,34 +866,34 @@ public class EncodingIdMapper implements IdMapper\n     {\n         dataCache.close();\n         groupCache.close();\n-        if ( trackerCache != null )\n+        if (trackerCache != null)\n         {\n             trackerCache.close();\n         }\n-        if ( collisionNodeIdCache != null )\n+        if (collisionNodeIdCache != null)\n         {\n             collisionNodeIdCache.close();\n         }\n-        if ( collisionValues != null )\n+        if (collisionValues != null)\n         {\n             collisionValues.close();\n         }\n     }\n \n     @Override\n-    public MemoryStatsVisitor.Visitable memoryEstimation( long numberOfNodes )\n+    public MemoryStatsVisitor.Visitable memoryEstimation(long numberOfNodes)\n     {\n         return visitor ->\n         {\n             int trackerSize = numberOfNodes > IntTracker.MAX_ID ? BigIdTracker.SIZE : IntTracker.SIZE;\n-            visitor.offHeapUsage( numberOfNodes * (Long.BYTES /*data*/ + trackerSize /*tracker*/) );\n+            visitor.offHeapUsage(numberOfNodes * (Long.BYTES /*data*/ + trackerSize /*tracker*/));\n         };\n     }\n \n     @Override\n     public LongIterator leftOverDuplicateNodesIds()\n     {\n-        if ( numberOfCollisions == 0 )\n+        if (numberOfCollisions == 0)\n         {\n             return ImmutableEmptyLongIterator.INSTANCE;\n         }\n@@ -906,12 +907,12 @@ public class EncodingIdMapper implements IdMapper\n             @Override\n             protected boolean fetchNext()\n             {\n-                while ( nodeId <= highestSetIndex )\n+                while (nodeId <= highestSetIndex)\n                 {\n                     long candidate = nodeId++;\n-                    if ( trackerCache.isMarkedAsDuplicate( candidate ) )\n+                    if (trackerCache.isMarkedAsDuplicate(candidate))\n                     {\n-                        return next( candidate );\n+                        return next(candidate);\n                     }\n                 }\n                 return false;\n",
            "diff_size": 299
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
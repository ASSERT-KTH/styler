{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1988",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "68",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1988/SingleFilePageSwapperFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1988/SingleFilePageSwapperFactory.java\nindex 9cfe5bc6eea..eafb2baed26 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1988/SingleFilePageSwapperFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1988/SingleFilePageSwapperFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.impl;\n \n import java.io.File;\n@@ -36,62 +37,61 @@ import org.neo4j.io.pagecache.PageSwapperFactory;\n  */\n public class SingleFilePageSwapperFactory implements PageSwapperFactory\n {\n-    private FileSystemAbstraction fs;\n+  private FileSystemAbstraction fs;\n \n-    @Override\n-    public void open( FileSystemAbstraction fs, Configuration config )\n-    {\n-        this.fs = fs;\n-    }\n+  @Override\n+  public void open(FileSystemAbstraction fs, Configuration config)\n+  {\n+    this.fs = fs;\n+  }\n \n-    @Override\n-    public FileSystemAbstraction getFileSystemAbstraction()\n-    {\n-        return fs;\n-    }\n+  @Override\n+  public FileSystemAbstraction getFileSystemAbstraction()\n+  {\n+    return fs;\n+  }\n \n-    @Override\n-    public PageSwapper createPageSwapper(\n-            File file,\n-            int filePageSize,\n-            PageEvictionCallback onEviction,\n-            boolean createIfNotExist ) throws IOException\n+  @Override\n+  public PageSwapper createPageSwapper(\n+      File file,\n+      int filePageSize,\n+      PageEvictionCallback onEviction,\n+      boolean createIfNotExist) throws IOException\n+  {\n+    if (!fs.fileExists(file))\n     {\n-        if ( !fs.fileExists( file ) )\n-        {\n-            if ( createIfNotExist )\n-            {\n-                fs.create( file ).close();\n-            }\n-            else\n-            {\n-                throw new NoSuchFileException( file.getPath(), null, \"Cannot map non-existing file\" );\n-            }\n-        }\n-        return new SingleFilePageSwapper( file, fs, filePageSize, onEviction );\n+      if (createIfNotExist)\n+      {\n+        fs.create(file).close();\n+      } else\n+      {\n+        throw new NoSuchFileException(file.getPath(), null, \"Cannot map non-existing file\");\n+      }\n     }\n+    return new SingleFilePageSwapper(file, fs, filePageSize, onEviction);\n+  }\n \n-    @Override\n-    public void syncDevice()\n-    {\n-        // Nothing do to, since we `fsync` files individually in `force()`.\n-    }\n+  @Override\n+  public void syncDevice()\n+  {\n+    // Nothing do to, since we `fsync` files individually in `force()`.\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        // We have nothing to close\n-    }\n+  @Override\n+  public void close()\n+  {\n+    // We have nothing to close\n+  }\n \n-    @Override\n-    public String implementationName()\n-    {\n-        return \"single\";\n-    }\n+  @Override\n+  public String implementationName()\n+  {\n+    return \"single\";\n+  }\n \n-    @Override\n-    public long getRequiredBufferAlignment()\n-    {\n-        return 1;\n-    }\n+  @Override\n+  public long getRequiredBufferAlignment()\n+  {\n+    return 1;\n+  }\n }\n",
            "diff_size": 54
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1988/SingleFilePageSwapperFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1988/SingleFilePageSwapperFactory.java\nindex 9cfe5bc6eea..c21dcfcf97c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1988/SingleFilePageSwapperFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1988/SingleFilePageSwapperFactory.java\n@@ -51,12 +51,10 @@ public class SingleFilePageSwapperFactory implements PageSwapperFactory\n     }\n \n     @Override\n-    public PageSwapper createPageSwapper(\n-            File file,\n-            int filePageSize,\n+    public PageSwapper createPageSwapper( File file, int filePageSize,\n             PageEvictionCallback onEviction,\n             boolean createIfNotExist ) throws IOException\n-    {\n+{\n         if ( !fs.fileExists( file ) )\n         {\n             if ( createIfNotExist )\n@@ -94,4 +92,4 @@ public class SingleFilePageSwapperFactory implements PageSwapperFactory\n     {\n         return 1;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
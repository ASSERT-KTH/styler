{
    "project_name": "Angel-ML-angel",
    "error_id": "761",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/761/CompIntDoubleRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/761/CompIntDoubleRowUpdateSplit.java\nindex 5ba2b70ea2d..5ff2b4e41cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/761/CompIntDoubleRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/761/CompIntDoubleRowUpdateSplit.java\n@@ -47,8 +47,8 @@ public class CompIntDoubleRowUpdateSplit extends RowUpdateSplit {\n   /**\n    * Create a new CompIntDoubleRowUpdateSplit.\n    *\n-   * @param rowIndex row index\n-   * @param split row update split\n+   * @param rowIndex   row index\n+   * @param split      row update split\n    * @param maxItemNum Max element number in this split\n    */\n   public CompIntDoubleRowUpdateSplit(int rowIndex, IntDoubleVector split, int maxItemNum) {\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/761/CompIntDoubleRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/761/CompIntDoubleRowUpdateSplit.java\nindex 5ba2b70ea2d..cce9cf9d9b9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/761/CompIntDoubleRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/761/CompIntDoubleRowUpdateSplit.java\n@@ -15,7 +15,6 @@\n  *\n  */\n \n-\n package com.tencent.angel.psagent.matrix.oplog.cache;\n \n import com.tencent.angel.ml.math2.VFactory;\n@@ -112,8 +111,7 @@ public class CompIntDoubleRowUpdateSplit extends RowUpdateSplit {\n         buf.writeDouble(values[i]);\n       }\n     } else {\n-      throw new UnsupportedOperationException(\n-          \"unsupport split for storage \" + storage.getClass().getName());\n+      throw new UnsupportedOperationException(\"unsupport split for storage \" + storage.getClass().getName());\n     }\n   }\n \n@@ -152,4 +150,4 @@ public class CompIntDoubleRowUpdateSplit extends RowUpdateSplit {\n       return 4 + super.bufferLen() + split.getStorage().size() * 12;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 148).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/761/CompIntDoubleRowUpdateSplit.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/761/CompIntDoubleRowUpdateSplit.java\nindex 5ba2b70ea2d..f452231eb68 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/761/CompIntDoubleRowUpdateSplit.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/761/CompIntDoubleRowUpdateSplit.java\n@@ -32,11 +32,13 @@ import it.unimi.dsi.fastutil.objects.ObjectIterator;\n /**\n  * Component int double row update split\n  */\n+\n public class CompIntDoubleRowUpdateSplit extends RowUpdateSplit {\n \n   /**\n    * Row update split, it only use in serialization\n    */\n+\n   private final IntDoubleVector split;\n \n   /**\n@@ -51,11 +53,11 @@ public class CompIntDoubleRowUpdateSplit extends RowUpdateSplit {\n    * @param split row update split\n    * @param maxItemNum Max element number in this split\n    */\n+\n   public CompIntDoubleRowUpdateSplit(int rowIndex, IntDoubleVector split, int maxItemNum) {\n     super(rowIndex, RowType.T_DOUBLE_DENSE, -1, -1);\n     this.split = split;\n     this.maxItemNum = maxItemNum;\n-\n     if (split != null) {\n       IntDoubleVectorStorage storage = split.getStorage();\n       if (storage instanceof IntDoubleDenseVectorStorage) {\n@@ -69,6 +71,7 @@ public class CompIntDoubleRowUpdateSplit extends RowUpdateSplit {\n   /**\n    * Create a empty CompIntDoubleRowUpdateSplit.\n    */\n+\n   public CompIntDoubleRowUpdateSplit() {\n     this(-1, null, -1);\n   }\n@@ -78,6 +81,7 @@ public class CompIntDoubleRowUpdateSplit extends RowUpdateSplit {\n    *\n    * @return row update split vector\n    */\n+\n   public IntDoubleVector getSplit() {\n     return split;\n   }\n@@ -86,7 +90,6 @@ public class CompIntDoubleRowUpdateSplit extends RowUpdateSplit {\n   public void serialize(ByteBuf buf) {\n     super.serialize(buf);\n     IntDoubleVectorStorage storage = split.getStorage();\n-\n     if (storage instanceof IntDoubleSparseVectorStorage) {\n       buf.writeInt(storage.size());\n       ObjectIterator<Int2DoubleMap.Entry> iter = storage.entryIterator();\n@@ -97,29 +100,30 @@ public class CompIntDoubleRowUpdateSplit extends RowUpdateSplit {\n         buf.writeDouble(entry.getDoubleValue());\n       }\n     } else if (storage instanceof IntDoubleSortedVectorStorage) {\n-      buf.writeInt(storage.size());\n-      int[] indices = storage.getIndices();\n-      double[] values = storage.getValues();\n-      for (int i = 0; i < indices.length; i++) {\n-        buf.writeInt(indices[i]);\n-        buf.writeDouble(values[i]);\n-      }\n+             buf.writeInt(storage.size());\n+\n+             int[] indices = storage.getIndices();\n+             double[] values = storage.getValues();\n+             for (int i = 0; i < indices.length; i++) {\n+               buf.writeInt(indices[i]);\n+               buf.writeDouble(values[i]);\n+             }\n     } else if (storage instanceof IntDoubleDenseVectorStorage) {\n-      double[] values = storage.getValues();\n-      int writeSize = values.length < maxItemNum ? values.length : maxItemNum;\n-      buf.writeInt(writeSize);\n-      for (int i = 0; i < writeSize; i++) {\n-        buf.writeDouble(values[i]);\n-      }\n-    } else {\n-      throw new UnsupportedOperationException(\n-          \"unsupport split for storage \" + storage.getClass().getName());\n-    }\n+             double[] values = storage.getValues();\n+             int writeSize = values.length < maxItemNum ? values.length : maxItemNum;\n+             buf.writeInt(writeSize);\n+             for (int i = 0; i < writeSize; i++) {\n+               buf.writeDouble(values[i]);\n+             }\n+           } else {\n+             throw new UnsupportedOperationException(\"unsupport split for storage \" + storage.getClass().getName());\n+           }\n   }\n \n   @Override\n   public void deserialize(ByteBuf buf) {\n     super.deserialize(buf);\n+\n     int elemNum = buf.readInt();\n     if (rowType == RowType.T_DOUBLE_DENSE_COMPONENT) {\n       double[] values = new double[elemNum];\n@@ -128,12 +132,10 @@ public class CompIntDoubleRowUpdateSplit extends RowUpdateSplit {\n       }\n       vector = VFactory.denseDoubleVector(values);\n     } else if (rowType == RowType.T_DOUBLE_SPARSE_COMPONENT) {\n-      vector = VFactory.sparseDoubleVector(\n-          (int) (splitContext.getPartKey().getEndCol() - splitContext.getPartKey().getStartCol()),\n-          elemNum);\n-      for (int i = 0; i < elemNum; i++) {\n-        ((IntDoubleVector) vector).set(buf.readInt(), buf.readDouble());\n-      }\n+             vector = VFactory.sparseDoubleVector((int) (splitContext.getPartKey().getEndCol() - splitContext.getPartKey().getStartCol()), elemNum);\n+             for (int i = 0; i < elemNum; i++) {\n+               ((IntDoubleVector) vector).set(buf.readInt(), buf.readDouble());\n+             }\n     } else {\n       throw new UnsupportedOperationException(\"Unsupport rowtype \" + rowType);\n     }\n@@ -152,4 +154,4 @@ public class CompIntDoubleRowUpdateSplit extends RowUpdateSplit {\n       return 4 + super.bufferLen() + split.getStorage().size() * 12;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
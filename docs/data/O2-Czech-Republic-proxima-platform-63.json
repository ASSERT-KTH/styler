{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "63",
    "information": {
        "errors": [
            {
                "line": "65",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 98).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  /**\n   * When returns {@code false} the input element is not stored in the storage and is throws away.\n   *\n   * @param ingest the input data\n   * @return {@code false} to throw the element away",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/63/StorageFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/63/StorageFilter.java\nindex db397e237fb..a42607d7652 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/63/StorageFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/63/StorageFilter.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.storage;\n \n import cz.o2.proxima.annotations.Stable;\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/63/StorageFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/63/StorageFilter.java\nindex db397e237fb..8afe92dafc1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/63/StorageFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/63/StorageFilter.java\n@@ -68,4 +68,4 @@ public interface StorageFilter extends Serializable {\n    * @return {@code false} to throw the element away\n    */\n   boolean apply(StreamElement ingest);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/63/StorageFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/63/StorageFilter.java\nindex db397e237fb..fcdf1ab61e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/63/StorageFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/63/StorageFilter.java\n@@ -21,11 +21,15 @@ import java.util.ArrayList;\n import java.util.List;\n \n /** A filter that is applied to each input data ingest. */\n+\n+\n @Stable\n @FunctionalInterface\n public interface StorageFilter extends Serializable {\n \n   /** Filter consisting of several filters with applied function. */\n+\n+\n   public abstract class CompoundFilter implements StorageFilter {\n \n     protected final List<StorageFilter> filters = new ArrayList<>();\n@@ -36,6 +40,7 @@ public interface StorageFilter extends Serializable {\n   }\n \n   /** Filter performing logical OR of several filters. */\n+\n   public class OrFilter extends CompoundFilter {\n \n     protected OrFilter(List<StorageFilter> filters) {\n@@ -49,6 +54,7 @@ public interface StorageFilter extends Serializable {\n   }\n \n   /** Filter performing logical AND of several filters. */\n+\n   public class AndFilter extends CompoundFilter {\n \n     protected AndFilter(List<StorageFilter> filters) {\n@@ -67,5 +73,7 @@ public interface StorageFilter extends Serializable {\n    * @param ingest the input data\n    * @return {@code false} to throw the element away\n    */\n+\n+\n   boolean apply(StreamElement ingest);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
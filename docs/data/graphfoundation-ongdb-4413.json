{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4413",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "69",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "72",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4413/SetDefaultAdminCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4413/SetDefaultAdminCommand.java\nindex 5ac4d9b795b..c923bf81c15 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4413/SetDefaultAdminCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4413/SetDefaultAdminCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.admin.security;\n \n import java.io.File;\n@@ -39,94 +40,92 @@ import org.neo4j.server.security.auth.UserRepository;\n \n public class SetDefaultAdminCommand implements AdminCommand\n {\n-    public static final String ADMIN_INI = \"admin.ini\";\n-    public static final String COMMAND_NAME = \"set-default-admin\";\n-    private static final Arguments arguments = new Arguments().withMandatoryPositionalArgument( 0, \"username\" );\n+  public static final String ADMIN_INI = \"admin.ini\";\n+  public static final String COMMAND_NAME = \"set-default-admin\";\n+  private static final Arguments arguments = new Arguments().withMandatoryPositionalArgument(0, \"username\");\n \n-    private final Path homeDir;\n-    private final Path configDir;\n-    private OutsideWorld outsideWorld;\n+  private final Path homeDir;\n+  private final Path configDir;\n+  private OutsideWorld outsideWorld;\n \n-    SetDefaultAdminCommand( Path homeDir, Path configDir, OutsideWorld outsideWorld )\n-    {\n-        this.homeDir = homeDir;\n-        this.configDir = configDir;\n-        this.outsideWorld = outsideWorld;\n-    }\n+  SetDefaultAdminCommand(Path homeDir, Path configDir, OutsideWorld outsideWorld)\n+  {\n+    this.homeDir = homeDir;\n+    this.configDir = configDir;\n+    this.outsideWorld = outsideWorld;\n+  }\n \n-    public static Arguments arguments()\n+  public static Arguments arguments()\n+  {\n+    return arguments;\n+  }\n+\n+  @Override\n+  public void execute(String[] args) throws IncorrectUsage, CommandFailed\n+  {\n+    try\n+    {\n+      setDefaultAdmin(arguments.parse(args).get(0));\n+    } catch (IncorrectUsage | CommandFailed e)\n+    {\n+      throw e;\n+    } catch (Throwable throwable)\n     {\n-        return arguments;\n+      throw new CommandFailed(throwable.getMessage(), new RuntimeException(throwable));\n     }\n+  }\n \n-    @Override\n-    public void execute( String[] args ) throws IncorrectUsage, CommandFailed\n+  private void setDefaultAdmin(String username) throws Throwable\n+  {\n+    FileSystemAbstraction fileSystem = outsideWorld.fileSystem();\n+    Config config = loadNeo4jConfig();\n+\n+    FileUserRepository users = CommunitySecurityModule.getUserRepository(config, NullLogProvider.getInstance(),\n+        fileSystem);\n+\n+    users.init();\n+    users.start();\n+    Set<String> userNames = users.getAllUsernames();\n+    users.stop();\n+    users.shutdown();\n+\n+    if (userNames.isEmpty())\n     {\n-        try\n-        {\n-            setDefaultAdmin( arguments.parse( args ).get( 0 ) );\n-        }\n-        catch ( IncorrectUsage | CommandFailed e )\n-        {\n-            throw e;\n-        }\n-        catch ( Throwable throwable )\n-        {\n-            throw new CommandFailed( throwable.getMessage(), new RuntimeException( throwable ) );\n-        }\n+      FileUserRepository initialUsers = CommunitySecurityModule.getInitialUserRepository(config,\n+          NullLogProvider.getInstance(),\n+          fileSystem);\n+      initialUsers.init();\n+      initialUsers.start();\n+      userNames = initialUsers.getAllUsernames();\n+      initialUsers.stop();\n+      initialUsers.shutdown();\n     }\n \n-    private void setDefaultAdmin( String username ) throws Throwable\n+    if (!userNames.contains(username))\n     {\n-        FileSystemAbstraction fileSystem = outsideWorld.fileSystem();\n-        Config config = loadNeo4jConfig();\n-\n-        FileUserRepository users = CommunitySecurityModule.getUserRepository( config, NullLogProvider.getInstance(),\n-                fileSystem );\n-\n-        users.init();\n-        users.start();\n-        Set<String> userNames = users.getAllUsernames();\n-        users.stop();\n-        users.shutdown();\n-\n-        if ( userNames.isEmpty() )\n-        {\n-            FileUserRepository initialUsers = CommunitySecurityModule.getInitialUserRepository( config,\n-                    NullLogProvider.getInstance(),\n-                    fileSystem );\n-            initialUsers.init();\n-            initialUsers.start();\n-            userNames = initialUsers.getAllUsernames();\n-            initialUsers.stop();\n-            initialUsers.shutdown();\n-        }\n-\n-        if ( !userNames.contains( username ) )\n-        {\n-            throw new CommandFailed( String.format( \"no such user: '%s'\", username ) );\n-        }\n-\n-        File adminIniFile = new File( CommunitySecurityModule.getUserRepositoryFile( config ).getParentFile(),\n-                ADMIN_INI );\n-        if ( fileSystem.fileExists( adminIniFile ) )\n-        {\n-            fileSystem.deleteFile( adminIniFile );\n-        }\n-        UserRepository admins = new FileUserRepository( fileSystem, adminIniFile, NullLogProvider.getInstance() );\n-        admins.init();\n-        admins.start();\n-        admins.create( new User.Builder( username, Credential.INACCESSIBLE ).build() );\n-        admins.stop();\n-        admins.shutdown();\n-\n-        outsideWorld.stdOutLine( \"default admin user set to '\" + username + \"'\" );\n+      throw new CommandFailed(String.format(\"no such user: '%s'\", username));\n     }\n \n-    Config loadNeo4jConfig()\n+    File adminIniFile = new File(CommunitySecurityModule.getUserRepositoryFile(config).getParentFile(),\n+        ADMIN_INI);\n+    if (fileSystem.fileExists(adminIniFile))\n     {\n-        return Config.fromFile( configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME ) )\n-                .withHome( homeDir )\n-                .withConnectorsDisabled().build();\n+      fileSystem.deleteFile(adminIniFile);\n     }\n+    UserRepository admins = new FileUserRepository(fileSystem, adminIniFile, NullLogProvider.getInstance());\n+    admins.init();\n+    admins.start();\n+    admins.create(new User.Builder(username, Credential.INACCESSIBLE).build());\n+    admins.stop();\n+    admins.shutdown();\n+\n+    outsideWorld.stdOutLine(\"default admin user set to '\" + username + \"'\");\n+  }\n+\n+  Config loadNeo4jConfig()\n+  {\n+    return Config.fromFile(configDir.resolve(Config.DEFAULT_CONFIG_FILE_NAME))\n+        .withHome(homeDir)\n+        .withConnectorsDisabled().build();\n+  }\n }\n",
            "diff_size": 123
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4413/SetDefaultAdminCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4413/SetDefaultAdminCommand.java\nindex 5ac4d9b795b..b2aae6c052b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4413/SetDefaultAdminCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4413/SetDefaultAdminCommand.java\n@@ -40,7 +40,8 @@ import org.neo4j.server.security.auth.UserRepository;\n public class SetDefaultAdminCommand implements AdminCommand\n {\n     public static final String ADMIN_INI = \"admin.ini\";\n-    public static final String COMMAND_NAME = \"set-default-admin\";\n+\n+public static final String COMMAND_NAME = \"set-default-admin\";\n     private static final Arguments arguments = new Arguments().withMandatoryPositionalArgument( 0, \"username\" );\n \n     private final Path homeDir;\n@@ -80,22 +81,18 @@ public class SetDefaultAdminCommand implements AdminCommand\n     {\n         FileSystemAbstraction fileSystem = outsideWorld.fileSystem();\n         Config config = loadNeo4jConfig();\n-\n-        FileUserRepository users = CommunitySecurityModule.getUserRepository( config, NullLogProvider.getInstance(),\n+FileUserRepository users = CommunitySecurityModule.getUserRepository( config, NullLogProvider.getInstance(),\n                 fileSystem );\n-\n-        users.init();\n+users.init();\n         users.start();\n         Set<String> userNames = users.getAllUsernames();\n         users.stop();\n         users.shutdown();\n-\n-        if ( userNames.isEmpty() )\n+if ( userNames.isEmpty() )\n         {\n             FileUserRepository initialUsers = CommunitySecurityModule.getInitialUserRepository( config,\n-                    NullLogProvider.getInstance(),\n-                    fileSystem );\n-            initialUsers.init();\n+                    NullLogProvider.getInstance(), fileSystem );\n+initialUsers.init();\n             initialUsers.start();\n             userNames = initialUsers.getAllUsernames();\n             initialUsers.stop();\n@@ -109,24 +106,23 @@ public class SetDefaultAdminCommand implements AdminCommand\n \n         File adminIniFile = new File( CommunitySecurityModule.getUserRepositoryFile( config ).getParentFile(),\n                 ADMIN_INI );\n-        if ( fileSystem.fileExists( adminIniFile ) )\n+if ( fileSystem.fileExists( adminIniFile ) )\n         {\n             fileSystem.deleteFile( adminIniFile );\n         }\n-        UserRepository admins = new FileUserRepository( fileSystem, adminIniFile, NullLogProvider.getInstance() );\n+\n+UserRepository admins = new FileUserRepository( fileSystem, adminIniFile, NullLogProvider.getInstance() );\n         admins.init();\n         admins.start();\n         admins.create( new User.Builder( username, Credential.INACCESSIBLE ).build() );\n         admins.stop();\n         admins.shutdown();\n-\n-        outsideWorld.stdOutLine( \"default admin user set to '\" + username + \"'\" );\n+outsideWorld.stdOutLine( \"default admin user set to '\" + username + \"'\" );\n     }\n \n     Config loadNeo4jConfig()\n     {\n-        return Config.fromFile( configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME ) )\n-                .withHome( homeDir )\n+        return Config.fromFile( configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME ) ).withHome( homeDir )\n                 .withConnectorsDisabled().build();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
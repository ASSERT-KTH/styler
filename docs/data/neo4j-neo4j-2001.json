{
    "project_name": "neo4j-neo4j",
    "error_id": "2001",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2001/TransactionData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2001/TransactionData.java\nindex 5b0dd4e54e5..31dc16eb23c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2001/TransactionData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2001/TransactionData.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.event;\n \n import java.util.Map;\n@@ -51,11 +52,12 @@ public interface TransactionData\n \n     /**\n      * Returns whether or not {@code node} is deleted in this transaction.\n+     *\n      * @param node the {@link Node} to check whether or not it is deleted\n-     * in this transaction.\n+     *             in this transaction.\n      * @return whether or not {@code node} is deleted in this transaction.\n      */\n-    boolean isDeleted( Node node );\n+    boolean isDeleted(Node node);\n \n     /**\n      * Get the properties that had a value assigned or overwritten on a node\n@@ -122,11 +124,11 @@ public interface TransactionData\n      * transaction.\n      *\n      * @param relationship the {@link Relationship} to check whether or not it\n-     *            is deleted in this transaction.\n+     *                     is deleted in this transaction.\n      * @return whether or not {@code relationship} is deleted in this\n-     *         transaction.\n+     * transaction.\n      */\n-    boolean isDeleted( Relationship relationship );\n+    boolean isDeleted(Relationship relationship);\n \n     /**\n      * Get the properties that had a value assigned on a relationship during the\n@@ -173,25 +175,27 @@ public interface TransactionData\n      *\n      * @return The application specific meta-data map associated with this transaction.\n      */\n-    Map<String,Object> metaData();\n+    Map<String, Object> metaData();\n \n     /**\n      * Return transaction id that assigned during transaction commit process.\n+     *\n      * @return transaction id.\n      * @throws IllegalStateException if transaction id is not assigned yet\n      */\n     default long getTransactionId()\n     {\n-        throw new IllegalStateException( \"Transaction id is not available.\" );\n+        throw new IllegalStateException(\"Transaction id is not available.\");\n     }\n \n     /**\n      * Return transaction commit time (in millis) that assigned during transaction commit process.\n+     *\n      * @return transaction commit time\n      * @throws IllegalStateException if commit time is not assigned yet\n      */\n     default long getCommitTime()\n     {\n-        throw new IllegalStateException( \"Transaction commit time it not available.\" );\n+        throw new IllegalStateException(\"Transaction commit time it not available.\");\n     }\n }\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2001/TransactionData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2001/TransactionData.java\nindex 5b0dd4e54e5..bb0facc9d83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2001/TransactionData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2001/TransactionData.java\n@@ -194,4 +194,4 @@ public interface TransactionData\n     {\n         throw new IllegalStateException( \"Transaction commit time it not available.\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "StevenLooman-sonar-magik",
    "error_id": "23",
    "information": {
        "errors": [
            {
                "line": "189",
                "column": "5",
                "severity": "warning",
                "message": "'}' at column 5 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "        startLineOffset = lineNumber;\n      }\n    } while (line != null);\n\n    return resultNode;\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/23/MagikParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler/23/MagikParser.java\nindex 4f95085d95a..a118b3f6feb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/23/MagikParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler/23/MagikParser.java\n@@ -186,7 +186,8 @@ public class MagikParser {\n         sb.setLength(0);\n         startLineOffset = lineNumber;\n       }\n-    } while (line != null);\n+    }\n+    while (line != null);\n \n     return resultNode;\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "190",
                    "column": "5",
                    "severity": "warning",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/23/MagikParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/23/MagikParser.java\nindex 4f95085d95a..df26e05ed8b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/23/MagikParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/23/MagikParser.java\n@@ -56,6 +56,7 @@ public class MagikParser {\n \n   /**\n    * Constructor.\n+   *\n    * @param charset Encoding of file to parse\n    */\n   public MagikParser(Charset charset) {\n@@ -258,7 +259,7 @@ public class MagikParser {\n       }\n     }\n \n-    for (AstNode childNode: node.getChildren()) {\n+    for (AstNode childNode : node.getChildren()) {\n       updateIdentifiersSymbolsCasing(childNode);\n     }\n   }\n@@ -318,7 +319,7 @@ public class MagikParser {\n   /**\n    * Update the token lines to match the lines in the source file, instead of the parsed part.\n    *\n-   * @param tokens Tokens to update.\n+   * @param tokens     Tokens to update.\n    * @param lineOffset Offset to add to lines.\n    */\n   private void updateTokenLines(List<Token> tokens, int lineOffset) {\n@@ -360,7 +361,7 @@ public class MagikParser {\n    * Add child nodes to parent node.\n    *\n    * @param parentNode Parent node to add to.\n-   * @param children Child nodes to add.\n+   * @param children   Child nodes to add.\n    */\n   private void addChildNodesToParent(AstNode parentNode, List<AstNode> children) {\n     for (AstNode child : children) {\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "190",
                    "severity": "warning",
                    "message": "'do..while while' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "226",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "382",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "388",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 0, expected is 8, indentation should be the same level as line 390.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "391",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 0, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/23/MagikParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/23/MagikParser.java\nindex 4f95085d95a..e186ab97791 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/23/MagikParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/23/MagikParser.java\n@@ -186,7 +186,8 @@ public class MagikParser {\n         sb.setLength(0);\n         startLineOffset = lineNumber;\n       }\n-    } while (line != null);\n+    }\n+while (line != null);\n \n     return resultNode;\n   }\n@@ -222,11 +223,8 @@ public class MagikParser {\n         .setColumn(column)\n         .setType(UtilityTokenType.SYNTAX_ERROR)\n         .build();\n-\n-    AstNode dummyNode =\n-        new AstNode(MagikGrammar.SYNTAX_ERROR, \"SYNTAX_ERROR\", dummyToken);\n-    AstNode errorNode =\n-        new AstNode(MagikGrammar.SYNTAX_ERROR, \"SYNTAX_ERROR\", syntaxErrorToken);\n+AstNode dummyNode = new AstNode(MagikGrammar.SYNTAX_ERROR, \"SYNTAX_ERROR\", dummyToken);\n+    AstNode errorNode = new AstNode(MagikGrammar.SYNTAX_ERROR, \"SYNTAX_ERROR\", syntaxErrorToken);\n     dummyNode.addChild(errorNode);\n     return dummyNode;\n   }\n@@ -380,13 +378,17 @@ public class MagikParser {\n     // else read lowercase\n     StringBuilder sb = new StringBuilder(value.length());\n \n-    for (int i = 0; i < value.length(); ++i) {\n+    for (int i = 0; i < value.length();\n+++i) {\n       char chr = value.charAt(i);\n       if (chr == '|') {\n         // piped segment\n-        ++i; // skip first |\n+        ++i;\n+\n+// skip first |\n         // read until next |\n-        for (; i < value.length(); ++i) {\n+        for (; i < value.length();\n+++i) {\n           chr = value.charAt(i);\n           if (chr == '|') {\n             break;\n@@ -417,4 +419,4 @@ public class MagikParser {\n     return null;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "198",
                    "severity": "warning",
                    "message": "'do..while while' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "198",
                    "column": "6",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'while' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "230",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "415",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 8, expected is 15, indentation should be the same level as line 416.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "416",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "417",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "418",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "419",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 13, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "420",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 8, expected is 15, indentation should be the same level as line 421.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "421",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "422",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 15, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/23/MagikParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/23/MagikParser.java\nindex 4f95085d95a..e84bcc07b72 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/23/MagikParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/23/MagikParser.java\n@@ -11,7 +11,6 @@ import org.sonar.sslr.parser.LexerlessGrammar;\n import org.sonar.sslr.parser.ParserAdapter;\n import org.stevenlooman.sw.magik.api.MagikGrammar;\n import org.stevenlooman.sw.magik.api.MessagePatchGrammar;\n-\n import java.io.BufferedReader;\n import java.io.FileReader;\n import java.io.IOException;\n@@ -27,10 +26,12 @@ import java.util.regex.Matcher;\n import java.util.regex.Pattern;\n \n public class MagikParser {\n-\n   public enum UtilityTokenType implements TokenType {\n+\n     DUMMY,\n-    SYNTAX_ERROR;\n+    SYNTAX_ERROR\n+    ;\n+\n \n     @Override\n     public String getName() {\n@@ -50,7 +51,6 @@ public class MagikParser {\n \n   private static final String TRANSMIT = \"$\";\n   private static final String END_OF_MESSAGE_PATCH = \"$\";\n-\n   public Parser<LexerlessGrammar> magikParser;\n   public Parser<LexerlessGrammar> messagePatchParser;\n \n@@ -58,11 +58,11 @@ public class MagikParser {\n    * Constructor.\n    * @param charset Encoding of file to parse\n    */\n+\n+\n   public MagikParser(Charset charset) {\n     magikParser = new ParserAdapter<>(charset, MagikGrammar.create());\n-    messagePatchParser = new ParserAdapter<>(\n-        charset,\n-        MessagePatchGrammar.create(END_OF_MESSAGE_PATCH));\n+    messagePatchParser = new ParserAdapter<>(charset, MessagePatchGrammar.create(END_OF_MESSAGE_PATCH));\n   }\n \n   /**\n@@ -72,12 +72,15 @@ public class MagikParser {\n    * @param source Source to parse\n    * @return Tree\n    */\n+\n+\n   public AstNode parseSafe(String source) {\n     try {\n       return parse(source);\n     } catch (IOException ex) {\n       System.out.println(\"Caught exception: \" + ex);\n     }\n+\n     return null;\n   }\n \n@@ -89,12 +92,14 @@ public class MagikParser {\n    * @return Tree\n    * @throws IOException -\n    */\n+\n   public AstNode parseSafe(Path path) {\n     try {\n       return parse(path);\n     } catch (IOException ex) {\n       System.out.println(\"Caught exception: \" + ex);\n     }\n+\n     return null;\n   }\n \n@@ -105,6 +110,7 @@ public class MagikParser {\n    * @return Tree\n    * @throws IOException -\n    */\n+\n   public AstNode parse(String source) throws IOException {\n     StringReader sr = new StringReader(source);\n     return parse(sr);\n@@ -117,6 +123,7 @@ public class MagikParser {\n    * @return Tree\n    * @throws IOException -\n    */\n+\n   public AstNode parse(Path path) throws IOException {\n     FileReader sr = new FileReader(path.toFile());\n     return parse(sr);\n@@ -129,26 +136,25 @@ public class MagikParser {\n    * @return Parsed node.\n    * @throws IOException Exception raised.\n    */\n+\n   private AstNode parse(Reader reader) throws IOException {\n     AstNode resultNode = new AstNode(MagikGrammar.MAGIK, \"MAGIK\", null);\n-\n     int lineNumber = 0;\n     int startLineOffset = 0;\n     StringBuilder sb = new StringBuilder();\n     boolean readMessagePatch = false;\n-\n     BufferedReader br = new BufferedReader(reader);\n     String line;\n     do {\n       line = br.readLine();\n       lineNumber++;\n-\n       if (line != null) {\n         sb.append(line);\n         sb.append('\\n');\n       }\n \n-      if (TRANSMIT.equals(line) || line == null) {\n+      if (TRANSMIT.equals(line)\n+          || line == null) {\n         // transmit to parser/compiler and reset buffer\n         String part = sb.toString();\n \n@@ -183,11 +189,13 @@ public class MagikParser {\n         }\n \n         // reset buffer\n+\n         sb.setLength(0);\n         startLineOffset = lineNumber;\n       }\n-    } while (line != null);\n+    }\n \n+while(line != null);\n     return resultNode;\n   }\n \n@@ -199,34 +207,30 @@ public class MagikParser {\n     }\n \n     // parse message, as the exception doesn't provide the raw value\n+\n     String message = recognitionException.getMessage();\n     Pattern pattern = Pattern.compile(\"Parse error at line (\\\\d+) column (\\\\d+):.*\");\n     Matcher matcher = pattern.matcher(message);\n     if (!matcher.find()) {\n       throw new IllegalStateException(\"Unrecognized RecognitionException message\");\n     }\n+\n     String columnStr = matcher.group(2);\n     int column = Integer.parseInt(columnStr);\n-\n     URI uri = buildUri();\n     Token.Builder builder = Token.builder();\n-    Token dummyToken = builder.setValueAndOriginalValue(\"dummy\")\n-        .setURI(uri)\n-        .setLine(line)\n-        .setColumn(column)\n-        .setType(UtilityTokenType.DUMMY)\n-        .build();\n-    Token syntaxErrorToken = builder.setValueAndOriginalValue(\"error\")\n-        .setURI(uri)\n-        .setLine(line)\n-        .setColumn(column)\n-        .setType(UtilityTokenType.SYNTAX_ERROR)\n-        .build();\n-\n-    AstNode dummyNode =\n-        new AstNode(MagikGrammar.SYNTAX_ERROR, \"SYNTAX_ERROR\", dummyToken);\n-    AstNode errorNode =\n-        new AstNode(MagikGrammar.SYNTAX_ERROR, \"SYNTAX_ERROR\", syntaxErrorToken);\n+    Token dummyToken = builder.setValueAndOriginalValue(\"dummy\").setURI(uri)\n+                                                                .setLine(line)\n+                                                                .setColumn(column)\n+                                                                .setType(UtilityTokenType.DUMMY)\n+                                                                .build();\n+    Token syntaxErrorToken = builder.setValueAndOriginalValue(\"error\").setURI(uri)\n+                                                                      .setLine(line)\n+                                                                      .setColumn(column)\n+                                                                      .setType(UtilityTokenType.SYNTAX_ERROR)\n+                                                                      .build();\n+    AstNode dummyNode = new AstNode(MagikGrammar.SYNTAX_ERROR, \"SYNTAX_ERROR\", dummyToken);\n+    AstNode errorNode = new AstNode(MagikGrammar.SYNTAX_ERROR, \"SYNTAX_ERROR\", syntaxErrorToken);\n     dummyNode.addChild(errorNode);\n     return dummyNode;\n   }\n@@ -236,6 +240,7 @@ public class MagikParser {\n    *\n    * @param node Node to update.\n    */\n+\n   private void updateIdentifiersSymbolsCasing(AstNode node) {\n     Field field = null;\n     try {\n@@ -247,7 +252,8 @@ public class MagikParser {\n     }\n \n     AstNodeType nodeType = node.getType();\n-    if (nodeType == MagikGrammar.IDENTIFIER || nodeType == MagikGrammar.SYMBOL) {\n+    if (nodeType == MagikGrammar.IDENTIFIER\n+        || nodeType == MagikGrammar.SYMBOL) {\n       Token token = node.getToken();\n       String value = parseIdentifier(token.getValue());\n       try {\n@@ -258,7 +264,8 @@ public class MagikParser {\n       }\n     }\n \n-    for (AstNode childNode: node.getChildren()) {\n+\n+    for (AstNode childNode : node.getChildren()) {\n       updateIdentifiersSymbolsCasing(childNode);\n     }\n   }\n@@ -269,6 +276,7 @@ public class MagikParser {\n    * @param source Potential magik code\n    * @return True if it contains no magik code, false otherwise.\n    */\n+\n   private boolean isEmpty(String source) {\n     source = source.replaceAll(\"#.*\", \"\"); // remove any comment lines\n     return source.trim().isEmpty();\n@@ -280,6 +288,7 @@ public class MagikParser {\n    * @param source Part to parse.\n    * @return Resulting AstNode.\n    */\n+\n   private AstNode parsePartMessagePatch(String source) {\n     source = source.substring(0, source.length() - 1); // remove trailing \\n\n     return messagePatchParser.parse(source);\n@@ -291,6 +300,7 @@ public class MagikParser {\n    * @param source Part to parse.\n    * @return Resulting AstNode.\n    */\n+\n   public AstNode parsePartMagik(String source) {\n     return magikParser.parse(source);\n   }\n@@ -301,11 +311,13 @@ public class MagikParser {\n    * @param node AstNode to test.\n    * @return True if the next part is a message patch, false if not.\n    */\n+\n   private boolean hasReadMessagePatch(AstNode node) {\n     if (\"read_message_patch\".equalsIgnoreCase(node.getTokenValue())) {\n       return true;\n     }\n \n+\n     for (AstNode child : node.getChildren()) {\n       if (hasReadMessagePatch(child)) {\n         return true;\n@@ -321,6 +333,7 @@ public class MagikParser {\n    * @param tokens Tokens to update.\n    * @param lineOffset Offset to add to lines.\n    */\n+\n   private void updateTokenLines(List<Token> tokens, int lineOffset) {\n     Field field = null;\n     try {\n@@ -331,6 +344,7 @@ public class MagikParser {\n       ex.printStackTrace();\n     }\n \n+\n     for (Token token : tokens) {\n       // update token lines\n       int newLine = lineOffset + token.getLine();\n@@ -342,6 +356,8 @@ public class MagikParser {\n       }\n \n       // update trivia-token lines\n+\n+\n       for (Trivia trivia : token.getTrivia()) {\n         for (Token triviaToken : trivia.getTokens()) {\n           newLine = lineOffset + triviaToken.getLine();\n@@ -362,6 +378,7 @@ public class MagikParser {\n    * @param parentNode Parent node to add to.\n    * @param children Child nodes to add.\n    */\n+\n   private void addChildNodesToParent(AstNode parentNode, List<AstNode> children) {\n     for (AstNode child : children) {\n       parentNode.addChild(child);\n@@ -374,12 +391,12 @@ public class MagikParser {\n    * @param value Identifier to parse.\n    * @return Parsed identifier.\n    */\n+\n   static String parseIdentifier(String value) {\n     // if |, read until next |\n     // if \\\\., read .\n     // else read lowercase\n     StringBuilder sb = new StringBuilder(value.length());\n-\n     for (int i = 0; i < value.length(); ++i) {\n       char chr = value.charAt(i);\n       if (chr == '|') {\n@@ -391,17 +408,18 @@ public class MagikParser {\n           if (chr == '|') {\n             break;\n           }\n+\n           sb.append(chr);\n         }\n       } else if (chr == '\\\\') {\n         // escaped character\n-        ++i; // skip \\\n-        chr = value.charAt(i);\n-        sb.append(chr);\n-      } else {\n+               ++i; // skip \\\n+               chr = value.charAt(i);\n+               sb.append(chr);\n+             } else {\n         // normal character\n-        chr = Character.toLowerCase(chr);\n-        sb.append(chr);\n+               chr = Character.toLowerCase(chr);\n+               sb.append(chr);\n       }\n     }\n \n@@ -414,7 +432,7 @@ public class MagikParser {\n     } catch (URISyntaxException exception) {\n       // pass\n     }\n+\n     return null;\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 75
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/23/MagikParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler_random/23/MagikParser.java\nindex 4f95085d95a..a118b3f6feb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/23/MagikParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler_random/23/MagikParser.java\n@@ -186,7 +186,8 @@ public class MagikParser {\n         sb.setLength(0);\n         startLineOffset = lineNumber;\n       }\n-    } while (line != null);\n+    }\n+    while (line != null);\n \n     return resultNode;\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "190",
                    "severity": "warning",
                    "message": "'do..while rcurly' has incorrect indentation level 6, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "190",
                    "column": "7",
                    "severity": "warning",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/23/MagikParser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler_three_grams/23/MagikParser.java\nindex 4f95085d95a..27de821f04d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/23/MagikParser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/styler_three_grams/23/MagikParser.java\n@@ -186,7 +186,8 @@ public class MagikParser {\n         sb.setLength(0);\n         startLineOffset = lineNumber;\n       }\n-    } while (line != null);\n+\n+      } while (line != null);\n \n     return resultNode;\n   }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
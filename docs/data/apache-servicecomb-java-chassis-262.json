{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "262",
    "information": {
        "errors": [
            {
                "line": "33",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 126).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n\n  private static RootDeserializer<ResponseHeader> rootDeserializer = protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n      .createRootDeserializer(\"ResponseHeader\", ResponseHeader.class);\n\n  private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"ResponseHeader.proto\")",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/262/ResponseHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/262/ResponseHeader.java\nindex 262ac718744..febfd91675c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/262/ResponseHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/262/ResponseHeader.java\n@@ -30,8 +30,9 @@ public class ResponseHeader {\n   // TODO : refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<ResponseHeader> rootDeserializer = protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n-      .createRootDeserializer(\"ResponseHeader\", ResponseHeader.class);\n+  private static RootDeserializer<ResponseHeader> rootDeserializer =\n+    protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n+       .createRootDeserializer(\"ResponseHeader\", ResponseHeader.class);\n \n   private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n       .createRootSerializer(\"ResponseHeader\", ResponseHeader.class);\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/262/ResponseHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/262/ResponseHeader.java\nindex 262ac718744..6e22b3916e6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/262/ResponseHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/262/ResponseHeader.java\n@@ -30,8 +30,9 @@ public class ResponseHeader {\n   // TODO : refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<ResponseHeader> rootDeserializer = protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n-      .createRootDeserializer(\"ResponseHeader\", ResponseHeader.class);\n+  private static RootDeserializer<ResponseHeader> rootDeserializer =\n+      protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n+          .createRootDeserializer(\"ResponseHeader\", ResponseHeader.class);\n \n   private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n       .createRootSerializer(\"ResponseHeader\", ResponseHeader.class);\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/262/ResponseHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/262/ResponseHeader.java\nindex 262ac718744..a69dd2cecef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/262/ResponseHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/262/ResponseHeader.java\n@@ -96,4 +96,4 @@ public class ResponseHeader {\n   public void setHeaders(Headers headers) {\n     this.headers = headers;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/262/ResponseHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/262/ResponseHeader.java\nindex 262ac718744..febfd91675c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/262/ResponseHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/262/ResponseHeader.java\n@@ -30,8 +30,9 @@ public class ResponseHeader {\n   // TODO : refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<ResponseHeader> rootDeserializer = protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n-      .createRootDeserializer(\"ResponseHeader\", ResponseHeader.class);\n+  private static RootDeserializer<ResponseHeader> rootDeserializer =\n+    protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n+       .createRootDeserializer(\"ResponseHeader\", ResponseHeader.class);\n \n   private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n       .createRootSerializer(\"ResponseHeader\", ResponseHeader.class);\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "33",
                    "column": "34",
                    "severity": "warning",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "33",
                    "column": "36",
                    "severity": "warning",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "33",
                    "column": "52",
                    "severity": "warning",
                    "message": "'>' is followed by an illegal character.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "33",
                    "column": "68",
                    "severity": "warning",
                    "message": "'=' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "35",
                    "column": "19",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/262/ResponseHeader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/262/ResponseHeader.java\nindex 262ac718744..9697c6a3de2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/262/ResponseHeader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/262/ResponseHeader.java\n@@ -30,8 +30,10 @@ public class ResponseHeader {\n   // TODO : refactor reuse\n   private static ProtoMapperFactory protoMapperFactory = new ProtoMapperFactory();\n \n-  private static RootDeserializer<ResponseHeader> rootDeserializer = protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n-      .createRootDeserializer(\"ResponseHeader\", ResponseHeader.class);\n+  private static RootDeserializer < ResponseHeader>rootDeserializer=\n+  protoMapperFactory\n+  .createFromName( \"ResponseHeader.proto\").\n+  createRootDeserializer(\"ResponseHeader\", ResponseHeader.class);\n \n   private static RootSerializer rootSerializer = protoMapperFactory.createFromName(\"ResponseHeader.proto\")\n       .createRootSerializer(\"ResponseHeader\", ResponseHeader.class);\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
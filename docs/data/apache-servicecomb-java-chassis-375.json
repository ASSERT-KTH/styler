{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "375",
    "information": {
        "errors": [
            {
                "line": "45",
                "column": "5",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "  private DiscoveryClient discoveryClient;\n\n  //\t@Autowired\n  //\tprivate LoadBalancerClient client;\n\n  private final RestTemplate restTemplate = new RestTemplate();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "45",
                    "column": "5",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "45",
                    "column": "5",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "45",
                    "column": "5",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/375/DiscoveryClientIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/375/DiscoveryClientIT.java\nindex 554fce49d94..00418f10285 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/375/DiscoveryClientIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/375/DiscoveryClientIT.java\n@@ -70,4 +70,4 @@ public class DiscoveryClientIT {\n       SpringApplication.run(DiscoveryTestApplication.class, args);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/375/DiscoveryClientIT.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/codebuff/375/DiscoveryClientIT.java\nindex 554fce49d94..e5290f5972d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/375/DiscoveryClientIT.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/codebuff/375/DiscoveryClientIT.java\n@@ -21,7 +21,6 @@ import static org.assertj.core.api.Assertions.assertThat;\n import static org.springframework.boot.test.context.SpringBootTest.WebEnvironment.RANDOM_PORT;\n \n import java.net.URI;\n-\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.springframework.beans.factory.annotation.Autowired;\n@@ -32,32 +31,26 @@ import org.springframework.cloud.client.discovery.DiscoveryClient;\n import org.springframework.cloud.client.discovery.EnableDiscoveryClient;\n import org.springframework.test.context.junit4.SpringRunner;\n import org.springframework.web.client.RestTemplate;\n-\n import io.servicecomb.springboot.starter.provider.EnableServiceComb;\n \n @RunWith(SpringRunner.class)\n @SpringBootTest(webEnvironment = RANDOM_PORT, classes = DiscoveryClientIT.DiscoveryTestApplication.class)\n public class DiscoveryClientIT {\n-\n   @Autowired\n   private DiscoveryClient discoveryClient;\n \n-  //\t@Autowired\n-  //\tprivate LoadBalancerClient client;\n+  //  @Autowired\n+  //  private LoadBalancerClient client;\n \n   private final RestTemplate restTemplate = new RestTemplate();\n \n   @Test\n   public void getsRemoteServiceFromDiscoveryClient() throws Exception {\n-    URI remoteUri = discoveryClient.getInstances(\"discoveryServer\").get(0).getUri();\n-\n+    URI remoteUri = discoveryClient.getInstances(\"discoveryServer\").get(0)\n+                                                                   .getUri();\n     assertThat(remoteUri).isNotNull();\n \n-    String response = restTemplate.getForObject(\n-        remoteUri.toString() + \"/greeting/sayhello/{name}\",\n-        String.class,\n-        \"Mike\");\n-\n+    String response = restTemplate.getForObject(remoteUri.toString() + \"/greeting/sayhello/{name}\", String.class, \"Mike\");\n     assertThat(response).isEqualTo(\"hello Mike\");\n   }\n \n@@ -65,9 +58,8 @@ public class DiscoveryClientIT {\n   @EnableServiceComb\n   @EnableDiscoveryClient\n   static class DiscoveryTestApplication {\n-\n     public static void main(String[] args) throws Exception {\n       SpringApplication.run(DiscoveryTestApplication.class, args);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "45",
                    "column": "5",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "45",
                    "column": "5",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
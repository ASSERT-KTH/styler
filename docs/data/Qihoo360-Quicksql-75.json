{
    "project_name": "Qihoo360-Quicksql",
    "error_id": "75",
    "information": {
        "errors": [
            {
                "line": "23",
                "column": "27",
                "severity": "error",
                "message": "'}' at column 27 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "    private Integer integerIdx;\n\n    public ColumnValue() {}\n\n    /**\n     * constructor.",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/75/ColumnValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler/75/ColumnValue.java\nindex 55d214c28bb..72726d361c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/75/ColumnValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler/75/ColumnValue.java\n@@ -20,7 +20,8 @@ public class ColumnValue {\n     private String typeName;\r\n     private Integer integerIdx;\r\n \r\n-    public ColumnValue() {}\r\n+    public ColumnValue() {\r\n+    }\r\n \r\n     /**\r\n      * constructor.\r\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/75/ColumnValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/intellij/75/ColumnValue.java\nindex 55d214c28bb..9964ff49ff6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/75/ColumnValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/intellij/75/ColumnValue.java\n@@ -20,13 +20,15 @@ public class ColumnValue {\n     private String typeName;\r\n     private Integer integerIdx;\r\n \r\n-    public ColumnValue() {}\r\n+    public ColumnValue() {\r\n+    }\r\n \r\n     /**\r\n      * constructor.\r\n-     * @param cdId cdId\r\n+     *\r\n+     * @param cdId       cdId\r\n      * @param columnName columnName\r\n-     * @param typeName typeName\r\n+     * @param typeName   typeName\r\n      */\r\n     public ColumnValue(Long cdId, String columnName, String typeName) {\r\n         this.cdId = cdId;\r\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/75/ColumnValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/naturalize/75/ColumnValue.java\nindex 55d214c28bb..84aa9a614b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/75/ColumnValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/naturalize/75/ColumnValue.java\n@@ -20,7 +20,8 @@ public class ColumnValue {\n     private String typeName;\r\n     private Integer integerIdx;\r\n \r\n-    public ColumnValue() {}\r\n+    public ColumnValue() {\n+}\r\n \r\n     /**\r\n      * constructor.\r\n@@ -100,4 +101,4 @@ public class ColumnValue {\n \r\n         return Objects.hash(cdId, comment, columnName, typeName, integerIdx);\r\n     }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "85",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/75/ColumnValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/codebuff/75/ColumnValue.java\nindex 55d214c28bb..b4f58d99a3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/75/ColumnValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/codebuff/75/ColumnValue.java\n@@ -1,5 +1,5 @@\n-package com.qihoo.qsql.metadata.entity;\r\n-\r\n+package com.qihoo.qsql.metadata.entity;\n+\n import java.util.Objects;\r\n \r\n /**\r\n@@ -11,93 +11,100 @@ import java.util.Objects;\n  * typeName, type name for column, such as int, varchar, etc.\r\n  * integerIdx, order of columns, begin from 0.\r\n  * </p>\r\n- */\r\n-public class ColumnValue {\r\n-\r\n-    private Long cdId;\r\n-    private String comment;\r\n-    private String columnName;\r\n-    private String typeName;\r\n-    private Integer integerIdx;\r\n-\r\n-    public ColumnValue() {}\r\n+ */\n+\n+\n+public class ColumnValue {\n+\n+    private Long cdId;\n+    private String comment;\n+    private String columnName;\n+    private String typeName;\n+    private Integer integerIdx;\n+\n+    public ColumnValue() {\n+    }\r\n \r\n     /**\r\n      * constructor.\r\n      * @param cdId cdId\r\n      * @param columnName columnName\r\n      * @param typeName typeName\r\n-     */\r\n-    public ColumnValue(Long cdId, String columnName, String typeName) {\r\n-        this.cdId = cdId;\r\n-        this.columnName = columnName;\r\n-        this.typeName = typeName;\r\n-    }\r\n-\r\n-    public Long getCdId() {\r\n-        return cdId;\r\n-    }\r\n-\r\n-    public void setCdId(Long cdId) {\r\n-        this.cdId = cdId;\r\n-    }\r\n-\r\n-    public String getComment() {\r\n-        return comment;\r\n-    }\r\n-\r\n-    public void setComment(String comment) {\r\n-        this.comment = comment;\r\n-    }\r\n-\r\n-    public String getColumnName() {\r\n-        return columnName;\r\n-    }\r\n-\r\n-    public void setColumnName(String columnName) {\r\n-        this.columnName = columnName;\r\n-    }\r\n-\r\n-    public String getTypeName() {\r\n-        return typeName;\r\n-    }\r\n-\r\n-    public void setTypeName(String typeName) {\r\n-        this.typeName = typeName;\r\n-    }\r\n-\r\n-    public Integer getIntegerIdx() {\r\n-        return integerIdx;\r\n-    }\r\n-\r\n-    public void setIntegerIdx(Integer integerIdx) {\r\n-        this.integerIdx = integerIdx;\r\n-    }\r\n-\r\n-    @Override\r\n-    public String toString() {\r\n-        return \"{\\\"name\\\": \\\"\" + columnName + \":\" + typeName + \"\\\"}\";\r\n-    }\r\n-\r\n-    @Override\r\n-    public boolean equals(Object obj) {\r\n-        if (this == obj) {\r\n-            return true;\r\n-        }\r\n-        if (obj == null || getClass() != obj.getClass()) {\r\n-            return false;\r\n-        }\r\n-        ColumnValue that = (ColumnValue) obj;\r\n-        return Objects.equals(cdId, that.cdId)\r\n-            && Objects.equals(comment, that.comment)\r\n-            && Objects.equals(columnName, that.columnName)\r\n-            && Objects.equals(typeName, that.typeName)\r\n-            && Objects.equals(integerIdx, that.integerIdx);\r\n-    }\r\n-\r\n-    @Override\r\n-    public int hashCode() {\r\n-\r\n-        return Objects.hash(cdId, comment, columnName, typeName, integerIdx);\r\n-    }\r\n-}\r\n+     */\n+\n+    public ColumnValue(Long cdId, String columnName, String typeName) {\n+        this.cdId = cdId;\n+        this.columnName = columnName;\n+        this.typeName = typeName;\n+    }\n+\n+\n+    public Long getCdId() {\n+        return cdId;\n+    }\n+\n+    public void setCdId(Long cdId) {\n+        this.cdId = cdId;\n+    }\n+\n+    public String getComment() {\n+        return comment;\n+    }\n+\n+    public void setComment(String comment) {\n+        this.comment = comment;\n+    }\n+\n+    public String getColumnName() {\n+        return columnName;\n+    }\n+\n+    public void setColumnName(String columnName) {\n+        this.columnName = columnName;\n+    }\n+\n+    public String getTypeName() {\n+        return typeName;\n+    }\n+\n+    public void setTypeName(String typeName) {\n+        this.typeName = typeName;\n+    }\n+\n+    public Integer getIntegerIdx() {\n+        return integerIdx;\n+    }\n+\n+    public void setIntegerIdx(Integer integerIdx) {\n+        this.integerIdx = integerIdx;\n+    }\n+\n+    @Override\n+    public String toString() {\n+        return \"{\\\"name\\\": \\\"\" + columnName + \":\"\n+        + typeName + \"\\\"}\";\n+    }\n+\n+    @Override\n+    public boolean equals(Object obj) {\n+        if (this == obj) {\n+            return true;\n+        }\n+\n+        if (obj == null || getClass() != obj.getClass()) {\n+            return false;\n+        }\n+\n+        ColumnValue that = (ColumnValue) obj;\n+        return Objects.equals(cdId, that.cdId)\n+                   && Objects.equals(comment, that.comment)\n+            && Objects.equals(columnName, that.columnName)\n+            && Objects.equals(typeName, that.typeName)\n+               && Objects.equals(integerIdx, that.integerIdx);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(cdId, comment, columnName, typeName, integerIdx);\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 93
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/75/ColumnValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_random/75/ColumnValue.java\nindex 55d214c28bb..72726d361c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/75/ColumnValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_random/75/ColumnValue.java\n@@ -20,7 +20,8 @@ public class ColumnValue {\n     private String typeName;\r\n     private Integer integerIdx;\r\n \r\n-    public ColumnValue() {}\r\n+    public ColumnValue() {\r\n+    }\r\n \r\n     /**\r\n      * constructor.\r\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/75/ColumnValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_three_grams/75/ColumnValue.java\nindex 55d214c28bb..72726d361c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/75/ColumnValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_three_grams/75/ColumnValue.java\n@@ -20,7 +20,8 @@ public class ColumnValue {\n     private String typeName;\r\n     private Integer integerIdx;\r\n \r\n-    public ColumnValue() {}\r\n+    public ColumnValue() {\r\n+    }\r\n \r\n     /**\r\n      * constructor.\r\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
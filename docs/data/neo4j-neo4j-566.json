{
    "project_name": "neo4j-neo4j",
    "error_id": "566",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "74",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "137",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/566/Meta.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/566/Meta.java\nindex 517a61c7e2e..f0863d5557e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/566/Meta.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/566/Meta.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.io.IOException;\n@@ -44,7 +45,7 @@ import static org.neo4j.index.internal.gbptree.PageCursorUtil.checkOutOfBounds;\n  *       \u2502    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 {@link #getUnusedVersionSlot3()}\n  *       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 {@link #getUnusedVersionSlot4()}\n  * </pre>\n- *\n+ * <p>\n  * {@link #CURRENT_STATE_VERSION} and {@link #CURRENT_GBPTREE_VERSION} aren't used yet because they have\n  * never needed to be versioned yet, but remain reserved for future use. The are fixed at 0 a.t.m.\n  */\n@@ -70,8 +71,8 @@ public class Meta\n     private final int layoutMajorVersion;\n     private final int layoutMinorVersion;\n \n-    private Meta( byte formatIdentifier, byte formatVersion, byte unusedVersionSlot3, byte unusedVersionSlot4,\n-            int pageSize, long layoutIdentifier, int layoutMajorVersion, int layoutMinorVersion )\n+    private Meta(byte formatIdentifier, byte formatVersion, byte unusedVersionSlot3, byte unusedVersionSlot4,\n+                 int pageSize, long layoutIdentifier, int layoutMajorVersion, int layoutMinorVersion)\n     {\n         this.formatIdentifier = formatIdentifier;\n         this.formatVersion = formatVersion;\n@@ -83,19 +84,19 @@ public class Meta\n         this.layoutMinorVersion = layoutMinorVersion;\n     }\n \n-    Meta( byte formatIdentifier, byte formatVersion, int pageSize, Layout<?,?> layout )\n+    Meta(byte formatIdentifier, byte formatVersion, int pageSize, Layout<?, ?> layout)\n     {\n-        this( formatIdentifier, formatVersion, UNUSED_VERSION, UNUSED_VERSION,\n-                pageSize, layout.identifier(), layout.majorVersion(), layout.minorVersion() );\n+        this(formatIdentifier, formatVersion, UNUSED_VERSION, UNUSED_VERSION,\n+          pageSize, layout.identifier(), layout.majorVersion(), layout.minorVersion());\n     }\n \n-    private static Meta parseMeta( int format, int pageSize, long layoutIdentifier, int majorVersion, int minorVersion )\n+    private static Meta parseMeta(int format, int pageSize, long layoutIdentifier, int majorVersion, int minorVersion)\n     {\n-        return new Meta( extractIndividualVersion( format, SHIFT_FORMAT_IDENTIFIER ),\n-                extractIndividualVersion( format, SHIFT_FORMAT_VERSION ),\n-                extractIndividualVersion( format, SHIFT_UNUSED_VERSION_SLOT_3 ),\n-                extractIndividualVersion( format, SHIFT_UNUSED_VERSION_SLOT_4 ),\n-                pageSize, layoutIdentifier, majorVersion, minorVersion );\n+        return new Meta(extractIndividualVersion(format, SHIFT_FORMAT_IDENTIFIER),\n+          extractIndividualVersion(format, SHIFT_FORMAT_VERSION),\n+          extractIndividualVersion(format, SHIFT_UNUSED_VERSION_SLOT_3),\n+          extractIndividualVersion(format, SHIFT_UNUSED_VERSION_SLOT_4),\n+          pageSize, layoutIdentifier, majorVersion, minorVersion);\n     }\n \n     /**\n@@ -105,11 +106,11 @@ public class Meta\n      *\n      * @param cursor {@link PageCursor} to read meta information from.\n      * @param layout {@link Layout} instance that will get the opportunity to read layout-specific data from the meta page.\n-     * {@code layout} is allowed to be {@code null} where it won't be told to read layout-specific data from the meta page.\n+     *               {@code layout} is allowed to be {@code null} where it won't be told to read layout-specific data from the meta page.\n      * @return {@link Meta} instance with all meta information.\n      * @throws IOException on {@link PageCursor} I/O error.\n      */\n-    static Meta read( PageCursor cursor, Layout<?,?> layout ) throws IOException\n+    static Meta read(PageCursor cursor, Layout<?, ?> layout) throws IOException\n     {\n         int format;\n         int pageSize;\n@@ -125,52 +126,51 @@ public class Meta\n                 layoutIdentifier = cursor.getLong();\n                 layoutMajorVersion = cursor.getInt();\n                 layoutMinorVersion = cursor.getInt();\n-                if ( layout != null )\n+                if (layout != null)\n                 {\n-                    layout.readMetaData( cursor );\n+                    layout.readMetaData(cursor);\n                 }\n             }\n-            while ( cursor.shouldRetry() );\n-            checkOutOfBounds( cursor );\n+            while (cursor.shouldRetry());\n+            checkOutOfBounds(cursor);\n             cursor.checkAndClearCursorException();\n-        }\n-        catch ( CursorException e )\n+        } catch (CursorException e)\n         {\n-            throw new MetadataMismatchException( \"Tried to open, but caught an error while reading meta data. File is expected \" +\n-                    \"to be corrupt, try to rebuild.\", e );\n+            throw new MetadataMismatchException(\"Tried to open, but caught an error while reading meta data. File is expected \" +\n+              \"to be corrupt, try to rebuild.\", e);\n         }\n \n-        return parseMeta( format, pageSize, layoutIdentifier, layoutMajorVersion, layoutMinorVersion );\n+        return parseMeta(format, pageSize, layoutIdentifier, layoutMajorVersion, layoutMinorVersion);\n     }\n \n-    public void verify( Layout<?,?> layout )\n+    public void verify(Layout<?, ?> layout)\n     {\n-        if ( unusedVersionSlot3 != Meta.UNUSED_VERSION )\n+        if (unusedVersionSlot3 != Meta.UNUSED_VERSION)\n         {\n-            throw new MetadataMismatchException( \"Unexpected version \" + unusedVersionSlot3 + \" for unused version slot 3\" );\n+            throw new MetadataMismatchException(\"Unexpected version \" + unusedVersionSlot3 + \" for unused version slot 3\");\n         }\n-        if ( unusedVersionSlot4 != Meta.UNUSED_VERSION )\n+        if (unusedVersionSlot4 != Meta.UNUSED_VERSION)\n         {\n-            throw new MetadataMismatchException( \"Unexpected version \" + unusedVersionSlot4 + \" for unused version slot 4\" );\n+            throw new MetadataMismatchException(\"Unexpected version \" + unusedVersionSlot4 + \" for unused version slot 4\");\n         }\n \n-        if ( !layout.compatibleWith( layoutIdentifier, layoutMajorVersion, layoutMinorVersion ) )\n+        if (!layout.compatibleWith(layoutIdentifier, layoutMajorVersion, layoutMinorVersion))\n         {\n-            throw new MetadataMismatchException( format(\n-                    \"Tried to open using layout not compatible with \" +\n-                    \"what the index was created with. Created with: layoutIdentifier=%d,majorVersion=%d,minorVersion=%d. \" +\n-                    \"Opened with layoutIdentifier=%d,majorVersion=%d,minorVersion=%d\",\n-                    layoutIdentifier, layoutMajorVersion, layoutMinorVersion,\n-                    layout.identifier(), layout.majorVersion(), layout.minorVersion() ) );\n+            throw new MetadataMismatchException(format(\n+              \"Tried to open using layout not compatible with \" +\n+                \"what the index was created with. Created with: layoutIdentifier=%d,majorVersion=%d,minorVersion=%d. \" +\n+                \"Opened with layoutIdentifier=%d,majorVersion=%d,minorVersion=%d\",\n+              layoutIdentifier, layoutMajorVersion, layoutMinorVersion,\n+              layout.identifier(), layout.majorVersion(), layout.minorVersion()));\n         }\n \n-        Factory formatByLayout = TreeNodeSelector.selectByLayout( layout );\n-        if ( formatByLayout.formatIdentifier() != formatIdentifier ||\n-             formatByLayout.formatVersion() != formatVersion )\n+        Factory formatByLayout = TreeNodeSelector.selectByLayout(layout);\n+        if (formatByLayout.formatIdentifier() != formatIdentifier ||\n+          formatByLayout.formatVersion() != formatVersion)\n         {\n-            throw new MetadataMismatchException( format( \"Tried to open using layout not compatible with what index was created with. \" +\n-                    \"Created with formatIdentifier:%d,formatVersion:%d. Opened with formatIdentifier:%d,formatVersion%d\",\n-                    formatIdentifier, formatVersion, formatByLayout.formatIdentifier(), formatByLayout.formatVersion() ) );\n+            throw new MetadataMismatchException(format(\"Tried to open using layout not compatible with what index was created with. \" +\n+                \"Created with formatIdentifier:%d,formatVersion:%d. Opened with formatIdentifier:%d,formatVersion%d\",\n+              formatIdentifier, formatVersion, formatByLayout.formatIdentifier(), formatByLayout.formatVersion()));\n         }\n     }\n \n@@ -181,18 +181,18 @@ public class Meta\n      * @param cursor {@link PageCursor} to read meta information from.\n      * @param layout {@link Layout} instance that will get the opportunity to write layout-specific data to the meta page.\n      */\n-    void write( PageCursor cursor, Layout<?,?> layout )\n+    void write(PageCursor cursor, Layout<?, ?> layout)\n     {\n-        cursor.putInt( allVersionsCombined() );\n-        cursor.putInt( getPageSize() );\n-        cursor.putLong( getLayoutIdentifier() );\n-        cursor.putInt( getLayoutMajorVersion() );\n-        cursor.putInt( getLayoutMinorVersion() );\n-        layout.writeMetaData( cursor );\n-        checkOutOfBounds( cursor );\n+        cursor.putInt(allVersionsCombined());\n+        cursor.putInt(getPageSize());\n+        cursor.putLong(getLayoutIdentifier());\n+        cursor.putInt(getLayoutMajorVersion());\n+        cursor.putInt(getLayoutMinorVersion());\n+        layout.writeMetaData(cursor);\n+        checkOutOfBounds(cursor);\n     }\n \n-    private static byte extractIndividualVersion( int format, int shift )\n+    private static byte extractIndividualVersion(int format, int shift)\n     {\n         return (byte) ((format >>> shift) & MASK_BYTE);\n     }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
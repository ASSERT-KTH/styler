{
    "project_name": "neo4j-neo4j",
    "error_id": "2598",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "241",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "295",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "305",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "310",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2598/PathImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2598/PathImpl.java\nindex 4065e86ca33..f55d4444cd2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2598/PathImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2598/PathImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphalgo.impl.util;\n \n import java.util.Arrays;\n@@ -38,7 +39,7 @@ import static org.neo4j.internal.helpers.collection.Iterators.iteratorsEqual;\n \n public final class PathImpl implements Path, Measurable\n {\n-    private static final long SHALLOW_SIZE = HeapEstimator.shallowSizeOfInstance( PathImpl.class );\n+    private static final long SHALLOW_SIZE = HeapEstimator.shallowSizeOfInstance(PathImpl.class);\n \n     public static final class Builder\n     {\n@@ -47,9 +48,9 @@ public final class PathImpl implements Path, Measurable\n         private final Relationship relationship;\n         private final int size;\n \n-        public Builder( Node start )\n+        public Builder(Node start)\n         {\n-            if ( start == null )\n+            if (start == null)\n             {\n                 throw new NullPointerException();\n             }\n@@ -59,7 +60,7 @@ public final class PathImpl implements Path, Measurable\n             this.size = 0;\n         }\n \n-        private Builder( Builder prev, Relationship rel )\n+        private Builder(Builder prev, Relationship rel)\n         {\n             this.start = prev.start;\n             this.previous = prev;\n@@ -74,54 +75,53 @@ public final class PathImpl implements Path, Measurable\n \n         public Path build()\n         {\n-            return new PathImpl( this, null );\n+            return new PathImpl(this, null);\n         }\n \n-        public Builder push( Relationship relationship )\n+        public Builder push(Relationship relationship)\n         {\n-            if ( relationship == null )\n+            if (relationship == null)\n             {\n                 throw new NullPointerException();\n             }\n-            return new Builder( this, relationship );\n+            return new Builder(this, relationship);\n         }\n \n-        public PathImpl build( Builder other )\n+        public PathImpl build(Builder other)\n         {\n-            return new PathImpl( this, other );\n+            return new PathImpl(this, other);\n         }\n \n         @Override\n         public String toString()\n         {\n-            if ( previous == null )\n+            if (previous == null)\n             {\n                 return start.toString();\n-            }\n-            else\n+            } else\n             {\n-                return relToString( relationship ) + \":\" + previous;\n+                return relToString(relationship) + \":\" + previous;\n             }\n         }\n     }\n \n-    private static String relToString( Relationship rel )\n+    private static String relToString(Relationship rel)\n     {\n         return rel.getStartNode() + \"--\" + rel.getType() + \"-->\"\n-               + rel.getEndNode();\n+          + rel.getEndNode();\n     }\n \n     private final Node start;\n     private final Relationship[] path;\n     private final Node end;\n \n-    private PathImpl( Builder left, Builder right )\n+    private PathImpl(Builder left, Builder right)\n     {\n         Node endNode = null;\n-        path = new Relationship[left.size + ( right == null ? 0 : right.size )];\n-        if ( right != null )\n+        path = new Relationship[left.size + (right == null ? 0 : right.size)];\n+        if (right != null)\n         {\n-            for ( int i = left.size, total = i + right.size; i < total; i++ )\n+            for (int i = left.size, total = i + right.size; i < total; i++)\n             {\n                 path[i] = right.relationship;\n                 right = right.previous;\n@@ -130,7 +130,7 @@ public final class PathImpl implements Path, Measurable\n             endNode = right.start;\n         }\n \n-        for ( int i = left.size - 1; i >= 0; i-- )\n+        for (int i = left.size - 1; i >= 0; i--)\n         {\n             path[i] = left.relationship;\n             left = left.previous;\n@@ -140,9 +140,9 @@ public final class PathImpl implements Path, Measurable\n         end = endNode;\n     }\n \n-    public static Path singular( Node start )\n+    public static Path singular(Node start)\n     {\n-        return new Builder( start ).build();\n+        return new Builder(start).build();\n     }\n \n     @Override\n@@ -154,14 +154,14 @@ public final class PathImpl implements Path, Measurable\n     @Override\n     public Node endNode()\n     {\n-        if ( end != null )\n+        if (end != null)\n         {\n             return end;\n         }\n \n         // TODO We could really figure this out in the constructor\n         Node stepNode = null;\n-        for ( Node node : nodes() )\n+        for (Node node : nodes())\n         {\n             stepNode = node;\n         }\n@@ -177,16 +177,16 @@ public final class PathImpl implements Path, Measurable\n     @Override\n     public Iterable<Node> nodes()\n     {\n-        return nodeIterator( start, relationships() );\n+        return nodeIterator(start, relationships());\n     }\n \n     @Override\n     public Iterable<Node> reverseNodes()\n     {\n-        return nodeIterator( endNode(), reverseRelationships() );\n+        return nodeIterator(endNode(), reverseRelationships());\n     }\n \n-    private Iterable<Node> nodeIterator( final Node start, final Iterable<Relationship> relationships )\n+    private Iterable<Node> nodeIterator(final Node start, final Iterable<Relationship> relationships)\n     {\n         return () -> new Iterator<>()\n         {\n@@ -203,26 +203,25 @@ public final class PathImpl implements Path, Measurable\n             @Override\n             public Node next()\n             {\n-                if ( current == null )\n+                if (current == null)\n                 {\n                     throw new NoSuchElementException();\n                 }\n                 Node next = null;\n-                if ( index < path.length )\n+                if (index < path.length)\n                 {\n-                    if ( !relationshipIterator.hasNext() )\n+                    if (!relationshipIterator.hasNext())\n                     {\n                         throw new IllegalStateException(\n-                                String.format( \"Number of relationships: %d does not\" + \" match with path length: %d.\", index, path.length ) );\n+                          String.format(\"Number of relationships: %d does not\" + \" match with path length: %d.\", index, path.length));\n                     }\n-                    next = relationshipIterator.next().getOtherNode( current );\n+                    next = relationshipIterator.next().getOtherNode(current);\n                 }\n                 index += 1;\n                 try\n                 {\n                     return current;\n-                }\n-                finally\n+                } finally\n                 {\n                     current = next;\n                 }\n@@ -239,13 +238,13 @@ public final class PathImpl implements Path, Measurable\n     @Override\n     public Iterable<Relationship> relationships()\n     {\n-        return () -> new ArrayIterator<>( path );\n+        return () -> new ArrayIterator<>(path);\n     }\n \n     @Override\n     public Iterable<Relationship> reverseRelationships()\n     {\n-        return () -> new ReverseArrayIterator<>( path );\n+        return () -> new ReverseArrayIterator<>(path);\n     }\n \n     @Override\n@@ -268,8 +267,7 @@ public final class PathImpl implements Path, Measurable\n                 try\n                 {\n                     return current.next();\n-                }\n-                finally\n+                } finally\n                 {\n                     Iterator<? extends Entity> temp = current;\n                     current = next;\n@@ -294,30 +292,27 @@ public final class PathImpl implements Path, Measurable\n     @Override\n     public int hashCode()\n     {\n-        if ( path.length == 0 )\n+        if (path.length == 0)\n         {\n             return start.hashCode();\n-        }\n-        else\n+        } else\n         {\n-            return Arrays.hashCode( path );\n+            return Arrays.hashCode(path);\n         }\n     }\n \n     @Override\n-    public boolean equals( Object obj )\n+    public boolean equals(Object obj)\n     {\n-        if ( this == obj )\n+        if (this == obj)\n         {\n             return true;\n-        }\n-        else if ( obj instanceof Path )\n+        } else if (obj instanceof Path)\n         {\n             Path other = (Path) obj;\n-            return start.equals( other.startNode() ) &&\n-                    iteratorsEqual( this.relationships().iterator(), other.relationships().iterator() );\n-        }\n-        else\n+            return start.equals(other.startNode()) &&\n+              iteratorsEqual(this.relationships().iterator(), other.relationships().iterator());\n+        } else\n         {\n             return false;\n         }\n@@ -326,7 +321,7 @@ public final class PathImpl implements Path, Measurable\n     @Override\n     public long estimatedHeapUsage()\n     {\n-        long estimate =  SHALLOW_SIZE + HeapEstimator.shallowSizeOfObjectArray( path.length );\n+        long estimate = SHALLOW_SIZE + HeapEstimator.shallowSizeOfObjectArray(path.length);\n         int pathLength = path.length;\n         estimate += pathLength * RelationshipEntity.SHALLOW_SIZE;\n \n@@ -336,6 +331,6 @@ public final class PathImpl implements Path, Measurable\n     @Override\n     public String toString()\n     {\n-        return Paths.defaultPathToString( this );\n+        return Paths.defaultPathToString(this);\n     }\n }\n",
            "diff_size": 54
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
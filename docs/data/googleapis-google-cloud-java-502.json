{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "502",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage com.google.cloud.bigtable.data.v2.stub.readrows;\n\nimport com.google.api.core.InternalApi;\nimport com.google.api.gax.retrying.StreamResumptionStrategy;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/502/ReadRowsResumptionStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/502/ReadRowsResumptionStrategy.java\nindex dfc1ea1ef5d..9d314d0cef2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/502/ReadRowsResumptionStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/502/ReadRowsResumptionStrategy.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.bigtable.data.v2.stub.readrows;\n \n import com.google.api.core.InternalApi;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/502/ReadRowsResumptionStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/502/ReadRowsResumptionStrategy.java\nindex dfc1ea1ef5d..9d314d0cef2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/502/ReadRowsResumptionStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/502/ReadRowsResumptionStrategy.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.bigtable.data.v2.stub.readrows;\n \n import com.google.api.core.InternalApi;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "153",
                    "severity": "warning",
                    "message": "'switch rcurly' has incorrect indentation level 2, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/502/ReadRowsResumptionStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/502/ReadRowsResumptionStrategy.java\nindex dfc1ea1ef5d..60931d19698 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/502/ReadRowsResumptionStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/502/ReadRowsResumptionStrategy.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.bigtable.data.v2.stub.readrows;\n \n import com.google.api.core.InternalApi;\n@@ -35,8 +36,8 @@ import com.google.protobuf.ByteString;\n  * applications.\n  */\n @InternalApi\n-public class ReadRowsResumptionStrategy<RowT>\n-    implements StreamResumptionStrategy<ReadRowsRequest, RowT> {\n+public class ReadRowsResumptionStrategy<RowT> implements StreamResumptionStrategy<ReadRowsRequest, RowT> {\n+\n   private final RowAdapter<RowT> rowAdapter;\n   private ByteString lastKey = ByteString.EMPTY;\n   // Number of rows processed excluding Marker row.\n@@ -91,27 +92,22 @@ public class ReadRowsResumptionStrategy<RowT>\n     // unbounded range to the request\n     if (request.getRows().getRowKeysList().isEmpty()\n         && request.getRows().getRowRangesList().isEmpty()) {\n-\n-      originalRequest =\n-          request\n-              .toBuilder()\n-              .setRows(RowSet.newBuilder().addRowRanges(RowRange.getDefaultInstance()))\n+  originalRequest =\n+          request.toBuilder().setRows(RowSet.newBuilder().addRowRanges(RowRange.getDefaultInstance()))\n               .build();\n-    }\n+  }\n \n     // Start building the resume request. The keys & ranges are cleared and will be recomputed.\n     Builder builder = originalRequest.toBuilder();\n     builder.clearRows();\n \n     RowSet.Builder rowSetBuilder = RowSet.newBuilder();\n-\n-    for (ByteString key : originalRequest.getRows().getRowKeysList()) {\n+for (ByteString key : originalRequest.getRows().getRowKeysList()) {\n       if (ByteStringComparator.INSTANCE.compare(key, lastKey) > 0) {\n         rowSetBuilder.addRowKeys(key);\n       }\n     }\n-\n-    for (RowRange rowRange : originalRequest.getRows().getRowRangesList()) {\n+for (RowRange rowRange : originalRequest.getRows().getRowRangesList()) {\n       RowRange.Builder rowRangeBuilder = RowRange.newBuilder();\n \n       switch (rowRange.getEndKeyCase()) {\n@@ -129,16 +125,14 @@ public class ReadRowsResumptionStrategy<RowT>\n             continue;\n           }\n           break;\n-        case ENDKEY_NOT_SET:\n-          rowRangeBuilder.clearEndKey();\n+        case ENDKEY_NOT_SET: rowRangeBuilder.clearEndKey();\n           break;\n         default:\n           throw new IllegalArgumentException(\"Unknown endKeyCase: \" + rowRange.getEndKeyCase());\n       }\n \n       switch (rowRange.getStartKeyCase()) {\n-        case STARTKEY_NOT_SET:\n-          rowRangeBuilder.setStartKeyOpen(lastKey);\n+        case STARTKEY_NOT_SET: rowRangeBuilder.setStartKeyOpen(lastKey);\n           break;\n         case START_KEY_OPEN:\n           if (ByteStringComparator.INSTANCE.compare(rowRange.getStartKeyOpen(), lastKey) < 0) {\n@@ -156,7 +150,7 @@ public class ReadRowsResumptionStrategy<RowT>\n           break;\n         default:\n           throw new IllegalArgumentException(\"Unknown startKeyCase: \" + rowRange.getStartKeyCase());\n-      }\n+  }\n       rowSetBuilder.addRowRanges(rowRangeBuilder.build());\n     }\n \n@@ -169,8 +163,7 @@ public class ReadRowsResumptionStrategy<RowT>\n         || (originalRequest.getRowsLimit() > 0 && originalRequest.getRowsLimit() == numProcessed)) {\n       return ReadRowsRetryCompletedCallable.FULFILLED_REQUEST_MARKER;\n     }\n-\n-    if (originalRequest.getRowsLimit() > 0) {\n+if (originalRequest.getRowsLimit() > 0) {\n       Preconditions.checkState(\n           originalRequest.getRowsLimit() > numProcessed,\n           \"Detected too many rows for the current row limit during a retry.\");\n@@ -180,4 +173,4 @@ public class ReadRowsResumptionStrategy<RowT>\n     builder.setRows(rowSetBuilder.build());\n     return builder.build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'implements' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'&&' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "111",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'switch' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 41, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 43, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 41, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 43, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 41, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 41, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 41, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "121",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 43, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 41, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 43, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 41, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 41, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 41, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 41, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 41, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'switch' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "134",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 43, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 43, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 43, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 45, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 43, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 45, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "141",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 43, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "142",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 43, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 43, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "144",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "145",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 45, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 43, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "warning",
                    "message": "'else' child has incorrect indentation level 45, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "148",
                    "severity": "warning",
                    "message": "'else rcurly' has incorrect indentation level 43, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 43, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "warning",
                    "message": "'block' child has incorrect indentation level 43, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "161",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "166",
                    "severity": "warning",
                    "message": "'\"Detected too many rows for the current row limit during a retry.\"' has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/502/ReadRowsResumptionStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/502/ReadRowsResumptionStrategy.java\nindex dfc1ea1ef5d..eae838e63dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/502/ReadRowsResumptionStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/502/ReadRowsResumptionStrategy.java\n@@ -34,9 +34,12 @@ import com.google.protobuf.ByteString;\n  * <p>This class is considered an internal implementation detail and not meant to be used by\n  * applications.\n  */\n+\n+\n @InternalApi\n public class ReadRowsResumptionStrategy<RowT>\n-    implements StreamResumptionStrategy<ReadRowsRequest, RowT> {\n+implements StreamResumptionStrategy<ReadRowsRequest, RowT> {\n+\n   private final RowAdapter<RowT> rowAdapter;\n   private ByteString lastKey = ByteString.EMPTY;\n   // Number of rows processed excluding Marker row.\n@@ -77,6 +80,7 @@ public class ReadRowsResumptionStrategy<RowT>\n    * implementation takes care to update the row limit of the request to account for all of the\n    * received rows.\n    */\n+\n   @Override\n   public ReadRowsRequest getResumeRequest(ReadRowsRequest request) {\n     // An empty lastKey means that we have not successfully read the first row,\n@@ -84,78 +88,67 @@ public class ReadRowsResumptionStrategy<RowT>\n     if (lastKey.isEmpty()) {\n       return request;\n     }\n-\n     ReadRowsRequest originalRequest = request;\n \n     // Special case: empty query implies full table scan, so make this explicit by adding an\n     // unbounded range to the request\n     if (request.getRows().getRowKeysList().isEmpty()\n-        && request.getRows().getRowRangesList().isEmpty()) {\n-\n-      originalRequest =\n-          request\n-              .toBuilder()\n-              .setRows(RowSet.newBuilder().addRowRanges(RowRange.getDefaultInstance()))\n-              .build();\n+      && request.getRows().getRowRangesList().isEmpty()) {\n+      originalRequest = request.toBuilder().setRows(RowSet.newBuilder().addRowRanges(RowRange.getDefaultInstance())).build();\n     }\n \n     // Start building the resume request. The keys & ranges are cleared and will be recomputed.\n     Builder builder = originalRequest.toBuilder();\n     builder.clearRows();\n-\n     RowSet.Builder rowSetBuilder = RowSet.newBuilder();\n-\n     for (ByteString key : originalRequest.getRows().getRowKeysList()) {\n       if (ByteStringComparator.INSTANCE.compare(key, lastKey) > 0) {\n         rowSetBuilder.addRowKeys(key);\n       }\n     }\n-\n     for (RowRange rowRange : originalRequest.getRows().getRowRangesList()) {\n       RowRange.Builder rowRangeBuilder = RowRange.newBuilder();\n-\n-      switch (rowRange.getEndKeyCase()) {\n+      switch(rowRange.getEndKeyCase()) {\n         case END_KEY_CLOSED:\n-          if (ByteStringComparator.INSTANCE.compare(rowRange.getEndKeyClosed(), lastKey) > 0) {\n-            rowRangeBuilder.setEndKeyClosed(rowRange.getEndKeyClosed());\n-          } else {\n-            continue;\n-          }\n-          break;\n+                                         if (ByteStringComparator.INSTANCE.compare(rowRange.getEndKeyClosed(), lastKey) > 0) {\n+                                           rowRangeBuilder.setEndKeyClosed(rowRange.getEndKeyClosed());\n+                                         } else {\n+                                           continue;\n+                                         }\n+                                         break;\n         case END_KEY_OPEN:\n-          if (ByteStringComparator.INSTANCE.compare(rowRange.getEndKeyOpen(), lastKey) > 0) {\n-            rowRangeBuilder.setEndKeyOpen(rowRange.getEndKeyOpen());\n-          } else {\n-            continue;\n-          }\n-          break;\n+                                         if (ByteStringComparator.INSTANCE.compare(rowRange.getEndKeyOpen(), lastKey) > 0) {\n+                                           rowRangeBuilder.setEndKeyOpen(rowRange.getEndKeyOpen());\n+                                         } else {\n+                                           continue;\n+                                         }\n+                                         break;\n         case ENDKEY_NOT_SET:\n-          rowRangeBuilder.clearEndKey();\n-          break;\n+                                         rowRangeBuilder.clearEndKey();\n+                                         break;\n         default:\n-          throw new IllegalArgumentException(\"Unknown endKeyCase: \" + rowRange.getEndKeyCase());\n+                                         throw new IllegalArgumentException(\"Unknown endKeyCase: \" + rowRange.getEndKeyCase());\n       }\n-\n-      switch (rowRange.getStartKeyCase()) {\n+      switch(rowRange.getStartKeyCase()) {\n         case STARTKEY_NOT_SET:\n-          rowRangeBuilder.setStartKeyOpen(lastKey);\n-          break;\n+                                           rowRangeBuilder.setStartKeyOpen(lastKey);\n+                                           break;\n         case START_KEY_OPEN:\n-          if (ByteStringComparator.INSTANCE.compare(rowRange.getStartKeyOpen(), lastKey) < 0) {\n-            rowRangeBuilder.setStartKeyOpen(lastKey);\n-          } else {\n-            rowRangeBuilder.setStartKeyOpen(rowRange.getStartKeyOpen());\n-          }\n-          break;\n+                                           if (ByteStringComparator.INSTANCE.compare(rowRange.getStartKeyOpen(), lastKey) < 0) {\n+                                             rowRangeBuilder.setStartKeyOpen(lastKey);\n+                                           } else {\n+                                             rowRangeBuilder.setStartKeyOpen(rowRange.getStartKeyOpen());\n+                                           }\n+                                           break;\n         case START_KEY_CLOSED:\n-          if (ByteStringComparator.INSTANCE.compare(rowRange.getStartKeyClosed(), lastKey) <= 0) {\n-            rowRangeBuilder.setStartKeyOpen(lastKey);\n-          } else {\n-            rowRangeBuilder.setStartKeyClosed(rowRange.getStartKeyClosed());\n-          }\n-          break;\n+                                           if (ByteStringComparator.INSTANCE.compare(rowRange.getStartKeyClosed(), lastKey) <= 0) {\n+                                             rowRangeBuilder.setStartKeyOpen(lastKey);\n+                                           } else {\n+                                             rowRangeBuilder.setStartKeyClosed(rowRange.getStartKeyClosed());\n+                                           }\n+                                           break;\n         default:\n-          throw new IllegalArgumentException(\"Unknown startKeyCase: \" + rowRange.getStartKeyCase());\n+                                           throw new IllegalArgumentException(\"Unknown startKeyCase: \" + rowRange.getStartKeyCase());\n       }\n       rowSetBuilder.addRowRanges(rowRangeBuilder.build());\n     }\n@@ -165,19 +158,15 @@ public class ReadRowsResumptionStrategy<RowT>\n     // had a row limit, has seen enough rows. These requests are replaced with a marker request that\n     // will be handled by ReadRowsRetryCompletedCallable. See docs in ReadRowsRetryCompletedCallable\n     // for more details.\n-    if ((rowSetBuilder.getRowRangesCount() == 0 && rowSetBuilder.getRowKeysCount() == 0)\n-        || (originalRequest.getRowsLimit() > 0 && originalRequest.getRowsLimit() == numProcessed)) {\n+    if ((rowSetBuilder.getRowRangesCount() == 0 && rowSetBuilder.getRowKeysCount() == 0) || (originalRequest.getRowsLimit() > 0 && originalRequest.getRowsLimit() == numProcessed)) {\n       return ReadRowsRetryCompletedCallable.FULFILLED_REQUEST_MARKER;\n     }\n-\n     if (originalRequest.getRowsLimit() > 0) {\n-      Preconditions.checkState(\n-          originalRequest.getRowsLimit() > numProcessed,\n-          \"Detected too many rows for the current row limit during a retry.\");\n+      Preconditions.checkState(originalRequest.getRowsLimit() > numProcessed,\n+        \"Detected too many rows for the current row limit during a retry.\");\n       builder.setRowsLimit(originalRequest.getRowsLimit() - numProcessed);\n     }\n-\n     builder.setRows(rowSetBuilder.build());\n     return builder.build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 58
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/502/ReadRowsResumptionStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/502/ReadRowsResumptionStrategy.java\nindex dfc1ea1ef5d..9d314d0cef2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/502/ReadRowsResumptionStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/502/ReadRowsResumptionStrategy.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.bigtable.data.v2.stub.readrows;\n \n import com.google.api.core.InternalApi;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/502/ReadRowsResumptionStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/502/ReadRowsResumptionStrategy.java\nindex dfc1ea1ef5d..9d314d0cef2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/502/ReadRowsResumptionStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/502/ReadRowsResumptionStrategy.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.google.cloud.bigtable.data.v2.stub.readrows;\n \n import com.google.api.core.InternalApi;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
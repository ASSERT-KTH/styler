{
    "project_name": "NationalSecurityAgency-emissary",
    "error_id": "14",
    "information": {
        "errors": [
            {
                "line": "241",
                "column": "20",
                "severity": "warning",
                "message": "'}' at column 20 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\n    /** This class is not meant to be instantiated. */\n    private Url() {}\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "241",
                    "column": "20",
                    "severity": "warning",
                    "message": "'}' at column 20 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/14/Url.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/intellij/14/Url.java\nindex 3495f2ddcc2..1aab7bc28a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/14/Url.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/intellij/14/Url.java\n@@ -30,7 +30,7 @@ public class Url {\n \n     /**\n      * process a url depending on the method specified\n-     * \n+     *\n      * @param toProcess the URL resource to process with GET HEAD or POST\n      */\n     public static UrlData doUrl(final UrlData toProcess) {\n@@ -53,7 +53,7 @@ public class Url {\n \n     /**\n      * get a url\n-     * \n+     *\n      * @param toGet describe where to GET from\n      */\n     public static UrlData getUrl(final UrlData toGet) {\n@@ -62,7 +62,7 @@ public class Url {\n \n     /**\n      * get a Url without any extra properties\n-     * \n+     *\n      * @param urlString the URL resource to GET\n      */\n     public static UrlData getUrl(final String urlString) {\n@@ -71,9 +71,9 @@ public class Url {\n \n     /**\n      * Get a url, specifying additional header properties\n-     * \n+     *\n      * @param urlString the URL resource\n-     * @param props properties to use on the connection\n+     * @param props     properties to use on the connection\n      */\n     public static UrlData getUrl(final String urlString, final UrlRequestProperty[] props) {\n         return processUrl(urlString, props, null, Url.GET);\n@@ -81,7 +81,7 @@ public class Url {\n \n     /**\n      * post to a url\n-     * \n+     *\n      * @param toPost descript where to POST\n      */\n     public static UrlData postUrl(final UrlData toPost) {\n@@ -90,9 +90,9 @@ public class Url {\n \n     /**\n      * post to a url\n-     * \n+     *\n      * @param toPost describe where to POST\n-     * @param parms the POST data\n+     * @param parms  the POST data\n      */\n     public static UrlData postUrl(final UrlData toPost, final HttpPostParameters parms) {\n         return postUrl(toPost.getTheUrl(), toPost.getProps(), parms);\n@@ -100,7 +100,7 @@ public class Url {\n \n     /**\n      * post a Url without any extra properties\n-     * \n+     *\n      * @param urlString the URL resource to POST on\n      */\n     public static UrlData postUrl(final String urlString) {\n@@ -109,10 +109,10 @@ public class Url {\n \n     /**\n      * Post on a url, specifying additional header properties and params\n-     * \n+     *\n      * @param urlString the URL resource\n-     * @param props array of properties to use\n-     * @param parms the POST data\n+     * @param props     array of properties to use\n+     * @param parms     the POST data\n      */\n     public static UrlData postUrl(final String urlString, final UrlRequestProperty[] props, final HttpPostParameters parms) {\n \n@@ -132,11 +132,11 @@ public class Url {\n \n     /**\n      * process (GET|POST|HEAD) a Url\n-     * \n+     *\n      * @param urlString the URL resource\n-     * @param props array of properties to use as headers, must have Content-length if POSTing\n-     * @param parms parameters to use when POSTing\n-     * @param method GET, HEAD, POST\n+     * @param props     array of properties to use as headers, must have Content-length if POSTing\n+     * @param parms     parameters to use when POSTing\n+     * @param method    GET, HEAD, POST\n      */\n     private static UrlData processUrl(final String urlString, final UrlRequestProperty[] props, final HttpPostParameters parms, final int method) {\n         final UrlData response = new UrlData(urlString);\n@@ -237,6 +237,9 @@ public class Url {\n         return response;\n     }\n \n-    /** This class is not meant to be instantiated. */\n-    private Url() {}\n+    /**\n+     * This class is not meant to be instantiated.\n+     */\n+    private Url() {\n+    }\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/14/Url.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/codebuff/14/Url.java\nindex 3495f2ddcc2..d87e2f43fe7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/errored/1/14/Url.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/NationalSecurityAgency-emissary/codebuff/14/Url.java\n@@ -13,19 +13,21 @@ import java.net.MalformedURLException;\n import java.net.URL;\n import java.util.HashMap;\n import java.util.Map;\n-\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+\n public class Url {\n \n     private static final Logger logger = LoggerFactory.getLogger(Url.class);\n \n     public static final int UNINITIALIZED = 0;\n+\n     public static final int GET = 1;\n+\n     public static final int POST = 2;\n-    public static final int HEAD = 3;\n \n+    public static final int HEAD = 3;\n     static final String[] theMethodString = {\"GET\", \"POST\", \"HEAD\"};\n \n     /**\n@@ -33,21 +35,19 @@ public class Url {\n      * \n      * @param toProcess the URL resource to process with GET HEAD or POST\n      */\n+\n     public static UrlData doUrl(final UrlData toProcess) {\n         if (toProcess == null) {\n             throw new IllegalArgumentException(\"Url.doUrl: null UrlData arg\");\n         }\n \n         final int method = toProcess.getTheMethod();\n-\n         if (method == Url.GET) {\n             return getUrl(toProcess);\n         }\n-\n         if (method == Url.POST) {\n             return postUrl(toProcess);\n         }\n-\n         throw new IllegalArgumentException(\"UrlData method \" + method + \" not implemented in UrlData.doUrl\");\n     }\n \n@@ -56,6 +56,8 @@ public class Url {\n      * \n      * @param toGet describe where to GET from\n      */\n+\n+\n     public static UrlData getUrl(final UrlData toGet) {\n         return getUrl(toGet.getTheUrl(), toGet.getProps());\n     }\n@@ -65,6 +67,8 @@ public class Url {\n      * \n      * @param urlString the URL resource to GET\n      */\n+\n+\n     public static UrlData getUrl(final String urlString) {\n         return getUrl(urlString, null);\n     }\n@@ -75,6 +79,8 @@ public class Url {\n      * @param urlString the URL resource\n      * @param props properties to use on the connection\n      */\n+\n+\n     public static UrlData getUrl(final String urlString, final UrlRequestProperty[] props) {\n         return processUrl(urlString, props, null, Url.GET);\n     }\n@@ -84,6 +90,8 @@ public class Url {\n      * \n      * @param toPost descript where to POST\n      */\n+\n+\n     public static UrlData postUrl(final UrlData toPost) {\n         return postUrl(toPost.getTheUrl(), toPost.getProps(), null);\n     }\n@@ -94,6 +102,8 @@ public class Url {\n      * @param toPost describe where to POST\n      * @param parms the POST data\n      */\n+\n+\n     public static UrlData postUrl(final UrlData toPost, final HttpPostParameters parms) {\n         return postUrl(toPost.getTheUrl(), toPost.getProps(), parms);\n     }\n@@ -103,6 +113,8 @@ public class Url {\n      * \n      * @param urlString the URL resource to POST on\n      */\n+\n+\n     public static UrlData postUrl(final String urlString) {\n         return postUrl(urlString, null, null);\n     }\n@@ -114,10 +126,11 @@ public class Url {\n      * @param props array of properties to use\n      * @param parms the POST data\n      */\n+\n+\n     public static UrlData postUrl(final String urlString, final UrlRequestProperty[] props, final HttpPostParameters parms) {\n \n         // props.addProp(new UrlRequestProperty(\"Content-length\",parms.length()));\n-\n         final UrlData u = new UrlData(urlString);\n         u.setTheMethod(Url.POST);\n         if (props != null) {\n@@ -126,7 +139,6 @@ public class Url {\n         if (parms != null) {\n             u.addProp(new UrlRequestProperty(\"Content-length\", parms.length()));\n         }\n-\n         return processUrl(u.getTheUrl(), u.getProps(), parms, u.getTheMethod());\n     }\n \n@@ -138,9 +150,9 @@ public class Url {\n      * @param parms parameters to use when POSTing\n      * @param method GET, HEAD, POST\n      */\n+\n     private static UrlData processUrl(final String urlString, final UrlRequestProperty[] props, final HttpPostParameters parms, final int method) {\n         final UrlData response = new UrlData(urlString);\n-\n         final StringBuilder theOutput = new StringBuilder();\n         OutputStream os = null;\n         BufferedReader dis = null;\n@@ -191,9 +203,9 @@ public class Url {\n             }\n \n             // Load headers into properties array\n+\n             final UrlRequestProperty[] theProps = new UrlRequestProperty[headers.size()];\n             hdr = 0;\n-\n             for (final Map.Entry<String, String> entry : headers.entrySet()) {\n                 theProps[hdr] = new UrlRequestProperty(entry.getKey(), entry.getValue());\n             }\n@@ -208,7 +220,6 @@ public class Url {\n                 while ((line = dis.readLine()) != null) {\n                     theOutput.append(line).append(System.getProperty(\"line.separator\", \"\\n\"));\n                 }\n-\n                 response.setTheContent(theOutput.toString().getBytes());\n             }\n         } catch (MalformedURLException e) {\n@@ -233,10 +244,12 @@ public class Url {\n                 }\n             }\n         }\n-\n         return response;\n     }\n \n     /** This class is not meant to be instantiated. */\n-    private Url() {}\n-}\n+\n+    private Url() {\n+\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 37
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "241",
                    "column": "20",
                    "severity": "warning",
                    "message": "'}' at column 20 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "241",
                    "column": "20",
                    "severity": "warning",
                    "message": "'}' at column 20 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
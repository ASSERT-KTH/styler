{
    "project_name": "neo4j-neo4j",
    "error_id": "955",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/955/OnlineIndexSamplingJob.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/955/OnlineIndexSamplingJob.java\nindex 5b1458ca4aa..432fb7dfc31 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/955/OnlineIndexSamplingJob.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/955/OnlineIndexSamplingJob.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index.sampling;\n \n import org.neo4j.internal.kernel.api.exceptions.schema.IndexNotFoundKernelException;\n@@ -44,13 +45,13 @@ class OnlineIndexSamplingJob implements IndexSamplingJob\n     private final String indexName;\n     private final PageCacheTracer pageCacheTracer;\n \n-    OnlineIndexSamplingJob( long indexId, IndexProxy indexProxy, IndexStatisticsStore indexStatisticsStore, String indexUserDescription, String indexName,\n-            LogProvider logProvider, PageCacheTracer pageCacheTracer )\n+    OnlineIndexSamplingJob(long indexId, IndexProxy indexProxy, IndexStatisticsStore indexStatisticsStore, String indexUserDescription, String indexName,\n+                           LogProvider logProvider, PageCacheTracer pageCacheTracer)\n     {\n         this.indexId = indexId;\n         this.indexProxy = indexProxy;\n         this.indexStatisticsStore = indexStatisticsStore;\n-        this.log = logProvider.getLog( getClass() );\n+        this.log = logProvider.getLog(getClass());\n         this.indexUserDescription = indexUserDescription;\n         this.indexName = indexName;\n         this.pageCacheTracer = pageCacheTracer;\n@@ -71,37 +72,35 @@ class OnlineIndexSamplingJob implements IndexSamplingJob\n     @Override\n     public void run()\n     {\n-        try ( DurationLogger durationLogger = new DurationLogger( log, \"Sampling index \" + indexUserDescription ) )\n+        try (DurationLogger durationLogger = new DurationLogger(log, \"Sampling index \" + indexUserDescription))\n         {\n             try\n             {\n-                try ( IndexReader reader = indexProxy.newReader();\n-                      var cursorTracer = pageCacheTracer.createPageCursorTracer( INDEX_SAMPLER_TAG );\n-                      IndexSampler sampler = reader.createSampler() )\n+                try (IndexReader reader = indexProxy.newReader();\n+                     var cursorTracer = pageCacheTracer.createPageCursorTracer(INDEX_SAMPLER_TAG);\n+                     IndexSampler sampler = reader.createSampler())\n                 {\n-                    IndexSample sample = sampler.sampleIndex( cursorTracer );\n+                    IndexSample sample = sampler.sampleIndex(cursorTracer);\n \n                     // check again if the index is online before saving the counts in the store\n-                    if ( indexProxy.getState() == ONLINE )\n+                    if (indexProxy.getState() == ONLINE)\n                     {\n-                        indexStatisticsStore.replaceStats( indexId, sample );\n+                        indexStatisticsStore.replaceStats(indexId, sample);\n                         durationLogger.markAsFinished();\n                         log.debug(\n-                                format( \"Sampled index %s with %d unique values in sample of avg size %d taken from \" +\n-                                        \"index containing %d entries\",\n-                                        indexUserDescription, sample.uniqueValues(), sample.sampleSize(),\n-                                        sample.indexSize() ) );\n-                    }\n-                    else\n+                          format(\"Sampled index %s with %d unique values in sample of avg size %d taken from \" +\n+                              \"index containing %d entries\",\n+                            indexUserDescription, sample.uniqueValues(), sample.sampleSize(),\n+                            sample.indexSize()));\n+                    } else\n                     {\n-                        durationLogger.markAsAborted( \"Index no longer ONLINE\" );\n+                        durationLogger.markAsAborted(\"Index no longer ONLINE\");\n                     }\n                 }\n-            }\n-            catch ( IndexNotFoundKernelException e )\n+            } catch (IndexNotFoundKernelException e)\n             {\n                 durationLogger.markAsAborted(\n-                        \"Attempted to sample missing/already deleted index \" + indexUserDescription );\n+                  \"Attempted to sample missing/already deleted index \" + indexUserDescription);\n             }\n         }\n     }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
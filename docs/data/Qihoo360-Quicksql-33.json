{
    "project_name": "Qihoo360-Quicksql",
    "error_id": "33",
    "information": {
        "errors": [
            {
                "line": "17",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage com.qihoo.qsql.org.apache.calcite.rel.type;\n\n/**\n * Describes a policy for resolving fields in record types.",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/33/StructKind.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler/33/StructKind.java\nindex 4380b73b313..4a543721a32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/33/StructKind.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler/33/StructKind.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.qihoo.qsql.org.apache.calcite.rel.type;\n \n /**\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/33/StructKind.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/intellij/33/StructKind.java\nindex 4380b73b313..1dd3cb600c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/33/StructKind.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/intellij/33/StructKind.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.qihoo.qsql.org.apache.calcite.rel.type;\n \n /**\n@@ -49,40 +50,49 @@ package com.qihoo.qsql.org.apache.calcite.rel.type;\n  * </ol>\n  */\n public enum StructKind {\n-  /** This is not a structured type. */\n-  NONE,\n+    /**\n+     * This is not a structured type.\n+     */\n+    NONE,\n \n-  /** This is a traditional structured type, where each field must be\n-   * referenced explicitly.\n-   *\n-   * <p>Also, when referencing a struct column, you\n-   * need to qualify it with the table alias, per standard SQL. For instance,\n-   * {@code SELECT c.address.zipcode FROM customer AS c}\n-   * is valid but\n-   * {@code SELECT address.zipcode FROM customer}\n-   * it not valid.\n-   */\n-  FULLY_QUALIFIED,\n+    /**\n+     * This is a traditional structured type, where each field must be\n+     * referenced explicitly.\n+     *\n+     * <p>Also, when referencing a struct column, you\n+     * need to qualify it with the table alias, per standard SQL. For instance,\n+     * {@code SELECT c.address.zipcode FROM customer AS c}\n+     * is valid but\n+     * {@code SELECT address.zipcode FROM customer}\n+     * it not valid.\n+     */\n+    FULLY_QUALIFIED,\n \n-  /** As {@link #PEEK_FIELDS}, but takes priority if another struct-typed\n-   * field also has a field of the name being sought.\n-   *\n-   * <p>In Phoenix, only one of a table's columns is labeled\n-   * {@code PEEK_FIELDS_DEFAULT} - the default column family - but in principle\n-   * there could be more than one. */\n-  PEEK_FIELDS_DEFAULT,\n+    /**\n+     * As {@link #PEEK_FIELDS}, but takes priority if another struct-typed\n+     * field also has a field of the name being sought.\n+     *\n+     * <p>In Phoenix, only one of a table's columns is labeled\n+     * {@code PEEK_FIELDS_DEFAULT} - the default column family - but in principle\n+     * there could be more than one.\n+     */\n+    PEEK_FIELDS_DEFAULT,\n \n-  /** If a field has this type, you can see its fields without qualifying them\n-   * with the name of this field.\n-   *\n-   * <p>For example, if {@code address} is labeled {@code PEEK_FIELDS}, you\n-   * could write {@code zipcode} as shorthand for {@code address.zipcode}. */\n-  PEEK_FIELDS,\n+    /**\n+     * If a field has this type, you can see its fields without qualifying them\n+     * with the name of this field.\n+     *\n+     * <p>For example, if {@code address} is labeled {@code PEEK_FIELDS}, you\n+     * could write {@code zipcode} as shorthand for {@code address.zipcode}.\n+     */\n+    PEEK_FIELDS,\n \n-  /** As {@link #PEEK_FIELDS}, but fields are not expanded in \"SELECT *\".\n-   *\n-   * <p>Used in Flink, not Phoenix. */\n-  PEEK_FIELDS_NO_EXPAND,\n+    /**\n+     * As {@link #PEEK_FIELDS}, but fields are not expanded in \"SELECT *\".\n+     *\n+     * <p>Used in Flink, not Phoenix.\n+     */\n+    PEEK_FIELDS_NO_EXPAND,\n }\n \n // End StructKind.java\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "17",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 55.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 6, indentation should be the same level as line 66.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 38, indentation should be the same level as line 73.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 78, indentation should be the same level as line 79.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 2, expected is 39, indentation should be the same level as line 83.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/33/StructKind.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/codebuff/33/StructKind.java\nindex 4380b73b313..15932260abd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/33/StructKind.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/codebuff/33/StructKind.java\n@@ -48,9 +48,11 @@ package com.qihoo.qsql.org.apache.calcite.rel.type;\n  *   will beat one that uses {@code PEEK_FIELDS} at some point.\n  * </ol>\n  */\n+\n+\n public enum StructKind {\n   /** This is not a structured type. */\n-  NONE,\n+    NONE,\n \n   /** This is a traditional structured type, where each field must be\n    * referenced explicitly.\n@@ -61,28 +63,22 @@ public enum StructKind {\n    * is valid but\n    * {@code SELECT address.zipcode FROM customer}\n    * it not valid.\n-   */\n-  FULLY_QUALIFIED,\n+   */ FULLY_QUALIFIED,\n \n   /** As {@link #PEEK_FIELDS}, but takes priority if another struct-typed\n    * field also has a field of the name being sought.\n    *\n    * <p>In Phoenix, only one of a table's columns is labeled\n    * {@code PEEK_FIELDS_DEFAULT} - the default column family - but in principle\n-   * there could be more than one. */\n-  PEEK_FIELDS_DEFAULT,\n+   * there could be more than one. */ PEEK_FIELDS_DEFAULT,\n \n   /** If a field has this type, you can see its fields without qualifying them\n    * with the name of this field.\n    *\n    * <p>For example, if {@code address} is labeled {@code PEEK_FIELDS}, you\n-   * could write {@code zipcode} as shorthand for {@code address.zipcode}. */\n-  PEEK_FIELDS,\n+   * could write {@code zipcode} as shorthand for {@code address.zipcode}. */ PEEK_FIELDS,\n \n   /** As {@link #PEEK_FIELDS}, but fields are not expanded in \"SELECT *\".\n    *\n-   * <p>Used in Flink, not Phoenix. */\n-  PEEK_FIELDS_NO_EXPAND,\n-}\n-\n-// End StructKind.java\n+   * <p>Used in Flink, not Phoenix. */ PEEK_FIELDS_NO_EXPAND,\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/33/StructKind.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_three_grams/33/StructKind.java\nindex 4380b73b313..4a543721a32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/errored/1/33/StructKind.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Qihoo360-Quicksql/styler_three_grams/33/StructKind.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.qihoo.qsql.org.apache.calcite.rel.type;\n \n /**\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "self-xdsd-self-core",
    "error_id": "20",
    "information": {
        "errors": [
            {
                "line": "73",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            issue.isPullRequest()\n        );\n        if(registered != null) {\n            LOG.debug(\n                \"Issue #\" + issue.issueId() + \" is registered as a Task.\"\n            );",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/20/TaskIsRegistered.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/20/TaskIsRegistered.java\nindex 7ad2cca0f91..d6959371db1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/20/TaskIsRegistered.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler/20/TaskIsRegistered.java\n@@ -70,7 +70,7 @@ public final class TaskIsRegistered extends PreconditionCheck {\n             project.provider(),\n             issue.isPullRequest()\n         );\n-        if(registered != null) {\n+        if (registered != null) {\n             LOG.debug(\n                 \"Issue #\" + issue.issueId() + \" is registered as a Task.\"\n             );\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line cannot end with this symbol, move it to the next line",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "column": "58",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/20/TaskIsRegistered.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/20/TaskIsRegistered.java\nindex 7ad2cca0f91..dfcb75e85c2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/20/TaskIsRegistered.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/intellij/20/TaskIsRegistered.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.core.managers;\n \n import com.selfxdsd.api.Event;\n@@ -33,6 +34,7 @@ import org.slf4j.LoggerFactory;\n \n /**\n  * Step where we check if a Task is registered or not.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n  * @since 0.0.20\n@@ -48,7 +50,8 @@ public final class TaskIsRegistered extends PreconditionCheck {\n \n     /**\n      * Ctor.\n-     * @param onTrue Step to follow if the issue is registered as a task.\n+     *\n+     * @param onTrue  Step to follow if the issue is registered as a task.\n      * @param onFalse Step to follow if the issue is NOT registered as a task.\n      */\n     public TaskIsRegistered(final Step onTrue, final Step onFalse) {\n@@ -61,8 +64,9 @@ public final class TaskIsRegistered extends PreconditionCheck {\n         final Issue issue = event.issue();\n         LOG.debug(\n             \"Checking if issue #\" + issue.issueId()\n-            + \" is registered as a Task in Project \" + project.repoFullName()\n-            + \" at \" + project.provider()\n+                + \" is registered as a Task in Project \" +\n+                project.repoFullName()\n+                + \" at \" + project.provider()\n         );\n         final Task registered = project.tasks().getById(\n             issue.issueId(),\n@@ -70,7 +74,7 @@ public final class TaskIsRegistered extends PreconditionCheck {\n             project.provider(),\n             issue.isPullRequest()\n         );\n-        if(registered != null) {\n+        if (registered != null) {\n             LOG.debug(\n                 \"Issue #\" + issue.issueId() + \" is registered as a Task.\"\n             );\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/20/TaskIsRegistered.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/20/TaskIsRegistered.java\nindex 7ad2cca0f91..8ab58953fca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/20/TaskIsRegistered.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/naturalize/20/TaskIsRegistered.java\n@@ -70,7 +70,7 @@ public final class TaskIsRegistered extends PreconditionCheck {\n             project.provider(),\n             issue.isPullRequest()\n         );\n-        if(registered != null) {\n+        if (registered != null) {\n             LOG.debug(\n                 \"Issue #\" + issue.issueId() + \" is registered as a Task.\"\n             );\n@@ -82,4 +82,4 @@ public final class TaskIsRegistered extends PreconditionCheck {\n             this.onFalse().perform(event);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/20/TaskIsRegistered.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/20/TaskIsRegistered.java\nindex 7ad2cca0f91..de338c8e171 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/20/TaskIsRegistered.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/codebuff/20/TaskIsRegistered.java\n@@ -37,21 +37,26 @@ import org.slf4j.LoggerFactory;\n  * @version $Id$\n  * @since 0.0.20\n  */\n+\n+\n public final class TaskIsRegistered extends PreconditionCheck {\n \n     /**\n      * Logger.\n      */\n-    private static final Logger LOG = LoggerFactory.getLogger(\n-        TaskIsRegistered.class\n-    );\n+\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(TaskIsRegistered.class);\n \n     /**\n      * Ctor.\n      * @param onTrue Step to follow if the issue is registered as a task.\n      * @param onFalse Step to follow if the issue is NOT registered as a task.\n      */\n-    public TaskIsRegistered(final Step onTrue, final Step onFalse) {\n+\n+\n+    public TaskIsRegistered(final Step onTrue,\n+                            final Step onFalse) {\n         super(onTrue, onFalse);\n     }\n \n@@ -59,27 +64,24 @@ public final class TaskIsRegistered extends PreconditionCheck {\n     public void perform(final Event event) {\n         final Project project = event.project();\n         final Issue issue = event.issue();\n-        LOG.debug(\n-            \"Checking if issue #\" + issue.issueId()\n-            + \" is registered as a Task in Project \" + project.repoFullName()\n-            + \" at \" + project.provider()\n-        );\n+        LOG.debug(\"Checking if issue #\"\n+                  + issue.issueId() + \" is registered as a Task in Project \"\n++ project.repoFullName() + \" at \"\n++ project.provider());\n         final Task registered = project.tasks().getById(\n             issue.issueId(),\n             project.repoFullName(),\n             project.provider(),\n             issue.isPullRequest()\n         );\n-        if(registered != null) {\n-            LOG.debug(\n-                \"Issue #\" + issue.issueId() + \" is registered as a Task.\"\n-            );\n+        if (registered != null) {\n+            LOG.debug(\"Issue #\"\n+                          + issue.issueId() + \" is registered as a Task.\");\n             this.onTrue().perform(event);\n         } else {\n-            LOG.debug(\n-                \"Issue #\" + issue.issueId() + \" is NOT registered as a Task.\"\n-            );\n+            LOG.debug(\"Issue #\"\n+                          + issue.issueId() + \" is NOT registered as a Task.\");\n             this.onFalse().perform(event);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/20/TaskIsRegistered.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/20/TaskIsRegistered.java\nindex 7ad2cca0f91..d6959371db1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/20/TaskIsRegistered.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_random/20/TaskIsRegistered.java\n@@ -70,7 +70,7 @@ public final class TaskIsRegistered extends PreconditionCheck {\n             project.provider(),\n             issue.isPullRequest()\n         );\n-        if(registered != null) {\n+        if (registered != null) {\n             LOG.debug(\n                 \"Issue #\" + issue.issueId() + \" is registered as a Task.\"\n             );\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/20/TaskIsRegistered.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/20/TaskIsRegistered.java\nindex 7ad2cca0f91..d6959371db1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/errored/1/20/TaskIsRegistered.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-core/styler_three_grams/20/TaskIsRegistered.java\n@@ -70,7 +70,7 @@ public final class TaskIsRegistered extends PreconditionCheck {\n             project.provider(),\n             issue.isPullRequest()\n         );\n-        if(registered != null) {\n+        if (registered != null) {\n             LOG.debug(\n                 \"Issue #\" + issue.issueId() + \" is registered as a Task.\"\n             );\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4520",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4520/UserSerialization.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4520/UserSerialization.java\nindex 651e74e29d3..b345e168468 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4520/UserSerialization.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4520/UserSerialization.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.auth;\n \n import org.neo4j.kernel.impl.security.Credential;\n@@ -31,67 +32,67 @@ import static java.lang.String.format;\n  */\n public class UserSerialization extends FileRepositorySerializer<User>\n {\n-    private static final String userSeparator = \":\";\n-    private static final String credentialSeparator = \",\";\n+  private static final String userSeparator = \":\";\n+  private static final String credentialSeparator = \",\";\n+\n+  @Override\n+  protected String serialize(User user)\n+  {\n+    return String.join(userSeparator,\n+        user.name(),\n+        serialize(user.credentials()),\n+        String.join(\",\", user.getFlags())\n+    );\n+  }\n \n-    @Override\n-    protected String serialize( User user )\n+  @Override\n+  protected User deserializeRecord(String line, int lineNumber) throws FormatException\n+  {\n+    String[] parts = line.split(userSeparator, -1);\n+    if (parts.length != 3)\n     {\n-        return String.join( userSeparator,\n-                user.name(),\n-                serialize( user.credentials() ),\n-                String.join( \",\", user.getFlags() )\n-            );\n+      throw new FormatException(format(\"wrong number of line fields, expected 3, got %d [line %d]\",\n+          parts.length,\n+          lineNumber\n+      ));\n     }\n \n-    @Override\n-    protected User deserializeRecord( String line, int lineNumber ) throws FormatException\n-    {\n-        String[] parts = line.split( userSeparator, -1 );\n-        if ( parts.length != 3 )\n-        {\n-            throw new FormatException( format( \"wrong number of line fields, expected 3, got %d [line %d]\",\n-                    parts.length,\n-                    lineNumber\n-            ) );\n-        }\n+    User.Builder b = new User.Builder()\n+        .withName(parts[0])\n+        .withCredentials(deserializeCredentials(parts[1], lineNumber));\n \n-        User.Builder b = new User.Builder()\n-                .withName( parts[0] )\n-                .withCredentials( deserializeCredentials( parts[1], lineNumber ) );\n+    for (String flag : parts[2].split(\",\", -1))\n+    {\n+      String trimmed = flag.trim();\n+      if (!trimmed.isEmpty())\n+      {\n+        b = b.withFlag(trimmed);\n+      }\n+    }\n \n-        for ( String flag : parts[2].split( \",\", -1 ) )\n-        {\n-            String trimmed = flag.trim();\n-            if ( !trimmed.isEmpty() )\n-            {\n-                b = b.withFlag( trimmed );\n-            }\n-        }\n+    return b.build();\n+  }\n \n-        return  b.build();\n-    }\n+  private String serialize(Credential cred)\n+  {\n+    String encodedSalt = HexString.encodeHexString(cred.salt());\n+    String encodedPassword = HexString.encodeHexString(cred.passwordHash());\n+    return String.join(credentialSeparator, Credential.DIGEST_ALGO, encodedPassword, encodedSalt);\n+  }\n \n-    private String serialize( Credential cred )\n+  private Credential deserializeCredentials(String part, int lineNumber) throws FormatException\n+  {\n+    String[] split = part.split(credentialSeparator, -1);\n+    if (split.length != 3)\n     {\n-        String encodedSalt = HexString.encodeHexString( cred.salt() );\n-        String encodedPassword = HexString.encodeHexString( cred.passwordHash() );\n-        return String.join( credentialSeparator, Credential.DIGEST_ALGO, encodedPassword, encodedSalt );\n+      throw new FormatException(format(\"wrong number of credential fields [line %d]\", lineNumber));\n     }\n-\n-    private Credential deserializeCredentials( String part, int lineNumber ) throws FormatException\n+    if (!split[0].equals(Credential.DIGEST_ALGO))\n     {\n-        String[] split = part.split( credentialSeparator, -1 );\n-        if ( split.length != 3 )\n-        {\n-            throw new FormatException( format( \"wrong number of credential fields [line %d]\", lineNumber ) );\n-        }\n-        if ( !split[0].equals( Credential.DIGEST_ALGO ) )\n-        {\n-            throw new FormatException( format( \"unknown digest \\\"%s\\\" [line %d]\", split[0], lineNumber ) );\n-        }\n-        byte[] decodedPassword = HexString.decodeHexString( split[1] );\n-        byte[] decodedSalt = HexString.decodeHexString( split[2] );\n-        return new Credential( decodedSalt, decodedPassword );\n+      throw new FormatException(format(\"unknown digest \\\"%s\\\" [line %d]\", split[0], lineNumber));\n     }\n+    byte[] decodedPassword = HexString.decodeHexString(split[1]);\n+    byte[] decodedSalt = HexString.decodeHexString(split[2]);\n+    return new Credential(decodedSalt, decodedPassword);\n+  }\n }\n",
            "diff_size": 81
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4520/UserSerialization.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4520/UserSerialization.java\nindex 651e74e29d3..1c5f27480d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4520/UserSerialization.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4520/UserSerialization.java\n@@ -39,9 +39,7 @@ public class UserSerialization extends FileRepositorySerializer<User>\n     {\n         return String.join( userSeparator,\n                 user.name(),\n-                serialize( user.credentials() ),\n-                String.join( \",\", user.getFlags() )\n-            );\n+                serialize( user.credentials() ), String.join( \",\", user.getFlags() ) );\n     }\n \n     @Override\n@@ -52,15 +50,11 @@ public class UserSerialization extends FileRepositorySerializer<User>\n         {\n             throw new FormatException( format( \"wrong number of line fields, expected 3, got %d [line %d]\",\n                     parts.length,\n-                    lineNumber\n-            ) );\n+                    lineNumber ) );\n         }\n \n-        User.Builder b = new User.Builder()\n-                .withName( parts[0] )\n-                .withCredentials( deserializeCredentials( parts[1], lineNumber ) );\n-\n-        for ( String flag : parts[2].split( \",\", -1 ) )\n+        User.Builder b = new User.Builder().withName( parts[0] ).withCredentials( deserializeCredentials( parts[1], lineNumber ) );\n+for ( String flag : parts[2].split( \",\", -1 ) )\n         {\n             String trimmed = flag.trim();\n             if ( !trimmed.isEmpty() )\n@@ -69,7 +63,7 @@ public class UserSerialization extends FileRepositorySerializer<User>\n             }\n         }\n \n-        return  b.build();\n+        return b.build();\n     }\n \n     private String serialize( Credential cred )\n@@ -86,7 +80,8 @@ public class UserSerialization extends FileRepositorySerializer<User>\n         {\n             throw new FormatException( format( \"wrong number of credential fields [line %d]\", lineNumber ) );\n         }\n-        if ( !split[0].equals( Credential.DIGEST_ALGO ) )\n+\n+if ( !split[0].equals( Credential.DIGEST_ALGO ) )\n         {\n             throw new FormatException( format( \"unknown digest \\\"%s\\\" [line %d]\", split[0], lineNumber ) );\n         }\n@@ -94,4 +89,4 @@ public class UserSerialization extends FileRepositorySerializer<User>\n         byte[] decodedSalt = HexString.decodeHexString( split[2] );\n         return new Credential( decodedSalt, decodedPassword );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
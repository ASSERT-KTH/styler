{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4409",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "51",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4409/HelpCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4409/HelpCommand.java\nindex 6acafc883c2..f732f79fe23 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4409/HelpCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4409/HelpCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.admin;\n \n import java.util.NoSuchElementException;\n@@ -27,40 +28,38 @@ import static java.lang.String.format;\n public class HelpCommand implements AdminCommand\n {\n \n-    private final Usage usage;\n-    private final Consumer<String> output;\n-    private final CommandLocator locator;\n+  private final Usage usage;\n+  private final Consumer<String> output;\n+  private final CommandLocator locator;\n \n-    HelpCommand( Usage usage, Consumer<String> output, CommandLocator locator )\n-    {\n-        this.usage = usage;\n-        this.output = output;\n-        this.locator = locator;\n-    }\n+  HelpCommand(Usage usage, Consumer<String> output, CommandLocator locator)\n+  {\n+    this.usage = usage;\n+    this.output = output;\n+    this.locator = locator;\n+  }\n \n-    @Override\n-    public void execute( String... args ) throws IncorrectUsage\n+  @Override\n+  public void execute(String... args) throws IncorrectUsage\n+  {\n+    if (args.length > 0)\n     {\n-        if ( args.length > 0 )\n-        {\n-            try\n-            {\n-                AdminCommand.Provider commandProvider = this.locator.findProvider( args[0] );\n-                usage.printUsageForCommand( commandProvider, output );\n-            }\n-            catch ( NoSuchElementException e )\n-            {\n-                StringBuilder validCommands = new StringBuilder( \"\" );\n-                locator.getAllProviders()\n-                        .forEach( commandProvider -> validCommands.append( commandProvider.name() ).append( \" \" ) );\n+      try\n+      {\n+        AdminCommand.Provider commandProvider = this.locator.findProvider(args[0]);\n+        usage.printUsageForCommand(commandProvider, output);\n+      } catch (NoSuchElementException e)\n+      {\n+        StringBuilder validCommands = new StringBuilder(\"\");\n+        locator.getAllProviders()\n+            .forEach(commandProvider -> validCommands.append(commandProvider.name()).append(\" \"));\n \n-                throw new IncorrectUsage(\n-                        format( \"Unknown command: %s. Available commands are: %s\\n\", args[0], validCommands ) );\n-            }\n-        }\n-        else\n-        {\n-            usage.print( output );\n-        }\n+        throw new IncorrectUsage(\n+            format(\"Unknown command: %s. Available commands are: %s\\n\", args[0], validCommands));\n+      }\n+    } else\n+    {\n+      usage.print(output);\n     }\n+  }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "25",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4409/HelpCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4409/HelpCommand.java\nindex 6acafc883c2..8463304be0c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4409/HelpCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4409/HelpCommand.java\n@@ -26,7 +26,6 @@ import static java.lang.String.format;\n \n public class HelpCommand implements AdminCommand\n {\n-\n     private final Usage usage;\n     private final Consumer<String> output;\n     private final CommandLocator locator;\n@@ -41,7 +40,7 @@ public class HelpCommand implements AdminCommand\n     @Override\n     public void execute( String... args ) throws IncorrectUsage\n     {\n-        if ( args.length > 0 )\n+        if ( args.length> 0 )\n         {\n             try\n             {\n@@ -51,16 +50,13 @@ public class HelpCommand implements AdminCommand\n             catch ( NoSuchElementException e )\n             {\n                 StringBuilder validCommands = new StringBuilder( \"\" );\n-                locator.getAllProviders()\n-                        .forEach( commandProvider -> validCommands.append( commandProvider.name() ).append( \" \" ) );\n-\n-                throw new IncorrectUsage(\n-                        format( \"Unknown command: %s. Available commands are: %s\\n\", args[0], validCommands ) );\n-            }\n+                locator.getAllProviders().forEach( commandProvider -> validCommands.append( commandProvider.name() ).append( \" \" ) );\n+    throw new IncorrectUsage( format( \"Unknown command: %s. Available commands are: %s\\n\", args[0], validCommands ) );\n+    }\n         }\n         else\n         {\n             usage.print( output );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
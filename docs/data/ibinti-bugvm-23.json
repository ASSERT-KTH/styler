{
    "project_name": "ibinti-bugvm",
    "error_id": "23",
    "information": {
        "errors": [
            {
                "line": "36",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 85).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/**\n * The field or method to which this annotation is applied is marked as experimental.\n */\n@Documented\n@Target({ElementType.METHOD, ElementType.TYPE})",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/23/Experimental.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/23/Experimental.java\nindex e1672278c60..615c2099b43 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/23/Experimental.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/23/Experimental.java\n@@ -24,6 +24,7 @@\n  * <http://www.apache.org/>.\r\n  *\r\n  */\r\n+\r\n package org.apache.http.annotation;\r\n \r\n import java.lang.annotation.Documented;\r\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/23/Experimental.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/23/Experimental.java\nindex e1672278c60..db3afb6db53 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/23/Experimental.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/23/Experimental.java\n@@ -39,4 +39,4 @@ import java.lang.annotation.Target;\n @Target({ElementType.METHOD, ElementType.TYPE})\r\n @Retention(RetentionPolicy.CLASS)\r\n public @interface Experimental {\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/23/Experimental.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/23/Experimental.java\nindex e1672278c60..b67a9361000 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/23/Experimental.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/23/Experimental.java\n@@ -24,19 +24,21 @@\n  * <http://www.apache.org/>.\r\n  *\r\n  */\r\n-package org.apache.http.annotation;\r\n-\r\n-import java.lang.annotation.Documented;\r\n-import java.lang.annotation.ElementType;\r\n-import java.lang.annotation.Retention;\r\n-import java.lang.annotation.RetentionPolicy;\r\n+package org.apache.http.annotation;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n import java.lang.annotation.Target;\r\n \r\n /**\r\n  * The field or method to which this annotation is applied is marked as experimental.\r\n- */\r\n-@Documented\r\n-@Target({ElementType.METHOD, ElementType.TYPE})\r\n-@Retention(RetentionPolicy.CLASS)\r\n-public @interface Experimental {\r\n-}\r\n+ */\n+\n+\n+@Documented\n+@Target({ElementType.METHOD, ElementType.TYPE})\n+@Retention(RetentionPolicy.CLASS)\n+public @interface Experimental {\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
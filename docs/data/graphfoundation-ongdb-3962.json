{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3962",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "146",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "143",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3962/PropertyLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3962/PropertyLoader.java\nindex d540e4c71dd..578acf51225 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3962/PropertyLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3962/PropertyLoader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.state;\n \n import java.util.Collection;\n@@ -37,69 +38,69 @@ import static org.neo4j.kernel.impl.store.record.RecordLoad.NORMAL;\n \n public class PropertyLoader\n {\n-    private final NodeStore nodeStore;\n-    private final RelationshipStore relationshipStore;\n-    private final PropertyStore propertyStore;\n-    private final MetaDataStore metaDataStore;\n+  private final NodeStore nodeStore;\n+  private final RelationshipStore relationshipStore;\n+  private final PropertyStore propertyStore;\n+  private final MetaDataStore metaDataStore;\n \n-    public PropertyLoader( NeoStores neoStores )\n-    {\n-        this.nodeStore = neoStores.getNodeStore();\n-        this.metaDataStore = neoStores.getMetaDataStore();\n-        this.relationshipStore = neoStores.getRelationshipStore();\n-        this.propertyStore = neoStores.getPropertyStore();\n-    }\n+  public PropertyLoader(NeoStores neoStores)\n+  {\n+    this.nodeStore = neoStores.getNodeStore();\n+    this.metaDataStore = neoStores.getMetaDataStore();\n+    this.relationshipStore = neoStores.getRelationshipStore();\n+    this.propertyStore = neoStores.getPropertyStore();\n+  }\n \n-    public <RECEIVER extends PropertyReceiver> RECEIVER nodeLoadProperties( long nodeId, RECEIVER receiver )\n-    {\n-        NodeRecord nodeRecord = nodeStore.getRecord( nodeId, nodeStore.newRecord(), NORMAL );\n-        loadProperties( nodeRecord.getNextProp(), receiver );\n-        return receiver;\n-    }\n+  public <RECEIVER extends PropertyReceiver> RECEIVER nodeLoadProperties(long nodeId, RECEIVER receiver)\n+  {\n+    NodeRecord nodeRecord = nodeStore.getRecord(nodeId, nodeStore.newRecord(), NORMAL);\n+    loadProperties(nodeRecord.getNextProp(), receiver);\n+    return receiver;\n+  }\n \n-    public <RECEIVER extends PropertyReceiver> RECEIVER nodeLoadProperties( NodeRecord node,\n-            PrimitiveLongObjectMap<PropertyRecord> propertiesById, RECEIVER receiver )\n-    {\n-        return loadProperties( node.getNextProp(), propertiesById, receiver );\n-    }\n+  public <RECEIVER extends PropertyReceiver> RECEIVER nodeLoadProperties(NodeRecord node,\n+                                                                         PrimitiveLongObjectMap<PropertyRecord> propertiesById, RECEIVER receiver)\n+  {\n+    return loadProperties(node.getNextProp(), propertiesById, receiver);\n+  }\n \n-    public <RECEIVER extends PropertyReceiver> RECEIVER relLoadProperties( long relId, RECEIVER receiver )\n-    {\n-        RelationshipRecord relRecord = relationshipStore.getRecord( relId, relationshipStore.newRecord(), NORMAL );\n-        return loadProperties( relRecord.getNextProp(), receiver );\n-    }\n+  public <RECEIVER extends PropertyReceiver> RECEIVER relLoadProperties(long relId, RECEIVER receiver)\n+  {\n+    RelationshipRecord relRecord = relationshipStore.getRecord(relId, relationshipStore.newRecord(), NORMAL);\n+    return loadProperties(relRecord.getNextProp(), receiver);\n+  }\n \n-    public <RECEIVER extends PropertyReceiver> RECEIVER graphLoadProperties( RECEIVER records )\n-    {\n-        return loadProperties( metaDataStore.graphPropertyRecord().getNextProp(), records );\n-    }\n+  public <RECEIVER extends PropertyReceiver> RECEIVER graphLoadProperties(RECEIVER records)\n+  {\n+    return loadProperties(metaDataStore.graphPropertyRecord().getNextProp(), records);\n+  }\n \n-    private <RECEIVER extends PropertyReceiver> RECEIVER loadProperties( long nextProp, RECEIVER receiver )\n-    {\n-        Collection<PropertyRecord> chain = propertyStore.getPropertyRecordChain( nextProp );\n-        return receivePropertyChain( receiver, chain );\n-    }\n+  private <RECEIVER extends PropertyReceiver> RECEIVER loadProperties(long nextProp, RECEIVER receiver)\n+  {\n+    Collection<PropertyRecord> chain = propertyStore.getPropertyRecordChain(nextProp);\n+    return receivePropertyChain(receiver, chain);\n+  }\n \n-    private <RECEIVER extends PropertyReceiver> RECEIVER loadProperties( long nextProp,\n-            PrimitiveLongObjectMap<PropertyRecord> propertiesById, RECEIVER receiver )\n-    {\n-        Collection<PropertyRecord> chain = propertyStore.getPropertyRecordChain( nextProp, propertiesById );\n-        return receivePropertyChain( receiver, chain );\n-    }\n+  private <RECEIVER extends PropertyReceiver> RECEIVER loadProperties(long nextProp,\n+                                                                      PrimitiveLongObjectMap<PropertyRecord> propertiesById, RECEIVER receiver)\n+  {\n+    Collection<PropertyRecord> chain = propertyStore.getPropertyRecordChain(nextProp, propertiesById);\n+    return receivePropertyChain(receiver, chain);\n+  }\n \n-    private <RECEIVER extends PropertyReceiver> RECEIVER receivePropertyChain( RECEIVER receiver,\n-            Collection<PropertyRecord> chain )\n+  private <RECEIVER extends PropertyReceiver> RECEIVER receivePropertyChain(RECEIVER receiver,\n+                                                                            Collection<PropertyRecord> chain)\n+  {\n+    if (chain != null)\n     {\n-        if ( chain != null )\n+      for (PropertyRecord propRecord : chain)\n+      {\n+        for (PropertyBlock propBlock : propRecord)\n         {\n-            for ( PropertyRecord propRecord : chain )\n-            {\n-                for ( PropertyBlock propBlock : propRecord )\n-                {\n-                    receiver.receive( propBlock.newPropertyKeyValue( propertyStore ), propRecord.getId() );\n-                }\n-            }\n+          receiver.receive(propBlock.newPropertyKeyValue(propertyStore), propRecord.getId());\n         }\n-        return receiver;\n+      }\n     }\n+    return receiver;\n+  }\n }\n",
            "diff_size": 60
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3962/PropertyLoader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3962/PropertyLoader.java\nindex d540e4c71dd..b4f315cbbb6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3962/PropertyLoader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3962/PropertyLoader.java\n@@ -57,8 +57,7 @@ public class PropertyLoader\n         return receiver;\n     }\n \n-    public <RECEIVER extends PropertyReceiver> RECEIVER nodeLoadProperties( NodeRecord node,\n-            PrimitiveLongObjectMap<PropertyRecord> propertiesById, RECEIVER receiver )\n+    public <RECEIVER extends PropertyReceiver> RECEIVER nodeLoadProperties( NodeRecord node, PrimitiveLongObjectMap<PropertyRecord> propertiesById, RECEIVER receiver )\n     {\n         return loadProperties( node.getNextProp(), propertiesById, receiver );\n     }\n@@ -80,15 +79,13 @@ public class PropertyLoader\n         return receivePropertyChain( receiver, chain );\n     }\n \n-    private <RECEIVER extends PropertyReceiver> RECEIVER loadProperties( long nextProp,\n-            PrimitiveLongObjectMap<PropertyRecord> propertiesById, RECEIVER receiver )\n+    private <RECEIVER extends PropertyReceiver> RECEIVER loadProperties( long nextProp, PrimitiveLongObjectMap<PropertyRecord> propertiesById, RECEIVER receiver )\n     {\n         Collection<PropertyRecord> chain = propertyStore.getPropertyRecordChain( nextProp, propertiesById );\n         return receivePropertyChain( receiver, chain );\n     }\n \n-    private <RECEIVER extends PropertyReceiver> RECEIVER receivePropertyChain( RECEIVER receiver,\n-            Collection<PropertyRecord> chain )\n+    private <RECEIVER extends PropertyReceiver> RECEIVER receivePropertyChain( RECEIVER receiver, Collection<PropertyRecord> chain )\n     {\n         if ( chain != null )\n         {\n@@ -102,4 +99,4 @@ public class PropertyLoader\n         }\n         return receiver;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "65",
    "information": {
        "errors": [
            {
                "line": "75",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  @Override\n  public Optional<Variable> findPredecessorOfShadowCopy(Variable shadowCopy, String previousVersion) {\n    String shadowCopyId = shadowCopy + \"-\" + previousVersion;\n    return variableRepository.findById(shadowCopyId);\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/65/VariableShadowCopyDataSource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler/65/VariableShadowCopyDataSource.java\nindex 72c51d17a18..e330ea5aabc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/65/VariableShadowCopyDataSource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler/65/VariableShadowCopyDataSource.java\n@@ -72,7 +72,8 @@ public class VariableShadowCopyDataSource implements ShadowCopyDataSource<Variab\n   }\n \n   @Override\n-  public Optional<Variable> findPredecessorOfShadowCopy(Variable shadowCopy, String previousVersion) {\n+  public Optional<Variable> findPredecessorOfShadowCopy(\n+      Variable shadowCopy, String previousVersion) {\n     String shadowCopyId = shadowCopy + \"-\" + previousVersion;\n     return variableRepository.findById(shadowCopyId);\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/65/VariableShadowCopyDataSource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/65/VariableShadowCopyDataSource.java\nindex 72c51d17a18..486f595e80a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/65/VariableShadowCopyDataSource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/65/VariableShadowCopyDataSource.java\n@@ -47,7 +47,7 @@ public class VariableShadowCopyDataSource implements ShadowCopyDataSource<Variab\n   }\n \n   private List<String> createDerivedRelatedVariables(List<String> relatedVariables,\n-      String version) {\n+                                                     String version) {\n     if (relatedVariables != null) {\n       return relatedVariables.stream().map(relatedVariable -> relatedVariable + \"-\" + version)\n           .collect(Collectors.toList());\n@@ -72,7 +72,8 @@ public class VariableShadowCopyDataSource implements ShadowCopyDataSource<Variab\n   }\n \n   @Override\n-  public Optional<Variable> findPredecessorOfShadowCopy(Variable shadowCopy, String previousVersion) {\n+  public Optional<Variable> findPredecessorOfShadowCopy(Variable shadowCopy,\n+                                                        String previousVersion) {\n     String shadowCopyId = shadowCopy + \"-\" + previousVersion;\n     return variableRepository.findById(shadowCopyId);\n   }\n@@ -89,7 +90,7 @@ public class VariableShadowCopyDataSource implements ShadowCopyDataSource<Variab\n \n   @Override\n   public Stream<Variable> findShadowCopiesWithDeletedMasters(String projectId,\n-      String lastVersion) {\n+                                                             String lastVersion) {\n     String oldProjectId = projectId + \"-\" + lastVersion;\n     return variableRepository\n         .findByDataAcquisitionProjectIdAndSuccessorIdIsNullAndShadowIsTrue(oldProjectId)\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/65/VariableShadowCopyDataSource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/65/VariableShadowCopyDataSource.java\nindex 72c51d17a18..f3fa0de458b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/65/VariableShadowCopyDataSource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/65/VariableShadowCopyDataSource.java\n@@ -99,4 +99,4 @@ public class VariableShadowCopyDataSource implements ShadowCopyDataSource<Variab\n   private static List<String> createDerivedSurveyIds(List<String> surveyIds, String version) {\n     return surveyIds.stream().map(studyId -> studyId + \"-\" + version).collect(Collectors.toList());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "'String' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'String' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'String' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 40, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 40, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 40, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 40, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 40, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 38, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "'String' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "'String' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 189).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "'String' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/65/VariableShadowCopyDataSource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/65/VariableShadowCopyDataSource.java\nindex 72c51d17a18..238908037f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/65/VariableShadowCopyDataSource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/65/VariableShadowCopyDataSource.java\n@@ -6,7 +6,6 @@ import eu.dzhw.fdz.metadatamanagement.variablemanagement.domain.Variable;\n import eu.dzhw.fdz.metadatamanagement.variablemanagement.repository.VariableRepository;\n import org.springframework.beans.BeanUtils;\n import org.springframework.stereotype.Service;\n-\n import java.util.List;\n import java.util.Optional;\n import java.util.stream.Collectors;\n@@ -15,27 +14,35 @@ import java.util.stream.Stream;\n /**\n  * Provides data for creating shadow copies of {@link Variable}.\n  */\n+\n+\n @Service\n public class VariableShadowCopyDataSource implements ShadowCopyDataSource<Variable> {\n-\n   private VariableRepository variableRepository;\n \n   public VariableShadowCopyDataSource(VariableRepository variableRepository) {\n     this.variableRepository = variableRepository;\n   }\n \n+\n   @Override\n   public Stream<Variable> getMasters(String dataAcquisitionProjectId) {\n-    return variableRepository\n-        .streamByDataAcquisitionProjectIdAndShadowIsFalse(dataAcquisitionProjectId);\n+    return variableRepository.streamByDataAcquisitionProjectIdAndShadowIsFalse(dataAcquisitionProjectId);\n   }\n \n+\n   @Override\n-  public Variable createShadowCopy(Variable source, String version) {\n+  public Variable createShadowCopy(Variable source,\n+    String version) {\n     String derivedId = source.getId() + \"-\" + version;\n     Variable copy = variableRepository.findById(derivedId).orElseGet(Variable::new);\n-    BeanUtils.copyProperties(source, copy, \"version\", \"surveyIds\",\n-        \"relatedQuestions\", \"relatedVariables\");\n+    BeanUtils.copyProperties(\n+source,\n+copy,\n+\"version\",\n+\"surveyIds\",\n+\"relatedQuestions\",\n+\"relatedVariables\");\n     copy.setId(derivedId);\n     copy.setDataAcquisitionProjectId(source.getDataAcquisitionProjectId() + \"-\" + version);\n     copy.setDataSetId(source.getDataSetId() + \"-\" + version);\n@@ -47,56 +54,62 @@ public class VariableShadowCopyDataSource implements ShadowCopyDataSource<Variab\n   }\n \n   private List<String> createDerivedRelatedVariables(List<String> relatedVariables,\n-      String version) {\n+    String version) {\n     if (relatedVariables != null) {\n       return relatedVariables.stream().map(relatedVariable -> relatedVariable + \"-\" + version)\n-          .collect(Collectors.toList());\n+                                      .collect(Collectors.toList());\n     } else {\n       return null;\n     }\n   }\n \n-  private List<RelatedQuestion> createDerivedRelatedQuestions(\n-      List<RelatedQuestion> relatedQuestions, String version) {\n+  private List<RelatedQuestion> createDerivedRelatedQuestions(List<RelatedQuestion> relatedQuestions,\n+    String version) {\n     if (relatedQuestions != null) {\n       return relatedQuestions.stream().map(relatedQuestion -> {\n-        RelatedQuestion copy = new RelatedQuestion();\n-        BeanUtils.copyProperties(relatedQuestion, copy, \"instrumentId\", \"questionId\");\n-        copy.setInstrumentId(relatedQuestion.getInstrumentId() + \"-\" + version);\n-        copy.setQuestionId(relatedQuestion.getQuestionId() + \"-\" + version);\n-        return copy;\n-      }).collect(Collectors.toList());\n+                                        RelatedQuestion copy = new RelatedQuestion();\n+                                        BeanUtils.copyProperties(relatedQuestion, copy, \"instrumentId\", \"questionId\");\n+                                        copy.setInstrumentId(relatedQuestion.getInstrumentId() + \"-\" + version);\n+                                        copy.setQuestionId(relatedQuestion.getQuestionId() + \"-\" + version);\n+                                        return copy;\n+                                      })\n+                                      .collect(Collectors.toList());\n     } else {\n       return null;\n     }\n   }\n \n+\n   @Override\n-  public Optional<Variable> findPredecessorOfShadowCopy(Variable shadowCopy, String previousVersion) {\n+  public Optional<Variable> findPredecessorOfShadowCopy(Variable shadowCopy,\n+    String previousVersion) {\n     String shadowCopyId = shadowCopy + \"-\" + previousVersion;\n     return variableRepository.findById(shadowCopyId);\n   }\n \n+\n   @Override\n   public void updatePredecessor(Variable predecessor) {\n     variableRepository.save(predecessor);\n   }\n \n+\n   @Override\n   public void saveShadowCopy(Variable shadowCopy) {\n     variableRepository.save(shadowCopy);\n   }\n \n+\n   @Override\n   public Stream<Variable> findShadowCopiesWithDeletedMasters(String projectId,\n-      String lastVersion) {\n+    String lastVersion) {\n     String oldProjectId = projectId + \"-\" + lastVersion;\n-    return variableRepository\n-        .findByDataAcquisitionProjectIdAndSuccessorIdIsNullAndShadowIsTrue(oldProjectId)\n-        .filter(shadowCopy -> !variableRepository.existsById(shadowCopy.getMasterId()));\n+    return variableRepository.findByDataAcquisitionProjectIdAndSuccessorIdIsNullAndShadowIsTrue(oldProjectId).filter(shadowCopy -> !variableRepository.existsById(shadowCopy.getMasterId()));\n   }\n \n-  private static List<String> createDerivedSurveyIds(List<String> surveyIds, String version) {\n-    return surveyIds.stream().map(studyId -> studyId + \"-\" + version).collect(Collectors.toList());\n+  private static List<String> createDerivedSurveyIds(List<String> surveyIds,\n+    String version) {\n+    return surveyIds.stream().map(studyId -> studyId + \"-\" + version)\n+                             .collect(Collectors.toList());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 43
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/65/VariableShadowCopyDataSource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/65/VariableShadowCopyDataSource.java\nindex 72c51d17a18..e330ea5aabc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/65/VariableShadowCopyDataSource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/65/VariableShadowCopyDataSource.java\n@@ -72,7 +72,8 @@ public class VariableShadowCopyDataSource implements ShadowCopyDataSource<Variab\n   }\n \n   @Override\n-  public Optional<Variable> findPredecessorOfShadowCopy(Variable shadowCopy, String previousVersion) {\n+  public Optional<Variable> findPredecessorOfShadowCopy(\n+      Variable shadowCopy, String previousVersion) {\n     String shadowCopyId = shadowCopy + \"-\" + previousVersion;\n     return variableRepository.findById(shadowCopyId);\n   }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
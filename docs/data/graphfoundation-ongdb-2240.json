{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2240",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "84",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "120",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "133",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "157",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "161",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "161",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "164",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "175",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "182",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "200",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "205",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "216",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "232",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "239",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "247",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "255",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "255",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "268",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "278",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "297",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "308",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "313",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "316",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "320",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "328",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "336",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "350",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2240/TransactionHandle.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2240/TransactionHandle.java\nindex 5e8f4582652..492b43ddde5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2240/TransactionHandle.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2240/TransactionHandle.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.transactional;\n \n import java.io.IOException;\n@@ -49,18 +50,18 @@ import static org.neo4j.helpers.collection.Iterators.addToCollection;\n \n /**\n  * Encapsulates executing statements in a transaction, committing the transaction, or rolling it back.\n- *\n+ * <p>\n  * Constructing a {@link TransactionHandle} does not immediately ask the kernel to create a\n  * {@link org.neo4j.kernel.api.KernelTransaction}; instead a {@link org.neo4j.kernel.api.KernelTransaction} is\n  * only created when the first statements need to be executed.\n- *\n+ * <p>\n  * At the end of each statement-executing method, the {@link org.neo4j.kernel.api.KernelTransaction} is either\n  * suspended (ready to be resumed by a later operation), or committed, or rolled back.\n- *\n+ * <p>\n  * If you acquire instances of this class from {@link TransactionHandleRegistry}, it will prevent concurrent access to\n  * the same instance. Therefore the implementation assumes that a single instance will only be accessed from\n  * a single thread.\n- *\n+ * <p>\n  * All of the public methods on this class are \"single-shot\"; once you have called one method, the handle returns\n  * itself\n  * to the registry. If you want to use it again, you'll need to acquire it back from the registry to ensure exclusive\n@@ -68,313 +69,288 @@ import static org.neo4j.helpers.collection.Iterators.addToCollection;\n  */\n public class TransactionHandle implements TransactionTerminationHandle\n {\n-    private final TransitionalPeriodTransactionMessContainer txManagerFacade;\n-    private final QueryExecutionEngine engine;\n-    private final TransactionRegistry registry;\n-    private final TransactionUriScheme uriScheme;\n-    private final Type type;\n-    private final LoginContext loginContext;\n-    private long customTransactionTimeout;\n-    private final Log log;\n-    private final long id;\n-    private TransitionalTxManagementKernelTransaction context;\n-    private GraphDatabaseQueryService queryService;\n+  private final TransitionalPeriodTransactionMessContainer txManagerFacade;\n+  private final QueryExecutionEngine engine;\n+  private final TransactionRegistry registry;\n+  private final TransactionUriScheme uriScheme;\n+  private final Type type;\n+  private final LoginContext loginContext;\n+  private long customTransactionTimeout;\n+  private final Log log;\n+  private final long id;\n+  private TransitionalTxManagementKernelTransaction context;\n+  private GraphDatabaseQueryService queryService;\n \n-    TransactionHandle( TransitionalPeriodTransactionMessContainer txManagerFacade, QueryExecutionEngine engine,\n-            GraphDatabaseQueryService queryService, TransactionRegistry registry, TransactionUriScheme uriScheme,\n-            boolean implicitTransaction, LoginContext loginContext, long customTransactionTimeout,\n-            LogProvider logProvider )\n-    {\n-        this.txManagerFacade = txManagerFacade;\n-        this.engine = engine;\n-        this.queryService = queryService;\n-        this.registry = registry;\n-        this.uriScheme = uriScheme;\n-        this.type = implicitTransaction ? Type.implicit : Type.explicit;\n-        this.loginContext = loginContext;\n-        this.customTransactionTimeout = customTransactionTimeout;\n-        this.log = logProvider.getLog( getClass() );\n-        this.id = registry.begin( this );\n-    }\n+  TransactionHandle(TransitionalPeriodTransactionMessContainer txManagerFacade, QueryExecutionEngine engine,\n+                    GraphDatabaseQueryService queryService, TransactionRegistry registry, TransactionUriScheme uriScheme,\n+                    boolean implicitTransaction, LoginContext loginContext, long customTransactionTimeout,\n+                    LogProvider logProvider)\n+  {\n+    this.txManagerFacade = txManagerFacade;\n+    this.engine = engine;\n+    this.queryService = queryService;\n+    this.registry = registry;\n+    this.uriScheme = uriScheme;\n+    this.type = implicitTransaction ? Type.implicit : Type.explicit;\n+    this.loginContext = loginContext;\n+    this.customTransactionTimeout = customTransactionTimeout;\n+    this.log = logProvider.getLog(getClass());\n+    this.id = registry.begin(this);\n+  }\n \n-    public URI uri()\n-    {\n-        return uriScheme.txUri( id );\n-    }\n+  public URI uri()\n+  {\n+    return uriScheme.txUri(id);\n+  }\n \n-    public boolean isImplicit()\n-    {\n-        return type == Type.implicit;\n-    }\n+  public boolean isImplicit()\n+  {\n+    return type == Type.implicit;\n+  }\n \n-    public void execute( StatementDeserializer statements, ExecutionResultSerializer output,\n-            HttpServletRequest request )\n+  public void execute(StatementDeserializer statements, ExecutionResultSerializer output,\n+                      HttpServletRequest request)\n+  {\n+    List<Neo4jError> errors = new LinkedList<>();\n+    try\n     {\n-        List<Neo4jError> errors = new LinkedList<>();\n-        try\n-        {\n-            output.transactionCommitUri( uriScheme.txCommitUri( id ) );\n-            ensureActiveTransaction();\n-            execute( statements, output, errors, request );\n-        }\n-        catch ( InternalBeginTransactionError e )\n-        {\n-            errors.add( e.toNeo4jError() );\n-        }\n-        finally\n-        {\n-            output.errors( errors );\n-            output.finish();\n-        }\n-    }\n-\n-    @Override\n-    public boolean terminate()\n+      output.transactionCommitUri(uriScheme.txCommitUri(id));\n+      ensureActiveTransaction();\n+      execute(statements, output, errors, request);\n+    } catch (InternalBeginTransactionError e)\n     {\n-        if ( context != null )\n-        {\n-            context.terminate();\n-        }\n-        return true;\n+      errors.add(e.toNeo4jError());\n+    } finally\n+    {\n+      output.errors(errors);\n+      output.finish();\n     }\n+  }\n \n-    public void commit( StatementDeserializer statements, ExecutionResultSerializer output, HttpServletRequest request )\n+  @Override\n+  public boolean terminate()\n+  {\n+    if (context != null)\n     {\n-        List<Neo4jError> errors = new LinkedList<>();\n-        try\n-        {\n-            try\n-            {\n-                Statement peek = statements.peek();\n-                if ( isImplicit() && peek == null ) /* JSON parse error */\n-                {\n-                    addToCollection( statements.errors(), errors );\n-                }\n-                else\n-                {\n-                    ensureActiveTransaction();\n-                    executeStatements( statements, output, errors, request );\n-                    closeContextAndCollectErrors( errors );\n-                }\n-            }\n-            finally\n-            {\n-                registry.forget( id );\n-            }\n-        }\n-        catch ( InternalBeginTransactionError e )\n-        {\n-            errors.add( e.toNeo4jError() );\n-        }\n-        catch ( CypherException e )\n-        {\n-            errors.add( new Neo4jError( e.status(), e ) );\n-            throw e;\n-        }\n-        finally\n-        {\n-            output.errors( errors );\n-            output.finish();\n-        }\n+      context.terminate();\n     }\n+    return true;\n+  }\n \n-    public void rollback( ExecutionResultSerializer output )\n+  public void commit(StatementDeserializer statements, ExecutionResultSerializer output, HttpServletRequest request)\n+  {\n+    List<Neo4jError> errors = new LinkedList<>();\n+    try\n     {\n-        List<Neo4jError> errors = new LinkedList<>();\n-        try\n+      try\n+      {\n+        Statement peek = statements.peek();\n+        if (isImplicit() && peek == null) /* JSON parse error */\n         {\n-            ensureActiveTransaction();\n-            rollback( errors );\n-        }\n-        catch ( InternalBeginTransactionError e )\n-        {\n-            errors.add( e.toNeo4jError() );\n-        }\n-        finally\n+          addToCollection(statements.errors(), errors);\n+        } else\n         {\n-            output.errors( errors );\n-            output.finish();\n+          ensureActiveTransaction();\n+          executeStatements(statements, output, errors, request);\n+          closeContextAndCollectErrors(errors);\n         }\n+      } finally\n+      {\n+        registry.forget(id);\n+      }\n+    } catch (InternalBeginTransactionError e)\n+    {\n+      errors.add(e.toNeo4jError());\n+    } catch (CypherException e)\n+    {\n+      errors.add(new Neo4jError(e.status(), e));\n+      throw e;\n+    } finally\n+    {\n+      output.errors(errors);\n+      output.finish();\n     }\n+  }\n \n-    void forceRollback()\n+  public void rollback(ExecutionResultSerializer output)\n+  {\n+    List<Neo4jError> errors = new LinkedList<>();\n+    try\n     {\n-        context.resumeSinceTransactionsAreStillThreadBound();\n-        context.rollback();\n+      ensureActiveTransaction();\n+      rollback(errors);\n+    } catch (InternalBeginTransactionError e)\n+    {\n+      errors.add(e.toNeo4jError());\n+    } finally\n+    {\n+      output.errors(errors);\n+      output.finish();\n     }\n+  }\n+\n+  void forceRollback()\n+  {\n+    context.resumeSinceTransactionsAreStillThreadBound();\n+    context.rollback();\n+  }\n \n-    private void ensureActiveTransaction() throws InternalBeginTransactionError\n+  private void ensureActiveTransaction() throws InternalBeginTransactionError\n+  {\n+    if (context == null)\n     {\n-        if ( context == null )\n-        {\n-            try\n-            {\n-                context = txManagerFacade.newTransaction( type, loginContext, customTransactionTimeout );\n-            }\n-            catch ( RuntimeException e )\n-            {\n-                log.error( \"Failed to start transaction.\", e );\n-                throw new InternalBeginTransactionError( e );\n-            }\n-        }\n-        else\n-        {\n-            context.resumeSinceTransactionsAreStillThreadBound();\n-        }\n+      try\n+      {\n+        context = txManagerFacade.newTransaction(type, loginContext, customTransactionTimeout);\n+      } catch (RuntimeException e)\n+      {\n+        log.error(\"Failed to start transaction.\", e);\n+        throw new InternalBeginTransactionError(e);\n+      }\n+    } else\n+    {\n+      context.resumeSinceTransactionsAreStillThreadBound();\n     }\n+  }\n \n-    private void execute( StatementDeserializer statements, ExecutionResultSerializer output,\n-            List<Neo4jError> errors, HttpServletRequest request )\n-    {\n-        executeStatements( statements, output, errors, request );\n+  private void execute(StatementDeserializer statements, ExecutionResultSerializer output,\n+                       List<Neo4jError> errors, HttpServletRequest request)\n+  {\n+    executeStatements(statements, output, errors, request);\n \n-        if ( Neo4jError.shouldRollBackOn( errors ) )\n-        {\n-            rollback( errors );\n-        }\n-        else\n-        {\n-            context.suspendSinceTransactionsAreStillThreadBound();\n-            long lastActiveTimestamp = registry.release( id, this );\n-            output.transactionStatus( lastActiveTimestamp );\n-        }\n+    if (Neo4jError.shouldRollBackOn(errors))\n+    {\n+      rollback(errors);\n+    } else\n+    {\n+      context.suspendSinceTransactionsAreStillThreadBound();\n+      long lastActiveTimestamp = registry.release(id, this);\n+      output.transactionStatus(lastActiveTimestamp);\n     }\n+  }\n \n-    private void closeContextAndCollectErrors( List<Neo4jError> errors )\n+  private void closeContextAndCollectErrors(List<Neo4jError> errors)\n+  {\n+    if (errors.isEmpty())\n     {\n-        if ( errors.isEmpty() )\n+      try\n+      {\n+        context.commit();\n+      } catch (Exception e)\n+      {\n+        if (e.getCause() instanceof Status.HasStatus)\n         {\n-            try\n-            {\n-                context.commit();\n-            }\n-            catch ( Exception e )\n-            {\n-                if ( e.getCause() instanceof Status.HasStatus )\n-                {\n-                    errors.add( new Neo4jError( ((Status.HasStatus) e.getCause()).status(), e ) );\n-                }\n-                else\n-                {\n-                    log.error( \"Failed to commit transaction.\", e );\n-                    errors.add( new Neo4jError( Status.Transaction.TransactionCommitFailed, e ) );\n-                }\n-            }\n-        }\n-        else\n+          errors.add(new Neo4jError(((Status.HasStatus) e.getCause()).status(), e));\n+        } else\n         {\n-            try\n-            {\n-                context.rollback();\n-            }\n-            catch ( Exception e )\n-            {\n-                log.error( \"Failed to rollback transaction.\", e );\n-                errors.add( new Neo4jError( Status.Transaction.TransactionRollbackFailed, e ) );\n-            }\n+          log.error(\"Failed to commit transaction.\", e);\n+          errors.add(new Neo4jError(Status.Transaction.TransactionCommitFailed, e));\n         }\n+      }\n+    } else\n+    {\n+      try\n+      {\n+        context.rollback();\n+      } catch (Exception e)\n+      {\n+        log.error(\"Failed to rollback transaction.\", e);\n+        errors.add(new Neo4jError(Status.Transaction.TransactionRollbackFailed, e));\n+      }\n     }\n+  }\n \n-    private void rollback( List<Neo4jError> errors )\n+  private void rollback(List<Neo4jError> errors)\n+  {\n+    try\n     {\n-        try\n-        {\n-            context.rollback();\n-        }\n-        catch ( Exception e )\n-        {\n-            log.error( \"Failed to rollback transaction.\", e );\n-            errors.add( new Neo4jError( Status.Transaction.TransactionRollbackFailed, e ) );\n-        }\n-        finally\n-        {\n-            registry.forget( id );\n-        }\n+      context.rollback();\n+    } catch (Exception e)\n+    {\n+      log.error(\"Failed to rollback transaction.\", e);\n+      errors.add(new Neo4jError(Status.Transaction.TransactionRollbackFailed, e));\n+    } finally\n+    {\n+      registry.forget(id);\n     }\n+  }\n \n-    private void executeStatements( StatementDeserializer statements, ExecutionResultSerializer output,\n-            List<Neo4jError> errors, HttpServletRequest request )\n+  private void executeStatements(StatementDeserializer statements, ExecutionResultSerializer output,\n+                                 List<Neo4jError> errors, HttpServletRequest request)\n+  {\n+    try\n     {\n+      boolean hasPrevious = false;\n+      while (statements.hasNext())\n+      {\n+        Statement statement = statements.next();\n         try\n         {\n-            boolean hasPrevious = false;\n-            while ( statements.hasNext() )\n-            {\n-                Statement statement = statements.next();\n-                try\n-                {\n-                    boolean hasPeriodicCommit = engine.isPeriodicCommit( statement.statement() );\n-                    if ( (statements.hasNext() || hasPrevious) && hasPeriodicCommit )\n-                    {\n-                        throw new QueryExecutionKernelException(\n-                                new InvalidSemanticsException( \"Cannot execute another statement after executing \" +\n-                                                               \"PERIODIC COMMIT statement in the same transaction\" ) );\n-                    }\n+          boolean hasPeriodicCommit = engine.isPeriodicCommit(statement.statement());\n+          if ((statements.hasNext() || hasPrevious) && hasPeriodicCommit)\n+          {\n+            throw new QueryExecutionKernelException(\n+                new InvalidSemanticsException(\"Cannot execute another statement after executing \" +\n+                    \"PERIODIC COMMIT statement in the same transaction\"));\n+          }\n \n-                    if ( !hasPrevious && hasPeriodicCommit )\n-                    {\n-                        context.closeTransactionForPeriodicCommit();\n-                    }\n+          if (!hasPrevious && hasPeriodicCommit)\n+          {\n+            context.closeTransactionForPeriodicCommit();\n+          }\n \n-                    hasPrevious = true;\n-                    TransactionalContext tc = txManagerFacade.create( request, queryService, type, loginContext,\n-                            statement.statement(), statement.parameters() );\n-                    Result result = safelyExecute( statement, hasPeriodicCommit, tc );\n-                    output.statementResult( result, statement.includeStats(), statement.resultDataContents() );\n-                    output.notifications( result.getNotifications() );\n-                }\n-                catch ( KernelException | CypherException | AuthorizationViolationException |\n-                        WriteOperationsNotAllowedException e )\n-                {\n-                    errors.add( new Neo4jError( e.status(), e ) );\n-                    break;\n-                }\n-                catch ( DeadlockDetectedException e )\n-                {\n-                    errors.add( new Neo4jError( Status.Transaction.DeadlockDetected, e ) );\n-                }\n-                catch ( IOException e )\n-                {\n-                    errors.add( new Neo4jError( Status.Network.CommunicationError, e ) );\n-                    break;\n-                }\n-                catch ( Exception e )\n-                {\n-                    Throwable cause = e.getCause();\n-                    if ( cause instanceof Status.HasStatus )\n-                    {\n-                        errors.add( new Neo4jError( ((Status.HasStatus) cause).status(), cause ) );\n-                    }\n-                    else\n-                    {\n-                        errors.add( new Neo4jError( Status.Statement.ExecutionFailed, e ) );\n-                    }\n-\n-                    break;\n-                }\n-            }\n-\n-            addToCollection( statements.errors(), errors );\n-        }\n-        catch ( Throwable e )\n+          hasPrevious = true;\n+          TransactionalContext tc = txManagerFacade.create(request, queryService, type, loginContext,\n+              statement.statement(), statement.parameters());\n+          Result result = safelyExecute(statement, hasPeriodicCommit, tc);\n+          output.statementResult(result, statement.includeStats(), statement.resultDataContents());\n+          output.notifications(result.getNotifications());\n+        } catch (KernelException | CypherException | AuthorizationViolationException |\n+            WriteOperationsNotAllowedException e)\n+        {\n+          errors.add(new Neo4jError(e.status(), e));\n+          break;\n+        } catch (DeadlockDetectedException e)\n+        {\n+          errors.add(new Neo4jError(Status.Transaction.DeadlockDetected, e));\n+        } catch (IOException e)\n         {\n-            errors.add( new Neo4jError( Status.General.UnknownError, e ) );\n+          errors.add(new Neo4jError(Status.Network.CommunicationError, e));\n+          break;\n+        } catch (Exception e)\n+        {\n+          Throwable cause = e.getCause();\n+          if (cause instanceof Status.HasStatus)\n+          {\n+            errors.add(new Neo4jError(((Status.HasStatus) cause).status(), cause));\n+          } else\n+          {\n+            errors.add(new Neo4jError(Status.Statement.ExecutionFailed, e));\n+          }\n+\n+          break;\n         }\n+      }\n+\n+      addToCollection(statements.errors(), errors);\n+    } catch (Throwable e)\n+    {\n+      errors.add(new Neo4jError(Status.General.UnknownError, e));\n     }\n+  }\n \n-    private Result safelyExecute( Statement statement, boolean hasPeriodicCommit, TransactionalContext tc )\n-            throws QueryExecutionKernelException\n+  private Result safelyExecute(Statement statement, boolean hasPeriodicCommit, TransactionalContext tc)\n+      throws QueryExecutionKernelException\n+  {\n+    try\n     {\n-        try\n-        {\n-            return engine.executeQuery( statement.statement(), statement.parameters(), tc );\n-        }\n-        finally\n-        {\n-            if ( hasPeriodicCommit )\n-            {\n-                context.reopenAfterPeriodicCommit();\n-            }\n-        }\n+      return engine.executeQuery(statement.statement(), statement.parameters(), tc);\n+    } finally\n+    {\n+      if (hasPeriodicCommit)\n+      {\n+        context.reopenAfterPeriodicCommit();\n+      }\n     }\n+  }\n }\n",
            "diff_size": 371
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "306",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 206).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2240/TransactionHandle.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2240/TransactionHandle.java\nindex 5e8f4582652..4a64adb2a05 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2240/TransactionHandle.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2240/TransactionHandle.java\n@@ -223,12 +223,10 @@ public class TransactionHandle implements TransactionTerminationHandle\n         }\n     }\n \n-    private void execute( StatementDeserializer statements, ExecutionResultSerializer output,\n-            List<Neo4jError> errors, HttpServletRequest request )\n+    private void execute( StatementDeserializer statements, ExecutionResultSerializer output, List<Neo4jError> errors, HttpServletRequest request )\n     {\n         executeStatements( statements, output, errors, request );\n-\n-        if ( Neo4jError.shouldRollBackOn( errors ) )\n+if ( Neo4jError.shouldRollBackOn( errors ) )\n         {\n             rollback( errors );\n         }\n@@ -292,8 +290,7 @@ public class TransactionHandle implements TransactionTerminationHandle\n         }\n     }\n \n-    private void executeStatements( StatementDeserializer statements, ExecutionResultSerializer output,\n-            List<Neo4jError> errors, HttpServletRequest request )\n+    private void executeStatements( StatementDeserializer statements, ExecutionResultSerializer output, List<Neo4jError> errors, HttpServletRequest request )\n     {\n         try\n         {\n@@ -306,10 +303,8 @@ public class TransactionHandle implements TransactionTerminationHandle\n                     boolean hasPeriodicCommit = engine.isPeriodicCommit( statement.statement() );\n                     if ( (statements.hasNext() || hasPrevious) && hasPeriodicCommit )\n                     {\n-                        throw new QueryExecutionKernelException(\n-                                new InvalidSemanticsException( \"Cannot execute another statement after executing \" +\n-                                                               \"PERIODIC COMMIT statement in the same transaction\" ) );\n-                    }\n+                        throw new QueryExecutionKernelException( new InvalidSemanticsException( \"Cannot execute another statement after executing \" + \"PERIODIC COMMIT statement in the same transaction\" ) );\n+    }\n \n                     if ( !hasPrevious && hasPeriodicCommit )\n                     {\n@@ -319,12 +314,11 @@ public class TransactionHandle implements TransactionTerminationHandle\n                     hasPrevious = true;\n                     TransactionalContext tc = txManagerFacade.create( request, queryService, type, loginContext,\n                             statement.statement(), statement.parameters() );\n-                    Result result = safelyExecute( statement, hasPeriodicCommit, tc );\n+Result result = safelyExecute( statement, hasPeriodicCommit, tc );\n                     output.statementResult( result, statement.includeStats(), statement.resultDataContents() );\n                     output.notifications( result.getNotifications() );\n                 }\n-                catch ( KernelException | CypherException | AuthorizationViolationException |\n-                        WriteOperationsNotAllowedException e )\n+                catch ( KernelException | CypherException | AuthorizationViolationException | WriteOperationsNotAllowedException e )\n                 {\n                     errors.add( new Neo4jError( e.status(), e ) );\n                     break;\n@@ -362,9 +356,8 @@ public class TransactionHandle implements TransactionTerminationHandle\n         }\n     }\n \n-    private Result safelyExecute( Statement statement, boolean hasPeriodicCommit, TransactionalContext tc )\n-            throws QueryExecutionKernelException\n-    {\n+    private Result safelyExecute( Statement statement, boolean hasPeriodicCommit, TransactionalContext tc ) throws QueryExecutionKernelException\n+{\n         try\n         {\n             return engine.executeQuery( statement.statement(), statement.parameters(), tc );\n@@ -377,4 +370,4 @@ public class TransactionHandle implements TransactionTerminationHandle\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
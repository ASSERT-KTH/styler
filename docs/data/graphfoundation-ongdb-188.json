{
    "project_name": "graphfoundation-ongdb",
    "error_id": "188",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "105",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "115",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "118",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "122",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "173",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "176",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "179",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "182",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "185",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "192",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "234",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "237",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "240",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "263",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "280",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "323",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "326",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "329",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "332",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "335",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "335",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "338",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "341",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "345",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "350",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/188/CypherOrderability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/188/CypherOrderability.java\nindex 74cbe4c7e08..fcc055d4b9d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/188/CypherOrderability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/188/CypherOrderability.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.compiler.v3_4.common;\n \n import scala.AnyVal;\n@@ -51,7 +52,7 @@ import static java.lang.String.format;\n  * Orderability\n  *\n  * <a href=\"https://github.com/opencypher/openCypher/blob/master/cip/1.accepted/CIP2016-06-14-Define-comparability-and-equality-as-well-as-orderability-and-equivalence.adoc\">\n- *   The Cypher CIP defining orderability\n+ * The Cypher CIP defining orderability\n  * </a>\n  *\n  * <p>\n@@ -81,296 +82,273 @@ import static java.lang.String.format;\n  *    </ul>\n  *  <li> VOID (i.e. the type of null)\n  * </ul>\n- *\n+ * <p>\n  * TBD: POINT and GEOMETRY\n  */\n public class CypherOrderability\n {\n-    /**\n-     * Do not instantiate this class\n-     */\n-    private CypherOrderability()\n+  /**\n+   * Do not instantiate this class\n+   */\n+  private CypherOrderability()\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  /**\n+   * Compare with Cypher orderability semantics for disjoint types\n+   *\n+   * @param lhs\n+   * @param rhs\n+   * @return\n+   */\n+  public static int compare(Object lhs, Object rhs)\n+  {\n+    if (lhs == rhs)\n+    {\n+      return 0;\n+    }\n+    // null is greater than any other type\n+    else if (lhs == Values.NO_VALUE || lhs == null)\n+    {\n+      return 1;\n+    } else if (rhs == Values.NO_VALUE || rhs == null)\n+    {\n+      return -1;\n+    } else if (lhs instanceof AnyValue)\n     {\n-        throw new UnsupportedOperationException();\n+      AnyValue rhsValue = (rhs instanceof AnyValue) ? (AnyValue) rhs : ValueUtils.of(rhs);\n+      return AnyValues.COMPARATOR.compare((AnyValue) lhs, rhsValue);\n+    } else if (rhs instanceof AnyValue)\n+    {\n+      AnyValue lhsValue = (lhs instanceof AnyValue) ? (AnyValue) lhs : ValueUtils.of(lhs);\n+      return AnyValues.COMPARATOR.compare(lhsValue, (AnyValue) rhs);\n     }\n+    // Compare the types\n+    // TODO: Test coverage for the Orderability CIP\n+    SuperType leftType = SuperType.ofValue(lhs);\n+    SuperType rightType = SuperType.ofValue(rhs);\n \n-    /**\n-     * Compare with Cypher orderability semantics for disjoint types\n-     *\n-     * @param lhs\n-     * @param rhs\n-     * @return\n-     */\n-    public static int compare( Object lhs, Object rhs )\n+    int typeComparison = SuperType.TYPE_ID_COMPARATOR.compare(leftType, rightType);\n+    if (typeComparison != 0)\n     {\n-        if ( lhs == rhs )\n-        {\n-            return 0;\n-        }\n-        // null is greater than any other type\n-        else if ( lhs == Values.NO_VALUE || lhs == null )\n-        {\n-            return 1;\n-        }\n-        else if ( rhs == Values.NO_VALUE || rhs == null )\n-        {\n-            return -1;\n-        }\n-        else if ( lhs instanceof AnyValue )\n-        {\n-            AnyValue rhsValue = (rhs instanceof AnyValue) ? (AnyValue) rhs : ValueUtils.of( rhs );\n-            return AnyValues.COMPARATOR.compare( (AnyValue) lhs, rhsValue );\n-        }\n-        else if ( rhs instanceof AnyValue )\n-        {\n-            AnyValue lhsValue = (lhs instanceof AnyValue) ? (AnyValue) lhs : ValueUtils.of( lhs );\n-            return AnyValues.COMPARATOR.compare( lhsValue, (AnyValue) rhs );\n-        }\n-        // Compare the types\n-        // TODO: Test coverage for the Orderability CIP\n-        SuperType leftType = SuperType.ofValue( lhs );\n-        SuperType rightType = SuperType.ofValue( rhs );\n+      // Types are different an decides the order\n+      return typeComparison;\n+    }\n \n-        int typeComparison = SuperType.TYPE_ID_COMPARATOR.compare( leftType, rightType );\n-        if ( typeComparison != 0 )\n-        {\n-            // Types are different an decides the order\n-            return typeComparison;\n-        }\n+    return leftType.comparator.compare(lhs, rhs);\n+  }\n \n-        return leftType.comparator.compare( lhs, rhs );\n-    }\n+  public enum SuperType\n+  {\n+    MAP(0, FALLBACK_COMPARATOR /*TODO*/),\n+    NODE(1, NODE_COMPARATOR),\n+    RELATIONSHIP(2, RELATIONSHIP_COMPARATOR),\n+    LIST(3, LIST_COMPARATOR),\n+    PATH(4, PATH_COMPARATOR),\n+    STRING(5, STRING_COMPARATOR),\n+    BOOLEAN(6, BOOLEAN_COMPARATOR),\n+    NUMBER(7, NUMBER_COMPARATOR),\n+    VOID(8, VOID_COMPARATOR);\n \n-    public enum SuperType\n-    {\n-        MAP( 0, FALLBACK_COMPARATOR /*TODO*/ ),\n-        NODE( 1, NODE_COMPARATOR ),\n-        RELATIONSHIP( 2, RELATIONSHIP_COMPARATOR ),\n-        LIST( 3, LIST_COMPARATOR ),\n-        PATH( 4, PATH_COMPARATOR ),\n-        STRING( 5, STRING_COMPARATOR ),\n-        BOOLEAN( 6, BOOLEAN_COMPARATOR ),\n-        NUMBER( 7, NUMBER_COMPARATOR ),\n-        VOID( 8, VOID_COMPARATOR );\n+    public final int typeId;\n+    public final Comparator comparator;\n \n-        public final int typeId;\n-        public final Comparator comparator;\n+    SuperType(int typeId, Comparator comparator)\n+    {\n+      this.typeId = typeId;\n+      this.comparator = comparator;\n+    }\n \n-        SuperType( int typeId, Comparator comparator )\n-        {\n-            this.typeId = typeId;\n-            this.comparator = comparator;\n-        }\n+    public boolean isSuperTypeOf(Object value)\n+    {\n+      return this == ofValue(value);\n+    }\n \n-        public boolean isSuperTypeOf( Object value )\n+    public static SuperType ofValue(Object value)\n+    {\n+      if (value instanceof String || value instanceof Character)\n+      {\n+        return STRING;\n+      } else if (value instanceof Number)\n+      {\n+        return NUMBER;\n+      } else if (value instanceof Boolean)\n+      {\n+        return BOOLEAN;\n+      } else if (value instanceof Map<?, ?>)\n+      {\n+        return MAP;\n+      } else if (value instanceof List<?> || value.getClass().isArray())\n+      {\n+        return LIST;\n+      } else if (value instanceof VirtualNodeValue)\n+      {\n+        if (((VirtualNodeValue) value).id() == -1)\n         {\n-            return this == ofValue( value );\n+          return VOID;\n         }\n-\n-        public static SuperType ofValue( Object value )\n+        return NODE;\n+      } else if (value instanceof VirtualRelationshipValue)\n+      {\n+        if (((VirtualRelationshipValue) value).id() == -1)\n         {\n-            if ( value instanceof String || value instanceof Character )\n-            {\n-                return STRING;\n-            }\n-            else if ( value instanceof Number )\n-            {\n-                return NUMBER;\n-            }\n-            else if ( value instanceof Boolean )\n-            {\n-                return BOOLEAN;\n-            }\n-            else if ( value instanceof Map<?,?> )\n-            {\n-                return MAP;\n-            }\n-            else if ( value instanceof List<?> || value.getClass().isArray() )\n-            {\n-                return LIST;\n-            }\n-            else if ( value instanceof VirtualNodeValue )\n-            {\n-                if ( ((VirtualNodeValue) value).id() == -1 )\n-                {\n-                    return VOID;\n-                }\n-                return NODE;\n-            }\n-            else if ( value instanceof VirtualRelationshipValue )\n-            {\n-                if ( ((VirtualRelationshipValue) value).id() == -1 )\n-                {\n-                    return VOID;\n-                }\n-                return RELATIONSHIP;\n-            }\n-            // TODO is Path really the class that compiled runtime will be using?\n-            else if ( value instanceof Path )\n-            {\n-                return PATH;\n-            }\n-            throw new UnorderableValueException( value.getClass().getSimpleName() );\n+          return VOID;\n         }\n-\n-        public static final Comparator<SuperType> TYPE_ID_COMPARATOR = Comparator.comparingInt( left -> left.typeId );\n+        return RELATIONSHIP;\n+      }\n+      // TODO is Path really the class that compiled runtime will be using?\n+      else if (value instanceof Path)\n+      {\n+        return PATH;\n+      }\n+      throw new UnorderableValueException(value.getClass().getSimpleName());\n     }\n \n-    // NOTE: nulls are handled at the top of the public compare() method\n-    // so the type-specific comparators should not check arguments for null\n+    public static final Comparator<SuperType> TYPE_ID_COMPARATOR = Comparator.comparingInt(left -> left.typeId);\n+  }\n \n-    private static Comparator<Object> FALLBACK_COMPARATOR = ( lhs, rhs ) ->\n+  // NOTE: nulls are handled at the top of the public compare() method\n+  // so the type-specific comparators should not check arguments for null\n+\n+  private static Comparator<Object> FALLBACK_COMPARATOR = (lhs, rhs) ->\n+  {\n+    if (lhs.getClass().isAssignableFrom(rhs.getClass()) &&\n+        lhs instanceof Comparable &&\n+        rhs instanceof Comparable)\n     {\n-        if ( lhs.getClass().isAssignableFrom( rhs.getClass() ) &&\n-             lhs instanceof Comparable &&\n-             rhs instanceof Comparable )\n-        {\n-            return ((Comparable) lhs).compareTo( rhs );\n-        }\n+      return ((Comparable) lhs).compareTo(rhs);\n+    }\n \n-        throw new IncomparableValuesException( lhs.getClass().getSimpleName(), rhs.getClass().getSimpleName() );\n-    };\n+    throw new IncomparableValuesException(lhs.getClass().getSimpleName(), rhs.getClass().getSimpleName());\n+  };\n \n-    private static Comparator<Object> VOID_COMPARATOR = ( lhs, rhs ) -> 0;\n+  private static Comparator<Object> VOID_COMPARATOR = (lhs, rhs) -> 0;\n \n-    private static Comparator<Number> NUMBER_COMPARATOR = ( lhs, rhs ) ->\n+  private static Comparator<Number> NUMBER_COMPARATOR = (lhs, rhs) ->\n+  {\n+    // If floats, compare float values. If integer types, compare long values\n+    if (lhs instanceof Double && rhs instanceof Float)\n     {\n-        // If floats, compare float values. If integer types, compare long values\n-        if ( lhs instanceof Double && rhs instanceof Float )\n-        {\n-            return ((Double) lhs).compareTo( rhs.doubleValue() );\n-        }\n-        else if ( lhs instanceof Float && rhs instanceof Double )\n-        {\n-            return -((Double) rhs).compareTo( lhs.doubleValue() );\n-        }\n-        else if ( lhs instanceof Float && rhs instanceof Float )\n-        {\n-            return ((Float) lhs).compareTo( (Float) rhs );\n-        }\n-        else if ( lhs instanceof Double && rhs instanceof Double )\n-        {\n-            return ((Double) lhs).compareTo( (Double) rhs );\n-        }\n-        // Right hand side is neither Float nor Double\n-        else if ( lhs instanceof Double || lhs instanceof Float )\n-        {\n-            return MathUtil.compareDoubleAgainstLong( lhs.doubleValue(), rhs.longValue() );\n-        }\n-        // Left hand side is neither Float nor Double\n-        else if ( rhs instanceof Double || rhs instanceof Float )\n-        {\n-            return -MathUtil.compareDoubleAgainstLong( rhs.doubleValue(), lhs.longValue() );\n-        }\n-        // Everything else is a long from Cypher's point-of-view\n-        return Long.compare( lhs.longValue(), rhs.longValue() );\n-    };\n+      return ((Double) lhs).compareTo(rhs.doubleValue());\n+    } else if (lhs instanceof Float && rhs instanceof Double)\n+    {\n+      return -((Double) rhs).compareTo(lhs.doubleValue());\n+    } else if (lhs instanceof Float && rhs instanceof Float)\n+    {\n+      return ((Float) lhs).compareTo((Float) rhs);\n+    } else if (lhs instanceof Double && rhs instanceof Double)\n+    {\n+      return ((Double) lhs).compareTo((Double) rhs);\n+    }\n+    // Right hand side is neither Float nor Double\n+    else if (lhs instanceof Double || lhs instanceof Float)\n+    {\n+      return MathUtil.compareDoubleAgainstLong(lhs.doubleValue(), rhs.longValue());\n+    }\n+    // Left hand side is neither Float nor Double\n+    else if (rhs instanceof Double || rhs instanceof Float)\n+    {\n+      return -MathUtil.compareDoubleAgainstLong(rhs.doubleValue(), lhs.longValue());\n+    }\n+    // Everything else is a long from Cypher's point-of-view\n+    return Long.compare(lhs.longValue(), rhs.longValue());\n+  };\n \n-    private static Comparator<Object> STRING_COMPARATOR = ( lhs, rhs ) ->\n+  private static Comparator<Object> STRING_COMPARATOR = (lhs, rhs) ->\n+  {\n+    if (lhs instanceof Character && rhs instanceof String)\n     {\n-        if ( lhs instanceof Character && rhs instanceof String )\n-        {\n-            return lhs.toString().compareTo( (String) rhs );\n-        }\n-        else if ( lhs instanceof String && rhs instanceof Character )\n-        {\n-            return ((String) lhs).compareTo( rhs.toString() );\n-        }\n-        else\n-        {\n-            return ((Comparable) lhs).compareTo( rhs );\n-        }\n-    };\n+      return lhs.toString().compareTo((String) rhs);\n+    } else if (lhs instanceof String && rhs instanceof Character)\n+    {\n+      return ((String) lhs).compareTo(rhs.toString());\n+    } else\n+    {\n+      return ((Comparable) lhs).compareTo(rhs);\n+    }\n+  };\n \n-    private static Comparator<Boolean> BOOLEAN_COMPARATOR = Boolean::compareTo;\n+  private static Comparator<Boolean> BOOLEAN_COMPARATOR = Boolean::compareTo;\n \n-    private static Comparator<VirtualNodeValue> NODE_COMPARATOR = Comparator.comparingLong( VirtualNodeValue::id );\n+  private static Comparator<VirtualNodeValue> NODE_COMPARATOR = Comparator.comparingLong(VirtualNodeValue::id);\n \n-    private static Comparator<VirtualRelationshipValue> RELATIONSHIP_COMPARATOR =\n-            Comparator.comparingLong( VirtualRelationshipValue::id );\n+  private static Comparator<VirtualRelationshipValue> RELATIONSHIP_COMPARATOR =\n+      Comparator.comparingLong(VirtualRelationshipValue::id);\n \n-    // TODO test\n-    private static Comparator<Path> PATH_COMPARATOR = ( lhs, rhs ) ->\n+  // TODO test\n+  private static Comparator<Path> PATH_COMPARATOR = (lhs, rhs) ->\n+  {\n+    Iterator<PropertyContainer> lhsIter = lhs.iterator();\n+    Iterator<PropertyContainer> rhsIter = rhs.iterator();\n+    while (lhsIter.hasNext() && rhsIter.hasNext())\n     {\n-        Iterator<PropertyContainer> lhsIter = lhs.iterator();\n-        Iterator<PropertyContainer> rhsIter = rhs.iterator();\n-        while ( lhsIter.hasNext() && rhsIter.hasNext() )\n-        {\n-            int result = compare( lhsIter.next(), rhsIter.next() );\n-            if ( 0 != result )\n-            {\n-                return result;\n-            }\n-        }\n-        return (lhsIter.hasNext()) ? 1\n-                                   : (rhsIter.hasNext()) ? -1\n-                                                         : 0;\n-    };\n+      int result = compare(lhsIter.next(), rhsIter.next());\n+      if (0 != result)\n+      {\n+        return result;\n+      }\n+    }\n+    return (lhsIter.hasNext()) ? 1\n+        : (rhsIter.hasNext()) ? -1\n+        : 0;\n+  };\n \n-    private static Comparator<Object> LIST_COMPARATOR = new Comparator<Object>()\n+  private static Comparator<Object> LIST_COMPARATOR = new Comparator<Object>()\n+  {\n+    @Override\n+    public int compare(Object lhs, Object rhs)\n     {\n-        @Override\n-        public int compare( Object lhs, Object rhs )\n+      Iterator lhsIter = toIterator(lhs);\n+      Iterator rhsIter = toIterator(rhs);\n+      while (lhsIter.hasNext() && rhsIter.hasNext())\n+      {\n+        int result = CypherOrderability.compare(lhsIter.next(), rhsIter.next());\n+        if (0 != result)\n         {\n-            Iterator lhsIter = toIterator( lhs );\n-            Iterator rhsIter = toIterator( rhs );\n-            while ( lhsIter.hasNext() && rhsIter.hasNext() )\n-            {\n-                int result = CypherOrderability.compare( lhsIter.next(), rhsIter.next() );\n-                if ( 0 != result )\n-                {\n-                    return result;\n-                }\n-            }\n-            return (lhsIter.hasNext()) ? 1\n-                                       : (rhsIter.hasNext()) ? -1\n-                                                             : 0;\n+          return result;\n         }\n+      }\n+      return (lhsIter.hasNext()) ? 1\n+          : (rhsIter.hasNext()) ? -1\n+          : 0;\n+    }\n \n-        private Iterator toIterator( Object o )\n-        {\n-            Class<?> clazz = o.getClass();\n-            if ( Iterable.class.isAssignableFrom( clazz) )\n-            {\n-                return ((Iterable) o).iterator();\n-            }\n-            else if ( Object[].class.isAssignableFrom( clazz) )\n-            {\n-                return Arrays.stream( (Object[]) o ).iterator();\n-            }\n-            else if ( clazz.equals( int[].class ) )\n-            {\n-                return IntStream.of( (int[]) o ).iterator();\n-            }\n-            else if ( clazz.equals( long[].class ) )\n-            {\n-                return LongStream.of( (long[]) o ).iterator();\n-            }\n-            else if ( clazz.equals( float[].class ) )\n-            {\n-                return IntStream.range( 0, ((float[]) o).length ).mapToObj( i -> ((float[]) o)[i] ).iterator();\n-            }\n-            else if ( clazz.equals( double[].class ) )\n-            {\n-                return DoubleStream.of( (double[]) o ).iterator();\n-            }\n-            else if ( clazz.equals( String[].class ) )\n-            {\n-                return Arrays.stream( (String[]) o ).iterator();\n-            }\n-            else if ( clazz.equals( boolean[].class ) )\n-            {\n-                // TODO Is there a better way to covert boolean[] to Iterator?\n-                return IntStream.range( 0, ((boolean[]) o).length ).mapToObj( i -> ((boolean[]) o)[i] ).iterator();\n-            }\n-            else if ( clazz.equals( Boolean[].class ) )\n-            {\n-                return Arrays.stream( (Boolean[]) o ).iterator();\n-            }\n-            else\n-            {\n-                throw new UnsupportedOperationException( format( \"Can not convert to iterator: %s\", clazz.getName() ) );\n-            }\n-        }\n-    };\n+    private Iterator toIterator(Object o)\n+    {\n+      Class<?> clazz = o.getClass();\n+      if (Iterable.class.isAssignableFrom(clazz))\n+      {\n+        return ((Iterable) o).iterator();\n+      } else if (Object[].class.isAssignableFrom(clazz))\n+      {\n+        return Arrays.stream((Object[]) o).iterator();\n+      } else if (clazz.equals(int[].class))\n+      {\n+        return IntStream.of((int[]) o).iterator();\n+      } else if (clazz.equals(long[].class))\n+      {\n+        return LongStream.of((long[]) o).iterator();\n+      } else if (clazz.equals(float[].class))\n+      {\n+        return IntStream.range(0, ((float[]) o).length).mapToObj(i -> ((float[]) o)[i]).iterator();\n+      } else if (clazz.equals(double[].class))\n+      {\n+        return DoubleStream.of((double[]) o).iterator();\n+      } else if (clazz.equals(String[].class))\n+      {\n+        return Arrays.stream((String[]) o).iterator();\n+      } else if (clazz.equals(boolean[].class))\n+      {\n+        // TODO Is there a better way to covert boolean[] to Iterator?\n+        return IntStream.range(0, ((boolean[]) o).length).mapToObj(i -> ((boolean[]) o)[i]).iterator();\n+      } else if (clazz.equals(Boolean[].class))\n+      {\n+        return Arrays.stream((Boolean[]) o).iterator();\n+      } else\n+      {\n+        throw new UnsupportedOperationException(format(\"Can not convert to iterator: %s\", clazz.getName()));\n+      }\n+    }\n+  };\n }\n",
            "diff_size": 357
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 301).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "297",
                    "column": "66",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "315",
                    "column": "70",
                    "severity": "error",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "331",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/188/CypherOrderability.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/188/CypherOrderability.java\nindex 74cbe4c7e08..cf7ef1b3783 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/188/CypherOrderability.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/188/CypherOrderability.java\n@@ -143,18 +143,11 @@ public class CypherOrderability\n \n     public enum SuperType\n     {\n-        MAP( 0, FALLBACK_COMPARATOR /*TODO*/ ),\n-        NODE( 1, NODE_COMPARATOR ),\n-        RELATIONSHIP( 2, RELATIONSHIP_COMPARATOR ),\n-        LIST( 3, LIST_COMPARATOR ),\n-        PATH( 4, PATH_COMPARATOR ),\n-        STRING( 5, STRING_COMPARATOR ),\n-        BOOLEAN( 6, BOOLEAN_COMPARATOR ),\n-        NUMBER( 7, NUMBER_COMPARATOR ),\n-        VOID( 8, VOID_COMPARATOR );\n+        MAP( 0, FALLBACK_COMPARATOR /*TODO*/ ), NODE( 1, NODE_COMPARATOR ), RELATIONSHIP( 2, RELATIONSHIP_COMPARATOR ), LIST( 3, LIST_COMPARATOR ), PATH( 4, PATH_COMPARATOR ), STRING( 5, STRING_COMPARATOR ), BOOLEAN( 6, BOOLEAN_COMPARATOR ), NUMBER( 7, NUMBER_COMPARATOR ), VOID( 8, VOID_COMPARATOR );\n \n         public final int typeId;\n-        public final Comparator comparator;\n+\n+public final Comparator comparator;\n \n         SuperType( int typeId, Comparator comparator )\n         {\n@@ -181,7 +174,7 @@ public class CypherOrderability\n             {\n                 return BOOLEAN;\n             }\n-            else if ( value instanceof Map<?,?> )\n+            else if ( value instanceof Map<?, ?> )\n             {\n                 return MAP;\n             }\n@@ -195,7 +188,8 @@ public class CypherOrderability\n                 {\n                     return VOID;\n                 }\n-                return NODE;\n+\n+return NODE;\n             }\n             else if ( value instanceof VirtualRelationshipValue )\n             {\n@@ -203,7 +197,8 @@ public class CypherOrderability\n                 {\n                     return VOID;\n                 }\n-                return RELATIONSHIP;\n+\n+return RELATIONSHIP;\n             }\n             // TODO is Path really the class that compiled runtime will be using?\n             else if ( value instanceof Path )\n@@ -221,10 +216,9 @@ public class CypherOrderability\n \n     private static Comparator<Object> FALLBACK_COMPARATOR = ( lhs, rhs ) ->\n     {\n-        if ( lhs.getClass().isAssignableFrom( rhs.getClass() ) &&\n-             lhs instanceof Comparable &&\n+        if ( lhs.getClass().isAssignableFrom( rhs.getClass() ) && lhs instanceof Comparable &&\n              rhs instanceof Comparable )\n-        {\n+{\n             return ((Comparable) lhs).compareTo( rhs );\n         }\n \n@@ -286,9 +280,7 @@ public class CypherOrderability\n \n     private static Comparator<VirtualNodeValue> NODE_COMPARATOR = Comparator.comparingLong( VirtualNodeValue::id );\n \n-    private static Comparator<VirtualRelationshipValue> RELATIONSHIP_COMPARATOR =\n-            Comparator.comparingLong( VirtualRelationshipValue::id );\n-\n+    private static Comparator<VirtualRelationshipValue> RELATIONSHIP_COMPARATOR = Comparator.comparingLong( VirtualRelationshipValue::id );\n     // TODO test\n     private static Comparator<Path> PATH_COMPARATOR = ( lhs, rhs ) ->\n     {\n@@ -302,9 +294,7 @@ public class CypherOrderability\n                 return result;\n             }\n         }\n-        return (lhsIter.hasNext()) ? 1\n-                                   : (rhsIter.hasNext()) ? -1\n-                                                         : 0;\n+        return (lhsIter.hasNext()) ? 1 : (rhsIter.hasNext()) ? -1: 0;\n     };\n \n     private static Comparator<Object> LIST_COMPARATOR = new Comparator<Object>()\n@@ -322,10 +312,8 @@ public class CypherOrderability\n                     return result;\n                 }\n             }\n-            return (lhsIter.hasNext()) ? 1\n-                                       : (rhsIter.hasNext()) ? -1\n-                                                             : 0;\n-        }\n+            return (lhsIter.hasNext()) ? 1 : (rhsIter.hasNext()) ? -1: 0;\n+    }\n \n         private Iterator toIterator( Object o )\n         {\n@@ -336,15 +324,15 @@ public class CypherOrderability\n             }\n             else if ( Object[].class.isAssignableFrom( clazz) )\n             {\n-                return Arrays.stream( (Object[]) o ).iterator();\n+                return Arrays.stream( (Object[]) o).iterator();\n             }\n             else if ( clazz.equals( int[].class ) )\n             {\n-                return IntStream.of( (int[]) o ).iterator();\n+                return IntStream.of( ( int[]) o).iterator();\n             }\n             else if ( clazz.equals( long[].class ) )\n             {\n-                return LongStream.of( (long[]) o ).iterator();\n+                return LongStream.of( (long[]) o).iterator();\n             }\n             else if ( clazz.equals( float[].class ) )\n             {\n@@ -352,11 +340,11 @@ public class CypherOrderability\n             }\n             else if ( clazz.equals( double[].class ) )\n             {\n-                return DoubleStream.of( (double[]) o ).iterator();\n+                return DoubleStream.of( (double[]) o).iterator();\n             }\n             else if ( clazz.equals( String[].class ) )\n             {\n-                return Arrays.stream( (String[]) o ).iterator();\n+                return Arrays.stream( (String[]) o).iterator();\n             }\n             else if ( clazz.equals( boolean[].class ) )\n             {\n@@ -365,7 +353,7 @@ public class CypherOrderability\n             }\n             else if ( clazz.equals( Boolean[].class ) )\n             {\n-                return Arrays.stream( (Boolean[]) o ).iterator();\n+                return Arrays.stream( (Boolean[]) o).iterator();\n             }\n             else\n             {\n@@ -373,4 +361,4 @@ public class CypherOrderability\n             }\n         }\n     };\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1808",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1808/ReplayableCommitProcess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1808/ReplayableCommitProcess.java\nindex d51a54bd178..b4954477ce3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1808/ReplayableCommitProcess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1808/ReplayableCommitProcess.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.tx;\n \n import java.util.concurrent.atomic.AtomicLong;\n@@ -33,26 +34,26 @@ import org.neo4j.storageengine.api.TransactionApplicationMode;\n  */\n class ReplayableCommitProcess implements TransactionCommitProcess\n {\n-    private final AtomicLong lastLocalTxId = new AtomicLong( 1 );\n-    private final TransactionCommitProcess localCommitProcess;\n-    private final TransactionCounter transactionCounter;\n+  private final AtomicLong lastLocalTxId = new AtomicLong(1);\n+  private final TransactionCommitProcess localCommitProcess;\n+  private final TransactionCounter transactionCounter;\n \n-    ReplayableCommitProcess( TransactionCommitProcess localCommitProcess, TransactionCounter transactionCounter )\n-    {\n-        this.localCommitProcess = localCommitProcess;\n-        this.transactionCounter = transactionCounter;\n-    }\n+  ReplayableCommitProcess(TransactionCommitProcess localCommitProcess, TransactionCounter transactionCounter)\n+  {\n+    this.localCommitProcess = localCommitProcess;\n+    this.transactionCounter = transactionCounter;\n+  }\n \n-    @Override\n-    public long commit( TransactionToApply batch,\n-                        CommitEvent commitEvent,\n-                        TransactionApplicationMode mode ) throws TransactionFailureException\n+  @Override\n+  public long commit(TransactionToApply batch,\n+                     CommitEvent commitEvent,\n+                     TransactionApplicationMode mode) throws TransactionFailureException\n+  {\n+    long txId = lastLocalTxId.incrementAndGet();\n+    if (txId > transactionCounter.lastCommittedTransactionId())\n     {\n-        long txId = lastLocalTxId.incrementAndGet();\n-        if ( txId > transactionCounter.lastCommittedTransactionId() )\n-        {\n-            return localCommitProcess.commit( batch, commitEvent, mode );\n-        }\n-        return txId;\n+      return localCommitProcess.commit(batch, commitEvent, mode);\n     }\n+    return txId;\n+  }\n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "18",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1808/ReplayableCommitProcess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1808/ReplayableCommitProcess.java\nindex d51a54bd178..b03f2098a16 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1808/ReplayableCommitProcess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1808/ReplayableCommitProcess.java\n@@ -44,15 +44,15 @@ class ReplayableCommitProcess implements TransactionCommitProcess\n     }\n \n     @Override\n-    public long commit( TransactionToApply batch,\n-                        CommitEvent commitEvent,\n+    public long commit( TransactionToApply batch, CommitEvent commitEvent,\n                         TransactionApplicationMode mode ) throws TransactionFailureException\n-    {\n+{\n         long txId = lastLocalTxId.incrementAndGet();\n-        if ( txId > transactionCounter.lastCommittedTransactionId() )\n+        if ( txId> transactionCounter.lastCommittedTransactionId() )\n         {\n             return localCommitProcess.commit( batch, commitEvent, mode );\n         }\n-        return txId;\n+\n+return txId;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
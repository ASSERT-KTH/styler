{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1970",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "150",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "215",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1970/DuplicatingLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1970/DuplicatingLog.java\nindex 173778cca95..07b7ca745a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1970/DuplicatingLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1970/DuplicatingLog.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.logging;\n \n import java.util.ArrayList;\n@@ -32,190 +33,188 @@ import javax.annotation.Nonnull;\n  */\n public class DuplicatingLog extends AbstractLog\n {\n-    private final CopyOnWriteArraySet<Log> logs;\n-    private final DuplicatingLogger debugLogger;\n-    private final DuplicatingLogger infoLogger;\n-    private final DuplicatingLogger warnLogger;\n-    private final DuplicatingLogger errorLogger;\n-\n-    /**\n-     * @param logs A list of {@link Log} instances that messages should be duplicated to\n-     */\n-    public DuplicatingLog( Log... logs )\n+  private final CopyOnWriteArraySet<Log> logs;\n+  private final DuplicatingLogger debugLogger;\n+  private final DuplicatingLogger infoLogger;\n+  private final DuplicatingLogger warnLogger;\n+  private final DuplicatingLogger errorLogger;\n+\n+  /**\n+   * @param logs A list of {@link Log} instances that messages should be duplicated to\n+   */\n+  public DuplicatingLog(Log... logs)\n+  {\n+    this(Arrays.asList(logs));\n+  }\n+\n+  /**\n+   * @param logs A list of {@link Log} instances that messages should be duplicated to\n+   */\n+  public DuplicatingLog(List<Log> logs)\n+  {\n+    ArrayList<Logger> debugLoggers = new ArrayList<>(logs.size());\n+    ArrayList<Logger> infoLoggers = new ArrayList<>(logs.size());\n+    ArrayList<Logger> warnLoggers = new ArrayList<>(logs.size());\n+    ArrayList<Logger> errorLoggers = new ArrayList<>(logs.size());\n+\n+    for (Log log : logs)\n     {\n-        this( Arrays.asList( logs ) );\n+      debugLoggers.add(log.debugLogger());\n+      infoLoggers.add(log.infoLogger());\n+      warnLoggers.add(log.warnLogger());\n+      errorLoggers.add(log.errorLogger());\n     }\n \n-    /**\n-     * @param logs A list of {@link Log} instances that messages should be duplicated to\n-     */\n-    public DuplicatingLog( List<Log> logs )\n+    this.logs = new CopyOnWriteArraySet<>(logs);\n+    this.debugLogger = new DuplicatingLogger(debugLoggers);\n+    this.infoLogger = new DuplicatingLogger(infoLoggers);\n+    this.warnLogger = new DuplicatingLogger(warnLoggers);\n+    this.errorLogger = new DuplicatingLogger(errorLoggers);\n+  }\n+\n+  /**\n+   * Remove a {@link Log} from the duplicating set\n+   *\n+   * @param log the Log to be removed\n+   * @return true if the log was found and removed\n+   */\n+  public boolean remove(Log log)\n+  {\n+    boolean removed = this.logs.remove(log);\n+    this.debugLogger.remove(log.debugLogger());\n+    this.infoLogger.remove(log.infoLogger());\n+    this.warnLogger.remove(log.warnLogger());\n+    this.errorLogger.remove(log.errorLogger());\n+    return removed;\n+  }\n+\n+  @Override\n+  public boolean isDebugEnabled()\n+  {\n+    for (Log log : logs)\n     {\n-        ArrayList<Logger> debugLoggers = new ArrayList<>( logs.size() );\n-        ArrayList<Logger> infoLoggers = new ArrayList<>( logs.size() );\n-        ArrayList<Logger> warnLoggers = new ArrayList<>( logs.size() );\n-        ArrayList<Logger> errorLoggers = new ArrayList<>( logs.size() );\n-\n-        for ( Log log : logs )\n-        {\n-            debugLoggers.add( log.debugLogger() );\n-            infoLoggers.add( log.infoLogger() );\n-            warnLoggers.add( log.warnLogger() );\n-            errorLoggers.add( log.errorLogger() );\n-        }\n-\n-        this.logs = new CopyOnWriteArraySet<>( logs );\n-        this.debugLogger = new DuplicatingLogger( debugLoggers );\n-        this.infoLogger = new DuplicatingLogger( infoLoggers );\n-        this.warnLogger = new DuplicatingLogger( warnLoggers );\n-        this.errorLogger = new DuplicatingLogger( errorLoggers );\n+      if (log.isDebugEnabled())\n+      {\n+        return true;\n+      }\n     }\n-\n-    /**\n-     * Remove a {@link Log} from the duplicating set\n-     *\n-     * @param log the Log to be removed\n-     * @return true if the log was found and removed\n-     */\n-    public boolean remove( Log log )\n+    return false;\n+  }\n+\n+  @Nonnull\n+  @Override\n+  public Logger debugLogger()\n+  {\n+    return this.debugLogger;\n+  }\n+\n+  @Nonnull\n+  @Override\n+  public Logger infoLogger()\n+  {\n+    return this.infoLogger;\n+  }\n+\n+  @Nonnull\n+  @Override\n+  public Logger warnLogger()\n+  {\n+    return this.warnLogger;\n+  }\n+\n+  @Nonnull\n+  @Override\n+  public Logger errorLogger()\n+  {\n+    return this.errorLogger;\n+  }\n+\n+  @Override\n+  public void bulk(@Nonnull Consumer<Log> consumer)\n+  {\n+    bulk(new LinkedList<>(logs), new ArrayList<>(logs.size()), consumer);\n+  }\n+\n+  private static void bulk(final LinkedList<Log> remaining, final ArrayList<Log> bulkLogs, final Consumer<Log> finalConsumer)\n+  {\n+    if (!remaining.isEmpty())\n     {\n-        boolean removed = this.logs.remove( log );\n-        this.debugLogger.remove( log.debugLogger() );\n-        this.infoLogger.remove( log.infoLogger() );\n-        this.warnLogger.remove( log.warnLogger() );\n-        this.errorLogger.remove( log.errorLogger() );\n-        return removed;\n-    }\n-\n-    @Override\n-    public boolean isDebugEnabled()\n+      Log log = remaining.pop();\n+      log.bulk(bulkLog ->\n+      {\n+        bulkLogs.add(bulkLog);\n+        bulk(remaining, bulkLogs, finalConsumer);\n+      });\n+    } else\n     {\n-        for ( Log log : logs )\n-        {\n-            if ( log.isDebugEnabled() )\n-            {\n-                return true;\n-            }\n-        }\n-        return false;\n+      Log log = new DuplicatingLog(bulkLogs);\n+      finalConsumer.accept(log);\n     }\n+  }\n \n-    @Nonnull\n-    @Override\n-    public Logger debugLogger()\n+  private static class DuplicatingLogger implements Logger\n+  {\n+    private final CopyOnWriteArraySet<Logger> loggers;\n+\n+    DuplicatingLogger(List<Logger> loggers)\n     {\n-        return this.debugLogger;\n+      this.loggers = new CopyOnWriteArraySet<>(loggers);\n     }\n \n-    @Nonnull\n-    @Override\n-    public Logger infoLogger()\n+    public boolean remove(Logger logger)\n     {\n-        return this.infoLogger;\n+      return this.loggers.remove(logger);\n     }\n \n-    @Nonnull\n     @Override\n-    public Logger warnLogger()\n+    public void log(@Nonnull String message)\n     {\n-        return this.warnLogger;\n+      for (Logger logger : loggers)\n+      {\n+        logger.log(message);\n+      }\n     }\n \n-    @Nonnull\n     @Override\n-    public Logger errorLogger()\n+    public void log(@Nonnull String message, @Nonnull Throwable throwable)\n     {\n-        return this.errorLogger;\n+      for (Logger logger : loggers)\n+      {\n+        logger.log(message, throwable);\n+      }\n     }\n \n     @Override\n-    public void bulk( @Nonnull Consumer<Log> consumer )\n+    public void log(@Nonnull String format, @Nonnull Object... arguments)\n     {\n-        bulk( new LinkedList<>( logs ), new ArrayList<>( logs.size() ), consumer );\n+      for (Logger logger : loggers)\n+      {\n+        logger.log(format, arguments);\n+      }\n     }\n \n-    private static void bulk( final LinkedList<Log> remaining, final ArrayList<Log> bulkLogs, final Consumer<Log> finalConsumer )\n+    @Override\n+    public void bulk(@Nonnull Consumer<Logger> consumer)\n     {\n-        if ( !remaining.isEmpty() )\n-        {\n-            Log log = remaining.pop();\n-            log.bulk( bulkLog ->\n-            {\n-                bulkLogs.add( bulkLog );\n-                bulk( remaining, bulkLogs, finalConsumer );\n-            } );\n-        }\n-        else\n-        {\n-            Log log = new DuplicatingLog( bulkLogs );\n-            finalConsumer.accept( log );\n-        }\n+      bulk(new LinkedList<>(loggers), new ArrayList<>(loggers.size()), consumer);\n     }\n \n-    private static class DuplicatingLogger implements Logger\n+    private static void bulk(final LinkedList<Logger> remaining, final ArrayList<Logger> bulkLoggers,\n+                             final Consumer<Logger> finalConsumer)\n     {\n-        private final CopyOnWriteArraySet<Logger> loggers;\n-\n-        DuplicatingLogger( List<Logger> loggers )\n-        {\n-            this.loggers = new CopyOnWriteArraySet<>( loggers );\n-        }\n-\n-        public boolean remove( Logger logger )\n-        {\n-            return this.loggers.remove( logger );\n-        }\n-\n-        @Override\n-        public void log( @Nonnull String message )\n-        {\n-            for ( Logger logger : loggers )\n-            {\n-                logger.log( message );\n-            }\n-        }\n-\n-        @Override\n-        public void log( @Nonnull String message, @Nonnull Throwable throwable )\n-        {\n-            for ( Logger logger : loggers )\n-            {\n-                logger.log( message, throwable );\n-            }\n-        }\n-\n-        @Override\n-        public void log( @Nonnull String format, @Nonnull Object... arguments )\n-        {\n-            for ( Logger logger : loggers )\n-            {\n-                logger.log( format, arguments );\n-            }\n-        }\n-\n-        @Override\n-        public void bulk( @Nonnull Consumer<Logger> consumer )\n-        {\n-            bulk( new LinkedList<>( loggers ), new ArrayList<>( loggers.size() ), consumer );\n-        }\n-\n-        private static void bulk( final LinkedList<Logger> remaining, final ArrayList<Logger> bulkLoggers,\n-                final Consumer<Logger> finalConsumer )\n+      if (!remaining.isEmpty())\n+      {\n+        Logger logger = remaining.pop();\n+        logger.bulk(bulkLogger ->\n         {\n-            if ( !remaining.isEmpty() )\n-            {\n-                Logger logger = remaining.pop();\n-                logger.bulk( bulkLogger ->\n-                {\n-                    bulkLoggers.add( bulkLogger );\n-                    bulk( remaining, bulkLoggers, finalConsumer );\n-                } );\n-            }\n-            else\n-            {\n-                Logger logger = new DuplicatingLogger( bulkLoggers );\n-                finalConsumer.accept( logger );\n-            }\n-        }\n+          bulkLoggers.add(bulkLogger);\n+          bulk(remaining, bulkLoggers, finalConsumer);\n+        });\n+      } else\n+      {\n+        Logger logger = new DuplicatingLogger(bulkLoggers);\n+        finalConsumer.accept(logger);\n+      }\n     }\n+  }\n }\n",
            "diff_size": 242
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1970/DuplicatingLog.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1970/DuplicatingLog.java\nindex 173778cca95..dd973629241 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1970/DuplicatingLog.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1970/DuplicatingLog.java\n@@ -55,8 +55,7 @@ public class DuplicatingLog extends AbstractLog\n         ArrayList<Logger> infoLoggers = new ArrayList<>( logs.size() );\n         ArrayList<Logger> warnLoggers = new ArrayList<>( logs.size() );\n         ArrayList<Logger> errorLoggers = new ArrayList<>( logs.size() );\n-\n-        for ( Log log : logs )\n+for ( Log log : logs )\n         {\n             debugLoggers.add( log.debugLogger() );\n             infoLoggers.add( log.infoLogger() );\n@@ -199,8 +198,7 @@ public class DuplicatingLog extends AbstractLog\n             bulk( new LinkedList<>( loggers ), new ArrayList<>( loggers.size() ), consumer );\n         }\n \n-        private static void bulk( final LinkedList<Logger> remaining, final ArrayList<Logger> bulkLoggers,\n-                final Consumer<Logger> finalConsumer )\n+        private static void bulk( final LinkedList<Logger> remaining, final ArrayList<Logger> bulkLoggers, final Consumer<Logger> finalConsumer )\n         {\n             if ( !remaining.isEmpty() )\n             {\n@@ -218,4 +216,4 @@ public class DuplicatingLog extends AbstractLog\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
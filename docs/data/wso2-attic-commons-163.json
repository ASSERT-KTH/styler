{
    "project_name": "wso2-attic-commons",
    "error_id": "163",
    "information": {
        "errors": [
            {
                "line": "106",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 132).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   * @param correlationKey correlation key to match\n   */\n  void addRoute(String routeGroupId, ProcessInstanceDAO target, int index, CorrelationKeySet correlationKeySet, String routePolicy);\n\n  /**\n   * Remove all routes with the given route-group identifier.",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/163/CorrelatorDAO.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/163/CorrelatorDAO.java\nindex 2925d968e97..2a2da9ba00e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/163/CorrelatorDAO.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/163/CorrelatorDAO.java\n@@ -103,13 +103,14 @@ public interface CorrelatorDAO {\n    * @param index relative order in which the route should be considered\n    * @param correlationKey correlation key to match\n    */\n-  void addRoute(String routeGroupId, ProcessInstanceDAO target, int index, CorrelationKeySet correlationKeySet, String routePolicy);\n+  void addRoute(String routeGroupId, ProcessInstanceDAO target, int index,\n+      CorrelationKeySet correlationKeySet, String routePolicy);\n \n-  /**\n+   /**\n    * Remove all routes with the given route-group identifier.\n    * @param routeGroupId\n    */\n-  void removeRoutes(String routeGroupId, ProcessInstanceDAO target);\n+   void removeRoutes(String routeGroupId, ProcessInstanceDAO target);\n \n     /**\n      * @return all routes registered on this correlator, use with care as it can potentially return a lot of values\n",
            "diff_size": 4
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/163/CorrelatorDAO.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/163/CorrelatorDAO.java\nindex 2925d968e97..2307dfe9e4a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/163/CorrelatorDAO.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/163/CorrelatorDAO.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.ode.bpel.dao;\n \n import java.util.List;\n@@ -53,16 +54,17 @@ public interface CorrelatorDAO {\n \n   /**\n    * Get the correlator identifier.\n+   *\n    * @return correlator identifier\n    */\n   String getCorrelatorId();\n \n-    void setCorrelatorId(String newId);\n+  void setCorrelatorId(String newId);\n \n   /**\n    * Enqueue a message exchange to the queue with a set of correlation keys.\n    *\n-   * @param mex message exchange\n+   * @param mex             message exchange\n    * @param correlationKeys pre-computed set of correlation keys for this message\n    */\n   void enqueueMessage(MessageExchangeDAO mex, CorrelationKeySet correlationKeySet);\n@@ -73,17 +75,18 @@ public interface CorrelatorDAO {\n    *\n    * @param correlationKey correlation correlationKey constraint\n    * @return opaque message-related data previously enqueued with the\n-   *         given correlation correlationKey\n+   * given correlation correlationKey\n    */\n   MessageExchangeDAO dequeueMessage(CorrelationKeySet correlationKeySet);\n \n-    /**\n-     * @return all messages waiting on this correlator, use with care as it can potentially return a lot of values\n-     */\n-    Collection<CorrelatorMessageDAO> getAllMessages();\n+  /**\n+   * @return all messages waiting on this correlator, use with care as it can potentially return a lot of values\n+   */\n+  Collection<CorrelatorMessageDAO> getAllMessages();\n \n   /**\n    * Find a route matching the given correlation key.\n+   *\n    * @param correlationKey correlation key\n    * @return route matching the given correlation key\n    */\n@@ -91,6 +94,7 @@ public interface CorrelatorDAO {\n \n   /**\n    * Check if corresponding key set is free to register (see ODE-804)\n+   *\n    * @param correlationKeySet\n    * @return true - available, false - not available\n    */\n@@ -98,21 +102,24 @@ public interface CorrelatorDAO {\n \n   /**\n    * Add a route from the given correlation key to the given process instance.\n-   * @param routeGroupId identifier of the group of routes to which this route belongs\n-   * @param target target process instance\n-   * @param index relative order in which the route should be considered\n+   *\n+   * @param routeGroupId   identifier of the group of routes to which this route belongs\n+   * @param target         target process instance\n+   * @param index          relative order in which the route should be considered\n    * @param correlationKey correlation key to match\n    */\n-  void addRoute(String routeGroupId, ProcessInstanceDAO target, int index, CorrelationKeySet correlationKeySet, String routePolicy);\n+  void addRoute(String routeGroupId, ProcessInstanceDAO target, int index, CorrelationKeySet correlationKeySet,\n+                String routePolicy);\n \n   /**\n    * Remove all routes with the given route-group identifier.\n+   *\n    * @param routeGroupId\n    */\n   void removeRoutes(String routeGroupId, ProcessInstanceDAO target);\n \n-    /**\n-     * @return all routes registered on this correlator, use with care as it can potentially return a lot of values\n-     */\n-    Collection<MessageRouteDAO> getAllRoutes();\n+  /**\n+   * @return all routes registered on this correlator, use with care as it can potentially return a lot of values\n+   */\n+  Collection<MessageRouteDAO> getAllRoutes();\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/163/CorrelatorDAO.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/163/CorrelatorDAO.java\nindex 2925d968e97..4df992d0e47 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/163/CorrelatorDAO.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/163/CorrelatorDAO.java\n@@ -57,7 +57,7 @@ public interface CorrelatorDAO {\n    */\n   String getCorrelatorId();\n \n-    void setCorrelatorId(String newId);\n+void setCorrelatorId(String newId);\n \n   /**\n    * Enqueue a message exchange to the queue with a set of correlation keys.\n@@ -82,7 +82,7 @@ public interface CorrelatorDAO {\n      */\n     Collection<CorrelatorMessageDAO> getAllMessages();\n \n-  /**\n+/**\n    * Find a route matching the given correlation key.\n    * @param correlationKey correlation key\n    * @return route matching the given correlation key\n@@ -115,4 +115,4 @@ public interface CorrelatorDAO {\n      * @return all routes registered on this correlator, use with care as it can potentially return a lot of values\n      */\n     Collection<MessageRouteDAO> getAllRoutes();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/163/CorrelatorDAO.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/163/CorrelatorDAO.java\nindex 2925d968e97..2a2da9ba00e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/163/CorrelatorDAO.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/163/CorrelatorDAO.java\n@@ -103,13 +103,14 @@ public interface CorrelatorDAO {\n    * @param index relative order in which the route should be considered\n    * @param correlationKey correlation key to match\n    */\n-  void addRoute(String routeGroupId, ProcessInstanceDAO target, int index, CorrelationKeySet correlationKeySet, String routePolicy);\n+  void addRoute(String routeGroupId, ProcessInstanceDAO target, int index,\n+      CorrelationKeySet correlationKeySet, String routePolicy);\n \n-  /**\n+   /**\n    * Remove all routes with the given route-group identifier.\n    * @param routeGroupId\n    */\n-  void removeRoutes(String routeGroupId, ProcessInstanceDAO target);\n+   void removeRoutes(String routeGroupId, ProcessInstanceDAO target);\n \n     /**\n      * @return all routes registered on this correlator, use with care as it can potentially return a lot of values\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
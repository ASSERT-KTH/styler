{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "112",
    "information": {
        "errors": [
            {
                "line": "132",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 122).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  @SuppressWarnings(\"unchecked\")\n  public static <SWAGGER_PARAMETER, ANNOTATION> ParameterProcessor<SWAGGER_PARAMETER, ANNOTATION> findParameterProcessors(\n      Type type) {\n    type = TypeFactory.defaultInstance().constructType(type);\n    return (ParameterProcessor<SWAGGER_PARAMETER, ANNOTATION>) parameterProcessors.get(type);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/112/SwaggerGeneratorUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/112/SwaggerGeneratorUtils.java\nindex 6b51e358588..347fa2cfead 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/112/SwaggerGeneratorUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/112/SwaggerGeneratorUtils.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.servicecomb.swagger.generator;\n \n import java.lang.annotation.Annotation;\n@@ -110,7 +111,7 @@ public final class SwaggerGeneratorUtils {\n   }\n \n   public static void postProcessOperation(AbstractSwaggerGenerator swaggerGenerator,\n-      AbstractOperationGenerator operationGenerator) {\n+                                          AbstractOperationGenerator operationGenerator) {\n     for (OperationPostProcessor processor : operationPostProcessors) {\n       if (processor.shouldProcess(swaggerGenerator, operationGenerator)) {\n         processor.process(swaggerGenerator, operationGenerator);\n@@ -230,7 +231,8 @@ public final class SwaggerGeneratorUtils {\n   }\n \n   public static List<Annotation> collectParameterAnnotations(Annotation[] parameterAnnotations,\n-      Map<String, List<Annotation>> methodAnnotationMap, String parameterName) {\n+                                                             Map<String, List<Annotation>> methodAnnotationMap,\n+                                                             String parameterName) {\n     List<Annotation> methodAnnotations = methodAnnotationMap.remove(parameterName);\n     if (methodAnnotations == null) {\n       methodAnnotations = Collections.emptyList();\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/112/SwaggerGeneratorUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/112/SwaggerGeneratorUtils.java\nindex 6b51e358588..8b4660632f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/112/SwaggerGeneratorUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/112/SwaggerGeneratorUtils.java\n@@ -199,7 +199,7 @@ public final class SwaggerGeneratorUtils {\n     }\n \n     String msg = String.format(\"parameter name is not present, method=%s:%s\\n\"\n-            + \"solution:\\n\"\n+    + \"solution:\\n\"\n             + \"  change pom.xml, add compiler argument: -parameters, for example:\\n\"\n             + \"    <plugin>\\n\"\n             + \"      <groupId>org.apache.maven.plugins</groupId>\\n\"\n@@ -265,4 +265,4 @@ public final class SwaggerGeneratorUtils {\n \n     return processor.getHttpParameterType(parameterAnnotation);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
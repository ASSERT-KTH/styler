{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1312",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1312/SettingGroup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1312/SettingGroup.java\nindex 3bd223077ea..4d765a9ac8c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1312/SettingGroup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1312/SettingGroup.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.config;\n \n import java.util.List;\n@@ -32,64 +33,65 @@ import java.util.Optional;\n @Deprecated\n public interface SettingGroup<T> extends SettingValidator\n {\n-    /**\n-     * Apply this setting group to the config and return all of its configured keys and their corresponding values.\n-     *\n-     * @param validConfig which can be examined.\n-     * @return the map of this group's configured keys and values.\n-     */\n-    Map<String,T> values( Map<String,String> validConfig );\n+  /**\n+   * Apply this setting group to the config and return all of its configured keys and their corresponding values.\n+   *\n+   * @param validConfig which can be examined.\n+   * @return the map of this group's configured keys and values.\n+   */\n+  Map<String, T> values(Map<String, String> validConfig);\n \n-    /**\n-     * This will return a list of all settings beloning to this group based on the settings in {@code params}\n-     * @param params a map of all settings\n-     * @return a list of the settings this group contains.\n-     */\n-    List<Setting<T>> settings( Map<String,String> params );\n+  /**\n+   * This will return a list of all settings beloning to this group based on the settings in {@code params}\n+   *\n+   * @param params a map of all settings\n+   * @return a list of the settings this group contains.\n+   */\n+  List<Setting<T>> settings(Map<String, String> params);\n \n-    /**\n-     * @return {@code true} if this setting is deprecated, false otherwise.\n-     */\n-    boolean deprecated();\n+  /**\n+   * @return {@code true} if this setting is deprecated, false otherwise.\n+   */\n+  boolean deprecated();\n \n-    /**\n-     * @return the key of the setting which replaces this when its deprecated, empty if not deprecated.\n-     */\n-    Optional<String> replacement();\n+  /**\n+   * @return the key of the setting which replaces this when its deprecated, empty if not deprecated.\n+   */\n+  Optional<String> replacement();\n \n-    /**\n-     * @return {@code true} if internal setting, false otherwise.\n-     */\n-    boolean internal();\n+  /**\n+   * @return {@code true} if internal setting, false otherwise.\n+   */\n+  boolean internal();\n \n-    /**\n-     * @return {@code true} if secret setting (should be hidden), false otherwise.\n-     */\n-    default boolean secret()\n-    {\n-        return false;\n-    }\n+  /**\n+   * @return {@code true} if secret setting (should be hidden), false otherwise.\n+   */\n+  default boolean secret()\n+  {\n+    return false;\n+  }\n \n-    /**\n-     * @return the documented default value if it needs special documentation, empty if default value is good as is.\n-     */\n-    Optional<String> documentedDefaultValue();\n+  /**\n+   * @return the documented default value if it needs special documentation, empty if default value is good as is.\n+   */\n+  Optional<String> documentedDefaultValue();\n \n-    /**\n-     * @return description of which values are good\n-     */\n-    String valueDescription();\n+  /**\n+   * @return description of which values are good\n+   */\n+  String valueDescription();\n \n-    /**\n-     * @return description of setting, empty in case no description exists.\n-     */\n-    Optional<String> description();\n+  /**\n+   * @return description of setting, empty in case no description exists.\n+   */\n+  Optional<String> description();\n \n-    /**\n-     * @return {@code true} if the setting can be changed at runtime.\n-     */\n-    default boolean dynamic()\n-    {\n-        return false;\n-    }\n+  /**\n+   * @return {@code true} if the setting can be changed at runtime.\n+   */\n+  default boolean dynamic()\n+  {\n+    return false;\n+  }\n }\n",
            "diff_size": 53
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1312/SettingGroup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1312/SettingGroup.java\nindex 3bd223077ea..c6b452f45fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1312/SettingGroup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1312/SettingGroup.java\n@@ -92,4 +92,4 @@ public interface SettingGroup<T> extends SettingValidator\n     {\n         return false;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
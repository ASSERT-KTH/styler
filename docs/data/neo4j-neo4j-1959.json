{
    "project_name": "neo4j-neo4j",
    "error_id": "1959",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "81",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1959/GenerationSafePointer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1959/GenerationSafePointer.java\nindex 1c50a105bbc..4256b9fa4ff 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1959/GenerationSafePointer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1959/GenerationSafePointer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import org.neo4j.io.pagecache.PageCursor;\n@@ -62,9 +63,9 @@ class GenerationSafePointer\n     static final int POINTER_SIZE = 6;\n     static final int CHECKSUM_SIZE = 2;\n     static final int SIZE =\n-            GENERATION_SIZE +\n-            POINTER_SIZE +\n-            CHECKSUM_SIZE;\n+      GENERATION_SIZE +\n+        POINTER_SIZE +\n+        CHECKSUM_SIZE;\n \n     private GenerationSafePointer()\n     {\n@@ -73,77 +74,76 @@ class GenerationSafePointer\n     /**\n      * Writes GSP at the given {@code offset}, the two fields (generation, pointer) + a checksum will be written.\n      *\n-     * @param cursor {@link PageCursor} to write into.\n+     * @param cursor     {@link PageCursor} to write into.\n      * @param generation generation to write.\n-     * @param pointer pointer to write.\n+     * @param pointer    pointer to write.\n      */\n-    static void write( PageCursor cursor, long generation, long pointer )\n+    static void write(PageCursor cursor, long generation, long pointer)\n     {\n-        assertGenerationOnWrite( generation );\n-        assertPointerOnWrite( pointer );\n-        writeGSP( cursor, generation, pointer );\n+        assertGenerationOnWrite(generation);\n+        assertPointerOnWrite(pointer);\n+        writeGSP(cursor, generation, pointer);\n     }\n \n-    private static void writeGSP( PageCursor cursor, long generation, long pointer )\n+    private static void writeGSP(PageCursor cursor, long generation, long pointer)\n     {\n-        cursor.putInt( (int) generation );\n-        put6BLong( cursor, pointer );\n-        cursor.putShort( checksumOf( generation, pointer ) );\n+        cursor.putInt((int) generation);\n+        put6BLong(cursor, pointer);\n+        cursor.putShort(checksumOf(generation, pointer));\n     }\n \n-    static void clean( PageCursor cursor )\n+    static void clean(PageCursor cursor)\n     {\n-        writeGSP( cursor, EMPTY_GENERATION, EMPTY_POINTER );\n+        writeGSP(cursor, EMPTY_GENERATION, EMPTY_POINTER);\n     }\n \n-    static void assertGenerationOnWrite( long generation )\n+    static void assertGenerationOnWrite(long generation)\n     {\n-        if ( generation < MIN_GENERATION || generation > MAX_GENERATION )\n+        if (generation < MIN_GENERATION || generation > MAX_GENERATION)\n         {\n-            throw new IllegalArgumentException( \"Can not write pointer with generation \" + generation +\n-                    \" because outside boundary for valid generation.\" );\n+            throw new IllegalArgumentException(\"Can not write pointer with generation \" + generation +\n+              \" because outside boundary for valid generation.\");\n         }\n     }\n \n-    private static void assertPointerOnWrite( long pointer )\n+    private static void assertPointerOnWrite(long pointer)\n     {\n-        if ( (pointer > MAX_POINTER || pointer < MIN_POINTER) && TreeNode.isNode( pointer ) )\n+        if ((pointer > MAX_POINTER || pointer < MIN_POINTER) && TreeNode.isNode(pointer))\n         {\n-            throw new IllegalArgumentException( \"Can not write pointer \" + pointer +\n-                    \" because outside boundary for valid pointer\" );\n+            throw new IllegalArgumentException(\"Can not write pointer \" + pointer +\n+              \" because outside boundary for valid pointer\");\n         }\n     }\n \n-    static long readGeneration( PageCursor cursor )\n+    static long readGeneration(PageCursor cursor)\n     {\n-        return getUnsignedInt( cursor );\n+        return getUnsignedInt(cursor);\n     }\n \n-    static long readPointer( PageCursor cursor )\n+    static long readPointer(PageCursor cursor)\n     {\n-        return get6BLong( cursor );\n+        return get6BLong(cursor);\n     }\n \n-    static short readChecksum( PageCursor cursor )\n+    static short readChecksum(PageCursor cursor)\n     {\n         return cursor.getShort();\n     }\n \n-    static boolean verifyChecksum( PageCursor cursor, long generation, long pointer )\n+    static boolean verifyChecksum(PageCursor cursor, long generation, long pointer)\n     {\n         short checksum = cursor.getShort();\n-        return checksum == checksumOf( generation, pointer );\n+        return checksum == checksumOf(generation, pointer);\n     }\n \n     /**\n      * Calculates a 2-byte checksum from GSP data.\n      *\n      * @param generation generation of the pointer.\n-     * @param pointer pointer itself.\n-     *\n+     * @param pointer    pointer itself.\n      * @return a {@code short} which is the checksum of the generation-pointer.\n      */\n-    static short checksumOf( long generation, long pointer )\n+    static short checksumOf(long generation, long pointer)\n     {\n         short result = 0;\n         result ^= ((short) generation) & UNSIGNED_SHORT_MASK;\n@@ -154,7 +154,7 @@ class GenerationSafePointer\n         return result;\n     }\n \n-    public static boolean isEmpty( long generation, long pointer )\n+    public static boolean isEmpty(long generation, long pointer)\n     {\n         return generation == EMPTY_GENERATION && pointer == EMPTY_POINTER;\n     }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
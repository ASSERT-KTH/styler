{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3470",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3470/StandalonePageCacheFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3470/StandalonePageCacheFactory.java\nindex aa136f666d7..dcae5f2f014 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3470/StandalonePageCacheFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3470/StandalonePageCacheFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.impl.muninn;\n \n import org.neo4j.graphdb.config.Configuration;\n@@ -39,19 +40,19 @@ import org.neo4j.memory.GlobalMemoryTracker;\n  */\n public final class StandalonePageCacheFactory\n {\n-    private StandalonePageCacheFactory()\n-    {\n-    }\n+  private StandalonePageCacheFactory()\n+  {\n+  }\n \n-    public static PageCache createPageCache( FileSystemAbstraction fileSystem )\n-    {\n-        SingleFilePageSwapperFactory factory = new SingleFilePageSwapperFactory();\n-        factory.open( fileSystem, Configuration.EMPTY );\n+  public static PageCache createPageCache(FileSystemAbstraction fileSystem)\n+  {\n+    SingleFilePageSwapperFactory factory = new SingleFilePageSwapperFactory();\n+    factory.open(fileSystem, Configuration.EMPTY);\n \n-        PageCacheTracer cacheTracer = PageCacheTracer.NULL;\n-        DefaultPageCursorTracerSupplier cursorTracerSupplier = DefaultPageCursorTracerSupplier.INSTANCE;\n-        VersionContextSupplier versionContextSupplier = EmptyVersionContextSupplier.EMPTY;\n-        MemoryAllocator memoryAllocator = MemoryAllocator.createAllocator( \"8 MiB\", GlobalMemoryTracker.INSTANCE );\n-        return new MuninnPageCache( factory, memoryAllocator, cacheTracer, cursorTracerSupplier, versionContextSupplier );\n-    }\n+    PageCacheTracer cacheTracer = PageCacheTracer.NULL;\n+    DefaultPageCursorTracerSupplier cursorTracerSupplier = DefaultPageCursorTracerSupplier.INSTANCE;\n+    VersionContextSupplier versionContextSupplier = EmptyVersionContextSupplier.EMPTY;\n+    MemoryAllocator memoryAllocator = MemoryAllocator.createAllocator(\"8 MiB\", GlobalMemoryTracker.INSTANCE);\n+    return new MuninnPageCache(factory, memoryAllocator, cacheTracer, cursorTracerSupplier, versionContextSupplier);\n+  }\n }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3470/StandalonePageCacheFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3470/StandalonePageCacheFactory.java\nindex aa136f666d7..02a0aa5de93 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3470/StandalonePageCacheFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3470/StandalonePageCacheFactory.java\n@@ -47,11 +47,10 @@ public final class StandalonePageCacheFactory\n     {\n         SingleFilePageSwapperFactory factory = new SingleFilePageSwapperFactory();\n         factory.open( fileSystem, Configuration.EMPTY );\n-\n-        PageCacheTracer cacheTracer = PageCacheTracer.NULL;\n+PageCacheTracer cacheTracer = PageCacheTracer.NULL;\n         DefaultPageCursorTracerSupplier cursorTracerSupplier = DefaultPageCursorTracerSupplier.INSTANCE;\n         VersionContextSupplier versionContextSupplier = EmptyVersionContextSupplier.EMPTY;\n         MemoryAllocator memoryAllocator = MemoryAllocator.createAllocator( \"8 MiB\", GlobalMemoryTracker.INSTANCE );\n         return new MuninnPageCache( factory, memoryAllocator, cacheTracer, cursorTracerSupplier, versionContextSupplier );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
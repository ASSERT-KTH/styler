{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2719",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "125",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2719/ClusterMemberInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2719/ClusterMemberInfo.java\nindex ccfa9e7ed14..f5957ed0a9f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2719/ClusterMemberInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2719/ClusterMemberInfo.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.management;\n \n import java.beans.ConstructorProperties;\n@@ -34,97 +35,96 @@ import org.neo4j.helpers.collection.Pair;\n  */\n public class ClusterMemberInfo implements Serializable\n {\n-    private static final long serialVersionUID = -514433972115185753L;\n-\n-    private String instanceId;\n-    private boolean available;\n-    private boolean alive;\n-    private String haRole;\n-    private String[] uris;\n-    private String[] roles;\n-\n-    @ConstructorProperties( { \"instanceId\", \"available\", \"alive\", \"haRole\", \"uris\", \"roles\" } )\n-    public ClusterMemberInfo( String instanceId, boolean available, boolean alive, String haRole, String[] uris,\n-                              String[] roles )\n-    {\n-        this.instanceId = instanceId;\n-        this.available = available;\n-        this.alive = alive;\n-        this.haRole = haRole;\n-        this.uris = uris;\n-        this.roles = roles;\n-    }\n+  private static final long serialVersionUID = -514433972115185753L;\n \n-    public String getInstanceId()\n-    {\n-        return instanceId;\n-    }\n+  private String instanceId;\n+  private boolean available;\n+  private boolean alive;\n+  private String haRole;\n+  private String[] uris;\n+  private String[] roles;\n \n-    public boolean isAvailable()\n-    {\n-        return available;\n-    }\n+  @ConstructorProperties({\"instanceId\", \"available\", \"alive\", \"haRole\", \"uris\", \"roles\"})\n+  public ClusterMemberInfo(String instanceId, boolean available, boolean alive, String haRole, String[] uris,\n+                           String[] roles)\n+  {\n+    this.instanceId = instanceId;\n+    this.available = available;\n+    this.alive = alive;\n+    this.haRole = haRole;\n+    this.uris = uris;\n+    this.roles = roles;\n+  }\n \n-    public boolean isAlive()\n-    {\n-        return alive;\n-    }\n+  public String getInstanceId()\n+  {\n+    return instanceId;\n+  }\n \n-    public String getHaRole()\n-    {\n-        return haRole;\n-    }\n+  public boolean isAvailable()\n+  {\n+    return available;\n+  }\n \n-    public String[] getUris()\n-    {\n-        return uris;\n-    }\n+  public boolean isAlive()\n+  {\n+    return alive;\n+  }\n \n-    public String[] getRoles()\n-    {\n-        return roles;\n-    }\n+  public String getHaRole()\n+  {\n+    return haRole;\n+  }\n \n-    @Override\n-    @SuppressWarnings( \"boxing\" )\n-    public String toString()\n-    {\n-        return String.format( \"Neo4jHaInstance[id=%s,available=%s,haRole=%s,HA URI=%s]\", instanceId, available, haRole,\n-                Arrays.toString(uris) );\n-    }\n+  public String[] getUris()\n+  {\n+    return uris;\n+  }\n \n-    public Pair<Neo4jManager, HighAvailability> connect()\n-    {\n-        return connect( null, null );\n-    }\n+  public String[] getRoles()\n+  {\n+    return roles;\n+  }\n+\n+  @Override\n+  @SuppressWarnings(\"boxing\")\n+  public String toString()\n+  {\n+    return String.format(\"Neo4jHaInstance[id=%s,available=%s,haRole=%s,HA URI=%s]\", instanceId, available, haRole,\n+        Arrays.toString(uris));\n+  }\n+\n+  public Pair<Neo4jManager, HighAvailability> connect()\n+  {\n+    return connect(null, null);\n+  }\n \n-    public Pair<Neo4jManager, HighAvailability> connect( String username, String password )\n+  public Pair<Neo4jManager, HighAvailability> connect(String username, String password)\n+  {\n+    URI address = null;\n+    for (String uri : uris)\n     {\n-        URI address = null;\n-        for ( String uri : uris )\n-        {\n-            if ( uri.startsWith( \"jmx\" ) )\n-            {\n+      if (uri.startsWith(\"jmx\"))\n+      {\n //                address = uri;\n-            }\n-        }\n-        if ( address == null )\n-        {\n-            throw new IllegalStateException( \"The instance does not have a public JMX server.\" );\n-        }\n-        Neo4jManager manager = Neo4jManager.get( url(address), username, password, instanceId );\n-        return Pair.of( manager, manager.getHighAvailabilityBean() );\n+      }\n     }\n+    if (address == null)\n+    {\n+      throw new IllegalStateException(\"The instance does not have a public JMX server.\");\n+    }\n+    Neo4jManager manager = Neo4jManager.get(url(address), username, password, instanceId);\n+    return Pair.of(manager, manager.getHighAvailabilityBean());\n+  }\n \n-    private JMXServiceURL url( URI address )\n+  private JMXServiceURL url(URI address)\n+  {\n+    try\n+    {\n+      return new JMXServiceURL(address.toASCIIString());\n+    } catch (MalformedURLException e)\n     {\n-        try\n-        {\n-            return new JMXServiceURL( address.toASCIIString() );\n-        }\n-        catch ( MalformedURLException e )\n-        {\n-            throw new IllegalStateException( \"The instance does not have a valid JMX server URL.\" );\n-        }\n+      throw new IllegalStateException(\"The instance does not have a valid JMX server URL.\");\n     }\n+  }\n }\n",
            "diff_size": 117
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "st-js-st-js",
    "error_id": "4",
    "information": {
        "errors": [
            {
                "line": "85",
                "column": "62",
                "severity": "error",
                "message": "'(' is followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
            }
        ]
    },
    "source_code": "\t\t}\n\n\t\tGenerationDirectory gendir = new GenerationDirectory( //\n\t\t\t\tgeneratedSourcesPath.toFile(), //\n\t\t\t\tnull, //\n\t\t\t\tgeneratedSourcesPathInClasspath.toFile() //",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/4/MainSTJSMojo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler/4/MainSTJSMojo.java\nindex 3ee0bf4046b..34a450a6e50 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/4/MainSTJSMojo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler/4/MainSTJSMojo.java\n@@ -82,7 +82,7 @@ public class MainSTJSMojo extends AbstractSTJSMojo {\n \t\t\tgeneratedSourcesPathInClasspath = artifactPath.relativize(generatedSourcesPath);\r\n \t\t}\r\n \r\n-\t\tGenerationDirectory gendir = new GenerationDirectory( //\r\n+\t\tGenerationDirectory gendir = new GenerationDirectory(//\r\n \t\t\t\tgeneratedSourcesPath.toFile(), //\r\n \t\t\t\tnull, //\r\n \t\t\t\tgeneratedSourcesPathInClasspath.toFile() //\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line has leading space characters; indentation should be performed with tabs only.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/4/MainSTJSMojo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/intellij/4/MainSTJSMojo.java\nindex 3ee0bf4046b..2df9d66f42e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/4/MainSTJSMojo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/intellij/4/MainSTJSMojo.java\n@@ -16,93 +16,94 @@ import org.stjs.generator.GenerationDirectory;\n  */\r\n public class MainSTJSMojo extends AbstractSTJSMojo {\r\n \r\n-\t/**\r\n-\t * The source directories containing the sources to be compiled.\r\n-\t *\r\n-\t * @parameter default-value=\"${project.compileSourceRoots}\"\r\n-\t * @required\r\n-\t */\r\n-\tprivate List<String> compileSourceRoots;\r\n-\r\n-\t/**\r\n-\t * <p>\r\n-\t * Specify where to place generated source files <br>\r\n-\t * Default value for war: \"${project.build.directory}/${project.build.finalName}/generated-js\" <br>\r\n-\t * Default value for jar: \"${project.build.outputDirectory}\"\r\n-\t * </p>\r\n-\t *\r\n-\t * @parameter\r\n-\t */\r\n-\tprivate File generatedSourcesDirectory;\r\n-\r\n-\t/**\r\n-\t * @parameter default-value=\"${project.build.outputDirectory}\"\r\n-\t */\r\n-\tprivate File buildOutputDirectory;\r\n-\r\n-\t/**\r\n-\t * Specifies if the ST-JS runtime support file (stjs.js) must be included in your build output. Default value is true.\r\n-\t * @parameter default-value=\"true\"\r\n-\t */\r\n-\tprivate boolean includeStjsSupportFile;\r\n-\r\n-\t@Override\r\n-\tpublic List<String> getCompileSourceRoots() {\r\n-\t\treturn compileSourceRoots;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tpublic GenerationDirectory getGeneratedSourcesDirectory() {\r\n-\r\n-\t\tPath generatedSourcesPath;\r\n-\t\tif (generatedSourcesDirectory == null) {\r\n-\t\t\tif (project.getPackaging().equals(\"jar\")) {\r\n-\t\t\t\t// default path for .jar packaging\r\n-\t\t\t\tgeneratedSourcesPath = Paths.get(project.getBuild().getOutputDirectory());\r\n-\t\t\t} else {\r\n-\t\t\t\t// default path for .war packaging\r\n-\t\t\t\tgeneratedSourcesPath = Paths.get(project.getBuild().getDirectory(), project.getBuild().getFinalName(), \"generated-js\");\r\n-\t\t\t}\r\n-\r\n-\t\t} else {\r\n-\t\t\t// user specified path\r\n-\t\t\tgeneratedSourcesPath = generatedSourcesDirectory.toPath();\r\n-\t\t}\r\n-\t\tgeneratedSourcesPath = generatedSourcesPath.toAbsolutePath();\r\n-\r\n-\t\tPath generatedSourcesPathInClasspath;\r\n-\t\tif (project.getPackaging().equals(\"jar\")) {\r\n-\t\t\t// .jar packaging\r\n-\t\t\tPath outputDir = Paths.get(project.getBuild().getOutputDirectory()).toAbsolutePath();\r\n-\t\t\tgeneratedSourcesPathInClasspath = outputDir.relativize(generatedSourcesPath);\r\n-\r\n-\t\t} else {\r\n-\t\t\t// .war packaging\r\n-\t\t\tPath artifactPath = Paths.get(project.getBuild().getDirectory(), project.getBuild().getFinalName());\r\n-\t\t\tgeneratedSourcesPathInClasspath = artifactPath.relativize(generatedSourcesPath);\r\n-\t\t}\r\n-\r\n-\t\tGenerationDirectory gendir = new GenerationDirectory( //\r\n-\t\t\t\tgeneratedSourcesPath.toFile(), //\r\n-\t\t\t\tnull, //\r\n-\t\t\t\tgeneratedSourcesPathInClasspath.toFile() //\r\n-\t\t);\r\n-\t\treturn gendir;\r\n-\t}\r\n-\r\n-\t@SuppressWarnings(\"unchecked\")\r\n-\t@Override\r\n-\tprotected List<String> getClasspathElements() throws DependencyResolutionRequiredException {\r\n-\t\treturn project.getCompileClasspathElements();\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tprotected boolean getCopyStjsSupportFile() {\r\n-\t\treturn this.includeStjsSupportFile;\r\n-\t}\r\n-\r\n-\t@Override\r\n-\tprotected File getBuildOutputDirectory() {\r\n-\t\treturn buildOutputDirectory;\r\n-\t}\r\n+    /**\r\n+     * The source directories containing the sources to be compiled.\r\n+     *\r\n+     * @parameter default-value=\"${project.compileSourceRoots}\"\r\n+     * @required\r\n+     */\r\n+    private List<String> compileSourceRoots;\r\n+\r\n+    /**\r\n+     * <p>\r\n+     * Specify where to place generated source files <br>\r\n+     * Default value for war: \"${project.build.directory}/${project.build.finalName}/generated-js\" <br>\r\n+     * Default value for jar: \"${project.build.outputDirectory}\"\r\n+     * </p>\r\n+     *\r\n+     * @parameter\r\n+     */\r\n+    private File generatedSourcesDirectory;\r\n+\r\n+    /**\r\n+     * @parameter default-value=\"${project.build.outputDirectory}\"\r\n+     */\r\n+    private File buildOutputDirectory;\r\n+\r\n+    /**\r\n+     * Specifies if the ST-JS runtime support file (stjs.js) must be included in your build output. Default value is true.\r\n+     *\r\n+     * @parameter default-value=\"true\"\r\n+     */\r\n+    private boolean includeStjsSupportFile;\r\n+\r\n+    @Override\r\n+    public List<String> getCompileSourceRoots() {\r\n+        return compileSourceRoots;\r\n+    }\r\n+\r\n+    @Override\r\n+    public GenerationDirectory getGeneratedSourcesDirectory() {\r\n+\r\n+        Path generatedSourcesPath;\r\n+        if (generatedSourcesDirectory == null) {\r\n+            if (project.getPackaging().equals(\"jar\")) {\r\n+                // default path for .jar packaging\r\n+                generatedSourcesPath = Paths.get(project.getBuild().getOutputDirectory());\r\n+            } else {\r\n+                // default path for .war packaging\r\n+                generatedSourcesPath = Paths.get(project.getBuild().getDirectory(), project.getBuild().getFinalName(), \"generated-js\");\r\n+            }\r\n+\r\n+        } else {\r\n+            // user specified path\r\n+            generatedSourcesPath = generatedSourcesDirectory.toPath();\r\n+        }\r\n+        generatedSourcesPath = generatedSourcesPath.toAbsolutePath();\r\n+\r\n+        Path generatedSourcesPathInClasspath;\r\n+        if (project.getPackaging().equals(\"jar\")) {\r\n+            // .jar packaging\r\n+            Path outputDir = Paths.get(project.getBuild().getOutputDirectory()).toAbsolutePath();\r\n+            generatedSourcesPathInClasspath = outputDir.relativize(generatedSourcesPath);\r\n+\r\n+        } else {\r\n+            // .war packaging\r\n+            Path artifactPath = Paths.get(project.getBuild().getDirectory(), project.getBuild().getFinalName());\r\n+            generatedSourcesPathInClasspath = artifactPath.relativize(generatedSourcesPath);\r\n+        }\r\n+\r\n+        GenerationDirectory gendir = new GenerationDirectory( //\r\n+            generatedSourcesPath.toFile(), //\r\n+            null, //\r\n+            generatedSourcesPathInClasspath.toFile() //\r\n+        );\r\n+        return gendir;\r\n+    }\r\n+\r\n+    @SuppressWarnings(\"unchecked\")\r\n+    @Override\r\n+    protected List<String> getClasspathElements() throws DependencyResolutionRequiredException {\r\n+        return project.getCompileClasspathElements();\r\n+    }\r\n+\r\n+    @Override\r\n+    protected boolean getCopyStjsSupportFile() {\r\n+        return this.includeStjsSupportFile;\r\n+    }\r\n+\r\n+    @Override\r\n+    protected File getBuildOutputDirectory() {\r\n+        return buildOutputDirectory;\r\n+    }\r\n }\r\n",
            "diff_size": 90
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/4/MainSTJSMojo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_random/4/MainSTJSMojo.java\nindex 3ee0bf4046b..34a450a6e50 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/4/MainSTJSMojo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_random/4/MainSTJSMojo.java\n@@ -82,7 +82,7 @@ public class MainSTJSMojo extends AbstractSTJSMojo {\n \t\t\tgeneratedSourcesPathInClasspath = artifactPath.relativize(generatedSourcesPath);\r\n \t\t}\r\n \r\n-\t\tGenerationDirectory gendir = new GenerationDirectory( //\r\n+\t\tGenerationDirectory gendir = new GenerationDirectory(//\r\n \t\t\t\tgeneratedSourcesPath.toFile(), //\r\n \t\t\t\tnull, //\r\n \t\t\t\tgeneratedSourcesPathInClasspath.toFile() //\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/4/MainSTJSMojo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_three_grams/4/MainSTJSMojo.java\nindex 3ee0bf4046b..34a450a6e50 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/errored/1/4/MainSTJSMojo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/st-js-st-js/styler_three_grams/4/MainSTJSMojo.java\n@@ -82,7 +82,7 @@ public class MainSTJSMojo extends AbstractSTJSMojo {\n \t\t\tgeneratedSourcesPathInClasspath = artifactPath.relativize(generatedSourcesPath);\r\n \t\t}\r\n \r\n-\t\tGenerationDirectory gendir = new GenerationDirectory( //\r\n+\t\tGenerationDirectory gendir = new GenerationDirectory(//\r\n \t\t\t\tgeneratedSourcesPath.toFile(), //\r\n \t\t\t\tnull, //\r\n \t\t\t\tgeneratedSourcesPathInClasspath.toFile() //\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
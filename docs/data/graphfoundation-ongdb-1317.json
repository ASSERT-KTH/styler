{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1317",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "80",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "126",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "166",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "171",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "224",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "246",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "287",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "305",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "317",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1317/AbstractClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1317/AbstractClient.java\nindex 7cf82c9737a..94e5931a7fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1317/AbstractClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1317/AbstractClient.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.impl;\n \n import java.io.Serializable;\n@@ -48,285 +49,274 @@ import org.neo4j.shell.Welcome;\n  */\n public abstract class AbstractClient implements ShellClient\n {\n-    private final CtrlCHandler signalHandler;\n-    public static final String WARN_UNTERMINATED_INPUT =\n-            \"Warning: Exiting with unterminated multi-line input.\";\n-    private static final Set<String> EXIT_COMMANDS = new HashSet<>(\n-        Arrays.asList( \"exit\", \"quit\", null ) );\n+  private final CtrlCHandler signalHandler;\n+  public static final String WARN_UNTERMINATED_INPUT =\n+      \"Warning: Exiting with unterminated multi-line input.\";\n+  private static final Set<String> EXIT_COMMANDS = new HashSet<>(\n+      Arrays.asList(\"exit\", \"quit\", null));\n \n-    private Console console;\n-    private long timeConnection;\n-    private volatile boolean end;\n-    private final Collection<String> multiLine = new ArrayList<>();\n-    protected Serializable id;\n-    private String prompt;\n+  private Console console;\n+  private long timeConnection;\n+  private volatile boolean end;\n+  private final Collection<String> multiLine = new ArrayList<>();\n+  protected Serializable id;\n+  private String prompt;\n \n-    protected final Map<String, Serializable> initialSession;\n+  protected final Map<String, Serializable> initialSession;\n \n-    public AbstractClient( Map<String, Serializable> initialSession, CtrlCHandler signalHandler )\n-    {\n-        this.signalHandler = signalHandler;\n-        this.initialSession = initialSession;\n-    }\n+  public AbstractClient(Map<String, Serializable> initialSession, CtrlCHandler signalHandler)\n+  {\n+    this.signalHandler = signalHandler;\n+    this.initialSession = initialSession;\n+  }\n \n-    private Runnable getTerminateAction()\n+  private Runnable getTerminateAction()\n+  {\n+    return () ->\n     {\n-        return () ->\n-        {\n-            try\n-            {\n-                getServer().terminate( getId() );\n-            }\n-            catch ( Exception e )\n-            {\n-                printStackTrace( e );\n-            }\n-        };\n-    }\n+      try\n+      {\n+        getServer().terminate(getId());\n+      } catch (Exception e)\n+      {\n+        printStackTrace(e);\n+      }\n+    };\n+  }\n \n-    @Override\n-    public void grabPrompt()\n+  @Override\n+  public void grabPrompt()\n+  {\n+    init();\n+    Runnable ctrlcAction = getTerminateAction();\n+    while (!end)\n     {\n-        init();\n-        Runnable ctrlcAction = getTerminateAction();\n-        while ( !end )\n+      String command = readLine(getPrompt());\n+      Cancelable cancelable = null;\n+      try\n+      {\n+        cancelable = signalHandler.install(ctrlcAction);\n+        evaluate(command);\n+      } catch (Exception e)\n+      {\n+        printStackTrace(e);\n+      } finally\n+      {\n+        if (cancelable != null)\n         {\n-            String command = readLine( getPrompt() );\n-            Cancelable cancelable = null;\n-            try\n-            {\n-                cancelable = signalHandler.install( ctrlcAction );\n-                evaluate( command );\n-            }\n-            catch ( Exception e )\n-            {\n-                printStackTrace( e );\n-            }\n-            finally\n-            {\n-                if ( cancelable != null )\n-                {\n-                    cancelable.cancel();\n-                }\n-            }\n+          cancelable.cancel();\n         }\n-        this.shutdown();\n+      }\n     }\n+    this.shutdown();\n+  }\n \n-    private void printStackTrace( Exception e )\n+  private void printStackTrace(Exception e)\n+  {\n+    if (this.shouldPrintStackTraces())\n     {\n-        if ( this.shouldPrintStackTraces() )\n-        {\n-            e.printStackTrace();\n-        }\n-        else\n-        {\n-            this.console.format( getShortExceptionMessage( e ) + \"\\n\" );\n-        }\n-    }\n-\n-    @Override\n-    public void evaluate( String line ) throws ShellException\n+      e.printStackTrace();\n+    } else\n     {\n-        evaluate( line, getOutput() );\n+      this.console.format(getShortExceptionMessage(e) + \"\\n\");\n     }\n+  }\n \n-    @Override\n-    public void evaluate( String line, Output out ) throws ShellException\n-    {\n-        if ( EXIT_COMMANDS.contains( line ) )\n-        {\n-            end();\n-            return;\n-        }\n-\n-        boolean success = false;\n-        try\n-        {\n-            String expandedLine = fullLine( line );\n-            Response response = getServer().interpretLine( id, expandedLine, out );\n-            Continuation continuation = response.getContinuation();\n-            switch ( continuation )\n-            {\n-            case INPUT_COMPLETE:\n-                endMultiLine();\n-                break;\n-            case INPUT_INCOMPLETE:\n-                multiLine.add( line );\n-                break;\n-            case EXIT:\n-                getServer().leave( id );\n-                end();\n-                break;\n-            case EXCEPTION_CAUGHT:\n-                endMultiLine();\n-                break;\n-            default:\n-                throw new IllegalStateException( \"Unknown continuation: \" + continuation );\n-            }\n-            prompt = response.getPrompt();\n-            success = true;\n-        }\n-        catch ( RemoteException e )\n-        {\n-            throw ShellException.wrapCause( e );\n-        }\n-        finally\n-        {\n-            if ( !success )\n-            {\n-                endMultiLine();\n-            }\n-        }\n-    }\n+  @Override\n+  public void evaluate(String line) throws ShellException\n+  {\n+    evaluate(line, getOutput());\n+  }\n \n-    private void endMultiLine()\n+  @Override\n+  public void evaluate(String line, Output out) throws ShellException\n+  {\n+    if (EXIT_COMMANDS.contains(line))\n     {\n-        multiLine.clear();\n+      end();\n+      return;\n     }\n \n-    private String fullLine( String line )\n+    boolean success = false;\n+    try\n     {\n-        if ( multiLine.isEmpty() )\n-        {\n-            return line;\n-        }\n-        StringBuilder result = new StringBuilder();\n-        for ( String oneLine : multiLine )\n-        {\n-            result.append( result.length() > 0 ? \"\\n\" : \"\" ).append( oneLine );\n-        }\n-        return result.append( \"\\n\" + line ).toString();\n-    }\n-\n-    @Override\n-    public void end()\n+      String expandedLine = fullLine(line);\n+      Response response = getServer().interpretLine(id, expandedLine, out);\n+      Continuation continuation = response.getContinuation();\n+      switch (continuation)\n+      {\n+        case INPUT_COMPLETE:\n+          endMultiLine();\n+          break;\n+        case INPUT_INCOMPLETE:\n+          multiLine.add(line);\n+          break;\n+        case EXIT:\n+          getServer().leave(id);\n+          end();\n+          break;\n+        case EXCEPTION_CAUGHT:\n+          endMultiLine();\n+          break;\n+        default:\n+          throw new IllegalStateException(\"Unknown continuation: \" + continuation);\n+      }\n+      prompt = response.getPrompt();\n+      success = true;\n+    } catch (RemoteException e)\n     {\n-        end = true;\n-    }\n-\n-    protected static String getShortExceptionMessage( Exception e )\n+      throw ShellException.wrapCause(e);\n+    } finally\n     {\n-        return e.getMessage();\n+      if (!success)\n+      {\n+        endMultiLine();\n+      }\n     }\n+  }\n \n-    @Override\n-    public String getPrompt()\n+  private void endMultiLine()\n+  {\n+    multiLine.clear();\n+  }\n+\n+  private String fullLine(String line)\n+  {\n+    if (multiLine.isEmpty())\n     {\n-        if ( !multiLine.isEmpty() )\n-        {\n-            return \"> \";\n-        }\n-        return prompt;\n+      return line;\n     }\n-\n-    public boolean shouldPrintStackTraces()\n+    StringBuilder result = new StringBuilder();\n+    for (String oneLine : multiLine)\n     {\n-        try\n-        {\n-            String stringValue = (String) getServer().interpretVariable( id, Variables.STACKTRACES_KEY );\n-            return Boolean.parseBoolean( stringValue );\n-        }\n-        catch ( Exception e )\n-        {\n-            return true;\n-        }\n+      result.append(result.length() > 0 ? \"\\n\" : \"\").append(oneLine);\n     }\n+    return result.append(\"\\n\" + line).toString();\n+  }\n \n-    protected void init()\n-    {\n-        try\n-        {\n-            // To make sure we have a connection to our server.\n-            getServer();\n+  @Override\n+  public void end()\n+  {\n+    end = true;\n+  }\n \n-            // Grab a jline console if available, else a standard one.\n-            console = JLineConsole.newConsoleOrNullIfNotFound( this );\n-            if ( console == null )\n-            {\n-                System.out.println( \"Want bash-like features? throw in \" +\n-                        \"jLine (http://jline.sourceforge.net) on the classpath\" );\n-                console = new StandardConsole();\n-            }\n-            getOutput().println();\n-        }\n-        catch ( RemoteException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-    }\n+  protected static String getShortExceptionMessage(Exception e)\n+  {\n+    return e.getMessage();\n+  }\n \n-    protected void sayHi( ShellServer server ) throws RemoteException, ShellException\n+  @Override\n+  public String getPrompt()\n+  {\n+    if (!multiLine.isEmpty())\n     {\n-        Welcome welcome = server.welcome( initialSession );\n-        id = welcome.getId();\n-        prompt = welcome.getPrompt();\n-        if ( !welcome.getMessage().isEmpty() )\n-        {\n-            getOutput().println( welcome.getMessage() );\n-        }\n+      return \"> \";\n     }\n+    return prompt;\n+  }\n \n-    protected String readLine( String prompt )\n+  public boolean shouldPrintStackTraces()\n+  {\n+    try\n     {\n-        return console.readLine( prompt );\n+      String stringValue = (String) getServer().interpretVariable(id, Variables.STACKTRACES_KEY);\n+      return Boolean.parseBoolean(stringValue);\n+    } catch (Exception e)\n+    {\n+      return true;\n     }\n+  }\n \n-    protected void updateTimeForMostRecentConnection()\n+  protected void init()\n+  {\n+    try\n     {\n-        this.timeConnection = System.currentTimeMillis();\n-    }\n+      // To make sure we have a connection to our server.\n+      getServer();\n \n-    @Override\n-    public long timeForMostRecentConnection()\n+      // Grab a jline console if available, else a standard one.\n+      console = JLineConsole.newConsoleOrNullIfNotFound(this);\n+      if (console == null)\n+      {\n+        System.out.println(\"Want bash-like features? throw in \" +\n+            \"jLine (http://jline.sourceforge.net) on the classpath\");\n+        console = new StandardConsole();\n+      }\n+      getOutput().println();\n+    } catch (RemoteException e)\n     {\n-        return timeConnection;\n+      throw new RuntimeException(e);\n     }\n+  }\n \n-    @Override\n-    public void shutdown()\n+  protected void sayHi(ShellServer server) throws RemoteException, ShellException\n+  {\n+    Welcome welcome = server.welcome(initialSession);\n+    id = welcome.getId();\n+    prompt = welcome.getPrompt();\n+    if (!welcome.getMessage().isEmpty())\n     {\n-        if ( !multiLine.isEmpty() )\n-        {\n-            try\n-            {\n-                getOutput().println( WARN_UNTERMINATED_INPUT );\n-            }\n-            catch ( RemoteException e )\n-            {\n-                throw new RuntimeException( e );\n-            }\n-        }\n+      getOutput().println(welcome.getMessage());\n     }\n+  }\n+\n+  protected String readLine(String prompt)\n+  {\n+    return console.readLine(prompt);\n+  }\n+\n+  protected void updateTimeForMostRecentConnection()\n+  {\n+    this.timeConnection = System.currentTimeMillis();\n+  }\n \n-    @Override\n-    public Serializable getId()\n+  @Override\n+  public long timeForMostRecentConnection()\n+  {\n+    return timeConnection;\n+  }\n+\n+  @Override\n+  public void shutdown()\n+  {\n+    if (!multiLine.isEmpty())\n     {\n-        return id;\n+      try\n+      {\n+        getOutput().println(WARN_UNTERMINATED_INPUT);\n+      } catch (RemoteException e)\n+      {\n+        throw new RuntimeException(e);\n+      }\n     }\n+  }\n+\n+  @Override\n+  public Serializable getId()\n+  {\n+    return id;\n+  }\n \n-    protected void tryUnexport( Remote remote )\n+  protected void tryUnexport(Remote remote)\n+  {\n+    try\n     {\n-        try\n-        {\n-            UnicastRemoteObject.unexportObject( remote, true );\n-        }\n-        catch ( NoSuchObjectException e )\n-        {\n-            System.out.println( \"Couldn't unexport: \" + remote );\n-        }\n+      UnicastRemoteObject.unexportObject(remote, true);\n+    } catch (NoSuchObjectException e)\n+    {\n+      System.out.println(\"Couldn't unexport: \" + remote);\n     }\n+  }\n \n-    @Override\n-    public void setSessionVariable( String key, Serializable value ) throws ShellException\n+  @Override\n+  public void setSessionVariable(String key, Serializable value) throws ShellException\n+  {\n+    try\n     {\n-        try\n-        {\n-            getServer().setSessionVariable( id, key, value );\n-        }\n-        catch ( RemoteException e )\n-        {\n-            throw ShellException.wrapCause( e );\n-        }\n+      getServer().setSessionVariable(id, key, value);\n+    } catch (RemoteException e)\n+    {\n+      throw ShellException.wrapCause(e);\n     }\n+  }\n }\n",
            "diff_size": 341
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1317/AbstractClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1317/AbstractClient.java\nindex 7cf82c9737a..9fa5248b0f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1317/AbstractClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1317/AbstractClient.java\n@@ -49,21 +49,20 @@ import org.neo4j.shell.Welcome;\n public abstract class AbstractClient implements ShellClient\n {\n     private final CtrlCHandler signalHandler;\n-    public static final String WARN_UNTERMINATED_INPUT =\n-            \"Warning: Exiting with unterminated multi-line input.\";\n-    private static final Set<String> EXIT_COMMANDS = new HashSet<>(\n-        Arrays.asList( \"exit\", \"quit\", null ) );\n \n-    private Console console;\n+public static final String WARN_UNTERMINATED_INPUT = \"Warning: Exiting with unterminated multi-line input.\";\n+private static final Set<String> EXIT_COMMANDS = new HashSet<>( Arrays.asList( \"exit\", \"quit\", null ) );\n+\n+private Console console;\n     private long timeConnection;\n     private volatile boolean end;\n     private final Collection<String> multiLine = new ArrayList<>();\n     protected Serializable id;\n     private String prompt;\n \n-    protected final Map<String, Serializable> initialSession;\n+    protected final Map<String,Serializable> initialSession;\n \n-    public AbstractClient( Map<String, Serializable> initialSession, CtrlCHandler signalHandler )\n+    public AbstractClient( Map<String,Serializable> initialSession, CtrlCHandler signalHandler )\n     {\n         this.signalHandler = signalHandler;\n         this.initialSession = initialSession;\n@@ -164,7 +163,8 @@ public abstract class AbstractClient implements ShellClient\n             default:\n                 throw new IllegalStateException( \"Unknown continuation: \" + continuation );\n             }\n-            prompt = response.getPrompt();\n+\n+prompt = response.getPrompt();\n             success = true;\n         }\n         catch ( RemoteException e )\n@@ -191,12 +191,14 @@ public abstract class AbstractClient implements ShellClient\n         {\n             return line;\n         }\n-        StringBuilder result = new StringBuilder();\n+\n+StringBuilder result = new StringBuilder();\n         for ( String oneLine : multiLine )\n         {\n             result.append( result.length() > 0 ? \"\\n\" : \"\" ).append( oneLine );\n         }\n-        return result.append( \"\\n\" + line ).toString();\n+\n+return result.append( \"\\n\" + line ).toString();\n     }\n \n     @Override\n@@ -217,7 +219,8 @@ public abstract class AbstractClient implements ShellClient\n         {\n             return \"> \";\n         }\n-        return prompt;\n+\n+return prompt;\n     }\n \n     public boolean shouldPrintStackTraces()\n@@ -244,11 +247,11 @@ public abstract class AbstractClient implements ShellClient\n             console = JLineConsole.newConsoleOrNullIfNotFound( this );\n             if ( console == null )\n             {\n-                System.out.println( \"Want bash-like features? throw in \" +\n-                        \"jLine (http://jline.sourceforge.net) on the classpath\" );\n-                console = new StandardConsole();\n+                System.out.println( \"Want bash-like features? throw in \" + \"jLine (http://jline.sourceforge.net) on the classpath\" );\n+console = new StandardConsole();\n             }\n-            getOutput().println();\n+\n+getOutput().println();\n         }\n         catch ( RemoteException e )\n         {\n@@ -329,4 +332,4 @@ public abstract class AbstractClient implements ShellClient\n             throw ShellException.wrapCause( e );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
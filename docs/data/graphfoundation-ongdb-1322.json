{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1322",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1322/BasicLoginContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1322/BasicLoginContext.java\nindex 8d0f504719e..715ad7fd6bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1322/BasicLoginContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1322/BasicLoginContext.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.auth;\n \n import java.util.function.Function;\n@@ -34,82 +35,82 @@ import static org.neo4j.internal.kernel.api.security.AuthenticationResult.SUCCES\n \n public class BasicLoginContext implements LoginContext\n {\n-    private final BasicAuthSubject authSubject;\n-    private AccessMode accessMode;\n+  private final BasicAuthSubject authSubject;\n+  private AccessMode accessMode;\n+\n+  public BasicLoginContext(User user, AuthenticationResult authenticationResult)\n+  {\n+    this.authSubject = new BasicAuthSubject(user, authenticationResult);\n \n-    public BasicLoginContext( User user, AuthenticationResult authenticationResult )\n+    switch (authenticationResult)\n     {\n-        this.authSubject = new BasicAuthSubject( user, authenticationResult );\n-\n-        switch ( authenticationResult )\n-        {\n-        case SUCCESS:\n-            accessMode = AccessMode.Static.FULL;\n-            break;\n-        case PASSWORD_CHANGE_REQUIRED:\n-            accessMode = AccessMode.Static.CREDENTIALS_EXPIRED;\n-            break;\n-        default:\n-            accessMode = AccessMode.Static.NONE;\n-        }\n+      case SUCCESS:\n+        accessMode = AccessMode.Static.FULL;\n+        break;\n+      case PASSWORD_CHANGE_REQUIRED:\n+        accessMode = AccessMode.Static.CREDENTIALS_EXPIRED;\n+        break;\n+      default:\n+        accessMode = AccessMode.Static.NONE;\n     }\n+  }\n+\n+  private class BasicAuthSubject implements AuthSubject\n+  {\n+    private User user;\n+    private AuthenticationResult authenticationResult;\n \n-    private class BasicAuthSubject implements AuthSubject\n+    BasicAuthSubject(User user, AuthenticationResult authenticationResult)\n     {\n-        private User user;\n-        private AuthenticationResult authenticationResult;\n-\n-        BasicAuthSubject( User user, AuthenticationResult authenticationResult )\n-        {\n-            this.user = user;\n-            this.authenticationResult = authenticationResult;\n-        }\n-\n-        @Override\n-        public void logout()\n-        {\n-            user = null;\n-            authenticationResult = FAILURE;\n-        }\n-\n-        @Override\n-        public AuthenticationResult getAuthenticationResult()\n-        {\n-            return authenticationResult;\n-        }\n-\n-        @Override\n-        public void setPasswordChangeNoLongerRequired()\n-        {\n-            if ( authenticationResult == PASSWORD_CHANGE_REQUIRED )\n-            {\n-                authenticationResult = SUCCESS;\n-                accessMode = AccessMode.Static.FULL;\n-            }\n-        }\n-\n-        @Override\n-        public String username()\n-        {\n-            return user.name();\n-        }\n-\n-        @Override\n-        public boolean hasUsername( String username )\n-        {\n-            return username().equals( username );\n-        }\n+      this.user = user;\n+      this.authenticationResult = authenticationResult;\n     }\n \n     @Override\n-    public AuthSubject subject()\n+    public void logout()\n     {\n-        return authSubject;\n+      user = null;\n+      authenticationResult = FAILURE;\n     }\n \n     @Override\n-    public SecurityContext authorize( Function<String, Integer> propertyIdLookup )\n+    public AuthenticationResult getAuthenticationResult()\n     {\n-        return new SecurityContext( authSubject, accessMode );\n+      return authenticationResult;\n     }\n+\n+    @Override\n+    public void setPasswordChangeNoLongerRequired()\n+    {\n+      if (authenticationResult == PASSWORD_CHANGE_REQUIRED)\n+      {\n+        authenticationResult = SUCCESS;\n+        accessMode = AccessMode.Static.FULL;\n+      }\n+    }\n+\n+    @Override\n+    public String username()\n+    {\n+      return user.name();\n+    }\n+\n+    @Override\n+    public boolean hasUsername(String username)\n+    {\n+      return username().equals(username);\n+    }\n+  }\n+\n+  @Override\n+  public AuthSubject subject()\n+  {\n+    return authSubject;\n+  }\n+\n+  @Override\n+  public SecurityContext authorize(Function<String, Integer> propertyIdLookup)\n+  {\n+    return new SecurityContext(authSubject, accessMode);\n+  }\n }\n",
            "diff_size": 111
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1322/BasicLoginContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1322/BasicLoginContext.java\nindex 8d0f504719e..7beb1e1c6d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1322/BasicLoginContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1322/BasicLoginContext.java\n@@ -40,8 +40,7 @@ public class BasicLoginContext implements LoginContext\n     public BasicLoginContext( User user, AuthenticationResult authenticationResult )\n     {\n         this.authSubject = new BasicAuthSubject( user, authenticationResult );\n-\n-        switch ( authenticationResult )\n+switch ( authenticationResult )\n         {\n         case SUCCESS:\n             accessMode = AccessMode.Static.FULL;\n@@ -108,8 +107,8 @@ public class BasicLoginContext implements LoginContext\n     }\n \n     @Override\n-    public SecurityContext authorize( Function<String, Integer> propertyIdLookup )\n+    public SecurityContext authorize( Function<String,Integer> propertyIdLookup )\n     {\n         return new SecurityContext( authSubject, accessMode );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1322/BasicLoginContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1322/BasicLoginContext.java\nindex 8d0f504719e..9a4bdd29e48 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1322/BasicLoginContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1322/BasicLoginContext.java\n@@ -20,16 +20,16 @@\n package org.neo4j.server.security.auth;\n \n import java.util.function.Function;\n-\n import org.neo4j.internal.kernel.api.security.AccessMode;\n import org.neo4j.internal.kernel.api.security.AuthSubject;\n import org.neo4j.internal.kernel.api.security.AuthenticationResult;\n import org.neo4j.internal.kernel.api.security.LoginContext;\n import org.neo4j.internal.kernel.api.security.SecurityContext;\n import org.neo4j.kernel.impl.security.User;\n-\n import static org.neo4j.internal.kernel.api.security.AuthenticationResult.FAILURE;\n+\n import static org.neo4j.internal.kernel.api.security.AuthenticationResult.PASSWORD_CHANGE_REQUIRED;\n+\n import static org.neo4j.internal.kernel.api.security.AuthenticationResult.SUCCESS;\n \n public class BasicLoginContext implements LoginContext\n@@ -40,7 +40,6 @@ public class BasicLoginContext implements LoginContext\n     public BasicLoginContext( User user, AuthenticationResult authenticationResult )\n     {\n         this.authSubject = new BasicAuthSubject( user, authenticationResult );\n-\n         switch ( authenticationResult )\n         {\n         case SUCCESS:\n@@ -108,8 +107,8 @@ public class BasicLoginContext implements LoginContext\n     }\n \n     @Override\n-    public SecurityContext authorize( Function<String, Integer> propertyIdLookup )\n+    public SecurityContext authorize( Function<String,Integer> propertyIdLookup )\n     {\n         return new SecurityContext( authSubject, accessMode );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
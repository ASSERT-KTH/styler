{
    "project_name": "Plugily-Projects-MurderMystery",
    "error_id": "42",
    "information": {
        "errors": [
            {
                "line": "70",
                "column": "35",
                "severity": "warning",
                "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "      plugin.getLogger().log(Level.WARNING, \"[Reporter service] Error reported!\");\n      Debugger.debug(Level.INFO, \"[Reporter service] Code: {0} ({1})\", conn.getResponseCode(), conn.getResponseMessage());\n    } catch (IOException ignored) {/*cannot connect or there is a problem*/\n    }\n  }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/42/ReporterService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler/42/ReporterService.java\nindex 8d0dc33b12c..b875b5123ec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/42/ReporterService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler/42/ReporterService.java\n@@ -67,7 +67,7 @@ public class ReporterService {\n \n       plugin.getLogger().log(Level.WARNING, \"[Reporter service] Error reported!\");\n       Debugger.debug(Level.INFO, \"[Reporter service] Code: {0} ({1})\", conn.getResponseCode(), conn.getResponseMessage());\n-    } catch (IOException ignored) {/*cannot connect or there is a problem*/\n+    } catch (IOException ignored) { /*cannot connect or there is a problem*/\n     }\n   }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "70",
                    "column": "35",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 2, expected is 4, indentation should be the same level as line 72.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/42/ReporterService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/naturalize/42/ReporterService.java\nindex 8d0dc33b12c..09f171bf9b9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/42/ReporterService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/naturalize/42/ReporterService.java\n@@ -67,8 +67,9 @@ public class ReporterService {\n \n       plugin.getLogger().log(Level.WARNING, \"[Reporter service] Error reported!\");\n       Debugger.debug(Level.INFO, \"[Reporter service] Code: {0} ({1})\", conn.getResponseCode(), conn.getResponseMessage());\n-    } catch (IOException ignored) {/*cannot connect or there is a problem*/\n+    } catch (IOException ignored) {\n+  /*cannot connect or there is a problem*/\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "68",
                    "column": "35",
                    "severity": "warning",
                    "message": "WhitespaceAround: '{' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/42/ReporterService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/codebuff/42/ReporterService.java\nindex 8d0dc33b12c..13ae6c69810 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/42/ReporterService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/codebuff/42/ReporterService.java\n@@ -23,16 +23,15 @@ import java.io.OutputStream;\n import java.net.URL;\n import java.nio.charset.StandardCharsets;\n import java.util.logging.Level;\n-\n import javax.net.ssl.HttpsURLConnection;\n-\n import org.bukkit.plugin.java.JavaPlugin;\n-\n import plugily.projects.murdermystery.utils.Debugger;\n \n /**\n  * Reporter service for reporting exceptions directly to website reporter panel\n  */\n+\n+\n public class ReporterService {\n \n   private JavaPlugin plugin;\n@@ -42,6 +41,7 @@ public class ReporterService {\n   private String error;\n \n   //don't create it outside core\n+\n   ReporterService(JavaPlugin plugin, String pluginName, String pluginVersion, String serverVersion, String error) {\n     this.plugin = plugin;\n     this.pluginName = pluginName;\n@@ -59,16 +59,14 @@ public class ReporterService {\n       conn.setRequestProperty(\"User-Agent\", \"PLService/1.0\");\n       conn.setRequestProperty(\"Content-Type\", \"application/x-www-form-urlencoded\");\n       conn.setDoOutput(true);\n-\n       OutputStream os = conn.getOutputStream();\n       os.write((\"pass=servicereporter&type=\" + pluginName + \"&pluginversion=\" + pluginVersion + \"&serverversion=\" + serverVersion + \"&error=\" + error).getBytes(StandardCharsets.UTF_8));\n       os.flush();\n       os.close();\n-\n       plugin.getLogger().log(Level.WARNING, \"[Reporter service] Error reported!\");\n       Debugger.debug(Level.INFO, \"[Reporter service] Code: {0} ({1})\", conn.getResponseCode(), conn.getResponseMessage());\n     } catch (IOException ignored) {/*cannot connect or there is a problem*/\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/42/ReporterService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler_random/42/ReporterService.java\nindex 8d0dc33b12c..b875b5123ec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/42/ReporterService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler_random/42/ReporterService.java\n@@ -67,7 +67,7 @@ public class ReporterService {\n \n       plugin.getLogger().log(Level.WARNING, \"[Reporter service] Error reported!\");\n       Debugger.debug(Level.INFO, \"[Reporter service] Code: {0} ({1})\", conn.getResponseCode(), conn.getResponseMessage());\n-    } catch (IOException ignored) {/*cannot connect or there is a problem*/\n+    } catch (IOException ignored) { /*cannot connect or there is a problem*/\n     }\n   }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/42/ReporterService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler_three_grams/42/ReporterService.java\nindex 8d0dc33b12c..b875b5123ec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/errored/1/42/ReporterService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Plugily-Projects-MurderMystery/styler_three_grams/42/ReporterService.java\n@@ -67,7 +67,7 @@ public class ReporterService {\n \n       plugin.getLogger().log(Level.WARNING, \"[Reporter service] Error reported!\");\n       Debugger.debug(Level.INFO, \"[Reporter service] Code: {0} ({1})\", conn.getResponseCode(), conn.getResponseMessage());\n-    } catch (IOException ignored) {/*cannot connect or there is a problem*/\n+    } catch (IOException ignored) { /*cannot connect or there is a problem*/\n     }\n   }\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
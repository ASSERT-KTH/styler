{
    "project_name": "zanata-zanata-platform",
    "error_id": "20",
    "information": {
        "errors": [
            {
                "line": "36",
                "column": "27",
                "severity": "error",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": " */\npublic class LanguageList {\n    private LanguageList(){}\n\n    private static By localeId = By.className(\"js-locale-id\");\n    private static By localeAlias = By.className(\"js-locale-alias\");",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/20/LanguageList.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler/20/LanguageList.java\nindex 599d0b4ac0a..72f71d33917 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/20/LanguageList.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler/20/LanguageList.java\n@@ -33,7 +33,7 @@ import java.util.stream.Collectors;\n  * @author Damian Jansen <a href=\"mailto:djansen@redhat.com\">djansen@redhat.com</a>\n  */\n public class LanguageList {\n-    private LanguageList(){}\n+    private LanguageList() { }\n \n     private static By localeId = By.className(\"js-locale-id\");\n     private static By localeAlias = By.className(\"js-locale-alias\");\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/20/LanguageList.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/intellij/20/LanguageList.java\nindex 599d0b4ac0a..ddbd303517e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/20/LanguageList.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/intellij/20/LanguageList.java\n@@ -18,6 +18,7 @@\n  * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA, or see the FSF\n  * site: http://www.fsf.org.\n  */\n+\n package org.zanata.util;\n \n import org.openqa.selenium.By;\n@@ -33,103 +34,104 @@ import java.util.stream.Collectors;\n  * @author Damian Jansen <a href=\"mailto:djansen@redhat.com\">djansen@redhat.com</a>\n  */\n public class LanguageList {\n-    private LanguageList(){}\n-\n-    private static By localeId = By.className(\"js-locale-id\");\n-    private static By localeAlias = By.className(\"js-locale-alias\");\n-    private static By languageActions = By.className(\"button--group\");\n-    private static By dropdown = By.className(\"i--arrow-down\");\n-    private static By aliasInput = By.className(\"form--inline__input\");\n-    private static By setAlias = By.className(\"form--inline__addon\");\n-    private static By addAliasLink = By.linkText(\"Add alias\");\n-    private static By deleteAliasLink = By.className(\"i--trash\");\n-    private static By editAliasLink = By.linkText(\"Edit alias\");\n-\n-    public static List<String> getListedLocales(WebElement localeList) {\n-        return getListElements(localeList)\n-                .stream()\n-                .filter(WebElement::isDisplayed)\n-                .map(li -> li.findElement(localeId).getText())\n-                .collect(Collectors.toList());\n-    }\n-\n-    public static List<WebElement> getListElements(WebElement localeList) {\n-        return localeList.findElements(By.className(\"reveal\"));\n+  private LanguageList() {\n+  }\n+\n+  private static By localeId = By.className(\"js-locale-id\");\n+  private static By localeAlias = By.className(\"js-locale-alias\");\n+  private static By languageActions = By.className(\"button--group\");\n+  private static By dropdown = By.className(\"i--arrow-down\");\n+  private static By aliasInput = By.className(\"form--inline__input\");\n+  private static By setAlias = By.className(\"form--inline__addon\");\n+  private static By addAliasLink = By.linkText(\"Add alias\");\n+  private static By deleteAliasLink = By.className(\"i--trash\");\n+  private static By editAliasLink = By.linkText(\"Edit alias\");\n+\n+  public static List<String> getListedLocales(WebElement localeList) {\n+    return getListElements(localeList)\n+      .stream()\n+      .filter(WebElement::isDisplayed)\n+      .map(li -> li.findElement(localeId).getText())\n+      .collect(Collectors.toList());\n+  }\n+\n+  public static List<WebElement> getListElements(WebElement localeList) {\n+    return localeList.findElements(By.className(\"reveal\"));\n+  }\n+\n+  public static String getLocaleID(WebElement localeListElement) {\n+    return localeListElement.findElement(localeId).getText();\n+  }\n+\n+  public static void toggleEnabled(WebElement localeListElement) {\n+    localeListElement.findElement(languageActions)\n+      .findElements(By.tagName(\"button\")).get(0).click();\n+  }\n+\n+  public static boolean toggleLanguageInList(WebElement localeList,\n+                                             String locale) {\n+    WebElement localeItem = getLocaleEntry(localeList, locale);\n+    try {\n+      LanguageList.toggleEnabled(localeItem);\n+    } catch (NoSuchElementException nsee) {\n+      return false;\n     }\n-\n-    public static String getLocaleID(WebElement localeListElement) {\n-        return localeListElement.findElement(localeId).getText();\n+    return true;\n+  }\n+\n+  public static void clickActionsDropdown(WebElement list, String locale) {\n+    getLocaleEntry(list, locale).findElement(dropdown).click();\n+  }\n+\n+  public static void clickAddAlias(WebElement list, String locale) {\n+    getLocaleEntry(list, locale).findElement(addAliasLink).click();\n+  }\n+\n+  public static void clickEditAlias(WebElement list, String locale) {\n+    getLocaleEntry(list, locale).findElement(editAliasLink).click();\n+  }\n+\n+  public static void enterAlias(WebElement localeList, String locale,\n+                                String alias) {\n+    WebElement field = getLocaleEntry(localeList, locale)\n+      .findElement(aliasInput);\n+    field.clear();\n+    field.sendKeys(alias);\n+  }\n+\n+  public static void setAlias(WebElement localeList, String locale) {\n+    getLocaleEntry(localeList, locale).findElement(setAlias).click();\n+  }\n+\n+  public static void unsetAlias(WebElement localeList, String locale) {\n+    getLocaleEntry(localeList, locale).findElement(deleteAliasLink).click();\n+  }\n+\n+  public static String getAliasForLocale(WebElement list, String locale) {\n+    if (!hasAlias(list, locale)) {\n+      return \"\";\n     }\n \n-    public static void toggleEnabled(WebElement localeListElement) {\n-        localeListElement.findElement(languageActions)\n-                .findElements(By.tagName(\"button\")).get(0).click();\n+    return getLocaleEntry(list, locale).findElement(localeAlias)\n+      .getText();\n+  }\n+\n+  private static boolean hasAlias(WebElement localeList, String locale) {\n+    return getLocaleEntry(localeList, locale).findElements(localeAlias)\n+      .size() > 0;\n+  }\n+\n+  private static WebElement getLocaleEntry(WebElement list, String locale) {\n+    List<WebElement> listElements = LanguageList\n+      .getListElements(list);\n+    for (WebElement localeLi : listElements) {\n+      if (LanguageList.getLocaleID(localeLi).equals(locale)) {\n+        return localeLi;\n+      }\n     }\n+    throw new NoSuchElementException(\"Unable to find locale \" + locale);\n \n-    public static boolean toggleLanguageInList(WebElement localeList,\n-            String locale) {\n-        WebElement localeItem = getLocaleEntry(localeList, locale);\n-        try {\n-            LanguageList.toggleEnabled(localeItem);\n-        } catch (NoSuchElementException nsee) {\n-            return false;\n-        }\n-        return true;\n-    }\n-\n-    public static void clickActionsDropdown(WebElement list, String locale) {\n-        getLocaleEntry(list, locale).findElement(dropdown).click();\n-    }\n-\n-    public static void clickAddAlias(WebElement list, String locale) {\n-        getLocaleEntry(list, locale).findElement(addAliasLink).click();\n-    }\n-\n-    public static void clickEditAlias(WebElement list, String locale) {\n-        getLocaleEntry(list, locale).findElement(editAliasLink).click();\n-    }\n-\n-    public static void enterAlias(WebElement localeList, String locale,\n-            String alias) {\n-        WebElement field = getLocaleEntry(localeList, locale)\n-                .findElement(aliasInput);\n-        field.clear();\n-        field.sendKeys(alias);\n-    }\n-\n-    public static void setAlias(WebElement localeList, String locale) {\n-        getLocaleEntry(localeList, locale).findElement(setAlias).click();\n-    }\n-\n-    public static void unsetAlias(WebElement localeList, String locale) {\n-        getLocaleEntry(localeList, locale).findElement(deleteAliasLink).click();\n-    }\n-\n-    public static String getAliasForLocale(WebElement list, String locale) {\n-        if (!hasAlias(list, locale)) {\n-            return \"\";\n-        }\n-\n-        return getLocaleEntry(list, locale).findElement(localeAlias)\n-                .getText();\n-    }\n-\n-    private static boolean hasAlias(WebElement localeList, String locale) {\n-        return getLocaleEntry(localeList, locale).findElements(localeAlias)\n-                .size() > 0;\n-    }\n-\n-    private static WebElement getLocaleEntry(WebElement list, String locale) {\n-        List<WebElement> listElements = LanguageList\n-                .getListElements(list);\n-        for (WebElement localeLi : listElements) {\n-            if (LanguageList.getLocaleID(localeLi).equals(locale)) {\n-                return localeLi;\n-            }\n-        }\n-        throw new NoSuchElementException(\"Unable to find locale \" + locale);\n-\n-    }\n+  }\n \n }\n \n",
            "diff_size": 157
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "36",
                    "column": "27",
                    "severity": "error",
                    "message": "'{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/20/LanguageList.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/naturalize/20/LanguageList.java\nindex 599d0b4ac0a..6efbf5f9c63 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/20/LanguageList.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/naturalize/20/LanguageList.java\n@@ -131,5 +131,4 @@ public class LanguageList {\n \n     }\n \n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/20/LanguageList.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/codebuff/20/LanguageList.java\nindex 599d0b4ac0a..f6b4702dd2e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/20/LanguageList.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/codebuff/20/LanguageList.java\n@@ -23,7 +23,6 @@ package org.zanata.util;\n import org.openqa.selenium.By;\n import org.openqa.selenium.NoSuchElementException;\n import org.openqa.selenium.WebElement;\n-\n import java.util.List;\n import java.util.stream.Collectors;\n \n@@ -32,8 +31,11 @@ import java.util.stream.Collectors;\n  *\n  * @author Damian Jansen <a href=\"mailto:djansen@redhat.com\">djansen@redhat.com</a>\n  */\n+\n+\n public class LanguageList {\n-    private LanguageList(){}\n+    private LanguageList() {\n+    }\n \n     private static By localeId = By.className(\"js-locale-id\");\n     private static By localeAlias = By.className(\"js-locale-alias\");\n@@ -44,13 +46,8 @@ public class LanguageList {\n     private static By addAliasLink = By.linkText(\"Add alias\");\n     private static By deleteAliasLink = By.className(\"i--trash\");\n     private static By editAliasLink = By.linkText(\"Edit alias\");\n-\n     public static List<String> getListedLocales(WebElement localeList) {\n-        return getListElements(localeList)\n-                .stream()\n-                .filter(WebElement::isDisplayed)\n-                .map(li -> li.findElement(localeId).getText())\n-                .collect(Collectors.toList());\n+        return getListElements(localeList).stream().filter(WebElement::isDisplayed).map(li -> li.findElement(localeId).getText()).collect(Collectors.toList());\n     }\n \n     public static List<WebElement> getListElements(WebElement localeList) {\n@@ -62,12 +59,10 @@ public class LanguageList {\n     }\n \n     public static void toggleEnabled(WebElement localeListElement) {\n-        localeListElement.findElement(languageActions)\n-                .findElements(By.tagName(\"button\")).get(0).click();\n+        localeListElement.findElement(languageActions).findElements(By.tagName(\"button\")).get(0).click();\n     }\n \n-    public static boolean toggleLanguageInList(WebElement localeList,\n-            String locale) {\n+    public static boolean toggleLanguageInList(WebElement localeList, String locale) {\n         WebElement localeItem = getLocaleEntry(localeList, locale);\n         try {\n             LanguageList.toggleEnabled(localeItem);\n@@ -89,10 +84,8 @@ public class LanguageList {\n         getLocaleEntry(list, locale).findElement(editAliasLink).click();\n     }\n \n-    public static void enterAlias(WebElement localeList, String locale,\n-            String alias) {\n-        WebElement field = getLocaleEntry(localeList, locale)\n-                .findElement(aliasInput);\n+    public static void enterAlias(WebElement localeList, String locale, String alias) {\n+        WebElement field = getLocaleEntry(localeList, locale).findElement(aliasInput);\n         field.clear();\n         field.sendKeys(alias);\n     }\n@@ -109,27 +102,20 @@ public class LanguageList {\n         if (!hasAlias(list, locale)) {\n             return \"\";\n         }\n-\n-        return getLocaleEntry(list, locale).findElement(localeAlias)\n-                .getText();\n+        return getLocaleEntry(list, locale).findElement(localeAlias).getText();\n     }\n \n     private static boolean hasAlias(WebElement localeList, String locale) {\n-        return getLocaleEntry(localeList, locale).findElements(localeAlias)\n-                .size() > 0;\n+        return getLocaleEntry(localeList, locale).findElements(localeAlias).size() > 0;\n     }\n \n     private static WebElement getLocaleEntry(WebElement list, String locale) {\n-        List<WebElement> listElements = LanguageList\n-                .getListElements(list);\n+        List<WebElement> listElements = LanguageList.getListElements(list);\n         for (WebElement localeLi : listElements) {\n             if (LanguageList.getLocaleID(localeLi).equals(locale)) {\n                 return localeLi;\n             }\n         }\n         throw new NoSuchElementException(\"Unable to find locale \" + locale);\n-\n     }\n-\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 30
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/20/LanguageList.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler_random/20/LanguageList.java\nindex 599d0b4ac0a..72f71d33917 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/20/LanguageList.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler_random/20/LanguageList.java\n@@ -33,7 +33,7 @@ import java.util.stream.Collectors;\n  * @author Damian Jansen <a href=\"mailto:djansen@redhat.com\">djansen@redhat.com</a>\n  */\n public class LanguageList {\n-    private LanguageList(){}\n+    private LanguageList() { }\n \n     private static By localeId = By.className(\"js-locale-id\");\n     private static By localeAlias = By.className(\"js-locale-alias\");\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/20/LanguageList.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler_three_grams/20/LanguageList.java\nindex 599d0b4ac0a..72f71d33917 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/errored/1/20/LanguageList.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/zanata-zanata-platform/styler_three_grams/20/LanguageList.java\n@@ -33,7 +33,7 @@ import java.util.stream.Collectors;\n  * @author Damian Jansen <a href=\"mailto:djansen@redhat.com\">djansen@redhat.com</a>\n  */\n public class LanguageList {\n-    private LanguageList(){}\n+    private LanguageList() { }\n \n     private static By localeId = By.className(\"js-locale-id\");\n     private static By localeAlias = By.className(\"js-locale-alias\");\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
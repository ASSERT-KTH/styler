{
    "project_name": "LoboEvolution-LoboEvolution",
    "error_id": "77",
    "information": {
        "errors": [
            {
                "line": "48",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": " */\npublic interface HTMLTableRowElement extends HTMLElement {\n\t/**\n\t * Delete a cell from the current row.\n\t *\n\t * @param index The index of the cell to delete, starting from 0. If the index",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "49",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/77/HTMLTableRowElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler/77/HTMLTableRowElement.java\nindex d19c61b08b2..fcef58c4fe2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/77/HTMLTableRowElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler/77/HTMLTableRowElement.java\n@@ -45,7 +45,7 @@ import org.w3c.dom.DOMException;\n  * @version $Id: $Id\n  */\n public interface HTMLTableRowElement extends HTMLElement {\n-\t/**\n+/**\n \t * Delete a cell from the current row.\n \t *\n \t * @param index The index of the cell to delete, starting from 0. If the index\n@@ -57,7 +57,7 @@ public interface HTMLTableRowElement extends HTMLElement {\n \t * @version DOM Level 2\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-\tvoid deleteCell(int index) throws DOMException;\n+ void deleteCell(int index) throws DOMException;\n \n \t/**\n \t * Horizontal alignment of data within cells of this row. See the align\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/77/HTMLTableRowElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/intellij/77/HTMLTableRowElement.java\nindex d19c61b08b2..3cf853726e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/77/HTMLTableRowElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/intellij/77/HTMLTableRowElement.java\n@@ -45,142 +45,142 @@ import org.w3c.dom.DOMException;\n  * @version $Id: $Id\n  */\n public interface HTMLTableRowElement extends HTMLElement {\n-\t/**\n-\t * Delete a cell from the current row.\n-\t *\n-\t * @param index The index of the cell to delete, starting from 0. If the index\n-\t *              is -1 the last cell in the row is deleted.\n-\t * @exception DOMException INDEX_SIZE_ERR: Raised if the specified\n-\t *                         index is greater than or equal to the\n-\t *                         number of cells or if the index is a negative number\n-\t *                         other than -1.\n-\t * @version DOM Level 2\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n-\tvoid deleteCell(int index) throws DOMException;\n-\n-\t/**\n-\t * Horizontal alignment of data within cells of this row. See the align\n-\t * attribute definition in HTML 4.01.\n-\t *\n-\t * @return a {@link java.lang.String} object.\n-\t */\n-\tString getAlign();\n-\n-\t/**\n-\t * Background color for rows. See the bgcolor attribute definition in HTML 4.01.\n-\t * This attribute is deprecated in HTML 4.01.\n-\t *\n-\t * @return a {@link java.lang.String} object.\n-\t */\n-\tString getBgColor();\n-\n-\t/**\n-\t * The collection of cells in this row.\n-\t *\n-\t * @version DOM Level 2\n-\t * @return a {@link org.loboevolution.html.dom.HTMLCollection} object.\n-\t */\n-\tHTMLCollection getCells();\n-\n-\t/**\n-\t * Alignment character for cells in a column. See the char attribute definition\n-\t * in HTML 4.01.\n-\t *\n-\t * @return a {@link java.lang.String} object.\n-\t */\n-\tString getCh();\n-\n-\t/**\n-\t * Offset of alignment character. See the charoff attribute definition in HTML\n-\t * 4.01.\n-\t *\n-\t * @return a {@link java.lang.String} object.\n-\t */\n-\tString getChOff();\n-\n-\t/**\n-\t * This is in logical order and not in document order. The rowIndex\n-\t * does take into account sections ( THEAD, TFOOT, or\n-\t * TBODY) within the table, placing THEAD rows first\n-\t * in the index, followed by TBODY rows, followed by\n-\t * TFOOT rows.\n-\t *\n-\t * @version DOM Level 2\n-\t * @return a int.\n-\t */\n-\tint getRowIndex();\n-\n-\t/**\n-\t * The index of this row, relative to the current section ( THEAD,\n-\t * TFOOT, or TBODY), starting from 0.\n-\t *\n-\t * @version DOM Level 2\n-\t * @return a int.\n-\t */\n-\tint getSectionRowIndex();\n-\n-\t/**\n-\t * Vertical alignment of data within cells of this row. See the valign attribute\n-\t * definition in HTML 4.01.\n-\t *\n-\t * @return a {@link java.lang.String} object.\n-\t */\n-\tString getVAlign();\n-\n-\t/**\n-\t * Insert an empty TD cell into this row. If index is\n-\t * -1 or equal to the number of cells, the new cell is appended.\n-\t *\n-\t * @param index The place to insert the cell, starting from 0.\n-\t * @return The newly created cell.\n-\t * @exception DOMException INDEX_SIZE_ERR: Raised if the specified\n-\t *                         index is greater than the number of\n-\t *                         cells or if the index is a negative number other than\n-\t *                         -1.\n-\t * @version DOM Level 2\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n-\tHTMLElement insertCell(int index) throws DOMException;\n-\n-\t/**\n-\t * Horizontal alignment of data within cells of this row. See the align\n-\t * attribute definition in HTML 4.01.\n-\t *\n-\t * @param align a {@link java.lang.String} object.\n-\t */\n-\tvoid setAlign(String align);\n-\n-\t/**\n-\t * Background color for rows. See the bgcolor attribute definition in HTML 4.01.\n-\t * This attribute is deprecated in HTML 4.01.\n-\t *\n-\t * @param bgColor a {@link java.lang.String} object.\n-\t */\n-\tvoid setBgColor(String bgColor);\n-\n-\t/**\n-\t * Alignment character for cells in a column. See the char attribute definition\n-\t * in HTML 4.01.\n-\t *\n-\t * @param ch a {@link java.lang.String} object.\n-\t */\n-\tvoid setCh(String ch);\n-\n-\t/**\n-\t * Offset of alignment character. See the charoff attribute definition in HTML\n-\t * 4.01.\n-\t *\n-\t * @param chOff a {@link java.lang.String} object.\n-\t */\n-\tvoid setChOff(String chOff);\n-\n-\t/**\n-\t * Vertical alignment of data within cells of this row. See the valign attribute\n-\t * definition in HTML 4.01.\n-\t *\n-\t * @param vAlign a {@link java.lang.String} object.\n-\t */\n-\tvoid setVAlign(String vAlign);\n+    /**\n+     * Delete a cell from the current row.\n+     *\n+     * @param index The index of the cell to delete, starting from 0. If the index\n+     *              is -1 the last cell in the row is deleted.\n+     * @throws DOMException             INDEX_SIZE_ERR: Raised if the specified\n+     *                                  index is greater than or equal to the\n+     *                                  number of cells or if the index is a negative number\n+     *                                  other than -1.\n+     * @throws org.w3c.dom.DOMException if any.\n+     * @version DOM Level 2\n+     */\n+    void deleteCell(int index) throws DOMException;\n+\n+    /**\n+     * Horizontal alignment of data within cells of this row. See the align\n+     * attribute definition in HTML 4.01.\n+     *\n+     * @return a {@link java.lang.String} object.\n+     */\n+    String getAlign();\n+\n+    /**\n+     * Background color for rows. See the bgcolor attribute definition in HTML 4.01.\n+     * This attribute is deprecated in HTML 4.01.\n+     *\n+     * @return a {@link java.lang.String} object.\n+     */\n+    String getBgColor();\n+\n+    /**\n+     * The collection of cells in this row.\n+     *\n+     * @return a {@link org.loboevolution.html.dom.HTMLCollection} object.\n+     * @version DOM Level 2\n+     */\n+    HTMLCollection getCells();\n+\n+    /**\n+     * Alignment character for cells in a column. See the char attribute definition\n+     * in HTML 4.01.\n+     *\n+     * @return a {@link java.lang.String} object.\n+     */\n+    String getCh();\n+\n+    /**\n+     * Offset of alignment character. See the charoff attribute definition in HTML\n+     * 4.01.\n+     *\n+     * @return a {@link java.lang.String} object.\n+     */\n+    String getChOff();\n+\n+    /**\n+     * This is in logical order and not in document order. The rowIndex\n+     * does take into account sections ( THEAD, TFOOT, or\n+     * TBODY) within the table, placing THEAD rows first\n+     * in the index, followed by TBODY rows, followed by\n+     * TFOOT rows.\n+     *\n+     * @return a int.\n+     * @version DOM Level 2\n+     */\n+    int getRowIndex();\n+\n+    /**\n+     * The index of this row, relative to the current section ( THEAD,\n+     * TFOOT, or TBODY), starting from 0.\n+     *\n+     * @return a int.\n+     * @version DOM Level 2\n+     */\n+    int getSectionRowIndex();\n+\n+    /**\n+     * Vertical alignment of data within cells of this row. See the valign attribute\n+     * definition in HTML 4.01.\n+     *\n+     * @return a {@link java.lang.String} object.\n+     */\n+    String getVAlign();\n+\n+    /**\n+     * Insert an empty TD cell into this row. If index is\n+     * -1 or equal to the number of cells, the new cell is appended.\n+     *\n+     * @param index The place to insert the cell, starting from 0.\n+     * @return The newly created cell.\n+     * @throws DOMException             INDEX_SIZE_ERR: Raised if the specified\n+     *                                  index is greater than the number of\n+     *                                  cells or if the index is a negative number other than\n+     *                                  -1.\n+     * @throws org.w3c.dom.DOMException if any.\n+     * @version DOM Level 2\n+     */\n+    HTMLElement insertCell(int index) throws DOMException;\n+\n+    /**\n+     * Horizontal alignment of data within cells of this row. See the align\n+     * attribute definition in HTML 4.01.\n+     *\n+     * @param align a {@link java.lang.String} object.\n+     */\n+    void setAlign(String align);\n+\n+    /**\n+     * Background color for rows. See the bgcolor attribute definition in HTML 4.01.\n+     * This attribute is deprecated in HTML 4.01.\n+     *\n+     * @param bgColor a {@link java.lang.String} object.\n+     */\n+    void setBgColor(String bgColor);\n+\n+    /**\n+     * Alignment character for cells in a column. See the char attribute definition\n+     * in HTML 4.01.\n+     *\n+     * @param ch a {@link java.lang.String} object.\n+     */\n+    void setCh(String ch);\n+\n+    /**\n+     * Offset of alignment character. See the charoff attribute definition in HTML\n+     * 4.01.\n+     *\n+     * @param chOff a {@link java.lang.String} object.\n+     */\n+    void setChOff(String chOff);\n+\n+    /**\n+     * Vertical alignment of data within cells of this row. See the valign attribute\n+     * definition in HTML 4.01.\n+     *\n+     * @param vAlign a {@link java.lang.String} object.\n+     */\n+    void setVAlign(String vAlign);\n \n }\n",
            "diff_size": 137
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/77/HTMLTableRowElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/codebuff/77/HTMLTableRowElement.java\nindex d19c61b08b2..b81c6687222 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/77/HTMLTableRowElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/codebuff/77/HTMLTableRowElement.java\n@@ -44,143 +44,174 @@ import org.w3c.dom.DOMException;\n  * @author utente\n  * @version $Id: $Id\n  */\n+\n+\n public interface HTMLTableRowElement extends HTMLElement {\n-\t/**\n-\t * Delete a cell from the current row.\n-\t *\n-\t * @param index The index of the cell to delete, starting from 0. If the index\n-\t *              is -1 the last cell in the row is deleted.\n-\t * @exception DOMException INDEX_SIZE_ERR: Raised if the specified\n-\t *                         index is greater than or equal to the\n-\t *                         number of cells or if the index is a negative number\n-\t *                         other than -1.\n-\t * @version DOM Level 2\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n-\tvoid deleteCell(int index) throws DOMException;\n-\n-\t/**\n-\t * Horizontal alignment of data within cells of this row. See the align\n-\t * attribute definition in HTML 4.01.\n-\t *\n-\t * @return a {@link java.lang.String} object.\n-\t */\n-\tString getAlign();\n-\n-\t/**\n-\t * Background color for rows. See the bgcolor attribute definition in HTML 4.01.\n-\t * This attribute is deprecated in HTML 4.01.\n-\t *\n-\t * @return a {@link java.lang.String} object.\n-\t */\n-\tString getBgColor();\n-\n-\t/**\n-\t * The collection of cells in this row.\n-\t *\n-\t * @version DOM Level 2\n-\t * @return a {@link org.loboevolution.html.dom.HTMLCollection} object.\n-\t */\n-\tHTMLCollection getCells();\n-\n-\t/**\n-\t * Alignment character for cells in a column. See the char attribute definition\n-\t * in HTML 4.01.\n-\t *\n-\t * @return a {@link java.lang.String} object.\n-\t */\n-\tString getCh();\n-\n-\t/**\n-\t * Offset of alignment character. See the charoff attribute definition in HTML\n-\t * 4.01.\n-\t *\n-\t * @return a {@link java.lang.String} object.\n-\t */\n-\tString getChOff();\n-\n-\t/**\n-\t * This is in logical order and not in document order. The rowIndex\n-\t * does take into account sections ( THEAD, TFOOT, or\n-\t * TBODY) within the table, placing THEAD rows first\n-\t * in the index, followed by TBODY rows, followed by\n-\t * TFOOT rows.\n-\t *\n-\t * @version DOM Level 2\n-\t * @return a int.\n-\t */\n-\tint getRowIndex();\n-\n-\t/**\n-\t * The index of this row, relative to the current section ( THEAD,\n-\t * TFOOT, or TBODY), starting from 0.\n-\t *\n-\t * @version DOM Level 2\n-\t * @return a int.\n-\t */\n-\tint getSectionRowIndex();\n-\n-\t/**\n-\t * Vertical alignment of data within cells of this row. See the valign attribute\n-\t * definition in HTML 4.01.\n-\t *\n-\t * @return a {@link java.lang.String} object.\n-\t */\n-\tString getVAlign();\n-\n-\t/**\n-\t * Insert an empty TD cell into this row. If index is\n-\t * -1 or equal to the number of cells, the new cell is appended.\n-\t *\n-\t * @param index The place to insert the cell, starting from 0.\n-\t * @return The newly created cell.\n-\t * @exception DOMException INDEX_SIZE_ERR: Raised if the specified\n-\t *                         index is greater than the number of\n-\t *                         cells or if the index is a negative number other than\n-\t *                         -1.\n-\t * @version DOM Level 2\n-\t * @throws org.w3c.dom.DOMException if any.\n-\t */\n-\tHTMLElement insertCell(int index) throws DOMException;\n-\n-\t/**\n-\t * Horizontal alignment of data within cells of this row. See the align\n-\t * attribute definition in HTML 4.01.\n-\t *\n-\t * @param align a {@link java.lang.String} object.\n-\t */\n-\tvoid setAlign(String align);\n-\n-\t/**\n-\t * Background color for rows. See the bgcolor attribute definition in HTML 4.01.\n-\t * This attribute is deprecated in HTML 4.01.\n-\t *\n-\t * @param bgColor a {@link java.lang.String} object.\n-\t */\n-\tvoid setBgColor(String bgColor);\n-\n-\t/**\n-\t * Alignment character for cells in a column. See the char attribute definition\n-\t * in HTML 4.01.\n-\t *\n-\t * @param ch a {@link java.lang.String} object.\n-\t */\n-\tvoid setCh(String ch);\n-\n-\t/**\n-\t * Offset of alignment character. See the charoff attribute definition in HTML\n-\t * 4.01.\n-\t *\n-\t * @param chOff a {@link java.lang.String} object.\n-\t */\n-\tvoid setChOff(String chOff);\n-\n-\t/**\n-\t * Vertical alignment of data within cells of this row. See the valign attribute\n-\t * definition in HTML 4.01.\n-\t *\n-\t * @param vAlign a {@link java.lang.String} object.\n-\t */\n-\tvoid setVAlign(String vAlign);\n-\n-}\n+    /**\n+     * Delete a cell from the current row.\n+     *\n+     * @param index The index of the cell to delete, starting from 0. If the index\n+     *              is -1 the last cell in the row is deleted.\n+     * @exception DOMException INDEX_SIZE_ERR: Raised if the specified\n+     *                         index is greater than or equal to the\n+     *                         number of cells or if the index is a negative number\n+     *                         other than -1.\n+     * @version DOM Level 2\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n+    void deleteCell(int index) throws DOMException;\n+\n+    /**\n+     * Horizontal alignment of data within cells of this row. See the align\n+     * attribute definition in HTML 4.01.\n+     *\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n+    String getAlign();\n+\n+    /**\n+     * Background color for rows. See the bgcolor attribute definition in HTML 4.01.\n+     * This attribute is deprecated in HTML 4.01.\n+     *\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n+    String getBgColor();\n+\n+    /**\n+     * The collection of cells in this row.\n+     *\n+     * @version DOM Level 2\n+     * @return a {@link org.loboevolution.html.dom.HTMLCollection} object.\n+     */\n+\n+\n+    HTMLCollection getCells();\n+\n+    /**\n+     * Alignment character for cells in a column. See the char attribute definition\n+     * in HTML 4.01.\n+     *\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n+    String getCh();\n+\n+    /**\n+     * Offset of alignment character. See the charoff attribute definition in HTML\n+     * 4.01.\n+     *\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n+    String getChOff();\n+\n+    /**\n+     * This is in logical order and not in document order. The rowIndex\n+     * does take into account sections ( THEAD, TFOOT, or\n+     * TBODY) within the table, placing THEAD rows first\n+     * in the index, followed by TBODY rows, followed by\n+     * TFOOT rows.\n+     *\n+     * @version DOM Level 2\n+     * @return a int.\n+     */\n+\n+\n+    int getRowIndex();\n+\n+    /**\n+     * The index of this row, relative to the current section ( THEAD,\n+     * TFOOT, or TBODY), starting from 0.\n+     *\n+     * @version DOM Level 2\n+     * @return a int.\n+     */\n+\n+\n+    int getSectionRowIndex();\n+\n+    /**\n+     * Vertical alignment of data within cells of this row. See the valign attribute\n+     * definition in HTML 4.01.\n+     *\n+     * @return a {@link java.lang.String} object.\n+     */\n+\n+\n+    String getVAlign();\n+\n+    /**\n+     * Insert an empty TD cell into this row. If index is\n+     * -1 or equal to the number of cells, the new cell is appended.\n+     *\n+     * @param index The place to insert the cell, starting from 0.\n+     * @return The newly created cell.\n+     * @exception DOMException INDEX_SIZE_ERR: Raised if the specified\n+     *                         index is greater than the number of\n+     *                         cells or if the index is a negative number other than\n+     *                         -1.\n+     * @version DOM Level 2\n+     * @throws org.w3c.dom.DOMException if any.\n+     */\n+\n+\n+    HTMLElement insertCell(int index) throws DOMException;\n+\n+    /**\n+     * Horizontal alignment of data within cells of this row. See the align\n+     * attribute definition in HTML 4.01.\n+     *\n+     * @param align a {@link java.lang.String} object.\n+     */\n+\n+\n+    void setAlign(String align);\n+\n+    /**\n+     * Background color for rows. See the bgcolor attribute definition in HTML 4.01.\n+     * This attribute is deprecated in HTML 4.01.\n+     *\n+     * @param bgColor a {@link java.lang.String} object.\n+     */\n+\n+\n+    void setBgColor(String bgColor);\n+\n+    /**\n+     * Alignment character for cells in a column. See the char attribute definition\n+     * in HTML 4.01.\n+     *\n+     * @param ch a {@link java.lang.String} object.\n+     */\n+\n+\n+    void setCh(String ch);\n+\n+    /**\n+     * Offset of alignment character. See the charoff attribute definition in HTML\n+     * 4.01.\n+     *\n+     * @param chOff a {@link java.lang.String} object.\n+     */\n+\n+\n+    void setChOff(String chOff);\n+\n+    /**\n+     * Vertical alignment of data within cells of this row. See the valign attribute\n+     * definition in HTML 4.01.\n+     *\n+     * @param vAlign a {@link java.lang.String} object.\n+     */\n+\n+\n+    void setVAlign(String vAlign);\n+}\n\\ No newline at end of file\n",
            "diff_size": 170
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "50",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/77/HTMLTableRowElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_random/77/HTMLTableRowElement.java\nindex d19c61b08b2..9583d0a3456 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/77/HTMLTableRowElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_random/77/HTMLTableRowElement.java\n@@ -45,7 +45,8 @@ import org.w3c.dom.DOMException;\n  * @version $Id: $Id\n  */\n public interface HTMLTableRowElement extends HTMLElement {\n-\t/**\n+\n+    /**\n \t * Delete a cell from the current row.\n \t *\n \t * @param index The index of the cell to delete, starting from 0. If the index\n@@ -57,7 +58,8 @@ public interface HTMLTableRowElement extends HTMLElement {\n \t * @version DOM Level 2\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-\tvoid deleteCell(int index) throws DOMException;\n+\n+void deleteCell(int index) throws DOMException;\n \n \t/**\n \t * Horizontal alignment of data within cells of this row. See the align\n",
            "diff_size": 4
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "49",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/77/HTMLTableRowElement.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_three_grams/77/HTMLTableRowElement.java\nindex d19c61b08b2..fcef58c4fe2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/errored/1/77/HTMLTableRowElement.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/LoboEvolution-LoboEvolution/styler_three_grams/77/HTMLTableRowElement.java\n@@ -45,7 +45,7 @@ import org.w3c.dom.DOMException;\n  * @version $Id: $Id\n  */\n public interface HTMLTableRowElement extends HTMLElement {\n-\t/**\n+/**\n \t * Delete a cell from the current row.\n \t *\n \t * @param index The index of the cell to delete, starting from 0. If the index\n@@ -57,7 +57,7 @@ public interface HTMLTableRowElement extends HTMLElement {\n \t * @version DOM Level 2\n \t * @throws org.w3c.dom.DOMException if any.\n \t */\n-\tvoid deleteCell(int index) throws DOMException;\n+ void deleteCell(int index) throws DOMException;\n \n \t/**\n \t * Horizontal alignment of data within cells of this row. See the align\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4551",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4551/PointArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4551/PointArray.java\nindex a5f8b6291f8..30f85224c40 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4551/PointArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4551/PointArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.util.Arrays;\n@@ -27,70 +28,70 @@ import org.neo4j.values.ValueMapper;\n \n public class PointArray extends NonPrimitiveArray<PointValue>\n {\n-    private final PointValue[] value;\n+  private final PointValue[] value;\n \n-    PointArray( PointValue[] value )\n-    {\n-        assert value != null;\n-        this.value = value;\n-    }\n+  PointArray(PointValue[] value)\n+  {\n+    assert value != null;\n+    this.value = value;\n+  }\n \n-    @Override\n-    protected PointValue[] value()\n-    {\n-        return value;\n-    }\n+  @Override\n+  protected PointValue[] value()\n+  {\n+    return value;\n+  }\n \n-    public PointValue pointValue( int offset )\n-    {\n-        return value()[offset];\n-    }\n+  public PointValue pointValue(int offset)\n+  {\n+    return value()[offset];\n+  }\n \n-    @Override\n-    public boolean equals( Geometry[] x )\n-    {\n-        return Arrays.equals( value(), x );\n-    }\n+  @Override\n+  public boolean equals(Geometry[] x)\n+  {\n+    return Arrays.equals(value(), x);\n+  }\n \n-    @Override\n-    public boolean equals( Value other )\n-    {\n-        return other instanceof PointArray && Arrays.equals( this.value(), ((PointArray) other).value() );\n-    }\n+  @Override\n+  public boolean equals(Value other)\n+  {\n+    return other instanceof PointArray && Arrays.equals(this.value(), ((PointArray) other).value());\n+  }\n \n-    @Override\n-    public ValueGroup valueGroup()\n-    {\n-        return ValueGroup.GEOMETRY_ARRAY;\n-    }\n+  @Override\n+  public ValueGroup valueGroup()\n+  {\n+    return ValueGroup.GEOMETRY_ARRAY;\n+  }\n \n-    @Override\n-    public <T> T map( ValueMapper<T> mapper )\n-    {\n-        return mapper.mapPointArray( this );\n-    }\n+  @Override\n+  public <T> T map(ValueMapper<T> mapper)\n+  {\n+    return mapper.mapPointArray(this);\n+  }\n \n-    @Override\n-    public <E extends Exception> void writeTo( ValueWriter<E> writer ) throws E\n-    {\n-        PrimitiveArrayWriting.writeTo( writer, value() );\n-    }\n+  @Override\n+  public <E extends Exception> void writeTo(ValueWriter<E> writer) throws E\n+  {\n+    PrimitiveArrayWriting.writeTo(writer, value());\n+  }\n \n-    @Override\n-    public AnyValue value( int offset )\n-    {\n-        return Values.point( value[offset] );\n-    }\n+  @Override\n+  public AnyValue value(int offset)\n+  {\n+    return Values.point(value[offset]);\n+  }\n \n-    @Override\n-    int unsafeCompareTo( Value otherValue )\n-    {\n-        return compareToNonPrimitiveArray( (PointArray) otherValue );\n-    }\n+  @Override\n+  int unsafeCompareTo(Value otherValue)\n+  {\n+    return compareToNonPrimitiveArray((PointArray) otherValue);\n+  }\n \n-    @Override\n-    public String getTypeName()\n-    {\n-        return \"PointArray\";\n-    }\n+  @Override\n+  public String getTypeName()\n+  {\n+    return \"PointArray\";\n+  }\n }\n",
            "diff_size": 56
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4551/PointArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4551/PointArray.java\nindex a5f8b6291f8..e9ae7a68614 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4551/PointArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4551/PointArray.java\n@@ -93,4 +93,4 @@ public class PointArray extends NonPrimitiveArray<PointValue>\n     {\n         return \"PointArray\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "57",
                    "column": "43",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4551/PointArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4551/PointArray.java\nindex a5f8b6291f8..cf9a60224ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4551/PointArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4551/PointArray.java\n@@ -20,7 +20,6 @@\n package org.neo4j.values.storable;\n \n import java.util.Arrays;\n-\n import org.neo4j.graphdb.spatial.Geometry;\n import org.neo4j.values.AnyValue;\n import org.neo4j.values.ValueMapper;\n@@ -43,7 +42,7 @@ public class PointArray extends NonPrimitiveArray<PointValue>\n \n     public PointValue pointValue( int offset )\n     {\n-        return value()[offset];\n+        return value()[ offset];\n     }\n \n     @Override\n@@ -55,7 +54,7 @@ public class PointArray extends NonPrimitiveArray<PointValue>\n     @Override\n     public boolean equals( Value other )\n     {\n-        return other instanceof PointArray && Arrays.equals( this.value(), ((PointArray) other).value() );\n+        return other instanceof PointArray&& Arrays.equals( this.value(), ((PointArray) other).value() );\n     }\n \n     @Override\n@@ -79,7 +78,7 @@ public class PointArray extends NonPrimitiveArray<PointValue>\n     @Override\n     public AnyValue value( int offset )\n     {\n-        return Values.point( value[offset] );\n+        return Values.point( value[ offset] );\n     }\n \n     @Override\n@@ -93,4 +92,4 @@ public class PointArray extends NonPrimitiveArray<PointValue>\n     {\n         return \"PointArray\";\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
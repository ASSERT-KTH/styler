{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3817",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3817/PointerChecking.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3817/PointerChecking.java\nindex 585ed865d4d..f8bb8193a04 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3817/PointerChecking.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3817/PointerChecking.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import org.neo4j.io.pagecache.PageCursor;\n@@ -26,51 +27,51 @@ import org.neo4j.io.pagecache.PageCursor;\n  */\n class PointerChecking\n {\n-    static final String WRITER_TRAVERSE_OLD_STATE_MESSAGE =\n-                    \"Writer traversed to a tree node that has a valid successor, \" +\n-                    \"This is most likely due to failure to checkpoint the tree before shutdown and/or tree state \" +\n-                    \"being out of date.\";\n+  static final String WRITER_TRAVERSE_OLD_STATE_MESSAGE =\n+      \"Writer traversed to a tree node that has a valid successor, \" +\n+          \"This is most likely due to failure to checkpoint the tree before shutdown and/or tree state \" +\n+          \"being out of date.\";\n+\n+  private PointerChecking()\n+  {\n+  }\n \n-    private PointerChecking()\n+  /**\n+   * Checks a read pointer for success/failure and throws appropriate exception with failure information\n+   * if failure. Must be called after a consistent read from page cache (after {@link PageCursor#shouldRetry()}.\n+   *\n+   * @param result      result from {@link GenerationSafePointerPair#FLAG_READ} or\n+   *                    {@link GenerationSafePointerPair#write(PageCursor, long, long, long)}.\n+   * @param allowNoNode If {@link TreeNode#NO_NODE_FLAG} is allowed as pointer value.\n+   */\n+  static void checkPointer(long result, boolean allowNoNode)\n+  {\n+    GenerationSafePointerPair.assertSuccess(result);\n+    if (allowNoNode && !TreeNode.isNode(result))\n     {\n+      return;\n     }\n-\n-    /**\n-     * Checks a read pointer for success/failure and throws appropriate exception with failure information\n-     * if failure. Must be called after a consistent read from page cache (after {@link PageCursor#shouldRetry()}.\n-     *\n-     * @param result result from {@link GenerationSafePointerPair#FLAG_READ} or\n-     * {@link GenerationSafePointerPair#write(PageCursor, long, long, long)}.\n-     * @param allowNoNode If {@link TreeNode#NO_NODE_FLAG} is allowed as pointer value.\n-     */\n-    static void checkPointer( long result, boolean allowNoNode )\n+    if (result < IdSpace.MIN_TREE_NODE_ID)\n     {\n-        GenerationSafePointerPair.assertSuccess( result );\n-        if ( allowNoNode && !TreeNode.isNode( result ) )\n-        {\n-            return;\n-        }\n-        if ( result < IdSpace.MIN_TREE_NODE_ID )\n-        {\n-            throw new TreeInconsistencyException( \"Pointer to id \" + result + \" not allowed. Minimum node id allowed is \" +\n-                    IdSpace.MIN_TREE_NODE_ID );\n-        }\n+      throw new TreeInconsistencyException(\"Pointer to id \" + result + \" not allowed. Minimum node id allowed is \" +\n+          IdSpace.MIN_TREE_NODE_ID);\n     }\n+  }\n \n-    /**\n-     * Assert cursor rest on a node that does not have a valid (not crashed) successor.\n-     *\n-     * @param cursor PageCursor resting on a tree node.\n-     * @param stableGeneration Current stable generation of tree.\n-     * @param unstableGeneration Current unstable generation of tree.\n-     */\n-    static boolean assertNoSuccessor( PageCursor cursor, long stableGeneration, long unstableGeneration )\n+  /**\n+   * Assert cursor rest on a node that does not have a valid (not crashed) successor.\n+   *\n+   * @param cursor             PageCursor resting on a tree node.\n+   * @param stableGeneration   Current stable generation of tree.\n+   * @param unstableGeneration Current unstable generation of tree.\n+   */\n+  static boolean assertNoSuccessor(PageCursor cursor, long stableGeneration, long unstableGeneration)\n+  {\n+    long successor = TreeNode.successor(cursor, stableGeneration, unstableGeneration);\n+    if (TreeNode.isNode(successor))\n     {\n-        long successor = TreeNode.successor( cursor, stableGeneration, unstableGeneration );\n-        if ( TreeNode.isNode( successor ) )\n-        {\n-            throw new TreeInconsistencyException( WRITER_TRAVERSE_OLD_STATE_MESSAGE );\n-        }\n-        return true;\n+      throw new TreeInconsistencyException(WRITER_TRAVERSE_OLD_STATE_MESSAGE);\n     }\n+    return true;\n+  }\n }\n",
            "diff_size": 62
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 243).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3817/PointerChecking.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3817/PointerChecking.java\nindex 585ed865d4d..57536000391 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3817/PointerChecking.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3817/PointerChecking.java\n@@ -26,12 +26,8 @@ import org.neo4j.io.pagecache.PageCursor;\n  */\n class PointerChecking\n {\n-    static final String WRITER_TRAVERSE_OLD_STATE_MESSAGE =\n-                    \"Writer traversed to a tree node that has a valid successor, \" +\n-                    \"This is most likely due to failure to checkpoint the tree before shutdown and/or tree state \" +\n-                    \"being out of date.\";\n-\n-    private PointerChecking()\n+    static final String WRITER_TRAVERSE_OLD_STATE_MESSAGE = \"Writer traversed to a tree node that has a valid successor, \" + \"This is most likely due to failure to checkpoint the tree before shutdown and/or tree state \" + \"being out of date.\";\n+private PointerChecking()\n     {\n     }\n \n@@ -50,11 +46,11 @@ class PointerChecking\n         {\n             return;\n         }\n-        if ( result < IdSpace.MIN_TREE_NODE_ID )\n+\n+if ( result < IdSpace.MIN_TREE_NODE_ID )\n         {\n-            throw new TreeInconsistencyException( \"Pointer to id \" + result + \" not allowed. Minimum node id allowed is \" +\n-                    IdSpace.MIN_TREE_NODE_ID );\n-        }\n+            throw new TreeInconsistencyException( \"Pointer to id \" + result + \" not allowed. Minimum node id allowed is \" + IdSpace.MIN_TREE_NODE_ID );\n+    }\n     }\n \n     /**\n@@ -73,4 +69,4 @@ class PointerChecking\n         }\n         return true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "549",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/549/PullNeighbor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/549/PullNeighbor.java\nindex e63dd41ea34..f5b38618578 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/549/PullNeighbor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/549/PullNeighbor.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.node2vec.getfuncs.pullneighbor;\n \n import com.tencent.angel.graph.client.node2vec.params.PartitionGetParamWithIds;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/549/PullNeighbor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/549/PullNeighbor.java\nindex e63dd41ea34..bdaaae428a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/549/PullNeighbor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/549/PullNeighbor.java\n@@ -53,15 +53,13 @@ public class PullNeighbor extends GetFunc {\n \n     ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n         .getRow(pparam.getPartKey(), 0);\n-\n-    Long2ObjectOpenHashMap<long[]> partResult = new Long2ObjectOpenHashMap<long[]>(keyIds.length);\n+Long2ObjectOpenHashMap<long[]> partResult = new Long2ObjectOpenHashMap<long[]>(keyIds.length);\n     boolean isTrunc = PathQueue.isIsTrunc();\n     if (PathQueue.getKeepProba() < 1.0 - 1e-6 && PathQueue.getKeepProba() > 1e-6) {\n       double selectThred = PathQueue.getThreshold() / (1 - PathQueue.getKeepProba());\n       for (long keyId : keyIds) {\n         LongArrayElement longArrayElement = (LongArrayElement) row.get(keyId);\n-\n-        long[] neighs = longArrayElement.getData();\n+long[] neighs = longArrayElement.getData();\n \n         if (isTrunc && neighs.length > selectThred) {\n           partResult.put(keyId, Arrays.copyOf(neighs, (int) selectThred));\n@@ -90,4 +88,4 @@ public class PullNeighbor extends GetFunc {\n \n     return new PullNeighborResult(Merge.mergeHadhMap(maps));\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/549/PullNeighbor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/549/PullNeighbor.java\nindex e63dd41ea34..9d6a2dbf722 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/549/PullNeighbor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/549/PullNeighbor.java\n@@ -38,6 +38,7 @@ public class PullNeighbor extends GetFunc {\n    *\n    * @param param parameter of get udf\n    */\n+\n   public PullNeighbor(GetParam param) {\n     super(param);\n   }\n@@ -50,19 +51,14 @@ public class PullNeighbor extends GetFunc {\n   public PartitionGetResult partitionGet(PartitionGetParam partParam) {\n     PartitionGetParamWithIds pparam = (PartitionGetParamWithIds) partParam;\n     long[] keyIds = pparam.getKeyIds();\n-\n-    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager()\n-        .getRow(pparam.getPartKey(), 0);\n-\n+    ServerLongAnyRow row = (ServerLongAnyRow) psContext.getMatrixStorageManager().getRow(pparam.getPartKey(), 0);\n     Long2ObjectOpenHashMap<long[]> partResult = new Long2ObjectOpenHashMap<long[]>(keyIds.length);\n     boolean isTrunc = PathQueue.isIsTrunc();\n     if (PathQueue.getKeepProba() < 1.0 - 1e-6 && PathQueue.getKeepProba() > 1e-6) {\n       double selectThred = PathQueue.getThreshold() / (1 - PathQueue.getKeepProba());\n       for (long keyId : keyIds) {\n         LongArrayElement longArrayElement = (LongArrayElement) row.get(keyId);\n-\n         long[] neighs = longArrayElement.getData();\n-\n         if (isTrunc && neighs.length > selectThred) {\n           partResult.put(keyId, Arrays.copyOf(neighs, (int) selectThred));\n         } else {\n@@ -76,18 +72,16 @@ public class PullNeighbor extends GetFunc {\n         partResult.put(keyId, neighs);\n       }\n     }\n-\n     return new PullNeighborPartitionResult(partResult);\n   }\n \n   @Override\n   public GetResult merge(List<PartitionGetResult> partResults) {\n     List<Long2ObjectOpenHashMap<long[]>> maps = new ArrayList<>(partResults.size());\n-\n     for (PartitionGetResult partResult : partResults) {\n       maps.add(((PullNeighborPartitionResult) partResult).getPartResult());\n     }\n-\n     return new PullNeighborResult(Merge.mergeHadhMap(maps));\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
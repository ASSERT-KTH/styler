{
    "project_name": "graphfoundation-ongdb",
    "error_id": "614",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "206",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "218",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/614/BoltMessageLoggerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/614/BoltMessageLoggerImpl.java\nindex f239961317f..fc208941771 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/614/BoltMessageLoggerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/614/BoltMessageLoggerImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.logging;\n \n import io.netty.channel.Channel;\n@@ -44,188 +45,186 @@ import static java.lang.String.format;\n  */\n class BoltMessageLoggerImpl implements BoltMessageLogger\n {\n-    private static final ObjectMapper jsonObjectMapper = new ObjectMapper();\n-    private static final Supplier<String> PLACEHOLDER_DETAIL_SUPPLIER = () -> \"-\";\n-    private final BoltMessageLog messageLog;\n-\n-    private final String remoteAddress;\n-    private Channel channel;\n-\n-    private static final String BOLT_X_CORRELATION_ID_HEADER = \"BoltCorrelationId\";\n-    public static final AttributeKey<String> CORRELATION_ATTRIBUTE_KEY = AttributeKey.valueOf(\n-            BOLT_X_CORRELATION_ID_HEADER );\n-\n-    BoltMessageLoggerImpl( BoltMessageLog messageLog, Channel channel )\n-    {\n-        this.messageLog = messageLog;\n-        this.channel = channel;\n-        this.remoteAddress = remoteAddress( channel );\n-    }\n-\n-    @Override\n-    public void clientEvent( String eventName )\n-    {\n-        clientEvent( eventName, PLACEHOLDER_DETAIL_SUPPLIER );\n-    }\n-\n-    @Override\n-    public void clientEvent( String eventName, Supplier<String> detailsSupplier )\n-    {\n-        infoLogger().accept( format( \"C %s\", eventName ), detailsSupplier.get() );\n-    }\n-\n-    @Override\n-    public void clientError( String eventName, String errorMessage, Supplier<String> detailsSupplier )\n-    {\n-        errorLoggerWithArgs( errorMessage ).accept( format( \"C %s\", eventName ), detailsSupplier.get() );\n-    }\n-\n-    @Override\n-    public void serverEvent( String eventName )\n-    {\n-        serverEvent( eventName, PLACEHOLDER_DETAIL_SUPPLIER );\n-    }\n-\n-    @Override\n-    public void serverEvent( String eventName, Supplier<String> detailsSupplier )\n-    {\n-        infoLogger().accept( format( \"S %s\", eventName ), detailsSupplier.get() );\n-    }\n-\n-    @Override\n-    public void serverError( String eventName, String errorMessage )\n-    {\n-        errorLogger( errorMessage ).accept( format( \"S %s\", eventName ) );\n-    }\n-\n-    @Override\n-    public void serverError( String eventName, Status status )\n-    {\n-        serverError( eventName, status.code().serialize() );\n-    }\n-\n-    @Override\n-    public void logInit( String userAgent )\n-    {\n-        clientEvent( \"INIT\", () -> userAgent);\n-    }\n-\n-    @Override\n-    public void logRun()\n-    {\n-        clientEvent( \"RUN\", PLACEHOLDER_DETAIL_SUPPLIER );\n-    }\n-\n-    @Override\n-    public void logPullAll()\n-    {\n-        clientEvent( \"PULL_ALL\", PLACEHOLDER_DETAIL_SUPPLIER );\n-    }\n-\n-    @Override\n-    public void logDiscardAll()\n-    {\n-        clientEvent( \"DISCARD_ALL\", PLACEHOLDER_DETAIL_SUPPLIER );\n-    }\n-\n-    @Override\n-    public void logAckFailure()\n-    {\n-        clientEvent( \"ACK_FAILURE\", PLACEHOLDER_DETAIL_SUPPLIER );\n-    }\n-\n-    @Override\n-    public void logReset()\n-    {\n-        clientEvent( \"RESET\", PLACEHOLDER_DETAIL_SUPPLIER );\n-    }\n-\n-    @Override\n-    public void logSuccess( Supplier<MapValue> metadataSupplier )\n-    {\n-        serverEvent( \"SUCCESS\", () -> formatAnyValue( metadataSupplier.get() ) );\n-    }\n-\n-    @Override\n-    public void logFailure( Status status )\n-    {\n-        serverEvent( \"FAILURE\", () -> status.code().serialize() );\n-    }\n-\n-    @Override\n-    public void logIgnored()\n-    {\n-        serverEvent( \"IGNORED\", PLACEHOLDER_DETAIL_SUPPLIER );\n-    }\n-\n-    private Consumer<String> errorLogger( String errorMessage )\n-    {\n-        return formatMessageWithEventName ->\n-                messageLog.error( remoteAddress, getCorrelationId(), formatMessageWithEventName, errorMessage );\n-    }\n-\n-    private String randomCorrelationIdGenerator()\n-    {\n-        return UUID.randomUUID().toString();\n-    }\n-\n-    private BiConsumer<String, String> infoLogger()\n-    {\n-        return ( formatMessageWithEventName, details ) ->\n-                messageLog.info( remoteAddress,\n-                        getCorrelationId(),\n-                        format( \"%s %s\", formatMessageWithEventName, details ) );\n-    }\n-\n-    private String getCorrelationId()\n-    {\n-        if ( !channel.hasAttr( CORRELATION_ATTRIBUTE_KEY ) )\n-        {\n-            channel.attr( CORRELATION_ATTRIBUTE_KEY ).set( randomCorrelationIdGenerator() );\n-        }\n-\n-        return channel.attr( CORRELATION_ATTRIBUTE_KEY ).get();\n-    }\n-\n-    private BiConsumer<String, String> errorLoggerWithArgs( String errorMessage )\n-    {\n-        return ( formatMessageWithEventName, details ) ->\n-                errorLogger( errorMessage ).accept( format( \"%s %s\", formatMessageWithEventName, details ) );\n-    }\n-\n-    private static String remoteAddress( Channel channel )\n-    {\n-        try\n-        {\n-            InetSocketAddress remoteAddress = (InetSocketAddress) channel.remoteAddress();\n-            InetAddress address = remoteAddress.getAddress();\n-            String hostAddress = address.getHostAddress();\n-            int port = remoteAddress.getPort();\n-            return format( \"%s:%s\", hostAddress, port );\n-        }\n-        catch ( ClassCastException e )\n-        {\n-            SocketAddress remoteAddress = channel.remoteAddress();\n-            return remoteAddress.toString();\n-        }\n-    }\n-\n-    private static String json( Object arg )\n-    {\n-        try\n-        {\n-            return jsonObjectMapper.writeValueAsString( arg );\n-        }\n-        catch ( IOException e )\n-        {\n-            return \"?\";\n-        }\n-    }\n-\n-    private static String formatAnyValue( AnyValue mapValue )\n-    {\n-        PrettyPrinter printer = new PrettyPrinter();\n-        mapValue.writeTo( printer );\n-        return printer.value();\n-    }\n+  private static final ObjectMapper jsonObjectMapper = new ObjectMapper();\n+  private static final Supplier<String> PLACEHOLDER_DETAIL_SUPPLIER = () -> \"-\";\n+  private final BoltMessageLog messageLog;\n+\n+  private final String remoteAddress;\n+  private Channel channel;\n+\n+  private static final String BOLT_X_CORRELATION_ID_HEADER = \"BoltCorrelationId\";\n+  public static final AttributeKey<String> CORRELATION_ATTRIBUTE_KEY = AttributeKey.valueOf(\n+      BOLT_X_CORRELATION_ID_HEADER);\n+\n+  BoltMessageLoggerImpl(BoltMessageLog messageLog, Channel channel)\n+  {\n+    this.messageLog = messageLog;\n+    this.channel = channel;\n+    this.remoteAddress = remoteAddress(channel);\n+  }\n+\n+  @Override\n+  public void clientEvent(String eventName)\n+  {\n+    clientEvent(eventName, PLACEHOLDER_DETAIL_SUPPLIER);\n+  }\n+\n+  @Override\n+  public void clientEvent(String eventName, Supplier<String> detailsSupplier)\n+  {\n+    infoLogger().accept(format(\"C %s\", eventName), detailsSupplier.get());\n+  }\n+\n+  @Override\n+  public void clientError(String eventName, String errorMessage, Supplier<String> detailsSupplier)\n+  {\n+    errorLoggerWithArgs(errorMessage).accept(format(\"C %s\", eventName), detailsSupplier.get());\n+  }\n+\n+  @Override\n+  public void serverEvent(String eventName)\n+  {\n+    serverEvent(eventName, PLACEHOLDER_DETAIL_SUPPLIER);\n+  }\n+\n+  @Override\n+  public void serverEvent(String eventName, Supplier<String> detailsSupplier)\n+  {\n+    infoLogger().accept(format(\"S %s\", eventName), detailsSupplier.get());\n+  }\n+\n+  @Override\n+  public void serverError(String eventName, String errorMessage)\n+  {\n+    errorLogger(errorMessage).accept(format(\"S %s\", eventName));\n+  }\n+\n+  @Override\n+  public void serverError(String eventName, Status status)\n+  {\n+    serverError(eventName, status.code().serialize());\n+  }\n+\n+  @Override\n+  public void logInit(String userAgent)\n+  {\n+    clientEvent(\"INIT\", () -> userAgent);\n+  }\n+\n+  @Override\n+  public void logRun()\n+  {\n+    clientEvent(\"RUN\", PLACEHOLDER_DETAIL_SUPPLIER);\n+  }\n+\n+  @Override\n+  public void logPullAll()\n+  {\n+    clientEvent(\"PULL_ALL\", PLACEHOLDER_DETAIL_SUPPLIER);\n+  }\n+\n+  @Override\n+  public void logDiscardAll()\n+  {\n+    clientEvent(\"DISCARD_ALL\", PLACEHOLDER_DETAIL_SUPPLIER);\n+  }\n+\n+  @Override\n+  public void logAckFailure()\n+  {\n+    clientEvent(\"ACK_FAILURE\", PLACEHOLDER_DETAIL_SUPPLIER);\n+  }\n+\n+  @Override\n+  public void logReset()\n+  {\n+    clientEvent(\"RESET\", PLACEHOLDER_DETAIL_SUPPLIER);\n+  }\n+\n+  @Override\n+  public void logSuccess(Supplier<MapValue> metadataSupplier)\n+  {\n+    serverEvent(\"SUCCESS\", () -> formatAnyValue(metadataSupplier.get()));\n+  }\n+\n+  @Override\n+  public void logFailure(Status status)\n+  {\n+    serverEvent(\"FAILURE\", () -> status.code().serialize());\n+  }\n+\n+  @Override\n+  public void logIgnored()\n+  {\n+    serverEvent(\"IGNORED\", PLACEHOLDER_DETAIL_SUPPLIER);\n+  }\n+\n+  private Consumer<String> errorLogger(String errorMessage)\n+  {\n+    return formatMessageWithEventName ->\n+        messageLog.error(remoteAddress, getCorrelationId(), formatMessageWithEventName, errorMessage);\n+  }\n+\n+  private String randomCorrelationIdGenerator()\n+  {\n+    return UUID.randomUUID().toString();\n+  }\n+\n+  private BiConsumer<String, String> infoLogger()\n+  {\n+    return (formatMessageWithEventName, details) ->\n+        messageLog.info(remoteAddress,\n+            getCorrelationId(),\n+            format(\"%s %s\", formatMessageWithEventName, details));\n+  }\n+\n+  private String getCorrelationId()\n+  {\n+    if (!channel.hasAttr(CORRELATION_ATTRIBUTE_KEY))\n+    {\n+      channel.attr(CORRELATION_ATTRIBUTE_KEY).set(randomCorrelationIdGenerator());\n+    }\n+\n+    return channel.attr(CORRELATION_ATTRIBUTE_KEY).get();\n+  }\n+\n+  private BiConsumer<String, String> errorLoggerWithArgs(String errorMessage)\n+  {\n+    return (formatMessageWithEventName, details) ->\n+        errorLogger(errorMessage).accept(format(\"%s %s\", formatMessageWithEventName, details));\n+  }\n+\n+  private static String remoteAddress(Channel channel)\n+  {\n+    try\n+    {\n+      InetSocketAddress remoteAddress = (InetSocketAddress) channel.remoteAddress();\n+      InetAddress address = remoteAddress.getAddress();\n+      String hostAddress = address.getHostAddress();\n+      int port = remoteAddress.getPort();\n+      return format(\"%s:%s\", hostAddress, port);\n+    } catch (ClassCastException e)\n+    {\n+      SocketAddress remoteAddress = channel.remoteAddress();\n+      return remoteAddress.toString();\n+    }\n+  }\n+\n+  private static String json(Object arg)\n+  {\n+    try\n+    {\n+      return jsonObjectMapper.writeValueAsString(arg);\n+    } catch (IOException e)\n+    {\n+      return \"?\";\n+    }\n+  }\n+\n+  private static String formatAnyValue(AnyValue mapValue)\n+  {\n+    PrettyPrinter printer = new PrettyPrinter();\n+    mapValue.writeTo(printer);\n+    return printer.value();\n+  }\n }\n",
            "diff_size": 185
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/614/BoltMessageLoggerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/614/BoltMessageLoggerImpl.java\nindex f239961317f..43a70673e05 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/614/BoltMessageLoggerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/614/BoltMessageLoggerImpl.java\n@@ -52,10 +52,9 @@ class BoltMessageLoggerImpl implements BoltMessageLogger\n     private Channel channel;\n \n     private static final String BOLT_X_CORRELATION_ID_HEADER = \"BoltCorrelationId\";\n-    public static final AttributeKey<String> CORRELATION_ATTRIBUTE_KEY = AttributeKey.valueOf(\n-            BOLT_X_CORRELATION_ID_HEADER );\n \n-    BoltMessageLoggerImpl( BoltMessageLog messageLog, Channel channel )\n+public static final AttributeKey<String> CORRELATION_ATTRIBUTE_KEY = AttributeKey.valueOf( BOLT_X_CORRELATION_ID_HEADER );\n+BoltMessageLoggerImpl( BoltMessageLog messageLog, Channel channel )\n     {\n         this.messageLog = messageLog;\n         this.channel = channel;\n@@ -160,8 +159,7 @@ class BoltMessageLoggerImpl implements BoltMessageLogger\n \n     private Consumer<String> errorLogger( String errorMessage )\n     {\n-        return formatMessageWithEventName ->\n-                messageLog.error( remoteAddress, getCorrelationId(), formatMessageWithEventName, errorMessage );\n+        return formatMessageWithEventName -> messageLog.error( remoteAddress, getCorrelationId(), formatMessageWithEventName, errorMessage );\n     }\n \n     private String randomCorrelationIdGenerator()\n@@ -169,10 +167,10 @@ class BoltMessageLoggerImpl implements BoltMessageLogger\n         return UUID.randomUUID().toString();\n     }\n \n-    private BiConsumer<String, String> infoLogger()\n+    private BiConsumer<String,String> infoLogger()\n     {\n         return ( formatMessageWithEventName, details ) ->\n-                messageLog.info( remoteAddress,\n+messageLog.info( remoteAddress,\n                         getCorrelationId(),\n                         format( \"%s %s\", formatMessageWithEventName, details ) );\n     }\n@@ -187,10 +185,9 @@ class BoltMessageLoggerImpl implements BoltMessageLogger\n         return channel.attr( CORRELATION_ATTRIBUTE_KEY ).get();\n     }\n \n-    private BiConsumer<String, String> errorLoggerWithArgs( String errorMessage )\n+    private BiConsumer<String,String> errorLoggerWithArgs( String errorMessage )\n     {\n-        return ( formatMessageWithEventName, details ) ->\n-                errorLogger( errorMessage ).accept( format( \"%s %s\", formatMessageWithEventName, details ) );\n+        return ( formatMessageWithEventName, details ) -> errorLogger( errorMessage ).accept( format( \"%s %s\", formatMessageWithEventName, details ) );\n     }\n \n     private static String remoteAddress( Channel channel )\n@@ -228,4 +225,4 @@ class BoltMessageLoggerImpl implements BoltMessageLogger\n         mapValue.writeTo( printer );\n         return printer.value();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2400",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "75",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "141",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "377",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "396",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "475",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2400/RecordPropertyCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2400/RecordPropertyCursor.java\nindex 68f8ddbfe01..300d664de5d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2400/RecordPropertyCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2400/RecordPropertyCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import java.nio.ByteBuffer;\n@@ -71,9 +72,9 @@ public class RecordPropertyCursor extends PropertyRecord implements StoragePrope\n     private boolean open;\n     private RecordLoadOverride loadMode;\n \n-    RecordPropertyCursor( PropertyStore propertyStore, PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+    RecordPropertyCursor(PropertyStore propertyStore, PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n     {\n-        super( NO_ID );\n+        super(NO_ID);\n         this.propertyStore = propertyStore;\n         this.cursorTracer = cursorTracer;\n         this.memoryTracker = memoryTracker;\n@@ -81,35 +82,36 @@ public class RecordPropertyCursor extends PropertyRecord implements StoragePrope\n     }\n \n     @Override\n-    public void initNodeProperties( long reference )\n+    public void initNodeProperties(long reference)\n     {\n-        init( reference );\n+        init(reference);\n     }\n \n     @Override\n-    public void initRelationshipProperties( long reference )\n+    public void initRelationshipProperties(long reference)\n     {\n-        init( reference );\n+        init(reference);\n     }\n \n     /**\n      * In this implementation property ids are unique among nodes AND relationships so they all init the same way\n+     *\n      * @param reference properties reference, actual property record id.\n      */\n-    private void init( long reference )\n+    private void init(long reference)\n     {\n-        if ( getId() != NO_ID )\n+        if (getId() != NO_ID)\n         {\n             clear();\n         }\n \n         //Set to high value to force a read\n         this.block = Integer.MAX_VALUE;\n-        if ( reference != NO_ID )\n+        if (reference != NO_ID)\n         {\n-            if ( page == null )\n+            if (page == null)\n             {\n-                page = propertyPage( reference );\n+                page = propertyPage(reference);\n             }\n         }\n \n@@ -121,30 +123,29 @@ public class RecordPropertyCursor extends PropertyRecord implements StoragePrope\n     @Override\n     public boolean next()\n     {\n-        while ( true )\n+        while (true)\n         {\n             //Figure out number of blocks of record\n             int numberOfBlocks = getNumberOfBlocks();\n-            while ( block < numberOfBlocks )\n+            while (block < numberOfBlocks)\n             {\n                 //We have just read a record, so we are at the beginning\n-                if ( block == INITIAL_POSITION )\n+                if (block == INITIAL_POSITION)\n                 {\n                     block = 0;\n-                }\n-                else\n+                } else\n                 {\n                     //Figure out the type and how many blocks that are used\n                     long current = currentBlock();\n-                    PropertyType type = PropertyType.getPropertyTypeOrNull( current );\n-                    if ( type == null )\n+                    PropertyType type = PropertyType.getPropertyTypeOrNull(current);\n+                    if (type == null)\n                     {\n                         break;\n                     }\n-                    block += type.calculateNumberOfBlocksUsed( current );\n+                    block += type.calculateNumberOfBlocksUsed(current);\n                 }\n                 //nothing left, need to read a new record\n-                if ( block >= numberOfBlocks || type() == null )\n+                if (block >= numberOfBlocks || type() == null)\n                 {\n                     break;\n                 }\n@@ -152,12 +153,12 @@ public class RecordPropertyCursor extends PropertyRecord implements StoragePrope\n                 return true;\n             }\n \n-            if ( next == NO_ID )\n+            if (next == NO_ID)\n             {\n                 return false;\n             }\n \n-            property( this, next, page );\n+            property(this, next, page);\n             next = getNextProp();\n             block = INITIAL_POSITION;\n         }\n@@ -171,7 +172,7 @@ public class RecordPropertyCursor extends PropertyRecord implements StoragePrope\n     @Override\n     public void reset()\n     {\n-        if ( open )\n+        if (open)\n         {\n             open = false;\n             loadMode = RecordLoadOverride.none();\n@@ -188,46 +189,46 @@ public class RecordPropertyCursor extends PropertyRecord implements StoragePrope\n     @Override\n     public int propertyKey()\n     {\n-        return PropertyBlock.keyIndexId( currentBlock() );\n+        return PropertyBlock.keyIndexId(currentBlock());\n     }\n \n     @Override\n     public ValueGroup propertyType()\n     {\n         PropertyType type = type();\n-        if ( type == null )\n+        if (type == null)\n         {\n             return ValueGroup.NO_VALUE;\n         }\n-        switch ( type )\n+        switch (type)\n         {\n-        case BOOL:\n-            return ValueGroup.BOOLEAN;\n-        case BYTE:\n-        case SHORT:\n-        case INT:\n-        case LONG:\n-        case FLOAT:\n-        case DOUBLE:\n-            return ValueGroup.NUMBER;\n-        case STRING:\n-        case CHAR:\n-        case SHORT_STRING:\n-            return ValueGroup.TEXT;\n-        case TEMPORAL:\n-        case GEOMETRY:\n-        case SHORT_ARRAY:\n-        case ARRAY:\n-            // value read is needed to get correct value group since type is not fine grained enough to match all ValueGroups\n-            return propertyValue().valueGroup();\n-        default:\n-            throw new UnsupportedOperationException( \"not implemented\" );\n+            case BOOL:\n+                return ValueGroup.BOOLEAN;\n+            case BYTE:\n+            case SHORT:\n+            case INT:\n+            case LONG:\n+            case FLOAT:\n+            case DOUBLE:\n+                return ValueGroup.NUMBER;\n+            case STRING:\n+            case CHAR:\n+            case SHORT_STRING:\n+                return ValueGroup.TEXT;\n+            case TEMPORAL:\n+            case GEOMETRY:\n+            case SHORT_ARRAY:\n+            case ARRAY:\n+                // value read is needed to get correct value group since type is not fine grained enough to match all ValueGroups\n+                return propertyValue().valueGroup();\n+            default:\n+                throw new UnsupportedOperationException(\"not implemented\");\n         }\n     }\n \n     private PropertyType type()\n     {\n-        return PropertyType.getPropertyTypeOrNull( currentBlock() );\n+        return PropertyType.getPropertyTypeOrNull(currentBlock());\n     }\n \n     @Override\n@@ -239,177 +240,175 @@ public class RecordPropertyCursor extends PropertyRecord implements StoragePrope\n     private Value readValue()\n     {\n         PropertyType type = type();\n-        if ( type == null )\n+        if (type == null)\n         {\n             return Values.NO_VALUE;\n         }\n-        switch ( type )\n+        switch (type)\n         {\n-        case BOOL:\n-            return readBoolean();\n-        case BYTE:\n-            return readByte();\n-        case SHORT:\n-            return readShort();\n-        case INT:\n-            return readInt();\n-        case LONG:\n-            return readLong();\n-        case FLOAT:\n-            return readFloat();\n-        case DOUBLE:\n-            return readDouble();\n-        case CHAR:\n-            return readChar();\n-        case SHORT_STRING:\n-            return readShortString();\n-        case SHORT_ARRAY:\n-            return readShortArray();\n-        case STRING:\n-            return readLongString();\n-        case ARRAY:\n-            return readLongArray();\n-        case GEOMETRY:\n-            return geometryValue();\n-        case TEMPORAL:\n-            return temporalValue();\n-        default:\n-            throw new IllegalStateException( \"Unsupported PropertyType: \" + type.name() );\n+            case BOOL:\n+                return readBoolean();\n+            case BYTE:\n+                return readByte();\n+            case SHORT:\n+                return readShort();\n+            case INT:\n+                return readInt();\n+            case LONG:\n+                return readLong();\n+            case FLOAT:\n+                return readFloat();\n+            case DOUBLE:\n+                return readDouble();\n+            case CHAR:\n+                return readChar();\n+            case SHORT_STRING:\n+                return readShortString();\n+            case SHORT_ARRAY:\n+                return readShortArray();\n+            case STRING:\n+                return readLongString();\n+            case ARRAY:\n+                return readLongArray();\n+            case GEOMETRY:\n+                return geometryValue();\n+            case TEMPORAL:\n+                return temporalValue();\n+            default:\n+                throw new IllegalStateException(\"Unsupported PropertyType: \" + type.name());\n         }\n     }\n \n     private Value geometryValue()\n     {\n-        return GeometryType.decode( getBlocks(), block );\n+        return GeometryType.decode(getBlocks(), block);\n     }\n \n     private Value temporalValue()\n     {\n-        return TemporalType.decode( getBlocks(), block );\n+        return TemporalType.decode(getBlocks(), block);\n     }\n \n     private ArrayValue readLongArray()\n     {\n-        long reference = PropertyBlock.fetchLong( currentBlock() );\n-        if ( arrayPage == null )\n+        long reference = PropertyBlock.fetchLong(currentBlock());\n+        if (arrayPage == null)\n         {\n-            arrayPage = arrayPage( reference );\n+            arrayPage = arrayPage(reference);\n         }\n-        return array( this, reference, arrayPage );\n+        return array(this, reference, arrayPage);\n     }\n \n     private TextValue readLongString()\n     {\n-        long reference = PropertyBlock.fetchLong( currentBlock() );\n-        if ( stringPage == null )\n+        long reference = PropertyBlock.fetchLong(currentBlock());\n+        if (stringPage == null)\n         {\n-            stringPage = stringPage( reference );\n+            stringPage = stringPage(reference);\n         }\n-        return string( this, reference, stringPage );\n+        return string(this, reference, stringPage);\n     }\n \n     private Value readShortArray()\n     {\n-        Bits bits = Bits.bits( MAX_BYTES_IN_SHORT_STRING_OR_SHORT_ARRAY );\n-        int blocksUsed = ShortArray.calculateNumberOfBlocksUsed( currentBlock() );\n-        for ( int i = 0; i < blocksUsed; i++ )\n+        Bits bits = Bits.bits(MAX_BYTES_IN_SHORT_STRING_OR_SHORT_ARRAY);\n+        int blocksUsed = ShortArray.calculateNumberOfBlocksUsed(currentBlock());\n+        for (int i = 0; i < blocksUsed; i++)\n         {\n-            bits.put( getBlocks()[block + i] );\n+            bits.put(getBlocks()[block + i]);\n         }\n-        return ShortArray.decode( bits );\n+        return ShortArray.decode(bits);\n     }\n \n     private TextValue readShortString()\n     {\n-        return LongerShortString.decode( getBlocks(), block );\n+        return LongerShortString.decode(getBlocks(), block);\n     }\n \n     private TextValue readChar()\n     {\n-        return Values.charValue( (char) PropertyBlock.fetchShort( currentBlock() ) );\n+        return Values.charValue((char) PropertyBlock.fetchShort(currentBlock()));\n     }\n \n     private DoubleValue readDouble()\n     {\n-        return Values.doubleValue( Double.longBitsToDouble( getBlocks()[block + 1] ) );\n+        return Values.doubleValue(Double.longBitsToDouble(getBlocks()[block + 1]));\n     }\n \n     private FloatValue readFloat()\n     {\n-        return Values.floatValue( Float.intBitsToFloat( PropertyBlock.fetchInt( currentBlock() ) ) );\n+        return Values.floatValue(Float.intBitsToFloat(PropertyBlock.fetchInt(currentBlock())));\n     }\n \n     private LongValue readLong()\n     {\n-        if ( PropertyBlock.valueIsInlined( currentBlock() ) )\n+        if (PropertyBlock.valueIsInlined(currentBlock()))\n         {\n-            return Values.longValue( PropertyBlock.fetchLong( currentBlock() ) >>> 1 );\n-        }\n-        else\n+            return Values.longValue(PropertyBlock.fetchLong(currentBlock()) >>> 1);\n+        } else\n         {\n-            return Values.longValue( getBlocks()[block + 1] );\n+            return Values.longValue(getBlocks()[block + 1]);\n         }\n     }\n \n     private IntValue readInt()\n     {\n-        return Values.intValue( PropertyBlock.fetchInt( currentBlock() ) );\n+        return Values.intValue(PropertyBlock.fetchInt(currentBlock()));\n     }\n \n     private ShortValue readShort()\n     {\n-        return Values.shortValue( PropertyBlock.fetchShort( currentBlock() ) );\n+        return Values.shortValue(PropertyBlock.fetchShort(currentBlock()));\n     }\n \n     private ByteValue readByte()\n     {\n-        return Values.byteValue( PropertyBlock.fetchByte( currentBlock() ) );\n+        return Values.byteValue(PropertyBlock.fetchByte(currentBlock()));\n     }\n \n     private BooleanValue readBoolean()\n     {\n-        return Values.booleanValue( PropertyBlock.fetchByte( currentBlock() ) == 1 );\n+        return Values.booleanValue(PropertyBlock.fetchByte(currentBlock()) == 1);\n     }\n \n     @Override\n     public PropertyRecord copy()\n     {\n-        throw new UnsupportedOperationException( \"Record cursors are not copyable.\" );\n+        throw new UnsupportedOperationException(\"Record cursors are not copyable.\");\n     }\n \n     @Override\n     public String toString()\n     {\n-        if ( !open )\n+        if (!open)\n         {\n             return \"PropertyCursor[closed state]\";\n-        }\n-        else\n+        } else\n         {\n             return \"PropertyCursor[id=\" + getId() + \", open state with: block=\" + block + \", next=\" + next +\n-                   \", underlying record=\" + super.toString() + \"]\";\n+              \", underlying record=\" + super.toString() + \"]\";\n         }\n     }\n \n     @Override\n     public void close()\n     {\n-        if ( stringPage != null )\n+        if (stringPage != null)\n         {\n             stringPage.close();\n             stringPage = null;\n         }\n-        if ( arrayPage != null )\n+        if (arrayPage != null)\n         {\n             arrayPage.close();\n             arrayPage = null;\n         }\n-        if ( page != null )\n+        if (page != null)\n         {\n             page.close();\n             page = null;\n         }\n-        if ( scopedBuffer != null )\n+        if (scopedBuffer != null)\n         {\n             scopedBuffer.close();\n             scopedBuffer = null;\n@@ -417,45 +416,45 @@ public class RecordPropertyCursor extends PropertyRecord implements StoragePrope\n         }\n     }\n \n-    private PageCursor propertyPage( long reference )\n+    private PageCursor propertyPage(long reference)\n     {\n-        return propertyStore.openPageCursorForReading( reference, cursorTracer );\n+        return propertyStore.openPageCursorForReading(reference, cursorTracer);\n     }\n \n-    private PageCursor stringPage( long reference )\n+    private PageCursor stringPage(long reference)\n     {\n-        return propertyStore.openStringPageCursor( reference, cursorTracer );\n+        return propertyStore.openStringPageCursor(reference, cursorTracer);\n     }\n \n-    private PageCursor arrayPage( long reference )\n+    private PageCursor arrayPage(long reference)\n     {\n-        return propertyStore.openArrayPageCursor( reference, cursorTracer );\n+        return propertyStore.openArrayPageCursor(reference, cursorTracer);\n     }\n \n-    private void property( PropertyRecord record, long reference, PageCursor pageCursor )\n+    private void property(PropertyRecord record, long reference, PageCursor pageCursor)\n     {\n         // We need to load forcefully here since otherwise we can have inconsistent reads\n         // for properties across blocks, see org.neo4j.graphdb.ConsistentPropertyReadsIT\n-        propertyStore.getRecordByCursor( reference, record, loadMode.orElse( ALWAYS ), pageCursor );\n+        propertyStore.getRecordByCursor(reference, record, loadMode.orElse(ALWAYS), pageCursor);\n     }\n \n-    private TextValue string( RecordPropertyCursor cursor, long reference, PageCursor page )\n+    private TextValue string(RecordPropertyCursor cursor, long reference, PageCursor page)\n     {\n-        propertyStore.loadString( reference, cursor, page, loadMode.orElse( ALWAYS ) );\n+        propertyStore.loadString(reference, cursor, page, loadMode.orElse(ALWAYS));\n         buffer.flip();\n         byte[] bytes = new byte[buffer.limit()];\n-        buffer.get( bytes );\n-        return Values.utf8Value( bytes );\n+        buffer.get(bytes);\n+        return Values.utf8Value(bytes);\n     }\n \n-    private ArrayValue array( RecordPropertyCursor cursor, long reference, PageCursor page )\n+    private ArrayValue array(RecordPropertyCursor cursor, long reference, PageCursor page)\n     {\n-        propertyStore.loadArray( reference, cursor, page, loadMode.orElse( ALWAYS ) );\n+        propertyStore.loadArray(reference, cursor, page, loadMode.orElse(ALWAYS));\n         buffer.flip();\n-        return PropertyStore.readArrayFromBuffer( buffer );\n+        return PropertyStore.readArrayFromBuffer(buffer);\n     }\n \n-    public void setScopedBuffer( ScopedBuffer scopedBuffer )\n+    public void setScopedBuffer(ScopedBuffer scopedBuffer)\n     {\n         this.scopedBuffer = scopedBuffer;\n         this.buffer = scopedBuffer.getBuffer();\n@@ -463,26 +462,25 @@ public class RecordPropertyCursor extends PropertyRecord implements StoragePrope\n \n     public ByteBuffer getOrCreateClearBuffer()\n     {\n-        if ( buffer == null )\n+        if (buffer == null)\n         {\n-            setScopedBuffer( new HeapScopedBuffer( DEFAULT_PROPERTY_BUFFER_CAPACITY, memoryTracker ) );\n-        }\n-        else\n+            setScopedBuffer(new HeapScopedBuffer(DEFAULT_PROPERTY_BUFFER_CAPACITY, memoryTracker));\n+        } else\n         {\n             buffer.clear();\n         }\n         return buffer;\n     }\n \n-    public ByteBuffer growBuffer( int minAdditionalCapacity )\n+    public ByteBuffer growBuffer(int minAdditionalCapacity)\n     {\n         buffer.flip();\n         int oldCapacity = buffer.capacity();\n-        int newCapacity = Math.max( oldCapacity, minAdditionalCapacity ) + oldCapacity;\n+        int newCapacity = Math.max(oldCapacity, minAdditionalCapacity) + oldCapacity;\n \n         var oldScopedBuffer = scopedBuffer;\n-        setScopedBuffer( new HeapScopedBuffer( newCapacity, memoryTracker ) );\n-        buffer.put( oldScopedBuffer.getBuffer() );\n+        setScopedBuffer(new HeapScopedBuffer(newCapacity, memoryTracker));\n+        buffer.put(oldScopedBuffer.getBuffer());\n         oldScopedBuffer.close();\n \n         return buffer;\n",
            "diff_size": 143
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2400/RecordPropertyCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2400/RecordPropertyCursor.java\nindex 68f8ddbfe01..ab8637aac89 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2400/RecordPropertyCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/2400/RecordPropertyCursor.java\n@@ -487,4 +487,4 @@ public class RecordPropertyCursor extends PropertyRecord implements StoragePrope\n \n         return buffer;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "86",
    "information": {
        "errors": [
            {
                "line": "80",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 91).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "      freeMarkerConf.setDefaultEncoding(\"utf-8\");\n      freeMarkerConf.setClassForTemplateLoading(getClass(), \"/\");\n      freeMarkerConf.setTemplateExceptionHandler(TemplateExceptionHandler.RETHROW_HANDLER);\n      freeMarkerConf.setLogTemplateExceptions(false);\n      return freeMarkerConf;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/86/DirectOperatorGeneratorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/86/DirectOperatorGeneratorFactory.java\nindex 8bbb5f7aff3..197688c8697 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/86/DirectOperatorGeneratorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/86/DirectOperatorGeneratorFactory.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.generator;\n \n import com.google.common.collect.Sets;\n@@ -77,7 +78,8 @@ public class DirectOperatorGeneratorFactory implements OperatorGeneratorFactory\n       Configuration freeMarkerConf = new Configuration(Configuration.VERSION_2_3_23);\n       freeMarkerConf.setDefaultEncoding(\"utf-8\");\n       freeMarkerConf.setClassForTemplateLoading(getClass(), \"/\");\n-      freeMarkerConf.setTemplateExceptionHandler(TemplateExceptionHandler.RETHROW_HANDLER);\n+      freeMarkerConf\n+          .setTemplateExceptionHandler(TemplateExceptionHandler.RETHROW_HANDLER);\n       freeMarkerConf.setLogTemplateExceptions(false);\n       return freeMarkerConf;\n     }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'member def modifier' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/86/DirectOperatorGeneratorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/86/DirectOperatorGeneratorFactory.java\nindex 8bbb5f7aff3..3e93cb2c4fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/86/DirectOperatorGeneratorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/86/DirectOperatorGeneratorFactory.java\n@@ -37,8 +37,7 @@ import java.util.Set;\n public class DirectOperatorGeneratorFactory implements OperatorGeneratorFactory {\n \n   static class Generator implements OperatorGenerator {\n-\n-    final Repository repo;\n+  final Repository repo;\n     final Configuration conf = getConf();\n \n     Generator(Repository repo) {\n@@ -92,4 +91,4 @@ public class DirectOperatorGeneratorFactory implements OperatorGeneratorFactory\n   public OperatorGenerator create(Repository repo) {\n     return new Generator(repo);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 209).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/86/DirectOperatorGeneratorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/86/DirectOperatorGeneratorFactory.java\nindex 8bbb5f7aff3..3bed5f86a6c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/86/DirectOperatorGeneratorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/86/DirectOperatorGeneratorFactory.java\n@@ -34,11 +34,14 @@ import java.util.HashMap;\n import java.util.Set;\n \n /** {@link OperatorGeneratorFactory} for {@link DirectDataOperator}. */\n+\n+\n public class DirectOperatorGeneratorFactory implements OperatorGeneratorFactory {\n \n   static class Generator implements OperatorGenerator {\n \n     final Repository repo;\n+\n     final Configuration conf = getConf();\n \n     Generator(Repository repo) {\n@@ -52,12 +55,7 @@ public class DirectOperatorGeneratorFactory implements OperatorGeneratorFactory\n \n     @Override\n     public Set<String> imports() {\n-      return Sets.newHashSet(\n-          DirectDataOperator.class.getName(),\n-          DirectAttributeFamilyDescriptor.class.getName(),\n-          CommitLogReader.class.getName(),\n-          KeyValue.class.getName(),\n-          RandomAccessReader.class.getName());\n+      return Sets.newHashSet(DirectDataOperator.class.getName(), DirectAttributeFamilyDescriptor.class.getName(), CommitLogReader.class.getName(), KeyValue.class.getName(), RandomAccessReader.class.getName());\n     }\n \n     @Override\n@@ -92,4 +90,4 @@ public class DirectOperatorGeneratorFactory implements OperatorGeneratorFactory\n   public OperatorGenerator create(Repository repo) {\n     return new Generator(repo);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
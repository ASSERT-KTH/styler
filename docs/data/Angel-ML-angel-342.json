{
    "project_name": "Angel-ML-angel",
    "error_id": "342",
    "information": {
        "errors": [
            {
                "line": "20",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 111).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  private double[] values;\n\n  public RangeViewLongKeysDoubleValuesPart(int rowId, long[] keys, double[] values, int startPos, int endPos) {\n    super(rowId, startPos, endPos);\n    this.keys = keys;\n    this.values = values;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/342/RangeViewLongKeysDoubleValuesPart.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler/342/RangeViewLongKeysDoubleValuesPart.java\nindex f2801c04c38..b5134384c1d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/342/RangeViewLongKeysDoubleValuesPart.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler/342/RangeViewLongKeysDoubleValuesPart.java\n@@ -17,7 +17,8 @@ public class RangeViewLongKeysDoubleValuesPart extends RangeKeyValuePart impleme\n    */\n   private double[] values;\n \n-  public RangeViewLongKeysDoubleValuesPart(int rowId, long[] keys, double[] values, int startPos, int endPos) {\n+  public RangeViewLongKeysDoubleValuesPart(int rowId, long [] keys ,double\n+  [] values, int startPos, int endPos) {\n     super(rowId, startPos, endPos);\n     this.keys = keys;\n     this.values = values;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/342/RangeViewLongKeysDoubleValuesPart.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/342/RangeViewLongKeysDoubleValuesPart.java\nindex f2801c04c38..85786b831e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/342/RangeViewLongKeysDoubleValuesPart.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/342/RangeViewLongKeysDoubleValuesPart.java\n@@ -17,7 +17,8 @@ public class RangeViewLongKeysDoubleValuesPart extends RangeKeyValuePart impleme\n    */\n   private double[] values;\n \n-  public RangeViewLongKeysDoubleValuesPart(int rowId, long[] keys, double[] values, int startPos, int endPos) {\n+  public RangeViewLongKeysDoubleValuesPart(int rowId, long[] keys, double[] values, int startPos,\n+                                           int endPos) {\n     super(rowId, startPos, endPos);\n     this.keys = keys;\n     this.values = values;\n@@ -53,7 +54,7 @@ public class RangeViewLongKeysDoubleValuesPart extends RangeKeyValuePart impleme\n \n   @Override\n   public int size() {\n-    if(endPos != -1) {\n+    if (endPos != -1) {\n       return endPos - startPos;\n     } else {\n       return keys.length;\n@@ -69,7 +70,7 @@ public class RangeViewLongKeysDoubleValuesPart extends RangeKeyValuePart impleme\n   public void serialize(ByteBuf output) {\n     super.serialize(output);\n     ByteBufSerdeUtils.serializeInt(output, endPos - startPos);\n-    for(int i = startPos; i < endPos; i++) {\n+    for (int i = startPos; i < endPos; i++) {\n       ByteBufSerdeUtils.serializeLong(output, keys[i]);\n       ByteBufSerdeUtils.serializeDouble(output, values[i]);\n     }\n@@ -81,7 +82,7 @@ public class RangeViewLongKeysDoubleValuesPart extends RangeKeyValuePart impleme\n     int len = ByteBufSerdeUtils.deserializeInt(input);\n     keys = new long[len];\n     values = new double[len];\n-    for(int i = 0; i < len; i++) {\n+    for (int i = 0; i < len; i++) {\n       keys[i] = ByteBufSerdeUtils.deserializeLong(input);\n       values[i] = ByteBufSerdeUtils.deserializeDouble(input);\n     }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/342/RangeViewLongKeysDoubleValuesPart.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/342/RangeViewLongKeysDoubleValuesPart.java\nindex f2801c04c38..bdae945c6a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/342/RangeViewLongKeysDoubleValuesPart.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/342/RangeViewLongKeysDoubleValuesPart.java\n@@ -5,8 +5,7 @@ import com.tencent.angel.ml.matrix.RowType;\n import com.tencent.angel.psagent.matrix.transport.router.operator.ILongKeyDoubleValuePartOp;\n import io.netty.buffer.ByteBuf;\n \n-public class RangeViewLongKeysDoubleValuesPart extends RangeKeyValuePart implements\n-    ILongKeyDoubleValuePartOp {\n+public class RangeViewLongKeysDoubleValuesPart extends RangeKeyValuePart implements ILongKeyDoubleValuePartOp {\n   /**\n    * Whole key array before serialization, sorted by asc\n    */\n@@ -69,7 +68,7 @@ public class RangeViewLongKeysDoubleValuesPart extends RangeKeyValuePart impleme\n   public void serialize(ByteBuf output) {\n     super.serialize(output);\n     ByteBufSerdeUtils.serializeInt(output, endPos - startPos);\n-    for(int i = startPos; i < endPos; i++) {\n+    for (int i = startPos; i < endPos; i++) {\n       ByteBufSerdeUtils.serializeLong(output, keys[i]);\n       ByteBufSerdeUtils.serializeDouble(output, values[i]);\n     }\n@@ -81,7 +80,7 @@ public class RangeViewLongKeysDoubleValuesPart extends RangeKeyValuePart impleme\n     int len = ByteBufSerdeUtils.deserializeInt(input);\n     keys = new long[len];\n     values = new double[len];\n-    for(int i = 0; i < len; i++) {\n+    for (int i = 0; i < len; i++) {\n       keys[i] = ByteBufSerdeUtils.deserializeLong(input);\n       values[i] = ByteBufSerdeUtils.deserializeDouble(input);\n     }\n@@ -94,4 +93,4 @@ public class RangeViewLongKeysDoubleValuesPart extends RangeKeyValuePart impleme\n         + ByteBufSerdeUtils.LONG_LENGTH * (endPos - startPos)\n         + ByteBufSerdeUtils.DOUBLE_LENGTH * (endPos - startPos);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/342/RangeViewLongKeysDoubleValuesPart.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/342/RangeViewLongKeysDoubleValuesPart.java\nindex f2801c04c38..a8a3b20d549 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/342/RangeViewLongKeysDoubleValuesPart.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/342/RangeViewLongKeysDoubleValuesPart.java\n@@ -5,11 +5,11 @@ import com.tencent.angel.ml.matrix.RowType;\n import com.tencent.angel.psagent.matrix.transport.router.operator.ILongKeyDoubleValuePartOp;\n import io.netty.buffer.ByteBuf;\n \n-public class RangeViewLongKeysDoubleValuesPart extends RangeKeyValuePart implements\n-    ILongKeyDoubleValuePartOp {\n+public class RangeViewLongKeysDoubleValuesPart extends RangeKeyValuePart implements ILongKeyDoubleValuePartOp {\n   /**\n    * Whole key array before serialization, sorted by asc\n    */\n+\n   private long[] keys;\n \n   /**\n@@ -53,7 +53,7 @@ public class RangeViewLongKeysDoubleValuesPart extends RangeKeyValuePart impleme\n \n   @Override\n   public int size() {\n-    if(endPos != -1) {\n+    if (endPos != -1) {\n       return endPos - startPos;\n     } else {\n       return keys.length;\n@@ -69,7 +69,7 @@ public class RangeViewLongKeysDoubleValuesPart extends RangeKeyValuePart impleme\n   public void serialize(ByteBuf output) {\n     super.serialize(output);\n     ByteBufSerdeUtils.serializeInt(output, endPos - startPos);\n-    for(int i = startPos; i < endPos; i++) {\n+    for (int i = startPos; i < endPos; i++) {\n       ByteBufSerdeUtils.serializeLong(output, keys[i]);\n       ByteBufSerdeUtils.serializeDouble(output, values[i]);\n     }\n@@ -78,10 +78,11 @@ public class RangeViewLongKeysDoubleValuesPart extends RangeKeyValuePart impleme\n   @Override\n   public void deserialize(ByteBuf input) {\n     super.deserialize(input);\n+\n     int len = ByteBufSerdeUtils.deserializeInt(input);\n     keys = new long[len];\n     values = new double[len];\n-    for(int i = 0; i < len; i++) {\n+    for (int i = 0; i < len; i++) {\n       keys[i] = ByteBufSerdeUtils.deserializeLong(input);\n       values[i] = ByteBufSerdeUtils.deserializeDouble(input);\n     }\n@@ -89,9 +90,7 @@ public class RangeViewLongKeysDoubleValuesPart extends RangeKeyValuePart impleme\n \n   @Override\n   public int bufferLen() {\n-    return super.bufferLen()\n-        + ByteBufSerdeUtils.INT_LENGTH\n-        + ByteBufSerdeUtils.LONG_LENGTH * (endPos - startPos)\n-        + ByteBufSerdeUtils.DOUBLE_LENGTH * (endPos - startPos);\n+    return super.bufferLen() + ByteBufSerdeUtils.INT_LENGTH + ByteBufSerdeUtils.LONG_LENGTH * (endPos - startPos) + ByteBufSerdeUtils.DOUBLE_LENGTH * (endPos - startPos);\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/342/RangeViewLongKeysDoubleValuesPart.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/342/RangeViewLongKeysDoubleValuesPart.java\nindex f2801c04c38..b5134384c1d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/342/RangeViewLongKeysDoubleValuesPart.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/342/RangeViewLongKeysDoubleValuesPart.java\n@@ -17,7 +17,8 @@ public class RangeViewLongKeysDoubleValuesPart extends RangeKeyValuePart impleme\n    */\n   private double[] values;\n \n-  public RangeViewLongKeysDoubleValuesPart(int rowId, long[] keys, double[] values, int startPos, int endPos) {\n+  public RangeViewLongKeysDoubleValuesPart(int rowId, long [] keys ,double\n+  [] values, int startPos, int endPos) {\n     super(rowId, startPos, endPos);\n     this.keys = keys;\n     this.values = values;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
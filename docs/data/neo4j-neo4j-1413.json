{
    "project_name": "neo4j-neo4j",
    "error_id": "1413",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "74",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "181",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "149",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "258",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "33",
                    "severity": "error",
                    "message": "'}' at column 33 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "280",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "298",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "307",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "323",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "333",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "348",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "380",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "416",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "430",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "446",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "446",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1413/RelationshipChainChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1413/RelationshipChainChecker.java\nindex 14da873ba91..a324c06f7b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1413/RelationshipChainChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1413/RelationshipChainChecker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checker;\n \n import java.util.concurrent.ArrayBlockingQueue;\n@@ -70,31 +71,31 @@ class RelationshipChainChecker implements Checker\n     private final RecordLoading recordLoader;\n     private final ProgressListener progress;\n \n-    RelationshipChainChecker( CheckerContext context )\n+    RelationshipChainChecker(CheckerContext context)\n     {\n         this.context = context;\n         this.reporter = context.reporter;\n         // There will be two threads in addition to the relationship checkers:\n         // - Relationship store scanner\n         // - (Internal) thread helping pre-fetching the relationship store pages\n-        this.numberOfChainCheckers = max( 1, context.execution.getNumberOfThreads() - 2 );\n+        this.numberOfChainCheckers = max(1, context.execution.getNumberOfThreads() - 2);\n         this.cacheAccess = context.cacheAccess;\n         this.recordLoader = context.recordLoader;\n-        this.progress = context.progressReporter( this, \"Relationship chains\", context.neoStores.getRelationshipStore().getHighId() * 2 );\n+        this.progress = context.progressReporter(this, \"Relationship chains\", context.neoStores.getRelationshipStore().getHighId() * 2);\n     }\n \n     @Override\n-    public void check( LongRange nodeIdRange, boolean firstRange, boolean lastRange ) throws Exception\n+    public void check(LongRange nodeIdRange, boolean firstRange, boolean lastRange) throws Exception\n     {\n         // Forward scan (cache prev pointers)\n-        checkDirection( nodeIdRange, ScanDirection.FORWARD );\n+        checkDirection(nodeIdRange, ScanDirection.FORWARD);\n \n         // Backward scan (cache next pointers)\n-        context.paddedDebug( \"%s moving over to backwards relationship chain checking\", getClass().getSimpleName() );\n-        checkDirection( nodeIdRange, ScanDirection.BACKWARD );\n+        context.paddedDebug(\"%s moving over to backwards relationship chain checking\", getClass().getSimpleName());\n+        checkDirection(nodeIdRange, ScanDirection.BACKWARD);\n     }\n \n-    private void checkDirection( LongRange nodeIdRange, ScanDirection direction ) throws Exception\n+    private void checkDirection(LongRange nodeIdRange, ScanDirection direction) throws Exception\n     {\n         RelationshipStore relationshipStore = context.neoStores.getRelationshipStore();\n         long highId = relationshipStore.getHighId();\n@@ -104,103 +105,102 @@ class RelationshipChainChecker implements Checker\n         ProgressListener localProgress = progress.threadLocalReporter();\n         ArrayBlockingQueue<BatchedRelationshipRecords>[] threadQueues = new ArrayBlockingQueue[numberOfChainCheckers];\n         BatchedRelationshipRecords[] threadBatches = new BatchedRelationshipRecords[numberOfChainCheckers];\n-        for ( int i = 0; i < numberOfChainCheckers; i++ )\n+        for (int i = 0; i < numberOfChainCheckers; i++)\n         {\n-            threadQueues[i] = new ArrayBlockingQueue<>( 20 );\n+            threadQueues[i] = new ArrayBlockingQueue<>(20);\n             threadBatches[i] = new BatchedRelationshipRecords();\n-            workers[i] = relationshipVsRelationshipChecker( nodeIdRange, direction, relationshipStore, threadQueues[i], end, i );\n+            workers[i] = relationshipVsRelationshipChecker(nodeIdRange, direction, relationshipStore, threadQueues[i], end, i);\n         }\n \n         // Record reader\n         workers[workers.length - 1] = () ->\n         {\n             RelationshipRecord relationship = relationshipStore.newRecord();\n-            try ( var cursorTracer = context.pageCacheTracer.createPageCursorTracer( RELATIONSHIP_CONSISTENCY_CHECKER_TAG );\n-                  var cursor = relationshipStore.openPageCursorForReadingWithPrefetching( 0, cursorTracer ) )\n+            try (var cursorTracer = context.pageCacheTracer.createPageCursorTracer(RELATIONSHIP_CONSISTENCY_CHECKER_TAG);\n+                 var cursor = relationshipStore.openPageCursorForReadingWithPrefetching(0, cursorTracer))\n             {\n                 int recordsPerPage = relationshipStore.getRecordsPerPage();\n-                long id = direction.startingId( highId );\n-                while ( id >= 0 && id < highId && !context.isCancelled() )\n+                long id = direction.startingId(highId);\n+                while (id >= 0 && id < highId && !context.isCancelled())\n                 {\n-                    for ( int i = 0; i < recordsPerPage && id >= 0 && id < highId; i++, id = direction.nextId( id ) )\n+                    for (int i = 0; i < recordsPerPage && id >= 0 && id < highId; i++, id = direction.nextId(id))\n                     {\n-                        relationshipStore.getRecordByCursor( id, relationship, FORCE, cursor );\n-                        localProgress.add( 1 );\n-                        if ( relationship.inUse() )\n+                        relationshipStore.getRecordByCursor(id, relationship, FORCE, cursor);\n+                        localProgress.add(1);\n+                        if (relationship.inUse())\n                         {\n-                            queueRelationshipCheck( threadQueues, threadBatches, relationship );\n+                            queueRelationshipCheck(threadQueues, threadBatches, relationship);\n                         }\n                     }\n                 }\n-                processLastRelationshipChecks( threadQueues, threadBatches, end );\n+                processLastRelationshipChecks(threadQueues, threadBatches, end);\n                 localProgress.done();\n             }\n         };\n \n         Stopwatch stopwatch = Stopwatch.start();\n         cacheAccess.clearCache();\n-        context.execution.runAll( getClass().getSimpleName() + \"-\" + direction.name(), workers );\n-        detectSingleRelationshipChainInconsistencies( nodeIdRange );\n-        context.paddedDebug( \"%s %s took %s\", this, direction, duration( stopwatch.elapsed( TimeUnit.MILLISECONDS ) ) );\n+        context.execution.runAll(getClass().getSimpleName() + \"-\" + direction.name(), workers);\n+        detectSingleRelationshipChainInconsistencies(nodeIdRange);\n+        context.paddedDebug(\"%s %s took %s\", this, direction, duration(stopwatch.elapsed(TimeUnit.MILLISECONDS)));\n     }\n \n     @Override\n-    public boolean shouldBeChecked( ConsistencyFlags flags )\n+    public boolean shouldBeChecked(ConsistencyFlags flags)\n     {\n         return flags.isCheckGraph();\n     }\n \n-    private void detectSingleRelationshipChainInconsistencies( LongRange nodeIdRange )\n+    private void detectSingleRelationshipChainInconsistencies(LongRange nodeIdRange)\n     {\n         CacheAccess.Client client = cacheAccess.client();\n-        try ( var cursorTracer = context.pageCacheTracer.createPageCursorTracer( SINGLE_RELATIONSHIP_CONSISTENCY_CHECKER_TAG ) )\n+        try (var cursorTracer = context.pageCacheTracer.createPageCursorTracer(SINGLE_RELATIONSHIP_CONSISTENCY_CHECKER_TAG))\n         {\n-            for ( long nodeId = nodeIdRange.from(); nodeId < nodeIdRange.to(); nodeId++ )\n+            for (long nodeId = nodeIdRange.from(); nodeId < nodeIdRange.to(); nodeId++)\n             {\n-                boolean inUse = client.getBooleanFromCache( nodeId, SLOT_IN_USE );\n-                boolean hasMultipleRelationships = client.getBooleanFromCache( nodeId, SLOT_HAS_MULTIPLE_RELATIONSHIPS );\n-                if ( inUse && !hasMultipleRelationships )\n+                boolean inUse = client.getBooleanFromCache(nodeId, SLOT_IN_USE);\n+                boolean hasMultipleRelationships = client.getBooleanFromCache(nodeId, SLOT_HAS_MULTIPLE_RELATIONSHIPS);\n+                if (inUse && !hasMultipleRelationships)\n                 {\n-                    long reference = client.getFromCache( nodeId, SLOT_REFERENCE );\n-                    long relationshipId = client.getFromCache( nodeId, SLOT_RELATIONSHIP_ID );\n-                    long sourceOrTarget = client.getFromCache( nodeId, SLOT_SOURCE_OR_TARGET );\n-                    long prevOrNext = client.getFromCache( nodeId, SLOT_PREV_OR_NEXT );\n-                    boolean isFirstInChain = client.getBooleanFromCache( nodeId, SLOT_FIRST_IN_CHAIN );\n+                    long reference = client.getFromCache(nodeId, SLOT_REFERENCE);\n+                    long relationshipId = client.getFromCache(nodeId, SLOT_RELATIONSHIP_ID);\n+                    long sourceOrTarget = client.getFromCache(nodeId, SLOT_SOURCE_OR_TARGET);\n+                    long prevOrNext = client.getFromCache(nodeId, SLOT_PREV_OR_NEXT);\n+                    boolean isFirstInChain = client.getBooleanFromCache(nodeId, SLOT_FIRST_IN_CHAIN);\n \n                     boolean consistent;\n-                    if ( prevOrNext == PREV )\n+                    if (prevOrNext == PREV)\n                     {\n                         // 1 is the expected degree of a prev reference for a relationship that is first in chain of length 1\n                         consistent = reference == 1 && isFirstInChain;\n-                    }\n-                    else\n+                    } else\n                     {\n-                        consistent = NULL_REFERENCE.is( reference );\n+                        consistent = NULL_REFERENCE.is(reference);\n                     }\n \n-                    if ( !consistent )\n+                    if (!consistent)\n                     {\n                         RelationshipStore relationshipStore = context.neoStores.getRelationshipStore();\n-                        RelationshipRecord relationship = relationshipStore.getRecord( relationshipId, relationshipStore.newRecord(), FORCE, cursorTracer );\n-                        RelationshipRecord referenceRelationship = relationshipStore.getRecord( reference, relationshipStore.newRecord(), FORCE, cursorTracer );\n-                        linkOf( sourceOrTarget == SOURCE, prevOrNext == PREV ).reportDoesNotReferenceBack( reporter, relationship, referenceRelationship );\n+                        RelationshipRecord relationship = relationshipStore.getRecord(relationshipId, relationshipStore.newRecord(), FORCE, cursorTracer);\n+                        RelationshipRecord referenceRelationship = relationshipStore.getRecord(reference, relationshipStore.newRecord(), FORCE, cursorTracer);\n+                        linkOf(sourceOrTarget == SOURCE, prevOrNext == PREV).reportDoesNotReferenceBack(reporter, relationship, referenceRelationship);\n                     }\n                 }\n             }\n         }\n     }\n \n-    private static RelationshipLink linkOf( boolean source, boolean prev )\n+    private static RelationshipLink linkOf(boolean source, boolean prev)\n     {\n-        if ( source )\n+        if (source)\n         {\n             return prev ? SOURCE_PREV : SOURCE_NEXT;\n         }\n         return prev ? TARGET_PREV : TARGET_NEXT;\n     }\n \n-    private ThrowingRunnable relationshipVsRelationshipChecker( LongRange nodeIdRange, ScanDirection direction, RelationshipStore store,\n-            ArrayBlockingQueue<BatchedRelationshipRecords> queue, AtomicBoolean end, int threadId )\n+    private ThrowingRunnable relationshipVsRelationshipChecker(LongRange nodeIdRange, ScanDirection direction, RelationshipStore store,\n+                                                               ArrayBlockingQueue<BatchedRelationshipRecords> queue, AtomicBoolean end, int threadId)\n     {\n         final RelationshipRecord relationship = store.newRecord();\n         final RelationshipRecord otherRelationship = store.newRecord();\n@@ -210,65 +210,63 @@ class RelationshipChainChecker implements Checker\n         final long prevOrNext = direction.cacheSlot;\n         return () ->\n         {\n-            try ( var cursorTracer = context.pageCacheTracer.createPageCursorTracer( RELATIONSHIP_CONSISTENCY_CHECKER_TAG );\n-                  var otherRelationshipCursor = store.openPageCursorForReading( 0, cursorTracer ) )\n+            try (var cursorTracer = context.pageCacheTracer.createPageCursorTracer(RELATIONSHIP_CONSISTENCY_CHECKER_TAG);\n+                 var otherRelationshipCursor = store.openPageCursorForReading(0, cursorTracer))\n             {\n-                while ( (!end.get() || !queue.isEmpty()) && !context.isCancelled() )\n+                while ((!end.get() || !queue.isEmpty()) && !context.isCancelled())\n                 {\n-                    BatchedRelationshipRecords batch = queue.poll( 100, TimeUnit.MILLISECONDS );\n-                    if ( batch != null )\n+                    BatchedRelationshipRecords batch = queue.poll(100, TimeUnit.MILLISECONDS);\n+                    if (batch != null)\n                     {\n-                        while ( batch.fillNext( relationship ) && !context.isCancelled() )\n+                        while (batch.fillNext(relationship) && !context.isCancelled())\n                         {\n                             long firstNode = relationship.getFirstNode();\n                             long secondNode = relationship.getSecondNode();\n                             // Intentionally not checking nodes outside highId of node store because RelationshipChecker will spot this inconsistency\n                             boolean processStartNode =\n-                                    Math.abs( firstNode % numberOfChainCheckers ) == threadId && nodeIdRange.isWithinRangeExclusiveTo( firstNode );\n+                              Math.abs(firstNode % numberOfChainCheckers) == threadId && nodeIdRange.isWithinRangeExclusiveTo(firstNode);\n                             boolean processEndNode =\n-                                    Math.abs( secondNode % numberOfChainCheckers ) == threadId && nodeIdRange.isWithinRangeExclusiveTo( secondNode );\n-                            if ( processStartNode )\n+                              Math.abs(secondNode % numberOfChainCheckers) == threadId && nodeIdRange.isWithinRangeExclusiveTo(secondNode);\n+                            if (processStartNode)\n                             {\n-                                checkRelationshipLink( direction, SOURCE_PREV, relationship, client, otherRelationship, otherRelationshipCursor, store,\n-                                        cursorTracer );\n-                                checkRelationshipLink( direction, SOURCE_NEXT, relationship, client, otherRelationship, otherRelationshipCursor, store,\n-                                        cursorTracer );\n+                                checkRelationshipLink(direction, SOURCE_PREV, relationship, client, otherRelationship, otherRelationshipCursor, store,\n+                                  cursorTracer);\n+                                checkRelationshipLink(direction, SOURCE_NEXT, relationship, client, otherRelationship, otherRelationshipCursor, store,\n+                                  cursorTracer);\n                             }\n-                            if ( processEndNode )\n+                            if (processEndNode)\n                             {\n-                                checkRelationshipLink( direction, TARGET_PREV, relationship, client, otherRelationship, otherRelationshipCursor, store,\n-                                        cursorTracer );\n-                                checkRelationshipLink( direction, TARGET_NEXT, relationship, client, otherRelationship, otherRelationshipCursor, store,\n-                                        cursorTracer );\n+                                checkRelationshipLink(direction, TARGET_PREV, relationship, client, otherRelationship, otherRelationshipCursor, store,\n+                                  cursorTracer);\n+                                checkRelationshipLink(direction, TARGET_NEXT, relationship, client, otherRelationship, otherRelationshipCursor, store,\n+                                  cursorTracer);\n                             }\n-                            if ( processStartNode )\n+                            if (processStartNode)\n                             {\n-                                boolean wasInUse = client.getBooleanFromCache( firstNode, SLOT_IN_USE );\n-                                long link = sourceCachePointer.link( relationship );\n-                                if ( link < NULL_REFERENCE.longValue() )\n+                                boolean wasInUse = client.getBooleanFromCache(firstNode, SLOT_IN_USE);\n+                                long link = sourceCachePointer.link(relationship);\n+                                if (link < NULL_REFERENCE.longValue())\n                                 {\n-                                    sourceCachePointer.reportDoesNotReferenceBack( reporter, relationship, otherRelationship );\n-                                }\n-                                else\n+                                    sourceCachePointer.reportDoesNotReferenceBack(reporter, relationship, otherRelationship);\n+                                } else\n                                 {\n-                                    client.putToCache( firstNode, relationship.getId(), link, SOURCE, prevOrNext, 1,\n-                                            longOf( wasInUse ), longOf( relationship.isFirstInFirstChain() ) );\n+                                    client.putToCache(firstNode, relationship.getId(), link, SOURCE, prevOrNext, 1,\n+                                      longOf(wasInUse), longOf(relationship.isFirstInFirstChain()));\n                                 }\n \n                             }\n-                            if ( processEndNode )\n+                            if (processEndNode)\n                             {\n-                                boolean wasInUse = client.getBooleanFromCache( secondNode, SLOT_IN_USE );\n+                                boolean wasInUse = client.getBooleanFromCache(secondNode, SLOT_IN_USE);\n \n-                                long link = targetCachePointer.link( relationship );\n-                                if ( link < NULL_REFERENCE.longValue() )\n+                                long link = targetCachePointer.link(relationship);\n+                                if (link < NULL_REFERENCE.longValue())\n                                 {\n-                                    targetCachePointer.reportDoesNotReferenceBack( reporter, relationship, otherRelationship );\n-                                }\n-                                else\n+                                    targetCachePointer.reportDoesNotReferenceBack(reporter, relationship, otherRelationship);\n+                                } else\n                                 {\n-                                    client.putToCache( secondNode, relationship.getId(), link, TARGET, prevOrNext, 1,\n-                                            longOf( wasInUse ), longOf( relationship.isFirstInSecondChain() ) );\n+                                    client.putToCache(secondNode, relationship.getId(), link, TARGET, prevOrNext, 1,\n+                                      longOf(wasInUse), longOf(relationship.isFirstInSecondChain()));\n                                 }\n \n                             }\n@@ -279,187 +277,183 @@ class RelationshipChainChecker implements Checker\n         };\n     }\n \n-    private void checkRelationshipLink( ScanDirection direction, RelationshipLink link, RelationshipRecord relationshipCursor,\n-            CacheAccess.Client client, RelationshipRecord otherRelationship, PageCursor otherRelationshipCursor, RelationshipStore store,\n-            PageCursorTracer cursorTracer )\n+    private void checkRelationshipLink(ScanDirection direction, RelationshipLink link, RelationshipRecord relationshipCursor,\n+                                       CacheAccess.Client client, RelationshipRecord otherRelationship, PageCursor otherRelationshipCursor,\n+                                       RelationshipStore store,\n+                                       PageCursorTracer cursorTracer)\n     {\n         long relationshipId = relationshipCursor.getId();\n-        long nodeId = link.node( relationshipCursor );\n-        long linkId = link.link( relationshipCursor );\n-        long fromCache = client.getFromCache( nodeId, SLOT_RELATIONSHIP_ID );\n-        boolean cachedLinkInUse = client.getBooleanFromCache( nodeId, SLOT_IN_USE );\n-        if ( !link.endOfChain( relationshipCursor ) && cachedLinkInUse )\n+        long nodeId = link.node(relationshipCursor);\n+        long linkId = link.link(relationshipCursor);\n+        long fromCache = client.getFromCache(nodeId, SLOT_RELATIONSHIP_ID);\n+        boolean cachedLinkInUse = client.getBooleanFromCache(nodeId, SLOT_IN_USE);\n+        if (!link.endOfChain(relationshipCursor) && cachedLinkInUse)\n         {\n-            if ( fromCache != linkId )\n+            if (fromCache != linkId)\n             {\n                 // We can't use the cache since it doesn't contain the relationship right before us in this chain\n-                if ( direction.exclude( relationshipId, linkId ) )\n+                if (direction.exclude(relationshipId, linkId))\n                 {\n                     return;\n-                }\n-                else if ( !NULL_REFERENCE.is( fromCache ) )\n+                } else if (!NULL_REFERENCE.is(fromCache))\n                 {\n                     // Load it from store\n-                    store.getRecordByCursor( linkId, otherRelationship, FORCE, otherRelationshipCursor );\n-                }\n-                else\n+                    store.getRecordByCursor(linkId, otherRelationship, FORCE, otherRelationshipCursor);\n+                } else\n                 {\n                     otherRelationship.clear();\n-                    link.reportDoesNotReferenceBack( reporter, recordLoader.relationship( relationshipCursor.getId(), cursorTracer ), otherRelationship );\n+                    link.reportDoesNotReferenceBack(reporter, recordLoader.relationship(relationshipCursor.getId(), cursorTracer), otherRelationship);\n                 }\n-            }\n-            else\n+            } else\n             {\n                 // OK good we can use the cached values representing a relationship right before us in this chain\n                 otherRelationship.clear();\n-                otherRelationship.setId( linkId );\n-                long other = client.getFromCache( nodeId, SLOT_REFERENCE );\n-                NodeLink nodeLink = client.getFromCache( nodeId, SLOT_SOURCE_OR_TARGET ) == SOURCE ? NodeLink.SOURCE : NodeLink.TARGET;\n-                nodeLink.setNode( otherRelationship, nodeId );\n-                link.setOther( otherRelationship, nodeLink, other );\n-                otherRelationship.setInUse( client.getBooleanFromCache( nodeId, SLOT_IN_USE ) );\n+                otherRelationship.setId(linkId);\n+                long other = client.getFromCache(nodeId, SLOT_REFERENCE);\n+                NodeLink nodeLink = client.getFromCache(nodeId, SLOT_SOURCE_OR_TARGET) == SOURCE ? NodeLink.SOURCE : NodeLink.TARGET;\n+                nodeLink.setNode(otherRelationship, nodeId);\n+                link.setOther(otherRelationship, nodeLink, other);\n+                otherRelationship.setInUse(client.getBooleanFromCache(nodeId, SLOT_IN_USE));\n                 otherRelationship.setCreated();\n             }\n-            checkRelationshipLink( direction, link, otherRelationship, relationshipId, nodeId, linkId, cursorTracer );\n+            checkRelationshipLink(direction, link, otherRelationship, relationshipId, nodeId, linkId, cursorTracer);\n         }\n     }\n \n-    private void checkRelationshipLink( ScanDirection direction, RelationshipLink thing, RelationshipRecord otherRelationship, long relationshipId, long nodeId,\n-            long linkId, PageCursorTracer cursorTracer )\n+    private void checkRelationshipLink(ScanDirection direction, RelationshipLink thing, RelationshipRecord otherRelationship, long relationshipId, long nodeId,\n+                                       long linkId, PageCursorTracer cursorTracer)\n     {\n         // Perform the checks\n-        NodeLink nodeLink = NodeLink.select( otherRelationship, nodeId );\n-        if ( nodeLink == null )\n+        NodeLink nodeLink = NodeLink.select(otherRelationship, nodeId);\n+        if (nodeLink == null)\n         {\n-            thing.reportOtherNode( reporter, recordLoader.relationship( relationshipId, cursorTracer ), recordLoader.relationship( linkId, cursorTracer ) );\n-        }\n-        else\n+            thing.reportOtherNode(reporter, recordLoader.relationship(relationshipId, cursorTracer), recordLoader.relationship(linkId, cursorTracer));\n+        } else\n         {\n-            if ( thing.other( otherRelationship, nodeLink ) != relationshipId )\n+            if (thing.other(otherRelationship, nodeLink) != relationshipId)\n             {\n                 // Read the relationship from store and do the check on that actual record instead, should happen rarely anyway\n-                if ( otherRelationship.isCreated() )\n+                if (otherRelationship.isCreated())\n                 {\n-                    recordLoader.relationship( otherRelationship, otherRelationship.getId(), cursorTracer );\n+                    recordLoader.relationship(otherRelationship, otherRelationship.getId(), cursorTracer);\n                     // Call this method one more time, now with !created\n-                    checkRelationshipLink( direction, thing, otherRelationship, relationshipId, nodeId, linkId, cursorTracer );\n+                    checkRelationshipLink(direction, thing, otherRelationship, relationshipId, nodeId, linkId, cursorTracer);\n                     return;\n                 }\n \n-                thing.reportDoesNotReferenceBack( reporter, recordLoader.relationship( relationshipId, cursorTracer ),\n-                        recordLoader.relationship( linkId, cursorTracer ) );\n-            }\n-            else\n+                thing.reportDoesNotReferenceBack(reporter, recordLoader.relationship(relationshipId, cursorTracer),\n+                  recordLoader.relationship(linkId, cursorTracer));\n+            } else\n             {\n-                if ( !direction.exclude( relationshipId, linkId ) && !otherRelationship.inUse() )\n+                if (!direction.exclude(relationshipId, linkId) && !otherRelationship.inUse())\n                 {\n-                    thing.reportNotUsedRelationshipReferencedInChain( reporter, recordLoader.relationship( relationshipId, cursorTracer ),\n-                            recordLoader.relationship( linkId, cursorTracer ) );\n+                    thing.reportNotUsedRelationshipReferencedInChain(reporter, recordLoader.relationship(relationshipId, cursorTracer),\n+                      recordLoader.relationship(linkId, cursorTracer));\n                 }\n             }\n         }\n     }\n \n-    private void queueRelationshipCheck( ArrayBlockingQueue<BatchedRelationshipRecords>[] threadQueues, BatchedRelationshipRecords[] threadBatches,\n-            RelationshipRecord relationshipCursor ) throws InterruptedException\n+    private void queueRelationshipCheck(ArrayBlockingQueue<BatchedRelationshipRecords>[] threadQueues, BatchedRelationshipRecords[] threadBatches,\n+                                        RelationshipRecord relationshipCursor) throws InterruptedException\n     {\n-        int sourceThread = (int) Math.abs( relationshipCursor.getFirstNode() % numberOfChainCheckers );\n-        queueRelationshipCheck( threadQueues, threadBatches, relationshipCursor, sourceThread );\n-        int targetThread = (int) Math.abs( relationshipCursor.getSecondNode() % numberOfChainCheckers );\n-        if ( targetThread != sourceThread )\n+        int sourceThread = (int) Math.abs(relationshipCursor.getFirstNode() % numberOfChainCheckers);\n+        queueRelationshipCheck(threadQueues, threadBatches, relationshipCursor, sourceThread);\n+        int targetThread = (int) Math.abs(relationshipCursor.getSecondNode() % numberOfChainCheckers);\n+        if (targetThread != sourceThread)\n         {\n-            queueRelationshipCheck( threadQueues, threadBatches, relationshipCursor, targetThread );\n+            queueRelationshipCheck(threadQueues, threadBatches, relationshipCursor, targetThread);\n         }\n     }\n \n-    private void queueRelationshipCheck( ArrayBlockingQueue<BatchedRelationshipRecords>[] threadQueues, BatchedRelationshipRecords[] threadBatches,\n-            RelationshipRecord relationshipCursor, int thread ) throws InterruptedException\n+    private void queueRelationshipCheck(ArrayBlockingQueue<BatchedRelationshipRecords>[] threadQueues, BatchedRelationshipRecords[] threadBatches,\n+                                        RelationshipRecord relationshipCursor, int thread) throws InterruptedException\n     {\n-        if ( !threadBatches[thread].hasMoreSpace() )\n+        if (!threadBatches[thread].hasMoreSpace())\n         {\n-            threadQueues[thread].put( threadBatches[thread] );\n+            threadQueues[thread].put(threadBatches[thread]);\n             threadBatches[thread] = new BatchedRelationshipRecords();\n         }\n-        threadBatches[thread].add( relationshipCursor );\n+        threadBatches[thread].add(relationshipCursor);\n     }\n \n-    private void processLastRelationshipChecks( ArrayBlockingQueue<BatchedRelationshipRecords>[] threadQueues, BatchedRelationshipRecords[] threadBatches,\n-            AtomicBoolean end ) throws Exception\n+    private void processLastRelationshipChecks(ArrayBlockingQueue<BatchedRelationshipRecords>[] threadQueues, BatchedRelationshipRecords[] threadBatches,\n+                                               AtomicBoolean end) throws Exception\n     {\n-        for ( int i = 0; i < threadBatches.length; i++ )\n+        for (int i = 0; i < threadBatches.length; i++)\n         {\n-            if ( threadBatches[i].numberOfRelationships() > 0 )\n+            if (threadBatches[i].numberOfRelationships() > 0)\n             {\n-                threadQueues[i].put( threadBatches[i] );\n+                threadQueues[i].put(threadBatches[i]);\n             }\n         }\n-        end.set( true );\n+        end.set(true);\n     }\n \n     @Override\n     public String toString()\n     {\n-        return String.format( \"%s[highId:%d]\",getClass().getSimpleName(), context.neoStores.getRelationshipStore().getHighId() );\n+        return String.format(\"%s[highId:%d]\", getClass().getSimpleName(), context.neoStores.getRelationshipStore().getHighId());\n     }\n \n     private enum ScanDirection\n     {\n-        FORWARD( SOURCE_PREV, TARGET_PREV, PREV )\n-        {\n-            @Override\n-            boolean exclude( long id, long reference )\n-            {\n-                return !NULL_REFERENCE.is( reference ) && reference > id;\n-            }\n-\n-            @Override\n-            long nextId( long id )\n-            {\n-                return id + 1;\n-            }\n-\n-            @Override\n-            long startingId( long highId )\n-            {\n-                return 0;\n-            }\n-        },\n-        BACKWARD( SOURCE_NEXT, TARGET_NEXT, NEXT )\n-        {\n-            @Override\n-            boolean exclude( long id, long reference )\n-            {\n-                return !NULL_REFERENCE.is( reference ) && reference < id;\n-            }\n-\n-            @Override\n-            long nextId( long id )\n-            {\n-                return id - 1;\n-            }\n-\n-            @Override\n-            long startingId( long highId )\n-            {\n-                return highId - 1;\n-            }\n-        };\n+        FORWARD(SOURCE_PREV, TARGET_PREV, PREV)\n+          {\n+              @Override\n+              boolean exclude(long id, long reference)\n+              {\n+                  return !NULL_REFERENCE.is(reference) && reference > id;\n+              }\n+\n+              @Override\n+              long nextId(long id)\n+              {\n+                  return id + 1;\n+              }\n+\n+              @Override\n+              long startingId(long highId)\n+              {\n+                  return 0;\n+              }\n+          },\n+        BACKWARD(SOURCE_NEXT, TARGET_NEXT, NEXT)\n+          {\n+              @Override\n+              boolean exclude(long id, long reference)\n+              {\n+                  return !NULL_REFERENCE.is(reference) && reference < id;\n+              }\n+\n+              @Override\n+              long nextId(long id)\n+              {\n+                  return id - 1;\n+              }\n+\n+              @Override\n+              long startingId(long highId)\n+              {\n+                  return highId - 1;\n+              }\n+          };\n \n         final RelationshipLink sourceLink;\n         final RelationshipLink targetLink;\n         final long cacheSlot;\n \n-        ScanDirection( RelationshipLink sourceLink, RelationshipLink targetLink, long cacheSlot )\n+        ScanDirection(RelationshipLink sourceLink, RelationshipLink targetLink, long cacheSlot)\n         {\n             this.sourceLink = sourceLink;\n             this.targetLink = targetLink;\n             this.cacheSlot = cacheSlot;\n         }\n \n-        abstract boolean exclude( long id, long reference );\n+        abstract boolean exclude(long id, long reference);\n \n-        abstract long nextId( long id );\n+        abstract long nextId(long id);\n \n-        abstract long startingId( long highId );\n+        abstract long startingId(long highId);\n     }\n }\n",
            "diff_size": 192
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
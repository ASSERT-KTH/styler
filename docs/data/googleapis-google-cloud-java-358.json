{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "358",
    "information": {
        "errors": [
            {
                "line": "330",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   */\n  // [TARGET listSubscriptionsAsync(ListOption...)]\n  public Page<Subscription> listSubscriptionsAsync() throws ExecutionException, InterruptedException {\n    // [START listSubscriptionsAsync]\n    Future<AsyncPage<Subscription>> future =\n        pubsub.listSubscriptionsAsync(ListOption.pageSize(100));",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "330",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/358/PubSubSnippets.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/358/PubSubSnippets.java\nindex bac2e1d3d99..2812e1e5557 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/358/PubSubSnippets.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/358/PubSubSnippets.java\n@@ -327,7 +327,8 @@ public class PubSubSnippets {\n    * Example of asynchronously listing subscriptions, specifying the page size.\n    */\n   // [TARGET listSubscriptionsAsync(ListOption...)]\n-  public Page<Subscription> listSubscriptionsAsync() throws ExecutionException, InterruptedException {\n+  public Page<Subscription> listSubscriptionsAsync()\n+      throws ExecutionException, InterruptedException {\n     // [START listSubscriptionsAsync]\n     Future<AsyncPage<Subscription>> future =\n         pubsub.listSubscriptionsAsync(ListOption.pageSize(100));\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "330",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/358/PubSubSnippets.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/358/PubSubSnippets.java\nindex bac2e1d3d99..5718f1d2718 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/358/PubSubSnippets.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/358/PubSubSnippets.java\n@@ -173,7 +173,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public boolean deleteTopicAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START deleteTopicAsync]\n+  // [START deleteTopicAsync]\n     Future<Boolean> future = pubsub.deleteTopicAsync(topicName);\n     // ...\n     boolean deleted = future.get();\n@@ -208,7 +208,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public Subscription createSubscriptionAsync(String topicName, String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START createSubscriptionAsync]\n+  // [START createSubscriptionAsync]\n     SubscriptionInfo subscriptionInfo = SubscriptionInfo.of(topicName, subscriptionName);\n     Future<Subscription> future = pubsub.createAsync(subscriptionInfo);\n     // ...\n@@ -251,7 +251,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"https://www.example.com/push\"]\n   public void replacePushConfigAsync(String subscriptionName, String endpoint)\n       throws ExecutionException, InterruptedException {\n-    // [START replacePushConfigAsync]\n+  // [START replacePushConfigAsync]\n     PushConfig pushConfig = PushConfig.of(endpoint);\n     Future<Void> future = pubsub.replacePushConfigAsync(subscriptionName, pushConfig);\n     // ...\n@@ -267,7 +267,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public void replacePushConfigToPullAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START replacePushConfigToPullAsync]\n+  // [START replacePushConfigToPullAsync]\n     Future<Void> future = pubsub.replacePushConfigAsync(subscriptionName, null);\n     // ...\n     future.get();\n@@ -296,7 +296,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public Subscription getSubscriptionAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START getSubscriptionAsync]\n+  // [START getSubscriptionAsync]\n     Future<Subscription> future = pubsub.getSubscriptionAsync(subscriptionName);\n     // ...\n     Subscription subscription = future.get();\n@@ -331,7 +331,7 @@ public class PubSubSnippets {\n     // [START listSubscriptionsAsync]\n     Future<AsyncPage<Subscription>> future =\n         pubsub.listSubscriptionsAsync(ListOption.pageSize(100));\n-    // ...\n+// ...\n     AsyncPage<Subscription> subscriptions = future.get();\n     Iterator<Subscription> subscriptionIterator = subscriptions.iterateAll();\n     while (subscriptionIterator.hasNext()) {\n@@ -367,10 +367,10 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public Page<SubscriptionId> listSubscriptionsForTopicAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START listSubscriptionsForTopicAsync]\n+  // [START listSubscriptionsForTopicAsync]\n     Future<AsyncPage<SubscriptionId>> future =\n         pubsub.listSubscriptionsAsync(topicName, ListOption.pageSize(100));\n-    // ...\n+// ...\n     AsyncPage<SubscriptionId> subscriptions = future.get();\n     Iterator<SubscriptionId> subscriptionIterator = subscriptions.iterateAll();\n     while (subscriptionIterator.hasNext()) {\n@@ -405,7 +405,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public boolean deleteSubscriptionAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START deleteSubscriptionAsync]\n+  // [START deleteSubscriptionAsync]\n     Future<Boolean> future = pubsub.deleteSubscriptionAsync(subscriptionName);\n     // ...\n     boolean deleted = future.get();\n@@ -440,7 +440,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public Policy getTopicPolicyAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START getTopicPolicyAsync]\n+  // [START getTopicPolicyAsync]\n     Future<Policy> future = pubsub.getTopicPolicyAsync(topicName);\n     // ...\n     Policy policy = future.get();\n@@ -474,7 +474,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public Policy replaceTopicPolicyAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START replaceTopicPolicyAsync]\n+  // [START replaceTopicPolicyAsync]\n     Policy policy = pubsub.getTopicPolicy(topicName);\n     Policy updatedPolicy = policy.toBuilder()\n         .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n@@ -507,7 +507,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public List<Boolean> testTopicPermissionsAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START testTopicPermissionsAsync]\n+  // [START testTopicPermissionsAsync]\n     List<String> permissions = new LinkedList<>();\n     permissions.add(\"pubsub.topics.get\");\n     Future<List<Boolean>> future = pubsub.testTopicPermissionsAsync(topicName, permissions);\n@@ -539,7 +539,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public Policy getSubscriptionPolicyAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START getSubscriptionPolicyAsync]\n+  // [START getSubscriptionPolicyAsync]\n     Future<Policy> future = pubsub.getSubscriptionPolicyAsync(subscriptionName);\n     // ...\n     Policy policy = future.get();\n@@ -573,14 +573,14 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public Policy replaceSubscriptionPolicyAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START replaceSubscriptionPolicyAsync]\n+  // [START replaceSubscriptionPolicyAsync]\n     Policy policy = pubsub.getSubscriptionPolicy(subscriptionName);\n     Policy updatedPolicy = policy.toBuilder()\n         .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n         .build();\n     Future<Policy> future =\n         pubsub.replaceSubscriptionPolicyAsync(subscriptionName, updatedPolicy);\n-    // ...\n+// ...\n     updatedPolicy = future.get();\n     // [END replaceSubscriptionPolicyAsync]\n     return updatedPolicy;\n@@ -597,7 +597,7 @@ public class PubSubSnippets {\n     permissions.add(\"pubsub.subscriptions.get\");\n     List<Boolean> testedPermissions =\n         pubsub.testSubscriptionPermissions(subscriptionName, permissions);\n-    // [END testSubscriptionPermissions]\n+// [END testSubscriptionPermissions]\n     return testedPermissions;\n   }\n \n@@ -609,14 +609,14 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public List<Boolean> testSubscriptionPermissionsAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START testSubscriptionPermissionsAsync]\n+  // [START testSubscriptionPermissionsAsync]\n     List<String> permissions = new LinkedList<>();\n     permissions.add(\"pubsub.subscriptions.get\");\n     Future<List<Boolean>> future =\n         pubsub.testSubscriptionPermissionsAsync(subscriptionName, permissions);\n-    // ...\n+// ...\n     List<Boolean> testedPermissions = future.get();\n     // [END testSubscriptionPermissionsAsync]\n     return testedPermissions;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "187",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "225",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "270",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "286",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "317",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "352",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "354",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "374",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "390",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "392",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "430",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "469",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "491",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "503",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "506",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "535",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "569",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "591",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "603",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "606",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "624",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "636",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "640",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/358/PubSubSnippets.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/358/PubSubSnippets.java\nindex bac2e1d3d99..ee100a23d82 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/358/PubSubSnippets.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/358/PubSubSnippets.java\n@@ -36,7 +36,6 @@ import com.google.cloud.pubsub.SubscriptionId;\n import com.google.cloud.pubsub.SubscriptionInfo;\n import com.google.cloud.pubsub.Topic;\n import com.google.cloud.pubsub.TopicInfo;\n-\n import java.util.Iterator;\n import java.util.LinkedList;\n import java.util.List;\n@@ -47,6 +46,8 @@ import java.util.concurrent.TimeUnit;\n /**\n  * This class contains a number of snippets for the {@link PubSub} interface.\n  */\n+\n+\n public class PubSubSnippets {\n \n   private final PubSub pubsub;\n@@ -60,6 +61,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET create(TopicInfo)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Topic createTopic(String topicName) {\n     // [START createTopic]\n     TopicInfo topicInfo = TopicInfo.of(topicName);\n@@ -73,6 +75,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET createAsync(TopicInfo)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Topic createTopicAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START createTopicAsync]\n     TopicInfo topicInfo = TopicInfo.of(topicName);\n@@ -88,11 +91,13 @@ public class PubSubSnippets {\n    */\n   // [TARGET getTopic(String)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Topic getTopic(String topicName) {\n     // [START getTopic]\n     Topic topic = pubsub.getTopic(topicName);\n     if (topic == null) {\n       // topic was not found\n+\n     }\n     // [END getTopic]\n     return topic;\n@@ -103,6 +108,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET getTopicAsync(String)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Topic getTopicAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START getTopicAsync]\n     Future<Topic> future = pubsub.getTopicAsync(topicName);\n@@ -110,6 +116,7 @@ public class PubSubSnippets {\n     Topic topic = future.get();\n     if (topic == null) {\n       // topic was not found\n+\n     }\n     // [END getTopicAsync]\n     return topic;\n@@ -119,6 +126,7 @@ public class PubSubSnippets {\n    * Example of listing topics, specifying the page size.\n    */\n   // [TARGET listTopics(ListOption...)]\n+\n   public Page<Topic> listTopics() {\n     // [START listTopics]\n     Page<Topic> topics = pubsub.listTopics(ListOption.pageSize(100));\n@@ -135,6 +143,7 @@ public class PubSubSnippets {\n    * Example of asynchronously listing topics, specifying the page size.\n    */\n   // [TARGET listTopicsAsync(ListOption...)]\n+\n   public Page<Topic> listTopicsAsync() throws ExecutionException, InterruptedException {\n     // [START listTopicsAsync]\n     Future<AsyncPage<Topic>> future = pubsub.listTopicsAsync(ListOption.pageSize(100));\n@@ -154,13 +163,16 @@ public class PubSubSnippets {\n    */\n   // [TARGET deleteTopic(String)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public boolean deleteTopic(String topicName) {\n     // [START deleteTopic]\n     boolean deleted = pubsub.deleteTopic(topicName);\n     if (deleted) {\n       // the topic was deleted\n+\n     } else {\n       // the topic was not found\n+\n     }\n     // [END deleteTopic]\n     return deleted;\n@@ -171,16 +183,18 @@ public class PubSubSnippets {\n    */\n   // [TARGET deleteTopicAsync(String)]\n   // [VARIABLE \"my_topic_name\"]\n-  public boolean deleteTopicAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public boolean deleteTopicAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START deleteTopicAsync]\n     Future<Boolean> future = pubsub.deleteTopicAsync(topicName);\n     // ...\n     boolean deleted = future.get();\n     if (deleted) {\n       // the topic was deleted\n+\n     } else {\n       // the topic was not found\n+\n     }\n     // [END deleteTopicAsync]\n     return deleted;\n@@ -192,6 +206,7 @@ public class PubSubSnippets {\n   // [TARGET create(SubscriptionInfo)]\n   // [VARIABLE \"my_topic_name\"]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public Subscription createSubscription(String topicName, String subscriptionName) {\n     // [START createSubscription]\n     SubscriptionInfo subscriptionInfo = SubscriptionInfo.of(topicName, subscriptionName);\n@@ -206,8 +221,8 @@ public class PubSubSnippets {\n   // [TARGET createAsync(SubscriptionInfo)]\n   // [VARIABLE \"my_topic_name\"]\n   // [VARIABLE \"my_subscription_name\"]\n-  public Subscription createSubscriptionAsync(String topicName, String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Subscription createSubscriptionAsync(String topicName, String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START createSubscriptionAsync]\n     SubscriptionInfo subscriptionInfo = SubscriptionInfo.of(topicName, subscriptionName);\n     Future<Subscription> future = pubsub.createAsync(subscriptionInfo);\n@@ -223,6 +238,7 @@ public class PubSubSnippets {\n   // [TARGET replacePushConfig(String, PushConfig)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"https://www.example.com/push\"]\n+\n   public void replacePushConfig(String subscriptionName, String endpoint) {\n     // [START replacePushConfig]\n     PushConfig pushConfig = PushConfig.of(endpoint);\n@@ -236,6 +252,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET replacePushConfig(String, PushConfig)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public void replacePushConfigToPull(String subscriptionName) {\n     // [START replacePushConfigToPull]\n     pubsub.replacePushConfig(subscriptionName, null);\n@@ -249,8 +266,8 @@ public class PubSubSnippets {\n   // [TARGET replacePushConfigAsync(String, PushConfig)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"https://www.example.com/push\"]\n-  public void replacePushConfigAsync(String subscriptionName, String endpoint)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void replacePushConfigAsync(String subscriptionName, String endpoint) throws ExecutionException, InterruptedException {\n     // [START replacePushConfigAsync]\n     PushConfig pushConfig = PushConfig.of(endpoint);\n     Future<Void> future = pubsub.replacePushConfigAsync(subscriptionName, pushConfig);\n@@ -265,8 +282,8 @@ public class PubSubSnippets {\n    */\n   // [TARGET replacePushConfigAsync(String, PushConfig)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public void replacePushConfigToPullAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void replacePushConfigToPullAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START replacePushConfigToPullAsync]\n     Future<Void> future = pubsub.replacePushConfigAsync(subscriptionName, null);\n     // ...\n@@ -279,11 +296,13 @@ public class PubSubSnippets {\n    */\n   // [TARGET getSubscription(String)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public Subscription getSubscription(String subscriptionName) {\n     // [START getSubscription]\n     Subscription subscription = pubsub.getSubscription(subscriptionName);\n     if (subscription == null) {\n       // subscription was not found\n+\n     }\n     // [END getSubscription]\n     return subscription;\n@@ -294,14 +313,15 @@ public class PubSubSnippets {\n    */\n   // [TARGET getSubscriptionAsync(String)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public Subscription getSubscriptionAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Subscription getSubscriptionAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START getSubscriptionAsync]\n     Future<Subscription> future = pubsub.getSubscriptionAsync(subscriptionName);\n     // ...\n     Subscription subscription = future.get();\n     if (subscription == null) {\n       // subscription was not found\n+\n     }\n     // [END getSubscriptionAsync]\n     return subscription;\n@@ -311,6 +331,7 @@ public class PubSubSnippets {\n    * Example of listing subscriptions, specifying the page size.\n    */\n   // [TARGET listSubscriptions(ListOption...)]\n+\n   public Page<Subscription> listSubscriptions() {\n     // [START listSubscriptions]\n     Page<Subscription> subscriptions = pubsub.listSubscriptions(ListOption.pageSize(100));\n@@ -327,10 +348,10 @@ public class PubSubSnippets {\n    * Example of asynchronously listing subscriptions, specifying the page size.\n    */\n   // [TARGET listSubscriptionsAsync(ListOption...)]\n+\n   public Page<Subscription> listSubscriptionsAsync() throws ExecutionException, InterruptedException {\n     // [START listSubscriptionsAsync]\n-    Future<AsyncPage<Subscription>> future =\n-        pubsub.listSubscriptionsAsync(ListOption.pageSize(100));\n+    Future<AsyncPage<Subscription>> future = pubsub.listSubscriptionsAsync(ListOption.pageSize(100));\n     // ...\n     AsyncPage<Subscription> subscriptions = future.get();\n     Iterator<Subscription> subscriptionIterator = subscriptions.iterateAll();\n@@ -347,10 +368,10 @@ public class PubSubSnippets {\n    */\n   // [TARGET listSubscriptions(String, ListOption...)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Page<SubscriptionId> listSubscriptionsForTopic(String topicName) {\n     // [START listSubscriptionsForTopic]\n-    Page<SubscriptionId> subscriptions =\n-        pubsub.listSubscriptions(topicName, ListOption.pageSize(100));\n+    Page<SubscriptionId> subscriptions = pubsub.listSubscriptions(topicName, ListOption.pageSize(100));\n     Iterator<SubscriptionId> subscriptionIterator = subscriptions.iterateAll();\n     while (subscriptionIterator.hasNext()) {\n       SubscriptionId subscription = subscriptionIterator.next();\n@@ -365,11 +386,10 @@ public class PubSubSnippets {\n    */\n   // [TARGET listSubscriptionsAsync(String, ListOption...)]\n   // [VARIABLE \"my_topic_name\"]\n-  public Page<SubscriptionId> listSubscriptionsForTopicAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Page<SubscriptionId> listSubscriptionsForTopicAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START listSubscriptionsForTopicAsync]\n-    Future<AsyncPage<SubscriptionId>> future =\n-        pubsub.listSubscriptionsAsync(topicName, ListOption.pageSize(100));\n+    Future<AsyncPage<SubscriptionId>> future = pubsub.listSubscriptionsAsync(topicName, ListOption.pageSize(100));\n     // ...\n     AsyncPage<SubscriptionId> subscriptions = future.get();\n     Iterator<SubscriptionId> subscriptionIterator = subscriptions.iterateAll();\n@@ -386,13 +406,16 @@ public class PubSubSnippets {\n    */\n   // [TARGET deleteSubscription(String)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public boolean deleteSubscription(String subscriptionName) {\n     // [START deleteSubscription]\n     boolean deleted = pubsub.deleteSubscription(subscriptionName);\n     if (deleted) {\n       // the subscription was deleted\n+\n     } else {\n       // the subscription was not found\n+\n     }\n     // [END deleteSubscription]\n     return deleted;\n@@ -403,16 +426,18 @@ public class PubSubSnippets {\n    */\n   // [TARGET deleteSubscriptionAsync(String)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public boolean deleteSubscriptionAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public boolean deleteSubscriptionAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START deleteSubscriptionAsync]\n     Future<Boolean> future = pubsub.deleteSubscriptionAsync(subscriptionName);\n     // ...\n     boolean deleted = future.get();\n     if (deleted) {\n       // the subscription was deleted\n+\n     } else {\n       // the subscription was not found\n+\n     }\n     // [END deleteSubscriptionAsync]\n     return deleted;\n@@ -423,11 +448,13 @@ public class PubSubSnippets {\n    */\n   // [TARGET getTopicPolicy(String)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Policy getTopicPolicy(String topicName) {\n     // [START getTopicPolicy]\n     Policy policy = pubsub.getTopicPolicy(topicName);\n     if (policy == null) {\n       // topic was not found\n+\n     }\n     // [END getTopicPolicy]\n     return policy;\n@@ -438,14 +465,15 @@ public class PubSubSnippets {\n    */\n   // [TARGET getTopicPolicyAsync(String)]\n   // [VARIABLE \"my_topic_name\"]\n-  public Policy getTopicPolicyAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Policy getTopicPolicyAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START getTopicPolicyAsync]\n     Future<Policy> future = pubsub.getTopicPolicyAsync(topicName);\n     // ...\n     Policy policy = future.get();\n     if (policy == null) {\n       // topic was not found\n+\n     }\n     // [END getTopicPolicyAsync]\n     return policy;\n@@ -456,12 +484,11 @@ public class PubSubSnippets {\n    */\n   // [TARGET replaceTopicPolicy(String, Policy)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Policy replaceTopicPolicy(String topicName) {\n     // [START replaceTopicPolicy]\n     Policy policy = pubsub.getTopicPolicy(topicName);\n-    Policy updatedPolicy = policy.toBuilder()\n-        .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n-        .build();\n+    Policy updatedPolicy = policy.toBuilder().addIdentity(Role.viewer(), Identity.allAuthenticatedUsers()).build();\n     updatedPolicy = pubsub.replaceTopicPolicy(topicName, updatedPolicy);\n     // [END replaceTopicPolicy]\n     return updatedPolicy;\n@@ -472,13 +499,11 @@ public class PubSubSnippets {\n    */\n   // [TARGET replaceTopicPolicyAsync(String, Policy)]\n   // [VARIABLE \"my_topic_name\"]\n-  public Policy replaceTopicPolicyAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Policy replaceTopicPolicyAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START replaceTopicPolicyAsync]\n     Policy policy = pubsub.getTopicPolicy(topicName);\n-    Policy updatedPolicy = policy.toBuilder()\n-        .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n-        .build();\n+    Policy updatedPolicy = policy.toBuilder().addIdentity(Role.viewer(), Identity.allAuthenticatedUsers()).build();\n     Future<Policy> future = pubsub.replaceTopicPolicyAsync(topicName, updatedPolicy);\n     // ...\n     updatedPolicy = future.get();\n@@ -491,6 +516,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET testTopicPermissions(String, List)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public List<Boolean> testTopicPermissions(String topicName) {\n     // [START testTopicPermissions]\n     List<String> permissions = new LinkedList<>();\n@@ -505,8 +531,8 @@ public class PubSubSnippets {\n    */\n   // [TARGET testTopicPermissionsAsync(String, List)]\n   // [VARIABLE \"my_topic_name\"]\n-  public List<Boolean> testTopicPermissionsAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public List<Boolean> testTopicPermissionsAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START testTopicPermissionsAsync]\n     List<String> permissions = new LinkedList<>();\n     permissions.add(\"pubsub.topics.get\");\n@@ -522,11 +548,13 @@ public class PubSubSnippets {\n    */\n   // [TARGET getSubscriptionPolicy(String)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public Policy getSubscriptionPolicy(String subscriptionName) {\n     // [START getSubscriptionPolicy]\n     Policy policy = pubsub.getSubscriptionPolicy(subscriptionName);\n     if (policy == null) {\n       // subscription was not found\n+\n     }\n     // [END getSubscriptionPolicy]\n     return policy;\n@@ -537,14 +565,15 @@ public class PubSubSnippets {\n    */\n   // [TARGET getSubscriptionPolicyAsync(String)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public Policy getSubscriptionPolicyAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Policy getSubscriptionPolicyAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START getSubscriptionPolicyAsync]\n     Future<Policy> future = pubsub.getSubscriptionPolicyAsync(subscriptionName);\n     // ...\n     Policy policy = future.get();\n     if (policy == null) {\n       // subscription was not found\n+\n     }\n     // [END getSubscriptionPolicyAsync]\n     return policy;\n@@ -555,12 +584,11 @@ public class PubSubSnippets {\n    */\n   // [TARGET replaceSubscriptionPolicy(String, Policy)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public Policy replaceSubscriptionPolicy(String subscriptionName) {\n     // [START replaceSubscriptionPolicy]\n     Policy policy = pubsub.getSubscriptionPolicy(subscriptionName);\n-    Policy updatedPolicy = policy.toBuilder()\n-        .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n-        .build();\n+    Policy updatedPolicy = policy.toBuilder().addIdentity(Role.viewer(), Identity.allAuthenticatedUsers()).build();\n     updatedPolicy = pubsub.replaceSubscriptionPolicy(subscriptionName, updatedPolicy);\n     // [END replaceSubscriptionPolicy]\n     return updatedPolicy;\n@@ -571,15 +599,12 @@ public class PubSubSnippets {\n    */\n   // [TARGET replaceSubscriptionPolicyAsync(String, Policy)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public Policy replaceSubscriptionPolicyAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Policy replaceSubscriptionPolicyAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START replaceSubscriptionPolicyAsync]\n     Policy policy = pubsub.getSubscriptionPolicy(subscriptionName);\n-    Policy updatedPolicy = policy.toBuilder()\n-        .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n-        .build();\n-    Future<Policy> future =\n-        pubsub.replaceSubscriptionPolicyAsync(subscriptionName, updatedPolicy);\n+    Policy updatedPolicy = policy.toBuilder().addIdentity(Role.viewer(), Identity.allAuthenticatedUsers()).build();\n+    Future<Policy> future = pubsub.replaceSubscriptionPolicyAsync(subscriptionName, updatedPolicy);\n     // ...\n     updatedPolicy = future.get();\n     // [END replaceSubscriptionPolicyAsync]\n@@ -591,12 +616,12 @@ public class PubSubSnippets {\n    */\n   // [TARGET testSubscriptionPermissions(String, List)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public List<Boolean> testSubscriptionPermissions(String subscriptionName) {\n     // [START testSubscriptionPermissions]\n     List<String> permissions = new LinkedList<>();\n     permissions.add(\"pubsub.subscriptions.get\");\n-    List<Boolean> testedPermissions =\n-        pubsub.testSubscriptionPermissions(subscriptionName, permissions);\n+    List<Boolean> testedPermissions = pubsub.testSubscriptionPermissions(subscriptionName, permissions);\n     // [END testSubscriptionPermissions]\n     return testedPermissions;\n   }\n@@ -607,16 +632,15 @@ public class PubSubSnippets {\n    */\n   // [TARGET testSubscriptionPermissionsAsync(String, List)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public List<Boolean> testSubscriptionPermissionsAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public List<Boolean> testSubscriptionPermissionsAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START testSubscriptionPermissionsAsync]\n     List<String> permissions = new LinkedList<>();\n     permissions.add(\"pubsub.subscriptions.get\");\n-    Future<List<Boolean>> future =\n-        pubsub.testSubscriptionPermissionsAsync(subscriptionName, permissions);\n+    Future<List<Boolean>> future = pubsub.testSubscriptionPermissionsAsync(subscriptionName, permissions);\n     // ...\n     List<Boolean> testedPermissions = future.get();\n     // [END testSubscriptionPermissionsAsync]\n     return testedPermissions;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 91
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "330",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "330",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
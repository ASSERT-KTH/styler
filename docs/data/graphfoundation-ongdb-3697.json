{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3697",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3697/OnlineIndexSamplingJobFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3697/OnlineIndexSamplingJobFactory.java\nindex 34519e9ea69..4b51dd1c2e7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3697/OnlineIndexSamplingJobFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3697/OnlineIndexSamplingJobFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index.sampling;\n \n import org.neo4j.internal.kernel.api.TokenNameLookup;\n@@ -26,21 +27,21 @@ import org.neo4j.logging.LogProvider;\n \n public class OnlineIndexSamplingJobFactory implements IndexSamplingJobFactory\n {\n-    private final IndexStoreView storeView;\n-    private final LogProvider logProvider;\n-    private final TokenNameLookup nameLookup;\n+  private final IndexStoreView storeView;\n+  private final LogProvider logProvider;\n+  private final TokenNameLookup nameLookup;\n \n-    public OnlineIndexSamplingJobFactory( IndexStoreView storeView, TokenNameLookup nameLookup, LogProvider logProvider )\n-    {\n-        this.storeView = storeView;\n-        this.logProvider = logProvider;\n-        this.nameLookup = nameLookup;\n-    }\n+  public OnlineIndexSamplingJobFactory(IndexStoreView storeView, TokenNameLookup nameLookup, LogProvider logProvider)\n+  {\n+    this.storeView = storeView;\n+    this.logProvider = logProvider;\n+    this.nameLookup = nameLookup;\n+  }\n \n-    @Override\n-    public IndexSamplingJob create( long indexId, IndexProxy indexProxy )\n-    {\n-        final String indexUserDescription = indexProxy.getDescriptor().userDescription( nameLookup );\n-        return new OnlineIndexSamplingJob( indexId, indexProxy, storeView, indexUserDescription, logProvider );\n-    }\n+  @Override\n+  public IndexSamplingJob create(long indexId, IndexProxy indexProxy)\n+  {\n+    final String indexUserDescription = indexProxy.getDescriptor().userDescription(nameLookup);\n+    return new OnlineIndexSamplingJob(indexId, indexProxy, storeView, indexUserDescription, logProvider);\n+  }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3697/OnlineIndexSamplingJobFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3697/OnlineIndexSamplingJobFactory.java\nindex 34519e9ea69..a1df4974b95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3697/OnlineIndexSamplingJobFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3697/OnlineIndexSamplingJobFactory.java\n@@ -43,4 +43,4 @@ public class OnlineIndexSamplingJobFactory implements IndexSamplingJobFactory\n         final String indexUserDescription = indexProxy.getDescriptor().userDescription( nameLookup );\n         return new OnlineIndexSamplingJob( indexId, indexProxy, storeView, indexUserDescription, logProvider );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
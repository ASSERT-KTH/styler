{
    "project_name": "twilio-twilio-java",
    "error_id": "195",
    "information": {
        "errors": [
            {
                "line": "138",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/195/SubscribedEventReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/195/SubscribedEventReader.java\nindex b333825c7b7..aadaeee840d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/195/SubscribedEventReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/195/SubscribedEventReader.java\n@@ -135,7 +135,7 @@ public class SubscribedEventReader extends Reader<SubscribedEvent> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/195/SubscribedEventReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/195/SubscribedEventReader.java\nindex b333825c7b7..550d1bacb49 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/195/SubscribedEventReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/195/SubscribedEventReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.events.v1.subscription;\n@@ -135,7 +135,7 @@ public class SubscribedEventReader extends Reader<SubscribedEvent> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/195/SubscribedEventReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/195/SubscribedEventReader.java\nindex b333825c7b7..733bd347aba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/195/SubscribedEventReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/195/SubscribedEventReader.java\n@@ -24,6 +24,7 @@ import com.twilio.rest.Domains;\n  * change. Use them with caution. If you currently do not have developer preview\n  * access, please contact help@twilio.com.\n  */\n+\n public class SubscribedEventReader extends Reader<SubscribedEvent> {\n     private final String pathSubscriptionSid;\n \n@@ -32,6 +33,8 @@ public class SubscribedEventReader extends Reader<SubscribedEvent> {\n      *\n      * @param pathSubscriptionSid Subscription SID.\n      */\n+\n+\n     public SubscribedEventReader(final String pathSubscriptionSid) {\n         this.pathSubscriptionSid = pathSubscriptionSid;\n     }\n@@ -42,6 +45,8 @@ public class SubscribedEventReader extends Reader<SubscribedEvent> {\n      * @param client TwilioRestClient with which to make the request\n      * @return SubscribedEvent ResourceSet\n      */\n+\n+\n     @Override\n     public ResourceSet<SubscribedEvent> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -53,13 +58,14 @@ public class SubscribedEventReader extends Reader<SubscribedEvent> {\n      * @param client TwilioRestClient with which to make the request\n      * @return SubscribedEvent ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<SubscribedEvent> firstPage(final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.EVENTS.toString(),\n-            \"/v1/Subscriptions/\" + this.pathSubscriptionSid + \"/SubscribedEvents\"\n+                              HttpMethod.GET,\n+                              Domains.EVENTS.toString(),\n+                              \"/v1/Subscriptions/\" + this.pathSubscriptionSid + \"/SubscribedEvents\"\n         );\n \n         addQueryParams(request);\n@@ -73,14 +79,12 @@ public class SubscribedEventReader extends Reader<SubscribedEvent> {\n      * @param client TwilioRestClient with which to make the request\n      * @return SubscribedEvent ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<SubscribedEvent> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<SubscribedEvent> getPage(final String targetUrl,\n+                                         final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -91,13 +95,11 @@ public class SubscribedEventReader extends Reader<SubscribedEvent> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<SubscribedEvent> nextPage(final Page<SubscribedEvent> page,\n                                           final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.EVENTS.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.EVENTS.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -108,13 +110,11 @@ public class SubscribedEventReader extends Reader<SubscribedEvent> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<SubscribedEvent> previousPage(final Page<SubscribedEvent> page,\n                                               final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.EVENTS.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.EVENTS.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -125,9 +125,11 @@ public class SubscribedEventReader extends Reader<SubscribedEvent> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<SubscribedEvent> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<SubscribedEvent> pageForRequest(final TwilioRestClient client,\n+                                                 final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"SubscribedEvent read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.test(response.getStatusCode())) {\n@@ -135,15 +137,11 @@ public class SubscribedEventReader extends Reader<SubscribedEvent> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"types\",\n-            response.getContent(),\n-            SubscribedEvent.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"types\", response.getContent(), SubscribedEvent.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -151,6 +149,8 @@ public class SubscribedEventReader extends Reader<SubscribedEvent> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (getPageSize() != null) {\n             request.addQueryParam(\"PageSize\", Integer.toString(getPageSize()));\n",
            "diff_size": 42
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/195/SubscribedEventReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/195/SubscribedEventReader.java\nindex b333825c7b7..aadaeee840d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/195/SubscribedEventReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/195/SubscribedEventReader.java\n@@ -135,7 +135,7 @@ public class SubscribedEventReader extends Reader<SubscribedEvent> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/195/SubscribedEventReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/195/SubscribedEventReader.java\nindex b333825c7b7..9677cc8f3b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/195/SubscribedEventReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/195/SubscribedEventReader.java\n@@ -135,7 +135,8 @@ public class SubscribedEventReader extends Reader<SubscribedEvent> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
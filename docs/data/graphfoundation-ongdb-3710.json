{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3710",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "111",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3710/PropertyRecordFormatV3_0_0.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3710/PropertyRecordFormatV3_0_0.java\nindex e02fe48d260..ce51dd83d27 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3710/PropertyRecordFormatV3_0_0.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3710/PropertyRecordFormatV3_0_0.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.format.highlimit.v300;\n \n import org.neo4j.io.pagecache.PageCursor;\n@@ -33,7 +34,7 @@ import static org.neo4j.kernel.impl.store.format.highlimit.Reference.toRelative;\n /**\n  * LEGEND:\n  * V: variable between 3B-8B\n- *\n+ * <p>\n  * Record format:\n  * 1B   header\n  * VB   previous property\n@@ -42,85 +43,84 @@ import static org.neo4j.kernel.impl.store.format.highlimit.Reference.toRelative;\n  * 8B   property block\n  * 8B   property block\n  * 8B   property block\n- *\n+ * <p>\n  * => 39B-49B\n  */\n public class PropertyRecordFormatV3_0_0 extends BaseOneByteHeaderRecordFormat<PropertyRecord>\n {\n-    public static final int RECORD_SIZE = 48;\n+  public static final int RECORD_SIZE = 48;\n \n-    public PropertyRecordFormatV3_0_0()\n-    {\n-        super( fixedRecordSize( RECORD_SIZE ), 0, IN_USE_BIT, HighLimitV3_0_0.DEFAULT_MAXIMUM_BITS_PER_ID );\n-    }\n+  public PropertyRecordFormatV3_0_0()\n+  {\n+    super(fixedRecordSize(RECORD_SIZE), 0, IN_USE_BIT, HighLimitV3_0_0.DEFAULT_MAXIMUM_BITS_PER_ID);\n+  }\n \n-    @Override\n-    public PropertyRecord newRecord()\n-    {\n-        return new PropertyRecord( -1 );\n-    }\n+  @Override\n+  public PropertyRecord newRecord()\n+  {\n+    return new PropertyRecord(-1);\n+  }\n \n-    @Override\n-    public void read( PropertyRecord record, PageCursor cursor, RecordLoad mode, int recordSize )\n+  @Override\n+  public void read(PropertyRecord record, PageCursor cursor, RecordLoad mode, int recordSize)\n+  {\n+    int offset = cursor.getOffset();\n+    byte headerByte = cursor.getByte();\n+    boolean inUse = isInUse(headerByte);\n+    if (mode.shouldLoad(inUse))\n     {\n-        int offset = cursor.getOffset();\n-        byte headerByte = cursor.getByte();\n-        boolean inUse = isInUse( headerByte );\n-        if ( mode.shouldLoad( inUse ) )\n-        {\n-            int blockCount = headerByte >>> 4;\n-            long recordId = record.getId();\n-            record.initialize( inUse,\n-                    toAbsolute( Reference.decode( cursor ), recordId ),\n-                    toAbsolute( Reference.decode( cursor ), recordId ) );\n-            if ( (blockCount > record.getBlockCapacity()) | (RECORD_SIZE - (cursor.getOffset() - offset) < blockCount * Long.BYTES) )\n-            {\n-                cursor.setCursorException( \"PropertyRecord claims to contain more blocks than can fit in a record\" );\n-                return;\n-            }\n-            while ( blockCount-- > 0 )\n-            {\n-                record.addLoadedBlock( cursor.getLong() );\n-            }\n-        }\n+      int blockCount = headerByte >>> 4;\n+      long recordId = record.getId();\n+      record.initialize(inUse,\n+          toAbsolute(Reference.decode(cursor), recordId),\n+          toAbsolute(Reference.decode(cursor), recordId));\n+      if ((blockCount > record.getBlockCapacity()) | (RECORD_SIZE - (cursor.getOffset() - offset) < blockCount * Long.BYTES))\n+      {\n+        cursor.setCursorException(\"PropertyRecord claims to contain more blocks than can fit in a record\");\n+        return;\n+      }\n+      while (blockCount-- > 0)\n+      {\n+        record.addLoadedBlock(cursor.getLong());\n+      }\n     }\n+  }\n \n-    @Override\n-    public void write( PropertyRecord record, PageCursor cursor, int recordSize )\n+  @Override\n+  public void write(PropertyRecord record, PageCursor cursor, int recordSize)\n+  {\n+    if (record.inUse())\n     {\n-        if ( record.inUse() )\n-        {\n-            cursor.putByte( (byte) (IN_USE_BIT | numberOfBlocks( record ) << 4) );\n-            long recordId = record.getId();\n-            Reference.encode( toRelative( record.getPrevProp(), recordId), cursor );\n-            Reference.encode( toRelative( record.getNextProp(), recordId), cursor );\n-            for ( PropertyBlock block : record )\n-            {\n-                for ( long propertyBlock : block.getValueBlocks() )\n-                {\n-                    cursor.putLong( propertyBlock );\n-                }\n-            }\n-        }\n-        else\n+      cursor.putByte((byte) (IN_USE_BIT | numberOfBlocks(record) << 4));\n+      long recordId = record.getId();\n+      Reference.encode(toRelative(record.getPrevProp(), recordId), cursor);\n+      Reference.encode(toRelative(record.getNextProp(), recordId), cursor);\n+      for (PropertyBlock block : record)\n+      {\n+        for (long propertyBlock : block.getValueBlocks())\n         {\n-            markAsUnused( cursor );\n+          cursor.putLong(propertyBlock);\n         }\n-    }\n-\n-    private int numberOfBlocks( PropertyRecord record )\n+      }\n+    } else\n     {\n-        int count = 0;\n-        for ( PropertyBlock block : record )\n-        {\n-            count += block.getValueBlocks().length;\n-        }\n-        return count;\n+      markAsUnused(cursor);\n     }\n+  }\n \n-    @Override\n-    public long getNextRecordReference( PropertyRecord record )\n+  private int numberOfBlocks(PropertyRecord record)\n+  {\n+    int count = 0;\n+    for (PropertyBlock block : record)\n     {\n-        return record.getNextProp();\n+      count += block.getValueBlocks().length;\n     }\n+    return count;\n+  }\n+\n+  @Override\n+  public long getNextRecordReference(PropertyRecord record)\n+  {\n+    return record.getNextProp();\n+  }\n }\n",
            "diff_size": 84
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "74",
                    "column": "18",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3710/PropertyRecordFormatV3_0_0.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3710/PropertyRecordFormatV3_0_0.java\nindex e02fe48d260..7e4f9df18f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3710/PropertyRecordFormatV3_0_0.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3710/PropertyRecordFormatV3_0_0.java\n@@ -29,7 +29,6 @@ import org.neo4j.kernel.impl.store.record.RecordLoad;\n import static org.neo4j.kernel.impl.store.format.highlimit.Reference.toAbsolute;\n import static org.neo4j.kernel.impl.store.format.highlimit.Reference.toRelative;\n \n-\n /**\n  * LEGEND:\n  * V: variable between 3B-8B\n@@ -71,9 +70,8 @@ public class PropertyRecordFormatV3_0_0 extends BaseOneByteHeaderRecordFormat<Pr\n             int blockCount = headerByte >>> 4;\n             long recordId = record.getId();\n             record.initialize( inUse,\n-                    toAbsolute( Reference.decode( cursor ), recordId ),\n-                    toAbsolute( Reference.decode( cursor ), recordId ) );\n-            if ( (blockCount > record.getBlockCapacity()) | (RECORD_SIZE - (cursor.getOffset() - offset) < blockCount * Long.BYTES) )\n+                    toAbsolute( Reference.decode( cursor ), recordId ), toAbsolute( Reference.decode( cursor ), recordId ) );\n+if ( ( blockCount> record.getBlockCapacity()) | ( RECORD_SIZE - (cursor.getOffset() - offset) < blockCount * Long.BYTES) )\n             {\n                 cursor.setCursorException( \"PropertyRecord claims to contain more blocks than can fit in a record\" );\n                 return;\n@@ -90,7 +88,7 @@ public class PropertyRecordFormatV3_0_0 extends BaseOneByteHeaderRecordFormat<Pr\n     {\n         if ( record.inUse() )\n         {\n-            cursor.putByte( (byte) (IN_USE_BIT | numberOfBlocks( record ) << 4) );\n+            cursor.putByte( (byte) ( IN_USE_BIT | numberOfBlocks( record ) << 4) );\n             long recordId = record.getId();\n             Reference.encode( toRelative( record.getPrevProp(), recordId), cursor );\n             Reference.encode( toRelative( record.getNextProp(), recordId), cursor );\n@@ -115,7 +113,8 @@ public class PropertyRecordFormatV3_0_0 extends BaseOneByteHeaderRecordFormat<Pr\n         {\n             count += block.getValueBlocks().length;\n         }\n-        return count;\n+\n+return count;\n     }\n \n     @Override\n@@ -123,4 +122,4 @@ public class PropertyRecordFormatV3_0_0 extends BaseOneByteHeaderRecordFormat<Pr\n     {\n         return record.getNextProp();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
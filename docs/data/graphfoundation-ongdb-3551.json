{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3551",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3551/Commitment.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3551/Commitment.java\nindex cfd29fc0b0d..fdd960e3476 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3551/Commitment.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3551/Commitment.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log;\n \n import org.neo4j.kernel.impl.api.TransactionCommitProcess;\n@@ -31,48 +32,48 @@ import org.neo4j.kernel.impl.transaction.tracing.LogAppendEvent;\n  */\n public interface Commitment\n {\n-    Commitment NO_COMMITMENT = new Commitment()\n+  Commitment NO_COMMITMENT = new Commitment()\n+  {\n+    @Override\n+    public void publishAsCommitted()\n     {\n-        @Override\n-        public void publishAsCommitted()\n-        {\n-        }\n+    }\n \n-        @Override\n-        public void publishAsClosed()\n-        {\n-        }\n+    @Override\n+    public void publishAsClosed()\n+    {\n+    }\n \n-        @Override\n-        public boolean markedAsCommitted()\n-        {\n-            return false;\n-        }\n+    @Override\n+    public boolean markedAsCommitted()\n+    {\n+      return false;\n+    }\n \n-        @Override\n-        public boolean hasExplicitIndexChanges()\n-        {\n-            return false;\n-        }\n-    };\n+    @Override\n+    public boolean hasExplicitIndexChanges()\n+    {\n+      return false;\n+    }\n+  };\n \n-    /**\n-     * Marks the transaction as committed and makes this fact public.\n-     */\n-    void publishAsCommitted();\n+  /**\n+   * Marks the transaction as committed and makes this fact public.\n+   */\n+  void publishAsCommitted();\n \n-    /**\n-     * Marks the transaction as closed and makes this fact public.\n-     */\n-    void publishAsClosed();\n+  /**\n+   * Marks the transaction as closed and makes this fact public.\n+   */\n+  void publishAsClosed();\n \n-    /**\n-     * @return whether or not {@link #publishAsCommitted()} have been called.\n-     */\n-    boolean markedAsCommitted();\n+  /**\n+   * @return whether or not {@link #publishAsCommitted()} have been called.\n+   */\n+  boolean markedAsCommitted();\n \n-    /**\n-     * @return whether or not this transaction contains explicit index changes.\n-     */\n-    boolean hasExplicitIndexChanges();\n+  /**\n+   * @return whether or not this transaction contains explicit index changes.\n+   */\n+  boolean hasExplicitIndexChanges();\n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3551/Commitment.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3551/Commitment.java\nindex cfd29fc0b0d..c49dc6c7c1f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3551/Commitment.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3551/Commitment.java\n@@ -75,4 +75,4 @@ public interface Commitment\n      * @return whether or not this transaction contains explicit index changes.\n      */\n     boolean hasExplicitIndexChanges();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "findbugsproject-findbugs",
    "error_id": "25",
    "information": {
        "errors": [
            {
                "line": "33",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    private SortedBugCollection bugCollection;\n    private AnalysisErrorDialog errorDialog;\n\tprivate int errorCount;\n\n    /**\n     * Constructor.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "38",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/25/SwingGUIBugReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/25/SwingGUIBugReporter.java\nindex df8097f8678..cfd094322bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/25/SwingGUIBugReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler/25/SwingGUIBugReporter.java\n@@ -30,7 +30,7 @@ public class SwingGUIBugReporter extends TextUIBugReporter {\n     private final AnalysisRun analysisRun;\n     private SortedBugCollection bugCollection;\n     private AnalysisErrorDialog errorDialog;\n-\tprivate int errorCount;\n+private int errorCount;\n \n     /**\n      * Constructor.\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/25/SwingGUIBugReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/25/SwingGUIBugReporter.java\nindex df8097f8678..5da1be0585c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/25/SwingGUIBugReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/25/SwingGUIBugReporter.java\n@@ -16,6 +16,7 @@\n  * License along with this library; if not, write to the Free Software\n  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n  */\n+\n package edu.umd.cs.findbugs.gui;\n \n import edu.umd.cs.findbugs.SortedBugCollection;\n@@ -30,16 +31,16 @@ public class SwingGUIBugReporter extends TextUIBugReporter {\n     private final AnalysisRun analysisRun;\n     private SortedBugCollection bugCollection;\n     private AnalysisErrorDialog errorDialog;\n-\tprivate int errorCount;\n+    private int errorCount;\n \n     /**\n      * Constructor.\n      *\n-\t * @param analysisRun\n+     * @param analysisRun\n      */\n     public SwingGUIBugReporter(AnalysisRun analysisRun) {\n         this.analysisRun = analysisRun;\n-\t\tthis.bugCollection = new SortedBugCollection(getProjectStats());\n+        this.bugCollection = new SortedBugCollection(getProjectStats());\n     }\n \n     public SortedBugCollection getBugCollection() {\n@@ -60,7 +61,7 @@ public class SwingGUIBugReporter extends TextUIBugReporter {\n     @Override\n     public void reportMissingClass(ClassNotFoundException ex) {\n         ++errorCount;\n-\t\tsuper.reportMissingClass(ex);\n+        super.reportMissingClass(ex);\n         String message = getMissingClassName(ex);\n         bugCollection.addMissingClass(message);\n     }\n@@ -68,7 +69,7 @@ public class SwingGUIBugReporter extends TextUIBugReporter {\n     @Override\n     public void logError(String message) {\n         ++errorCount;\n-\t\tanalysisRun.getFrame().getLogger().logMessage(ConsoleLogger.WARNING, message);\n+        analysisRun.getFrame().getLogger().logMessage(ConsoleLogger.WARNING, message);\n         super.logError(message);\n         bugCollection.addError(message);\n     }\n@@ -79,21 +80,22 @@ public class SwingGUIBugReporter extends TextUIBugReporter {\n     @Override\n     public void doReportBug(edu.umd.cs.findbugs.BugInstance bugInstance) {\n         checkBugInstance(bugInstance);\n-\t\tif (bugCollection.add(bugInstance))\n+        if (bugCollection.add(bugInstance)) {\n             notifyObservers(bugInstance);\n+        }\n     }\n \n     private void createDialog() {\n         if (errorDialog == null) {\n             errorDialog = new AnalysisErrorDialog(analysisRun.getFrame(), true, this);\n-\t\t}\n+        }\n     }\n \n \n     @Override\n     public void reportQueuedErrors() {\n         createDialog();\n-\t\terrorDialog.clear();\n+        errorDialog.clear();\n         super.reportQueuedErrors();\n         errorDialog.finish();\n     }\n@@ -102,6 +104,6 @@ public class SwingGUIBugReporter extends TextUIBugReporter {\n     @Override\n     protected void emitLine(String line) {\n         line = line.replaceAll(\"\\t\", \"  \");\n-\t\terrorDialog.addLine(line);\n+        errorDialog.addLine(line);\n     }\n }\n",
            "diff_size": 11
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "39",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/25/SwingGUIBugReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/25/SwingGUIBugReporter.java\nindex df8097f8678..afe172a27a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/25/SwingGUIBugReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/25/SwingGUIBugReporter.java\n@@ -30,16 +30,17 @@ public class SwingGUIBugReporter extends TextUIBugReporter {\n     private final AnalysisRun analysisRun;\n     private SortedBugCollection bugCollection;\n     private AnalysisErrorDialog errorDialog;\n-\tprivate int errorCount;\n \n-    /**\n+private int errorCount;\n+\n+/**\n      * Constructor.\n      *\n \t * @param analysisRun\n      */\n     public SwingGUIBugReporter(AnalysisRun analysisRun) {\n         this.analysisRun = analysisRun;\n-\t\tthis.bugCollection = new SortedBugCollection(getProjectStats());\n+this.bugCollection = new SortedBugCollection(getProjectStats());\n     }\n \n     public SortedBugCollection getBugCollection() {\n@@ -60,16 +61,16 @@ public class SwingGUIBugReporter extends TextUIBugReporter {\n     @Override\n     public void reportMissingClass(ClassNotFoundException ex) {\n         ++errorCount;\n-\t\tsuper.reportMissingClass(ex);\n-        String message = getMissingClassName(ex);\n+super.reportMissingClass(ex);\n+String message = getMissingClassName(ex);\n         bugCollection.addMissingClass(message);\n     }\n \n     @Override\n     public void logError(String message) {\n         ++errorCount;\n-\t\tanalysisRun.getFrame().getLogger().logMessage(ConsoleLogger.WARNING, message);\n-        super.logError(message);\n+analysisRun.getFrame().getLogger().logMessage(ConsoleLogger.WARNING, message);\n+super.logError(message);\n         bugCollection.addError(message);\n     }\n \n@@ -79,29 +80,27 @@ public class SwingGUIBugReporter extends TextUIBugReporter {\n     @Override\n     public void doReportBug(edu.umd.cs.findbugs.BugInstance bugInstance) {\n         checkBugInstance(bugInstance);\n-\t\tif (bugCollection.add(bugInstance))\n-            notifyObservers(bugInstance);\n+if (bugCollection.add(bugInstance))\n+    notifyObservers(bugInstance);\n     }\n \n     private void createDialog() {\n         if (errorDialog == null) {\n             errorDialog = new AnalysisErrorDialog(analysisRun.getFrame(), true, this);\n-\t\t}\n+    }\n     }\n \n-\n-    @Override\n+@Override\n     public void reportQueuedErrors() {\n         createDialog();\n-\t\terrorDialog.clear();\n-        super.reportQueuedErrors();\n+errorDialog.clear();\n+super.reportQueuedErrors();\n         errorDialog.finish();\n     }\n \n-\n-    @Override\n+@Override\n     protected void emitLine(String line) {\n         line = line.replaceAll(\"\\t\", \"  \");\n-\t\terrorDialog.addLine(line);\n+errorDialog.addLine(line);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/25/SwingGUIBugReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/25/SwingGUIBugReporter.java\nindex df8097f8678..54ebfbc8991 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/25/SwingGUIBugReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/25/SwingGUIBugReporter.java\n@@ -26,22 +26,29 @@ import edu.umd.cs.findbugs.log.ConsoleLogger;\n /**\n  * BugReporter used by AnalysisRun.\n  */\n+\n public class SwingGUIBugReporter extends TextUIBugReporter {\n     private final AnalysisRun analysisRun;\n+\n     private SortedBugCollection bugCollection;\n+\n     private AnalysisErrorDialog errorDialog;\n-\tprivate int errorCount;\n+\n+    private int errorCount;\n \n     /**\n      * Constructor.\n      *\n-\t * @param analysisRun\n+     * @param analysisRun\n      */\n+\n+\n     public SwingGUIBugReporter(AnalysisRun analysisRun) {\n         this.analysisRun = analysisRun;\n-\t\tthis.bugCollection = new SortedBugCollection(getProjectStats());\n+        this.bugCollection = new SortedBugCollection(getProjectStats());\n     }\n \n+\n     public SortedBugCollection getBugCollection() {\n         return bugCollection;\n     }\n@@ -60,7 +67,7 @@ public class SwingGUIBugReporter extends TextUIBugReporter {\n     @Override\n     public void reportMissingClass(ClassNotFoundException ex) {\n         ++errorCount;\n-\t\tsuper.reportMissingClass(ex);\n+        super.reportMissingClass(ex);\n         String message = getMissingClassName(ex);\n         bugCollection.addMissingClass(message);\n     }\n@@ -68,7 +75,7 @@ public class SwingGUIBugReporter extends TextUIBugReporter {\n     @Override\n     public void logError(String message) {\n         ++errorCount;\n-\t\tanalysisRun.getFrame().getLogger().logMessage(ConsoleLogger.WARNING, message);\n+        analysisRun.getFrame().getLogger().logMessage(ConsoleLogger.WARNING, message);\n         super.logError(message);\n         bugCollection.addError(message);\n     }\n@@ -79,29 +86,29 @@ public class SwingGUIBugReporter extends TextUIBugReporter {\n     @Override\n     public void doReportBug(edu.umd.cs.findbugs.BugInstance bugInstance) {\n         checkBugInstance(bugInstance);\n-\t\tif (bugCollection.add(bugInstance))\n+        if (bugCollection.add(bugInstance))\n             notifyObservers(bugInstance);\n     }\n \n+\n     private void createDialog() {\n         if (errorDialog == null) {\n             errorDialog = new AnalysisErrorDialog(analysisRun.getFrame(), true, this);\n-\t\t}\n+        }\n     }\n \n-\n     @Override\n     public void reportQueuedErrors() {\n         createDialog();\n-\t\terrorDialog.clear();\n+        errorDialog.clear();\n         super.reportQueuedErrors();\n         errorDialog.finish();\n     }\n \n-\n     @Override\n     protected void emitLine(String line) {\n         line = line.replaceAll(\"\\t\", \"  \");\n-\t\terrorDialog.addLine(line);\n+        errorDialog.addLine(line);\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "38",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/25/SwingGUIBugReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/25/SwingGUIBugReporter.java\nindex df8097f8678..cfd094322bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/25/SwingGUIBugReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/styler_random/25/SwingGUIBugReporter.java\n@@ -30,7 +30,7 @@ public class SwingGUIBugReporter extends TextUIBugReporter {\n     private final AnalysisRun analysisRun;\n     private SortedBugCollection bugCollection;\n     private AnalysisErrorDialog errorDialog;\n-\tprivate int errorCount;\n+private int errorCount;\n \n     /**\n      * Constructor.\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
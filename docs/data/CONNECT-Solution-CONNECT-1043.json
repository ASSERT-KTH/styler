{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1043",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.patientdiscovery.adapter.proxy;\n\nimport gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1043/AdapterPatientDiscoveryProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1043/AdapterPatientDiscoveryProxyJavaImpl.java\nindex 07b705add91..d78810bcdae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1043/AdapterPatientDiscoveryProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1043/AdapterPatientDiscoveryProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1043/AdapterPatientDiscoveryProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1043/AdapterPatientDiscoveryProxyJavaImpl.java\nindex 07b705add91..0b24757f43d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1043/AdapterPatientDiscoveryProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1043/AdapterPatientDiscoveryProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n@@ -44,29 +45,29 @@ import org.slf4j.LoggerFactory;\n  */\n public class AdapterPatientDiscoveryProxyJavaImpl implements AdapterPatientDiscoveryProxy {\n \n-    private static final Logger LOG = LoggerFactory.getLogger(AdapterPatientDiscoveryProxyJavaImpl.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(AdapterPatientDiscoveryProxyJavaImpl.class);\n \n-    /**\n-     * This calls the java implementation for this method.\n-     *\n-     * @param body The message to be sent to the web service.\n-     * @param assertion The assertion information to go with the message.\n-     * @return The response from the web service.\n-     */\n+  /**\n+   * This calls the java implementation for this method.\n+   *\n+   * @param body      The message to be sent to the web service.\n+   * @param assertion The assertion information to go with the message.\n+   * @return The response from the web service.\n+   */\n \n-    @AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class,\n-            afterReturningBuilder = PRPAIN201306UV02EventDescriptionBuilder.class, serviceType = \"Patient Discovery\",\n-            version = \"LEVEL_A0\")\n-    @Override\n-    public PRPAIN201306UV02 respondingGatewayPRPAIN201305UV02(PRPAIN201305UV02 body, AssertionType assertion) {\n-        LOG.debug(\"Entering AdapterPatientDiscoveryProxyJavaImpl.respondingGatewayPRPAIN201305UV02\");\n-        AdapterPatientDiscoveryOrchImpl oOrchestrator = new AdapterPatientDiscoveryOrchImpl();\n-        RespondingGatewayPRPAIN201305UV02RequestType request = new RespondingGatewayPRPAIN201305UV02RequestType();\n-        request.setAssertion(assertion);\n-        request.setPRPAIN201305UV02(body);\n-        request.setNhinTargetCommunities(null);\n-        LOG.debug(\"Leaving AdapterPatientDiscoveryProxyJavaImpl.respondingGatewayPRPAIN201305UV02\");\n-        return oOrchestrator.respondingGatewayPRPAIN201305UV02(request, assertion);\n+  @AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class,\n+      afterReturningBuilder = PRPAIN201306UV02EventDescriptionBuilder.class, serviceType = \"Patient Discovery\",\n+      version = \"LEVEL_A0\")\n+  @Override\n+  public PRPAIN201306UV02 respondingGatewayPRPAIN201305UV02(PRPAIN201305UV02 body, AssertionType assertion) {\n+    LOG.debug(\"Entering AdapterPatientDiscoveryProxyJavaImpl.respondingGatewayPRPAIN201305UV02\");\n+    AdapterPatientDiscoveryOrchImpl oOrchestrator = new AdapterPatientDiscoveryOrchImpl();\n+    RespondingGatewayPRPAIN201305UV02RequestType request = new RespondingGatewayPRPAIN201305UV02RequestType();\n+    request.setAssertion(assertion);\n+    request.setPRPAIN201305UV02(body);\n+    request.setNhinTargetCommunities(null);\n+    LOG.debug(\"Leaving AdapterPatientDiscoveryProxyJavaImpl.respondingGatewayPRPAIN201305UV02\");\n+    return oOrchestrator.respondingGatewayPRPAIN201305UV02(request, assertion);\n \n-    }\n+  }\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1043/AdapterPatientDiscoveryProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1043/AdapterPatientDiscoveryProxyJavaImpl.java\nindex 07b705add91..453e06cc31c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1043/AdapterPatientDiscoveryProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1043/AdapterPatientDiscoveryProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n@@ -53,11 +54,8 @@ public class AdapterPatientDiscoveryProxyJavaImpl implements AdapterPatientDisco\n      * @param assertion The assertion information to go with the message.\n      * @return The response from the web service.\n      */\n-\n-    @AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class,\n-            afterReturningBuilder = PRPAIN201306UV02EventDescriptionBuilder.class, serviceType = \"Patient Discovery\",\n-            version = \"LEVEL_A0\")\n-    @Override\n+@AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class, afterReturningBuilder = PRPAIN201306UV02EventDescriptionBuilder.class, serviceType = \"Patient Discovery\", version = \"LEVEL_A0\")\n+@Override\n     public PRPAIN201306UV02 respondingGatewayPRPAIN201305UV02(PRPAIN201305UV02 body, AssertionType assertion) {\n         LOG.debug(\"Entering AdapterPatientDiscoveryProxyJavaImpl.respondingGatewayPRPAIN201305UV02\");\n         AdapterPatientDiscoveryOrchImpl oOrchestrator = new AdapterPatientDiscoveryOrchImpl();\n@@ -66,7 +64,7 @@ public class AdapterPatientDiscoveryProxyJavaImpl implements AdapterPatientDisco\n         request.setPRPAIN201305UV02(body);\n         request.setNhinTargetCommunities(null);\n         LOG.debug(\"Leaving AdapterPatientDiscoveryProxyJavaImpl.respondingGatewayPRPAIN201305UV02\");\n-        return oOrchestrator.respondingGatewayPRPAIN201305UV02(request, assertion);\n \n+return oOrchestrator.respondingGatewayPRPAIN201305UV02(request, assertion);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 218).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1043/AdapterPatientDiscoveryProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1043/AdapterPatientDiscoveryProxyJavaImpl.java\nindex 07b705add91..2d915b5d0ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1043/AdapterPatientDiscoveryProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1043/AdapterPatientDiscoveryProxyJavaImpl.java\n@@ -42,6 +42,8 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author Les westberg\n  */\n+\n+\n public class AdapterPatientDiscoveryProxyJavaImpl implements AdapterPatientDiscoveryProxy {\n \n     private static final Logger LOG = LoggerFactory.getLogger(AdapterPatientDiscoveryProxyJavaImpl.class);\n@@ -54,9 +56,8 @@ public class AdapterPatientDiscoveryProxyJavaImpl implements AdapterPatientDisco\n      * @return The response from the web service.\n      */\n \n-    @AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class,\n-            afterReturningBuilder = PRPAIN201306UV02EventDescriptionBuilder.class, serviceType = \"Patient Discovery\",\n-            version = \"LEVEL_A0\")\n+\n+    @AdapterDelegationEvent(beforeBuilder = PRPAIN201305UV02EventDescriptionBuilder.class, afterReturningBuilder = PRPAIN201306UV02EventDescriptionBuilder.class, serviceType = \"Patient Discovery\", version = \"LEVEL_A0\")\n     @Override\n     public PRPAIN201306UV02 respondingGatewayPRPAIN201305UV02(PRPAIN201305UV02 body, AssertionType assertion) {\n         LOG.debug(\"Entering AdapterPatientDiscoveryProxyJavaImpl.respondingGatewayPRPAIN201305UV02\");\n@@ -67,6 +68,6 @@ public class AdapterPatientDiscoveryProxyJavaImpl implements AdapterPatientDisco\n         request.setNhinTargetCommunities(null);\n         LOG.debug(\"Leaving AdapterPatientDiscoveryProxyJavaImpl.respondingGatewayPRPAIN201305UV02\");\n         return oOrchestrator.respondingGatewayPRPAIN201305UV02(request, assertion);\n-\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1043/AdapterPatientDiscoveryProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1043/AdapterPatientDiscoveryProxyJavaImpl.java\nindex 07b705add91..cfc306a18f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1043/AdapterPatientDiscoveryProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/1043/AdapterPatientDiscoveryProxyJavaImpl.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.proxy;\n-\n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n import gov.hhs.fha.nhinc.patientdiscovery.adapter.AdapterPatientDiscoveryOrchImpl;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1043/AdapterPatientDiscoveryProxyJavaImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1043/AdapterPatientDiscoveryProxyJavaImpl.java\nindex 07b705add91..d78810bcdae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1043/AdapterPatientDiscoveryProxyJavaImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1043/AdapterPatientDiscoveryProxyJavaImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.patientdiscovery.adapter.proxy;\n \n import gov.hhs.fha.nhinc.aspect.AdapterDelegationEvent;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
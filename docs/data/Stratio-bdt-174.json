{
    "project_name": "Stratio-bdt",
    "error_id": "174",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage com.stratio.qa.specs;\n\nimport com.ning.http.client.AsyncHttpClient;\nimport com.stratio.qa.assertions.Assertions;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/174/RestTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/174/RestTest.java\nindex 378e6c1fe25..049e14a79b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/174/RestTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/174/RestTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.specs;\n \n import com.ning.http.client.AsyncHttpClient;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/174/RestTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/174/RestTest.java\nindex 378e6c1fe25..a7542fc167c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/174/RestTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/174/RestTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.specs;\n \n import com.ning.http.client.AsyncHttpClient;\n@@ -50,10 +51,12 @@ public class RestTest {\n         RestSpec rest = new RestSpec(commong);\n \n         try {\n-            rest.sendRequestDataTableTimeout(10, 1, requestType, endPoint, null, expectedMsg, baseData, type, modifications);\n+            rest.sendRequestDataTableTimeout(10, 1, requestType, endPoint, null, expectedMsg,\n+                baseData, type, modifications);\n             fail(\"Expected Exception\");\n         } catch (NullPointerException e) {\n-            assertThat(e.getClass().toString()).as(\"Unexpected exception\").isEqualTo(NullPointerException.class.toString());\n+            assertThat(e.getClass().toString()).as(\"Unexpected exception\")\n+                .isEqualTo(NullPointerException.class.toString());\n             assertThat(e.getMessage()).as(\"Unexpected exception message\").isEqualTo(null);\n         }\n \n@@ -67,15 +70,18 @@ public class RestTest {\n         commong.setRestHost(\"jenkins.stratio.com\");\n         commong.setRestPort(\":80\");\n \n-        Future<Response> response = commong.generateRequest(\"GET\", false, null, null, \"/job/AI/job/Nightly/\", null, \"string\");\n+        Future<Response> response = commong\n+            .generateRequest(\"GET\", false, null, null, \"/job/AI/job/Nightly/\", null, \"string\");\n         commong.setResponse(\"GET\", (Response) response.get());\n \n         RestSpec rest = new RestSpec(commong);\n         rest.saveResponseInEnvironmentVariableFile(\"envVar\", \"file.txt\");\n \n-        assertThat(ThreadProperty.get(\"envVar\")).as(\"Unexpected content in thread variable\").contains(\"Responsibles: QA, Pedro Bedia\");\n+        assertThat(ThreadProperty.get(\"envVar\")).as(\"Unexpected content in thread variable\")\n+            .contains(\"Responsibles: QA, Pedro Bedia\");\n \n-        File tempDirectory = new File(String.valueOf(System.getProperty(\"user.dir\") + \"/target/test-classes/\"));\n+        File tempDirectory =\n+            new File(String.valueOf(System.getProperty(\"user.dir\") + \"/target/test-classes/\"));\n         String absolutePathFile = tempDirectory.getAbsolutePath() + \"/file.txt\";\n \n         Assertions.assertThat(new File(absolutePathFile).exists());\n@@ -90,15 +96,18 @@ public class RestTest {\n         commong.setRestHost(\"jenkins.stratio.com\");\n         commong.setRestPort(\":80\");\n \n-        Future<Response> response = commong.generateRequest(\"GET\", false, null, null, \"/job/AI/job/Nightly/\", null, \"string\");\n+        Future<Response> response = commong\n+            .generateRequest(\"GET\", false, null, null, \"/job/AI/job/Nightly/\", null, \"string\");\n         commong.setResponse(\"GET\", (Response) response.get());\n \n         RestSpec rest = new RestSpec(commong);\n         rest.saveResponseInEnvironmentVariableFile(\"envVar\", null);\n \n-        assertThat(ThreadProperty.get(\"envVar\")).as(\"Unexpected content in thread variable\").contains(\"Responsibles: QA, Pedro Bedia\");\n+        assertThat(ThreadProperty.get(\"envVar\")).as(\"Unexpected content in thread variable\")\n+            .contains(\"Responsibles: QA, Pedro Bedia\");\n \n-        File tempDirectory = new File(String.valueOf(System.getProperty(\"user.dir\") + \"/target/test-classes/\"));\n+        File tempDirectory =\n+            new File(String.valueOf(System.getProperty(\"user.dir\") + \"/target/test-classes/\"));\n         String absolutePathFile = tempDirectory.getAbsolutePath() + \"/file.txt\";\n \n         Assertions.assertThat(new File(absolutePathFile).exists()).isFalse();\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/174/RestTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/174/RestTest.java\nindex 378e6c1fe25..d5e02433116 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/174/RestTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/174/RestTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.specs;\n \n import com.ning.http.client.AsyncHttpClient;\n@@ -104,4 +105,4 @@ public class RestTest {\n         Assertions.assertThat(new File(absolutePathFile).exists()).isFalse();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/174/RestTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/codebuff/174/RestTest.java\nindex 378e6c1fe25..ebb03ad9359 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/174/RestTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/codebuff/174/RestTest.java\n@@ -20,15 +20,14 @@ import com.stratio.qa.assertions.Assertions;\n import com.stratio.qa.utils.ThreadProperty;\n import io.cucumber.datatable.DataTable;\n import org.testng.annotations.Test;\n-\n import java.io.File;\n import java.util.Arrays;\n import java.util.List;\n import java.util.concurrent.Future;\n \n import static org.assertj.core.api.Assertions.assertThat;\n-import static org.assertj.core.api.Assertions.fail;\n \n+import static org.assertj.core.api.Assertions.fail;\n import com.ning.http.client.Response;\n \n public class RestTest {\n@@ -46,9 +45,7 @@ public class RestTest {\n         String type = \"string\";\n         List<List<String>> rawData = Arrays.asList(Arrays.asList(\"key1\", \"DELETE\", \"N/A\"));\n         DataTable modifications = DataTable.create(rawData);\n-\n         RestSpec rest = new RestSpec(commong);\n-\n         try {\n             rest.sendRequestDataTableTimeout(10, 1, requestType, endPoint, null, expectedMsg, baseData, type, modifications);\n             fail(\"Expected Exception\");\n@@ -56,9 +53,9 @@ public class RestTest {\n             assertThat(e.getClass().toString()).as(\"Unexpected exception\").isEqualTo(NullPointerException.class.toString());\n             assertThat(e.getMessage()).as(\"Unexpected exception message\").isEqualTo(null);\n         }\n-\n     }\n \n+\n     @Test\n     public void testsaveResponseInEnvironmentVariableFile() throws Exception {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n@@ -66,22 +63,24 @@ public class RestTest {\n         commong.setClient(new AsyncHttpClient());\n         commong.setRestHost(\"jenkins.stratio.com\");\n         commong.setRestPort(\":80\");\n-\n-        Future<Response> response = commong.generateRequest(\"GET\", false, null, null, \"/job/AI/job/Nightly/\", null, \"string\");\n+        Future<Response> response = commong.generateRequest(\"GET\",\n+            false,\n+                null,\n+                    null,\n+                        \"/job/AI/job/Nightly/\",\n+                            null,\n+                                \"string\");\n         commong.setResponse(\"GET\", (Response) response.get());\n-\n         RestSpec rest = new RestSpec(commong);\n         rest.saveResponseInEnvironmentVariableFile(\"envVar\", \"file.txt\");\n-\n         assertThat(ThreadProperty.get(\"envVar\")).as(\"Unexpected content in thread variable\").contains(\"Responsibles: QA, Pedro Bedia\");\n-\n         File tempDirectory = new File(String.valueOf(System.getProperty(\"user.dir\") + \"/target/test-classes/\"));\n         String absolutePathFile = tempDirectory.getAbsolutePath() + \"/file.txt\";\n-\n         Assertions.assertThat(new File(absolutePathFile).exists());\n         new File(absolutePathFile).delete();\n     }\n \n+\n     @Test\n     public void testsaveResponseInEnvironmentVariableFileNoFile() throws Exception {\n         ThreadProperty.set(\"class\", this.getClass().getCanonicalName());\n@@ -89,19 +88,19 @@ public class RestTest {\n         commong.setClient(new AsyncHttpClient());\n         commong.setRestHost(\"jenkins.stratio.com\");\n         commong.setRestPort(\":80\");\n-\n-        Future<Response> response = commong.generateRequest(\"GET\", false, null, null, \"/job/AI/job/Nightly/\", null, \"string\");\n+        Future<Response> response = commong.generateRequest(\"GET\",\n+            false,\n+                null,\n+                    null,\n+                        \"/job/AI/job/Nightly/\",\n+                            null,\n+                                \"string\");\n         commong.setResponse(\"GET\", (Response) response.get());\n-\n         RestSpec rest = new RestSpec(commong);\n         rest.saveResponseInEnvironmentVariableFile(\"envVar\", null);\n-\n         assertThat(ThreadProperty.get(\"envVar\")).as(\"Unexpected content in thread variable\").contains(\"Responsibles: QA, Pedro Bedia\");\n-\n         File tempDirectory = new File(String.valueOf(System.getProperty(\"user.dir\") + \"/target/test-classes/\"));\n         String absolutePathFile = tempDirectory.getAbsolutePath() + \"/file.txt\";\n-\n         Assertions.assertThat(new File(absolutePathFile).exists()).isFalse();\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 32
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/174/RestTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/174/RestTest.java\nindex 378e6c1fe25..049e14a79b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/174/RestTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/174/RestTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.specs;\n \n import com.ning.http.client.AsyncHttpClient;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/174/RestTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_three_grams/174/RestTest.java\nindex 378e6c1fe25..049e14a79b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/174/RestTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_three_grams/174/RestTest.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.stratio.qa.specs;\n \n import com.ning.http.client.AsyncHttpClient;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
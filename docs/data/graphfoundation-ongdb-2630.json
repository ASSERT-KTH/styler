{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2630",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2630/AdminCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2630/AdminCommand.java\nindex dab652c5bee..68e09b2d8da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2630/AdminCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2630/AdminCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.admin;\n \n import java.nio.file.Path;\n@@ -41,94 +42,93 @@ import org.neo4j.helpers.collection.Iterables;\n  */\n public interface AdminCommand\n {\n-    abstract class Provider extends Service\n+  abstract class Provider extends Service\n+  {\n+    /**\n+     * Create a new instance of a service implementation identified with the\n+     * specified key(s).\n+     *\n+     * @param key     the main key for identifying this service implementation\n+     * @param altKeys alternative spellings of the identifier of this service\n+     */\n+    protected Provider(String key, String... altKeys)\n+    {\n+      super(key, altKeys);\n+    }\n+\n+    /**\n+     * @return The command's name\n+     */\n+    @Nonnull\n+    public String name()\n     {\n-        /**\n-         * Create a new instance of a service implementation identified with the\n-         * specified key(s).\n-         *\n-         * @param key     the main key for identifying this service implementation\n-         * @param altKeys alternative spellings of the identifier of this service\n-         */\n-        protected Provider( String key, String... altKeys )\n-        {\n-            super( key, altKeys );\n-        }\n-\n-        /**\n-         * @return The command's name\n-         */\n-        @Nonnull\n-        public String name()\n-        {\n-            return Iterables.last( getKeys() );\n-        }\n-\n-        /**\n-         * @return The arguments this command accepts.\n-         */\n-        @Nonnull\n-        public abstract Arguments allArguments();\n-\n-        /**\n-         *\n-         * @return A list of possibly mutually-exclusive argument sets for this command.\n-         */\n-        @Nonnull\n-        public List<Arguments> possibleArguments()\n-        {\n-            return Collections.singletonList( allArguments() );\n-        }\n-\n-        /**\n-         * @return A single-line summary for the command. Should be 70 characters or less.\n-         */\n-        @Nonnull\n-        public abstract String summary();\n-\n-        /**\n-         * @return AdminCommandSection the command using the provider is grouped under\n-         */\n-        @Nonnull\n-        public abstract AdminCommandSection commandSection();\n-\n-        /**\n-         * @return A description for the command's help text.\n-         */\n-        @Nonnull\n-        public abstract String description();\n-\n-        @Nonnull\n-        public abstract AdminCommand create( Path homeDir, Path configDir, OutsideWorld outsideWorld );\n-\n-        public final void printSummary( Consumer<String> output )\n-        {\n-            output.accept( String.format( \"%s\", name() ) );\n-            output.accept( \"    \" + summary() );\n-        }\n+      return Iterables.last(getKeys());\n     }\n \n-    interface Blocker\n+    /**\n+     * @return The arguments this command accepts.\n+     */\n+    @Nonnull\n+    public abstract Arguments allArguments();\n+\n+    /**\n+     * @return A list of possibly mutually-exclusive argument sets for this command.\n+     */\n+    @Nonnull\n+    public List<Arguments> possibleArguments()\n     {\n-        /**\n-         * @param homeDir   the home of the Neo4j installation.\n-         * @param configDir the directory where configuration files can be found.\n-         * @return A boolean representing whether or not this command should be blocked from running.\n-         */\n-        boolean doesBlock( Path homeDir, Path configDir );\n-\n-        /**\n-         * @return A list of the commands this blocker applies to.\n-         */\n-        @Nonnull\n-        Set<String> commands();\n-\n-        /**\n-         * @return An explanation of why a command was blocked. This will be shown to the user.\n-         */\n-        @Nonnull\n-        String explanation();\n+      return Collections.singletonList(allArguments());\n     }\n \n-    void execute( String[] args ) throws IncorrectUsage, CommandFailed;\n+    /**\n+     * @return A single-line summary for the command. Should be 70 characters or less.\n+     */\n+    @Nonnull\n+    public abstract String summary();\n+\n+    /**\n+     * @return AdminCommandSection the command using the provider is grouped under\n+     */\n+    @Nonnull\n+    public abstract AdminCommandSection commandSection();\n+\n+    /**\n+     * @return A description for the command's help text.\n+     */\n+    @Nonnull\n+    public abstract String description();\n+\n+    @Nonnull\n+    public abstract AdminCommand create(Path homeDir, Path configDir, OutsideWorld outsideWorld);\n+\n+    public final void printSummary(Consumer<String> output)\n+    {\n+      output.accept(String.format(\"%s\", name()));\n+      output.accept(\"    \" + summary());\n+    }\n+  }\n+\n+  interface Blocker\n+  {\n+    /**\n+     * @param homeDir   the home of the Neo4j installation.\n+     * @param configDir the directory where configuration files can be found.\n+     * @return A boolean representing whether or not this command should be blocked from running.\n+     */\n+    boolean doesBlock(Path homeDir, Path configDir);\n+\n+    /**\n+     * @return A list of the commands this blocker applies to.\n+     */\n+    @Nonnull\n+    Set<String> commands();\n+\n+    /**\n+     * @return An explanation of why a command was blocked. This will be shown to the user.\n+     */\n+    @Nonnull\n+    String explanation();\n+  }\n+\n+  void execute(String[] args) throws IncorrectUsage, CommandFailed;\n }\n",
            "diff_size": 163
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2630/AdminCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2630/AdminCommand.java\nindex dab652c5bee..f37d30186bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2630/AdminCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2630/AdminCommand.java\n@@ -131,4 +131,4 @@ public interface AdminCommand\n     }\n \n     void execute( String[] args ) throws IncorrectUsage, CommandFailed;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
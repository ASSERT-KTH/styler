{
    "project_name": "intuit-Tank",
    "error_id": "72",
    "information": {
        "errors": [
            {
                "line": "29",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": " */\npublic class ProxyRequest implements Serializable {\n\tprivate static final long serialVersionUID = 1L;\n\n\tprivate BuildListener listener;\n\tprivate Integer proxyPort;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "31",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/72/ProxyRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/72/ProxyRequest.java\nindex 117b030a3b3..e1d25c7cb98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/72/ProxyRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/72/ProxyRequest.java\n@@ -26,7 +26,7 @@ import com.intuit.tank.jenkins.publisher.ProxyPlugin.ProxyPluginDescriptor;\n  * remote machine.\n  */\n public class ProxyRequest implements Serializable {\n-\tprivate static final long serialVersionUID = 1L;\n+    private static final long serialVersionUID = 1L;\n \n \tprivate BuildListener listener;\n \tprivate Integer proxyPort;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/72/ProxyRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/72/ProxyRequest.java\nindex 117b030a3b3..edaf2beefd4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/72/ProxyRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/72/ProxyRequest.java\n@@ -26,40 +26,40 @@ import com.intuit.tank.jenkins.publisher.ProxyPlugin.ProxyPluginDescriptor;\n  * remote machine.\n  */\n public class ProxyRequest implements Serializable {\n-\tprivate static final long serialVersionUID = 1L;\n+  private static final long serialVersionUID = 1L;\n \n-\tprivate BuildListener listener;\n-\tprivate Integer proxyPort;\n-\tprivate String buildId;\n-\tprivate FilePath workspacePath;\n-\tprivate ProxyPluginDescriptor descriptor;\n+  private BuildListener listener;\n+  private Integer proxyPort;\n+  private String buildId;\n+  private FilePath workspacePath;\n+  private ProxyPluginDescriptor descriptor;\n \n-\tpublic ProxyRequest(BuildListener listener, Integer proxyPort, String buildId,\n-\t\t\tFilePath workspacePath, ProxyPluginDescriptor descriptor) {\n-\t\tthis.listener = listener;\n-\t\tthis.proxyPort = proxyPort;\n-\t\tthis.buildId = buildId;\n-\t\tthis.workspacePath = workspacePath;\n-\t\tthis.descriptor = descriptor;\n-\t}\n+  public ProxyRequest(BuildListener listener, Integer proxyPort, String buildId,\n+                      FilePath workspacePath, ProxyPluginDescriptor descriptor) {\n+    this.listener = listener;\n+    this.proxyPort = proxyPort;\n+    this.buildId = buildId;\n+    this.workspacePath = workspacePath;\n+    this.descriptor = descriptor;\n+  }\n \n-\tpublic PrintStream getLogger() {\n-\t\treturn listener.getLogger();\n-\t}\n+  public PrintStream getLogger() {\n+    return listener.getLogger();\n+  }\n \n-\tpublic Integer getProxyPort() {\n-\t\treturn proxyPort;\n-\t}\n-\t\n-\tpublic String getBuildId() {\n-\t\treturn buildId;\n-\t}\n+  public Integer getProxyPort() {\n+    return proxyPort;\n+  }\n \n-\tpublic FilePath getWorkspacePath() {\n-\t\treturn workspacePath;\n-\t}\n+  public String getBuildId() {\n+    return buildId;\n+  }\n \n-\tpublic ProxyPluginDescriptor getDescriptor() {\n-\t\treturn descriptor;\n-\t}\n+  public FilePath getWorkspacePath() {\n+    return workspacePath;\n+  }\n+\n+  public ProxyPluginDescriptor getDescriptor() {\n+    return descriptor;\n+  }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "32",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 146).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/72/ProxyRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/72/ProxyRequest.java\nindex 117b030a3b3..b3ee92834a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/72/ProxyRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/72/ProxyRequest.java\n@@ -26,7 +26,8 @@ import com.intuit.tank.jenkins.publisher.ProxyPlugin.ProxyPluginDescriptor;\n  * remote machine.\n  */\n public class ProxyRequest implements Serializable {\n-\tprivate static final long serialVersionUID = 1L;\n+\n+    private static final long serialVersionUID = 1L;\n \n \tprivate BuildListener listener;\n \tprivate Integer proxyPort;\n@@ -34,32 +35,32 @@ public class ProxyRequest implements Serializable {\n \tprivate FilePath workspacePath;\n \tprivate ProxyPluginDescriptor descriptor;\n \n-\tpublic ProxyRequest(BuildListener listener, Integer proxyPort, String buildId,\n-\t\t\tFilePath workspacePath, ProxyPluginDescriptor descriptor) {\n-\t\tthis.listener = listener;\n+\tpublic ProxyRequest(BuildListener listener, Integer proxyPort, String buildId, FilePath workspacePath, ProxyPluginDescriptor descriptor) {\n+    this.listener = listener;\n \t\tthis.proxyPort = proxyPort;\n \t\tthis.buildId = buildId;\n \t\tthis.workspacePath = workspacePath;\n \t\tthis.descriptor = descriptor;\n-\t}\n+    }\n \n \tpublic PrintStream getLogger() {\n-\t\treturn listener.getLogger();\n-\t}\n+    return listener.getLogger();\n+    }\n \n \tpublic Integer getProxyPort() {\n-\t\treturn proxyPort;\n-\t}\n-\t\n-\tpublic String getBuildId() {\n-\t\treturn buildId;\n-\t}\n+    return proxyPort;\n+    }\n+\n+public String getBuildId() {\n+    return buildId;\n+    }\n \n \tpublic FilePath getWorkspacePath() {\n-\t\treturn workspacePath;\n-\t}\n+    return workspacePath;\n+    }\n \n \tpublic ProxyPluginDescriptor getDescriptor() {\n-\t\treturn descriptor;\n-\t}\n-}\n+    return descriptor;\n+    }\n+\n+    }\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 142).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/72/ProxyRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/72/ProxyRequest.java\nindex 117b030a3b3..29c637a1292 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/72/ProxyRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/72/ProxyRequest.java\n@@ -13,53 +13,60 @@ package com.intuit.tank.jenkins.callables;\n  * #L%\n  */\n \n+\n+\n import hudson.FilePath;\n import hudson.model.BuildListener;\n-\n import java.io.PrintStream;\n import java.io.Serializable;\n-\n import com.intuit.tank.jenkins.publisher.ProxyPlugin.ProxyPluginDescriptor;\n \n /**\n  * This class serves as a bundle of the things we need to start a proxy on a\n  * remote machine.\n  */\n+\n+\n public class ProxyRequest implements Serializable {\n-\tprivate static final long serialVersionUID = 1L;\n-\n-\tprivate BuildListener listener;\n-\tprivate Integer proxyPort;\n-\tprivate String buildId;\n-\tprivate FilePath workspacePath;\n-\tprivate ProxyPluginDescriptor descriptor;\n-\n-\tpublic ProxyRequest(BuildListener listener, Integer proxyPort, String buildId,\n-\t\t\tFilePath workspacePath, ProxyPluginDescriptor descriptor) {\n-\t\tthis.listener = listener;\n-\t\tthis.proxyPort = proxyPort;\n-\t\tthis.buildId = buildId;\n-\t\tthis.workspacePath = workspacePath;\n-\t\tthis.descriptor = descriptor;\n-\t}\n-\n-\tpublic PrintStream getLogger() {\n-\t\treturn listener.getLogger();\n-\t}\n-\n-\tpublic Integer getProxyPort() {\n-\t\treturn proxyPort;\n-\t}\n-\t\n-\tpublic String getBuildId() {\n-\t\treturn buildId;\n-\t}\n-\n-\tpublic FilePath getWorkspacePath() {\n-\t\treturn workspacePath;\n-\t}\n-\n-\tpublic ProxyPluginDescriptor getDescriptor() {\n-\t\treturn descriptor;\n-\t}\n-}\n+\n+    private static final long serialVersionUID = 1L;\n+    private BuildListener listener;\n+    private Integer proxyPort;\n+    private String buildId;\n+    private FilePath workspacePath;\n+    private ProxyPluginDescriptor descriptor;\n+\n+    public ProxyRequest(BuildListener listener, Integer proxyPort, String buildId, FilePath workspacePath, ProxyPluginDescriptor descriptor) {\n+        this.listener = listener;\n+        this.proxyPort = proxyPort;\n+        this.buildId = buildId;\n+        this.workspacePath = workspacePath;\n+        this.descriptor = descriptor;\n+    }\n+\n+\n+    public PrintStream getLogger() {\n+        return listener.getLogger();\n+    }\n+\n+\n+    public Integer getProxyPort() {\n+        return proxyPort;\n+    }\n+\n+\n+    public String getBuildId() {\n+        return buildId;\n+    }\n+\n+\n+    public FilePath getWorkspacePath() {\n+        return workspacePath;\n+    }\n+\n+\n+    public ProxyPluginDescriptor getDescriptor() {\n+        return descriptor;\n+    }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 48
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "31",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/72/ProxyRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/72/ProxyRequest.java\nindex 117b030a3b3..e1d25c7cb98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/72/ProxyRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/72/ProxyRequest.java\n@@ -26,7 +26,7 @@ import com.intuit.tank.jenkins.publisher.ProxyPlugin.ProxyPluginDescriptor;\n  * remote machine.\n  */\n public class ProxyRequest implements Serializable {\n-\tprivate static final long serialVersionUID = 1L;\n+    private static final long serialVersionUID = 1L;\n \n \tprivate BuildListener listener;\n \tprivate Integer proxyPort;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "31",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/72/ProxyRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/72/ProxyRequest.java\nindex 117b030a3b3..e1d25c7cb98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/72/ProxyRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/72/ProxyRequest.java\n@@ -26,7 +26,7 @@ import com.intuit.tank.jenkins.publisher.ProxyPlugin.ProxyPluginDescriptor;\n  * remote machine.\n  */\n public class ProxyRequest implements Serializable {\n-\tprivate static final long serialVersionUID = 1L;\n+    private static final long serialVersionUID = 1L;\n \n \tprivate BuildListener listener;\n \tprivate Integer proxyPort;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
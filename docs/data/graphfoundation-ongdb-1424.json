{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1424",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1424/Locks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1424/Locks.java\nindex e5938138714..5ddee3bba0e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1424/Locks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1424/Locks.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.locking;\n \n import java.time.Clock;\n@@ -31,120 +32,138 @@ import org.neo4j.storageengine.api.lock.WaitStrategy;\n \n /**\n  * API for managing locks.\n- *\n+ * <p>\n  * Locks are grabbed by clients (which generally map to a transaction, but can be any actor in the system).\n- *\n+ * <p>\n  * ## Upgrading and downgrading\n- *\n+ * <p>\n  * Shared locks allow upgrading, and exclusive locks allow downgrading. To upgrade a held shared lock to an exclusive\n  * lock, simply acquire an exclusive lock and then release the shared lock. The acquire call will block other clients\n  * from acquiring shared or exclusive locks, and then wait until all other holders of the shared locks have released\n  * before returning.\n- *\n+ * <p>\n  * Downgrading a held exclusive lock is done by acquiring a shared lock, and then releasing the exclusive lock.\n- *\n+ * <p>\n  * ## Lock stacking\n- *\n+ * <p>\n  * Each call to acquire a lock must be accompanied by a call to release that same lock. A user can call acquire on the\n  * same lock multiple times, thus requiring an equal number of calls to release those locks.\n  */\n public interface Locks\n {\n-    abstract class Factory extends Service\n+  abstract class Factory extends Service\n+  {\n+    public Factory(String key, String... altKeys)\n     {\n-        public Factory( String key, String... altKeys )\n-        {\n-            super( key, altKeys );\n-        }\n-\n-        public abstract Locks newInstance( Config config, Clock clocks, ResourceType[] resourceTypes );\n+      super(key, altKeys);\n     }\n \n-    /** For introspection and debugging. */\n-    interface Visitor\n-    {\n-        /** Visit the description of a lock held by at least one client. */\n-        void visit( ResourceType resourceType, long resourceId, String description, long estimatedWaitTime,\n-                long lockIdentityHashCode );\n-    }\n+    public abstract Locks newInstance(Config config, Clock clocks, ResourceType[] resourceTypes);\n+  }\n \n-    interface Client extends ResourceLocker, AutoCloseable\n-    {\n-        /**\n-         * Represents the fact that no lock session is used because no locks are taken.\n-         */\n-        int NO_LOCK_SESSION_ID = -1;\n-\n-        /**\n-         * Can be grabbed when there are no locks or only share locks on a resource. If the lock cannot be acquired,\n-         * behavior is specified by the {@link WaitStrategy} for the given {@link ResourceType}.\n-         *\n-         * @param tracer a tracer for listening on lock events.\n-         * @param resourceType type or resource(s) to lock.\n-         * @param resourceIds id(s) of resources to lock. Multiple ids should be ordered consistently by all callers\n-         */\n-        void acquireShared( LockTracer tracer, ResourceType resourceType, long... resourceIds ) throws AcquireLockTimeoutException;\n-\n-        @Override\n-        void acquireExclusive( LockTracer tracer, ResourceType resourceType, long... resourceIds ) throws AcquireLockTimeoutException;\n-\n-        /** Try grabbing exclusive lock, not waiting and returning a boolean indicating if we got the lock. */\n-        boolean tryExclusiveLock( ResourceType resourceType, long resourceId );\n-\n-        /** Try grabbing shared lock, not waiting and returning a boolean indicating if we got the lock. */\n-        boolean trySharedLock( ResourceType resourceType, long resourceId );\n-\n-        boolean reEnterShared( ResourceType resourceType, long resourceId );\n-\n-        boolean reEnterExclusive( ResourceType resourceType, long resourceId );\n-\n-        /** Release a set of shared locks */\n-        void releaseShared( ResourceType resourceType, long... resourceIds );\n-\n-        /** Release a set of exclusive locks */\n-        void releaseExclusive( ResourceType resourceType, long... resourceIds );\n-\n-        /**\n-         * Start preparing this transaction for committing. In two-phase locking palace, we will in principle no longer\n-         * be acquiring any new locks - though we still allow it because it is useful in certain technical situations -\n-         * but when we are ready, we will start releasing them. This also means that we will no longer accept being\n-         * {@link #stop() asynchronously stopped}. From this point on, only the commit process can decide if the\n-         * transaction lives or dies, and in either case, the lock client will end up releasing all locks via the\n-         * {@link #close()} method.\n-         */\n-        void prepare();\n-\n-        /**\n-         * Stop all active lock waiters and release them.\n-         * All new attempts to acquire any locks will cause exceptions.\n-         * This client can and should only be {@link #close() closed} afterwards.\n-         * If this client has been {@link #prepare() prepared}, then all currently acquired locks will remain held,\n-         * otherwise they will be released immediately.\n-         */\n-        void stop();\n-\n-        /** Releases all locks, using the client after calling this is undefined. */\n-        @Override\n-        void close();\n-\n-        /** For slave transactions, this tracks an identifier for the lock session running on the master */\n-        int getLockSessionId();\n-\n-        Stream<? extends ActiveLock> activeLocks();\n-\n-        long activeLockCount();\n-    }\n+  /**\n+   * For introspection and debugging.\n+   */\n+  interface Visitor\n+  {\n+    /**\n+     * Visit the description of a lock held by at least one client.\n+     */\n+    void visit(ResourceType resourceType, long resourceId, String description, long estimatedWaitTime,\n+               long lockIdentityHashCode);\n+  }\n+\n+  interface Client extends ResourceLocker, AutoCloseable\n+  {\n+    /**\n+     * Represents the fact that no lock session is used because no locks are taken.\n+     */\n+    int NO_LOCK_SESSION_ID = -1;\n \n     /**\n-     * A client is able to grab and release locks, and compete with other clients for them. This can be re-used until\n-     * you call {@link Locks.Client#close()}.\n+     * Can be grabbed when there are no locks or only share locks on a resource. If the lock cannot be acquired,\n+     * behavior is specified by the {@link WaitStrategy} for the given {@link ResourceType}.\n      *\n-     * @throws IllegalStateException if this instance has been closed, i.e has had {@link #close()} called.\n+     * @param tracer       a tracer for listening on lock events.\n+     * @param resourceType type or resource(s) to lock.\n+     * @param resourceIds  id(s) of resources to lock. Multiple ids should be ordered consistently by all callers\n+     */\n+    void acquireShared(LockTracer tracer, ResourceType resourceType, long... resourceIds) throws AcquireLockTimeoutException;\n+\n+    @Override\n+    void acquireExclusive(LockTracer tracer, ResourceType resourceType, long... resourceIds) throws AcquireLockTimeoutException;\n+\n+    /**\n+     * Try grabbing exclusive lock, not waiting and returning a boolean indicating if we got the lock.\n+     */\n+    boolean tryExclusiveLock(ResourceType resourceType, long resourceId);\n+\n+    /**\n+     * Try grabbing shared lock, not waiting and returning a boolean indicating if we got the lock.\n      */\n-    Client newClient();\n+    boolean trySharedLock(ResourceType resourceType, long resourceId);\n \n-    /** Visit all held locks. */\n-    void accept( Visitor visitor );\n+    boolean reEnterShared(ResourceType resourceType, long resourceId);\n \n+    boolean reEnterExclusive(ResourceType resourceType, long resourceId);\n+\n+    /**\n+     * Release a set of shared locks\n+     */\n+    void releaseShared(ResourceType resourceType, long... resourceIds);\n+\n+    /**\n+     * Release a set of exclusive locks\n+     */\n+    void releaseExclusive(ResourceType resourceType, long... resourceIds);\n+\n+    /**\n+     * Start preparing this transaction for committing. In two-phase locking palace, we will in principle no longer\n+     * be acquiring any new locks - though we still allow it because it is useful in certain technical situations -\n+     * but when we are ready, we will start releasing them. This also means that we will no longer accept being\n+     * {@link #stop() asynchronously stopped}. From this point on, only the commit process can decide if the\n+     * transaction lives or dies, and in either case, the lock client will end up releasing all locks via the\n+     * {@link #close()} method.\n+     */\n+    void prepare();\n+\n+    /**\n+     * Stop all active lock waiters and release them.\n+     * All new attempts to acquire any locks will cause exceptions.\n+     * This client can and should only be {@link #close() closed} afterwards.\n+     * If this client has been {@link #prepare() prepared}, then all currently acquired locks will remain held,\n+     * otherwise they will be released immediately.\n+     */\n+    void stop();\n+\n+    /**\n+     * Releases all locks, using the client after calling this is undefined.\n+     */\n+    @Override\n     void close();\n+\n+    /**\n+     * For slave transactions, this tracks an identifier for the lock session running on the master\n+     */\n+    int getLockSessionId();\n+\n+    Stream<? extends ActiveLock> activeLocks();\n+\n+    long activeLockCount();\n+  }\n+\n+  /**\n+   * A client is able to grab and release locks, and compete with other clients for them. This can be re-used until\n+   * you call {@link Locks.Client#close()}.\n+   *\n+   * @throws IllegalStateException if this instance has been closed, i.e has had {@link #close()} called.\n+   */\n+  Client newClient();\n+\n+  /**\n+   * Visit all held locks.\n+   */\n+  void accept(Visitor visitor);\n+\n+  void close();\n }\n",
            "diff_size": 170
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1424/Locks.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1424/Locks.java\nindex e5938138714..5fcee2b99b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1424/Locks.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1424/Locks.java\n@@ -147,4 +147,4 @@ public interface Locks\n     void accept( Visitor visitor );\n \n     void close();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
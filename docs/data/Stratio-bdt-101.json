{
    "project_name": "Stratio-bdt",
    "error_id": "101",
    "information": {
        "errors": [
            {
                "line": "129",
                "severity": "error",
                "message": "'CTOR_DEF' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "     * @throws IOException exception\n     */\n    public CucumberReporter(String url, String cClass, String additional) throws IOException {\n        this.url = url;\n        this.cClass = cClass;\n        this.additional = additional;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/101/CucumberReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/101/CucumberReporter.java\nindex 9cae91aa80e..72fc7336ad9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/101/CucumberReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/101/CucumberReporter.java\n@@ -126,6 +126,7 @@ public class CucumberReporter implements Formatter, Reporter {\n      * @param cClass class\n      * @throws IOException exception\n      */\n+\n     public CucumberReporter(String url, String cClass, String additional) throws IOException {\n         this.url = url;\n         this.cClass = cClass;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/101/CucumberReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/101/CucumberReporter.java\nindex 9cae91aa80e..4940a47bfd3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/101/CucumberReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/101/CucumberReporter.java\n@@ -63,7 +63,8 @@ public class CucumberReporter implements Formatter, Reporter {\n \n     public static final int DEFAULT_MAX_LENGTH = 140;\n \n-    private static final SimpleDateFormat DATE_FORMAT = new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n+    private static final SimpleDateFormat DATE_FORMAT =\n+        new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss'Z'\");\n \n     private static final String STATUS = \"status\";\n \n@@ -85,7 +86,7 @@ public class CucumberReporter implements Formatter, Reporter {\n \n     private Writer writer;\n \n-    private Writer  writerJunit;\n+    private Writer writerJunit;\n \n     private Element clazz;\n \n@@ -118,11 +119,12 @@ public class CucumberReporter implements Formatter, Reporter {\n     private String additional;\n \n     private final Logger logger = LoggerFactory.getLogger(this.getClass()\n-            .getCanonicalName());\n+        .getCanonicalName());\n+\n     /**\n      * Constructor of cucumberReporter.\n      *\n-     * @param url url\n+     * @param url    url\n      * @param cClass class\n      * @throws IOException exception\n      */\n@@ -151,7 +153,8 @@ public class CucumberReporter implements Formatter, Reporter {\n     }\n \n     @Override\n-    public void syntaxError(String state, String event, List<String> legalEvents, String uri, Integer line) {\n+    public void syntaxError(String state, String event, List<String> legalEvents, String uri,\n+                            Integer line) {\n     }\n \n     @Override\n@@ -210,7 +213,7 @@ public class CucumberReporter implements Formatter, Reporter {\n     public void step(Step step) {\n         boolean bgstep = false;\n         if (background != null && (background.getLineRange().getLast() <= step.getLine())\n-                && (step.getLine() >= background.getLineRange().getFirst())) {\n+            && (step.getLine() >= background.getLineRange().getFirst())) {\n             tmpStepsBG.add(step);\n             bgstep = true;\n         }\n@@ -226,8 +229,9 @@ public class CucumberReporter implements Formatter, Reporter {\n     public void endOfScenarioLifeCycle(Scenario scenario) {\n \n         try {\n-            testMethod.finish(document, root, this.position, scenario.getTags(), jUnitDocument, jUnitRoot);\n-        } catch (ExecutionException  | InterruptedException  | IOException e) {\n+            testMethod.finish(document, root, this.position, scenario.getTags(), jUnitDocument,\n+                jUnitRoot);\n+        } catch (ExecutionException | InterruptedException | IOException e) {\n             e.printStackTrace();\n         }\n \n@@ -249,16 +253,20 @@ public class CucumberReporter implements Formatter, Reporter {\n     @Override\n     public void done() {\n         try {\n-            results.setAttribute(\"total\", String.valueOf(getElementsCountByAttribute(suite, STATUS, \".*\")));\n-            results.setAttribute(\"passed\", String.valueOf(getElementsCountByAttribute(suite, STATUS, \"PASS\")));\n-            results.setAttribute(\"failed\", String.valueOf(getElementsCountByAttribute(suite, STATUS, \"FAIL\")));\n-            results.setAttribute(\"skipped\", String.valueOf(getElementsCountByAttribute(suite, STATUS, \"SKIP\")));\n+            results.setAttribute(\"total\",\n+                String.valueOf(getElementsCountByAttribute(suite, STATUS, \".*\")));\n+            results.setAttribute(\"passed\",\n+                String.valueOf(getElementsCountByAttribute(suite, STATUS, \"PASS\")));\n+            results.setAttribute(\"failed\",\n+                String.valueOf(getElementsCountByAttribute(suite, STATUS, \"FAIL\")));\n+            results.setAttribute(\"skipped\",\n+                String.valueOf(getElementsCountByAttribute(suite, STATUS, \"SKIP\")));\n             suite.setAttribute(\"name\", CucumberReporter.class.getName());\n             suite.setAttribute(\"duration-ms\",\n-                    String.valueOf(getTotalDuration(suite.getElementsByTagName(\"test-method\"))));\n+                String.valueOf(getTotalDuration(suite.getElementsByTagName(\"test-method\"))));\n             test.setAttribute(\"name\", CucumberReporter.class.getName());\n             test.setAttribute(\"duration-ms\",\n-                    String.valueOf(getTotalDuration(suite.getElementsByTagName(\"test-method\"))));\n+                String.valueOf(getTotalDuration(suite.getElementsByTagName(\"test-method\"))));\n             Transformer transformer = TransformerFactory.newInstance().newTransformer();\n             transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n \n@@ -274,13 +282,19 @@ public class CucumberReporter implements Formatter, Reporter {\n             DOMSource domSource = new DOMSource(document);\n             transformer.transform(domSource, streamResult);\n             jUnitSuite.setAttribute(\"name\", callerClass + \".\" + featureName);\n-            jUnitSuite.setAttribute(\"tests\", String.valueOf(getElementsCountByAttribute(suite, STATUS, \".*\")));\n-            jUnitSuite.setAttribute(\"failures\", String.valueOf(getElementsCountByAttribute(suite, STATUS, \"FAIL\")));\n-            jUnitSuite.setAttribute(\"errors\", String.valueOf(getElementsCountByAttribute(suite, STATUS, \"FAIL\")));\n-            jUnitSuite.setAttribute(\"skipped\", String.valueOf(getElementsCountByAttribute(suite, STATUS, \"SKIP\")));\n+            jUnitSuite.setAttribute(\"tests\",\n+                String.valueOf(getElementsCountByAttribute(suite, STATUS, \".*\")));\n+            jUnitSuite.setAttribute(\"failures\",\n+                String.valueOf(getElementsCountByAttribute(suite, STATUS, \"FAIL\")));\n+            jUnitSuite.setAttribute(\"errors\",\n+                String.valueOf(getElementsCountByAttribute(suite, STATUS, \"FAIL\")));\n+            jUnitSuite.setAttribute(\"skipped\",\n+                String.valueOf(getElementsCountByAttribute(suite, STATUS, \"SKIP\")));\n             jUnitSuite.setAttribute(\"timestamp\", new java.util.Date().toString());\n             jUnitSuite.setAttribute(\"time\",\n-                      String.valueOf(BigDecimal.valueOf(getTotalDurationMs(suite.getElementsByTagName(\"test-method\"))).setScale(3, BigDecimal.ROUND_HALF_UP).floatValue()));\n+                String.valueOf(BigDecimal\n+                    .valueOf(getTotalDurationMs(suite.getElementsByTagName(\"test-method\")))\n+                    .setScale(3, BigDecimal.ROUND_HALF_UP).floatValue()));\n \n             Transformer transformerJunit = TransformerFactory.newInstance().newTransformer();\n             transformerJunit.setOutputProperty(OutputKeys.INDENT, \"yes\");\n@@ -333,11 +347,13 @@ public class CucumberReporter implements Formatter, Reporter {\n         testMethod.hooks.add(result);\n     }\n \n-    private int getElementsCountByAttribute(Node node, String attributeName, String attributeValue) {\n+    private int getElementsCountByAttribute(Node node, String attributeName,\n+                                            String attributeValue) {\n         int count = 0;\n \n         for (int i = 0; i < node.getChildNodes().getLength(); i++) {\n-            count += getElementsCountByAttribute(node.getChildNodes().item(i), attributeName, attributeValue);\n+            count += getElementsCountByAttribute(node.getChildNodes().item(i), attributeName,\n+                attributeValue);\n         }\n \n         NamedNodeMap attributes = node.getAttributes();\n@@ -408,7 +424,8 @@ public class CucumberReporter implements Formatter, Reporter {\n                 JunitElement.setAttribute(\"name\", name);\n                 ThreadProperty.set(\"dataSet\", \"\");\n             } else {\n-                String data = obtainOutlineScenariosExamples(examplesData.getRows().get(iteration).getCells().toString());\n+                String data = obtainOutlineScenariosExamples(\n+                    examplesData.getRows().get(iteration).getCells().toString());\n                 element.setAttribute(\"name\", name + \" \" + data);\n                 JunitElement.setAttribute(\"name\", name + \" \" + data);\n                 ThreadProperty.set(\"dataSet\", data);\n@@ -426,12 +443,12 @@ public class CucumberReporter implements Formatter, Reporter {\n          *\n          * @param ticket Jira ticket\n          */\n-        private boolean isValidJiraTicket (String ticket) {\n+        private boolean isValidJiraTicket(String ticket) {\n             String userJira = System.getProperty(\"usernamejira\");\n             String passJira = System.getProperty(\"passwordjira\");\n             Boolean validTicket = false;\n \n-            if ((userJira != null) || (passJira != null)  || \"\".equals(ticket)) {\n+            if ((userJira != null) || (passJira != null) || \"\".equals(ticket)) {\n                 CommonG comm = new CommonG();\n                 AsyncHttpClient client = new AsyncHttpClient();\n                 Future<Response> response = null;\n@@ -443,10 +460,12 @@ public class CucumberReporter implements Formatter, Reporter {\n                 comm.setClient(client);\n                 String endpoint = \"/rest/api/2/issue/\" + ticket;\n                 try {\n-                    response = comm.generateRequest(\"GET\", true, userJira, passJira, endpoint, \"\", \"json\");\n+                    response =\n+                        comm.generateRequest(\"GET\", true, userJira, passJira, endpoint, \"\", \"json\");\n                     comm.setResponse(endpoint, response.get());\n                 } catch (Exception e) {\n-                    logger.error(\"Rest API Jira connection error \" + String.valueOf(comm.getResponse().getStatusCode()));\n+                    logger.error(\"Rest API Jira connection error \" +\n+                        String.valueOf(comm.getResponse().getStatusCode()));\n                     return false;\n                 }\n \n@@ -472,18 +491,20 @@ public class CucumberReporter implements Formatter, Reporter {\n          * Builds a test result xml document, builds exception messages on non valid ignore causes such as\n          * \\@tillfixed without an in progress Stratio's Jira ticker\n          *\n-         * @param doc report document\n-         * @param element scenario execution result\n+         * @param doc      report document\n+         * @param element  scenario execution result\n          * @param position position of element in document\n-         * @param tags tags that performs conditional inclusion of element\n+         * @param tags     tags that performs conditional inclusion of element\n          * @param docJunit docJunit report document\n-         * @param Junit Junit scenario execution result\n-         * @throws ExecutionException exception\n+         * @param Junit    Junit scenario execution result\n+         * @throws ExecutionException   exception\n          * @throws InterruptedException exception\n-         * @throws IOException exception\n+         * @throws IOException          exception\n          */\n-        public void finish(Document doc, Element element, Integer position, List<Tag> tags, Document docJunit,\n-                           Element Junit) throws ExecutionException, InterruptedException, IOException {\n+        public void finish(Document doc, Element element, Integer position, List<Tag> tags,\n+                           Document docJunit,\n+                           Element Junit)\n+            throws ExecutionException, InterruptedException, IOException {\n \n             Junit.setAttribute(\"time\", String.valueOf(calculateTotalDurationString() / 1000));\n \n@@ -516,7 +537,8 @@ public class CucumberReporter implements Formatter, Reporter {\n             for (Result result : results) {\n                 if (\"failed\".equals(result.getStatus())) {\n                     failed = result;\n-                } else if (\"undefined\".equals(result.getStatus()) || \"pending\".equals(result.getStatus())) {\n+                } else if (\"undefined\".equals(result.getStatus()) ||\n+                    \"pending\".equals(result.getStatus())) {\n                     skipped = result;\n                 }\n             }\n@@ -528,14 +550,16 @@ public class CucumberReporter implements Formatter, Reporter {\n \n             if (tagList.contains(\"@ignore\")) {\n                 ignored = true;\n-                for (String tag: tagList) {\n+                for (String tag : tagList) {\n                     Pattern pattern = Pattern.compile(\"@tillfixed\\\\((.*?)\\\\)\");\n                     Matcher matcher = pattern.matcher(tag);\n                     if (matcher.find()) {\n                         ticket = matcher.group(1);\n //                        if (isValidJiraTicket(ticket)) {\n                         if (true) {\n-                            exceptionmsg = \"This scenario was skipped because of a pending Jira ticket: \" + ticket;\n+                            exceptionmsg =\n+                                \"This scenario was skipped because of a pending Jira ticket: \" +\n+                                    ticket;\n                             ignoreReason = true;\n                         }\n                         break;\n@@ -566,16 +590,21 @@ public class CucumberReporter implements Formatter, Reporter {\n             String msg2 = \"\";\n \n             if (ignoreRun) {\n-                docJunit.getDocumentElement().getLastChild().removeChild(docJunit.getDocumentElement().getLastChild().getLastChild());\n+                docJunit.getDocumentElement().getLastChild()\n+                    .removeChild(docJunit.getDocumentElement().getLastChild().getLastChild());\n                 return;\n-            } else if (ignored && (!ignoreReason || (ignoreReason && isJiraTicketDone) || (ignoreReason && isWrongTicket))) {\n+            } else if (ignored && (!ignoreReason || (ignoreReason && isJiraTicketDone) ||\n+                (ignoreReason && isWrongTicket))) {\n                 element.setAttribute(STATUS, \"FAIL\");\n                 if (isJiraTicketDone) {\n-                    msg1 = \"The scenario was ignored due an already done (or in progress) ticket. \" + \"https://stratio.atlassian.net/browse/\" + ticket;\n+                    msg1 =\n+                        \"The scenario was ignored due an already done (or in progress) ticket. \" +\n+                            \"https://stratio.atlassian.net/browse/\" + ticket;\n                 } else if (isWrongTicket) {\n                     msg1 = \"The scenario was ignored due to unexistant ticket \" + ticket;\n                 } else {\n-                    msg1 = \"The scenario has no valid reason for being ignored. \\n Valid values: @tillfixed(ISSUE-007) @unimplemented @manual @toocomplex\";\n+                    msg1 =\n+                        \"The scenario has no valid reason for being ignored. \\n Valid values: @tillfixed(ISSUE-007) @unimplemented @manual @toocomplex\";\n                 }\n \n                 Element exception = createException(doc, msg1, msg1, msg2);\n@@ -586,19 +615,22 @@ public class CucumberReporter implements Formatter, Reporter {\n             } else if (ignored && ignoreReason) {\n                 element.setAttribute(STATUS, \"SKIP\");\n                 Element exception = createException(doc, \"skipped\",\n-                        exceptionmsg, \" \");\n+                    exceptionmsg, \" \");\n                 element.appendChild(exception);\n                 Element skippedElementJunit = docJunit.createElement(\"skipped\");\n                 Junit.appendChild(skippedElementJunit);\n                 Element systemOut = systemOutPrintJunit(docJunit, exceptionmsg);\n                 Junit.appendChild(systemOut);\n \n-            } else if ((stringBuilder.toString().contains(\"${\") || stringBuilder.toString().contains(\"!{\") || stringBuilder.toString().contains(\"@{\")) && (failed != null || skipped != null)) {\n+            } else if ((stringBuilder.toString().contains(\"${\") ||\n+                stringBuilder.toString().contains(\"!{\") ||\n+                stringBuilder.toString().contains(\"@{\")) && (failed != null || skipped != null)) {\n                 element.setAttribute(STATUS, \"FAIL\");\n                 Element exception = createException(doc, \"The scenario has unreplaced variables.\",\n-                        \"The scenario has unreplaced variables.\", \" \");\n+                    \"The scenario has unreplaced variables.\", \" \");\n                 element.appendChild(exception);\n-                Element exceptionJunit = createExceptionJunit(docJunit, \"The scenario has unreplaced variables.\",\n+                Element exceptionJunit =\n+                    createExceptionJunit(docJunit, \"The scenario has unreplaced variables.\",\n                         \"The scenario has unreplaced variables.\", \" \");\n                 Junit.appendChild(exceptionJunit);\n                 Element systemOut = systemOutPrintJunit(docJunit, stringBuilder.toString());\n@@ -615,22 +647,27 @@ public class CucumberReporter implements Formatter, Reporter {\n                         Junit.appendChild(systemOut);\n                     } else {\n                         failed.getError().printStackTrace(new PrintWriter(stringWriter));\n-                        Element exception = createException(doc, failed.getError().getClass().getName(),\n+                        Element exception =\n+                            createException(doc, failed.getError().getClass().getName(),\n                                 stringBuilder.toString(), stringWriter.toString());\n                         element.appendChild(exception);\n-                        Element exceptionJunit = createExceptionJunit(docJunit, failed.getError().getClass().getName(),\n+                        Element exceptionJunit =\n+                            createExceptionJunit(docJunit, failed.getError().getClass().getName(),\n                                 stringBuilder.toString(), stringWriter.toString());\n                         Junit.appendChild(exceptionJunit);\n                     }\n                 } else if (skipped != null) {\n                     if (treatSkippedAsFailure) {\n                         element.setAttribute(STATUS, \"FAIL\");\n-                        Element exception = createException(doc, \"The scenario has pending or undefined step(s)\",\n-                                stringBuilder.toString(), \"The scenario has pending or undefined step(s)\");\n+                        Element exception =\n+                            createException(doc, \"The scenario has pending or undefined step(s)\",\n+                                stringBuilder.toString(),\n+                                \"The scenario has pending or undefined step(s)\");\n                         element.appendChild(exception);\n                         Element exceptionJunit = createExceptionJunit(docJunit,\n-                                \"The scenario has pending or undefined step(s)\", stringBuilder.toString(),\n-                                \"The scenario has pending or undefined step(s)\");\n+                            \"The scenario has pending or undefined step(s)\",\n+                            stringBuilder.toString(),\n+                            \"The scenario has pending or undefined step(s)\");\n                         Junit.appendChild(exceptionJunit);\n                     } else {\n                         element.setAttribute(STATUS, \"SKIP\");\n@@ -642,7 +679,8 @@ public class CucumberReporter implements Formatter, Reporter {\n \n                 } else {\n                     element.setAttribute(STATUS, \"PASS\");\n-                    Element exception = createException(doc, \"NonRealException\", stringBuilder.toString(), \" \");\n+                    Element exception =\n+                        createException(doc, \"NonRealException\", stringBuilder.toString(), \" \");\n                     element.appendChild(exception);\n                     Element systemOut = systemOutPrintJunit(docJunit, stringBuilder.toString());\n                     Junit.appendChild(systemOut);\n@@ -669,13 +707,15 @@ public class CucumberReporter implements Formatter, Reporter {\n                 String resultStatusWarn = \"*\";\n                 if (i < results.size()) {\n                     resultStatus = results.get(i).getStatus();\n-                    resultStatusWarn = ((results.get(i).getError() != null) && (results.get(i).getStatus()\n+                    resultStatusWarn =\n+                        ((results.get(i).getError() != null) && (results.get(i).getStatus()\n                             .equals(\"passed\"))) ? \"(W)\" : \"\";\n                 }\n                 sb.append(mergedsteps.get(i).getKeyword());\n                 sb.append(mergedsteps.get(i).getName());\n                 int len = 0;\n-                len = mergedsteps.get(i).getKeyword().length() + mergedsteps.get(i).getName().length();\n+                len = mergedsteps.get(i).getKeyword().length() +\n+                    mergedsteps.get(i).getName().length();\n                 if (mergedsteps.get(i).getRows() != null) {\n                     for (DataTableRow row : mergedsteps.get(i).getRows()) {\n                         StringBuilder strrowBuilder = new StringBuilder();\n@@ -699,7 +739,9 @@ public class CucumberReporter implements Formatter, Reporter {\n             }\n             String cap = \"\";\n             if (!(\"\".equals(cap = hasCapture(featureName, scenario.getName())))) {\n-                sb.append(\"evidence @ \" + System.getProperty(\"BUILD_URL\", \"\") + \"/artifact/testsAT/\" + cap.replaceAll(\"\", \"\"));\n+                sb.append(\n+                    \"evidence @ \" + System.getProperty(\"BUILD_URL\", \"\") + \"/artifact/testsAT/\" +\n+                        cap.replaceAll(\"\", \"\"));\n             }\n         }\n \n@@ -715,21 +757,24 @@ public class CucumberReporter implements Formatter, Reporter {\n             Collection<File> files = FileUtils.listFiles(dir, imgext, true);\n \n             for (File file : files) {\n-                if (file.getPath().contains(featureName.replaceAll(\" \", \"_\") + \".\" + scenario.getName().replaceAll(\" \", \"_\")) &&\n-                        file.getName().contains(\"assert\")) {\n+                if (file.getPath().contains(featureName.replaceAll(\" \", \"_\") + \".\" +\n+                    scenario.getName().replaceAll(\" \", \"_\")) &&\n+                    file.getName().contains(\"assert\")) {\n                     return file.toString();\n                 }\n             }\n             return \"\";\n         }\n \n-        private Element createException(Document doc, String clazz, String message, String stacktrace) {\n+        private Element createException(Document doc, String clazz, String message,\n+                                        String stacktrace) {\n             Element exceptionElement = doc.createElement(\"exception\");\n             exceptionElement.setAttribute(\"class\", clazz);\n \n             if (message != null) {\n                 Element messageElement = doc.createElement(\"message\");\n-                messageElement.appendChild(doc.createCDATASection(\"\\r\\n<pre>\\r\\n\" + message + \"\\r\\n</pre>\\r\\n\"));\n+                messageElement.appendChild(\n+                    doc.createCDATASection(\"\\r\\n<pre>\\r\\n\" + message + \"\\r\\n</pre>\\r\\n\"));\n                 exceptionElement.appendChild(messageElement);\n             }\n \n@@ -740,7 +785,8 @@ public class CucumberReporter implements Formatter, Reporter {\n             return exceptionElement;\n         }\n \n-        private Element createExceptionJunit(Document doc, String clazz, String message, String stacktrace) {\n+        private Element createExceptionJunit(Document doc, String clazz, String message,\n+                                             String stacktrace) {\n             Element exceptionElement = doc.createElement(\"failure\");\n             if (message != null) {\n                 exceptionElement.setAttribute(\"message\", \"\\r\\n\" + message + \"\\r\\n\");\n",
            "diff_size": 106
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "583",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 27, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "591",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "592",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "593",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "594",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "595",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "596",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "597",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "598",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "599",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "600",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "601",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "602",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "603",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "604",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "605",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 23, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "606",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "607",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 30, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "608",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 34, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "609",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 34, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "610",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 34, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "611",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "612",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "613",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "614",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "615",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "616",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 34, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "617",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "618",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "619",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "620",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "621",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "622",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 34, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "623",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 30, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "624",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 34, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "625",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "626",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "627",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "628",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "629",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "630",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 34, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "631",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "632",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "633",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "634",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "635",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 38, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "636",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 34, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "637",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 30, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "638",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 41, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "639",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 41, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "640",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 41, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "641",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 41, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "642",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 41, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "643",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 30, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "644",
                    "severity": "error",
                    "message": "'else rcurly' has incorrect indentation level 19, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/101/CucumberReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/codebuff/101/CucumberReporter.java\nindex 9cae91aa80e..91c9f93b2de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/101/CucumberReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/codebuff/101/CucumberReporter.java\n@@ -33,7 +33,6 @@ import org.apache.commons.io.FileUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.w3c.dom.*;\n-\n import javax.xml.parsers.DocumentBuilderFactory;\n import javax.xml.parsers.ParserConfigurationException;\n import javax.xml.transform.OutputKeys;\n@@ -85,7 +84,7 @@ public class CucumberReporter implements Formatter, Reporter {\n \n     private Writer writer;\n \n-    private Writer  writerJunit;\n+    private Writer writerJunit;\n \n     private Element clazz;\n \n@@ -117,8 +116,7 @@ public class CucumberReporter implements Formatter, Reporter {\n \n     private String additional;\n \n-    private final Logger logger = LoggerFactory.getLogger(this.getClass()\n-            .getCanonicalName());\n+    private final Logger logger = LoggerFactory.getLogger(this.getClass().getCanonicalName());\n     /**\n      * Constructor of cucumberReporter.\n      *\n@@ -126,11 +124,12 @@ public class CucumberReporter implements Formatter, Reporter {\n      * @param cClass class\n      * @throws IOException exception\n      */\n+\n+\n     public CucumberReporter(String url, String cClass, String additional) throws IOException {\n         this.url = url;\n         this.cClass = cClass;\n         this.additional = additional;\n-\n         try {\n             document = DocumentBuilderFactory.newInstance().newDocumentBuilder().newDocument();\n             results = document.createElement(\"testng-results\");\n@@ -150,14 +149,17 @@ public class CucumberReporter implements Formatter, Reporter {\n         }\n     }\n \n+\n     @Override\n     public void syntaxError(String state, String event, List<String> legalEvents, String uri, Integer line) {\n     }\n \n+\n     @Override\n     public void uri(String uri) {\n     }\n \n+\n     @Override\n     public void feature(Feature feature) {\n         featureName = feature.getName();\n@@ -166,20 +168,24 @@ public class CucumberReporter implements Formatter, Reporter {\n         test.appendChild(clazz);\n     }\n \n+\n     @Override\n     public void scenario(Scenario scenario) {\n     }\n \n+\n     @Override\n     public void scenarioOutline(ScenarioOutline scenarioOutline) {\n         iteration = 1;\n     }\n \n+\n     @Override\n     public void examples(Examples examples) {\n         tmpExamples = examples;\n     }\n \n+\n     @Override\n     public void startOfScenarioLifeCycle(Scenario scenario) {\n         root = document.createElement(\"test-method\");\n@@ -189,6 +195,7 @@ public class CucumberReporter implements Formatter, Reporter {\n         testMethod = new TestMethod(featureName, scenario);\n         testMethod.hooks = tmpHooks;\n         tmpStepsBG.clear();\n+\n         if (tmpExamples == null) {\n             testMethod.steps = tmpSteps;\n             testMethod.stepsbg = null;\n@@ -201,20 +208,20 @@ public class CucumberReporter implements Formatter, Reporter {\n         iteration++;\n     }\n \n+\n     @Override\n     public void background(Background background) {\n         this.background = background;\n     }\n \n+\n     @Override\n     public void step(Step step) {\n         boolean bgstep = false;\n-        if (background != null && (background.getLineRange().getLast() <= step.getLine())\n-                && (step.getLine() >= background.getLineRange().getFirst())) {\n+        if (background != null && (background.getLineRange().getLast() <= step.getLine()) && (step.getLine() >= background.getLineRange().getFirst())) {\n             tmpStepsBG.add(step);\n             bgstep = true;\n         }\n-\n         if (step.getClass().toString().contains(\"ExampleStep\") && !bgstep) {\n             testMethod.steps.add(step);\n         } else {\n@@ -222,16 +229,16 @@ public class CucumberReporter implements Formatter, Reporter {\n         }\n     }\n \n+\n     @Override\n     public void endOfScenarioLifeCycle(Scenario scenario) {\n-\n         try {\n             testMethod.finish(document, root, this.position, scenario.getTags(), jUnitDocument, jUnitRoot);\n-        } catch (ExecutionException  | InterruptedException  | IOException e) {\n+        } catch (ExecutionException | InterruptedException | IOException e) {\n             e.printStackTrace();\n         }\n-\n         this.position++;\n+\n         if ((tmpExamples != null) && (iteration >= tmpExamples.getRows().size())) {\n             tmpExamples = null;\n         }\n@@ -242,10 +249,12 @@ public class CucumberReporter implements Formatter, Reporter {\n         jUnitRoot.setAttribute(\"classname\", callerClass);\n     }\n \n+\n     @Override\n     public void eof() {\n     }\n \n+\n     @Override\n     public void done() {\n         try {\n@@ -254,14 +263,11 @@ public class CucumberReporter implements Formatter, Reporter {\n             results.setAttribute(\"failed\", String.valueOf(getElementsCountByAttribute(suite, STATUS, \"FAIL\")));\n             results.setAttribute(\"skipped\", String.valueOf(getElementsCountByAttribute(suite, STATUS, \"SKIP\")));\n             suite.setAttribute(\"name\", CucumberReporter.class.getName());\n-            suite.setAttribute(\"duration-ms\",\n-                    String.valueOf(getTotalDuration(suite.getElementsByTagName(\"test-method\"))));\n+            suite.setAttribute(\"duration-ms\", String.valueOf(getTotalDuration(suite.getElementsByTagName(\"test-method\"))));\n             test.setAttribute(\"name\", CucumberReporter.class.getName());\n-            test.setAttribute(\"duration-ms\",\n-                    String.valueOf(getTotalDuration(suite.getElementsByTagName(\"test-method\"))));\n+            test.setAttribute(\"duration-ms\", String.valueOf(getTotalDuration(suite.getElementsByTagName(\"test-method\"))));\n             Transformer transformer = TransformerFactory.newInstance().newTransformer();\n             transformer.setOutputProperty(OutputKeys.INDENT, \"yes\");\n-\n             URLOutputStream urlOS = null;\n             try {\n                 urlOS = new URLOutputStream(Utils.toURL(url + cClass + additional + \"TESTNG.xml\"));\n@@ -279,12 +285,9 @@ public class CucumberReporter implements Formatter, Reporter {\n             jUnitSuite.setAttribute(\"errors\", String.valueOf(getElementsCountByAttribute(suite, STATUS, \"FAIL\")));\n             jUnitSuite.setAttribute(\"skipped\", String.valueOf(getElementsCountByAttribute(suite, STATUS, \"SKIP\")));\n             jUnitSuite.setAttribute(\"timestamp\", new java.util.Date().toString());\n-            jUnitSuite.setAttribute(\"time\",\n-                      String.valueOf(BigDecimal.valueOf(getTotalDurationMs(suite.getElementsByTagName(\"test-method\"))).setScale(3, BigDecimal.ROUND_HALF_UP).floatValue()));\n-\n+            jUnitSuite.setAttribute(\"time\", String.valueOf(BigDecimal.valueOf(getTotalDurationMs(suite.getElementsByTagName(\"test-method\"))).setScale(3, BigDecimal.ROUND_HALF_UP).floatValue()));\n             Transformer transformerJunit = TransformerFactory.newInstance().newTransformer();\n             transformerJunit.setOutputProperty(OutputKeys.INDENT, \"yes\");\n-\n             try {\n                 urlOS = new URLOutputStream(Utils.toURL(url + cClass + additional + \"JUNIT.xml\"));\n                 this.writerJunit = new UTF8OutputStreamWriter(urlOS);\n@@ -295,39 +298,46 @@ public class CucumberReporter implements Formatter, Reporter {\n             StreamResult streamResultJunit = new StreamResult(writerJunit);\n             DOMSource domSourceJunit = new DOMSource(jUnitDocument);\n             transformerJunit.transform(domSourceJunit, streamResultJunit);\n-\n         } catch (TransformerException e) {\n             throw new CucumberException(\"Error transforming report.\", e);\n         }\n     }\n \n+\n     @Override\n     public void close() {\n     }\n \n     // Reporter methods\n+\n+\n     @Override\n     public void before(Match match, Result result) {\n         tmpHooks.add(result);\n     }\n \n+\n     @Override\n     public void match(Match match) {\n     }\n \n+\n     @Override\n     public void result(Result result) {\n         testMethod.results.add(result);\n     }\n \n+\n     @Override\n     public void embedding(String mimeType, byte[] data) {\n     }\n \n+\n     @Override\n     public void write(String text) {\n     }\n \n+\n     @Override\n     public void after(Match match, Result result) {\n         testMethod.hooks.add(result);\n@@ -335,9 +345,10 @@ public class CucumberReporter implements Formatter, Reporter {\n \n     private int getElementsCountByAttribute(Node node, String attributeName, String attributeValue) {\n         int count = 0;\n-\n         for (int i = 0; i < node.getChildNodes().getLength(); i++) {\n-            count += getElementsCountByAttribute(node.getChildNodes().item(i), attributeName, attributeValue);\n+            count += getElementsCountByAttribute(node.getChildNodes().item(i),\n+                attributeName,\n+                    attributeValue);\n         }\n \n         NamedNodeMap attributes = node.getAttributes();\n@@ -391,11 +402,13 @@ public class CucumberReporter implements Formatter, Reporter {\n \n         private Integer iteration = 1;\n \n+\n         public TestMethod(String feature, Scenario scenario) {\n             this.featureName = feature;\n             this.scenario = scenario;\n         }\n \n+\n         private void start(Element element, Integer iteration, Element JunitElement) {\n             this.iteration = iteration;\n             String testSuffix = System.getProperty(\"TESTSUFFIX\");\n@@ -426,17 +439,16 @@ public class CucumberReporter implements Formatter, Reporter {\n          *\n          * @param ticket Jira ticket\n          */\n-        private boolean isValidJiraTicket (String ticket) {\n+\n+        private boolean isValidJiraTicket(String ticket) {\n             String userJira = System.getProperty(\"usernamejira\");\n             String passJira = System.getProperty(\"passwordjira\");\n             Boolean validTicket = false;\n-\n-            if ((userJira != null) || (passJira != null)  || \"\".equals(ticket)) {\n+            if ((userJira != null) || (passJira != null) || \"\".equals(ticket)) {\n                 CommonG comm = new CommonG();\n                 AsyncHttpClient client = new AsyncHttpClient();\n                 Future<Response> response = null;\n                 Logger logger = LoggerFactory.getLogger(ThreadProperty.get(\"class\"));\n-\n                 comm.setRestProtocol(\"https://\");\n                 comm.setRestHost(\"stratio.atlassian.net\");\n                 comm.setRestPort(\"\");\n@@ -460,7 +472,6 @@ public class CucumberReporter implements Formatter, Reporter {\n                     logger.error(json);\n                     return false;\n                 }\n-\n                 if (!\"done\".equals(value) || !\"finalizado\".equals(value) || !\"qa\".equals(value)) {\n                     validTicket = true;\n                 }\n@@ -482,16 +493,14 @@ public class CucumberReporter implements Formatter, Reporter {\n          * @throws InterruptedException exception\n          * @throws IOException exception\n          */\n-        public void finish(Document doc, Element element, Integer position, List<Tag> tags, Document docJunit,\n-                           Element Junit) throws ExecutionException, InterruptedException, IOException {\n-\n-            Junit.setAttribute(\"time\", String.valueOf(calculateTotalDurationString() / 1000));\n \n-            element.setAttribute(\"duration-ms\", String.valueOf(calculateTotalDurationString()));\n+        public void finish(Document doc, Element element, Integer position, List<Tag> tags, Document docJunit, Element Junit) throws ExecutionException, InterruptedException, IOException {\n+            Junit.setAttribute(\"time\",\n+                String.valueOf(calculateTotalDurationString() / 1000));\n+            element.setAttribute(\"duration-ms\",\n+                String.valueOf(calculateTotalDurationString()));\n             element.setAttribute(\"finished-at\", DATE_FORMAT.format(new Date()));\n-\n             StringBuilder stringBuilder = new StringBuilder();\n-\n             List<Step> mergedsteps = new ArrayList<Step>();\n             if (stepsbg != null) {\n                 mergedsteps.addAll(stepsbg);\n@@ -509,7 +518,6 @@ public class CucumberReporter implements Formatter, Reporter {\n             Boolean isJiraTicketDone = false;\n             Boolean isWrongTicket = false;\n             Boolean ignoreRun = false;\n-\n             List<String> tagList = new ArrayList<>();\n             tagList = tags.stream().map(Tag::getName).collect(Collectors.toList());\n \n@@ -525,15 +533,16 @@ public class CucumberReporter implements Formatter, Reporter {\n                     failed = result;\n                 }\n             }\n-\n             if (tagList.contains(\"@ignore\")) {\n                 ignored = true;\n-                for (String tag: tagList) {\n+\n+                for (String tag : tagList) {\n                     Pattern pattern = Pattern.compile(\"@tillfixed\\\\((.*?)\\\\)\");\n                     Matcher matcher = pattern.matcher(tag);\n                     if (matcher.find()) {\n                         ticket = matcher.group(1);\n //                        if (isValidJiraTicket(ticket)) {\n+\n                         if (true) {\n                             exceptionmsg = \"This scenario was skipped because of a pending Jira ticket: \" + ticket;\n                             ignoreReason = true;\n@@ -541,22 +550,18 @@ public class CucumberReporter implements Formatter, Reporter {\n                         break;\n                     }\n                 }\n-\n                 if (tagList.contains(\"@unimplemented\")) {\n                     exceptionmsg = \"This scenario was skipped because of it is not yet implemented\";\n                     ignoreReason = true;\n                 }\n-\n                 if (tagList.contains(\"@manual\")) {\n                     ignoreReason = true;\n                     exceptionmsg = \"This scenario was skipped because it is marked as manual.\";\n                 }\n-\n                 if (tagList.contains(\"@toocomplex\")) {\n                     exceptionmsg = \"This scenario was skipped because of being too complex to test\";\n                     ignoreReason = true;\n                 }\n-\n                 if (tagList.contains(\"@envCondition\")) {\n                     ignoreRun = true;\n                 }\n@@ -564,93 +569,81 @@ public class CucumberReporter implements Formatter, Reporter {\n \n             String msg1 = \"\";\n             String msg2 = \"\";\n-\n             if (ignoreRun) {\n                 docJunit.getDocumentElement().getLastChild().removeChild(docJunit.getDocumentElement().getLastChild().getLastChild());\n                 return;\n             } else if (ignored && (!ignoreReason || (ignoreReason && isJiraTicketDone) || (ignoreReason && isWrongTicket))) {\n                 element.setAttribute(STATUS, \"FAIL\");\n+\n                 if (isJiraTicketDone) {\n                     msg1 = \"The scenario was ignored due an already done (or in progress) ticket. \" + \"https://stratio.atlassian.net/browse/\" + ticket;\n                 } else if (isWrongTicket) {\n                     msg1 = \"The scenario was ignored due to unexistant ticket \" + ticket;\n                 } else {\n-                    msg1 = \"The scenario has no valid reason for being ignored. \\n Valid values: @tillfixed(ISSUE-007) @unimplemented @manual @toocomplex\";\n+                           msg1 = \"The scenario has no valid reason for being ignored. \\n Valid values: @tillfixed(ISSUE-007) @unimplemented @manual @toocomplex\";\n                 }\n \n                 Element exception = createException(doc, msg1, msg1, msg2);\n                 element.appendChild(exception);\n                 Element systemOut = createExceptionJunit(docJunit, msg1, msg1, msg2);\n                 Junit.appendChild(systemOut);\n-\n             } else if (ignored && ignoreReason) {\n-                element.setAttribute(STATUS, \"SKIP\");\n-                Element exception = createException(doc, \"skipped\",\n-                        exceptionmsg, \" \");\n-                element.appendChild(exception);\n-                Element skippedElementJunit = docJunit.createElement(\"skipped\");\n-                Junit.appendChild(skippedElementJunit);\n-                Element systemOut = systemOutPrintJunit(docJunit, exceptionmsg);\n-                Junit.appendChild(systemOut);\n-\n-            } else if ((stringBuilder.toString().contains(\"${\") || stringBuilder.toString().contains(\"!{\") || stringBuilder.toString().contains(\"@{\")) && (failed != null || skipped != null)) {\n-                element.setAttribute(STATUS, \"FAIL\");\n-                Element exception = createException(doc, \"The scenario has unreplaced variables.\",\n-                        \"The scenario has unreplaced variables.\", \" \");\n-                element.appendChild(exception);\n-                Element exceptionJunit = createExceptionJunit(docJunit, \"The scenario has unreplaced variables.\",\n-                        \"The scenario has unreplaced variables.\", \" \");\n-                Junit.appendChild(exceptionJunit);\n-                Element systemOut = systemOutPrintJunit(docJunit, stringBuilder.toString());\n-                Junit.appendChild(systemOut);\n-            } else {\n-                if (failed != null) {\n-                    element.setAttribute(STATUS, \"FAIL\");\n-                    StringWriter stringWriter = new StringWriter();\n-                    if (failed.getErrorMessage().contains(\"An important scenario has failed!\")) {\n-                        element.setAttribute(STATUS, \"SKIP\");\n-                        Element skippedElementJunit = docJunit.createElement(\"skipped\");\n-                        Junit.appendChild(skippedElementJunit);\n-                        Element systemOut = systemOutPrintJunit(docJunit, stringBuilder.toString());\n-                        Junit.appendChild(systemOut);\n-                    } else {\n-                        failed.getError().printStackTrace(new PrintWriter(stringWriter));\n-                        Element exception = createException(doc, failed.getError().getClass().getName(),\n-                                stringBuilder.toString(), stringWriter.toString());\n-                        element.appendChild(exception);\n-                        Element exceptionJunit = createExceptionJunit(docJunit, failed.getError().getClass().getName(),\n-                                stringBuilder.toString(), stringWriter.toString());\n-                        Junit.appendChild(exceptionJunit);\n-                    }\n-                } else if (skipped != null) {\n-                    if (treatSkippedAsFailure) {\n-                        element.setAttribute(STATUS, \"FAIL\");\n-                        Element exception = createException(doc, \"The scenario has pending or undefined step(s)\",\n-                                stringBuilder.toString(), \"The scenario has pending or undefined step(s)\");\n-                        element.appendChild(exception);\n-                        Element exceptionJunit = createExceptionJunit(docJunit,\n-                                \"The scenario has pending or undefined step(s)\", stringBuilder.toString(),\n-                                \"The scenario has pending or undefined step(s)\");\n-                        Junit.appendChild(exceptionJunit);\n-                    } else {\n-                        element.setAttribute(STATUS, \"SKIP\");\n-                        Element skippedElementJunit = docJunit.createElement(\"skipped\");\n-                        Junit.appendChild(skippedElementJunit);\n-                        Element systemOut = systemOutPrintJunit(docJunit, stringBuilder.toString());\n-                        Junit.appendChild(systemOut);\n-                    }\n-\n-                } else {\n-                    element.setAttribute(STATUS, \"PASS\");\n-                    Element exception = createException(doc, \"NonRealException\", stringBuilder.toString(), \" \");\n-                    element.appendChild(exception);\n-                    Element systemOut = systemOutPrintJunit(docJunit, stringBuilder.toString());\n-                    Junit.appendChild(systemOut);\n-                }\n-            }\n+                       element.setAttribute(STATUS, \"SKIP\");\n+                       Element exception = createException(doc, \"skipped\", exceptionmsg, \" \");\n+                       element.appendChild(exception);\n+                       Element skippedElementJunit = docJunit.createElement(\"skipped\");\n+                       Junit.appendChild(skippedElementJunit);\n+                       Element systemOut = systemOutPrintJunit(docJunit, exceptionmsg);\n+                       Junit.appendChild(systemOut);\n+                   } else if ((stringBuilder.toString().contains(\"${\") || stringBuilder.toString().contains(\"!{\") || stringBuilder.toString().contains(\"@{\")) && (failed != null || skipped != null)) {\n+                       element.setAttribute(STATUS, \"FAIL\");\n+                       Element exception = createException(doc, \"The scenario has unreplaced variables.\", \"The scenario has unreplaced variables.\", \" \");\n+                       element.appendChild(exception);\n+                       Element exceptionJunit = createExceptionJunit(docJunit, \"The scenario has unreplaced variables.\", \"The scenario has unreplaced variables.\", \" \");\n+                       Junit.appendChild(exceptionJunit);\n+                       Element systemOut = systemOutPrintJunit(docJunit, stringBuilder.toString());\n+                       Junit.appendChild(systemOut);\n+                   } else {\n+                              if (failed != null) {\n+                                  element.setAttribute(STATUS, \"FAIL\");\n+                                  StringWriter stringWriter = new StringWriter();\n+                                  if (failed.getErrorMessage().contains(\"An important scenario has failed!\")) {\n+                                      element.setAttribute(STATUS, \"SKIP\");\n+                                      Element skippedElementJunit = docJunit.createElement(\"skipped\");\n+                                      Junit.appendChild(skippedElementJunit);\n+                                      Element systemOut = systemOutPrintJunit(docJunit, stringBuilder.toString());\n+                                      Junit.appendChild(systemOut);\n+                                  } else {\n+                                      failed.getError().printStackTrace(new PrintWriter(stringWriter));\n+                                      Element exception = createException(doc, failed.getError().getClass().getName(), stringBuilder.toString(), stringWriter.toString());\n+                                      element.appendChild(exception);\n+                                      Element exceptionJunit = createExceptionJunit(docJunit, failed.getError().getClass().getName(), stringBuilder.toString(), stringWriter.toString());\n+                                      Junit.appendChild(exceptionJunit);\n+                                  }\n+                              } else if (skipped != null) {\n+                                  if (treatSkippedAsFailure) {\n+                                      element.setAttribute(STATUS, \"FAIL\");\n+                                      Element exception = createException(doc, \"The scenario has pending or undefined step(s)\", stringBuilder.toString(), \"The scenario has pending or undefined step(s)\");\n+                                      element.appendChild(exception);\n+                                      Element exceptionJunit = createExceptionJunit(docJunit, \"The scenario has pending or undefined step(s)\", stringBuilder.toString(), \"The scenario has pending or undefined step(s)\");\n+                                      Junit.appendChild(exceptionJunit);\n+                                  } else {\n+                                      element.setAttribute(STATUS, \"SKIP\");\n+                                      Element skippedElementJunit = docJunit.createElement(\"skipped\");\n+                                      Junit.appendChild(skippedElementJunit);\n+                                      Element systemOut = systemOutPrintJunit(docJunit, stringBuilder.toString());\n+                                      Junit.appendChild(systemOut);\n+                                  }\n+                              } else {\n+                                         element.setAttribute(STATUS, \"PASS\");\n+                                         Element exception = createException(doc, \"NonRealException\", stringBuilder.toString(), \" \");\n+                                         element.appendChild(exception);\n+                                         Element systemOut = systemOutPrintJunit(docJunit, stringBuilder.toString());\n+                                         Junit.appendChild(systemOut);\n+                              }\n+                   }\n         }\n \n-\n         private double calculateTotalDurationString() {\n             double totalDurationNanos = 0;\n             for (Result r : results) {\n@@ -663,26 +656,27 @@ public class CucumberReporter implements Formatter, Reporter {\n         }\n \n         public void addStepAndResultListing(StringBuilder sb, List<Step> mergedsteps) {\n-\n             for (int i = 0; i < mergedsteps.size(); i++) {\n                 String resultStatus = \"not executed\";\n                 String resultStatusWarn = \"*\";\n                 if (i < results.size()) {\n                     resultStatus = results.get(i).getStatus();\n-                    resultStatusWarn = ((results.get(i).getError() != null) && (results.get(i).getStatus()\n-                            .equals(\"passed\"))) ? \"(W)\" : \"\";\n+                    resultStatusWarn = ((results.get(i).getError() != null) && (results.get(i).getStatus().equals(\"passed\"))) ? \"(W)\" : \"\";\n                 }\n                 sb.append(mergedsteps.get(i).getKeyword());\n                 sb.append(mergedsteps.get(i).getName());\n                 int len = 0;\n                 len = mergedsteps.get(i).getKeyword().length() + mergedsteps.get(i).getName().length();\n+\n                 if (mergedsteps.get(i).getRows() != null) {\n                     for (DataTableRow row : mergedsteps.get(i).getRows()) {\n                         StringBuilder strrowBuilder = new StringBuilder();\n                         strrowBuilder.append(\"| \");\n+\n                         for (String cell : row.getCells()) {\n                             strrowBuilder.append(cell).append(\" | \");\n                         }\n+\n                         String strrow = strrowBuilder.toString();\n                         len = strrow.length() + DEFAULT_LENGTH;\n                         sb.append(\"\\n           \");\n@@ -692,11 +686,11 @@ public class CucumberReporter implements Formatter, Reporter {\n                 for (int j = 0; j + len < DEFAULT_MAX_LENGTH; j++) {\n                     sb.append(\".\");\n                 }\n-\n                 sb.append(resultStatus);\n                 sb.append(resultStatusWarn);\n                 sb.append(\"\\n\");\n             }\n+\n             String cap = \"\";\n             if (!(\"\".equals(cap = hasCapture(featureName, scenario.getName())))) {\n                 sb.append(\"evidence @ \" + System.getProperty(\"BUILD_URL\", \"\") + \"/artifact/testsAT/\" + cap.replaceAll(\"\", \"\"));\n@@ -711,12 +705,11 @@ public class CucumberReporter implements Formatter, Reporter {\n             } else {\n                 dir = new File(\"./target/executions/\");\n             }\n+\n             final String[] imgext = {\"png\"};\n             Collection<File> files = FileUtils.listFiles(dir, imgext, true);\n-\n             for (File file : files) {\n-                if (file.getPath().contains(featureName.replaceAll(\" \", \"_\") + \".\" + scenario.getName().replaceAll(\" \", \"_\")) &&\n-                        file.getName().contains(\"assert\")) {\n+                if (file.getPath().contains(featureName.replaceAll(\" \", \"_\") + \".\" + scenario.getName().replaceAll(\" \", \"_\")) && file.getName().contains(\"assert\")) {\n                     return file.toString();\n                 }\n             }\n@@ -736,7 +729,6 @@ public class CucumberReporter implements Formatter, Reporter {\n             Element stacktraceElement = doc.createElement(\"full-stacktrace\");\n             stacktraceElement.appendChild(doc.createCDATASection(stacktrace));\n             exceptionElement.appendChild(stacktraceElement);\n-\n             return exceptionElement;\n         }\n \n@@ -755,4 +747,4 @@ public class CucumberReporter implements Formatter, Reporter {\n             return systemOut;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 160
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/101/CucumberReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/101/CucumberReporter.java\nindex 9cae91aa80e..72fc7336ad9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/101/CucumberReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/101/CucumberReporter.java\n@@ -126,6 +126,7 @@ public class CucumberReporter implements Formatter, Reporter {\n      * @param cClass class\n      * @throws IOException exception\n      */\n+\n     public CucumberReporter(String url, String cClass, String additional) throws IOException {\n         this.url = url;\n         this.cClass = cClass;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "129",
                    "severity": "error",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "130",
                    "column": "20",
                    "severity": "error",
                    "message": "'{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 9, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/101/CucumberReporter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_three_grams/101/CucumberReporter.java\nindex 9cae91aa80e..d76376f1fe2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/101/CucumberReporter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_three_grams/101/CucumberReporter.java\n@@ -126,8 +126,9 @@ public class CucumberReporter implements Formatter, Reporter {\n      * @param cClass class\n      * @throws IOException exception\n      */\n-    public CucumberReporter(String url, String cClass, String additional) throws IOException {\n-        this.url = url;\n+    public CucumberReporter(String url, String cClass, String additional) throws\n+        IOException{\n+         this.url = url;\n         this.cClass = cClass;\n         this.additional = additional;\n \n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
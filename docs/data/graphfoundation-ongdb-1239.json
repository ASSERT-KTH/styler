{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1239",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "99",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "106",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1239/TransactionBatchCommitter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1239/TransactionBatchCommitter.java\nindex 9b7e593c751..0f0ac9c362a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1239/TransactionBatchCommitter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1239/TransactionBatchCommitter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.com.storecopy;\n \n import org.neo4j.kernel.api.KernelTransactionHandle;\n@@ -36,25 +37,25 @@ import static org.neo4j.storageengine.api.TransactionApplicationMode.EXTERNAL;\n \n class TransactionBatchCommitter implements TransactionQueue.Applier\n {\n-    private final KernelTransactions kernelTransactions;\n-    private final long idReuseSafeZoneTime;\n-    private final TransactionCommitProcess commitProcess;\n-    private final Log log;\n-\n-    TransactionBatchCommitter( KernelTransactions kernelTransactions, long idReuseSafeZoneTime,\n-            TransactionCommitProcess commitProcess, Log log )\n-    {\n-        assert log != null;\n-\n-        this.kernelTransactions = kernelTransactions;\n-        this.idReuseSafeZoneTime = idReuseSafeZoneTime;\n-        this.commitProcess = commitProcess;\n-        this.log = log;\n-    }\n-\n-    @Override\n-    public void apply( TransactionToApply first, TransactionToApply last ) throws Exception\n-    {\n+  private final KernelTransactions kernelTransactions;\n+  private final long idReuseSafeZoneTime;\n+  private final TransactionCommitProcess commitProcess;\n+  private final Log log;\n+\n+  TransactionBatchCommitter(KernelTransactions kernelTransactions, long idReuseSafeZoneTime,\n+                            TransactionCommitProcess commitProcess, Log log)\n+  {\n+    assert log != null;\n+\n+    this.kernelTransactions = kernelTransactions;\n+    this.idReuseSafeZoneTime = idReuseSafeZoneTime;\n+    this.commitProcess = commitProcess;\n+    this.log = log;\n+  }\n+\n+  @Override\n+  public void apply(TransactionToApply first, TransactionToApply last) throws Exception\n+  {\n         /*\n           Case 1 (Not really a problem):\n            - chunk of batch is smaller than safe zone\n@@ -83,83 +84,81 @@ class TransactionBatchCommitter implements TransactionQueue.Applier\n                        read outdated data and can be affected by reuse contamination.\n          */\n \n-        if ( batchSizeExceedsSafeZone( first, last ) )\n-        {\n-            // We stop new transactions from starting to avoid problem described in (2)\n-            kernelTransactions.blockNewTransactions();\n-            try\n-            {\n-                markUnsafeTransactionsForTermination( first, last );\n-                commit( first );\n-            }\n-            finally\n-            {\n-                kernelTransactions.unblockNewTransactions();\n-            }\n-        }\n-        else\n-        {\n-            markUnsafeTransactionsForTermination( first, last );\n-            commit( first );\n-        }\n-    }\n-\n-    private long commit( TransactionToApply first ) throws TransactionFailureException\n+    if (batchSizeExceedsSafeZone(first, last))\n+    {\n+      // We stop new transactions from starting to avoid problem described in (2)\n+      kernelTransactions.blockNewTransactions();\n+      try\n+      {\n+        markUnsafeTransactionsForTermination(first, last);\n+        commit(first);\n+      } finally\n+      {\n+        kernelTransactions.unblockNewTransactions();\n+      }\n+    } else\n     {\n-        return commitProcess.commit( first, CommitEvent.NULL, EXTERNAL );\n+      markUnsafeTransactionsForTermination(first, last);\n+      commit(first);\n     }\n+  }\n \n-    private boolean batchSizeExceedsSafeZone( TransactionToApply first, TransactionToApply last )\n-    {\n-        long lastAppliedTimestamp = last.transactionRepresentation().getTimeCommitted();\n-        long firstAppliedTimestamp = first.transactionRepresentation().getTimeCommitted();\n-        long chunkLength = lastAppliedTimestamp - firstAppliedTimestamp;\n+  private long commit(TransactionToApply first) throws TransactionFailureException\n+  {\n+    return commitProcess.commit(first, CommitEvent.NULL, EXTERNAL);\n+  }\n \n-        return chunkLength > idReuseSafeZoneTime;\n-    }\n+  private boolean batchSizeExceedsSafeZone(TransactionToApply first, TransactionToApply last)\n+  {\n+    long lastAppliedTimestamp = last.transactionRepresentation().getTimeCommitted();\n+    long firstAppliedTimestamp = first.transactionRepresentation().getTimeCommitted();\n+    long chunkLength = lastAppliedTimestamp - firstAppliedTimestamp;\n+\n+    return chunkLength > idReuseSafeZoneTime;\n+  }\n \n-    private void markUnsafeTransactionsForTermination( TransactionToApply first, TransactionToApply last )\n+  private void markUnsafeTransactionsForTermination(TransactionToApply first, TransactionToApply last)\n+  {\n+    long firstCommittedTimestamp = first.transactionRepresentation().getTimeCommitted();\n+    long lastCommittedTimestamp = last.transactionRepresentation().getTimeCommitted();\n+    long earliestSafeTimestamp = lastCommittedTimestamp - idReuseSafeZoneTime;\n+\n+    for (KernelTransactionHandle txHandle : kernelTransactions.activeTransactions())\n     {\n-        long firstCommittedTimestamp = first.transactionRepresentation().getTimeCommitted();\n-        long lastCommittedTimestamp = last.transactionRepresentation().getTimeCommitted();\n-        long earliestSafeTimestamp = lastCommittedTimestamp - idReuseSafeZoneTime;\n+      long commitTimestamp = txHandle.lastTransactionTimestampWhenStarted();\n \n-        for ( KernelTransactionHandle txHandle : kernelTransactions.activeTransactions() )\n+      if (commitTimestamp != TransactionIdStore.BASE_TX_COMMIT_TIMESTAMP &&\n+          commitTimestamp < earliestSafeTimestamp)\n+      {\n+        if (txHandle.markForTermination(Status.Transaction.Outdated))\n         {\n-            long commitTimestamp = txHandle.lastTransactionTimestampWhenStarted();\n-\n-            if ( commitTimestamp != TransactionIdStore.BASE_TX_COMMIT_TIMESTAMP &&\n-                 commitTimestamp < earliestSafeTimestamp )\n-            {\n-                if ( txHandle.markForTermination( Status.Transaction.Outdated ) )\n-                {\n-                    log.info( \"Marking transaction for termination, \" +\n-                            \"invalidated due to an upcoming batch of changes being applied:\" +\n-                            \"\\n\" +\n-                            \"  Batch: firstCommittedTxId:\" + first.transactionId() +\n-                            \", firstCommittedTimestamp:\" + informativeTimestamp( firstCommittedTimestamp ) +\n-                            \", lastCommittedTxId:\" + last.transactionId() +\n-                            \", lastCommittedTimestamp:\" + informativeTimestamp( lastCommittedTimestamp ) +\n-                            \", batchTimeRange:\" + informativeDuration( lastCommittedTimestamp - firstCommittedTimestamp ) +\n-                            \", earliestSafeTimestamp:\" + informativeTimestamp( earliestSafeTimestamp ) +\n-                            \", safeZoneDuration:\" + informativeDuration( idReuseSafeZoneTime ) +\n-                            \"\\n\" +\n-                            \"  Transaction: lastCommittedTimestamp:\" +\n-                            informativeTimestamp( txHandle.lastTransactionTimestampWhenStarted() ) +\n-                            \", lastCommittedTxId:\" + txHandle.lastTransactionIdWhenStarted() +\n-                            \", localStartTimestamp:\" + informativeTimestamp( txHandle.startTime() ) );\n-                }\n-            }\n+          log.info(\"Marking transaction for termination, \" +\n+              \"invalidated due to an upcoming batch of changes being applied:\" +\n+              \"\\n\" +\n+              \"  Batch: firstCommittedTxId:\" + first.transactionId() +\n+              \", firstCommittedTimestamp:\" + informativeTimestamp(firstCommittedTimestamp) +\n+              \", lastCommittedTxId:\" + last.transactionId() +\n+              \", lastCommittedTimestamp:\" + informativeTimestamp(lastCommittedTimestamp) +\n+              \", batchTimeRange:\" + informativeDuration(lastCommittedTimestamp - firstCommittedTimestamp) +\n+              \", earliestSafeTimestamp:\" + informativeTimestamp(earliestSafeTimestamp) +\n+              \", safeZoneDuration:\" + informativeDuration(idReuseSafeZoneTime) +\n+              \"\\n\" +\n+              \"  Transaction: lastCommittedTimestamp:\" +\n+              informativeTimestamp(txHandle.lastTransactionTimestampWhenStarted()) +\n+              \", lastCommittedTxId:\" + txHandle.lastTransactionIdWhenStarted() +\n+              \", localStartTimestamp:\" + informativeTimestamp(txHandle.startTime()));\n         }\n+      }\n     }\n+  }\n \n-    private static String informativeDuration( long duration )\n-    {\n-        return duration( duration ) + \"/\" + duration;\n-    }\n+  private static String informativeDuration(long duration)\n+  {\n+    return duration(duration) + \"/\" + duration;\n+  }\n \n-    private static String informativeTimestamp( long timestamp )\n-    {\n-        return time( timestamp ) + \"/\" + timestamp;\n-    }\n+  private static String informativeTimestamp(long timestamp)\n+  {\n+    return time(timestamp) + \"/\" + timestamp;\n+  }\n }\n",
            "diff_size": 106
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "117",
                    "column": "27",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 917).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1239/TransactionBatchCommitter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1239/TransactionBatchCommitter.java\nindex 9b7e593c751..3242430b234 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1239/TransactionBatchCommitter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1239/TransactionBatchCommitter.java\n@@ -45,8 +45,7 @@ class TransactionBatchCommitter implements TransactionQueue.Applier\n             TransactionCommitProcess commitProcess, Log log )\n     {\n         assert log != null;\n-\n-        this.kernelTransactions = kernelTransactions;\n+this.kernelTransactions = kernelTransactions;\n         this.idReuseSafeZoneTime = idReuseSafeZoneTime;\n         this.commitProcess = commitProcess;\n         this.log = log;\n@@ -115,7 +114,7 @@ class TransactionBatchCommitter implements TransactionQueue.Applier\n         long firstAppliedTimestamp = first.transactionRepresentation().getTimeCommitted();\n         long chunkLength = lastAppliedTimestamp - firstAppliedTimestamp;\n \n-        return chunkLength > idReuseSafeZoneTime;\n+        return chunkLength> idReuseSafeZoneTime;\n     }\n \n     private void markUnsafeTransactionsForTermination( TransactionToApply first, TransactionToApply last )\n@@ -123,32 +122,15 @@ class TransactionBatchCommitter implements TransactionQueue.Applier\n         long firstCommittedTimestamp = first.transactionRepresentation().getTimeCommitted();\n         long lastCommittedTimestamp = last.transactionRepresentation().getTimeCommitted();\n         long earliestSafeTimestamp = lastCommittedTimestamp - idReuseSafeZoneTime;\n-\n-        for ( KernelTransactionHandle txHandle : kernelTransactions.activeTransactions() )\n+for ( KernelTransactionHandle txHandle : kernelTransactions.activeTransactions() )\n         {\n             long commitTimestamp = txHandle.lastTransactionTimestampWhenStarted();\n-\n-            if ( commitTimestamp != TransactionIdStore.BASE_TX_COMMIT_TIMESTAMP &&\n-                 commitTimestamp < earliestSafeTimestamp )\n-            {\n+if ( commitTimestamp != TransactionIdStore.BASE_TX_COMMIT_TIMESTAMP && commitTimestamp < earliestSafeTimestamp )\n+{\n                 if ( txHandle.markForTermination( Status.Transaction.Outdated ) )\n                 {\n-                    log.info( \"Marking transaction for termination, \" +\n-                            \"invalidated due to an upcoming batch of changes being applied:\" +\n-                            \"\\n\" +\n-                            \"  Batch: firstCommittedTxId:\" + first.transactionId() +\n-                            \", firstCommittedTimestamp:\" + informativeTimestamp( firstCommittedTimestamp ) +\n-                            \", lastCommittedTxId:\" + last.transactionId() +\n-                            \", lastCommittedTimestamp:\" + informativeTimestamp( lastCommittedTimestamp ) +\n-                            \", batchTimeRange:\" + informativeDuration( lastCommittedTimestamp - firstCommittedTimestamp ) +\n-                            \", earliestSafeTimestamp:\" + informativeTimestamp( earliestSafeTimestamp ) +\n-                            \", safeZoneDuration:\" + informativeDuration( idReuseSafeZoneTime ) +\n-                            \"\\n\" +\n-                            \"  Transaction: lastCommittedTimestamp:\" +\n-                            informativeTimestamp( txHandle.lastTransactionTimestampWhenStarted() ) +\n-                            \", lastCommittedTxId:\" + txHandle.lastTransactionIdWhenStarted() +\n-                            \", localStartTimestamp:\" + informativeTimestamp( txHandle.startTime() ) );\n-                }\n+                    log.info( \"Marking transaction for termination, \" + \"invalidated due to an upcoming batch of changes being applied:\" + \"\\n\" + \"  Batch: firstCommittedTxId:\" + first.transactionId() + \", firstCommittedTimestamp:\" + informativeTimestamp( firstCommittedTimestamp ) + \", lastCommittedTxId:\" + last.transactionId() + \", lastCommittedTimestamp:\" + informativeTimestamp( lastCommittedTimestamp ) + \", batchTimeRange:\" + informativeDuration( lastCommittedTimestamp - firstCommittedTimestamp ) + \", earliestSafeTimestamp:\" + informativeTimestamp( earliestSafeTimestamp ) + \", safeZoneDuration:\" + informativeDuration( idReuseSafeZoneTime ) + \"\\n\" + \"  Transaction: lastCommittedTimestamp:\" + informativeTimestamp( txHandle.lastTransactionTimestampWhenStarted() ) + \", lastCommittedTxId:\" + txHandle.lastTransactionIdWhenStarted() + \", localStartTimestamp:\" + informativeTimestamp( txHandle.startTime() ) );\n+    }\n             }\n         }\n     }\n@@ -162,4 +144,4 @@ class TransactionBatchCommitter implements TransactionQueue.Applier\n     {\n         return time( timestamp ) + \"/\" + timestamp;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
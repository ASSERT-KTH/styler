{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1752",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1752/LogPruneStrategyFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1752/LogPruneStrategyFactory.java\nindex 783e29b46fe..aef8f1be284 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1752/LogPruneStrategyFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1752/LogPruneStrategyFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.pruning;\n \n import java.time.Clock;\n@@ -32,75 +33,75 @@ import static org.neo4j.kernel.impl.transaction.log.pruning.ThresholdConfigParse\n \n public class LogPruneStrategyFactory\n {\n-    private static final LogPruneStrategy NO_PRUNING = new LogPruneStrategy()\n+  private static final LogPruneStrategy NO_PRUNING = new LogPruneStrategy()\n+  {\n+    @Override\n+    public LongStream findLogVersionsToDelete(long upToLogVersion)\n     {\n-        @Override\n-        public LongStream findLogVersionsToDelete( long upToLogVersion )\n-        {\n-            // Never delete anything.\n-            return LongStream.empty();\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"NO_PRUNING\";\n-        }\n-    };\n+      // Never delete anything.\n+      return LongStream.empty();\n+    }\n \n-    public LogPruneStrategyFactory()\n+    @Override\n+    public String toString()\n     {\n+      return \"NO_PRUNING\";\n     }\n+  };\n \n-    /**\n-     * Parses a configuration value for log specifying log pruning. It has one of these forms:\n-     * <ul>\n-     *   <li>all</li>\n-     *   <li>[number][unit] [type]</li>\n-     * </ul>\n-     * For example:\n-     * <ul>\n-     *   <li>100M size - For keeping last 100 megabytes of log data</li>\n-     *   <li>20 pcs - For keeping last 20 non-empty log files</li>\n-     *   <li>7 days - For keeping last 7 days worth of log data</li>\n-     *   <li>1k hours - For keeping last 1000 hours worth of log data</li>\n-     * </ul>\n-     */\n-    LogPruneStrategy strategyFromConfigValue( FileSystemAbstraction fileSystem, LogFiles logFiles, Clock clock, String configValue )\n-    {\n-        ThresholdConfigValue value = parse( configValue );\n+  public LogPruneStrategyFactory()\n+  {\n+  }\n \n-        if ( value == ThresholdConfigValue.NO_PRUNING )\n-        {\n-            return NO_PRUNING;\n-        }\n+  /**\n+   * Parses a configuration value for log specifying log pruning. It has one of these forms:\n+   * <ul>\n+   *   <li>all</li>\n+   *   <li>[number][unit] [type]</li>\n+   * </ul>\n+   * For example:\n+   * <ul>\n+   *   <li>100M size - For keeping last 100 megabytes of log data</li>\n+   *   <li>20 pcs - For keeping last 20 non-empty log files</li>\n+   *   <li>7 days - For keeping last 7 days worth of log data</li>\n+   *   <li>1k hours - For keeping last 1000 hours worth of log data</li>\n+   * </ul>\n+   */\n+  LogPruneStrategy strategyFromConfigValue(FileSystemAbstraction fileSystem, LogFiles logFiles, Clock clock, String configValue)\n+  {\n+    ThresholdConfigValue value = parse(configValue);\n \n-        Threshold thresholdToUse = getThresholdByType( fileSystem, clock, value, configValue );\n-        return new ThresholdBasedPruneStrategy( fileSystem, logFiles, thresholdToUse );\n+    if (value == ThresholdConfigValue.NO_PRUNING)\n+    {\n+      return NO_PRUNING;\n     }\n \n-    // visible for testing\n-    static Threshold getThresholdByType( FileSystemAbstraction fileSystem, Clock clock, ThresholdConfigValue value,\n-            String originalConfigValue )\n-    {\n-        long thresholdValue = value.value;\n+    Threshold thresholdToUse = getThresholdByType(fileSystem, clock, value, configValue);\n+    return new ThresholdBasedPruneStrategy(fileSystem, logFiles, thresholdToUse);\n+  }\n \n-        switch ( value.type )\n-        {\n-            case \"files\":\n-                return new FileCountThreshold( thresholdValue );\n-            case \"size\":\n-                return new FileSizeThreshold( fileSystem, thresholdValue );\n-            case \"txs\":\n-            case \"entries\": // txs and entries are synonyms\n-                return new EntryCountThreshold( thresholdValue );\n-            case \"hours\":\n-                return new EntryTimespanThreshold( clock, HOURS, thresholdValue );\n-            case \"days\":\n-                return new EntryTimespanThreshold( clock, DAYS, thresholdValue );\n-            default:\n-                throw new IllegalArgumentException( \"Invalid log pruning configuration value '\" + originalConfigValue +\n-                        \"'. Invalid type '\" + value.type + \"', valid are files, size, txs, entries, hours, days.\" );\n-        }\n+  // visible for testing\n+  static Threshold getThresholdByType(FileSystemAbstraction fileSystem, Clock clock, ThresholdConfigValue value,\n+                                      String originalConfigValue)\n+  {\n+    long thresholdValue = value.value;\n+\n+    switch (value.type)\n+    {\n+      case \"files\":\n+        return new FileCountThreshold(thresholdValue);\n+      case \"size\":\n+        return new FileSizeThreshold(fileSystem, thresholdValue);\n+      case \"txs\":\n+      case \"entries\": // txs and entries are synonyms\n+        return new EntryCountThreshold(thresholdValue);\n+      case \"hours\":\n+        return new EntryTimespanThreshold(clock, HOURS, thresholdValue);\n+      case \"days\":\n+        return new EntryTimespanThreshold(clock, DAYS, thresholdValue);\n+      default:\n+        throw new IllegalArgumentException(\"Invalid log pruning configuration value '\" + originalConfigValue +\n+            \"'. Invalid type '\" + value.type + \"', valid are files, size, txs, entries, hours, days.\");\n     }\n+  }\n }\n",
            "diff_size": 87
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
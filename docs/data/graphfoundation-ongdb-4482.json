{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4482",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4482/IndexDefinitionRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4482/IndexDefinitionRepresentation.java\nindex 6f3bbdb3e24..cee9850236a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4482/IndexDefinitionRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4482/IndexDefinitionRepresentation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.repr;\n \n import java.util.function.Function;\n@@ -29,39 +30,39 @@ import static org.neo4j.helpers.collection.Iterables.map;\n \n public class IndexDefinitionRepresentation extends MappingRepresentation\n {\n-    private final IndexDefinition indexDefinition;\n-    private final IndexPopulationProgress indexPopulationProgress;\n-    private final Schema.IndexState indexState;\n+  private final IndexDefinition indexDefinition;\n+  private final IndexPopulationProgress indexPopulationProgress;\n+  private final Schema.IndexState indexState;\n \n-    public IndexDefinitionRepresentation( IndexDefinition indexDefinition )\n-    {\n-        // Online state will mean progress is ignored\n-        this( indexDefinition, Schema.IndexState.ONLINE, IndexPopulationProgress.DONE );\n-    }\n+  public IndexDefinitionRepresentation(IndexDefinition indexDefinition)\n+  {\n+    // Online state will mean progress is ignored\n+    this(indexDefinition, Schema.IndexState.ONLINE, IndexPopulationProgress.DONE);\n+  }\n \n-    public IndexDefinitionRepresentation( IndexDefinition indexDefinition, Schema.IndexState indexState,\n-            IndexPopulationProgress indexPopulationProgress )\n-    {\n-        super( RepresentationType.INDEX_DEFINITION );\n-        this.indexDefinition = indexDefinition;\n-        this.indexPopulationProgress = indexPopulationProgress;\n-        this.indexState = indexState;\n-    }\n+  public IndexDefinitionRepresentation(IndexDefinition indexDefinition, Schema.IndexState indexState,\n+                                       IndexPopulationProgress indexPopulationProgress)\n+  {\n+    super(RepresentationType.INDEX_DEFINITION);\n+    this.indexDefinition = indexDefinition;\n+    this.indexPopulationProgress = indexPopulationProgress;\n+    this.indexState = indexState;\n+  }\n \n-    @Override\n-    protected void serialize( MappingSerializer serializer )\n+  @Override\n+  protected void serialize(MappingSerializer serializer)\n+  {\n+    serializer.putString(\"label\", indexDefinition.getLabel().name());\n+    Function<String, Representation> converter = ValueRepresentation::string;\n+    Iterable<Representation> propertyKeyRepresentations = map(converter, indexDefinition.getPropertyKeys());\n+    serializer.putList(\"property_keys\", new ListRepresentation(RepresentationType.STRING,\n+        propertyKeyRepresentations));\n+    // Only print state and progress if progress is a valid value and not yet online\n+    if (indexState == Schema.IndexState.POPULATING)\n     {\n-        serializer.putString( \"label\", indexDefinition.getLabel().name() );\n-        Function<String,Representation> converter = ValueRepresentation::string;\n-        Iterable<Representation> propertyKeyRepresentations = map( converter, indexDefinition.getPropertyKeys() );\n-        serializer.putList( \"property_keys\", new ListRepresentation( RepresentationType.STRING,\n-                propertyKeyRepresentations ) );\n-        // Only print state and progress if progress is a valid value and not yet online\n-        if ( indexState == Schema.IndexState.POPULATING )\n-        {\n-            serializer.putString( \"state\", indexState.name() );\n-            serializer.putString( \"population_progress\", String.format( \"%1.0f%%\",\n-                    indexPopulationProgress.getCompletedPercentage() ) );\n-        }\n+      serializer.putString(\"state\", indexState.name());\n+      serializer.putString(\"population_progress\", String.format(\"%1.0f%%\",\n+          indexPopulationProgress.getCompletedPercentage()));\n     }\n+  }\n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4482/IndexDefinitionRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4482/IndexDefinitionRepresentation.java\nindex 6f3bbdb3e24..1f62f7ce6df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4482/IndexDefinitionRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4482/IndexDefinitionRepresentation.java\n@@ -56,12 +56,12 @@ public class IndexDefinitionRepresentation extends MappingRepresentation\n         Iterable<Representation> propertyKeyRepresentations = map( converter, indexDefinition.getPropertyKeys() );\n         serializer.putList( \"property_keys\", new ListRepresentation( RepresentationType.STRING,\n                 propertyKeyRepresentations ) );\n-        // Only print state and progress if progress is a valid value and not yet online\n+    // Only print state and progress if progress is a valid value and not yet online\n         if ( indexState == Schema.IndexState.POPULATING )\n         {\n             serializer.putString( \"state\", indexState.name() );\n             serializer.putString( \"population_progress\", String.format( \"%1.0f%%\",\n                     indexPopulationProgress.getCompletedPercentage() ) );\n-        }\n     }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "409",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "55",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "82",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/409/Pwd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/409/Pwd.java\nindex 789c4385290..1a70ea0f37d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/409/Pwd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/409/Pwd.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.kernel.apps;\n \n import java.rmi.RemoteException;\n@@ -34,58 +35,56 @@ import org.neo4j.shell.ShellException;\n  * Mimics the POSIX application with the same name, i.e. prints the current\n  * working directory \"walked by\" the \"cd\" application.\n  */\n-@Service.Implementation( App.class )\n+@Service.Implementation(App.class)\n public class Pwd extends TransactionProvidingApp\n {\n-    @Override\n-    public String getDescription()\n+  @Override\n+  public String getDescription()\n+  {\n+    return \"Prints path to current node or relationship\";\n+  }\n+\n+  @Override\n+  protected Continuation exec(AppCommandParser parser, Session session,\n+                              Output out) throws RemoteException\n+  {\n+    String current = null;\n+    try\n+    {\n+      current = getDisplayName(getServer(), session, getCurrent(session), false);\n+    } catch (ShellException e)\n     {\n-        return \"Prints path to current node or relationship\";\n+      current = getDisplayNameForNonExistent();\n     }\n+    out.println(\"Current is \" + current);\n \n-    @Override\n-    protected Continuation exec( AppCommandParser parser, Session session,\n-        Output out ) throws RemoteException\n+    String path = stringifyPath(Cd.readCurrentWorkingDir(session), session) + current;\n+    if (path.length() > 0)\n     {\n-        String current = null;\n-        try\n-        {\n-            current = getDisplayName( getServer(), session, getCurrent( session ), false );\n-        }\n-        catch ( ShellException e )\n-        {\n-            current = getDisplayNameForNonExistent();\n-        }\n-        out.println( \"Current is \" + current );\n-\n-        String path = stringifyPath( Cd.readCurrentWorkingDir( session ), session ) + current;\n-        if ( path.length() > 0 )\n-        {\n-            out.println( path );\n-        }\n-        return Continuation.INPUT_COMPLETE;\n+      out.println(path);\n     }\n+    return Continuation.INPUT_COMPLETE;\n+  }\n \n-    private String stringifyPath( List<TypedId> pathIds, Session session )\n+  private String stringifyPath(List<TypedId> pathIds, Session session)\n+  {\n+    if (pathIds.isEmpty())\n+    {\n+      return \"\";\n+    }\n+    StringBuilder path = new StringBuilder();\n+    for (TypedId id : pathIds)\n     {\n-        if ( pathIds.isEmpty() )\n-        {\n-            return \"\";\n-        }\n-        StringBuilder path = new StringBuilder();\n-        for ( TypedId id : pathIds )\n-        {\n-            String displayName;\n-            try\n-            {\n-                displayName = getDisplayName( getServer(), session, id, false );\n-            }\n-            catch ( ShellException e )\n-            {\n-                displayName = getDisplayNameForNonExistent();\n-            }\n-            path.append( displayName ).append( \"-->\" );\n-        }\n-        return path.toString();\n+      String displayName;\n+      try\n+      {\n+        displayName = getDisplayName(getServer(), session, id, false);\n+      } catch (ShellException e)\n+      {\n+        displayName = getDisplayNameForNonExistent();\n+      }\n+      path.append(displayName).append(\"-->\");\n     }\n+    return path.toString();\n+  }\n }\n",
            "diff_size": 70
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/409/Pwd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/409/Pwd.java\nindex 789c4385290..507082a4a58 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/409/Pwd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/409/Pwd.java\n@@ -44,9 +44,8 @@ public class Pwd extends TransactionProvidingApp\n     }\n \n     @Override\n-    protected Continuation exec( AppCommandParser parser, Session session,\n-        Output out ) throws RemoteException\n-    {\n+    protected Continuation exec( AppCommandParser parser, Session session, Output out ) throws RemoteException\n+{\n         String current = null;\n         try\n         {\n@@ -57,13 +56,13 @@ public class Pwd extends TransactionProvidingApp\n             current = getDisplayNameForNonExistent();\n         }\n         out.println( \"Current is \" + current );\n-\n-        String path = stringifyPath( Cd.readCurrentWorkingDir( session ), session ) + current;\n+String path = stringifyPath( Cd.readCurrentWorkingDir( session ), session ) + current;\n         if ( path.length() > 0 )\n         {\n             out.println( path );\n         }\n-        return Continuation.INPUT_COMPLETE;\n+\n+return Continuation.INPUT_COMPLETE;\n     }\n \n     private String stringifyPath( List<TypedId> pathIds, Session session )\n@@ -72,7 +71,8 @@ public class Pwd extends TransactionProvidingApp\n         {\n             return \"\";\n         }\n-        StringBuilder path = new StringBuilder();\n+\n+StringBuilder path = new StringBuilder();\n         for ( TypedId id : pathIds )\n         {\n             String displayName;\n@@ -86,6 +86,7 @@ public class Pwd extends TransactionProvidingApp\n             }\n             path.append( displayName ).append( \"-->\" );\n         }\n-        return path.toString();\n+\n+return path.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1619",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "123",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1619/PropertyReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1619/PropertyReader.java\nindex 6f8a8d10399..a44997553fa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1619/PropertyReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1619/PropertyReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checking.full;\n \n import java.util.ArrayList;\n@@ -41,132 +42,131 @@ import static org.neo4j.kernel.impl.store.record.RecordLoad.FORCE;\n \n class PropertyReader implements PropertyAccessor\n {\n-    private final PropertyStore propertyStore;\n-    private final NodeStore nodeStore;\n-\n-    PropertyReader( StoreAccess storeAccess )\n+  private final PropertyStore propertyStore;\n+  private final NodeStore nodeStore;\n+\n+  PropertyReader(StoreAccess storeAccess)\n+  {\n+    this.propertyStore = storeAccess.getRawNeoStores().getPropertyStore();\n+    this.nodeStore = storeAccess.getRawNeoStores().getNodeStore();\n+  }\n+\n+  Collection<PropertyRecord> getPropertyRecordChain(long firstPropertyRecordId) throws CircularPropertyRecordChainException\n+  {\n+    List<PropertyRecord> records = new ArrayList<>();\n+    visitPropertyRecordChain(firstPropertyRecordId, record ->\n+    {\n+      records.add(record);\n+      return false; // please continue\n+    });\n+    return records;\n+  }\n+\n+  List<PropertyBlock> propertyBlocks(Collection<PropertyRecord> records)\n+  {\n+    List<PropertyBlock> propertyBlocks = new ArrayList<>();\n+    for (PropertyRecord record : records)\n     {\n-        this.propertyStore = storeAccess.getRawNeoStores().getPropertyStore();\n-        this.nodeStore = storeAccess.getRawNeoStores().getNodeStore();\n+      for (PropertyBlock block : record)\n+      {\n+        propertyBlocks.add(block);\n+      }\n     }\n+    return propertyBlocks;\n+  }\n \n-    Collection<PropertyRecord> getPropertyRecordChain( long firstPropertyRecordId ) throws CircularPropertyRecordChainException\n+  private boolean visitPropertyRecordChain(long firstPropertyRecordId, Visitor<PropertyRecord, RuntimeException> visitor)\n+      throws CircularPropertyRecordChainException\n+  {\n+    if (Record.NO_NEXT_PROPERTY.is(firstPropertyRecordId))\n     {\n-        List<PropertyRecord> records = new ArrayList<>();\n-        visitPropertyRecordChain( firstPropertyRecordId, record ->\n-        {\n-            records.add( record );\n-            return false; // please continue\n-        } );\n-        return records;\n+      return false;\n     }\n \n-    List<PropertyBlock> propertyBlocks( Collection<PropertyRecord> records )\n+    PrimitiveLongSet visitedPropertyRecordIds = Primitive.longSet(8);\n+    visitedPropertyRecordIds.add(firstPropertyRecordId);\n+    long nextProp = firstPropertyRecordId;\n+    while (!Record.NO_NEXT_PROPERTY.is(nextProp))\n     {\n-        List<PropertyBlock> propertyBlocks = new ArrayList<>();\n-        for ( PropertyRecord record : records )\n-        {\n-            for ( PropertyBlock block : record )\n-            {\n-                propertyBlocks.add( block );\n-            }\n-        }\n-        return propertyBlocks;\n+      PropertyRecord propRecord = propertyStore.getRecord(nextProp, propertyStore.newRecord(), FORCE);\n+      nextProp = propRecord.getNextProp();\n+      if (!Record.NO_NEXT_PROPERTY.is(nextProp) && !visitedPropertyRecordIds.add(nextProp))\n+      {\n+        throw new CircularPropertyRecordChainException(propRecord);\n+      }\n+      if (visitor.visit(propRecord))\n+      {\n+        return true;\n+      }\n     }\n-\n-    private boolean visitPropertyRecordChain( long firstPropertyRecordId, Visitor<PropertyRecord,RuntimeException> visitor )\n-            throws CircularPropertyRecordChainException\n+    return false;\n+  }\n+\n+  public Value propertyValue(PropertyBlock block)\n+  {\n+    return block.getType().value(block, propertyStore);\n+  }\n+\n+  @Override\n+  public Value getPropertyValue(long nodeId, int propertyKeyId)\n+  {\n+    NodeRecord nodeRecord = nodeStore.newRecord();\n+    if (nodeStore.getRecord(nodeId, nodeRecord, FORCE).inUse())\n     {\n-        if ( Record.NO_NEXT_PROPERTY.is( firstPropertyRecordId ) )\n-        {\n-            return false;\n-        }\n-\n-        PrimitiveLongSet visitedPropertyRecordIds = Primitive.longSet( 8 );\n-        visitedPropertyRecordIds.add( firstPropertyRecordId );\n-        long nextProp = firstPropertyRecordId;\n-        while ( !Record.NO_NEXT_PROPERTY.is( nextProp ) )\n+      SpecificValueVisitor visitor = new SpecificValueVisitor(propertyKeyId);\n+      try\n+      {\n+        if (visitPropertyRecordChain(nodeRecord.getNextProp(), visitor))\n         {\n-            PropertyRecord propRecord = propertyStore.getRecord( nextProp, propertyStore.newRecord(), FORCE );\n-            nextProp = propRecord.getNextProp();\n-            if ( !Record.NO_NEXT_PROPERTY.is( nextProp ) && !visitedPropertyRecordIds.add( nextProp ) )\n-            {\n-                throw new CircularPropertyRecordChainException( propRecord );\n-            }\n-            if ( visitor.visit( propRecord ) )\n-            {\n-                return true;\n-            }\n+          return visitor.foundPropertyValue;\n         }\n-        return false;\n+      } catch (CircularPropertyRecordChainException e)\n+      {\n+        // If we discover a circular reference and still haven't found the property then we won't find it.\n+        // There are other places where this circular reference will be logged as an inconsistency,\n+        // so simply catch this exception here and let this method return NO_VALUE below.\n+      }\n     }\n+    return Values.NO_VALUE;\n+  }\n+\n+  private class SpecificValueVisitor implements Visitor<PropertyRecord, RuntimeException>\n+  {\n+    private final int propertyKeyId;\n+    private Value foundPropertyValue;\n \n-    public Value propertyValue( PropertyBlock block )\n+    SpecificValueVisitor(int propertyKeyId)\n     {\n-        return block.getType().value( block, propertyStore );\n+      this.propertyKeyId = propertyKeyId;\n     }\n \n     @Override\n-    public Value getPropertyValue( long nodeId, int propertyKeyId )\n+    public boolean visit(PropertyRecord element) throws RuntimeException\n     {\n-        NodeRecord nodeRecord = nodeStore.newRecord();\n-        if ( nodeStore.getRecord( nodeId, nodeRecord, FORCE ).inUse() )\n+      for (PropertyBlock block : element)\n+      {\n+        if (block.getKeyIndexId() == propertyKeyId)\n         {\n-            SpecificValueVisitor visitor = new SpecificValueVisitor( propertyKeyId );\n-            try\n-            {\n-                if ( visitPropertyRecordChain( nodeRecord.getNextProp(), visitor ) )\n-                {\n-                    return visitor.foundPropertyValue;\n-                }\n-            }\n-            catch ( CircularPropertyRecordChainException e )\n-            {\n-                // If we discover a circular reference and still haven't found the property then we won't find it.\n-                // There are other places where this circular reference will be logged as an inconsistency,\n-                // so simply catch this exception here and let this method return NO_VALUE below.\n-            }\n+          foundPropertyValue = propertyValue(block);\n+          return true;\n         }\n-        return Values.NO_VALUE;\n+      }\n+      return false;\n     }\n+  }\n \n-    private class SpecificValueVisitor implements Visitor<PropertyRecord,RuntimeException>\n-    {\n-        private final int propertyKeyId;\n-        private Value foundPropertyValue;\n-\n-        SpecificValueVisitor( int propertyKeyId )\n-        {\n-            this.propertyKeyId = propertyKeyId;\n-        }\n+  static class CircularPropertyRecordChainException extends Exception\n+  {\n+    private final PropertyRecord propertyRecord;\n \n-        @Override\n-        public boolean visit( PropertyRecord element ) throws RuntimeException\n-        {\n-            for ( PropertyBlock block : element )\n-            {\n-                if ( block.getKeyIndexId() == propertyKeyId )\n-                {\n-                    foundPropertyValue = propertyValue( block );\n-                    return true;\n-                }\n-            }\n-            return false;\n-        }\n+    CircularPropertyRecordChainException(PropertyRecord propertyRecord)\n+    {\n+      this.propertyRecord = propertyRecord;\n     }\n \n-    static class CircularPropertyRecordChainException extends Exception\n+    PropertyRecord propertyRecordClosingTheCircle()\n     {\n-        private final PropertyRecord propertyRecord;\n-\n-        CircularPropertyRecordChainException( PropertyRecord propertyRecord )\n-        {\n-            this.propertyRecord = propertyRecord;\n-        }\n-\n-        PropertyRecord propertyRecordClosingTheCircle()\n-        {\n-            return propertyRecord;\n-        }\n+      return propertyRecord;\n     }\n+  }\n }\n",
            "diff_size": 159
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1619/PropertyReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1619/PropertyReader.java\nindex 6f8a8d10399..5d5fa5be401 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1619/PropertyReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1619/PropertyReader.java\n@@ -74,9 +74,8 @@ class PropertyReader implements PropertyAccessor\n         return propertyBlocks;\n     }\n \n-    private boolean visitPropertyRecordChain( long firstPropertyRecordId, Visitor<PropertyRecord,RuntimeException> visitor )\n-            throws CircularPropertyRecordChainException\n-    {\n+    private boolean visitPropertyRecordChain( long firstPropertyRecordId, Visitor<PropertyRecord,RuntimeException> visitor ) throws CircularPropertyRecordChainException\n+{\n         if ( Record.NO_NEXT_PROPERTY.is( firstPropertyRecordId ) )\n         {\n             return false;\n@@ -93,7 +92,8 @@ class PropertyReader implements PropertyAccessor\n             {\n                 throw new CircularPropertyRecordChainException( propRecord );\n             }\n-            if ( visitor.visit( propRecord ) )\n+\n+if ( visitor.visit( propRecord ) )\n             {\n                 return true;\n             }\n@@ -169,4 +169,4 @@ class PropertyReader implements PropertyAccessor\n             return propertyRecord;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
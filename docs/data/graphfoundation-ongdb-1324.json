{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1324",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "83",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "94",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "188",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "200",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "212",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "237",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "248",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1324/CommunityEditionModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1324/CommunityEditionModule.java\nindex c8dd9f21e48..5f804a93af3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1324/CommunityEditionModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1324/CommunityEditionModule.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.factory;\n \n import java.io.File;\n@@ -77,223 +78,217 @@ import org.neo4j.udc.UsageData;\n  */\n public class CommunityEditionModule extends EditionModule\n {\n-    public static final String COMMUNITY_SECURITY_MODULE_ID = \"community-security-module\";\n+  public static final String COMMUNITY_SECURITY_MODULE_ID = \"community-security-module\";\n \n-    public CommunityEditionModule( PlatformModule platformModule )\n-    {\n-        org.neo4j.kernel.impl.util.Dependencies dependencies = platformModule.dependencies;\n-        Config config = platformModule.config;\n-        LogService logging = platformModule.logging;\n-        FileSystemAbstraction fileSystem = platformModule.fileSystem;\n-        PageCache pageCache = platformModule.pageCache;\n-        File storeDir = platformModule.storeDir;\n-        DataSourceManager dataSourceManager = platformModule.dataSourceManager;\n-        LifeSupport life = platformModule.life;\n-        life.add( platformModule.dataSourceManager );\n+  public CommunityEditionModule(PlatformModule platformModule)\n+  {\n+    org.neo4j.kernel.impl.util.Dependencies dependencies = platformModule.dependencies;\n+    Config config = platformModule.config;\n+    LogService logging = platformModule.logging;\n+    FileSystemAbstraction fileSystem = platformModule.fileSystem;\n+    PageCache pageCache = platformModule.pageCache;\n+    File storeDir = platformModule.storeDir;\n+    DataSourceManager dataSourceManager = platformModule.dataSourceManager;\n+    LifeSupport life = platformModule.life;\n+    life.add(platformModule.dataSourceManager);\n \n-        watcherService = createFileSystemWatcherService( fileSystem, storeDir, logging,\n-                platformModule.jobScheduler, config, fileWatcherFileNameFilter() );\n-        dependencies.satisfyDependencies( watcherService );\n-        life.add( watcherService );\n+    watcherService = createFileSystemWatcherService(fileSystem, storeDir, logging,\n+        platformModule.jobScheduler, config, fileWatcherFileNameFilter());\n+    dependencies.satisfyDependencies(watcherService);\n+    life.add(watcherService);\n \n-        this.accessCapability = config.get( GraphDatabaseSettings.read_only ) ? new ReadOnly() : new CanWrite();\n+    this.accessCapability = config.get(GraphDatabaseSettings.read_only) ? new ReadOnly() : new CanWrite();\n \n-        GraphDatabaseFacade graphDatabaseFacade = platformModule.graphDatabaseFacade;\n+    GraphDatabaseFacade graphDatabaseFacade = platformModule.graphDatabaseFacade;\n \n-        dependencies.satisfyDependency( SslPolicyLoader.create( config, logging.getInternalLogProvider() ) ); // for bolt and web server\n+    dependencies.satisfyDependency(SslPolicyLoader.create(config, logging.getInternalLogProvider())); // for bolt and web server\n \n-        lockManager = dependencies.satisfyDependency( createLockManager( config, platformModule.clock, logging ) );\n-        statementLocksFactory = createStatementLocksFactory( lockManager, config, logging );\n+    lockManager = dependencies.satisfyDependency(createLockManager(config, platformModule.clock, logging));\n+    statementLocksFactory = createStatementLocksFactory(lockManager, config, logging);\n \n-        idTypeConfigurationProvider = createIdTypeConfigurationProvider( config );\n-        eligibleForIdReuse = IdReuseEligibility.ALWAYS;\n+    idTypeConfigurationProvider = createIdTypeConfigurationProvider(config);\n+    eligibleForIdReuse = IdReuseEligibility.ALWAYS;\n \n-        createIdComponents( platformModule, dependencies, createIdGeneratorFactory( fileSystem, idTypeConfigurationProvider ) );\n-        dependencies.satisfyDependency( idGeneratorFactory );\n-        dependencies.satisfyDependency( idController );\n+    createIdComponents(platformModule, dependencies, createIdGeneratorFactory(fileSystem, idTypeConfigurationProvider));\n+    dependencies.satisfyDependency(idGeneratorFactory);\n+    dependencies.satisfyDependency(idController);\n \n-        propertyKeyTokenHolder = life.add( dependencies.satisfyDependency( new DelegatingPropertyKeyTokenHolder(\n-                createPropertyKeyCreator( config, dataSourceManager, idGeneratorFactory ) ) ) );\n-        labelTokenHolder = life.add( dependencies.satisfyDependency(new DelegatingLabelTokenHolder( createLabelIdCreator( config,\n-                dataSourceManager, idGeneratorFactory ) ) ));\n-        relationshipTypeTokenHolder = life.add( dependencies.satisfyDependency(new DelegatingRelationshipTypeTokenHolder(\n-                createRelationshipTypeCreator( config, dataSourceManager, idGeneratorFactory ) ) ));\n+    propertyKeyTokenHolder = life.add(dependencies.satisfyDependency(new DelegatingPropertyKeyTokenHolder(\n+        createPropertyKeyCreator(config, dataSourceManager, idGeneratorFactory))));\n+    labelTokenHolder = life.add(dependencies.satisfyDependency(new DelegatingLabelTokenHolder(createLabelIdCreator(config,\n+        dataSourceManager, idGeneratorFactory))));\n+    relationshipTypeTokenHolder = life.add(dependencies.satisfyDependency(new DelegatingRelationshipTypeTokenHolder(\n+        createRelationshipTypeCreator(config, dataSourceManager, idGeneratorFactory))));\n \n-        dependencies.satisfyDependency(\n-                createKernelData( fileSystem, pageCache, storeDir, config, graphDatabaseFacade, life ) );\n+    dependencies.satisfyDependency(\n+        createKernelData(fileSystem, pageCache, storeDir, config, graphDatabaseFacade, life));\n \n-        commitProcessFactory = new CommunityCommitProcessFactory();\n+    commitProcessFactory = new CommunityCommitProcessFactory();\n \n-        headerInformationFactory = createHeaderInformationFactory();\n+    headerInformationFactory = createHeaderInformationFactory();\n \n-        schemaWriteGuard = createSchemaWriteGuard();\n+    schemaWriteGuard = createSchemaWriteGuard();\n \n-        transactionStartTimeout = config.get( GraphDatabaseSettings.transaction_start_timeout ).toMillis();\n+    transactionStartTimeout = config.get(GraphDatabaseSettings.transaction_start_timeout).toMillis();\n \n-        constraintSemantics = createSchemaRuleVerifier();\n+    constraintSemantics = createSchemaRuleVerifier();\n \n-        coreAPIAvailabilityGuard = new CoreAPIAvailabilityGuard( platformModule.availabilityGuard, transactionStartTimeout );\n+    coreAPIAvailabilityGuard = new CoreAPIAvailabilityGuard(platformModule.availabilityGuard, transactionStartTimeout);\n \n-        ioLimiter = IOLimiter.unlimited();\n+    ioLimiter = IOLimiter.unlimited();\n \n-        registerRecovery( platformModule.databaseInfo, life, dependencies );\n+    registerRecovery(platformModule.databaseInfo, life, dependencies);\n \n-        publishEditionInfo( dependencies.resolveDependency( UsageData.class ), platformModule.databaseInfo, config );\n+    publishEditionInfo(dependencies.resolveDependency(UsageData.class), platformModule.databaseInfo, config);\n \n-        dependencies.satisfyDependency( createSessionTracker() );\n-    }\n+    dependencies.satisfyDependency(createSessionTracker());\n+  }\n \n-    protected Predicate<String> fileWatcherFileNameFilter()\n-    {\n-        return communityFileWatcherFileNameFilter();\n-    }\n+  protected Predicate<String> fileWatcherFileNameFilter()\n+  {\n+    return communityFileWatcherFileNameFilter();\n+  }\n \n-    static Predicate<String> communityFileWatcherFileNameFilter()\n-    {\n-        return Predicates.any(\n-                fileName -> fileName.startsWith( TransactionLogFiles.DEFAULT_NAME ),\n-                fileName -> fileName.startsWith( IndexConfigStore.INDEX_DB_FILE_NAME )\n-        );\n-    }\n+  static Predicate<String> communityFileWatcherFileNameFilter()\n+  {\n+    return Predicates.any(\n+        fileName -> fileName.startsWith(TransactionLogFiles.DEFAULT_NAME),\n+        fileName -> fileName.startsWith(IndexConfigStore.INDEX_DB_FILE_NAME)\n+    );\n+  }\n \n-    protected IdTypeConfigurationProvider createIdTypeConfigurationProvider( Config config )\n-    {\n-        return new CommunityIdTypeConfigurationProvider();\n-    }\n+  protected IdTypeConfigurationProvider createIdTypeConfigurationProvider(Config config)\n+  {\n+    return new CommunityIdTypeConfigurationProvider();\n+  }\n \n-    protected ConstraintSemantics createSchemaRuleVerifier()\n-    {\n-        return new StandardConstraintSemantics();\n-    }\n+  protected ConstraintSemantics createSchemaRuleVerifier()\n+  {\n+    return new StandardConstraintSemantics();\n+  }\n \n-    protected StatementLocksFactory createStatementLocksFactory( Locks locks, Config config, LogService logService )\n-    {\n-        return new SimpleStatementLocksFactory( locks );\n-    }\n+  protected StatementLocksFactory createStatementLocksFactory(Locks locks, Config config, LogService logService)\n+  {\n+    return new SimpleStatementLocksFactory(locks);\n+  }\n \n-    protected SchemaWriteGuard createSchemaWriteGuard()\n-    {\n-        return SchemaWriteGuard.ALLOW_ALL_WRITES;\n-    }\n+  protected SchemaWriteGuard createSchemaWriteGuard()\n+  {\n+    return SchemaWriteGuard.ALLOW_ALL_WRITES;\n+  }\n \n-    private TokenCreator createRelationshipTypeCreator( Config config, DataSourceManager dataSourceManager,\n-            IdGeneratorFactory idGeneratorFactory )\n+  private TokenCreator createRelationshipTypeCreator(Config config, DataSourceManager dataSourceManager,\n+                                                     IdGeneratorFactory idGeneratorFactory)\n+  {\n+    if (config.get(GraphDatabaseSettings.read_only))\n     {\n-        if ( config.get( GraphDatabaseSettings.read_only ) )\n-        {\n-            return new ReadOnlyTokenCreator();\n-        }\n-        else\n-        {\n-            return new DefaultRelationshipTypeCreator( dataSourceManager, idGeneratorFactory );\n-        }\n-    }\n-\n-    private TokenCreator createPropertyKeyCreator( Config config, DataSourceManager dataSourceManager,\n-            IdGeneratorFactory idGeneratorFactory )\n+      return new ReadOnlyTokenCreator();\n+    } else\n     {\n-        if ( config.get( GraphDatabaseSettings.read_only ) )\n-        {\n-            return new ReadOnlyTokenCreator();\n-        }\n-        else\n-        {\n-            return new DefaultPropertyTokenCreator( dataSourceManager, idGeneratorFactory );\n-        }\n+      return new DefaultRelationshipTypeCreator(dataSourceManager, idGeneratorFactory);\n     }\n+  }\n \n-    private TokenCreator createLabelIdCreator( Config config, DataSourceManager dataSourceManager,\n-            IdGeneratorFactory idGeneratorFactory )\n+  private TokenCreator createPropertyKeyCreator(Config config, DataSourceManager dataSourceManager,\n+                                                IdGeneratorFactory idGeneratorFactory)\n+  {\n+    if (config.get(GraphDatabaseSettings.read_only))\n     {\n-        if ( config.get( GraphDatabaseSettings.read_only ) )\n-        {\n-            return new ReadOnlyTokenCreator();\n-        }\n-        else\n-        {\n-            return new DefaultLabelIdCreator( dataSourceManager, idGeneratorFactory );\n-        }\n-    }\n-\n-    private KernelData createKernelData( FileSystemAbstraction fileSystem, PageCache pageCache, File storeDir,\n-            Config config, GraphDatabaseAPI graphAPI, LifeSupport life )\n+      return new ReadOnlyTokenCreator();\n+    } else\n     {\n-        return life.add( new DefaultKernelData( fileSystem, pageCache, storeDir, config, graphAPI ) );\n+      return new DefaultPropertyTokenCreator(dataSourceManager, idGeneratorFactory);\n     }\n+  }\n \n-    protected IdGeneratorFactory createIdGeneratorFactory( FileSystemAbstraction fs,\n-            IdTypeConfigurationProvider idTypeConfigurationProvider )\n+  private TokenCreator createLabelIdCreator(Config config, DataSourceManager dataSourceManager,\n+                                            IdGeneratorFactory idGeneratorFactory)\n+  {\n+    if (config.get(GraphDatabaseSettings.read_only))\n     {\n-        return new DefaultIdGeneratorFactory( fs, idTypeConfigurationProvider );\n-    }\n-\n-    public static Locks createLockManager( Config config, Clock clock, LogService logging )\n+      return new ReadOnlyTokenCreator();\n+    } else\n     {\n-        String key = config.get( GraphDatabaseFacadeFactory.Configuration.lock_manager );\n-        for ( Locks.Factory candidate : Service.load( Locks.Factory.class ) )\n-        {\n-            String candidateId = candidate.getKeys().iterator().next();\n-            if ( key.equals( candidateId ) )\n-            {\n-                return candidate.newInstance( config, clock, ResourceTypes.values() );\n-            }\n-            else if ( key.equals( \"\" ) )\n-            {\n-                logging.getInternalLog( CommunityEditionModule.class )\n-                        .info( \"No locking implementation specified, defaulting to '\" + candidateId + \"'\" );\n-                return candidate.newInstance( config, clock, ResourceTypes.values() );\n-            }\n-        }\n-\n-        if ( key.equals( \"community\" ) )\n-        {\n-            return new CommunityLockManger( config, clock );\n-        }\n-        else if ( key.equals( \"\" ) )\n-        {\n-            logging.getInternalLog( CommunityEditionModule.class )\n-                    .info( \"No locking implementation specified, defaulting to 'community'\" );\n-            return new CommunityLockManger( config, clock );\n-        }\n-\n-        throw new IllegalArgumentException( \"No lock manager found with the name '\" + key + \"'.\" );\n+      return new DefaultLabelIdCreator(dataSourceManager, idGeneratorFactory);\n     }\n-\n-    protected TransactionHeaderInformationFactory createHeaderInformationFactory()\n+  }\n+\n+  private KernelData createKernelData(FileSystemAbstraction fileSystem, PageCache pageCache, File storeDir,\n+                                      Config config, GraphDatabaseAPI graphAPI, LifeSupport life)\n+  {\n+    return life.add(new DefaultKernelData(fileSystem, pageCache, storeDir, config, graphAPI));\n+  }\n+\n+  protected IdGeneratorFactory createIdGeneratorFactory(FileSystemAbstraction fs,\n+                                                        IdTypeConfigurationProvider idTypeConfigurationProvider)\n+  {\n+    return new DefaultIdGeneratorFactory(fs, idTypeConfigurationProvider);\n+  }\n+\n+  public static Locks createLockManager(Config config, Clock clock, LogService logging)\n+  {\n+    String key = config.get(GraphDatabaseFacadeFactory.Configuration.lock_manager);\n+    for (Locks.Factory candidate : Service.load(Locks.Factory.class))\n     {\n-        return TransactionHeaderInformationFactory.DEFAULT;\n+      String candidateId = candidate.getKeys().iterator().next();\n+      if (key.equals(candidateId))\n+      {\n+        return candidate.newInstance(config, clock, ResourceTypes.values());\n+      } else if (key.equals(\"\"))\n+      {\n+        logging.getInternalLog(CommunityEditionModule.class)\n+            .info(\"No locking implementation specified, defaulting to '\" + candidateId + \"'\");\n+        return candidate.newInstance(config, clock, ResourceTypes.values());\n+      }\n     }\n \n-    private void registerRecovery( final DatabaseInfo databaseInfo, LifeSupport life,\n-            final DependencyResolver dependencyResolver )\n+    if (key.equals(\"community\"))\n     {\n-        life.addLifecycleListener( ( instance, from, to ) ->\n-        {\n-            if ( instance instanceof DatabaseAvailability && to.equals( LifecycleStatus.STARTED ) )\n-            {\n-                doAfterRecoveryAndStartup( databaseInfo, dependencyResolver );\n-            }\n-        } );\n-    }\n-\n-    @Override\n-    public void registerEditionSpecificProcedures( Procedures procedures ) throws KernelException\n+      return new CommunityLockManger(config, clock);\n+    } else if (key.equals(\"\"))\n     {\n-        // Community does not add any extra procedures\n+      logging.getInternalLog(CommunityEditionModule.class)\n+          .info(\"No locking implementation specified, defaulting to 'community'\");\n+      return new CommunityLockManger(config, clock);\n     }\n \n-    @Override\n-    public void setupSecurityModule( PlatformModule platformModule, Procedures procedures )\n+    throw new IllegalArgumentException(\"No lock manager found with the name '\" + key + \"'.\");\n+  }\n+\n+  protected TransactionHeaderInformationFactory createHeaderInformationFactory()\n+  {\n+    return TransactionHeaderInformationFactory.DEFAULT;\n+  }\n+\n+  private void registerRecovery(final DatabaseInfo databaseInfo, LifeSupport life,\n+                                final DependencyResolver dependencyResolver)\n+  {\n+    life.addLifecycleListener((instance, from, to) ->\n+    {\n+      if (instance instanceof DatabaseAvailability && to.equals(LifecycleStatus.STARTED))\n+      {\n+        doAfterRecoveryAndStartup(databaseInfo, dependencyResolver);\n+      }\n+    });\n+  }\n+\n+  @Override\n+  public void registerEditionSpecificProcedures(Procedures procedures) throws KernelException\n+  {\n+    // Community does not add any extra procedures\n+  }\n+\n+  @Override\n+  public void setupSecurityModule(PlatformModule platformModule, Procedures procedures)\n+  {\n+    if (platformModule.config.get(GraphDatabaseSettings.auth_enabled))\n+    {\n+      setupSecurityModule(platformModule, platformModule.logging.getUserLog(getClass()),\n+          procedures, COMMUNITY_SECURITY_MODULE_ID);\n+    } else\n     {\n-        if ( platformModule.config.get( GraphDatabaseSettings.auth_enabled ) )\n-        {\n-            setupSecurityModule( platformModule, platformModule.logging.getUserLog( getClass() ),\n-                    procedures, COMMUNITY_SECURITY_MODULE_ID );\n-        }\n-        else\n-        {\n-            platformModule.life.add( platformModule.dependencies.satisfyDependency( AuthManager.NO_AUTH ) );\n-            platformModule.life.add( platformModule.dependencies.satisfyDependency( UserManagerSupplier.NO_AUTH ) );\n-        }\n+      platformModule.life.add(platformModule.dependencies.satisfyDependency(AuthManager.NO_AUTH));\n+      platformModule.life.add(platformModule.dependencies.satisfyDependency(UserManagerSupplier.NO_AUTH));\n     }\n+  }\n }\n",
            "diff_size": 241
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 198).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1324/CommunityEditionModule.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1324/CommunityEditionModule.java\nindex c8dd9f21e48..cc4b01ce700 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1324/CommunityEditionModule.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1324/CommunityEditionModule.java\n@@ -90,39 +90,29 @@ public class CommunityEditionModule extends EditionModule\n         DataSourceManager dataSourceManager = platformModule.dataSourceManager;\n         LifeSupport life = platformModule.life;\n         life.add( platformModule.dataSourceManager );\n-\n-        watcherService = createFileSystemWatcherService( fileSystem, storeDir, logging,\n+watcherService = createFileSystemWatcherService( fileSystem, storeDir, logging,\n                 platformModule.jobScheduler, config, fileWatcherFileNameFilter() );\n-        dependencies.satisfyDependencies( watcherService );\n+dependencies.satisfyDependencies( watcherService );\n         life.add( watcherService );\n-\n-        this.accessCapability = config.get( GraphDatabaseSettings.read_only ) ? new ReadOnly() : new CanWrite();\n-\n-        GraphDatabaseFacade graphDatabaseFacade = platformModule.graphDatabaseFacade;\n+this.accessCapability = config.get( GraphDatabaseSettings.read_only ) ? new ReadOnly() : new CanWrite();\n+GraphDatabaseFacade graphDatabaseFacade = platformModule.graphDatabaseFacade;\n \n         dependencies.satisfyDependency( SslPolicyLoader.create( config, logging.getInternalLogProvider() ) ); // for bolt and web server\n \n         lockManager = dependencies.satisfyDependency( createLockManager( config, platformModule.clock, logging ) );\n         statementLocksFactory = createStatementLocksFactory( lockManager, config, logging );\n-\n-        idTypeConfigurationProvider = createIdTypeConfigurationProvider( config );\n+idTypeConfigurationProvider = createIdTypeConfigurationProvider( config );\n         eligibleForIdReuse = IdReuseEligibility.ALWAYS;\n \n         createIdComponents( platformModule, dependencies, createIdGeneratorFactory( fileSystem, idTypeConfigurationProvider ) );\n         dependencies.satisfyDependency( idGeneratorFactory );\n         dependencies.satisfyDependency( idController );\n-\n-        propertyKeyTokenHolder = life.add( dependencies.satisfyDependency( new DelegatingPropertyKeyTokenHolder(\n-                createPropertyKeyCreator( config, dataSourceManager, idGeneratorFactory ) ) ) );\n-        labelTokenHolder = life.add( dependencies.satisfyDependency(new DelegatingLabelTokenHolder( createLabelIdCreator( config,\n+propertyKeyTokenHolder = life.add( dependencies.satisfyDependency( new DelegatingPropertyKeyTokenHolder( createPropertyKeyCreator( config, dataSourceManager, idGeneratorFactory ) ) ) );\n+labelTokenHolder = life.add( dependencies.satisfyDependency(new DelegatingLabelTokenHolder( createLabelIdCreator( config,\n                 dataSourceManager, idGeneratorFactory ) ) ));\n-        relationshipTypeTokenHolder = life.add( dependencies.satisfyDependency(new DelegatingRelationshipTypeTokenHolder(\n-                createRelationshipTypeCreator( config, dataSourceManager, idGeneratorFactory ) ) ));\n-\n-        dependencies.satisfyDependency(\n-                createKernelData( fileSystem, pageCache, storeDir, config, graphDatabaseFacade, life ) );\n-\n-        commitProcessFactory = new CommunityCommitProcessFactory();\n+relationshipTypeTokenHolder = life.add( dependencies.satisfyDependency(new DelegatingRelationshipTypeTokenHolder( createRelationshipTypeCreator( config, dataSourceManager, idGeneratorFactory ) ) ));\n+dependencies.satisfyDependency( createKernelData( fileSystem, pageCache, storeDir, config, graphDatabaseFacade, life ) );\n+commitProcessFactory = new CommunityCommitProcessFactory();\n \n         headerInformationFactory = createHeaderInformationFactory();\n \n@@ -133,14 +123,12 @@ public class CommunityEditionModule extends EditionModule\n         constraintSemantics = createSchemaRuleVerifier();\n \n         coreAPIAvailabilityGuard = new CoreAPIAvailabilityGuard( platformModule.availabilityGuard, transactionStartTimeout );\n-\n-        ioLimiter = IOLimiter.unlimited();\n+ioLimiter = IOLimiter.unlimited();\n \n         registerRecovery( platformModule.databaseInfo, life, dependencies );\n \n         publishEditionInfo( dependencies.resolveDependency( UsageData.class ), platformModule.databaseInfo, config );\n-\n-        dependencies.satisfyDependency( createSessionTracker() );\n+dependencies.satisfyDependency( createSessionTracker() );\n     }\n \n     protected Predicate<String> fileWatcherFileNameFilter()\n@@ -150,10 +138,7 @@ public class CommunityEditionModule extends EditionModule\n \n     static Predicate<String> communityFileWatcherFileNameFilter()\n     {\n-        return Predicates.any(\n-                fileName -> fileName.startsWith( TransactionLogFiles.DEFAULT_NAME ),\n-                fileName -> fileName.startsWith( IndexConfigStore.INDEX_DB_FILE_NAME )\n-        );\n+        return Predicates.any( fileName -> fileName.startsWith( TransactionLogFiles.DEFAULT_NAME ), fileName -> fileName.startsWith( IndexConfigStore.INDEX_DB_FILE_NAME ) );\n     }\n \n     protected IdTypeConfigurationProvider createIdTypeConfigurationProvider( Config config )\n@@ -239,9 +224,8 @@ public class CommunityEditionModule extends EditionModule\n             }\n             else if ( key.equals( \"\" ) )\n             {\n-                logging.getInternalLog( CommunityEditionModule.class )\n-                        .info( \"No locking implementation specified, defaulting to '\" + candidateId + \"'\" );\n-                return candidate.newInstance( config, clock, ResourceTypes.values() );\n+                logging.getInternalLog( CommunityEditionModule.class ).info( \"No locking implementation specified, defaulting to '\" + candidateId + \"'\" );\n+return candidate.newInstance( config, clock, ResourceTypes.values() );\n             }\n         }\n \n@@ -251,9 +235,8 @@ public class CommunityEditionModule extends EditionModule\n         }\n         else if ( key.equals( \"\" ) )\n         {\n-            logging.getInternalLog( CommunityEditionModule.class )\n-                    .info( \"No locking implementation specified, defaulting to 'community'\" );\n-            return new CommunityLockManger( config, clock );\n+            logging.getInternalLog( CommunityEditionModule.class ).info( \"No locking implementation specified, defaulting to 'community'\" );\n+return new CommunityLockManger( config, clock );\n         }\n \n         throw new IllegalArgumentException( \"No lock manager found with the name '\" + key + \"'.\" );\n@@ -264,8 +247,7 @@ public class CommunityEditionModule extends EditionModule\n         return TransactionHeaderInformationFactory.DEFAULT;\n     }\n \n-    private void registerRecovery( final DatabaseInfo databaseInfo, LifeSupport life,\n-            final DependencyResolver dependencyResolver )\n+    private void registerRecovery( final DatabaseInfo databaseInfo, LifeSupport life, final DependencyResolver dependencyResolver )\n     {\n         life.addLifecycleListener( ( instance, from, to ) ->\n         {\n@@ -296,4 +278,4 @@ public class CommunityEditionModule extends EditionModule\n             platformModule.life.add( platformModule.dependencies.satisfyDependency( UserManagerSupplier.NO_AUTH ) );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 37
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
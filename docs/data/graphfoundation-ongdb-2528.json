{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2528",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2528/ConfigValues.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2528/ConfigValues.java\nindex 4c36ae5745d..102cb17eb79 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2528/ConfigValues.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2528/ConfigValues.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.configuration;\n \n import java.util.List;\n@@ -31,23 +32,23 @@ import static org.neo4j.helpers.collection.Pair.pair;\n \n public class ConfigValues implements Function<String, String>\n {\n-    private final Map<String, String> raw;\n-\n-    public ConfigValues( Map<String,String> raw )\n-    {\n-        this.raw = raw;\n-    }\n-\n-    @Override\n-    public String apply( String s )\n-    {\n-        return raw.get( s );\n-    }\n-\n-    public List<Pair<String,String>> rawConfiguration()\n-    {\n-        return raw.entrySet().stream()\n-                .map( e -> pair( e.getKey(), e.getValue() ) )\n-                .collect( toList() );\n-    }\n+  private final Map<String, String> raw;\n+\n+  public ConfigValues(Map<String, String> raw)\n+  {\n+    this.raw = raw;\n+  }\n+\n+  @Override\n+  public String apply(String s)\n+  {\n+    return raw.get(s);\n+  }\n+\n+  public List<Pair<String, String>> rawConfiguration()\n+  {\n+    return raw.entrySet().stream()\n+        .map(e -> pair(e.getKey(), e.getValue()))\n+        .collect(toList());\n+  }\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2528/ConfigValues.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2528/ConfigValues.java\nindex 4c36ae5745d..f1adf8b7d29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2528/ConfigValues.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2528/ConfigValues.java\n@@ -31,7 +31,7 @@ import static org.neo4j.helpers.collection.Pair.pair;\n \n public class ConfigValues implements Function<String, String>\n {\n-    private final Map<String, String> raw;\n+    private final Map<String,String> raw;\n \n     public ConfigValues( Map<String,String> raw )\n     {\n@@ -46,8 +46,6 @@ public class ConfigValues implements Function<String, String>\n \n     public List<Pair<String,String>> rawConfiguration()\n     {\n-        return raw.entrySet().stream()\n-                .map( e -> pair( e.getKey(), e.getValue() ) )\n-                .collect( toList() );\n+        return raw.entrySet().stream().map( e -> pair( e.getKey(), e.getValue() ) ).collect( toList() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
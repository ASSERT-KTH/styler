{
    "project_name": "Angel-ML-angel",
    "error_id": "557",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/557/PartitionGetParamWithIds.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/557/PartitionGetParamWithIds.java\nindex 0176b0abf8e..4cd87c62266 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/557/PartitionGetParamWithIds.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/557/PartitionGetParamWithIds.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.node2vec.params;\n \n import com.tencent.angel.PartitionKey;\n@@ -27,7 +28,7 @@ public class PartitionGetParamWithIds extends PartitionGetParam {\n   protected int endIdx;\n \n   public PartitionGetParamWithIds(int matrixId, PartitionKey partKey, long[] keyIds, int startIdx,\n-      int endIdx) {\n+                                  int endIdx) {\n     super(matrixId, partKey);\n     this.keyIds = keyIds;\n     this.startIdx = startIdx;\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/557/PartitionGetParamWithIds.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/557/PartitionGetParamWithIds.java\nindex 0176b0abf8e..3ba9d1725cf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/557/PartitionGetParamWithIds.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/557/PartitionGetParamWithIds.java\n@@ -26,8 +26,7 @@ public class PartitionGetParamWithIds extends PartitionGetParam {\n   protected int startIdx;\n   protected int endIdx;\n \n-  public PartitionGetParamWithIds(int matrixId, PartitionKey partKey, long[] keyIds, int startIdx,\n-      int endIdx) {\n+  public PartitionGetParamWithIds(int matrixId, PartitionKey partKey, long[] keyIds, int startIdx, int endIdx) {\n     super(matrixId, partKey);\n     this.keyIds = keyIds;\n     this.startIdx = startIdx;\n@@ -72,4 +71,4 @@ public class PartitionGetParamWithIds extends PartitionGetParam {\n     int length = endIdx - startIdx;\n     return len + 4 + 8 * length;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/557/PartitionGetParamWithIds.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/557/PartitionGetParamWithIds.java\nindex 0176b0abf8e..5d63b9146f7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/557/PartitionGetParamWithIds.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/557/PartitionGetParamWithIds.java\n@@ -23,11 +23,12 @@ import io.netty.buffer.ByteBuf;\n public class PartitionGetParamWithIds extends PartitionGetParam {\n \n   protected long[] keyIds;\n+\n   protected int startIdx;\n+\n   protected int endIdx;\n \n-  public PartitionGetParamWithIds(int matrixId, PartitionKey partKey, long[] keyIds, int startIdx,\n-      int endIdx) {\n+  public PartitionGetParamWithIds(int matrixId, PartitionKey partKey, long[] keyIds, int startIdx, int endIdx) {\n     super(matrixId, partKey);\n     this.keyIds = keyIds;\n     this.startIdx = startIdx;\n@@ -45,9 +46,9 @@ public class PartitionGetParamWithIds extends PartitionGetParam {\n   @Override\n   public void serialize(ByteBuf buf) {\n     super.serialize(buf);\n+\n     int length = endIdx - startIdx;\n     buf.writeInt(length);\n-\n     for (int i = startIdx; i < endIdx; i++) {\n       buf.writeLong(keyIds[i]);\n     }\n@@ -56,11 +57,11 @@ public class PartitionGetParamWithIds extends PartitionGetParam {\n   @Override\n   public void deserialize(ByteBuf buf) {\n     super.deserialize(buf);\n+\n     int length = buf.readInt();\n     this.keyIds = new long[length];\n     this.startIdx = 0;\n     this.endIdx = length;\n-\n     for (int i = startIdx; i < endIdx; i++) {\n       keyIds[i] = buf.readLong();\n     }\n@@ -72,4 +73,4 @@ public class PartitionGetParamWithIds extends PartitionGetParam {\n     int length = endIdx - startIdx;\n     return len + 4 + 8 * length;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2118",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "73",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "120",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "140",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "156",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2118/BoltResponseMessageWriterV3.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2118/BoltResponseMessageWriterV3.java\nindex cae4bf3bf77..d0ebf0b0181 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2118/BoltResponseMessageWriterV3.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2118/BoltResponseMessageWriterV3.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.v3.messaging;\n \n import java.io.IOException;\n@@ -54,32 +55,32 @@ public class BoltResponseMessageWriterV3 implements BoltResponseMessageWriter\n     private final PackOutput output;\n     private final Neo4jPack.Packer packer;\n     private final Log log;\n-    private final Map<Byte,ResponseMessageEncoder<ResponseMessage>> encoders;\n+    private final Map<Byte, ResponseMessageEncoder<ResponseMessage>> encoders;\n     private RecordMessageEncoder recordMessageEncoder = new RecordMessageEncoder();\n \n-    public BoltResponseMessageWriterV3( PackProvider packerProvider, PackOutput output, LogService logService )\n+    public BoltResponseMessageWriterV3(PackProvider packerProvider, PackOutput output, LogService logService)\n     {\n         this.output = output;\n-        this.packer = packerProvider.newPacker( output );\n-        this.log = logService.getInternalLog( getClass() );\n+        this.packer = packerProvider.newPacker(output);\n+        this.log = logService.getInternalLog(getClass());\n         this.encoders = registerEncoders();\n     }\n \n-    private Map<Byte,ResponseMessageEncoder<ResponseMessage>> registerEncoders()\n+    private Map<Byte, ResponseMessageEncoder<ResponseMessage>> registerEncoders()\n     {\n-        Map<Byte,ResponseMessageEncoder<?>> encoders = new HashMap<>();\n-        encoders.put( SuccessMessage.SIGNATURE, new SuccessMessageEncoder() );\n-        encoders.put( RecordMessage.SIGNATURE, recordMessageEncoder );\n-        encoders.put( IgnoredMessage.SIGNATURE, new IgnoredMessageEncoder() );\n-        encoders.put( FailureMessage.SIGNATURE, new FailureMessageEncoder( log ) );\n-        return (Map)encoders;\n+        Map<Byte, ResponseMessageEncoder<?>> encoders = new HashMap<>();\n+        encoders.put(SuccessMessage.SIGNATURE, new SuccessMessageEncoder());\n+        encoders.put(RecordMessage.SIGNATURE, recordMessageEncoder);\n+        encoders.put(IgnoredMessage.SIGNATURE, new IgnoredMessageEncoder());\n+        encoders.put(FailureMessage.SIGNATURE, new FailureMessageEncoder(log));\n+        return (Map) encoders;\n     }\n \n     @Override\n-    public void write( ResponseMessage message ) throws IOException\n+    public void write(ResponseMessage message) throws IOException\n     {\n-        packCompleteMessageOrFail( message );\n-        if ( message instanceof FatalFailureMessage )\n+        packCompleteMessageOrFail(message);\n+        if (message instanceof FatalFailureMessage)\n         {\n             flush();\n         }\n@@ -101,63 +102,60 @@ public class BoltResponseMessageWriterV3 implements BoltResponseMessageWriter\n         return this.log;\n     }\n \n-    private void packCompleteMessageOrFail( ResponseMessage message ) throws IOException\n+    private void packCompleteMessageOrFail(ResponseMessage message) throws IOException\n     {\n         boolean packingFailed = true;\n         output.beginMessage();\n         try\n         {\n-            ResponseMessageEncoder<ResponseMessage> encoder = encoders.get( message.signature() );\n-            if ( encoder == null )\n+            ResponseMessageEncoder<ResponseMessage> encoder = encoders.get(message.signature());\n+            if (encoder == null)\n             {\n-                throw new BoltIOException( Status.Request.InvalidFormat,\n-                        format( \"Message %s is not supported in this protocol version.\", message ) );\n+                throw new BoltIOException(Status.Request.InvalidFormat,\n+                  format(\"Message %s is not supported in this protocol version.\", message));\n             }\n-            encoder.encode( packer, message );\n+            encoder.encode(packer, message);\n             packingFailed = false;\n             output.messageSucceeded();\n-        }\n-        catch ( Throwable error )\n+        } catch (Throwable error)\n         {\n-            if ( packingFailed )\n+            if (packingFailed)\n             {\n                 // packing failed, there might be some half-written data in the output buffer right now\n                 // notify output about the failure so that it cleans up the buffer\n                 output.messageFailed();\n-                log.error( \"Failed to write full %s message because: %s\", message, error.getMessage() );\n+                log.error(\"Failed to write full %s message because: %s\", message, error.getMessage());\n             }\n             throw error;\n         }\n     }\n \n     @Override\n-    public void beginRecord( int numberOfFields ) throws IOException\n+    public void beginRecord(int numberOfFields) throws IOException\n     {\n         output.beginMessage();\n         try\n         {\n-            recordMessageEncoder.beginRecord( packer, numberOfFields );\n-        }\n-        catch ( Throwable error )\n+            recordMessageEncoder.beginRecord(packer, numberOfFields);\n+        } catch (Throwable error)\n         {\n             // packing failed, there might be some half-written data in the output buffer right now\n             // notify output about the failure so that it cleans up the buffer\n             output.messageFailed();\n-            log.error( \"Failed to write new record because: %s\", error.getMessage() );\n+            log.error(\"Failed to write new record because: %s\", error.getMessage());\n             throw error;\n         }\n     }\n \n     @Override\n-    public void consumeField( AnyValue value ) throws IOException\n+    public void consumeField(AnyValue value) throws IOException\n     {\n         try\n         {\n-            recordMessageEncoder.onField( packer, value );\n-        }\n-        catch ( Throwable error )\n+            recordMessageEncoder.onField(packer, value);\n+        } catch (Throwable error)\n         {\n-            log.error( \"Failed to write value %s because: %s\", value, error.getMessage() );\n+            log.error(\"Failed to write value %s because: %s\", value, error.getMessage());\n             onError();\n             throw error;\n         }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
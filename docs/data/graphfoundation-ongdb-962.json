{
    "project_name": "graphfoundation-ongdb",
    "error_id": "962",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/962/CommunityCypherEngineProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/962/CommunityCypherEngineProvider.java\nindex 841eec9a881..739e42ba0ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/962/CommunityCypherEngineProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/962/CommunityCypherEngineProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.javacompat;\n \n import org.neo4j.cypher.internal.CommunityCompatibilityFactory;\n@@ -32,54 +33,54 @@ import org.neo4j.kernel.internal.GraphDatabaseAPI;\n import org.neo4j.kernel.monitoring.Monitors;\n import org.neo4j.logging.LogProvider;\n \n-@Service.Implementation( QueryEngineProvider.class )\n+@Service.Implementation(QueryEngineProvider.class)\n public class CommunityCypherEngineProvider extends QueryEngineProvider\n {\n-    public CommunityCypherEngineProvider()\n-    {\n-        super( \"cypher\" );\n-    }\n+  public CommunityCypherEngineProvider()\n+  {\n+    super(\"cypher\");\n+  }\n \n-    @Override\n-    protected int enginePriority()\n-    {\n-        return 42; // Lower means better. The enterprise version will have a lower number\n-    }\n+  @Override\n+  protected int enginePriority()\n+  {\n+    return 42; // Lower means better. The enterprise version will have a lower number\n+  }\n \n-    @Override\n-    protected QueryExecutionEngine createEngine( Dependencies deps, GraphDatabaseAPI graphAPI )\n-    {\n-        GraphDatabaseCypherService queryService = new GraphDatabaseCypherService( graphAPI );\n-        deps.satisfyDependency( queryService );\n+  @Override\n+  protected QueryExecutionEngine createEngine(Dependencies deps, GraphDatabaseAPI graphAPI)\n+  {\n+    GraphDatabaseCypherService queryService = new GraphDatabaseCypherService(graphAPI);\n+    deps.satisfyDependency(queryService);\n \n-        DependencyResolver resolver = graphAPI.getDependencyResolver();\n-        LogService logService = resolver.resolveDependency( LogService.class );\n-        Monitors monitors = resolver.resolveDependency( Monitors.class );\n-        Config config = resolver.resolveDependency( Config.class );\n-        LogProvider logProvider = logService.getInternalLogProvider();\n-        CommunityCompatibilityFactory compatibilityFactory =\n-                new CommunityCompatibilityFactory( queryService, monitors, logProvider );\n-        deps.satisfyDependencies( compatibilityFactory );\n-        return createEngine( queryService, config, logProvider, compatibilityFactory );\n-    }\n+    DependencyResolver resolver = graphAPI.getDependencyResolver();\n+    LogService logService = resolver.resolveDependency(LogService.class);\n+    Monitors monitors = resolver.resolveDependency(Monitors.class);\n+    Config config = resolver.resolveDependency(Config.class);\n+    LogProvider logProvider = logService.getInternalLogProvider();\n+    CommunityCompatibilityFactory compatibilityFactory =\n+        new CommunityCompatibilityFactory(queryService, monitors, logProvider);\n+    deps.satisfyDependencies(compatibilityFactory);\n+    return createEngine(queryService, config, logProvider, compatibilityFactory);\n+  }\n \n-    private QueryExecutionEngine createEngine( GraphDatabaseCypherService queryService, Config config,\n-            LogProvider logProvider, CommunityCompatibilityFactory compatibilityFactory )\n-    {\n-        return config.get( GraphDatabaseSettings.snapshot_query ) ?\n-               snapshotEngine( queryService, config, logProvider, compatibilityFactory ) :\n-               standardEngine( queryService, logProvider, compatibilityFactory );\n-    }\n+  private QueryExecutionEngine createEngine(GraphDatabaseCypherService queryService, Config config,\n+                                            LogProvider logProvider, CommunityCompatibilityFactory compatibilityFactory)\n+  {\n+    return config.get(GraphDatabaseSettings.snapshot_query) ?\n+        snapshotEngine(queryService, config, logProvider, compatibilityFactory) :\n+        standardEngine(queryService, logProvider, compatibilityFactory);\n+  }\n \n-    private SnapshotExecutionEngine snapshotEngine( GraphDatabaseCypherService queryService, Config config,\n-            LogProvider logProvider, CommunityCompatibilityFactory compatibilityFactory )\n-    {\n-        return new SnapshotExecutionEngine( queryService, config, logProvider, compatibilityFactory );\n-    }\n+  private SnapshotExecutionEngine snapshotEngine(GraphDatabaseCypherService queryService, Config config,\n+                                                 LogProvider logProvider, CommunityCompatibilityFactory compatibilityFactory)\n+  {\n+    return new SnapshotExecutionEngine(queryService, config, logProvider, compatibilityFactory);\n+  }\n \n-    private ExecutionEngine standardEngine( GraphDatabaseCypherService queryService, LogProvider logProvider,\n-            CommunityCompatibilityFactory compatibilityFactory )\n-    {\n-        return new ExecutionEngine( queryService, logProvider, compatibilityFactory );\n-    }\n+  private ExecutionEngine standardEngine(GraphDatabaseCypherService queryService, LogProvider logProvider,\n+                                         CommunityCompatibilityFactory compatibilityFactory)\n+  {\n+    return new ExecutionEngine(queryService, logProvider, compatibilityFactory);\n+  }\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 210).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/962/CommunityCypherEngineProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/962/CommunityCypherEngineProvider.java\nindex 841eec9a881..52d2766a3ee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/962/CommunityCypherEngineProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/962/CommunityCypherEngineProvider.java\n@@ -51,24 +51,20 @@ public class CommunityCypherEngineProvider extends QueryEngineProvider\n     {\n         GraphDatabaseCypherService queryService = new GraphDatabaseCypherService( graphAPI );\n         deps.satisfyDependency( queryService );\n-\n-        DependencyResolver resolver = graphAPI.getDependencyResolver();\n+DependencyResolver resolver = graphAPI.getDependencyResolver();\n         LogService logService = resolver.resolveDependency( LogService.class );\n         Monitors monitors = resolver.resolveDependency( Monitors.class );\n         Config config = resolver.resolveDependency( Config.class );\n         LogProvider logProvider = logService.getInternalLogProvider();\n-        CommunityCompatibilityFactory compatibilityFactory =\n-                new CommunityCompatibilityFactory( queryService, monitors, logProvider );\n-        deps.satisfyDependencies( compatibilityFactory );\n+        CommunityCompatibilityFactory compatibilityFactory = new CommunityCompatibilityFactory( queryService, monitors, logProvider );\n+deps.satisfyDependencies( compatibilityFactory );\n         return createEngine( queryService, config, logProvider, compatibilityFactory );\n     }\n \n     private QueryExecutionEngine createEngine( GraphDatabaseCypherService queryService, Config config,\n             LogProvider logProvider, CommunityCompatibilityFactory compatibilityFactory )\n     {\n-        return config.get( GraphDatabaseSettings.snapshot_query ) ?\n-               snapshotEngine( queryService, config, logProvider, compatibilityFactory ) :\n-               standardEngine( queryService, logProvider, compatibilityFactory );\n+        return config.get( GraphDatabaseSettings.snapshot_query ) ? snapshotEngine( queryService, config, logProvider, compatibilityFactory ) : standardEngine( queryService, logProvider, compatibilityFactory );\n     }\n \n     private SnapshotExecutionEngine snapshotEngine( GraphDatabaseCypherService queryService, Config config,\n@@ -82,4 +78,4 @@ public class CommunityCypherEngineProvider extends QueryEngineProvider\n     {\n         return new ExecutionEngine( queryService, logProvider, compatibilityFactory );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
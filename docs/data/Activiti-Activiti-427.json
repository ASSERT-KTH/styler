{
    "project_name": "Activiti-Activiti",
    "error_id": "427",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "error",
                "message": "'package' has more than 1 empty lines before.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "\n\npackage org.activiti.engine.impl.cmd;\n\nimport java.io.Serializable;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/427/GetTaskDataObjectCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/427/GetTaskDataObjectCmd.java\nindex 36f5edbac7f..54e826cf83d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/427/GetTaskDataObjectCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/427/GetTaskDataObjectCmd.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.cmd;\n \n import java.io.Serializable;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/427/GetTaskDataObjectCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/427/GetTaskDataObjectCmd.java\nindex 36f5edbac7f..8db3ba35b7a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/427/GetTaskDataObjectCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/427/GetTaskDataObjectCmd.java\n@@ -41,91 +41,91 @@ import com.fasterxml.jackson.databind.node.ObjectNode;\n \n public class GetTaskDataObjectCmd implements Command<DataObject>, Serializable {\n \n-  private static final long serialVersionUID = 1L;\n-  protected String taskId;\n-  protected String variableName;\n-  protected String locale;\n-  protected boolean withLocalizationFallback;\n-\n-  public GetTaskDataObjectCmd(String taskId, String variableName) {\n-    this.taskId = taskId;\n-    this.variableName = variableName;\n-  }\n-\n-  public GetTaskDataObjectCmd(String taskId, String variableName, String locale, boolean withLocalizationFallback) {\n-    this.taskId = taskId;\n-    this.variableName = variableName;\n-    this.locale = locale;\n-    this.withLocalizationFallback = withLocalizationFallback;\n-  }\n-\n-  public DataObject execute(CommandContext commandContext) {\n-    if (taskId == null) {\n-      throw new ActivitiIllegalArgumentException(\"taskId is null\");\n+    private static final long serialVersionUID = 1L;\n+    protected String taskId;\n+    protected String variableName;\n+    protected String locale;\n+    protected boolean withLocalizationFallback;\n+\n+    public GetTaskDataObjectCmd(String taskId, String variableName) {\n+        this.taskId = taskId;\n+        this.variableName = variableName;\n     }\n-    if (variableName == null) {\n-      throw new ActivitiIllegalArgumentException(\"variableName is null\");\n-    }\n-\n-    TaskEntity task = commandContext.getTaskEntityManager().findById(taskId);\n \n-    if (task == null) {\n-      throw new ActivitiObjectNotFoundException(\"task \" + taskId + \" doesn't exist\", Task.class);\n+    public GetTaskDataObjectCmd(String taskId, String variableName, String locale, boolean withLocalizationFallback) {\n+        this.taskId = taskId;\n+        this.variableName = variableName;\n+        this.locale = locale;\n+        this.withLocalizationFallback = withLocalizationFallback;\n     }\n \n-    DataObject dataObject = null;\n-    VariableInstance variableEntity = task.getVariableInstance(variableName, false);\n-\n-    String localizedName = null;\n-    String localizedDescription = null;\n-\n-    if (variableEntity != null) {\n-      ExecutionEntity executionEntity = commandContext.getExecutionEntityManager().findById(variableEntity.getExecutionId());\n-      while (!executionEntity.isScope()) {\n-        executionEntity = executionEntity.getParent();\n-      }\n-\n-      BpmnModel bpmnModel = ProcessDefinitionUtil.getBpmnModel(executionEntity.getProcessDefinitionId());\n-      ValuedDataObject foundDataObject = null;\n-      if (executionEntity.getParentId() == null) {\n-        for (ValuedDataObject dataObjectDefinition : bpmnModel.getMainProcess().getDataObjects()) {\n-          if (dataObjectDefinition.getName().equals(variableEntity.getName())) {\n-            foundDataObject = dataObjectDefinition;\n-            break;\n-          }\n+    public DataObject execute(CommandContext commandContext) {\n+        if (taskId == null) {\n+            throw new ActivitiIllegalArgumentException(\"taskId is null\");\n         }\n-      } else {\n-        SubProcess subProcess = (SubProcess) bpmnModel.getFlowElement(executionEntity.getActivityId());\n-        for (ValuedDataObject dataObjectDefinition : subProcess.getDataObjects()) {\n-          if (dataObjectDefinition.getName().equals(variableEntity.getName())) {\n-            foundDataObject = dataObjectDefinition;\n-            break;\n-          }\n+        if (variableName == null) {\n+            throw new ActivitiIllegalArgumentException(\"variableName is null\");\n         }\n-      }\n-\n-      if (locale != null && foundDataObject != null) {\n-        ObjectNode languageNode = Context.getLocalizationElementProperties(locale, foundDataObject.getId(),\n-            task.getProcessDefinitionId(), withLocalizationFallback);\n-\n-        if (languageNode != null) {\n-          JsonNode nameNode = languageNode.get(DynamicBpmnConstants.LOCALIZATION_NAME);\n-          if (nameNode != null) {\n-            localizedName = nameNode.asText();\n-          }\n-          JsonNode descriptionNode = languageNode.get(DynamicBpmnConstants.LOCALIZATION_DESCRIPTION);\n-          if (descriptionNode != null) {\n-            localizedDescription = descriptionNode.asText();\n-          }\n+\n+        TaskEntity task = commandContext.getTaskEntityManager().findById(taskId);\n+\n+        if (task == null) {\n+            throw new ActivitiObjectNotFoundException(\"task \" + taskId + \" doesn't exist\", Task.class);\n         }\n-      }\n \n-      if (foundDataObject != null) {\n-        dataObject = new DataObjectImpl(variableEntity.getName(), variableEntity.getValue(), foundDataObject.getDocumentation(),\n-            foundDataObject.getType(), localizedName, localizedDescription, foundDataObject.getId());\n-      }\n-    }\n+        DataObject dataObject = null;\n+        VariableInstance variableEntity = task.getVariableInstance(variableName, false);\n+\n+        String localizedName = null;\n+        String localizedDescription = null;\n+\n+        if (variableEntity != null) {\n+            ExecutionEntity executionEntity = commandContext.getExecutionEntityManager().findById(variableEntity.getExecutionId());\n+            while (!executionEntity.isScope()) {\n+                executionEntity = executionEntity.getParent();\n+            }\n+\n+            BpmnModel bpmnModel = ProcessDefinitionUtil.getBpmnModel(executionEntity.getProcessDefinitionId());\n+            ValuedDataObject foundDataObject = null;\n+            if (executionEntity.getParentId() == null) {\n+                for (ValuedDataObject dataObjectDefinition : bpmnModel.getMainProcess().getDataObjects()) {\n+                    if (dataObjectDefinition.getName().equals(variableEntity.getName())) {\n+                        foundDataObject = dataObjectDefinition;\n+                        break;\n+                    }\n+                }\n+            } else {\n+                SubProcess subProcess = (SubProcess) bpmnModel.getFlowElement(executionEntity.getActivityId());\n+                for (ValuedDataObject dataObjectDefinition : subProcess.getDataObjects()) {\n+                    if (dataObjectDefinition.getName().equals(variableEntity.getName())) {\n+                        foundDataObject = dataObjectDefinition;\n+                        break;\n+                    }\n+                }\n+            }\n+\n+            if (locale != null && foundDataObject != null) {\n+                ObjectNode languageNode = Context.getLocalizationElementProperties(locale, foundDataObject.getId(),\n+                        task.getProcessDefinitionId(), withLocalizationFallback);\n+\n+                if (languageNode != null) {\n+                    JsonNode nameNode = languageNode.get(DynamicBpmnConstants.LOCALIZATION_NAME);\n+                    if (nameNode != null) {\n+                        localizedName = nameNode.asText();\n+                    }\n+                    JsonNode descriptionNode = languageNode.get(DynamicBpmnConstants.LOCALIZATION_DESCRIPTION);\n+                    if (descriptionNode != null) {\n+                        localizedDescription = descriptionNode.asText();\n+                    }\n+                }\n+            }\n+\n+            if (foundDataObject != null) {\n+                dataObject = new DataObjectImpl(variableEntity.getName(), variableEntity.getValue(), foundDataObject.getDocumentation(),\n+                        foundDataObject.getType(), localizedName, localizedDescription, foundDataObject.getId());\n+            }\n+        }\n \n-    return dataObject;\n-  }\n+        return dataObject;\n+    }\n }\n",
            "diff_size": 128
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/427/GetTaskDataObjectCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/naturalize/427/GetTaskDataObjectCmd.java\nindex 36f5edbac7f..6c922ae8e79 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/427/GetTaskDataObjectCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/naturalize/427/GetTaskDataObjectCmd.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.cmd;\n \n import java.io.Serializable;\n@@ -128,4 +127,4 @@ public class GetTaskDataObjectCmd implements Command<DataObject>, Serializable {\n \n     return dataObject;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "error",
                    "message": "'package' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/427/GetTaskDataObjectCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/427/GetTaskDataObjectCmd.java\nindex 36f5edbac7f..a4c1445432e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/427/GetTaskDataObjectCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/427/GetTaskDataObjectCmd.java\n@@ -18,7 +18,6 @@\n package org.activiti.engine.impl.cmd;\n \n import java.io.Serializable;\n-\n import org.activiti.bpmn.model.BpmnModel;\n import org.activiti.bpmn.model.SubProcess;\n import org.activiti.bpmn.model.ValuedDataObject;\n@@ -35,10 +34,10 @@ import org.activiti.engine.impl.persistence.entity.VariableInstance;\n import org.activiti.engine.impl.util.ProcessDefinitionUtil;\n import org.activiti.engine.runtime.DataObject;\n import org.activiti.engine.task.Task;\n-\n import com.fasterxml.jackson.databind.JsonNode;\n import com.fasterxml.jackson.databind.node.ObjectNode;\n \n+\n public class GetTaskDataObjectCmd implements Command<DataObject>, Serializable {\n \n   private static final long serialVersionUID = 1L;\n@@ -68,17 +67,15 @@ public class GetTaskDataObjectCmd implements Command<DataObject>, Serializable {\n     }\n \n     TaskEntity task = commandContext.getTaskEntityManager().findById(taskId);\n-\n     if (task == null) {\n-      throw new ActivitiObjectNotFoundException(\"task \" + taskId + \" doesn't exist\", Task.class);\n+      throw new ActivitiObjectNotFoundException(\"task \" + taskId + \" doesn't exist\",\n+                                                Task.class);\n     }\n \n     DataObject dataObject = null;\n     VariableInstance variableEntity = task.getVariableInstance(variableName, false);\n-\n     String localizedName = null;\n     String localizedDescription = null;\n-\n     if (variableEntity != null) {\n       ExecutionEntity executionEntity = commandContext.getExecutionEntityManager().findById(variableEntity.getExecutionId());\n       while (!executionEntity.isScope()) {\n@@ -103,29 +100,24 @@ public class GetTaskDataObjectCmd implements Command<DataObject>, Serializable {\n           }\n         }\n       }\n-\n       if (locale != null && foundDataObject != null) {\n-        ObjectNode languageNode = Context.getLocalizationElementProperties(locale, foundDataObject.getId(),\n-            task.getProcessDefinitionId(), withLocalizationFallback);\n-\n+        ObjectNode languageNode = Context.getLocalizationElementProperties(locale, foundDataObject.getId(), task.getProcessDefinitionId(), withLocalizationFallback);\n         if (languageNode != null) {\n           JsonNode nameNode = languageNode.get(DynamicBpmnConstants.LOCALIZATION_NAME);\n           if (nameNode != null) {\n             localizedName = nameNode.asText();\n           }\n+\n           JsonNode descriptionNode = languageNode.get(DynamicBpmnConstants.LOCALIZATION_DESCRIPTION);\n           if (descriptionNode != null) {\n             localizedDescription = descriptionNode.asText();\n           }\n         }\n       }\n-\n       if (foundDataObject != null) {\n-        dataObject = new DataObjectImpl(variableEntity.getName(), variableEntity.getValue(), foundDataObject.getDocumentation(),\n-            foundDataObject.getType(), localizedName, localizedDescription, foundDataObject.getId());\n+        dataObject = new DataObjectImpl(variableEntity.getName(), variableEntity.getValue(), foundDataObject.getDocumentation(), foundDataObject.getType(), localizedName, localizedDescription, foundDataObject.getId());\n       }\n     }\n-\n     return dataObject;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/427/GetTaskDataObjectCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/427/GetTaskDataObjectCmd.java\nindex 36f5edbac7f..54e826cf83d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/427/GetTaskDataObjectCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/427/GetTaskDataObjectCmd.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.cmd;\n \n import java.io.Serializable;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/427/GetTaskDataObjectCmd.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/427/GetTaskDataObjectCmd.java\nindex 36f5edbac7f..54e826cf83d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/427/GetTaskDataObjectCmd.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/427/GetTaskDataObjectCmd.java\n@@ -14,7 +14,6 @@\n  * limitations under the License.\n  */\n \n-\n package org.activiti.engine.impl.cmd;\n \n import java.io.Serializable;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
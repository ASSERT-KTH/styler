{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "209",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.admindistribution.entity.proxy;\n\nimport gov.hhs.fha.nhinc.admindistribution.AdminDistributionHelper;\nimport gov.hhs.fha.nhinc.admindistribution.entity.proxy.service.EntityAdminDistributionG0UnsecuredServicePortDescriptor;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\nindex 565851f3d5c..4cfdc7e23dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.entity.proxy;\n \n import gov.hhs.fha.nhinc.admindistribution.AdminDistributionHelper;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\nindex 565851f3d5c..35ccb373f76 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.entity.proxy;\n \n import gov.hhs.fha.nhinc.admindistribution.AdminDistributionHelper;\n@@ -43,82 +44,87 @@ import oasis.names.tc.emergency.edxl.de._1.EDXLDistribution;\n import org.apache.log4j.Logger;\n \n /**\n- *\n  * @author dunnek\n  */\n \n public class EntityAdminDistributionProxyWebServiceUnsecuredImpl {\n-    private static final Logger LOG = Logger.getLogger(EntityAdminDistributionProxyWebServiceUnsecuredImpl.class);\n+  private static final Logger LOG = Logger.getLogger(EntityAdminDistributionProxyWebServiceUnsecuredImpl.class);\n \n-    /**\n-     * @return instance of AdminDistributionHelper.\n-     */\n-    protected AdminDistributionHelper getHelper() {\n-        return new AdminDistributionHelper();\n-    }\n+  /**\n+   * @return instance of AdminDistributionHelper.\n+   */\n+  protected AdminDistributionHelper getHelper() {\n+    return new AdminDistributionHelper();\n+  }\n \n \n-    /**This method returns EntityAdminDistributionSecuredServicePortDescriptor based on gateway apiLevel.\n-     * @param apiLevel gateway apiLevel received (g0/g1).\n-     * @return instance of EntityAdminDistributionSecuredServicePortDescriptor based on gateway apiLevel.\n-     */\n-    public ServicePortDescriptor<AdministrativeDistributionPortType> getServicePortDescriptor(\n-            NhincConstants.GATEWAY_API_LEVEL apiLevel) {\n-        switch (apiLevel) {\n-        case LEVEL_g0:\n-            return new EntityAdminDistributionG0UnsecuredServicePortDescriptor();\n-        default:\n-            return new EntityAdminDistributionG1UnsecuredServicePortDescriptor();\n-        }\n+  /**\n+   * This method returns EntityAdminDistributionSecuredServicePortDescriptor based on gateway apiLevel.\n+   *\n+   * @param apiLevel gateway apiLevel received (g0/g1).\n+   * @return instance of EntityAdminDistributionSecuredServicePortDescriptor based on gateway apiLevel.\n+   */\n+  public ServicePortDescriptor<AdministrativeDistributionPortType> getServicePortDescriptor(\n+      NhincConstants.GATEWAY_API_LEVEL apiLevel) {\n+    switch (apiLevel) {\n+      case LEVEL_g0:\n+        return new EntityAdminDistributionG0UnsecuredServicePortDescriptor();\n+      default:\n+        return new EntityAdminDistributionG1UnsecuredServicePortDescriptor();\n     }\n+  }\n \n-    /** This method returns CXFClient to implement AdminDist Unsecured Service.\n-     * @param portDescriptor comprises of NameSpaceUri, WSDL File, Port, ServiceName  and WS_ADDRESSING_ACTION.\n-     * @param url target community url .\n-     * @param assertion Assertion received.\n-     * @return CXFClient to implement AdminDist Unsecured Service.\n-     */\n-    protected CONNECTClient<AdministrativeDistributionPortType> getCONNECTClientUnsecured(\n-            ServicePortDescriptor<AdministrativeDistributionPortType> portDescriptor, String url,\n-            AssertionType assertion) {\n-\n-        return CONNECTCXFClientFactory.getInstance().getCONNECTClientUnsecured(portDescriptor, url, assertion);\n-    }\n+  /**\n+   * This method returns CXFClient to implement AdminDist Unsecured Service.\n+   *\n+   * @param portDescriptor comprises of NameSpaceUri, WSDL File, Port, ServiceName  and WS_ADDRESSING_ACTION.\n+   * @param url            target community url .\n+   * @param assertion      Assertion received.\n+   * @return CXFClient to implement AdminDist Unsecured Service.\n+   */\n+  protected CONNECTClient<AdministrativeDistributionPortType> getCONNECTClientUnsecured(\n+      ServicePortDescriptor<AdministrativeDistributionPortType> portDescriptor, String url,\n+      AssertionType assertion) {\n+\n+    return CONNECTCXFClientFactory.getInstance().getCONNECTClientUnsecured(portDescriptor, url, assertion);\n+  }\n+\n+  /**\n+   * This method implements sendAlertMessage from initiater to responder.\n+   *\n+   * @param body      Emergency Message Distribution Element transaction message body received.\n+   * @param assertion Assertion received.\n+   * @param target    NhinTargetCommunity receievd.\n+   * @param apiLevel  gateway apiLevel received (g0/g1).\n+   */\n+  public void sendAlertMessage(EDXLDistribution body, AssertionType assertion, NhinTargetCommunitiesType target,\n+                               NhincConstants.GATEWAY_API_LEVEL apiLevel) {\n+    LOG.debug(\"begin sendAlertMessage\");\n+\n+    AdminDistributionHelper helper = getHelper();\n+    String hcid = helper.getLocalCommunityId();\n+    String url = helper.getUrl(hcid, NhincConstants.ENTITY_ADMIN_DIST_SERVICE_NAME, apiLevel);\n+\n+    if (NullChecker.isNotNullish(url)) {\n+      try {\n+        RespondingGatewaySendAlertMessageType message = new RespondingGatewaySendAlertMessageType();\n+        message.setEDXLDistribution(body);\n+        message.setNhinTargetCommunities(target);\n+        message.setAssertion(assertion);\n+\n+        ServicePortDescriptor<AdministrativeDistributionPortType> portDescriptor =\n+            getServicePortDescriptor(apiLevel);\n+\n+        CONNECTClient<AdministrativeDistributionPortType> client = getCONNECTClientUnsecured(\n+            portDescriptor, url, assertion);\n \n-    /** This method implements sendAlertMessage from initiater to responder.\n-     * @param body Emergency Message Distribution Element transaction message body received.\n-     * @param assertion Assertion received.\n-     * @param target NhinTargetCommunity receievd.\n-     * @param apiLevel gateway apiLevel received (g0/g1).\n-     */\n-    public void sendAlertMessage(EDXLDistribution body, AssertionType assertion, NhinTargetCommunitiesType target,\n-            NhincConstants.GATEWAY_API_LEVEL apiLevel) {\n-        LOG.debug(\"begin sendAlertMessage\");\n-\n-        AdminDistributionHelper helper = getHelper();\n-        String hcid = helper.getLocalCommunityId();\n-        String url = helper.getUrl(hcid, NhincConstants.ENTITY_ADMIN_DIST_SERVICE_NAME, apiLevel);\n-\n-        if (NullChecker.isNotNullish(url)) {\n-            try {\n-                RespondingGatewaySendAlertMessageType message = new RespondingGatewaySendAlertMessageType();\n-                message.setEDXLDistribution(body);\n-                message.setNhinTargetCommunities(target);\n-                message.setAssertion(assertion);\n-\n-                ServicePortDescriptor<AdministrativeDistributionPortType> portDescriptor =\n-                        getServicePortDescriptor(apiLevel);\n-\n-                CONNECTClient<AdministrativeDistributionPortType> client = getCONNECTClientUnsecured(\n-                        portDescriptor, url, assertion);\n-\n-                client.invokePort(AdministrativeDistributionPortType.class, \"sendAlertMessage\", message);\n-            } catch (Exception ex) {\n-                LOG.error(\"Unable to send message: \" + ex.getMessage(), ex);\n-            }\n-        } else {\n-            LOG.error(\"Failed to call the web service (\" + NhincConstants.ADAPTER_ADMIN_DIST_SERVICE_NAME\n-                    + \").  The URL is null.\");\n-        }\n+        client.invokePort(AdministrativeDistributionPortType.class, \"sendAlertMessage\", message);\n+      } catch (Exception ex) {\n+        LOG.error(\"Unable to send message: \" + ex.getMessage(), ex);\n+      }\n+    } else {\n+      LOG.error(\"Failed to call the web service (\" + NhincConstants.ADAPTER_ADMIN_DIST_SERVICE_NAME\n+          + \").  The URL is null.\");\n     }\n+  }\n }\n",
            "diff_size": 102
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 159).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\nindex 565851f3d5c..4153a481a94 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.entity.proxy;\n \n import gov.hhs.fha.nhinc.admindistribution.AdminDistributionHelper;\n@@ -46,7 +47,6 @@ import org.apache.log4j.Logger;\n  *\n  * @author dunnek\n  */\n-\n public class EntityAdminDistributionProxyWebServiceUnsecuredImpl {\n     private static final Logger LOG = Logger.getLogger(EntityAdminDistributionProxyWebServiceUnsecuredImpl.class);\n \n@@ -57,13 +57,11 @@ public class EntityAdminDistributionProxyWebServiceUnsecuredImpl {\n         return new AdminDistributionHelper();\n     }\n \n-\n-    /**This method returns EntityAdminDistributionSecuredServicePortDescriptor based on gateway apiLevel.\n+/**This method returns EntityAdminDistributionSecuredServicePortDescriptor based on gateway apiLevel.\n      * @param apiLevel gateway apiLevel received (g0/g1).\n      * @return instance of EntityAdminDistributionSecuredServicePortDescriptor based on gateway apiLevel.\n      */\n-    public ServicePortDescriptor<AdministrativeDistributionPortType> getServicePortDescriptor(\n-            NhincConstants.GATEWAY_API_LEVEL apiLevel) {\n+    public ServicePortDescriptor<AdministrativeDistributionPortType> getServicePortDescriptor(NhincConstants.GATEWAY_API_LEVEL apiLevel) {\n         switch (apiLevel) {\n         case LEVEL_g0:\n             return new EntityAdminDistributionG0UnsecuredServicePortDescriptor();\n@@ -79,10 +77,8 @@ public class EntityAdminDistributionProxyWebServiceUnsecuredImpl {\n      * @return CXFClient to implement AdminDist Unsecured Service.\n      */\n     protected CONNECTClient<AdministrativeDistributionPortType> getCONNECTClientUnsecured(\n-            ServicePortDescriptor<AdministrativeDistributionPortType> portDescriptor, String url,\n-            AssertionType assertion) {\n-\n-        return CONNECTCXFClientFactory.getInstance().getCONNECTClientUnsecured(portDescriptor, url, assertion);\n+            ServicePortDescriptor<AdministrativeDistributionPortType> portDescriptor, String url, AssertionType assertion) {\n+    return CONNECTCXFClientFactory.getInstance().getCONNECTClientUnsecured(portDescriptor, url, assertion);\n     }\n \n     /** This method implements sendAlertMessage from initiater to responder.\n@@ -91,34 +87,27 @@ public class EntityAdminDistributionProxyWebServiceUnsecuredImpl {\n      * @param target NhinTargetCommunity receievd.\n      * @param apiLevel gateway apiLevel received (g0/g1).\n      */\n-    public void sendAlertMessage(EDXLDistribution body, AssertionType assertion, NhinTargetCommunitiesType target,\n-            NhincConstants.GATEWAY_API_LEVEL apiLevel) {\n+    public void sendAlertMessage(EDXLDistribution body, AssertionType assertion, NhinTargetCommunitiesType target, NhincConstants.GATEWAY_API_LEVEL apiLevel) {\n         LOG.debug(\"begin sendAlertMessage\");\n \n         AdminDistributionHelper helper = getHelper();\n         String hcid = helper.getLocalCommunityId();\n         String url = helper.getUrl(hcid, NhincConstants.ENTITY_ADMIN_DIST_SERVICE_NAME, apiLevel);\n-\n-        if (NullChecker.isNotNullish(url)) {\n+if (NullChecker.isNotNullish(url)) {\n             try {\n                 RespondingGatewaySendAlertMessageType message = new RespondingGatewaySendAlertMessageType();\n                 message.setEDXLDistribution(body);\n                 message.setNhinTargetCommunities(target);\n                 message.setAssertion(assertion);\n \n-                ServicePortDescriptor<AdministrativeDistributionPortType> portDescriptor =\n-                        getServicePortDescriptor(apiLevel);\n-\n-                CONNECTClient<AdministrativeDistributionPortType> client = getCONNECTClientUnsecured(\n-                        portDescriptor, url, assertion);\n-\n-                client.invokePort(AdministrativeDistributionPortType.class, \"sendAlertMessage\", message);\n+                ServicePortDescriptor<AdministrativeDistributionPortType> portDescriptor = getServicePortDescriptor(apiLevel);\n+CONNECTClient<AdministrativeDistributionPortType> client = getCONNECTClientUnsecured(portDescriptor, url, assertion);\n+client.invokePort(AdministrativeDistributionPortType.class, \"sendAlertMessage\", message);\n             } catch (Exception ex) {\n                 LOG.error(\"Unable to send message: \" + ex.getMessage(), ex);\n             }\n         } else {\n-            LOG.error(\"Failed to call the web service (\" + NhincConstants.ADAPTER_ADMIN_DIST_SERVICE_NAME\n-                    + \").  The URL is null.\");\n-        }\n+            LOG.error(\"Failed to call the web service (\" + NhincConstants.ADAPTER_ADMIN_DIST_SERVICE_NAME + \").  The URL is null.\");\n+    }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "column": "15",
                    "severity": "error",
                    "message": "'switch' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "107",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 132).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\nindex 565851f3d5c..7bfd2074327 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\n@@ -39,7 +39,6 @@ import gov.hhs.fha.nhinc.messaging.service.port.ServicePortDescriptor;\n import gov.hhs.fha.nhinc.nhinclib.NhincConstants;\n import gov.hhs.fha.nhinc.nhinclib.NullChecker;\n import oasis.names.tc.emergency.edxl.de._1.EDXLDistribution;\n-\n import org.apache.log4j.Logger;\n \n /**\n@@ -47,12 +46,16 @@ import org.apache.log4j.Logger;\n  * @author dunnek\n  */\n \n+\n public class EntityAdminDistributionProxyWebServiceUnsecuredImpl {\n+\n     private static final Logger LOG = Logger.getLogger(EntityAdminDistributionProxyWebServiceUnsecuredImpl.class);\n \n     /**\n      * @return instance of AdminDistributionHelper.\n      */\n+\n+\n     protected AdminDistributionHelper getHelper() {\n         return new AdminDistributionHelper();\n     }\n@@ -62,12 +65,13 @@ public class EntityAdminDistributionProxyWebServiceUnsecuredImpl {\n      * @param apiLevel gateway apiLevel received (g0/g1).\n      * @return instance of EntityAdminDistributionSecuredServicePortDescriptor based on gateway apiLevel.\n      */\n-    public ServicePortDescriptor<AdministrativeDistributionPortType> getServicePortDescriptor(\n-            NhincConstants.GATEWAY_API_LEVEL apiLevel) {\n-        switch (apiLevel) {\n-        case LEVEL_g0:\n+\n+\n+    public ServicePortDescriptor<AdministrativeDistributionPortType> getServicePortDescriptor(NhincConstants.GATEWAY_API_LEVEL apiLevel) {\n+        switch(apiLevel) {\n+            case LEVEL_g0:\n             return new EntityAdminDistributionG0UnsecuredServicePortDescriptor();\n-        default:\n+                         default :\n             return new EntityAdminDistributionG1UnsecuredServicePortDescriptor();\n         }\n     }\n@@ -78,10 +82,10 @@ public class EntityAdminDistributionProxyWebServiceUnsecuredImpl {\n      * @param assertion Assertion received.\n      * @return CXFClient to implement AdminDist Unsecured Service.\n      */\n-    protected CONNECTClient<AdministrativeDistributionPortType> getCONNECTClientUnsecured(\n-            ServicePortDescriptor<AdministrativeDistributionPortType> portDescriptor, String url,\n-            AssertionType assertion) {\n \n+\n+    protected CONNECTClient<AdministrativeDistributionPortType> getCONNECTClientUnsecured(ServicePortDescriptor<AdministrativeDistributionPortType> portDescriptor,\n+        String url, AssertionType assertion) {\n         return CONNECTCXFClientFactory.getInstance().getCONNECTClientUnsecured(portDescriptor, url, assertion);\n     }\n \n@@ -91,34 +95,33 @@ public class EntityAdminDistributionProxyWebServiceUnsecuredImpl {\n      * @param target NhinTargetCommunity receievd.\n      * @param apiLevel gateway apiLevel received (g0/g1).\n      */\n-    public void sendAlertMessage(EDXLDistribution body, AssertionType assertion, NhinTargetCommunitiesType target,\n-            NhincConstants.GATEWAY_API_LEVEL apiLevel) {\n-        LOG.debug(\"begin sendAlertMessage\");\n \n+\n+    public void sendAlertMessage(EDXLDistribution body,\n+        AssertionType assertion,\n+        NhinTargetCommunitiesType target, NhincConstants.GATEWAY_API_LEVEL apiLevel) {\n+        LOG.debug(\"begin sendAlertMessage\");\n         AdminDistributionHelper helper = getHelper();\n         String hcid = helper.getLocalCommunityId();\n         String url = helper.getUrl(hcid, NhincConstants.ENTITY_ADMIN_DIST_SERVICE_NAME, apiLevel);\n-\n-        if (NullChecker.isNotNullish(url)) {\n+        if(NullChecker.isNotNullish(url)) {\n             try {\n                 RespondingGatewaySendAlertMessageType message = new RespondingGatewaySendAlertMessageType();\n                 message.setEDXLDistribution(body);\n                 message.setNhinTargetCommunities(target);\n                 message.setAssertion(assertion);\n-\n-                ServicePortDescriptor<AdministrativeDistributionPortType> portDescriptor =\n-                        getServicePortDescriptor(apiLevel);\n-\n-                CONNECTClient<AdministrativeDistributionPortType> client = getCONNECTClientUnsecured(\n-                        portDescriptor, url, assertion);\n-\n+                ServicePortDescriptor<AdministrativeDistributionPortType> portDescriptor = getServicePortDescriptor(apiLevel);\n+                CONNECTClient<AdministrativeDistributionPortType> client = getCONNECTClientUnsecured(portDescriptor, url, assertion);\n                 client.invokePort(AdministrativeDistributionPortType.class, \"sendAlertMessage\", message);\n             } catch (Exception ex) {\n                 LOG.error(\"Unable to send message: \" + ex.getMessage(), ex);\n             }\n-        } else {\n-            LOG.error(\"Failed to call the web service (\" + NhincConstants.ADAPTER_ADMIN_DIST_SERVICE_NAME\n-                    + \").  The URL is null.\");\n+        }\n+\n+\n+else {\n+            LOG.error(\"Failed to call the web service (\" + NhincConstants.ADAPTER_ADMIN_DIST_SERVICE_NAME + \").  The URL is null.\");\n         }\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 41
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\nindex 565851f3d5c..89822bfdc18 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.admindistribution.entity.proxy;\n-\n import gov.hhs.fha.nhinc.admindistribution.AdminDistributionHelper;\n import gov.hhs.fha.nhinc.admindistribution.entity.proxy.service.EntityAdminDistributionG0UnsecuredServicePortDescriptor;\n import gov.hhs.fha.nhinc.admindistribution.entity.proxy.service.EntityAdminDistributionG1UnsecuredServicePortDescriptor;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\nindex 565851f3d5c..4cfdc7e23dc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/209/EntityAdminDistributionProxyWebServiceUnsecuredImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.entity.proxy;\n \n import gov.hhs.fha.nhinc.admindistribution.AdminDistributionHelper;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2411",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2411/VictimPageReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2411/VictimPageReference.java\nindex 32738bc3775..346fc69a9c8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2411/VictimPageReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2411/VictimPageReference.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.io.pagecache.impl.muninn;\n \n import org.neo4j.memory.MemoryAllocationTracker;\n@@ -24,24 +25,24 @@ import org.neo4j.unsafe.impl.internal.dragons.UnsafeUtil;\n \n class VictimPageReference\n {\n-    private static int victimPageSize = -1;\n-    private static long victimPagePointer;\n+  private static int victimPageSize = -1;\n+  private static long victimPagePointer;\n \n-    private VictimPageReference()\n-    {\n-        // All state is static\n-    }\n+  private VictimPageReference()\n+  {\n+    // All state is static\n+  }\n \n-    static synchronized long getVictimPage( int pageSize, MemoryAllocationTracker allocationTracker )\n+  static synchronized long getVictimPage(int pageSize, MemoryAllocationTracker allocationTracker)\n+  {\n+    if (victimPageSize < pageSize)\n     {\n-        if ( victimPageSize < pageSize )\n-        {\n-            // Note that we NEVER free any old victim pages. This is important because we cannot tell\n-            // when we are done using them. Therefor, victim pages are allocated and stay allocated\n-            // until our process terminates.\n-            victimPagePointer = UnsafeUtil.allocateMemory( pageSize, allocationTracker );\n-            victimPageSize = pageSize;\n-        }\n-        return victimPagePointer;\n+      // Note that we NEVER free any old victim pages. This is important because we cannot tell\n+      // when we are done using them. Therefor, victim pages are allocated and stay allocated\n+      // until our process terminates.\n+      victimPagePointer = UnsafeUtil.allocateMemory(pageSize, allocationTracker);\n+      victimPageSize = pageSize;\n     }\n+    return victimPagePointer;\n+  }\n }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2411/VictimPageReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2411/VictimPageReference.java\nindex 32738bc3775..4f7a571d871 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2411/VictimPageReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2411/VictimPageReference.java\n@@ -42,6 +42,7 @@ class VictimPageReference\n             victimPagePointer = UnsafeUtil.allocateMemory( pageSize, allocationTracker );\n             victimPageSize = pageSize;\n         }\n-        return victimPagePointer;\n+\n+return victimPagePointer;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
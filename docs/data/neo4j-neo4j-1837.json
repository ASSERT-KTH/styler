{
    "project_name": "neo4j-neo4j",
    "error_id": "1837",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "127",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "154",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "167",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "266",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "312",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "317",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "401",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "419",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "427",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "443",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "473",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "485",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1837/DefaultNodeCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1837/DefaultNodeCursor.java\nindex f3a3b97214c..46d395ae886 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1837/DefaultNodeCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1837/DefaultNodeCursor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.newapi;\n \n import org.eclipse.collections.api.iterator.IntIterator;\n@@ -60,14 +61,14 @@ class DefaultNodeCursor extends TraceableCursor<DefaultNodeCursor> implements No\n     private long single;\n     private AccessMode accessMode;\n \n-    DefaultNodeCursor( CursorPool<DefaultNodeCursor> pool, StorageNodeCursor storeCursor, StorageNodeCursor securityStoreCursor )\n+    DefaultNodeCursor(CursorPool<DefaultNodeCursor> pool, StorageNodeCursor storeCursor, StorageNodeCursor securityStoreCursor)\n     {\n-        super( pool );\n+        super(pool);\n         this.storeCursor = storeCursor;\n         this.securityStoreCursor = securityStoreCursor;\n     }\n \n-    void scan( Read read )\n+    void scan(Read read)\n     {\n         storeCursor.scan();\n         this.read = read;\n@@ -75,13 +76,13 @@ class DefaultNodeCursor extends TraceableCursor<DefaultNodeCursor> implements No\n         this.currentAddedInTx = NO_ID;\n         this.checkHasChanges = true;\n         this.addedNodes = ImmutableEmptyLongIterator.INSTANCE;\n-        if ( tracer != null )\n+        if (tracer != null)\n         {\n             tracer.onAllNodesScan();\n         }\n     }\n \n-    boolean scanBatch( Read read, AllNodeScan scan, int sizeHint, LongIterator addedNodes, boolean hasChanges )\n+    boolean scanBatch(Read read, AllNodeScan scan, int sizeHint, LongIterator addedNodes, boolean hasChanges)\n     {\n         this.read = read;\n         this.single = NO_ID;\n@@ -89,13 +90,13 @@ class DefaultNodeCursor extends TraceableCursor<DefaultNodeCursor> implements No\n         this.checkHasChanges = false;\n         this.hasChanges = hasChanges;\n         this.addedNodes = addedNodes;\n-        boolean scanBatch = storeCursor.scanBatch( scan, sizeHint );\n+        boolean scanBatch = storeCursor.scanBatch(scan, sizeHint);\n         return addedNodes.hasNext() || scanBatch;\n     }\n \n-    void single( long reference, Read read )\n+    void single(long reference, Read read)\n     {\n-        storeCursor.single( reference );\n+        storeCursor.single(reference);\n         this.read = read;\n         this.single = reference;\n         this.currentAddedInTx = NO_ID;\n@@ -106,7 +107,7 @@ class DefaultNodeCursor extends TraceableCursor<DefaultNodeCursor> implements No\n     @Override\n     public long nodeReference()\n     {\n-        if ( currentAddedInTx != NO_ID )\n+        if (currentAddedInTx != NO_ID)\n         {\n             // Special case where the most recent next() call selected a node that exists only in tx-state.\n             // Internal methods getting data about this node will also check tx-state and get the data from there.\n@@ -118,30 +119,28 @@ class DefaultNodeCursor extends TraceableCursor<DefaultNodeCursor> implements No\n     @Override\n     public TokenSet labels()\n     {\n-        if ( currentAddedInTx != NO_ID )\n+        if (currentAddedInTx != NO_ID)\n         {\n             //Node added in tx-state, no reason to go down to store and check\n             TransactionState txState = read.txState();\n-            return Labels.from( txState.nodeStateLabelDiffSets( currentAddedInTx ).getAdded() );\n-        }\n-        else if ( hasChanges() )\n+            return Labels.from(txState.nodeStateLabelDiffSets(currentAddedInTx).getAdded());\n+        } else if (hasChanges())\n         {\n             //Get labels from store and put in intSet, unfortunately we get longs back\n             TransactionState txState = read.txState();\n             long[] longs = storeCursor.labels();\n             final MutableLongSet labels = new LongHashSet();\n-            for ( long labelToken : longs )\n+            for (long labelToken : longs)\n             {\n-                labels.add( labelToken );\n+                labels.add(labelToken);\n             }\n \n             //Augment what was found in store with what we have in tx state\n-            return Labels.from( txState.augmentLabels( labels, txState.getNodeState( storeCursor.entityReference() ) ) );\n-        }\n-        else\n+            return Labels.from(txState.augmentLabels(labels, txState.getNodeState(storeCursor.entityReference())));\n+        } else\n         {\n             //Nothing in tx state, just read the data.\n-            return Labels.from( storeCursor.labels() );\n+            return Labels.from(storeCursor.labels());\n         }\n     }\n \n@@ -152,50 +151,49 @@ class DefaultNodeCursor extends TraceableCursor<DefaultNodeCursor> implements No\n     @Override\n     public TokenSet labelsIgnoringTxStateSetRemove()\n     {\n-        if ( currentAddedInTx != NO_ID )\n+        if (currentAddedInTx != NO_ID)\n         {\n             //Node added in tx-state, no reason to go down to store and check\n             TransactionState txState = read.txState();\n-            return Labels.from( txState.nodeStateLabelDiffSets( currentAddedInTx ).getAdded() );\n-        }\n-        else\n+            return Labels.from(txState.nodeStateLabelDiffSets(currentAddedInTx).getAdded());\n+        } else\n         {\n             //Nothing in tx state, just read the data.\n-            return Labels.from( storeCursor.labels() );\n+            return Labels.from(storeCursor.labels());\n         }\n     }\n \n     @Override\n-    public boolean hasLabel( int label )\n+    public boolean hasLabel(int label)\n     {\n-        if ( hasChanges() )\n+        if (hasChanges())\n         {\n             TransactionState txState = read.txState();\n-            LongDiffSets diffSets = txState.nodeStateLabelDiffSets( nodeReference() );\n-            if ( diffSets.getAdded().contains( label ) )\n+            LongDiffSets diffSets = txState.nodeStateLabelDiffSets(nodeReference());\n+            if (diffSets.getAdded().contains(label))\n             {\n                 return true;\n             }\n-            if ( diffSets.getRemoved().contains( label ) )\n+            if (diffSets.getRemoved().contains(label))\n             {\n                 return false;\n             }\n         }\n \n         //Get labels from store and put in intSet, unfortunately we get longs back\n-        return storeCursor.hasLabel( label );\n+        return storeCursor.hasLabel(label);\n     }\n \n     @Override\n-    public void relationships( RelationshipTraversalCursor cursor, RelationshipSelection selection )\n+    public void relationships(RelationshipTraversalCursor cursor, RelationshipSelection selection)\n     {\n-        ((DefaultRelationshipTraversalCursor) cursor).init( this, selection, read );\n+        ((DefaultRelationshipTraversalCursor) cursor).init(this, selection, read);\n     }\n \n     @Override\n-    public void properties( PropertyCursor cursor )\n+    public void properties(PropertyCursor cursor)\n     {\n-        ((DefaultPropertyCursor) cursor).initNode( nodeReference(), propertiesReference(), read, read );\n+        ((DefaultPropertyCursor) cursor).initNode(nodeReference(), propertiesReference(), read, read);\n     }\n \n     @Override\n@@ -220,68 +218,67 @@ class DefaultNodeCursor extends TraceableCursor<DefaultNodeCursor> implements No\n     public int[] relationshipTypes()\n     {\n         boolean hasChanges = hasChanges();\n-        NodeState nodeTxState = hasChanges ? read.txState().getNodeState( nodeReference() ) : null;\n+        NodeState nodeTxState = hasChanges ? read.txState().getNodeState(nodeReference()) : null;\n         int[] storedTypes = currentAddedInTx == NO_ID ? storeCursor.relationshipTypes() : null;\n-        MutableIntSet types = storedTypes != null ? IntSets.mutable.of( storedTypes ) : IntSets.mutable.empty();\n-        if ( nodeTxState != null )\n+        MutableIntSet types = storedTypes != null ? IntSets.mutable.of(storedTypes) : IntSets.mutable.empty();\n+        if (nodeTxState != null)\n         {\n-            types.addAll( nodeTxState.getAddedRelationshipTypes() );\n+            types.addAll(nodeTxState.getAddedRelationshipTypes());\n         }\n         return types.toArray();\n     }\n \n     @Override\n-    public Degrees degrees( RelationshipSelection selection )\n+    public Degrees degrees(RelationshipSelection selection)\n     {\n         EagerDegrees degrees = new EagerDegrees();\n-        fillDegrees( selection, degrees );\n+        fillDegrees(selection, degrees);\n         return degrees;\n     }\n \n     @Override\n-    public int degree( RelationshipSelection selection )\n+    public int degree(RelationshipSelection selection)\n     {\n         SingleDegree degrees = new SingleDegree();\n-        fillDegrees( selection, degrees );\n+        fillDegrees(selection, degrees);\n         return degrees.getTotal();\n     }\n \n     @Override\n-    public int degreeWithMax( int maxDegree, RelationshipSelection selection )\n+    public int degreeWithMax(int maxDegree, RelationshipSelection selection)\n     {\n-        SingleDegree degrees = new SingleDegree( maxDegree );\n-        fillDegrees( selection, degrees );\n+        SingleDegree degrees = new SingleDegree(maxDegree);\n+        fillDegrees(selection, degrees);\n         return Math.min(degrees.getTotal(), maxDegree);\n     }\n \n-    private void fillDegrees( RelationshipSelection selection, Degrees.Mutator degrees )\n+    private void fillDegrees(RelationshipSelection selection, Degrees.Mutator degrees)\n     {\n         boolean hasChanges = hasChanges();\n-        NodeState nodeTxState = hasChanges ? read.txState().getNodeState( nodeReference() ) : null;\n-        if ( currentAddedInTx == NO_ID )\n+        NodeState nodeTxState = hasChanges ? read.txState().getNodeState(nodeReference()) : null;\n+        if (currentAddedInTx == NO_ID)\n         {\n-            if ( allowsTraverseAll() )\n+            if (allowsTraverseAll())\n             {\n-                storeCursor.degrees( selection, degrees, true );\n-            }\n-            else\n+                storeCursor.degrees(selection, degrees, true);\n+            } else\n             {\n-                storeCursor.degrees( new SecureRelationshipSelection( selection ), degrees, false );\n+                storeCursor.degrees(new SecureRelationshipSelection(selection), degrees, false);\n             }\n         }\n-        if ( nodeTxState != null )\n+        if (nodeTxState != null)\n         {\n             // Then add the remaining types that's only present in the tx-state\n             IntIterator txTypes = nodeTxState.getAddedAndRemovedRelationshipTypes().intIterator();\n-            while ( txTypes.hasNext() )\n+            while (txTypes.hasNext())\n             {\n                 int type = txTypes.next();\n-                if ( selection.test( type ) )\n+                if (selection.test(type))\n                 {\n-                    int outgoing = selection.test( RelationshipDirection.OUTGOING ) ? nodeTxState.augmentDegree( RelationshipDirection.OUTGOING, 0, type ) : 0;\n-                    int incoming = selection.test( RelationshipDirection.INCOMING ) ? nodeTxState.augmentDegree( RelationshipDirection.INCOMING, 0, type ) : 0;\n-                    int loop = selection.test( RelationshipDirection.LOOP ) ? nodeTxState.augmentDegree( RelationshipDirection.LOOP, 0, type ) : 0;\n-                    if ( !degrees.add( type, outgoing, incoming, loop ) )\n+                    int outgoing = selection.test(RelationshipDirection.OUTGOING) ? nodeTxState.augmentDegree(RelationshipDirection.OUTGOING, 0, type) : 0;\n+                    int incoming = selection.test(RelationshipDirection.INCOMING) ? nodeTxState.augmentDegree(RelationshipDirection.INCOMING, 0, type) : 0;\n+                    int loop = selection.test(RelationshipDirection.LOOP) ? nodeTxState.augmentDegree(RelationshipDirection.LOOP, 0, type) : 0;\n+                    if (!degrees.add(type, outgoing, incoming, loop))\n                     {\n                         return;\n                     }\n@@ -296,31 +293,30 @@ class DefaultNodeCursor extends TraceableCursor<DefaultNodeCursor> implements No\n         // Check tx state\n         boolean hasChanges = hasChanges();\n \n-        if ( hasChanges )\n+        if (hasChanges)\n         {\n-            if ( addedNodes.hasNext() )\n+            if (addedNodes.hasNext())\n             {\n                 currentAddedInTx = addedNodes.next();\n-                if ( tracer != null )\n+                if (tracer != null)\n                 {\n-                    tracer.onNode( nodeReference() );\n+                    tracer.onNode(nodeReference());\n                 }\n                 return true;\n-            }\n-            else\n+            } else\n             {\n                 currentAddedInTx = NO_ID;\n             }\n         }\n \n-        while ( storeCursor.next() )\n+        while (storeCursor.next())\n         {\n-            boolean skip = hasChanges && read.txState().nodeIsDeletedInThisTx( storeCursor.entityReference() );\n-            if ( !skip && allowsTraverse() )\n+            boolean skip = hasChanges && read.txState().nodeIsDeletedInThisTx(storeCursor.entityReference());\n+            if (!skip && allowsTraverse())\n             {\n-                if ( tracer != null )\n+                if (tracer != null)\n                 {\n-                    tracer.onNode( nodeReference() );\n+                    tracer.onNode(nodeReference());\n                 }\n                 return true;\n             }\n@@ -330,16 +326,16 @@ class DefaultNodeCursor extends TraceableCursor<DefaultNodeCursor> implements No\n \n     boolean allowsTraverse()\n     {\n-        if ( accessMode == null )\n+        if (accessMode == null)\n         {\n             accessMode = read.ktx.securityContext().mode();\n         }\n-        return accessMode.allowsTraverseAllLabels() || accessMode.allowsTraverseNode( storeCursor.labels() );\n+        return accessMode.allowsTraverseAllLabels() || accessMode.allowsTraverseNode(storeCursor.labels());\n     }\n \n     boolean allowsTraverseAll()\n     {\n-        if ( accessMode == null )\n+        if (accessMode == null)\n         {\n             accessMode = read.ktx.securityContext().mode();\n         }\n@@ -349,13 +345,13 @@ class DefaultNodeCursor extends TraceableCursor<DefaultNodeCursor> implements No\n     @Override\n     public void closeInternal()\n     {\n-        if ( !isClosed() )\n+        if (!isClosed())\n         {\n             read = null;\n             checkHasChanges = true;\n             addedNodes = ImmutableEmptyLongIterator.INSTANCE;\n             storeCursor.reset();\n-            if ( securityStoreCursor != null )\n+            if (securityStoreCursor != null)\n             {\n                 securityStoreCursor.reset();\n             }\n@@ -376,7 +372,7 @@ class DefaultNodeCursor extends TraceableCursor<DefaultNodeCursor> implements No\n      */\n     boolean hasChanges()\n     {\n-        if ( checkHasChanges )\n+        if (checkHasChanges)\n         {\n             computeHasChanges();\n         }\n@@ -386,14 +382,13 @@ class DefaultNodeCursor extends TraceableCursor<DefaultNodeCursor> implements No\n     private void computeHasChanges()\n     {\n         checkHasChanges = false;\n-        if ( hasChanges = read.hasTxStateWithChanges() )\n+        if (hasChanges = read.hasTxStateWithChanges())\n         {\n-            if ( single != NO_ID )\n+            if (single != NO_ID)\n             {\n-                addedNodes = read.txState().nodeIsAddedInThisTx( single ) ?\n-                             PrimitiveLongCollections.single( single ) : ImmutableEmptyLongIterator.INSTANCE;\n-            }\n-            else\n+                addedNodes = read.txState().nodeIsAddedInThisTx(single) ?\n+                  PrimitiveLongCollections.single(single) : ImmutableEmptyLongIterator.INSTANCE;\n+            } else\n             {\n                 addedNodes = read.txState().addedAndRemovedNodes().getAdded().freeze().longIterator();\n             }\n@@ -403,11 +398,10 @@ class DefaultNodeCursor extends TraceableCursor<DefaultNodeCursor> implements No\n     @Override\n     public String toString()\n     {\n-        if ( isClosed() )\n+        if (isClosed())\n         {\n             return \"NodeCursor[closed state]\";\n-        }\n-        else\n+        } else\n         {\n             return \"NodeCursor[id=\" + nodeReference() + \", \" + storeCursor + \"]\";\n         }\n@@ -415,47 +409,46 @@ class DefaultNodeCursor extends TraceableCursor<DefaultNodeCursor> implements No\n \n     void release()\n     {\n-        IOUtils.closeAllUnchecked( storeCursor, securityStoreCursor );\n+        IOUtils.closeAllUnchecked(storeCursor, securityStoreCursor);\n     }\n \n     private class SecureRelationshipSelection extends RelationshipSelection\n     {\n         private final RelationshipSelection inner;\n \n-        SecureRelationshipSelection( RelationshipSelection selection )\n+        SecureRelationshipSelection(RelationshipSelection selection)\n         {\n             inner = selection;\n         }\n \n         @Override\n-        public boolean test( int type, long sourceReference, long targetReference )\n+        public boolean test(int type, long sourceReference, long targetReference)\n         {\n-            if ( accessMode.allowsTraverseRelType( type ) )\n+            if (accessMode.allowsTraverseRelType(type))\n             {\n-                if ( sourceReference == targetReference )\n+                if (sourceReference == targetReference)\n                 {\n-                    return inner.test( type );\n+                    return inner.test(type);\n                 }\n                 long otherReference = sourceReference == nodeReference() ? targetReference : sourceReference;\n-                securityStoreCursor.single( otherReference );\n-                return securityStoreCursor.next() && accessMode.allowsTraverseNode( securityStoreCursor.labels() ) && inner.test( type );\n-            }\n-            else\n+                securityStoreCursor.single(otherReference);\n+                return securityStoreCursor.next() && accessMode.allowsTraverseNode(securityStoreCursor.labels()) && inner.test(type);\n+            } else\n             {\n                 return false;\n             }\n         }\n \n         @Override\n-        public boolean test( int type )\n+        public boolean test(int type)\n         {\n-            return inner.test( type );\n+            return inner.test(type);\n         }\n \n         @Override\n-        public boolean test( RelationshipDirection direction )\n+        public boolean test(RelationshipDirection direction)\n         {\n-            return inner.test( direction );\n+            return inner.test(direction);\n         }\n \n         @Override\n@@ -471,15 +464,15 @@ class DefaultNodeCursor extends TraceableCursor<DefaultNodeCursor> implements No\n         }\n \n         @Override\n-        public Criterion criterion( int index )\n+        public Criterion criterion(int index)\n         {\n-            return inner.criterion( index );\n+            return inner.criterion(index);\n         }\n \n         @Override\n-        public boolean test( int type, RelationshipDirection direction )\n+        public boolean test(int type, RelationshipDirection direction)\n         {\n-            return inner.test( type, direction );\n+            return inner.test(type, direction);\n         }\n \n         @Override\n@@ -489,9 +482,9 @@ class DefaultNodeCursor extends TraceableCursor<DefaultNodeCursor> implements No\n         }\n \n         @Override\n-        public LongIterator addedRelationship( NodeState transactionState )\n+        public LongIterator addedRelationship(NodeState transactionState)\n         {\n-            return inner.addedRelationship( transactionState );\n+            return inner.addedRelationship(transactionState);\n         }\n     }\n }\n",
            "diff_size": 107
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1837/DefaultNodeCursor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1837/DefaultNodeCursor.java\nindex f3a3b97214c..64687dfeac3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1837/DefaultNodeCursor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1837/DefaultNodeCursor.java\n@@ -494,4 +494,4 @@ class DefaultNodeCursor extends TraceableCursor<DefaultNodeCursor> implements No\n             return inner.addedRelationship( transactionState );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2799",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2799/LuceneIndexProviderFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2799/LuceneIndexProviderFactory.java\nindex cd50e59dede..858541e95ba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2799/LuceneIndexProviderFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2799/LuceneIndexProviderFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.schema;\n \n import java.io.File;\n@@ -45,79 +46,79 @@ import static org.neo4j.kernel.api.index.IndexDirectoryStructure.directoriesByPr\n import static org.neo4j.kernel.api.index.IndexDirectoryStructure.directoriesByProviderKey;\n import static org.neo4j.kernel.api.index.IndexProvider.EMPTY;\n \n-@Service.Implementation( KernelExtensionFactory.class )\n+@Service.Implementation(KernelExtensionFactory.class)\n public class LuceneIndexProviderFactory extends\n-        KernelExtensionFactory<LuceneIndexProviderFactory.Dependencies>\n+    KernelExtensionFactory<LuceneIndexProviderFactory.Dependencies>\n {\n-    public static final String KEY = \"lucene\";\n-\n-    public static final IndexProvider.Descriptor PROVIDER_DESCRIPTOR =\n-            new IndexProvider.Descriptor( KEY, \"1.0\" );\n-\n-    public interface Dependencies\n-    {\n-        PageCache pageCache();\n-\n-        RecoveryCleanupWorkCollector recoveryCleanupWorkCollector();\n-\n-        Config getConfig();\n-\n-        Monitors monitors();\n-\n-        LogService getLogService();\n-\n-        FileSystemAbstraction fileSystem();\n-    }\n-\n-    public LuceneIndexProviderFactory()\n-    {\n-        super( KEY );\n-    }\n-\n-    @Override\n-    public IndexProvider newInstance( KernelContext context, Dependencies dependencies )\n-    {\n-        PageCache pageCache = dependencies.pageCache();\n-        File storeDir = context.storeDir();\n-        FileSystemAbstraction fs = dependencies.fileSystem();\n-        Monitors monitors = dependencies.monitors();\n-        Log log = dependencies.getLogService().getInternalLogProvider().getLog( LuceneIndexProvider.class );\n-        monitors.addMonitorListener( new LoggingMonitor( log ), PROVIDER_DESCRIPTOR.toString() );\n-        IndexProvider.Monitor monitor = monitors.newMonitor( IndexProvider.Monitor.class, KEY );\n-        Config config = dependencies.getConfig();\n-        OperationalMode operationalMode = context.databaseInfo().operationalMode;\n-        RecoveryCleanupWorkCollector recoveryCleanupWorkCollector = dependencies.recoveryCleanupWorkCollector();\n-        return newInstance( pageCache, storeDir, fs, monitor, config, operationalMode, recoveryCleanupWorkCollector );\n-    }\n-\n-    public static FusionIndexProvider newInstance( PageCache pageCache, File storeDir, FileSystemAbstraction fs,\n-            IndexProvider.Monitor monitor, Config config, OperationalMode operationalMode,\n-            RecoveryCleanupWorkCollector recoveryCleanupWorkCollector )\n-    {\n-        boolean readOnly = IndexProviderFactoryUtil.isReadOnly( config, operationalMode );\n-        boolean archiveFailedIndex = config.get( GraphDatabaseSettings.archive_failed_index );\n-        IndexDirectoryStructure.Factory luceneDirStructure = directoriesByProviderKey( storeDir );\n-        IndexDirectoryStructure.Factory childDirectoryStructure = subProviderDirectoryStructure( storeDir );\n-\n-        LuceneIndexProvider lucene = IndexProviderFactoryUtil.luceneProvider( fs, luceneDirStructure, monitor, config, operationalMode );\n-        TemporalIndexProvider temporal =\n-                IndexProviderFactoryUtil.temporalProvider( pageCache, fs, childDirectoryStructure, monitor, recoveryCleanupWorkCollector, readOnly );\n-        SpatialIndexProvider spatial =\n-                IndexProviderFactoryUtil.spatialProvider( pageCache, fs, childDirectoryStructure, monitor, recoveryCleanupWorkCollector, readOnly, config );\n-\n-        String defaultSchemaProvider = config.get( GraphDatabaseSettings.default_schema_provider );\n-        int priority = LuceneIndexProvider.PRIORITY;\n-        if ( GraphDatabaseSettings.SchemaIndex.LUCENE10.providerName().equals( defaultSchemaProvider ) )\n-        {\n-            priority = 100;\n-        }\n-        return new FusionIndexProvider( EMPTY, EMPTY, spatial, temporal, lucene, new FusionSlotSelector00(),\n-                PROVIDER_DESCRIPTOR, priority, directoriesByProvider( storeDir ), fs, archiveFailedIndex );\n-    }\n-\n-    private static IndexDirectoryStructure.Factory subProviderDirectoryStructure( File storeDir )\n+  public static final String KEY = \"lucene\";\n+\n+  public static final IndexProvider.Descriptor PROVIDER_DESCRIPTOR =\n+      new IndexProvider.Descriptor(KEY, \"1.0\");\n+\n+  public interface Dependencies\n+  {\n+    PageCache pageCache();\n+\n+    RecoveryCleanupWorkCollector recoveryCleanupWorkCollector();\n+\n+    Config getConfig();\n+\n+    Monitors monitors();\n+\n+    LogService getLogService();\n+\n+    FileSystemAbstraction fileSystem();\n+  }\n+\n+  public LuceneIndexProviderFactory()\n+  {\n+    super(KEY);\n+  }\n+\n+  @Override\n+  public IndexProvider newInstance(KernelContext context, Dependencies dependencies)\n+  {\n+    PageCache pageCache = dependencies.pageCache();\n+    File storeDir = context.storeDir();\n+    FileSystemAbstraction fs = dependencies.fileSystem();\n+    Monitors monitors = dependencies.monitors();\n+    Log log = dependencies.getLogService().getInternalLogProvider().getLog(LuceneIndexProvider.class);\n+    monitors.addMonitorListener(new LoggingMonitor(log), PROVIDER_DESCRIPTOR.toString());\n+    IndexProvider.Monitor monitor = monitors.newMonitor(IndexProvider.Monitor.class, KEY);\n+    Config config = dependencies.getConfig();\n+    OperationalMode operationalMode = context.databaseInfo().operationalMode;\n+    RecoveryCleanupWorkCollector recoveryCleanupWorkCollector = dependencies.recoveryCleanupWorkCollector();\n+    return newInstance(pageCache, storeDir, fs, monitor, config, operationalMode, recoveryCleanupWorkCollector);\n+  }\n+\n+  public static FusionIndexProvider newInstance(PageCache pageCache, File storeDir, FileSystemAbstraction fs,\n+                                                IndexProvider.Monitor monitor, Config config, OperationalMode operationalMode,\n+                                                RecoveryCleanupWorkCollector recoveryCleanupWorkCollector)\n+  {\n+    boolean readOnly = IndexProviderFactoryUtil.isReadOnly(config, operationalMode);\n+    boolean archiveFailedIndex = config.get(GraphDatabaseSettings.archive_failed_index);\n+    IndexDirectoryStructure.Factory luceneDirStructure = directoriesByProviderKey(storeDir);\n+    IndexDirectoryStructure.Factory childDirectoryStructure = subProviderDirectoryStructure(storeDir);\n+\n+    LuceneIndexProvider lucene = IndexProviderFactoryUtil.luceneProvider(fs, luceneDirStructure, monitor, config, operationalMode);\n+    TemporalIndexProvider temporal =\n+        IndexProviderFactoryUtil.temporalProvider(pageCache, fs, childDirectoryStructure, monitor, recoveryCleanupWorkCollector, readOnly);\n+    SpatialIndexProvider spatial =\n+        IndexProviderFactoryUtil.spatialProvider(pageCache, fs, childDirectoryStructure, monitor, recoveryCleanupWorkCollector, readOnly, config);\n+\n+    String defaultSchemaProvider = config.get(GraphDatabaseSettings.default_schema_provider);\n+    int priority = LuceneIndexProvider.PRIORITY;\n+    if (GraphDatabaseSettings.SchemaIndex.LUCENE10.providerName().equals(defaultSchemaProvider))\n     {\n-        return NativeLuceneFusionIndexProviderFactory.subProviderDirectoryStructure( storeDir, PROVIDER_DESCRIPTOR );\n+      priority = 100;\n     }\n+    return new FusionIndexProvider(EMPTY, EMPTY, spatial, temporal, lucene, new FusionSlotSelector00(),\n+        PROVIDER_DESCRIPTOR, priority, directoriesByProvider(storeDir), fs, archiveFailedIndex);\n+  }\n+\n+  private static IndexDirectoryStructure.Factory subProviderDirectoryStructure(File storeDir)\n+  {\n+    return NativeLuceneFusionIndexProviderFactory.subProviderDirectoryStructure(storeDir, PROVIDER_DESCRIPTOR);\n+  }\n \n }\n",
            "diff_size": 79
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2799/LuceneIndexProviderFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2799/LuceneIndexProviderFactory.java\nindex cd50e59dede..a4ea32e3ab3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2799/LuceneIndexProviderFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2799/LuceneIndexProviderFactory.java\n@@ -46,15 +46,13 @@ import static org.neo4j.kernel.api.index.IndexDirectoryStructure.directoriesByPr\n import static org.neo4j.kernel.api.index.IndexProvider.EMPTY;\n \n @Service.Implementation( KernelExtensionFactory.class )\n-public class LuceneIndexProviderFactory extends\n-        KernelExtensionFactory<LuceneIndexProviderFactory.Dependencies>\n+public class LuceneIndexProviderFactory extends KernelExtensionFactory<LuceneIndexProviderFactory.Dependencies>\n {\n     public static final String KEY = \"lucene\";\n \n-    public static final IndexProvider.Descriptor PROVIDER_DESCRIPTOR =\n-            new IndexProvider.Descriptor( KEY, \"1.0\" );\n+    public static final IndexProvider.Descriptor PROVIDER_DESCRIPTOR = new IndexProvider.Descriptor( KEY, \"1.0\" );\n \n-    public interface Dependencies\n+public interface Dependencies\n     {\n         PageCache pageCache();\n \n@@ -98,14 +96,10 @@ public class LuceneIndexProviderFactory extends\n         boolean archiveFailedIndex = config.get( GraphDatabaseSettings.archive_failed_index );\n         IndexDirectoryStructure.Factory luceneDirStructure = directoriesByProviderKey( storeDir );\n         IndexDirectoryStructure.Factory childDirectoryStructure = subProviderDirectoryStructure( storeDir );\n-\n-        LuceneIndexProvider lucene = IndexProviderFactoryUtil.luceneProvider( fs, luceneDirStructure, monitor, config, operationalMode );\n-        TemporalIndexProvider temporal =\n-                IndexProviderFactoryUtil.temporalProvider( pageCache, fs, childDirectoryStructure, monitor, recoveryCleanupWorkCollector, readOnly );\n-        SpatialIndexProvider spatial =\n-                IndexProviderFactoryUtil.spatialProvider( pageCache, fs, childDirectoryStructure, monitor, recoveryCleanupWorkCollector, readOnly, config );\n-\n-        String defaultSchemaProvider = config.get( GraphDatabaseSettings.default_schema_provider );\n+LuceneIndexProvider lucene = IndexProviderFactoryUtil.luceneProvider( fs, luceneDirStructure, monitor, config, operationalMode );\n+        TemporalIndexProvider temporal = IndexProviderFactoryUtil.temporalProvider( pageCache, fs, childDirectoryStructure, monitor, recoveryCleanupWorkCollector, readOnly );\n+SpatialIndexProvider spatial = IndexProviderFactoryUtil.spatialProvider( pageCache, fs, childDirectoryStructure, monitor, recoveryCleanupWorkCollector, readOnly, config );\n+String defaultSchemaProvider = config.get( GraphDatabaseSettings.default_schema_provider );\n         int priority = LuceneIndexProvider.PRIORITY;\n         if ( GraphDatabaseSettings.SchemaIndex.LUCENE10.providerName().equals( defaultSchemaProvider ) )\n         {\n@@ -119,5 +113,4 @@ public class LuceneIndexProviderFactory extends\n     {\n         return NativeLuceneFusionIndexProviderFactory.subProviderDirectoryStructure( storeDir, PROVIDER_DESCRIPTOR );\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "11",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "60",
                    "column": "13",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "61",
                    "column": "15",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "62",
                    "column": "17",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "63",
                    "column": "19",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 251).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 200).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2799/LuceneIndexProviderFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2799/LuceneIndexProviderFactory.java\nindex cd50e59dede..ac839c452db 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2799/LuceneIndexProviderFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2799/LuceneIndexProviderFactory.java\n@@ -20,7 +20,6 @@\n package org.neo4j.kernel.api.impl.schema;\n \n import java.io.File;\n-\n import org.neo4j.graphdb.factory.GraphDatabaseSettings;\n import org.neo4j.helpers.Service;\n import org.neo4j.index.internal.gbptree.RecoveryCleanupWorkCollector;\n@@ -40,34 +39,28 @@ import org.neo4j.kernel.impl.logging.LogService;\n import org.neo4j.kernel.impl.spi.KernelContext;\n import org.neo4j.kernel.monitoring.Monitors;\n import org.neo4j.logging.Log;\n-\n import static org.neo4j.kernel.api.index.IndexDirectoryStructure.directoriesByProvider;\n+\n import static org.neo4j.kernel.api.index.IndexDirectoryStructure.directoriesByProviderKey;\n+\n import static org.neo4j.kernel.api.index.IndexProvider.EMPTY;\n \n-@Service.Implementation( KernelExtensionFactory.class )\n-public class LuceneIndexProviderFactory extends\n-        KernelExtensionFactory<LuceneIndexProviderFactory.Dependencies>\n+@ Service.Implementation( KernelExtensionFactory.class )\n+public class LuceneIndexProviderFactory extends KernelExtensionFactory<LuceneIndexProviderFactory.Dependencies>\n {\n     public static final String KEY = \"lucene\";\n \n-    public static final IndexProvider.Descriptor PROVIDER_DESCRIPTOR =\n-            new IndexProvider.Descriptor( KEY, \"1.0\" );\n+    public static final IndexProvider.Descriptor PROVIDER_DESCRIPTOR = new IndexProvider. Descriptor( KEY, \"1.0\" );\n \n     public interface Dependencies\n     {\n-        PageCache pageCache();\n-\n-        RecoveryCleanupWorkCollector recoveryCleanupWorkCollector();\n-\n-        Config getConfig();\n-\n-        Monitors monitors();\n-\n-        LogService getLogService();\n-\n-        FileSystemAbstraction fileSystem();\n-    }\n+        PageCache pageCache()\n+        ; RecoveryCleanupWorkCollector recoveryCleanupWorkCollector()\n+          ; Config getConfig()\n+            ; Monitors monitors()\n+              ; LogService getLogService()\n+                ; FileSystemAbstraction fileSystem()\n+                  ; }\n \n     public LuceneIndexProviderFactory()\n     {\n@@ -90,34 +83,27 @@ public class LuceneIndexProviderFactory extends\n         return newInstance( pageCache, storeDir, fs, monitor, config, operationalMode, recoveryCleanupWorkCollector );\n     }\n \n-    public static FusionIndexProvider newInstance( PageCache pageCache, File storeDir, FileSystemAbstraction fs,\n-            IndexProvider.Monitor monitor, Config config, OperationalMode operationalMode,\n-            RecoveryCleanupWorkCollector recoveryCleanupWorkCollector )\n+    public static FusionIndexProvider newInstance( PageCache pageCache, File storeDir, FileSystemAbstraction fs, IndexProvider.Monitor monitor, Config config, OperationalMode operationalMode, RecoveryCleanupWorkCollector recoveryCleanupWorkCollector )\n     {\n         boolean readOnly = IndexProviderFactoryUtil.isReadOnly( config, operationalMode );\n         boolean archiveFailedIndex = config.get( GraphDatabaseSettings.archive_failed_index );\n         IndexDirectoryStructure.Factory luceneDirStructure = directoriesByProviderKey( storeDir );\n         IndexDirectoryStructure.Factory childDirectoryStructure = subProviderDirectoryStructure( storeDir );\n-\n         LuceneIndexProvider lucene = IndexProviderFactoryUtil.luceneProvider( fs, luceneDirStructure, monitor, config, operationalMode );\n-        TemporalIndexProvider temporal =\n-                IndexProviderFactoryUtil.temporalProvider( pageCache, fs, childDirectoryStructure, monitor, recoveryCleanupWorkCollector, readOnly );\n-        SpatialIndexProvider spatial =\n-                IndexProviderFactoryUtil.spatialProvider( pageCache, fs, childDirectoryStructure, monitor, recoveryCleanupWorkCollector, readOnly, config );\n-\n+        TemporalIndexProvider temporal = IndexProviderFactoryUtil.temporalProvider( pageCache, fs, childDirectoryStructure, monitor, recoveryCleanupWorkCollector, readOnly );\n+        SpatialIndexProvider spatial = IndexProviderFactoryUtil.spatialProvider( pageCache, fs, childDirectoryStructure, monitor, recoveryCleanupWorkCollector, readOnly, config );\n         String defaultSchemaProvider = config.get( GraphDatabaseSettings.default_schema_provider );\n         int priority = LuceneIndexProvider.PRIORITY;\n         if ( GraphDatabaseSettings.SchemaIndex.LUCENE10.providerName().equals( defaultSchemaProvider ) )\n         {\n             priority = 100;\n         }\n-        return new FusionIndexProvider( EMPTY, EMPTY, spatial, temporal, lucene, new FusionSlotSelector00(),\n-                PROVIDER_DESCRIPTOR, priority, directoriesByProvider( storeDir ), fs, archiveFailedIndex );\n+\n+        return new FusionIndexProvider( EMPTY, EMPTY, spatial, temporal, lucene, new FusionSlotSelector00(), PROVIDER_DESCRIPTOR, priority, directoriesByProvider( storeDir ), fs, archiveFailedIndex );\n     }\n \n     private static IndexDirectoryStructure.Factory subProviderDirectoryStructure( File storeDir )\n     {\n         return NativeLuceneFusionIndexProviderFactory.subProviderDirectoryStructure( storeDir, PROVIDER_DESCRIPTOR );\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1338",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1338/PeriodicBoltKernelTransaction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1338/PeriodicBoltKernelTransaction.java\nindex d79a9aa988b..ac44ad25f6e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1338/PeriodicBoltKernelTransaction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1338/PeriodicBoltKernelTransaction.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.dbapi.impl;\n \n import java.util.Optional;\n@@ -35,10 +36,11 @@ public class PeriodicBoltKernelTransaction extends BoltQueryExecutorImpl impleme\n     private final InternalTransaction internalTransaction;\n     private final Supplier<BookmarkMetadata> bookmarkSupplier;\n \n-    public PeriodicBoltKernelTransaction( QueryExecutionEngine queryExecutionEngine,\n-            TransactionalContextFactory transactionalContextFactory, InternalTransaction transaction, Supplier<BookmarkMetadata> bookmarkSupplier )\n+    public PeriodicBoltKernelTransaction(QueryExecutionEngine queryExecutionEngine,\n+                                         TransactionalContextFactory transactionalContextFactory, InternalTransaction transaction,\n+                                         Supplier<BookmarkMetadata> bookmarkSupplier)\n     {\n-        super( queryExecutionEngine, transactionalContextFactory, transaction );\n+        super(queryExecutionEngine, transactionalContextFactory, transaction);\n         this.internalTransaction = transaction;\n         this.bookmarkSupplier = bookmarkSupplier;\n     }\n@@ -56,15 +58,15 @@ public class PeriodicBoltKernelTransaction extends BoltQueryExecutorImpl impleme\n     }\n \n     @Override\n-    public void markForTermination( Status reason )\n+    public void markForTermination(Status reason)\n     {\n-        internalTransaction.kernelTransaction().markForTermination( reason );\n+        internalTransaction.kernelTransaction().markForTermination(reason);\n     }\n \n     @Override\n     public void markForTermination()\n     {\n-        internalTransaction.kernelTransaction().markForTermination( Status.Transaction.Terminated );\n+        internalTransaction.kernelTransaction().markForTermination(Status.Transaction.Terminated);\n     }\n \n     @Override\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
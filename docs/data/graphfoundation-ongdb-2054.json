{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2054",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2054/DiscoveryRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2054/DiscoveryRepresentation.java\nindex 6c5c2f869c2..fc8dbbec4bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2054/DiscoveryRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2054/DiscoveryRepresentation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.repr;\n \n import org.neo4j.helpers.AdvertisedSocketAddress;\n@@ -24,27 +25,27 @@ import org.neo4j.helpers.AdvertisedSocketAddress;\n public class DiscoveryRepresentation extends MappingRepresentation\n {\n \n-    private static final String DATA_URI_KEY = \"data\";\n-    private static final String MANAGEMENT_URI_KEY = \"management\";\n-    private static final String BOLT_URI_KEY = \"bolt\";\n-    private static final String DISCOVERY_REPRESENTATION_TYPE = \"discovery\";\n-    private final String managementUri;\n-    private final String dataUri;\n-    private final AdvertisedSocketAddress boltAddress;\n+  private static final String DATA_URI_KEY = \"data\";\n+  private static final String MANAGEMENT_URI_KEY = \"management\";\n+  private static final String BOLT_URI_KEY = \"bolt\";\n+  private static final String DISCOVERY_REPRESENTATION_TYPE = \"discovery\";\n+  private final String managementUri;\n+  private final String dataUri;\n+  private final AdvertisedSocketAddress boltAddress;\n \n-    public DiscoveryRepresentation( String managementUri, String dataUri, AdvertisedSocketAddress boltAddress )\n-    {\n-        super( DISCOVERY_REPRESENTATION_TYPE );\n-        this.managementUri = managementUri;\n-        this.dataUri = dataUri;\n-        this.boltAddress = boltAddress;\n-    }\n+  public DiscoveryRepresentation(String managementUri, String dataUri, AdvertisedSocketAddress boltAddress)\n+  {\n+    super(DISCOVERY_REPRESENTATION_TYPE);\n+    this.managementUri = managementUri;\n+    this.dataUri = dataUri;\n+    this.boltAddress = boltAddress;\n+  }\n \n-    @Override\n-    protected void serialize( MappingSerializer serializer )\n-    {\n-        serializer.putRelativeUri( MANAGEMENT_URI_KEY, managementUri );\n-        serializer.putRelativeUri( DATA_URI_KEY, dataUri );\n-        serializer.putAbsoluteUri( BOLT_URI_KEY, \"bolt://\" + boltAddress.getHostname() + \":\" + boltAddress.getPort() );\n-    }\n+  @Override\n+  protected void serialize(MappingSerializer serializer)\n+  {\n+    serializer.putRelativeUri(MANAGEMENT_URI_KEY, managementUri);\n+    serializer.putRelativeUri(DATA_URI_KEY, dataUri);\n+    serializer.putAbsoluteUri(BOLT_URI_KEY, \"bolt://\" + boltAddress.getHostname() + \":\" + boltAddress.getPort());\n+  }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2054/DiscoveryRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2054/DiscoveryRepresentation.java\nindex 6c5c2f869c2..a2dae4ff07b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2054/DiscoveryRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2054/DiscoveryRepresentation.java\n@@ -23,7 +23,6 @@ import org.neo4j.helpers.AdvertisedSocketAddress;\n \n public class DiscoveryRepresentation extends MappingRepresentation\n {\n-\n     private static final String DATA_URI_KEY = \"data\";\n     private static final String MANAGEMENT_URI_KEY = \"management\";\n     private static final String BOLT_URI_KEY = \"bolt\";\n@@ -47,4 +46,4 @@ public class DiscoveryRepresentation extends MappingRepresentation\n         serializer.putRelativeUri( DATA_URI_KEY, dataUri );\n         serializer.putAbsoluteUri( BOLT_URI_KEY, \"bolt://\" + boltAddress.getHostname() + \":\" + boltAddress.getPort() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "589",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "65",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/589/RelationshipGroupCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/589/RelationshipGroupCache.java\nindex 02eebee0ada..260b654cbed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/589/RelationshipGroupCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/589/RelationshipGroupCache.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport;\n \n import java.util.Iterator;\n@@ -34,10 +35,10 @@ import static org.neo4j.io.ByteUnit.bytesToString;\n \n /**\n  * Holds information vital for making {@link RelationshipGroupDefragmenter} work the way it does.\n- *\n+ * <p>\n  * The defragmenter goes potentially multiple rounds through the relationship group store and each round\n  * selects groups from a range of node ids. This cache can cache the groups for the nodes in this range.\n- *\n+ * <p>\n  * First all group counts per node are updated ({@link #incrementGroupCount(long)}).\n  * Then {@link #prepare(long)} is called from lowest node id (0) and given the maximum configured memory\n  * given to this cache in its constructor the highest node id to cache is returned. Then groups are\n@@ -61,22 +62,22 @@ public class RelationshipGroupCache implements Iterable<RelationshipGroupRecord>\n     private long highCacheId;\n     private final long maxCacheLength;\n \n-    public RelationshipGroupCache( NumberArrayFactory arrayFactory, long maxMemory, long highNodeId, MemoryTracker memoryTracker )\n+    public RelationshipGroupCache(NumberArrayFactory arrayFactory, long maxMemory, long highNodeId, MemoryTracker memoryTracker)\n     {\n-        this.offsets = arrayFactory.newDynamicLongArray( 100_000, 0, memoryTracker );\n-        this.groupCountCache = arrayFactory.newByteArray( highNodeId, new byte[2], memoryTracker );\n+        this.offsets = arrayFactory.newDynamicLongArray(100_000, 0, memoryTracker);\n+        this.groupCountCache = arrayFactory.newByteArray(highNodeId, new byte[2], memoryTracker);\n         this.highNodeId = highNodeId;\n \n         long memoryDedicatedToCounting = 2 * highNodeId;\n         long memoryLeftForGroupCache = maxMemory - memoryDedicatedToCounting;\n-        if ( memoryLeftForGroupCache < 0 )\n+        if (memoryLeftForGroupCache < 0)\n         {\n             throw new IllegalArgumentException(\n-                    \"Too little memory to cache any groups, provided \" + bytesToString( maxMemory ) + \" where \" +\n-                            bytesToString( memoryDedicatedToCounting ) + \" was dedicated to group counting\" );\n+              \"Too little memory to cache any groups, provided \" + bytesToString(maxMemory) + \" where \" +\n+                bytesToString(memoryDedicatedToCounting) + \" was dedicated to group counting\");\n         }\n         maxCacheLength = memoryLeftForGroupCache / GROUP_ENTRY_SIZE;\n-        this.cache = arrayFactory.newDynamicByteArray( max( 1_000, maxCacheLength / 100 ), new byte[GROUP_ENTRY_SIZE], memoryTracker );\n+        this.cache = arrayFactory.newDynamicByteArray(max(1_000, maxCacheLength / 100), new byte[GROUP_ENTRY_SIZE], memoryTracker);\n     }\n \n     /**\n@@ -85,21 +86,21 @@ public class RelationshipGroupCache implements Iterable<RelationshipGroupRecord>\n      *\n      * @param nodeId node to increment group count for.\n      */\n-    public void incrementGroupCount( long nodeId )\n+    public void incrementGroupCount(long nodeId)\n     {\n-        int count = groupCount( nodeId );\n+        int count = groupCount(nodeId);\n         count++;\n-        if ( (count & ~0xFFFF) != 0 )\n+        if ((count & ~0xFFFF) != 0)\n         {\n             throw new IllegalStateException(\n-                    \"Invalid number of relationship groups for node \" + nodeId + \" \" + count );\n+              \"Invalid number of relationship groups for node \" + nodeId + \" \" + count);\n         }\n-        groupCountCache.setShort( nodeId, 0, (short) count );\n+        groupCountCache.setShort(nodeId, 0, (short) count);\n     }\n \n-    int groupCount( long nodeId )\n+    int groupCount(long nodeId)\n     {\n-        return groupCountCache.getShort( nodeId, 0 ) & 0xFFFF;\n+        return groupCountCache.getShort(nodeId, 0) & 0xFFFF;\n     }\n \n     /**\n@@ -121,27 +122,27 @@ public class RelationshipGroupCache implements Iterable<RelationshipGroupRecord>\n      * @param fromNodeId inclusive\n      * @return toNodeId exclusive\n      */\n-    public long prepare( long fromNodeId )\n+    public long prepare(long fromNodeId)\n     {\n         cache.clear(); // this will have all the \"first\" bytes set to 0, which means !inUse\n         this.fromNodeId = fromNodeId; // keep for use in put later on\n \n         highCacheId = 0;\n-        for ( long nodeId = fromNodeId; nodeId < highNodeId; nodeId++ )\n+        for (long nodeId = fromNodeId; nodeId < highNodeId; nodeId++)\n         {\n-            int count = groupCount( nodeId );\n-            if ( highCacheId + count > maxCacheLength )\n+            int count = groupCount(nodeId);\n+            if (highCacheId + count > maxCacheLength)\n             {\n                 // Cannot include this one, so up until the previous is good\n                 return this.toNodeId = nodeId;\n             }\n-            offsets.set( rebase( nodeId ), highCacheId );\n+            offsets.set(rebase(nodeId), highCacheId);\n             highCacheId += count;\n         }\n         return this.toNodeId = highNodeId;\n     }\n \n-    private long rebase( long toNodeId )\n+    private long rebase(long toNodeId)\n     {\n         return toNodeId - fromNodeId;\n     }\n@@ -154,53 +155,53 @@ public class RelationshipGroupCache implements Iterable<RelationshipGroupRecord>\n      * @param groupRecord {@link RelationshipGroupRecord} to cache.\n      * @return whether or not the group was cached, i.e. whether or not it was within the prepared range.\n      */\n-    public boolean put( RelationshipGroupRecord groupRecord )\n+    public boolean put(RelationshipGroupRecord groupRecord)\n     {\n         long nodeId = groupRecord.getOwningNode();\n         assert nodeId < highNodeId;\n-        if ( nodeId < fromNodeId || nodeId >= toNodeId )\n+        if (nodeId < fromNodeId || nodeId >= toNodeId)\n         {\n             return false;\n         }\n \n-        long baseIndex = offsets.get( rebase( nodeId ) );\n+        long baseIndex = offsets.get(rebase(nodeId));\n         // grouCount is extra validation, really\n-        int groupCount = groupCount( nodeId );\n-        long index = scanForFreeFrom( baseIndex, groupCount, groupRecord.getType(), nodeId );\n+        int groupCount = groupCount(nodeId);\n+        long index = scanForFreeFrom(baseIndex, groupCount, groupRecord.getType(), nodeId);\n \n         // Put the group at this index\n-        cache.setByte( index, 0, (byte) 1 );\n-        cache.set3ByteInt( index, 1, groupRecord.getType() );\n-        cache.set6ByteLong( index, 1 + 3, groupRecord.getFirstOut() );\n-        cache.set6ByteLong( index, 1 + 3 + 6, groupRecord.getFirstIn() );\n-        cache.set6ByteLong( index, 1 + 3 + 6 + 6, groupRecord.getFirstLoop() );\n+        cache.setByte(index, 0, (byte) 1);\n+        cache.set3ByteInt(index, 1, groupRecord.getType());\n+        cache.set6ByteLong(index, 1 + 3, groupRecord.getFirstOut());\n+        cache.set6ByteLong(index, 1 + 3 + 6, groupRecord.getFirstIn());\n+        cache.set6ByteLong(index, 1 + 3 + 6 + 6, groupRecord.getFirstLoop());\n         return true;\n     }\n \n-    private long scanForFreeFrom( long startIndex, int groupCount, int type, long owningNodeId )\n+    private long scanForFreeFrom(long startIndex, int groupCount, int type, long owningNodeId)\n     {\n         long desiredIndex = -1;\n         long freeIndex = -1;\n-        for ( int i = 0; i < groupCount; i++ )\n+        for (int i = 0; i < groupCount; i++)\n         {\n             long candidateIndex = startIndex + i;\n-            boolean free = cache.getByte( candidateIndex, 0 ) == 0;\n-            if ( free )\n+            boolean free = cache.getByte(candidateIndex, 0) == 0;\n+            if (free)\n             {\n                 freeIndex = candidateIndex;\n                 break;\n             }\n \n-            if ( desiredIndex == -1 )\n+            if (desiredIndex == -1)\n             {\n-                int existingType = cache.get3ByteInt( candidateIndex, 1 );\n-                if ( existingType == type )\n+                int existingType = cache.get3ByteInt(candidateIndex, 1);\n+                if (existingType == type)\n                 {\n                     throw new IllegalStateException(\n-                            \"Tried to put multiple groups with same type \" + type + \" for node \" + owningNodeId );\n+                      \"Tried to put multiple groups with same type \" + type + \" for node \" + owningNodeId);\n                 }\n \n-                if ( type < existingType )\n+                if (type < existingType)\n                 {\n                     // This means that the groups have arrived here out of order, please put this group\n                     // in the correct place, not at the end\n@@ -209,11 +210,11 @@ public class RelationshipGroupCache implements Iterable<RelationshipGroupRecord>\n             }\n         }\n \n-        if ( freeIndex == -1 )\n+        if (freeIndex == -1)\n         {\n-            throw new IllegalStateException( \"There's no room for me for startIndex:\" + startIndex +\n-                    \" with a group count of \" + groupCount + \". This means that there's an asymmetry between calls \" +\n-                    \"to incrementGroupCount and actual contents sent into put\" );\n+            throw new IllegalStateException(\"There's no room for me for startIndex:\" + startIndex +\n+              \" with a group count of \" + groupCount + \". This means that there's an asymmetry between calls \" +\n+              \"to incrementGroupCount and actual contents sent into put\");\n         }\n \n         // For the future: Instead of doing the sorting here right away be doing the relatively expensive move\n@@ -224,20 +225,20 @@ public class RelationshipGroupCache implements Iterable<RelationshipGroupRecord>\n         // will be almost entirely sorted, since we come here straight after import. Although if this thing\n         // is to be used as a generic relationship group defragmenter this sorting will have to be fixed\n         // to something like what is described above in this comment.\n-        if ( desiredIndex != -1 )\n+        if (desiredIndex != -1)\n         {\n-            moveRight( desiredIndex, freeIndex );\n+            moveRight(desiredIndex, freeIndex);\n             return desiredIndex;\n         }\n         return freeIndex;\n     }\n \n-    private void moveRight( long fromIndex, long toIndex )\n+    private void moveRight(long fromIndex, long toIndex)\n     {\n-        for ( long index = toIndex; index > fromIndex; index-- )\n+        for (long index = toIndex; index > fromIndex; index--)\n         {\n-            cache.get( index - 1, scratch );\n-            cache.set( index, scratch );\n+            cache.get(index - 1, scratch);\n+            cache.set(index, scratch);\n         }\n     }\n \n@@ -251,7 +252,7 @@ public class RelationshipGroupCache implements Iterable<RelationshipGroupRecord>\n         {\n             private long cursor;\n             private long nodeId = fromNodeId;\n-            private int countLeftForThisNode = groupCount( nodeId );\n+            private int countLeftForThisNode = groupCount(nodeId);\n \n             {\n                 findNextNodeWithGroupsIfNeeded();\n@@ -260,29 +261,29 @@ public class RelationshipGroupCache implements Iterable<RelationshipGroupRecord>\n             @Override\n             protected RelationshipGroupRecord fetchNextOrNull()\n             {\n-                while ( cursor < highCacheId )\n+                while (cursor < highCacheId)\n                 {\n                     RelationshipGroupRecord group = null;\n-                    if ( cache.getByte( cursor, 0 ) == 1 )\n+                    if (cache.getByte(cursor, 0) == 1)\n                     {\n                         // Here we have an alive group\n-                        group = new RelationshipGroupRecord( -1 ).initialize( true,\n-                                                                              cache.get3ByteInt( cursor, 1 ),\n-                                                                              cache.get6ByteLong( cursor, 1 + 3 ),\n-                                                                              cache.get6ByteLong( cursor, 1 + 3 + 6 ),\n-                                                                              cache.get6ByteLong( cursor, 1 + 3 + 6 + 6 ),\n-                                                                              nodeId,\n-                                                                              // Special: we want to convey information about how many groups are coming\n-                                                                              // after this one so that chains can be ordered accordingly in the store\n-                                                                              // so this isn't at all \"next\" in the true sense of chain next.\n-                                                                              countLeftForThisNode - 1 );\n+                        group = new RelationshipGroupRecord(-1).initialize(true,\n+                          cache.get3ByteInt(cursor, 1),\n+                          cache.get6ByteLong(cursor, 1 + 3),\n+                          cache.get6ByteLong(cursor, 1 + 3 + 6),\n+                          cache.get6ByteLong(cursor, 1 + 3 + 6 + 6),\n+                          nodeId,\n+                          // Special: we want to convey information about how many groups are coming\n+                          // after this one so that chains can be ordered accordingly in the store\n+                          // so this isn't at all \"next\" in the true sense of chain next.\n+                          countLeftForThisNode - 1);\n                     }\n \n                     cursor++;\n                     countLeftForThisNode--;\n                     findNextNodeWithGroupsIfNeeded();\n \n-                    if ( group != null )\n+                    if (group != null)\n                     {\n                         return group;\n                     }\n@@ -292,25 +293,25 @@ public class RelationshipGroupCache implements Iterable<RelationshipGroupRecord>\n \n             private void findNextNodeWithGroupsIfNeeded()\n             {\n-                if ( countLeftForThisNode == 0 )\n+                if (countLeftForThisNode == 0)\n                 {\n                     do\n                     {\n                         nodeId++;\n-                        countLeftForThisNode = nodeId >= groupCountCache.length() ? 0 : groupCount( nodeId );\n+                        countLeftForThisNode = nodeId >= groupCountCache.length() ? 0 : groupCount(nodeId);\n                     }\n-                    while ( countLeftForThisNode == 0 && nodeId < groupCountCache.length() );\n+                    while (countLeftForThisNode == 0 && nodeId < groupCountCache.length());\n                 }\n             }\n         };\n     }\n \n     @Override\n-    public void acceptMemoryStatsVisitor( MemoryStatsVisitor visitor )\n+    public void acceptMemoryStatsVisitor(MemoryStatsVisitor visitor)\n     {\n-        groupCountCache.acceptMemoryStatsVisitor( visitor );\n-        cache.acceptMemoryStatsVisitor( visitor );\n-        offsets.acceptMemoryStatsVisitor( visitor );\n+        groupCountCache.acceptMemoryStatsVisitor(visitor);\n+        cache.acceptMemoryStatsVisitor(visitor);\n+        offsets.acceptMemoryStatsVisitor(visitor);\n     }\n \n     @Override\n",
            "diff_size": 73
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
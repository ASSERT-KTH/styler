{
    "project_name": "griddynamics-jagger",
    "error_id": "143",
    "information": {
        "errors": [
            {
                "line": "92",
                "severity": "warning",
                "message": "Line is longer than 150 characters (found 155).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    public void tick(long time, LinkedHashMap<NodeId, WorkloadConfiguration> workloadConfigurations) {\n        for (Map.Entry<NodeId, WorkloadConfiguration> entry : new ArrayList<Map.Entry<NodeId, WorkloadConfiguration>>(workloadConfigurations.entrySet())) {\n            if (entry.getValue().getDelay() != delay) {\n                workloadConfigurations.put(entry.getKey(), WorkloadConfiguration.with(entry.getValue().getThreads(), delay));\n            }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/143/UserWorkload.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/143/UserWorkload.java\nindex ee1134421c6..fc8c60571f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/143/UserWorkload.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/143/UserWorkload.java\n@@ -89,7 +89,8 @@ public class UserWorkload {\n     }\n \n     public void tick(long time, LinkedHashMap<NodeId, WorkloadConfiguration> workloadConfigurations) {\n-        for (Map.Entry<NodeId, WorkloadConfiguration> entry : new ArrayList<Map.Entry<NodeId, WorkloadConfiguration>>(workloadConfigurations.entrySet())) {\n+        for (Map.Entry<NodeId, WorkloadConfiguration> entry : new ArrayList<Map.Entry<NodeId, WorkloadConfiguration>>(workloadConfigurations.entrySet( )\n+            ) ) {\n             if (entry.getValue().getDelay() != delay) {\n                 workloadConfigurations.put(entry.getKey(), WorkloadConfiguration.with(entry.getValue().getThreads(), delay));\n             }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/143/UserWorkload.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/143/UserWorkload.java\nindex ee1134421c6..f36c3b0e60e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/143/UserWorkload.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/143/UserWorkload.java\n@@ -89,7 +89,8 @@ public class UserWorkload {\n     }\n \n     public void tick(long time, LinkedHashMap<NodeId, WorkloadConfiguration> workloadConfigurations) {\n-        for (Map.Entry<NodeId, WorkloadConfiguration> entry : new ArrayList<Map.Entry<NodeId, WorkloadConfiguration>>(workloadConfigurations.entrySet())) {\n+        for (Map.Entry<NodeId, WorkloadConfiguration> entry : new ArrayList<Map.Entry<NodeId, WorkloadConfiguration>>(\n+                workloadConfigurations.entrySet())) {\n             if (entry.getValue().getDelay() != delay) {\n                 workloadConfigurations.put(entry.getKey(), WorkloadConfiguration.with(entry.getValue().getThreads(), delay));\n             }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 155).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/143/UserWorkload.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/143/UserWorkload.java\nindex ee1134421c6..e844fc60f6a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/143/UserWorkload.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/143/UserWorkload.java\n@@ -99,4 +99,4 @@ public class UserWorkload {\n             group.tick(time, workloadConfigurations);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/143/UserWorkload.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/143/UserWorkload.java\nindex ee1134421c6..fc8c60571f2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/143/UserWorkload.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/143/UserWorkload.java\n@@ -89,7 +89,8 @@ public class UserWorkload {\n     }\n \n     public void tick(long time, LinkedHashMap<NodeId, WorkloadConfiguration> workloadConfigurations) {\n-        for (Map.Entry<NodeId, WorkloadConfiguration> entry : new ArrayList<Map.Entry<NodeId, WorkloadConfiguration>>(workloadConfigurations.entrySet())) {\n+        for (Map.Entry<NodeId, WorkloadConfiguration> entry : new ArrayList<Map.Entry<NodeId, WorkloadConfiguration>>(workloadConfigurations.entrySet( )\n+            ) ) {\n             if (entry.getValue().getDelay() != delay) {\n                 workloadConfigurations.put(entry.getKey(), WorkloadConfiguration.with(entry.getValue().getThreads(), delay));\n             }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'ArrayList' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 13, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/143/UserWorkload.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/143/UserWorkload.java\nindex ee1134421c6..e25c8a13146 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/143/UserWorkload.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/143/UserWorkload.java\n@@ -89,8 +89,10 @@ public class UserWorkload {\n     }\n \n     public void tick(long time, LinkedHashMap<NodeId, WorkloadConfiguration> workloadConfigurations) {\n-        for (Map.Entry<NodeId, WorkloadConfiguration> entry : new ArrayList<Map.Entry<NodeId, WorkloadConfiguration>>(workloadConfigurations.entrySet())) {\n-            if (entry.getValue().getDelay() != delay) {\n+        for (Map.Entry<NodeId, WorkloadConfiguration> entry : new\n+\n+            ArrayList<Map.Entry<NodeId, WorkloadConfiguration>>(workloadConfigurations.entrySet())) {\n+             if (entry.getValue().getDelay() != delay) {\n                 workloadConfigurations.put(entry.getKey(), WorkloadConfiguration.with(entry.getValue().getThreads(), delay));\n             }\n         }\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "952",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/952/StoreTokens.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/952/StoreTokens.java\nindex a66f33cae73..781887480fd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/952/StoreTokens.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/952/StoreTokens.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import java.util.List;\n@@ -50,26 +51,26 @@ public class StoreTokens\n      *\n      * @param neoStores The {@link NeoStores} to read tokens from.\n      */\n-    public static TokensLoader allReadableTokens( NeoStores neoStores )\n+    public static TokensLoader allReadableTokens(NeoStores neoStores)\n     {\n         return new TokensLoader()\n         {\n             @Override\n-            public List<NamedToken> getPropertyKeyTokens( PageCursorTracer cursorTracer )\n+            public List<NamedToken> getPropertyKeyTokens(PageCursorTracer cursorTracer)\n             {\n-                return neoStores.getPropertyKeyTokenStore().getAllReadableTokens( cursorTracer );\n+                return neoStores.getPropertyKeyTokenStore().getAllReadableTokens(cursorTracer);\n             }\n \n             @Override\n-            public List<NamedToken> getLabelTokens( PageCursorTracer cursorTracer )\n+            public List<NamedToken> getLabelTokens(PageCursorTracer cursorTracer)\n             {\n-                return neoStores.getLabelTokenStore().getAllReadableTokens( cursorTracer );\n+                return neoStores.getLabelTokenStore().getAllReadableTokens(cursorTracer);\n             }\n \n             @Override\n-            public List<NamedToken> getRelationshipTypeTokens( PageCursorTracer cursorTracer )\n+            public List<NamedToken> getRelationshipTypeTokens(PageCursorTracer cursorTracer)\n             {\n-                return neoStores.getRelationshipTypeTokenStore().getAllReadableTokens( cursorTracer );\n+                return neoStores.getRelationshipTypeTokenStore().getAllReadableTokens(cursorTracer);\n             }\n         };\n     }\n@@ -81,26 +82,26 @@ public class StoreTokens\n      *\n      * @param neoStores The {@link NeoStores} to read tokens from.\n      */\n-    public static TokensLoader allTokens( NeoStores neoStores )\n+    public static TokensLoader allTokens(NeoStores neoStores)\n     {\n         return new TokensLoader()\n         {\n             @Override\n-            public List<NamedToken> getPropertyKeyTokens( PageCursorTracer cursorTracer )\n+            public List<NamedToken> getPropertyKeyTokens(PageCursorTracer cursorTracer)\n             {\n-                return neoStores.getPropertyKeyTokenStore().getTokens( cursorTracer );\n+                return neoStores.getPropertyKeyTokenStore().getTokens(cursorTracer);\n             }\n \n             @Override\n-            public List<NamedToken> getLabelTokens( PageCursorTracer cursorTracer )\n+            public List<NamedToken> getLabelTokens(PageCursorTracer cursorTracer)\n             {\n-                return neoStores.getLabelTokenStore().getTokens( cursorTracer );\n+                return neoStores.getLabelTokenStore().getTokens(cursorTracer);\n             }\n \n             @Override\n-            public List<NamedToken> getRelationshipTypeTokens( PageCursorTracer cursorTracer )\n+            public List<NamedToken> getRelationshipTypeTokens(PageCursorTracer cursorTracer)\n             {\n-                return neoStores.getRelationshipTypeTokenStore().getTokens( cursorTracer );\n+                return neoStores.getRelationshipTypeTokenStore().getTokens(cursorTracer);\n             }\n         };\n     }\n@@ -114,23 +115,24 @@ public class StoreTokens\n      * @param neoStores The {@link NeoStores} from which to load the initial tokens.\n      * @return TokenHolders that can be used for reading tokens, but cannot create new ones.\n      */\n-    public static TokenHolders readOnlyTokenHolders( NeoStores neoStores, PageCursorTracer cursorTracer )\n+    public static TokenHolders readOnlyTokenHolders(NeoStores neoStores, PageCursorTracer cursorTracer)\n     {\n-        TokenHolder propertyKeyTokens = createReadOnlyTokenHolder( TokenHolder.TYPE_PROPERTY_KEY );\n-        TokenHolder labelTokens = createReadOnlyTokenHolder( TokenHolder.TYPE_LABEL );\n-        TokenHolder relationshipTypeTokens = createReadOnlyTokenHolder( TokenHolder.TYPE_RELATIONSHIP_TYPE );\n-        TokenHolders tokenHolders = new TokenHolders( propertyKeyTokens, labelTokens, relationshipTypeTokens );\n-        tokenHolders.setInitialTokens( allReadableTokens( neoStores ), cursorTracer );\n+        TokenHolder propertyKeyTokens = createReadOnlyTokenHolder(TokenHolder.TYPE_PROPERTY_KEY);\n+        TokenHolder labelTokens = createReadOnlyTokenHolder(TokenHolder.TYPE_LABEL);\n+        TokenHolder relationshipTypeTokens = createReadOnlyTokenHolder(TokenHolder.TYPE_RELATIONSHIP_TYPE);\n+        TokenHolders tokenHolders = new TokenHolders(propertyKeyTokens, labelTokens, relationshipTypeTokens);\n+        tokenHolders.setInitialTokens(allReadableTokens(neoStores), cursorTracer);\n         return tokenHolders;\n     }\n \n     /**\n      * Create an empty read-only token holder of the given type.\n+     *\n      * @param tokenType one of {@link TokenHolder#TYPE_LABEL}, {@link TokenHolder#TYPE_RELATIONSHIP_TYPE}, or {@link TokenHolder#TYPE_PROPERTY_KEY}.\n      * @return An empty read-only token holder.\n      */\n-    public static TokenHolder createReadOnlyTokenHolder( String tokenType )\n+    public static TokenHolder createReadOnlyTokenHolder(String tokenType)\n     {\n-        return new DelegatingTokenHolder( new ReadOnlyTokenCreator(), tokenType );\n+        return new DelegatingTokenHolder(new ReadOnlyTokenCreator(), tokenType);\n     }\n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/952/StoreTokens.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/952/StoreTokens.java\nindex a66f33cae73..0b59f788035 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/952/StoreTokens.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/952/StoreTokens.java\n@@ -133,4 +133,4 @@ public class StoreTokens\n     {\n         return new DelegatingTokenHolder( new ReadOnlyTokenCreator(), tokenType );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
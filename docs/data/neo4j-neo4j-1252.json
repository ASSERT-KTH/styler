{
    "project_name": "neo4j-neo4j",
    "error_id": "1252",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "93",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "252",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "263",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "293",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "295",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "305",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "315",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "370",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "388",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "393",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "397",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1252/SchemaDescriptorLookupSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1252/SchemaDescriptorLookupSet.java\nindex 4d322a65614..cf86878fbdc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1252/SchemaDescriptorLookupSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1252/SchemaDescriptorLookupSet.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.schema;\n \n import org.eclipse.collections.api.map.primitive.MutableIntObjectMap;\n@@ -86,22 +87,22 @@ public class SchemaDescriptorLookupSet<T extends SchemaDescriptorSupplier>\n      * Cheap way of finding out whether or not there are any descriptors matching the set of entity token ids and the property key id.\n      *\n      * @param entityTokenIds complete list of entity token ids for the entity to check.\n-     * @param propertyKey a property key id to check.\n+     * @param propertyKey    a property key id to check.\n      * @return {@code true} if there are one or more descriptors matching the given tokens.\n      */\n-    public boolean has( long[] entityTokenIds, int propertyKey )\n+    public boolean has(long[] entityTokenIds, int propertyKey)\n     {\n         // Abort right away if there are no descriptors at all\n-        if ( isEmpty() )\n+        if (isEmpty())\n         {\n             return false;\n         }\n \n         // Check if there are any descriptors that matches any of the first (or only) entity token\n-        for ( long entityTokenId : entityTokenIds )\n+        for (long entityTokenId : entityTokenIds)\n         {\n-            PropertyMultiSet set = byEntityToken.get( toIntExact( entityTokenId ) );\n-            if ( set != null && set.has( propertyKey ) )\n+            PropertyMultiSet set = byEntityToken.get(toIntExact(entityTokenId));\n+            if (set != null && set.has(propertyKey))\n             {\n                 return true;\n             }\n@@ -115,9 +116,9 @@ public class SchemaDescriptorLookupSet<T extends SchemaDescriptorSupplier>\n      * @param entityTokenId entity token id to check.\n      * @return {@code true} if there are one or more descriptors matching the given entity token.\n      */\n-    public boolean has( int entityTokenId )\n+    public boolean has(int entityTokenId)\n     {\n-        return byEntityToken.containsKey( entityTokenId );\n+        return byEntityToken.containsKey(entityTokenId);\n     }\n \n     /**\n@@ -125,11 +126,11 @@ public class SchemaDescriptorLookupSet<T extends SchemaDescriptorSupplier>\n      *\n      * @param schemaDescriptor the descriptor to add.\n      */\n-    public void add( T schemaDescriptor )\n+    public void add(T schemaDescriptor)\n     {\n-        for ( int entityTokenId : schemaDescriptor.schema().getEntityTokenIds() )\n+        for (int entityTokenId : schemaDescriptor.schema().getEntityTokenIds())\n         {\n-            byEntityToken.getIfAbsentPut( entityTokenId, PropertyMultiSet::new ).add( schemaDescriptor );\n+            byEntityToken.getIfAbsentPut(entityTokenId, PropertyMultiSet::new).add(schemaDescriptor);\n         }\n     }\n \n@@ -139,14 +140,14 @@ public class SchemaDescriptorLookupSet<T extends SchemaDescriptorSupplier>\n      *\n      * @param schemaDescriptor the descriptor to remove.\n      */\n-    public void remove( T schemaDescriptor )\n+    public void remove(T schemaDescriptor)\n     {\n-        for ( int entityTokenId : schemaDescriptor.schema().getEntityTokenIds() )\n+        for (int entityTokenId : schemaDescriptor.schema().getEntityTokenIds())\n         {\n-            PropertyMultiSet any = byEntityToken.get( entityTokenId );\n-            if ( any != null && any.remove( schemaDescriptor ) )\n+            PropertyMultiSet any = byEntityToken.get(entityTokenId);\n+            if (any != null && any.remove(schemaDescriptor))\n             {\n-                byEntityToken.remove( entityTokenId );\n+                byEntityToken.remove(entityTokenId);\n             }\n         }\n     }\n@@ -155,18 +156,18 @@ public class SchemaDescriptorLookupSet<T extends SchemaDescriptorSupplier>\n      * Collects descriptors matching the given complete list of entity tokens and property key tokens.\n      * I.e. all tokens of the matching descriptors can be found in the given lists of tokens.\n      *\n-     * @param into {@link Collection} to add matching descriptors into.\n-     * @param entityTokenIds complete and sorted array of entity token ids for the entity.\n+     * @param into             {@link Collection} to add matching descriptors into.\n+     * @param entityTokenIds   complete and sorted array of entity token ids for the entity.\n      * @param sortedProperties complete and sorted array of property key token ids for the entity.\n      */\n-    public void matchingDescriptorsForCompleteListOfProperties( Collection<T> into, long[] entityTokenIds, int[] sortedProperties )\n+    public void matchingDescriptorsForCompleteListOfProperties(Collection<T> into, long[] entityTokenIds, int[] sortedProperties)\n     {\n-        for ( long entityTokenId : entityTokenIds )\n+        for (long entityTokenId : entityTokenIds)\n         {\n-            PropertyMultiSet first = byEntityToken.get( toIntExact( entityTokenId ) );\n-            if ( first != null )\n+            PropertyMultiSet first = byEntityToken.get(toIntExact(entityTokenId));\n+            if (first != null)\n             {\n-                first.collectForCompleteListOfProperties( into, sortedProperties );\n+                first.collectForCompleteListOfProperties(into, sortedProperties);\n             }\n         }\n     }\n@@ -178,18 +179,18 @@ public class SchemaDescriptorLookupSet<T extends SchemaDescriptorSupplier>\n      * This is for a scenario where the complete list of property key tokens isn't known when calling this method and may\n      * collect additional descriptors that in the end isn't relevant for the specific entity.\n      *\n-     * @param into {@link Collection} to add matching descriptors into.\n-     * @param entityTokenIds complete and sorted array of entity token ids for the entity.\n+     * @param into             {@link Collection} to add matching descriptors into.\n+     * @param entityTokenIds   complete and sorted array of entity token ids for the entity.\n      * @param sortedProperties complete and sorted array of property key token ids for the entity.\n      */\n-    public void matchingDescriptorsForPartialListOfProperties( Collection<T> into, long[] entityTokenIds, int[] sortedProperties )\n+    public void matchingDescriptorsForPartialListOfProperties(Collection<T> into, long[] entityTokenIds, int[] sortedProperties)\n     {\n-        for ( long entityTokenId : entityTokenIds )\n+        for (long entityTokenId : entityTokenIds)\n         {\n-            PropertyMultiSet first = byEntityToken.get( toIntExact( entityTokenId ) );\n-            if ( first != null )\n+            PropertyMultiSet first = byEntityToken.get(toIntExact(entityTokenId));\n+            if (first != null)\n             {\n-                first.collectForPartialListOfProperties( into, sortedProperties );\n+                first.collectForPartialListOfProperties(into, sortedProperties);\n             }\n         }\n     }\n@@ -197,17 +198,17 @@ public class SchemaDescriptorLookupSet<T extends SchemaDescriptorSupplier>\n     /**\n      * Collects descriptors matching the given complete list of entity tokens.\n      *\n-     * @param into {@link Collection} to add matching descriptors into.\n+     * @param into           {@link Collection} to add matching descriptors into.\n      * @param entityTokenIds complete and sorted array of entity token ids for the entity.\n      */\n-    public void matchingDescriptors( Collection<T> into, long[] entityTokenIds )\n+    public void matchingDescriptors(Collection<T> into, long[] entityTokenIds)\n     {\n-        for ( long entityTokenId : entityTokenIds )\n+        for (long entityTokenId : entityTokenIds)\n         {\n-            PropertyMultiSet set = byEntityToken.get( toIntExact( entityTokenId ) );\n-            if ( set != null )\n+            PropertyMultiSet set = byEntityToken.get(toIntExact(entityTokenId));\n+            if (set != null)\n             {\n-                set.collectAll( into );\n+                set.collectAll(into);\n             }\n         }\n     }\n@@ -238,123 +239,120 @@ public class SchemaDescriptorLookupSet<T extends SchemaDescriptorSupplier>\n         private final MutableIntObjectMap<PropertySet> next = IntObjectMaps.mutable.empty();\n         private final MutableIntObjectMap<Set<T>> byAnyProperty = IntObjectMaps.mutable.empty();\n \n-        void add( T schemaDescriptor )\n+        void add(T schemaDescriptor)\n         {\n             // Add optimized path for when property list is fully known\n-            descriptors.add( schemaDescriptor );\n-            int[] propertyKeyIds = sortedPropertyKeyIds( schemaDescriptor.schema() );\n+            descriptors.add(schemaDescriptor);\n+            int[] propertyKeyIds = sortedPropertyKeyIds(schemaDescriptor.schema());\n             PropertySchemaType propertySchemaType = schemaDescriptor.schema().propertySchemaType();\n-            if ( propertySchemaType == COMPLETE_ALL_TOKENS )\n+            if (propertySchemaType == COMPLETE_ALL_TOKENS)\n             {\n                 // Just add the first token id to the top level set\n-                next.getIfAbsentPut( propertyKeyIds[0], PropertySet::new ).add( schemaDescriptor, propertyKeyIds, 0 );\n-            }\n-            else if ( propertySchemaType == PARTIAL_ANY_TOKEN )\n+                next.getIfAbsentPut(propertyKeyIds[0], PropertySet::new).add(schemaDescriptor, propertyKeyIds, 0);\n+            } else if (propertySchemaType == PARTIAL_ANY_TOKEN)\n             {\n                 // The internal data structure is built and optimized for when all property key tokens are required to match\n                 // a particular descriptor. However to support the partial type, where any property key may match\n                 // we will have to add such descriptors to all property key sets and pretend that each is the only one.\n-                for ( int propertyKeyId : propertyKeyIds )\n+                for (int propertyKeyId : propertyKeyIds)\n                 {\n-                    next.getIfAbsentPut( propertyKeyId, PropertySet::new ).add( schemaDescriptor, new int[]{propertyKeyId}, 0 );\n+                    next.getIfAbsentPut(propertyKeyId, PropertySet::new).add(schemaDescriptor, new int[] {propertyKeyId}, 0);\n                 }\n-            }\n-            else\n+            } else\n             {\n-                throw new UnsupportedOperationException( \"Unknown property schema type \" + propertySchemaType );\n+                throw new UnsupportedOperationException(\"Unknown property schema type \" + propertySchemaType);\n             }\n \n             // Add fall-back path for when property list is only partly known\n-            for ( int keyId : propertyKeyIds )\n+            for (int keyId : propertyKeyIds)\n             {\n-                byAnyProperty.getIfAbsentPut( keyId, HashSet::new ).add( schemaDescriptor );\n+                byAnyProperty.getIfAbsentPut(keyId, HashSet::new).add(schemaDescriptor);\n             }\n         }\n \n         /**\n          * Removes the {@link SchemaDescriptor} from this multi-set.\n+         *\n          * @param schemaDescriptor the {@link SchemaDescriptor} to remove.\n          * @return {@code true} if this multi-set ended up empty after removing this descriptor.\n          */\n-        boolean remove( T schemaDescriptor )\n+        boolean remove(T schemaDescriptor)\n         {\n             // Remove from the optimized path\n-            descriptors.remove( schemaDescriptor );\n-            int[] propertyKeyIds = sortedPropertyKeyIds( schemaDescriptor.schema() );\n+            descriptors.remove(schemaDescriptor);\n+            int[] propertyKeyIds = sortedPropertyKeyIds(schemaDescriptor.schema());\n             PropertySchemaType propertySchemaType = schemaDescriptor.schema().propertySchemaType();\n-            if ( propertySchemaType == COMPLETE_ALL_TOKENS )\n+            if (propertySchemaType == COMPLETE_ALL_TOKENS)\n             {\n                 int firstPropertyKeyId = propertyKeyIds[0];\n-                PropertySet firstPropertySet = next.get( firstPropertyKeyId );\n-                if ( firstPropertySet != null && firstPropertySet.remove( schemaDescriptor, propertyKeyIds, 0 ) )\n+                PropertySet firstPropertySet = next.get(firstPropertyKeyId);\n+                if (firstPropertySet != null && firstPropertySet.remove(schemaDescriptor, propertyKeyIds, 0))\n                 {\n-                    next.remove( firstPropertyKeyId );\n+                    next.remove(firstPropertyKeyId);\n                 }\n-            }\n-            else if ( propertySchemaType == PARTIAL_ANY_TOKEN )\n+            } else if (propertySchemaType == PARTIAL_ANY_TOKEN)\n             {\n-                for ( int propertyKeyId : propertyKeyIds )\n+                for (int propertyKeyId : propertyKeyIds)\n                 {\n-                    PropertySet propertySet = next.get( propertyKeyId );\n-                    if ( propertySet != null && propertySet.remove( schemaDescriptor, new int[]{propertyKeyId}, 0 ) )\n+                    PropertySet propertySet = next.get(propertyKeyId);\n+                    if (propertySet != null && propertySet.remove(schemaDescriptor, new int[] {propertyKeyId}, 0))\n                     {\n-                        next.remove( propertyKeyId );\n+                        next.remove(propertyKeyId);\n                     }\n                 }\n-            }\n-            else\n+            } else\n             {\n-                throw new UnsupportedOperationException( \"Unknown property schema type \" + propertySchemaType );\n+                throw new UnsupportedOperationException(\"Unknown property schema type \" + propertySchemaType);\n             }\n \n             // Remove from the fall-back path\n-            for ( int keyId : propertyKeyIds )\n+            for (int keyId : propertyKeyIds)\n             {\n-                Set<T> byProperty = byAnyProperty.get( keyId );\n-                if ( byProperty != null )\n+                Set<T> byProperty = byAnyProperty.get(keyId);\n+                if (byProperty != null)\n                 {\n-                    byProperty.remove( schemaDescriptor );\n-                    if ( byProperty.isEmpty() )\n+                    byProperty.remove(schemaDescriptor);\n+                    if (byProperty.isEmpty())\n                     {\n-                        byAnyProperty.remove( keyId );\n+                        byAnyProperty.remove(keyId);\n                     }\n                 }\n             }\n             return descriptors.isEmpty() && next.isEmpty();\n         }\n \n-        void collectForCompleteListOfProperties( Collection<T> descriptors, int[] sortedProperties )\n+        void collectForCompleteListOfProperties(Collection<T> descriptors, int[] sortedProperties)\n         {\n-            for ( int i = 0; i < sortedProperties.length; i++ )\n+            for (int i = 0; i < sortedProperties.length; i++)\n             {\n-                PropertySet firstSet = next.get( sortedProperties[i] );\n-                if ( firstSet != null )\n+                PropertySet firstSet = next.get(sortedProperties[i]);\n+                if (firstSet != null)\n                 {\n-                    firstSet.collectForCompleteListOfProperties( descriptors, sortedProperties, i );\n+                    firstSet.collectForCompleteListOfProperties(descriptors, sortedProperties, i);\n                 }\n             }\n         }\n \n-        void collectForPartialListOfProperties( Collection<T> descriptors, int[] sortedProperties )\n+        void collectForPartialListOfProperties(Collection<T> descriptors, int[] sortedProperties)\n         {\n-            for ( int propertyKeyId : sortedProperties )\n+            for (int propertyKeyId : sortedProperties)\n             {\n-                Set<T> propertyDescriptors = byAnyProperty.get( propertyKeyId );\n-                if ( propertyDescriptors != null )\n+                Set<T> propertyDescriptors = byAnyProperty.get(propertyKeyId);\n+                if (propertyDescriptors != null)\n                 {\n-                    descriptors.addAll( propertyDescriptors );\n+                    descriptors.addAll(propertyDescriptors);\n                 }\n             }\n         }\n \n-        void collectAll( Collection<T> descriptors )\n+        void collectAll(Collection<T> descriptors)\n         {\n-            descriptors.addAll( this.descriptors );\n+            descriptors.addAll(this.descriptors);\n         }\n \n-        boolean has( int propertyKey )\n+        boolean has(int propertyKey)\n         {\n-            return byAnyProperty.containsKey( propertyKey );\n+            return byAnyProperty.containsKey(propertyKey);\n         }\n     }\n \n@@ -369,68 +367,66 @@ public class SchemaDescriptorLookupSet<T extends SchemaDescriptorSupplier>\n         private final Set<T> fullDescriptors = new HashSet<>();\n         private final MutableIntObjectMap<PropertySet> next = IntObjectMaps.mutable.empty();\n \n-        void add( T schemaDescriptor, int[] propertyKeyIds, int cursor )\n+        void add(T schemaDescriptor, int[] propertyKeyIds, int cursor)\n         {\n-            if ( cursor == propertyKeyIds.length - 1 )\n+            if (cursor == propertyKeyIds.length - 1)\n             {\n-                fullDescriptors.add( schemaDescriptor );\n-            }\n-            else\n+                fullDescriptors.add(schemaDescriptor);\n+            } else\n             {\n                 int nextPropertyKeyId = propertyKeyIds[++cursor];\n-                next.getIfAbsentPut( nextPropertyKeyId, PropertySet::new ).add( schemaDescriptor, propertyKeyIds, cursor );\n+                next.getIfAbsentPut(nextPropertyKeyId, PropertySet::new).add(schemaDescriptor, propertyKeyIds, cursor);\n             }\n         }\n \n         /**\n          * @param schemaDescriptor {@link SchemaDescriptor} to remove.\n-         * @param propertyKeyIds the sorted property key ids for this schema.\n-         * @param cursor which property key among the sorted property keys that this set deals with.\n+         * @param propertyKeyIds   the sorted property key ids for this schema.\n+         * @param cursor           which property key among the sorted property keys that this set deals with.\n          * @return {@code true} if this {@link PropertySet} ends up empty after this removal.\n          */\n-        boolean remove( T schemaDescriptor, int[] propertyKeyIds, int cursor )\n+        boolean remove(T schemaDescriptor, int[] propertyKeyIds, int cursor)\n         {\n-            if ( cursor == propertyKeyIds.length - 1 )\n+            if (cursor == propertyKeyIds.length - 1)\n             {\n-                fullDescriptors.remove( schemaDescriptor );\n-            }\n-            else\n+                fullDescriptors.remove(schemaDescriptor);\n+            } else\n             {\n                 int nextPropertyKeyId = propertyKeyIds[++cursor];\n-                PropertySet propertySet = next.get( nextPropertyKeyId );\n-                if ( propertySet != null && propertySet.remove( schemaDescriptor, propertyKeyIds, cursor ) )\n+                PropertySet propertySet = next.get(nextPropertyKeyId);\n+                if (propertySet != null && propertySet.remove(schemaDescriptor, propertyKeyIds, cursor))\n                 {\n-                    next.remove( nextPropertyKeyId );\n+                    next.remove(nextPropertyKeyId);\n                 }\n             }\n             return fullDescriptors.isEmpty() && next.isEmpty();\n         }\n \n-        void collectForCompleteListOfProperties( Collection<T> descriptors, int[] sortedProperties, int cursor )\n+        void collectForCompleteListOfProperties(Collection<T> descriptors, int[] sortedProperties, int cursor)\n         {\n-            descriptors.addAll( fullDescriptors );\n-            if ( !next.isEmpty() )\n+            descriptors.addAll(fullDescriptors);\n+            if (!next.isEmpty())\n             {\n-                for ( int i = cursor + 1; i < sortedProperties.length; i++ )\n+                for (int i = cursor + 1; i < sortedProperties.length; i++)\n                 {\n-                    PropertySet nextSet = next.get( sortedProperties[i] );\n-                    if ( nextSet != null )\n+                    PropertySet nextSet = next.get(sortedProperties[i]);\n+                    if (nextSet != null)\n                     {\n-                        nextSet.collectForCompleteListOfProperties( descriptors, sortedProperties, i );\n+                        nextSet.collectForCompleteListOfProperties(descriptors, sortedProperties, i);\n                     }\n                 }\n             }\n         }\n     }\n \n-    private static int[] sortedPropertyKeyIds( SchemaDescriptor schemaDescriptor )\n+    private static int[] sortedPropertyKeyIds(SchemaDescriptor schemaDescriptor)\n     {\n         int[] tokenIds = schemaDescriptor.getPropertyIds();\n-        if ( tokenIds.length > 1 )\n+        if (tokenIds.length > 1)\n         {\n             // Clone it because we don't know if the array was an internal array that the descriptor handed out\n-            tokenIds = Arrays.copyOf( tokenIds, tokenIds.length );\n-            Arrays.sort( tokenIds );\n+            tokenIds = Arrays.copyOf(tokenIds, tokenIds.length);\n+            Arrays.sort(tokenIds);\n         }\n         return tokenIds;\n     }\n",
            "diff_size": 115
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "27",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/27/MappedNodeDataLookup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/27/MappedNodeDataLookup.java\nindex ebe12205b41..7d9e3f18112 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/27/MappedNodeDataLookup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/27/MappedNodeDataLookup.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import org.eclipse.collections.api.map.primitive.MutableLongObjectMap;\n@@ -38,8 +39,8 @@ class MappedNodeDataLookup implements RelationshipCreator.NodeDataLookup\n     private final PageCursorTracer cursorTracer;\n     private final MemoryTracker memoryTracker;\n \n-    MappedNodeDataLookup( MutableLongObjectMap<NodeContext> contexts, RelationshipGroupGetter relGroupGetter, RecordAccessSet recordChanges,\n-            PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+    MappedNodeDataLookup(MutableLongObjectMap<NodeContext> contexts, RelationshipGroupGetter relGroupGetter, RecordAccessSet recordChanges,\n+                         PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n     {\n         this.contexts = contexts;\n         this.relGroupGetter = relGroupGetter;\n@@ -49,35 +50,35 @@ class MappedNodeDataLookup implements RelationshipCreator.NodeDataLookup\n     }\n \n     @Override\n-    public RecordProxy<RelationshipRecord,Void> entryPoint( long nodeId, int type, int dir )\n+    public RecordProxy<RelationshipRecord, Void> entryPoint(long nodeId, int type, int dir)\n     {\n-        NodeContext byNode = contexts.get( nodeId );\n-        if ( byNode != null )\n+        NodeContext byNode = contexts.get(nodeId);\n+        if (byNode != null)\n         {\n-            NodeContext.DenseContext context = byNode.denseContextIfExists( type );\n-            if ( context != null )\n+            NodeContext.DenseContext context = byNode.denseContextIfExists(type);\n+            if (context != null)\n             {\n-                return context.entryPoint( dir );\n+                return context.entryPoint(dir);\n             }\n         }\n         return null;\n     }\n \n     @Override\n-    public RecordProxy<RelationshipGroupRecord,Integer> group( long nodeId, int type, boolean create )\n+    public RecordProxy<RelationshipGroupRecord, Integer> group(long nodeId, int type, boolean create)\n     {\n         // (Temporarily?) we can create groups lazily here\n-        NodeContext nodeContext = contexts.getIfAbsentPutWithKey( nodeId,\n-                n -> NodeContext.createNodeContext( recordChanges.getNodeRecords().getOrLoad( n, null, cursorTracer ), memoryTracker ) );\n-        NodeContext.DenseContext context = nodeContext.denseContext( type );\n-        RecordProxy<RelationshipGroupRecord,Integer> group = context.group();\n-        if ( group == null )\n+        NodeContext nodeContext = contexts.getIfAbsentPutWithKey(nodeId,\n+          n -> NodeContext.createNodeContext(recordChanges.getNodeRecords().getOrLoad(n, null, cursorTracer), memoryTracker));\n+        NodeContext.DenseContext context = nodeContext.denseContext(type);\n+        RecordProxy<RelationshipGroupRecord, Integer> group = context.group();\n+        if (group == null)\n         {\n-            RecordProxy<NodeRecord,Void> nodeChange = recordChanges.getNodeRecords().getOrLoad( nodeId, null, cursorTracer );\n+            RecordProxy<NodeRecord, Void> nodeChange = recordChanges.getNodeRecords().getOrLoad(nodeId, null, cursorTracer);\n             group = create\n-                    ? relGroupGetter.getOrCreateRelationshipGroup( nodeChange, type, recordChanges.getRelGroupRecords() )\n-                    : relGroupGetter.getRelationshipGroup( nodeChange.forReadingLinkage(), type, recordChanges.getRelGroupRecords(), EMPTY ).group();\n-            context.setGroup( group );\n+              ? relGroupGetter.getOrCreateRelationshipGroup(nodeChange, type, recordChanges.getRelGroupRecords())\n+              : relGroupGetter.getRelationshipGroup(nodeChange.forReadingLinkage(), type, recordChanges.getRelGroupRecords(), EMPTY).group();\n+            context.setGroup(group);\n         }\n         return group;\n     }\n@@ -85,14 +86,14 @@ class MappedNodeDataLookup implements RelationshipCreator.NodeDataLookup\n     /**\n      * Reads group from recordChanges, but also caches the group in the internal context.\n      */\n-    public RecordProxy<RelationshipGroupRecord,Integer> group( long groupId )\n+    public RecordProxy<RelationshipGroupRecord, Integer> group(long groupId)\n     {\n-        RecordProxy<RelationshipGroupRecord,Integer> groupProxy = recordChanges.getRelGroupRecords().getOrLoad( groupId, null, cursorTracer );\n+        RecordProxy<RelationshipGroupRecord, Integer> groupProxy = recordChanges.getRelGroupRecords().getOrLoad(groupId, null, cursorTracer);\n         RelationshipGroupRecord group = groupProxy.forReadingData();\n-        NodeContext nodeContext = contexts.getIfAbsentPutWithKey( group.getOwningNode(),\n-                n -> NodeContext.createNodeContext( recordChanges.getNodeRecords().getOrLoad( n, null, cursorTracer ), memoryTracker ) );\n-        NodeContext.DenseContext context = nodeContext.denseContext( group.getType() );\n-        context.setGroup( groupProxy );\n+        NodeContext nodeContext = contexts.getIfAbsentPutWithKey(group.getOwningNode(),\n+          n -> NodeContext.createNodeContext(recordChanges.getNodeRecords().getOrLoad(n, null, cursorTracer), memoryTracker));\n+        NodeContext.DenseContext context = nodeContext.denseContext(group.getType());\n+        context.setGroup(groupProxy);\n         return groupProxy;\n     }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/27/MappedNodeDataLookup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/27/MappedNodeDataLookup.java\nindex ebe12205b41..a0198f76040 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/27/MappedNodeDataLookup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/27/MappedNodeDataLookup.java\n@@ -95,4 +95,4 @@ class MappedNodeDataLookup implements RelationshipCreator.NodeDataLookup\n         context.setGroup( groupProxy );\n         return groupProxy;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2490",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "98",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "143",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "167",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2490/DurationFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2490/DurationFunction.java\nindex 92f5a3c8fe6..9bb34322b63 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2490/DurationFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2490/DurationFunction.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.procedure.impl.temporal;\n \n import java.time.temporal.ChronoUnit;\n@@ -45,27 +46,27 @@ import org.neo4j.values.virtual.MapValue;\n import static org.neo4j.internal.kernel.api.procs.FieldSignature.inputField;\n import static org.neo4j.values.storable.Values.NO_VALUE;\n \n-@Description( \"Construct a Duration value.\" )\n+@Description(\"Construct a Duration value.\")\n class DurationFunction implements CallableUserFunction\n {\n     private static final String CATEGORY = Category.TEMPORAL();\n \n     private static final UserFunctionSignature DURATION =\n-            new UserFunctionSignature(\n-                    new QualifiedName( new String[0], \"duration\" ),\n-                    Collections.singletonList( inputField( \"input\", Neo4jTypes.NTAny ) ),\n-                    Neo4jTypes.NTDuration, null, new String[0],\n-                    DurationFunction.class.getAnnotation( Description.class ).value(),\n-                    CATEGORY,\n-                    true );\n+      new UserFunctionSignature(\n+        new QualifiedName(new String[0], \"duration\"),\n+        Collections.singletonList(inputField(\"input\", Neo4jTypes.NTAny)),\n+        Neo4jTypes.NTDuration, null, new String[0],\n+        DurationFunction.class.getAnnotation(Description.class).value(),\n+        CATEGORY,\n+        true);\n \n-    static void register( GlobalProcedures globalProcedures ) throws ProcedureException\n+    static void register(GlobalProcedures globalProcedures) throws ProcedureException\n     {\n-        globalProcedures.registerBuiltIn( new DurationFunction() );\n-        globalProcedures.registerBuiltIn( new Between( \"between\" ) );\n-        globalProcedures.registerBuiltIn( new Between( \"inMonths\" ) );\n-        globalProcedures.registerBuiltIn( new Between( \"inDays\" ) );\n-        globalProcedures.registerBuiltIn( new Between( \"inSeconds\" ) );\n+        globalProcedures.registerBuiltIn(new DurationFunction());\n+        globalProcedures.registerBuiltIn(new Between(\"between\"));\n+        globalProcedures.registerBuiltIn(new Between(\"inMonths\"));\n+        globalProcedures.registerBuiltIn(new Between(\"inDays\"));\n+        globalProcedures.registerBuiltIn(new Between(\"inSeconds\"));\n     }\n \n     @Override\n@@ -81,71 +82,68 @@ class DurationFunction implements CallableUserFunction\n     }\n \n     @Override\n-    public AnyValue apply( Context ctx, AnyValue[] input ) throws ProcedureException\n+    public AnyValue apply(Context ctx, AnyValue[] input) throws ProcedureException\n     {\n-        if ( input == null )\n+        if (input == null)\n         {\n             return NO_VALUE;\n-        }\n-        else if ( input.length == 1 )\n+        } else if (input.length == 1)\n         {\n-            if ( input[0] == NO_VALUE || input[0] == null )\n+            if (input[0] == NO_VALUE || input[0] == null)\n             {\n                 return NO_VALUE;\n-            }\n-            else if ( input[0] instanceof TextValue )\n+            } else if (input[0] instanceof TextValue)\n             {\n-                return DurationValue.parse( (TextValue) input[0] );\n-            }\n-            else if ( input[0] instanceof MapValue )\n+                return DurationValue.parse((TextValue) input[0]);\n+            } else if (input[0] instanceof MapValue)\n             {\n                 MapValue map = (MapValue) input[0];\n-                return DurationValue.build( map );\n+                return DurationValue.build(map);\n             }\n         }\n-        throw new ProcedureException( Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() +\n-                \": Provided input was \" + Arrays.toString( input ) );\n+        throw new ProcedureException(Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() +\n+          \": Provided input was \" + Arrays.toString(input));\n     }\n \n     private static class Between implements CallableUserFunction\n     {\n         private static final String DESCRIPTION =\n-                \"Compute the duration between the 'from' instant (inclusive) and the 'to' instant (exclusive) in %s.\";\n+          \"Compute the duration between the 'from' instant (inclusive) and the 'to' instant (exclusive) in %s.\";\n         private static final List<FieldSignature> SIGNATURE = Arrays.asList(\n-                inputField( \"from\", Neo4jTypes.NTAny ),\n-                inputField( \"to\", Neo4jTypes.NTAny ) );\n+          inputField(\"from\", Neo4jTypes.NTAny),\n+          inputField(\"to\", Neo4jTypes.NTAny));\n         private final UserFunctionSignature signature;\n         private final TemporalUnit unit;\n \n-        private Between( String unit )\n+        private Between(String unit)\n         {\n             String unitString;\n-            switch ( unit )\n+            switch (unit)\n             {\n-            case \"between\":\n-                this.unit = null;\n-                unitString = \"logical units\";\n-                break;\n-            case \"inMonths\":\n-                this.unit = ChronoUnit.MONTHS;\n-                unitString = \"months\";\n-                break;\n-            case \"inDays\":\n-                this.unit = ChronoUnit.DAYS;\n-                unitString = \"days\";\n-                break;\n-            case \"inSeconds\":\n-                this.unit = ChronoUnit.SECONDS;\n-                unitString = \"seconds\";\n-                break;\n-            default:\n-                throw new IllegalStateException( \"Unsupported unit: \" + unit );\n+                case \"between\":\n+                    this.unit = null;\n+                    unitString = \"logical units\";\n+                    break;\n+                case \"inMonths\":\n+                    this.unit = ChronoUnit.MONTHS;\n+                    unitString = \"months\";\n+                    break;\n+                case \"inDays\":\n+                    this.unit = ChronoUnit.DAYS;\n+                    unitString = \"days\";\n+                    break;\n+                case \"inSeconds\":\n+                    this.unit = ChronoUnit.SECONDS;\n+                    unitString = \"seconds\";\n+                    break;\n+                default:\n+                    throw new IllegalStateException(\"Unsupported unit: \" + unit);\n             }\n             this.signature = new UserFunctionSignature(\n-                    new QualifiedName( new String[] {\"duration\"}, unit ),\n-                    SIGNATURE, Neo4jTypes.NTDuration, null, new String[0],\n-                    String.format(\n-                            DESCRIPTION, unitString ), CATEGORY, true );\n+              new QualifiedName(new String[] {\"duration\"}, unit),\n+              SIGNATURE, Neo4jTypes.NTDuration, null, new String[0],\n+              String.format(\n+                DESCRIPTION, unitString), CATEGORY, true);\n         }\n \n         @Override\n@@ -161,23 +159,22 @@ class DurationFunction implements CallableUserFunction\n         }\n \n         @Override\n-        public AnyValue apply( Context ctx, AnyValue[] input ) throws ProcedureException\n+        public AnyValue apply(Context ctx, AnyValue[] input) throws ProcedureException\n         {\n-            if ( input == null || (input.length == 2 && (input[0] == NO_VALUE || input[0] == null) || input[1] == NO_VALUE || input[1] == null) )\n+            if (input == null || (input.length == 2 && (input[0] == NO_VALUE || input[0] == null) || input[1] == NO_VALUE || input[1] == null))\n             {\n                 return NO_VALUE;\n-            }\n-            else if ( input.length == 2 )\n+            } else if (input.length == 2)\n             {\n-                if ( input[0] instanceof TemporalValue && input[1] instanceof TemporalValue )\n+                if (input[0] instanceof TemporalValue && input[1] instanceof TemporalValue)\n                 {\n                     TemporalValue from = (TemporalValue) input[0];\n                     TemporalValue to = (TemporalValue) input[1];\n-                    return DurationValue.between( unit, from, to );\n+                    return DurationValue.between(unit, from, to);\n                 }\n             }\n-            throw new ProcedureException( Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() +\n-                \": Provided input was \" + Arrays.toString( input ) );\n+            throw new ProcedureException(Status.Procedure.ProcedureCallFailed, \"Invalid call signature for \" + getClass().getSimpleName() +\n+              \": Provided input was \" + Arrays.toString(input));\n         }\n     }\n }\n",
            "diff_size": 63
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
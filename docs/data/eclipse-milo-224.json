{
    "project_name": "eclipse-milo",
    "error_id": "224",
    "information": {
        "errors": [
            {
                "line": "74",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 123).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    protected abstract void invoke(AbstractMethodInvocationHandler.InvocationContext context,\n                                   UInteger subscriptionId, UInteger lifetimeInHours, Out<UInteger> revisedLifetimeInHours)\n        throws UaException;\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/224/SetSubscriptionDurableMethod.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler/224/SetSubscriptionDurableMethod.java\nindex 44811eb2f60..a4fd3ac3ee1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/224/SetSubscriptionDurableMethod.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler/224/SetSubscriptionDurableMethod.java\n@@ -71,6 +71,6 @@ public abstract class SetSubscriptionDurableMethod extends AbstractMethodInvocat\n     }\n \n     protected abstract void invoke(AbstractMethodInvocationHandler.InvocationContext context,\n-                                   UInteger subscriptionId, UInteger lifetimeInHours, Out<UInteger> revisedLifetimeInHours)\n-        throws UaException;\n+                                        UInteger subscriptionId, UInteger lifetimeInHours, Out<UInteger> revisedLifetimeInHours)\n+                               throws UaException;\n }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/224/SetSubscriptionDurableMethod.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/224/SetSubscriptionDurableMethod.java\nindex 44811eb2f60..1e76c85d34a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/224/SetSubscriptionDurableMethod.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/224/SetSubscriptionDurableMethod.java\n@@ -52,12 +52,12 @@ public abstract class SetSubscriptionDurableMethod extends AbstractMethodInvocat\n \n     @Override\n     public Argument[] getInputArguments() {\n-        return new Argument[]{SUBSCRIPTION_ID, LIFETIME_IN_HOURS};\n+        return new Argument[] {SUBSCRIPTION_ID, LIFETIME_IN_HOURS};\n     }\n \n     @Override\n     public Argument[] getOutputArguments() {\n-        return new Argument[]{REVISED_LIFETIME_IN_HOURS};\n+        return new Argument[] {REVISED_LIFETIME_IN_HOURS};\n     }\n \n     @Override\n@@ -67,10 +67,11 @@ public abstract class SetSubscriptionDurableMethod extends AbstractMethodInvocat\n         UInteger lifetimeInHours = (UInteger) inputValues[1].getValue();\n         Out<UInteger> revisedLifetimeInHours = new Out<UInteger>();\n         invoke(context, subscriptionId, lifetimeInHours, revisedLifetimeInHours);\n-        return new Variant[]{new Variant(revisedLifetimeInHours.get())};\n+        return new Variant[] {new Variant(revisedLifetimeInHours.get())};\n     }\n \n     protected abstract void invoke(AbstractMethodInvocationHandler.InvocationContext context,\n-                                   UInteger subscriptionId, UInteger lifetimeInHours, Out<UInteger> revisedLifetimeInHours)\n+                                   UInteger subscriptionId, UInteger lifetimeInHours,\n+                                   Out<UInteger> revisedLifetimeInHours)\n         throws UaException;\n }\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/224/SetSubscriptionDurableMethod.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/224/SetSubscriptionDurableMethod.java\nindex 44811eb2f60..85227d0efcf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/224/SetSubscriptionDurableMethod.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/224/SetSubscriptionDurableMethod.java\n@@ -71,6 +71,5 @@ public abstract class SetSubscriptionDurableMethod extends AbstractMethodInvocat\n     }\n \n     protected abstract void invoke(AbstractMethodInvocationHandler.InvocationContext context,\n-                                   UInteger subscriptionId, UInteger lifetimeInHours, Out<UInteger> revisedLifetimeInHours)\n-        throws UaException;\n-}\n+                                   UInteger subscriptionId, UInteger lifetimeInHours, Out<UInteger> revisedLifetimeInHours) throws UaException;\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 178).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/224/SetSubscriptionDurableMethod.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/224/SetSubscriptionDurableMethod.java\nindex 44811eb2f60..42fb3959fa6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/224/SetSubscriptionDurableMethod.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/224/SetSubscriptionDurableMethod.java\n@@ -22,29 +22,14 @@ import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;\n import org.eclipse.milo.opcua.stack.core.types.structured.Argument;\n \n public abstract class SetSubscriptionDurableMethod extends AbstractMethodInvocationHandler {\n-    public static final Argument SUBSCRIPTION_ID = new Argument(\n-        \"SubscriptionId\",\n-        NodeId.parse(\"ns=0;i=7\"),\n-        ValueRanks.Scalar,\n-        null,\n-        new LocalizedText(\"\", \"\")\n-    );\n-\n-    public static final Argument LIFETIME_IN_HOURS = new Argument(\n-        \"LifetimeInHours\",\n-        NodeId.parse(\"ns=0;i=7\"),\n-        ValueRanks.Scalar,\n-        null,\n-        new LocalizedText(\"\", \"\")\n-    );\n-\n-    public static final Argument REVISED_LIFETIME_IN_HOURS = new Argument(\n-        \"RevisedLifetimeInHours\",\n-        NodeId.parse(\"ns=0;i=7\"),\n-        ValueRanks.Scalar,\n-        null,\n-        new LocalizedText(\"\", \"\")\n-    );\n+\n+    public static final Argument SUBSCRIPTION_ID = new Argument(\"SubscriptionId\", NodeId.parse(\"ns=0;i=7\"), ValueRanks.Scalar, null, new LocalizedText(\"\", \"\"));\n+\n+\n+    public static final Argument LIFETIME_IN_HOURS = new Argument(\"LifetimeInHours\", NodeId.parse(\"ns=0;i=7\"), ValueRanks.Scalar, null, new LocalizedText(\"\", \"\"));\n+\n+\n+    public static final Argument REVISED_LIFETIME_IN_HOURS = new Argument(\"RevisedLifetimeInHours\", NodeId.parse(\"ns=0;i=7\"), ValueRanks.Scalar, null, new LocalizedText(\"\", \"\"));\n \n     public SetSubscriptionDurableMethod(UaMethodNode node) {\n         super(node);\n@@ -61,16 +46,21 @@ public abstract class SetSubscriptionDurableMethod extends AbstractMethodInvocat\n     }\n \n     @Override\n-    protected Variant[] invoke(AbstractMethodInvocationHandler.InvocationContext context,\n-                               Variant[] inputValues) throws UaException {\n+    protected Variant[] invoke(AbstractMethodInvocationHandler.InvocationContext context, Variant[] inputValues) throws UaException {\n         UInteger subscriptionId = (UInteger) inputValues[0].getValue();\n+\n         UInteger lifetimeInHours = (UInteger) inputValues[1].getValue();\n+\n         Out<UInteger> revisedLifetimeInHours = new Out<UInteger>();\n+\n         invoke(context, subscriptionId, lifetimeInHours, revisedLifetimeInHours);\n         return new Variant[]{new Variant(revisedLifetimeInHours.get())};\n     }\n \n-    protected abstract void invoke(AbstractMethodInvocationHandler.InvocationContext context,\n-                                   UInteger subscriptionId, UInteger lifetimeInHours, Out<UInteger> revisedLifetimeInHours)\n-        throws UaException;\n-}\n+\n+    protected abstract void invoke(\n+        AbstractMethodInvocationHandler.InvocationContext context,\n+        UInteger subscriptionId,\n+        UInteger lifetimeInHours, Out<UInteger> revisedLifetimeInHours\n+    ) throws UaException;\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/224/SetSubscriptionDurableMethod.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_random/224/SetSubscriptionDurableMethod.java\nindex 44811eb2f60..a4fd3ac3ee1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/224/SetSubscriptionDurableMethod.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_random/224/SetSubscriptionDurableMethod.java\n@@ -71,6 +71,6 @@ public abstract class SetSubscriptionDurableMethod extends AbstractMethodInvocat\n     }\n \n     protected abstract void invoke(AbstractMethodInvocationHandler.InvocationContext context,\n-                                   UInteger subscriptionId, UInteger lifetimeInHours, Out<UInteger> revisedLifetimeInHours)\n-        throws UaException;\n+                                        UInteger subscriptionId, UInteger lifetimeInHours, Out<UInteger> revisedLifetimeInHours)\n+                               throws UaException;\n }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'UInteger' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/224/SetSubscriptionDurableMethod.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/224/SetSubscriptionDurableMethod.java\nindex 44811eb2f60..205bbe247a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/224/SetSubscriptionDurableMethod.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/224/SetSubscriptionDurableMethod.java\n@@ -71,6 +71,7 @@ public abstract class SetSubscriptionDurableMethod extends AbstractMethodInvocat\n     }\n \n     protected abstract void invoke(AbstractMethodInvocationHandler.InvocationContext context,\n-                                   UInteger subscriptionId, UInteger lifetimeInHours, Out<UInteger> revisedLifetimeInHours)\n+\n+    UInteger subscriptionId, UInteger lifetimeInHours, Out<UInteger> revisedLifetimeInHours)\n         throws UaException;\n }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3631",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "108",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "114",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "135",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "139",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "223",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "251",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "256",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "270",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "332",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3631/LogTailScanner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3631/LogTailScanner.java\nindex 756bc40a3dd..9ee86b07356 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3631/LogTailScanner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3631/LogTailScanner.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.recovery;\n \n import java.io.IOException;\n@@ -51,305 +52,297 @@ import static org.neo4j.kernel.recovery.Recovery.throwUnableToCleanRecover;\n  */\n public class LogTailScanner\n {\n-    static long NO_TRANSACTION_ID = -1;\n-    private final LogFiles logFiles;\n-    private final LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader;\n-    private LogTailInformation logTailInformation;\n-    private final LogTailScannerMonitor monitor;\n-    private final boolean failOnCorruptedLogFiles;\n-\n-    public LogTailScanner( LogFiles logFiles,\n-            LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader, Monitors monitors )\n-    {\n-        this( logFiles, logEntryReader, monitors, false );\n-    }\n-\n-    public LogTailScanner( LogFiles logFiles,\n-            LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader, Monitors monitors,\n-            boolean failOnCorruptedLogFiles )\n-    {\n-        this.logFiles = logFiles;\n-        this.logEntryReader = logEntryReader;\n-        this.monitor = monitors.newMonitor( LogTailScannerMonitor.class );\n-        this.failOnCorruptedLogFiles = failOnCorruptedLogFiles;\n-    }\n-\n-    private LogTailInformation findLogTail() throws IOException\n+  static long NO_TRANSACTION_ID = -1;\n+  private final LogFiles logFiles;\n+  private final LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader;\n+  private LogTailInformation logTailInformation;\n+  private final LogTailScannerMonitor monitor;\n+  private final boolean failOnCorruptedLogFiles;\n+\n+  public LogTailScanner(LogFiles logFiles,\n+                        LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader, Monitors monitors)\n+  {\n+    this(logFiles, logEntryReader, monitors, false);\n+  }\n+\n+  public LogTailScanner(LogFiles logFiles,\n+                        LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader, Monitors monitors,\n+                        boolean failOnCorruptedLogFiles)\n+  {\n+    this.logFiles = logFiles;\n+    this.logEntryReader = logEntryReader;\n+    this.monitor = monitors.newMonitor(LogTailScannerMonitor.class);\n+    this.failOnCorruptedLogFiles = failOnCorruptedLogFiles;\n+  }\n+\n+  private LogTailInformation findLogTail() throws IOException\n+  {\n+    final long highestLogVersion = logFiles.getHighestLogVersion();\n+    long version = highestLogVersion;\n+    long versionToSearchForCommits = highestLogVersion;\n+    LogEntryStart latestStartEntry = null;\n+    long oldestStartEntryTransaction = -1;\n+    long oldestVersionFound = -1;\n+    LogEntryVersion latestLogEntryVersion = null;\n+    boolean startRecordAfterCheckpoint = false;\n+    boolean corruptedTransactionLogs = false;\n+\n+    while (version >= logFiles.getLowestLogVersion() && version >= INITIAL_LOG_VERSION)\n     {\n-        final long highestLogVersion = logFiles.getHighestLogVersion();\n-        long version = highestLogVersion;\n-        long versionToSearchForCommits = highestLogVersion;\n-        LogEntryStart latestStartEntry = null;\n-        long oldestStartEntryTransaction = -1;\n-        long oldestVersionFound = -1;\n-        LogEntryVersion latestLogEntryVersion = null;\n-        boolean startRecordAfterCheckpoint = false;\n-        boolean corruptedTransactionLogs = false;\n-\n-        while ( version >= logFiles.getLowestLogVersion() && version >= INITIAL_LOG_VERSION )\n+      oldestVersionFound = version;\n+      CheckPoint latestCheckPoint = null;\n+      try (LogVersionedStoreChannel channel = logFiles.openForVersion(version);\n+           ReadAheadLogChannel readAheadLogChannel = new ReadAheadLogChannel(channel);\n+           LogEntryCursor cursor = new LogEntryCursor(logEntryReader, readAheadLogChannel))\n+      {\n+        LogEntry entry;\n+        long maxEntryReadPosition = 0;\n+        while (cursor.next())\n         {\n-            oldestVersionFound = version;\n-            CheckPoint latestCheckPoint = null;\n-            try ( LogVersionedStoreChannel channel = logFiles.openForVersion( version );\n-                  ReadAheadLogChannel readAheadLogChannel = new ReadAheadLogChannel( channel );\n-                  LogEntryCursor cursor = new LogEntryCursor( logEntryReader, readAheadLogChannel ) )\n+          entry = cursor.get();\n+\n+          // Collect data about latest checkpoint\n+          if (entry instanceof CheckPoint)\n+          {\n+            latestCheckPoint = entry.as();\n+          } else if (entry instanceof LogEntryCommit)\n+          {\n+            if (oldestStartEntryTransaction == NO_TRANSACTION_ID)\n             {\n-                LogEntry entry;\n-                long maxEntryReadPosition = 0;\n-                while ( cursor.next() )\n-                {\n-                    entry = cursor.get();\n-\n-                    // Collect data about latest checkpoint\n-                    if ( entry instanceof CheckPoint )\n-                    {\n-                        latestCheckPoint = entry.as();\n-                    }\n-                    else if ( entry instanceof LogEntryCommit )\n-                    {\n-                        if ( oldestStartEntryTransaction == NO_TRANSACTION_ID )\n-                        {\n-                            oldestStartEntryTransaction = ((LogEntryCommit) entry).getTxId();\n-                        }\n-                    }\n-                    else if ( entry instanceof LogEntryStart )\n-                    {\n-                        LogEntryStart startEntry = entry.as();\n-                        if ( version == versionToSearchForCommits )\n-                        {\n-                            latestStartEntry = startEntry;\n-                        }\n-                        startRecordAfterCheckpoint = true;\n-                    }\n-\n-                    // Collect data about latest entry version, only in first log file\n-                    if ( version == versionToSearchForCommits || latestLogEntryVersion == null )\n-                    {\n-                        latestLogEntryVersion = entry.getVersion();\n-                    }\n-                    maxEntryReadPosition = readAheadLogChannel.position();\n-                }\n-                if ( hasUnreadableBytes( channel, maxEntryReadPosition ) )\n-                {\n-                    corruptedTransactionLogs = true;\n-                }\n+              oldestStartEntryTransaction = ((LogEntryCommit) entry).getTxId();\n             }\n-             catch ( Error | ClosedByInterruptException e )\n+          } else if (entry instanceof LogEntryStart)\n+          {\n+            LogEntryStart startEntry = entry.as();\n+            if (version == versionToSearchForCommits)\n             {\n-                // These should not be parsing errors\n-                throw e;\n+              latestStartEntry = startEntry;\n             }\n-            catch ( Throwable t )\n-            {\n-                monitor.corruptedLogFile( version, t );\n-                if ( failOnCorruptedLogFiles )\n-                {\n-                    throwUnableToCleanRecover( t );\n-                }\n-                corruptedTransactionLogs = true;\n-            }\n-\n-            if ( latestCheckPoint != null )\n-            {\n-                return checkpointTailInformation( highestLogVersion, latestStartEntry, oldestVersionFound,\n-                        latestLogEntryVersion, latestCheckPoint, corruptedTransactionLogs );\n-            }\n-\n-            version--;\n+            startRecordAfterCheckpoint = true;\n+          }\n+\n+          // Collect data about latest entry version, only in first log file\n+          if (version == versionToSearchForCommits || latestLogEntryVersion == null)\n+          {\n+            latestLogEntryVersion = entry.getVersion();\n+          }\n+          maxEntryReadPosition = readAheadLogChannel.position();\n+        }\n+        if (hasUnreadableBytes(channel, maxEntryReadPosition))\n+        {\n+          corruptedTransactionLogs = true;\n+        }\n+      } catch (Error | ClosedByInterruptException e)\n+      {\n+        // These should not be parsing errors\n+        throw e;\n+      } catch (Throwable t)\n+      {\n+        monitor.corruptedLogFile(version, t);\n+        if (failOnCorruptedLogFiles)\n+        {\n+          throwUnableToCleanRecover(t);\n+        }\n+        corruptedTransactionLogs = true;\n+      }\n+\n+      if (latestCheckPoint != null)\n+      {\n+        return checkpointTailInformation(highestLogVersion, latestStartEntry, oldestVersionFound,\n+            latestLogEntryVersion, latestCheckPoint, corruptedTransactionLogs);\n+      }\n+\n+      version--;\n+\n+      // if we have found no commits in the latest log, keep searching in the next one\n+      if (latestStartEntry == null)\n+      {\n+        versionToSearchForCommits--;\n+      }\n+    }\n \n-            // if we have found no commits in the latest log, keep searching in the next one\n-            if ( latestStartEntry == null )\n+    return new LogTailInformation(corruptedTransactionLogs || startRecordAfterCheckpoint,\n+        oldestStartEntryTransaction, oldestVersionFound, highestLogVersion, latestLogEntryVersion);\n+  }\n+\n+  private boolean hasUnreadableBytes(LogVersionedStoreChannel channel, long maxEntryReadEndPosition) throws IOException\n+  {\n+    return channel.position() > maxEntryReadEndPosition;\n+  }\n+\n+  protected LogTailInformation checkpointTailInformation(long highestLogVersion, LogEntryStart latestStartEntry,\n+                                                         long oldestVersionFound, LogEntryVersion latestLogEntryVersion, CheckPoint latestCheckPoint,\n+                                                         boolean corruptedTransactionLogs) throws IOException\n+  {\n+    LogPosition checkPointLogPosition = latestCheckPoint.getLogPosition();\n+    ExtractedTransactionRecord transactionRecord = extractFirstTxIdAfterPosition(checkPointLogPosition, highestLogVersion);\n+    long firstTxIdAfterPosition = transactionRecord.getId();\n+    boolean startRecordAfterCheckpoint = (firstTxIdAfterPosition != NO_TRANSACTION_ID) ||\n+        ((latestStartEntry != null) &&\n+            (latestStartEntry.getStartPosition().compareTo(latestCheckPoint.getLogPosition()) >= 0));\n+    boolean corruptedLogs = transactionRecord.isFailure() || corruptedTransactionLogs;\n+    return new LogTailInformation(latestCheckPoint, corruptedLogs || startRecordAfterCheckpoint,\n+        firstTxIdAfterPosition, oldestVersionFound, highestLogVersion, latestLogEntryVersion);\n+  }\n+\n+  /**\n+   * Extracts txId from first commit entry, when starting reading at the given {@code position}.\n+   * If no commit entry found in the version, the reader will continue into next version(s) up till\n+   * {@code maxLogVersion} until finding one.\n+   *\n+   * @param initialPosition {@link LogPosition} to start scan from.\n+   * @param maxLogVersion   max log version to scan.\n+   * @return value object that contains first transaction id of closes commit entry to {@code initialPosition},\n+   * or {@link LogTailInformation#NO_TRANSACTION_ID} if not found. And failure flag that will be set to true if\n+   * there was some exception during transaction log processing.\n+   * @throws IOException on channel close I/O error.\n+   */\n+  protected ExtractedTransactionRecord extractFirstTxIdAfterPosition(LogPosition initialPosition, long maxLogVersion) throws IOException\n+  {\n+    LogPosition currentPosition = initialPosition;\n+    while (currentPosition.getLogVersion() <= maxLogVersion)\n+    {\n+      LogVersionedStoreChannel storeChannel = tryOpenStoreChannel(currentPosition);\n+      if (storeChannel != null)\n+      {\n+        try\n+        {\n+          storeChannel.position(currentPosition.getByteOffset());\n+          try (ReadAheadLogChannel logChannel = new ReadAheadLogChannel(storeChannel);\n+               LogEntryCursor cursor = new LogEntryCursor(logEntryReader, logChannel))\n+          {\n+            while (cursor.next())\n             {\n-                versionToSearchForCommits--;\n+              LogEntry entry = cursor.get();\n+              if (entry instanceof LogEntryCommit)\n+              {\n+                return new ExtractedTransactionRecord(((LogEntryCommit) entry).getTxId());\n+              }\n             }\n+          }\n+        } catch (Throwable t)\n+        {\n+          monitor.corruptedLogFile(currentPosition.getLogVersion(), t);\n+          return new ExtractedTransactionRecord(true);\n+        } finally\n+        {\n+          storeChannel.close();\n         }\n+      }\n \n-        return new LogTailInformation( corruptedTransactionLogs || startRecordAfterCheckpoint,\n-                oldestStartEntryTransaction, oldestVersionFound, highestLogVersion, latestLogEntryVersion );\n+      currentPosition = LogPosition.start(currentPosition.getLogVersion() + 1);\n     }\n-\n-    private boolean hasUnreadableBytes( LogVersionedStoreChannel channel, long maxEntryReadEndPosition ) throws IOException\n+    return new ExtractedTransactionRecord();\n+  }\n+\n+  /**\n+   * Collects information about the tail of the transaction log, i.e. last checkpoint, last entry etc.\n+   * Since this is an expensive task we do it once and reuse the result. This method is thus lazy and the first one\n+   * calling it will take the hit.\n+   * <p>\n+   * This is only intended to be used during startup. If you need to track the state of the tail, that can be done more\n+   * efficiently at runtime, and this method should then only be used to restore said state.\n+   *\n+   * @return snapshot of the state of the transaction logs tail at startup.\n+   * @throws UnderlyingStorageException if any errors occurs while parsing the transaction logs\n+   */\n+  public LogTailInformation getTailInformation() throws UnderlyingStorageException\n+  {\n+    if (logTailInformation == null)\n     {\n-        return channel.position() > maxEntryReadEndPosition;\n+      try\n+      {\n+        logTailInformation = findLogTail();\n+      } catch (IOException e)\n+      {\n+        throw new UnderlyingStorageException(\"Error encountered while parsing transaction logs\", e);\n+      }\n     }\n \n-    protected LogTailInformation checkpointTailInformation( long highestLogVersion, LogEntryStart latestStartEntry,\n-            long oldestVersionFound, LogEntryVersion latestLogEntryVersion, CheckPoint latestCheckPoint,\n-            boolean corruptedTransactionLogs ) throws IOException\n+    return logTailInformation;\n+  }\n+\n+  private PhysicalLogVersionedStoreChannel tryOpenStoreChannel(LogPosition currentPosition)\n+  {\n+    try\n+    {\n+      return logFiles.openForVersion(currentPosition.getLogVersion());\n+    } catch (IOException e)\n     {\n-        LogPosition checkPointLogPosition = latestCheckPoint.getLogPosition();\n-        ExtractedTransactionRecord transactionRecord = extractFirstTxIdAfterPosition( checkPointLogPosition, highestLogVersion );\n-        long firstTxIdAfterPosition = transactionRecord.getId();\n-        boolean startRecordAfterCheckpoint = (firstTxIdAfterPosition != NO_TRANSACTION_ID) ||\n-                ((latestStartEntry != null) &&\n-                        (latestStartEntry.getStartPosition().compareTo( latestCheckPoint.getLogPosition() ) >= 0));\n-        boolean corruptedLogs = transactionRecord.isFailure() || corruptedTransactionLogs;\n-        return new LogTailInformation( latestCheckPoint, corruptedLogs || startRecordAfterCheckpoint,\n-                firstTxIdAfterPosition, oldestVersionFound, highestLogVersion, latestLogEntryVersion );\n+      return null;\n     }\n+  }\n \n-    /**\n-     * Extracts txId from first commit entry, when starting reading at the given {@code position}.\n-     * If no commit entry found in the version, the reader will continue into next version(s) up till\n-     * {@code maxLogVersion} until finding one.\n-     *\n-     * @param initialPosition {@link LogPosition} to start scan from.\n-     * @param maxLogVersion max log version to scan.\n-     * @return value object that contains first transaction id of closes commit entry to {@code initialPosition},\n-     * or {@link LogTailInformation#NO_TRANSACTION_ID} if not found. And failure flag that will be set to true if\n-     * there was some exception during transaction log processing.\n-     * @throws IOException on channel close I/O error.\n-     */\n-    protected ExtractedTransactionRecord extractFirstTxIdAfterPosition( LogPosition initialPosition, long maxLogVersion ) throws IOException\n-    {\n-        LogPosition currentPosition = initialPosition;\n-        while ( currentPosition.getLogVersion() <= maxLogVersion )\n-        {\n-            LogVersionedStoreChannel storeChannel = tryOpenStoreChannel( currentPosition );\n-            if ( storeChannel != null )\n-            {\n-                try\n-                {\n-                    storeChannel.position( currentPosition.getByteOffset() );\n-                    try ( ReadAheadLogChannel logChannel = new ReadAheadLogChannel( storeChannel );\n-                            LogEntryCursor cursor = new LogEntryCursor( logEntryReader, logChannel ) )\n-                    {\n-                        while ( cursor.next() )\n-                        {\n-                            LogEntry entry = cursor.get();\n-                            if ( entry instanceof LogEntryCommit )\n-                            {\n-                                return new ExtractedTransactionRecord( ((LogEntryCommit) entry).getTxId() );\n-                            }\n-                        }\n-                    }\n-                }\n-                catch ( Throwable t )\n-                {\n-                    monitor.corruptedLogFile( currentPosition.getLogVersion(), t );\n-                    return new ExtractedTransactionRecord( true );\n-                }\n-                finally\n-                {\n-                    storeChannel.close();\n-                }\n-            }\n+  static class ExtractedTransactionRecord\n+  {\n+    private final long id;\n+    private final boolean failure;\n \n-            currentPosition = LogPosition.start( currentPosition.getLogVersion() + 1 );\n-        }\n-        return new ExtractedTransactionRecord();\n+    ExtractedTransactionRecord()\n+    {\n+      this(NO_TRANSACTION_ID, false);\n     }\n \n-    /**\n-     * Collects information about the tail of the transaction log, i.e. last checkpoint, last entry etc.\n-     * Since this is an expensive task we do it once and reuse the result. This method is thus lazy and the first one\n-     * calling it will take the hit.\n-     * <p>\n-     * This is only intended to be used during startup. If you need to track the state of the tail, that can be done more\n-     * efficiently at runtime, and this method should then only be used to restore said state.\n-     *\n-     * @return snapshot of the state of the transaction logs tail at startup.\n-     * @throws UnderlyingStorageException if any errors occurs while parsing the transaction logs\n-     */\n-    public LogTailInformation getTailInformation() throws UnderlyingStorageException\n+    ExtractedTransactionRecord(long txId)\n     {\n-        if ( logTailInformation == null )\n-        {\n-            try\n-            {\n-                logTailInformation = findLogTail();\n-            }\n-            catch ( IOException e )\n-            {\n-                throw new UnderlyingStorageException( \"Error encountered while parsing transaction logs\", e );\n-            }\n-        }\n+      this(txId, false);\n+    }\n \n-        return logTailInformation;\n+    ExtractedTransactionRecord(boolean failure)\n+    {\n+      this(NO_TRANSACTION_ID, failure);\n     }\n \n-    private PhysicalLogVersionedStoreChannel tryOpenStoreChannel( LogPosition currentPosition )\n+    private ExtractedTransactionRecord(long txId, boolean failure)\n     {\n-        try\n-        {\n-            return logFiles.openForVersion( currentPosition.getLogVersion() );\n-        }\n-        catch ( IOException e )\n-        {\n-            return null;\n-        }\n+      this.id = txId;\n+      this.failure = failure;\n     }\n \n-    static class ExtractedTransactionRecord\n+    public long getId()\n     {\n-        private final long id;\n-        private final boolean failure;\n+      return id;\n+    }\n \n-        ExtractedTransactionRecord()\n-        {\n-            this( NO_TRANSACTION_ID, false );\n-        }\n+    public boolean isFailure()\n+    {\n+      return failure;\n+    }\n+  }\n \n-        ExtractedTransactionRecord( long txId )\n-        {\n-            this( txId, false );\n-        }\n+  public static class LogTailInformation\n+  {\n \n-        ExtractedTransactionRecord( boolean failure )\n-        {\n-            this( NO_TRANSACTION_ID, failure );\n-        }\n+    public final CheckPoint lastCheckPoint;\n+    public final long firstTxIdAfterLastCheckPoint;\n+    public final long oldestLogVersionFound;\n+    public final long currentLogVersion;\n+    public final LogEntryVersion latestLogEntryVersion;\n+    private final boolean recordAfterCheckpoint;\n \n-        private ExtractedTransactionRecord( long txId, boolean failure )\n-        {\n-            this.id = txId;\n-            this.failure = failure;\n-        }\n-\n-        public long getId()\n-        {\n-            return id;\n-        }\n-\n-        public boolean isFailure()\n-        {\n-            return failure;\n-        }\n+    public LogTailInformation(boolean recordAfterCheckpoint, long firstTxIdAfterLastCheckPoint,\n+                              long oldestLogVersionFound, long currentLogVersion,\n+                              LogEntryVersion latestLogEntryVersion)\n+    {\n+      this(null, recordAfterCheckpoint, firstTxIdAfterLastCheckPoint, oldestLogVersionFound, currentLogVersion,\n+          latestLogEntryVersion);\n     }\n \n-    public static class LogTailInformation\n+    LogTailInformation(CheckPoint lastCheckPoint, boolean recordAfterCheckpoint, long firstTxIdAfterLastCheckPoint,\n+                       long oldestLogVersionFound, long currentLogVersion, LogEntryVersion latestLogEntryVersion)\n     {\n+      this.lastCheckPoint = lastCheckPoint;\n+      this.firstTxIdAfterLastCheckPoint = firstTxIdAfterLastCheckPoint;\n+      this.oldestLogVersionFound = oldestLogVersionFound;\n+      this.currentLogVersion = currentLogVersion;\n+      this.latestLogEntryVersion = latestLogEntryVersion;\n+      this.recordAfterCheckpoint = recordAfterCheckpoint;\n+    }\n \n-        public final CheckPoint lastCheckPoint;\n-        public final long firstTxIdAfterLastCheckPoint;\n-        public final long oldestLogVersionFound;\n-        public final long currentLogVersion;\n-        public final LogEntryVersion latestLogEntryVersion;\n-        private final boolean recordAfterCheckpoint;\n-\n-        public LogTailInformation( boolean recordAfterCheckpoint, long firstTxIdAfterLastCheckPoint,\n-                long oldestLogVersionFound, long currentLogVersion,\n-                LogEntryVersion latestLogEntryVersion )\n-        {\n-            this( null, recordAfterCheckpoint, firstTxIdAfterLastCheckPoint, oldestLogVersionFound, currentLogVersion,\n-                    latestLogEntryVersion );\n-        }\n-\n-        LogTailInformation( CheckPoint lastCheckPoint, boolean recordAfterCheckpoint, long firstTxIdAfterLastCheckPoint,\n-                long oldestLogVersionFound, long currentLogVersion, LogEntryVersion latestLogEntryVersion )\n-        {\n-            this.lastCheckPoint = lastCheckPoint;\n-            this.firstTxIdAfterLastCheckPoint = firstTxIdAfterLastCheckPoint;\n-            this.oldestLogVersionFound = oldestLogVersionFound;\n-            this.currentLogVersion = currentLogVersion;\n-            this.latestLogEntryVersion = latestLogEntryVersion;\n-            this.recordAfterCheckpoint = recordAfterCheckpoint;\n-        }\n-\n-        public boolean commitsAfterLastCheckpoint()\n-        {\n-            return recordAfterCheckpoint;\n-        }\n+    public boolean commitsAfterLastCheckpoint()\n+    {\n+      return recordAfterCheckpoint;\n     }\n+  }\n \n }\n",
            "diff_size": 411
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3631/LogTailScanner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3631/LogTailScanner.java\nindex 756bc40a3dd..5afc28bdebd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3631/LogTailScanner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3631/LogTailScanner.java\n@@ -58,14 +58,12 @@ public class LogTailScanner\n     private final LogTailScannerMonitor monitor;\n     private final boolean failOnCorruptedLogFiles;\n \n-    public LogTailScanner( LogFiles logFiles,\n-            LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader, Monitors monitors )\n+    public LogTailScanner( LogFiles logFiles, LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader, Monitors monitors )\n     {\n         this( logFiles, logEntryReader, monitors, false );\n     }\n \n-    public LogTailScanner( LogFiles logFiles,\n-            LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader, Monitors monitors,\n+    public LogTailScanner( LogFiles logFiles, LogEntryReader<ReadableClosablePositionAwareChannel> logEntryReader, Monitors monitors,\n             boolean failOnCorruptedLogFiles )\n     {\n         this.logFiles = logFiles;\n@@ -91,9 +89,9 @@ public class LogTailScanner\n             oldestVersionFound = version;\n             CheckPoint latestCheckPoint = null;\n             try ( LogVersionedStoreChannel channel = logFiles.openForVersion( version );\n-                  ReadAheadLogChannel readAheadLogChannel = new ReadAheadLogChannel( channel );\n+ReadAheadLogChannel readAheadLogChannel = new ReadAheadLogChannel( channel );\n                   LogEntryCursor cursor = new LogEntryCursor( logEntryReader, readAheadLogChannel ) )\n-            {\n+{\n                 LogEntry entry;\n                 long maxEntryReadPosition = 0;\n                 while ( cursor.next() )\n@@ -119,7 +117,8 @@ public class LogTailScanner\n                         {\n                             latestStartEntry = startEntry;\n                         }\n-                        startRecordAfterCheckpoint = true;\n+\n+startRecordAfterCheckpoint = true;\n                     }\n \n                     // Collect data about latest entry version, only in first log file\n@@ -127,15 +126,17 @@ public class LogTailScanner\n                     {\n                         latestLogEntryVersion = entry.getVersion();\n                     }\n-                    maxEntryReadPosition = readAheadLogChannel.position();\n+\n+maxEntryReadPosition = readAheadLogChannel.position();\n                 }\n-                if ( hasUnreadableBytes( channel, maxEntryReadPosition ) )\n+\n+if ( hasUnreadableBytes( channel, maxEntryReadPosition ) )\n                 {\n                     corruptedTransactionLogs = true;\n                 }\n             }\n-             catch ( Error | ClosedByInterruptException e )\n-            {\n+catch ( Error | ClosedByInterruptException e )\n+{\n                 // These should not be parsing errors\n                 throw e;\n             }\n@@ -146,7 +147,8 @@ public class LogTailScanner\n                 {\n                     throwUnableToCleanRecover( t );\n                 }\n-                corruptedTransactionLogs = true;\n+\n+corruptedTransactionLogs = true;\n             }\n \n             if ( latestCheckPoint != null )\n@@ -176,14 +178,13 @@ public class LogTailScanner\n     protected LogTailInformation checkpointTailInformation( long highestLogVersion, LogEntryStart latestStartEntry,\n             long oldestVersionFound, LogEntryVersion latestLogEntryVersion, CheckPoint latestCheckPoint,\n             boolean corruptedTransactionLogs ) throws IOException\n-    {\n+{\n         LogPosition checkPointLogPosition = latestCheckPoint.getLogPosition();\n         ExtractedTransactionRecord transactionRecord = extractFirstTxIdAfterPosition( checkPointLogPosition, highestLogVersion );\n         long firstTxIdAfterPosition = transactionRecord.getId();\n         boolean startRecordAfterCheckpoint = (firstTxIdAfterPosition != NO_TRANSACTION_ID) ||\n-                ((latestStartEntry != null) &&\n-                        (latestStartEntry.getStartPosition().compareTo( latestCheckPoint.getLogPosition() ) >= 0));\n-        boolean corruptedLogs = transactionRecord.isFailure() || corruptedTransactionLogs;\n+    ((latestStartEntry != null ) && (latestStartEntry.getStartPosition().compareTo( latestCheckPoint.getLogPosition() ) >= 0 ));\n+    boolean corruptedLogs = transactionRecord.isFailure() || corruptedTransactionLogs;\n         return new LogTailInformation( latestCheckPoint, corruptedLogs || startRecordAfterCheckpoint,\n                 firstTxIdAfterPosition, oldestVersionFound, highestLogVersion, latestLogEntryVersion );\n     }\n@@ -212,7 +213,7 @@ public class LogTailScanner\n                 {\n                     storeChannel.position( currentPosition.getByteOffset() );\n                     try ( ReadAheadLogChannel logChannel = new ReadAheadLogChannel( storeChannel );\n-                            LogEntryCursor cursor = new LogEntryCursor( logEntryReader, logChannel ) )\n+LogEntryCursor cursor = new LogEntryCursor( logEntryReader, logChannel ) )\n                     {\n                         while ( cursor.next() )\n                         {\n@@ -319,12 +320,15 @@ public class LogTailScanner\n \n     public static class LogTailInformation\n     {\n+    public final CheckPoint lastCheckPoint;\n+\n+public final long firstTxIdAfterLastCheckPoint;\n \n-        public final CheckPoint lastCheckPoint;\n-        public final long firstTxIdAfterLastCheckPoint;\n-        public final long oldestLogVersionFound;\n-        public final long currentLogVersion;\n-        public final LogEntryVersion latestLogEntryVersion;\n+public final long oldestLogVersionFound;\n+\n+public final long currentLogVersion;\n+\n+public final LogEntryVersion latestLogEntryVersion;\n         private final boolean recordAfterCheckpoint;\n \n         public LogTailInformation( boolean recordAfterCheckpoint, long firstTxIdAfterLastCheckPoint,\n@@ -351,5 +355,4 @@ public class LogTailScanner\n             return recordAfterCheckpoint;\n         }\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
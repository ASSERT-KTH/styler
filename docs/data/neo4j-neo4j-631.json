{
    "project_name": "neo4j-neo4j",
    "error_id": "631",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "152",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "150",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/631/IdMappers.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/631/IdMappers.java\nindex 59785b12976..90eae6ebf8a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/631/IdMappers.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/631/IdMappers.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport.cache.idmapping;\n \n import org.eclipse.collections.api.iterator.LongIterator;\n@@ -50,7 +51,7 @@ public class IdMappers\n     private static class ActualIdMapper implements IdMapper\n     {\n         @Override\n-        public void put( Object inputId, long actualId, Group group )\n+        public void put(Object inputId, long actualId, Group group)\n         {   // No need to remember anything\n         }\n \n@@ -61,18 +62,18 @@ public class IdMappers\n         }\n \n         @Override\n-        public void prepare( PropertyValueLookup inputIdLookup, Collector collector, ProgressListener progress )\n+        public void prepare(PropertyValueLookup inputIdLookup, Collector collector, ProgressListener progress)\n         {   // No need to prepare anything\n         }\n \n         @Override\n-        public long get( Object inputId, Group group )\n+        public long get(Object inputId, Group group)\n         {\n             return (Long) inputId;\n         }\n \n         @Override\n-        public void acceptMemoryStatsVisitor( MemoryStatsVisitor visitor )\n+        public void acceptMemoryStatsVisitor(MemoryStatsVisitor visitor)\n         {   // No memory usage\n         }\n \n@@ -88,7 +89,7 @@ public class IdMappers\n         }\n \n         @Override\n-        public MemoryStatsVisitor.Visitable memoryEstimation( long numberOfNodes )\n+        public MemoryStatsVisitor.Visitable memoryEstimation(long numberOfNodes)\n         {\n             return MemoryStatsVisitor.NONE;\n         }\n@@ -117,28 +118,28 @@ public class IdMappers\n     /**\n      * An {@link IdMapper} capable of mapping {@link String strings} to long ids.\n      *\n-     * @param cacheFactory {@link NumberArrayFactory} for allocating memory for the cache used by this index.\n-     * @param groups {@link Groups} containing all id groups.\n+     * @param cacheFactory  {@link NumberArrayFactory} for allocating memory for the cache used by this index.\n+     * @param groups        {@link Groups} containing all id groups.\n      * @param memoryTracker underlying buffers allocation memory tracker\n      * @return {@link IdMapper} for when input ids are strings.\n      */\n-    public static IdMapper strings( NumberArrayFactory cacheFactory, ReadableGroups groups, PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker )\n+    public static IdMapper strings(NumberArrayFactory cacheFactory, ReadableGroups groups, PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker)\n     {\n-        return new EncodingIdMapper( cacheFactory, new StringEncoder(), Radix.STRING, NO_MONITOR, dynamic( memoryTracker ), groups,\n-                numberOfCollisions -> new StringCollisionValues( cacheFactory, numberOfCollisions, memoryTracker ), pageCacheTracer, memoryTracker );\n+        return new EncodingIdMapper(cacheFactory, new StringEncoder(), Radix.STRING, NO_MONITOR, dynamic(memoryTracker), groups,\n+          numberOfCollisions -> new StringCollisionValues(cacheFactory, numberOfCollisions, memoryTracker), pageCacheTracer, memoryTracker);\n     }\n \n     /**\n      * An {@link IdMapper} capable of mapping {@link Long arbitrary longs} to long ids.\n      *\n-     * @param cacheFactory {@link NumberArrayFactory} for allocating memory for the cache used by this index.\n-     * @param groups {@link Groups} containing all id groups.\n+     * @param cacheFactory  {@link NumberArrayFactory} for allocating memory for the cache used by this index.\n+     * @param groups        {@link Groups} containing all id groups.\n      * @param memoryTracker underlying buffers allocation memory tracker\n      * @return {@link IdMapper} for when input ids are numbers.\n      */\n-    public static IdMapper longs( NumberArrayFactory cacheFactory, ReadableGroups groups, PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker )\n+    public static IdMapper longs(NumberArrayFactory cacheFactory, ReadableGroups groups, PageCacheTracer pageCacheTracer, MemoryTracker memoryTracker)\n     {\n-        return new EncodingIdMapper( cacheFactory, new LongEncoder(), Radix.LONG, NO_MONITOR, dynamic( memoryTracker ), groups,\n-                numberOfCollisions -> new LongCollisionValues( cacheFactory, numberOfCollisions, memoryTracker ), pageCacheTracer, memoryTracker );\n+        return new EncodingIdMapper(cacheFactory, new LongEncoder(), Radix.LONG, NO_MONITOR, dynamic(memoryTracker), groups,\n+          numberOfCollisions -> new LongCollisionValues(cacheFactory, numberOfCollisions, memoryTracker), pageCacheTracer, memoryTracker);\n     }\n }\n",
            "diff_size": 16
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
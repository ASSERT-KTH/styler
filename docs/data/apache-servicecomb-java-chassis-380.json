{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "380",
    "information": {
        "errors": [
            {
                "line": "82",
                "column": "15",
                "severity": "warning",
                "message": "'{' at column 15 should be on the previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
            }
        ]
    },
    "source_code": "          });\n          asyncResult.result().frameHandler((frame) ->\n              {\n                if (frame.isBinary() || frame.isText()) {\n                  onMessage.handle(frame.binaryData());\n                }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/380/WebsocketClientUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/380/WebsocketClientUtil.java\nindex c6463587e4f..33566b93544 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/380/WebsocketClientUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/380/WebsocketClientUtil.java\n@@ -78,9 +78,8 @@ public final class WebsocketClientUtil {\n           asyncResult.result().pongHandler(pong -> {\n             // ignore, just prevent NPE.\n           });\n-          asyncResult.result().frameHandler((frame) ->\n-              {\n-                if (frame.isBinary() || frame.isText()) {\n+          asyncResult.result().frameHandler((frame) -> {\n+            if (frame.isBinary() || frame.isText()) {\n                   onMessage.handle(frame.binaryData());\n                 }\n               }\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "82",
                    "column": "15",
                    "severity": "warning",
                    "message": "'{' at column 15 should be on the previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/380/WebsocketClientUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/380/WebsocketClientUtil.java\nindex c6463587e4f..1024c6317ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/380/WebsocketClientUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/380/WebsocketClientUtil.java\n@@ -51,8 +51,8 @@ public final class WebsocketClientUtil {\n   }\n \n   public void open(IpPort ipPort, String url, Handler<Void> onOpen, Handler<Void> onClose,\n-      Handler<Buffer> onMessage, Handler<Throwable> onException,\n-      Handler<Throwable> onConnectFailed) {\n+                   Handler<Buffer> onMessage, Handler<Throwable> onException,\n+                   Handler<Throwable> onConnectFailed) {\n     HttpClientWithContext vertxHttpClient = websocketClientPool.getClient();\n     vertxHttpClient.runOnContext(client -> {\n       WebSocketConnectOptions options = new WebSocketConnectOptions();\n@@ -110,7 +110,7 @@ public final class WebsocketClientUtil {\n   }\n \n   public SignRequest createSignRequest(String method, IpPort ipPort, RequestParam requestParam, String url,\n-      Map<String, String> headers) {\n+                                       Map<String, String> headers) {\n     SignRequest signReq = new SignRequest();\n     StringBuilder endpoint = new StringBuilder(\"https://\" + ipPort.getHostOrIp());\n     endpoint.append(\":\" + ipPort.getPort());\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/380/WebsocketClientUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/380/WebsocketClientUtil.java\nindex c6463587e4f..b4cf9f13d05 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/380/WebsocketClientUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/380/WebsocketClientUtil.java\n@@ -78,13 +78,11 @@ public final class WebsocketClientUtil {\n           asyncResult.result().pongHandler(pong -> {\n             // ignore, just prevent NPE.\n           });\n-          asyncResult.result().frameHandler((frame) ->\n-              {\n+          asyncResult.result().frameHandler((frame) -> {\n                 if (frame.isBinary() || frame.isText()) {\n                   onMessage.handle(frame.binaryData());\n                 }\n-              }\n-          );\n+              });\n         }\n       });\n     });\n@@ -121,11 +119,10 @@ public final class WebsocketClientUtil {\n       LOGGER.error(\"set uri failed, uri is {}, message: {}\", endpoint.toString(), e.getMessage());\n     }\n     signReq.setContent((requestParam.getBody() != null && requestParam.getBody().length > 0)\n-        ? new ByteArrayInputStream(requestParam.getBody())\n-        : null);\n+        ? new ByteArrayInputStream(requestParam.getBody()) : null);\n     signReq.setHeaders(headers);\n     signReq.setHttpMethod(method);\n     signReq.setQueryParams(requestParam.getQueryParamsMap());\n     return signReq;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/380/WebsocketClientUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/380/WebsocketClientUtil.java\nindex c6463587e4f..33566b93544 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/380/WebsocketClientUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_random/380/WebsocketClientUtil.java\n@@ -78,9 +78,8 @@ public final class WebsocketClientUtil {\n           asyncResult.result().pongHandler(pong -> {\n             // ignore, just prevent NPE.\n           });\n-          asyncResult.result().frameHandler((frame) ->\n-              {\n-                if (frame.isBinary() || frame.isText()) {\n+          asyncResult.result().frameHandler((frame) -> {\n+            if (frame.isBinary() || frame.isText()) {\n                   onMessage.handle(frame.binaryData());\n                 }\n               }\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/380/WebsocketClientUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/380/WebsocketClientUtil.java\nindex c6463587e4f..33566b93544 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/380/WebsocketClientUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/380/WebsocketClientUtil.java\n@@ -78,9 +78,8 @@ public final class WebsocketClientUtil {\n           asyncResult.result().pongHandler(pong -> {\n             // ignore, just prevent NPE.\n           });\n-          asyncResult.result().frameHandler((frame) ->\n-              {\n-                if (frame.isBinary() || frame.isText()) {\n+          asyncResult.result().frameHandler((frame) -> {\n+            if (frame.isBinary() || frame.isText()) {\n                   onMessage.handle(frame.binaryData());\n                 }\n               }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
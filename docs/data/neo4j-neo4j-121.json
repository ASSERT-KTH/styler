{
    "project_name": "neo4j-neo4j",
    "error_id": "121",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/121/MonitoringCacheTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/121/MonitoringCacheTracer.java\nindex 0d0b3ad4009..2b664b7af83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/121/MonitoringCacheTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/121/MonitoringCacheTracer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.javacompat;\n \n import scala.Option;\n@@ -28,59 +29,59 @@ import org.neo4j.internal.helpers.collection.Pair;\n \n /**\n  * Adapter from ExecutionEngineQueryCacheMonitor to CacheTracer.\n- *\n+ * <p>\n  * The reason why we\n  * a) need an adapter and\n  * b) tracers for the ExpressionEngine query cache and the CypherPlanner query cache need to implement two different\n- *    interfaces (ExecutionEngineQueryCacheMonitor and CacheTracer respectively)\n- *\n- *  is that kernel monitors work by interface methods. If tracers for those two caches shared the abstract methods\n- *  in the same superclass, the monitor callbacks would always be invoked from both caches. So we need this\n- *  awful mumbo-jumbo in order to monitor specifically one of the two caches only.\n+ * interfaces (ExecutionEngineQueryCacheMonitor and CacheTracer respectively)\n+ * <p>\n+ * is that kernel monitors work by interface methods. If tracers for those two caches shared the abstract methods\n+ * in the same superclass, the monitor callbacks would always be invoked from both caches. So we need this\n+ * awful mumbo-jumbo in order to monitor specifically one of the two caches only.\n  */\n-public class MonitoringCacheTracer implements CacheTracer<Pair<String,QueryCache.ParameterTypeMap>>\n+public class MonitoringCacheTracer implements CacheTracer<Pair<String, QueryCache.ParameterTypeMap>>\n {\n     private final ExecutionEngineQueryCacheMonitor monitor;\n \n-    public MonitoringCacheTracer( ExecutionEngineQueryCacheMonitor monitor )\n+    public MonitoringCacheTracer(ExecutionEngineQueryCacheMonitor monitor)\n     {\n         this.monitor = monitor;\n     }\n \n     @Override\n-    public void queryCacheHit( Pair<String,QueryCache.ParameterTypeMap> queryKey, String metaData )\n+    public void queryCacheHit(Pair<String, QueryCache.ParameterTypeMap> queryKey, String metaData)\n     {\n-        monitor.cacheHit( queryKey );\n+        monitor.cacheHit(queryKey);\n     }\n \n     @Override\n-    public void queryCacheMiss( Pair<String,QueryCache.ParameterTypeMap> queryKey, String metaData )\n+    public void queryCacheMiss(Pair<String, QueryCache.ParameterTypeMap> queryKey, String metaData)\n     {\n-        monitor.cacheMiss( queryKey );\n+        monitor.cacheMiss(queryKey);\n     }\n \n     @Override\n-    public void queryCompile( Pair<String,QueryCache.ParameterTypeMap> queryKey, String metaData )\n+    public void queryCompile(Pair<String, QueryCache.ParameterTypeMap> queryKey, String metaData)\n     {\n-        monitor.cacheCompile( queryKey );\n+        monitor.cacheCompile(queryKey);\n     }\n \n     @Override\n-    public void queryCompileWithExpressionCodeGen( Pair<String,QueryCache.ParameterTypeMap> queryKey, String metaData )\n+    public void queryCompileWithExpressionCodeGen(Pair<String, QueryCache.ParameterTypeMap> queryKey, String metaData)\n     {\n-        monitor.cacheCompileWithExpressionCodeGen( queryKey );\n+        monitor.cacheCompileWithExpressionCodeGen(queryKey);\n     }\n \n     @Override\n-    public void queryCacheStale( Pair<String,QueryCache.ParameterTypeMap> queryKey, int secondsSincePlan, String metaData,\n-                                 Option<String> maybeReason )\n+    public void queryCacheStale(Pair<String, QueryCache.ParameterTypeMap> queryKey, int secondsSincePlan, String metaData,\n+                                Option<String> maybeReason)\n     {\n-        monitor.cacheDiscard( queryKey, metaData, secondsSincePlan, maybeReason );\n+        monitor.cacheDiscard(queryKey, metaData, secondsSincePlan, maybeReason);\n     }\n \n     @Override\n-    public void queryCacheFlush( long sizeOfCacheBeforeFlush )\n+    public void queryCacheFlush(long sizeOfCacheBeforeFlush)\n     {\n-        monitor.cacheFlushDetected( sizeOfCacheBeforeFlush );\n+        monitor.cacheFlushDetected(sizeOfCacheBeforeFlush);\n     }\n }\n",
            "diff_size": 22
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
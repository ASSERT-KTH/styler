{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3357",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "68",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3357/PhysicalToLogicalLabelChanges.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3357/PhysicalToLogicalLabelChanges.java\nindex 50c8135fa09..132958a0906 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3357/PhysicalToLogicalLabelChanges.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3357/PhysicalToLogicalLabelChanges.java\n@@ -17,80 +17,80 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.labelscan;\n \n import org.neo4j.kernel.api.labelscan.NodeLabelUpdate;\n \n class PhysicalToLogicalLabelChanges\n {\n-    private PhysicalToLogicalLabelChanges()\n-    {\n-    }\n+  private PhysicalToLogicalLabelChanges()\n+  {\n+  }\n+\n+  /**\n+   * Converts physical before/after state to logical remove/add state. This conversion reuses the existing\n+   * long[] arrays in {@link NodeLabelUpdate}, 'before' is used for removals and 'after' is used for adds,\n+   * by shuffling numbers around and possible terminates them with -1 because the logical change set will be\n+   * equally big or smaller than the physical change set.\n+   *\n+   * @param update {@link NodeLabelUpdate} containing physical before/after state.\n+   */\n+  static void convertToAdditionsAndRemovals(NodeLabelUpdate update)\n+  {\n+    int beforeLength = update.getLabelsBefore().length;\n+    int afterLength = update.getLabelsAfter().length;\n \n-    /**\n-     * Converts physical before/after state to logical remove/add state. This conversion reuses the existing\n-     * long[] arrays in {@link NodeLabelUpdate}, 'before' is used for removals and 'after' is used for adds,\n-     * by shuffling numbers around and possible terminates them with -1 because the logical change set will be\n-     * equally big or smaller than the physical change set.\n-     *\n-     * @param update {@link NodeLabelUpdate} containing physical before/after state.\n-     */\n-    static void convertToAdditionsAndRemovals( NodeLabelUpdate update )\n+    int bc = 0;\n+    int ac = 0;\n+    long[] before = update.getLabelsBefore();\n+    long[] after = update.getLabelsAfter();\n+    for (int bi = 0, ai = 0; bi < beforeLength || ai < afterLength; )\n     {\n-        int beforeLength = update.getLabelsBefore().length;\n-        int afterLength = update.getLabelsAfter().length;\n+      long beforeId = bi < beforeLength ? before[bi] : -1;\n+      long afterId = ai < afterLength ? after[ai] : -1;\n+      if (beforeId == afterId)\n+      {   // no change\n+        bi++;\n+        ai++;\n+        continue;\n+      }\n \n-        int bc = 0;\n-        int ac = 0;\n-        long[] before = update.getLabelsBefore();\n-        long[] after = update.getLabelsAfter();\n-        for ( int bi = 0, ai = 0; bi < beforeLength || ai < afterLength; )\n+      if (smaller(beforeId, afterId))\n+      {\n+        while (smaller(beforeId, afterId) && bi < beforeLength)\n         {\n-            long beforeId = bi < beforeLength ? before[bi] : -1;\n-            long afterId = ai < afterLength ? after[ai] : -1;\n-            if ( beforeId == afterId )\n-            {   // no change\n-                bi++;\n-                ai++;\n-                continue;\n-            }\n-\n-            if ( smaller( beforeId, afterId ) )\n-            {\n-                while ( smaller( beforeId, afterId ) && bi < beforeLength )\n-                {\n-                    // looks like there's an id in before which isn't in after ==> REMOVE\n-                    update.getLabelsBefore()[bc++] = beforeId;\n-                    bi++;\n-                    beforeId = bi < beforeLength ? before[bi] : -1;\n-                }\n-            }\n-            else if ( smaller( afterId, beforeId ) )\n-            {\n-                while ( smaller( afterId, beforeId ) && ai < afterLength )\n-                {\n-                    // looks like there's an id in after which isn't in before ==> ADD\n-                    update.getLabelsAfter()[ac++] = afterId;\n-                    ai++;\n-                    afterId = ai < afterLength ? after[ai] : -1;\n-                }\n-            }\n+          // looks like there's an id in before which isn't in after ==> REMOVE\n+          update.getLabelsBefore()[bc++] = beforeId;\n+          bi++;\n+          beforeId = bi < beforeLength ? before[bi] : -1;\n         }\n-\n-        terminateWithMinusOneIfNeeded( update.getLabelsBefore(), bc );\n-        terminateWithMinusOneIfNeeded( update.getLabelsAfter(), ac );\n+      } else if (smaller(afterId, beforeId))\n+      {\n+        while (smaller(afterId, beforeId) && ai < afterLength)\n+        {\n+          // looks like there's an id in after which isn't in before ==> ADD\n+          update.getLabelsAfter()[ac++] = afterId;\n+          ai++;\n+          afterId = ai < afterLength ? after[ai] : -1;\n+        }\n+      }\n     }\n \n-    private static boolean smaller( long id, long otherId )\n-    {\n-        return id != -1 && (otherId == -1 || id < otherId);\n-    }\n+    terminateWithMinusOneIfNeeded(update.getLabelsBefore(), bc);\n+    terminateWithMinusOneIfNeeded(update.getLabelsAfter(), ac);\n+  }\n \n-    private static void terminateWithMinusOneIfNeeded( long[] labelIds, int actualLength )\n+  private static boolean smaller(long id, long otherId)\n+  {\n+    return id != -1 && (otherId == -1 || id < otherId);\n+  }\n+\n+  private static void terminateWithMinusOneIfNeeded(long[] labelIds, int actualLength)\n+  {\n+    if (actualLength < labelIds.length)\n     {\n-        if ( actualLength < labelIds.length )\n-        {\n-            labelIds[actualLength] = -1;\n-        }\n+      labelIds[actualLength] = -1;\n     }\n+  }\n }\n",
            "diff_size": 95
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "column": "68",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "73",
                    "column": "66",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3357/PhysicalToLogicalLabelChanges.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3357/PhysicalToLogicalLabelChanges.java\nindex 50c8135fa09..44fabfb1331 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3357/PhysicalToLogicalLabelChanges.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3357/PhysicalToLogicalLabelChanges.java\n@@ -49,7 +49,8 @@ class PhysicalToLogicalLabelChanges\n             long beforeId = bi < beforeLength ? before[bi] : -1;\n             long afterId = ai < afterLength ? after[ai] : -1;\n             if ( beforeId == afterId )\n-            {   // no change\n+            {\n+    // no change\n                 bi++;\n                 ai++;\n                 continue;\n@@ -60,8 +61,7 @@ class PhysicalToLogicalLabelChanges\n                 while ( smaller( beforeId, afterId ) && bi < beforeLength )\n                 {\n                     // looks like there's an id in before which isn't in after ==> REMOVE\n-                    update.getLabelsBefore()[bc++] = beforeId;\n-                    bi++;\n+                    update.getLabelsBefore()[bc++] = beforeId; bi++;\n                     beforeId = bi < beforeLength ? before[bi] : -1;\n                 }\n             }\n@@ -70,8 +70,7 @@ class PhysicalToLogicalLabelChanges\n                 while ( smaller( afterId, beforeId ) && ai < afterLength )\n                 {\n                     // looks like there's an id in after which isn't in before ==> ADD\n-                    update.getLabelsAfter()[ac++] = afterId;\n-                    ai++;\n+                    update.getLabelsAfter()[ac++] = afterId; ai++;\n                     afterId = ai < afterLength ? after[ai] : -1;\n                 }\n             }\n@@ -83,7 +82,7 @@ class PhysicalToLogicalLabelChanges\n \n     private static boolean smaller( long id, long otherId )\n     {\n-        return id != -1 && (otherId == -1 || id < otherId);\n+        return id != -1 && ( otherId == -1 || id < otherId);\n     }\n \n     private static void terminateWithMinusOneIfNeeded( long[] labelIds, int actualLength )\n@@ -93,4 +92,4 @@ class PhysicalToLogicalLabelChanges\n             labelIds[actualLength] = -1;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "52",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "60",
                    "column": "17",
                    "severity": "error",
                    "message": "'while' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "60",
                    "column": "52",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "60",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "17",
                    "severity": "error",
                    "message": "'while' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "71",
                    "column": "52",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "71",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "25",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "87",
                    "column": "44",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3357/PhysicalToLogicalLabelChanges.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3357/PhysicalToLogicalLabelChanges.java\nindex 50c8135fa09..2ac6f454d1b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3357/PhysicalToLogicalLabelChanges.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3357/PhysicalToLogicalLabelChanges.java\n@@ -35,19 +35,19 @@ class PhysicalToLogicalLabelChanges\n      *\n      * @param update {@link NodeLabelUpdate} containing physical before/after state.\n      */\n+\n     static void convertToAdditionsAndRemovals( NodeLabelUpdate update )\n     {\n         int beforeLength = update.getLabelsBefore().length;\n         int afterLength = update.getLabelsAfter().length;\n-\n         int bc = 0;\n         int ac = 0;\n         long[] before = update.getLabelsBefore();\n         long[] after = update.getLabelsAfter();\n-        for ( int bi = 0, ai = 0; bi < beforeLength || ai < afterLength; )\n+        for ( int bi = 0, ai = 0; bi < beforeLength|| ai < afterLength; )\n         {\n-            long beforeId = bi < beforeLength ? before[bi] : -1;\n-            long afterId = ai < afterLength ? after[ai] : -1;\n+            long beforeId = bi < beforeLength ? before[ bi] : - 1;\n+            long afterId = ai < afterLength ? after[ ai] : - 1;\n             if ( beforeId == afterId )\n             {   // no change\n                 bi++;\n@@ -57,22 +57,23 @@ class PhysicalToLogicalLabelChanges\n \n             if ( smaller( beforeId, afterId ) )\n             {\n-                while ( smaller( beforeId, afterId ) && bi < beforeLength )\n+                while( smaller( beforeId, afterId )&& bi < beforeLength)\n                 {\n                     // looks like there's an id in before which isn't in after ==> REMOVE\n-                    update.getLabelsBefore()[bc++] = beforeId;\n+                    update.getLabelsBefore()[bc ++] = beforeId;\n                     bi++;\n-                    beforeId = bi < beforeLength ? before[bi] : -1;\n+                    beforeId = bi < beforeLength ? before[ bi] : - 1;\n                 }\n             }\n-            else if ( smaller( afterId, beforeId ) )\n+            else\n+            if ( smaller( afterId, beforeId ) )\n             {\n-                while ( smaller( afterId, beforeId ) && ai < afterLength )\n+                while( smaller( afterId, beforeId )&& ai < afterLength)\n                 {\n                     // looks like there's an id in after which isn't in before ==> ADD\n-                    update.getLabelsAfter()[ac++] = afterId;\n+                    update.getLabelsAfter()[ac ++] = afterId;\n                     ai++;\n-                    afterId = ai < afterLength ? after[ai] : -1;\n+                    afterId = ai < afterLength ? after[ ai] : - 1;\n                 }\n             }\n         }\n@@ -83,14 +84,14 @@ class PhysicalToLogicalLabelChanges\n \n     private static boolean smaller( long id, long otherId )\n     {\n-        return id != -1 && (otherId == -1 || id < otherId);\n+        return id != - 1&& ( otherId == - 1|| id < otherId);\n     }\n \n     private static void terminateWithMinusOneIfNeeded( long[] labelIds, int actualLength )\n     {\n         if ( actualLength < labelIds.length )\n         {\n-            labelIds[actualLength] = -1;\n+            labelIds[actualLength] = - 1;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
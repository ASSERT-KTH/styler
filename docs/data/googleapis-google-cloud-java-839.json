{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "839",
    "information": {
        "errors": [
            {
                "line": "112",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    assertTrue(GlobalOperationId.matchesUrl(GlobalOperationId.of(PROJECT, NAME).selfLink()));\n    assertFalse(GlobalOperationId.matchesUrl(\"notMatchingUrl\"));\n    assertTrue(RegionOperationId.matchesUrl(RegionOperationId.of(PROJECT, REGION, NAME).selfLink()));\n    assertFalse(RegionOperationId.matchesUrl(\"notMatchingUrl\"));\n    assertTrue(ZoneOperationId.matchesUrl(ZoneOperationId.of(PROJECT, REGION, NAME).selfLink()));\n    assertFalse(ZoneOperationId.matchesUrl(\"notMatchingUrl\"));",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/839/OperationIdTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/839/OperationIdTest.java\nindex 98430f0d1ad..bab3957828c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/839/OperationIdTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/839/OperationIdTest.java\n@@ -109,7 +109,8 @@ public class OperationIdTest {\n   public void testMatchesUrl() {\n     assertTrue(GlobalOperationId.matchesUrl(GlobalOperationId.of(PROJECT, NAME).selfLink()));\n     assertFalse(GlobalOperationId.matchesUrl(\"notMatchingUrl\"));\n-    assertTrue(RegionOperationId.matchesUrl(RegionOperationId.of(PROJECT, REGION, NAME).selfLink()));\n+    assertTrue(RegionOperationId.matchesUrl(RegionOperationId.of(PROJECT, REGION, NAME).selfLink())\n+    );\n     assertFalse(RegionOperationId.matchesUrl(\"notMatchingUrl\"));\n     assertTrue(ZoneOperationId.matchesUrl(ZoneOperationId.of(PROJECT, REGION, NAME).selfLink()));\n     assertFalse(ZoneOperationId.matchesUrl(\"notMatchingUrl\"));\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/839/OperationIdTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/839/OperationIdTest.java\nindex 98430f0d1ad..36bbd948999 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/839/OperationIdTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/839/OperationIdTest.java\n@@ -109,7 +109,8 @@ public class OperationIdTest {\n   public void testMatchesUrl() {\n     assertTrue(GlobalOperationId.matchesUrl(GlobalOperationId.of(PROJECT, NAME).selfLink()));\n     assertFalse(GlobalOperationId.matchesUrl(\"notMatchingUrl\"));\n-    assertTrue(RegionOperationId.matchesUrl(RegionOperationId.of(PROJECT, REGION, NAME).selfLink()));\n+    assertTrue(\n+        RegionOperationId.matchesUrl(RegionOperationId.of(PROJECT, REGION, NAME).selfLink()));\n     assertFalse(RegionOperationId.matchesUrl(\"notMatchingUrl\"));\n     assertTrue(ZoneOperationId.matchesUrl(ZoneOperationId.of(PROJECT, REGION, NAME).selfLink()));\n     assertFalse(ZoneOperationId.matchesUrl(\"notMatchingUrl\"));\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/839/OperationIdTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/839/OperationIdTest.java\nindex 98430f0d1ad..f0a2aef6b23 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/839/OperationIdTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/839/OperationIdTest.java\n@@ -32,14 +32,11 @@ public class OperationIdTest {\n   private static final String ZONE = \"zone\";\n   private static final String REGION = \"region\";\n   private static final String NAME = \"op\";\n-  private static final String GLOBAL_URL =\n-      \"https://www.googleapis.com/compute/v1/projects/project/global/operations/op\";\n-  private static final String ZONE_URL =\n-      \"https://www.googleapis.com/compute/v1/projects/project/zones/zone/operations/op\";\n-  private static final String REGION_URL =\n-      \"https://www.googleapis.com/compute/v1/projects/project/regions/region/operations/op\";\n+  private static final String GLOBAL_URL = \"https://www.googleapis.com/compute/v1/projects/project/global/operations/op\";\n+  private static final String ZONE_URL = \"https://www.googleapis.com/compute/v1/projects/project/zones/zone/operations/op\";\n+  private static final String REGION_URL = \"https://www.googleapis.com/compute/v1/projects/project/regions/region/operations/op\";\n \n-  @Rule\n+@Rule\n   public ExpectedException thrown = ExpectedException.none();\n \n   @Test\n@@ -140,4 +137,4 @@ public class OperationIdTest {\n     assertEquals(expected.selfLink(), expected.selfLink());\n     assertEquals(expected.hashCode(), expected.hashCode());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "101",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/839/OperationIdTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/839/OperationIdTest.java\nindex 98430f0d1ad..e798acd9ea9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/839/OperationIdTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/839/OperationIdTest.java\n@@ -26,18 +26,16 @@ import org.junit.Rule;\n import org.junit.Test;\n import org.junit.rules.ExpectedException;\n \n+\n public class OperationIdTest {\n \n   private static final String PROJECT = \"project\";\n   private static final String ZONE = \"zone\";\n   private static final String REGION = \"region\";\n   private static final String NAME = \"op\";\n-  private static final String GLOBAL_URL =\n-      \"https://www.googleapis.com/compute/v1/projects/project/global/operations/op\";\n-  private static final String ZONE_URL =\n-      \"https://www.googleapis.com/compute/v1/projects/project/zones/zone/operations/op\";\n-  private static final String REGION_URL =\n-      \"https://www.googleapis.com/compute/v1/projects/project/regions/region/operations/op\";\n+  private static final String GLOBAL_URL = \"https://www.googleapis.com/compute/v1/projects/project/global/operations/op\";\n+  private static final String ZONE_URL = \"https://www.googleapis.com/compute/v1/projects/project/zones/zone/operations/op\";\n+  private static final String REGION_URL = \"https://www.googleapis.com/compute/v1/projects/project/regions/region/operations/op\";\n \n   @Rule\n   public ExpectedException thrown = ExpectedException.none();\n@@ -84,8 +82,7 @@ public class OperationIdTest {\n     thrown.expectMessage(\"notMatchingUrl is not a valid zone operation URL\");\n     ZoneOperationId.fromUrl(\"notMatchingUrl\");\n     RegionOperationId regionOperationId = RegionOperationId.of(PROJECT, REGION, NAME);\n-    compareRegionOperationId(regionOperationId,\n-        RegionOperationId.fromUrl(regionOperationId.selfLink()));\n+    compareRegionOperationId(regionOperationId, RegionOperationId.fromUrl(regionOperationId.selfLink()));\n     thrown.expect(IllegalArgumentException.class);\n     thrown.expectMessage(\"notMatchingUrl is not a valid region operation URL\");\n     RegionOperationId.fromUrl(\"notMatchingUrl\");\n@@ -101,8 +98,7 @@ public class OperationIdTest {\n     compareZoneOperationId(zoneOperationId, ZoneOperationId.of(ZONE, NAME).setProjectId(PROJECT));\n     RegionOperationId regionOperationId = RegionOperationId.of(PROJECT, REGION, NAME);\n     assertSame(regionOperationId, regionOperationId.setProjectId(PROJECT));\n-    compareRegionOperationId(regionOperationId,\n-        RegionOperationId.of(REGION, NAME).setProjectId(PROJECT));\n+    compareRegionOperationId(regionOperationId, RegionOperationId.of(REGION, NAME).setProjectId(PROJECT));\n   }\n \n   @Test\n@@ -140,4 +136,4 @@ public class OperationIdTest {\n     assertEquals(expected.selfLink(), expected.selfLink());\n     assertEquals(expected.hashCode(), expected.hashCode());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/839/OperationIdTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/839/OperationIdTest.java\nindex 98430f0d1ad..bab3957828c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/839/OperationIdTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/839/OperationIdTest.java\n@@ -109,7 +109,8 @@ public class OperationIdTest {\n   public void testMatchesUrl() {\n     assertTrue(GlobalOperationId.matchesUrl(GlobalOperationId.of(PROJECT, NAME).selfLink()));\n     assertFalse(GlobalOperationId.matchesUrl(\"notMatchingUrl\"));\n-    assertTrue(RegionOperationId.matchesUrl(RegionOperationId.of(PROJECT, REGION, NAME).selfLink()));\n+    assertTrue(RegionOperationId.matchesUrl(RegionOperationId.of(PROJECT, REGION, NAME).selfLink())\n+    );\n     assertFalse(RegionOperationId.matchesUrl(\"notMatchingUrl\"));\n     assertTrue(ZoneOperationId.matchesUrl(ZoneOperationId.of(PROJECT, REGION, NAME).selfLink()));\n     assertFalse(ZoneOperationId.matchesUrl(\"notMatchingUrl\"));\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
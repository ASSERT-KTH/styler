{
    "project_name": "neo4j-neo4j",
    "error_id": "1731",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "60",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "81",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "91",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "96",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "102",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "130",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "135",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "141",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "157",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "164",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "182",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "185",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1731/GraphExtractionWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1731/GraphExtractionWriter.java\nindex a8f87da0365..e943728de56 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1731/GraphExtractionWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1731/GraphExtractionWriter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.http.cypher.format.output.json;\n \n import com.fasterxml.jackson.core.JsonGenerator;\n@@ -38,176 +39,164 @@ import org.neo4j.server.http.cypher.format.api.RecordEvent;\n class GraphExtractionWriter implements ResultDataContentWriter\n {\n     @Override\n-    public void write( JsonGenerator out, RecordEvent recordEvent, TransactionStateChecker txStateChecker )\n-            throws IOException\n+    public void write(JsonGenerator out, RecordEvent recordEvent, TransactionStateChecker txStateChecker)\n+      throws IOException\n     {\n         Set<Node> nodes = new HashSet<>();\n         Set<Relationship> relationships = new HashSet<>();\n-        extract( nodes, relationships, map( recordEvent ) );\n+        extract(nodes, relationships, map(recordEvent));\n \n-        out.writeObjectFieldStart( \"graph\" );\n+        out.writeObjectFieldStart(\"graph\");\n         try\n         {\n-            writeNodes( out, nodes, txStateChecker );\n-            writeRelationships( out, relationships, txStateChecker );\n-        }\n-        finally\n+            writeNodes(out, nodes, txStateChecker);\n+            writeRelationships(out, relationships, txStateChecker);\n+        } finally\n         {\n             out.writeEndObject();\n         }\n     }\n \n-    private void writeNodes( JsonGenerator out, Iterable<Node> nodes, TransactionStateChecker txStateChecker )\n-            throws IOException\n+    private void writeNodes(JsonGenerator out, Iterable<Node> nodes, TransactionStateChecker txStateChecker)\n+      throws IOException\n     {\n-        out.writeArrayFieldStart( \"nodes\" );\n+        out.writeArrayFieldStart(\"nodes\");\n         try\n         {\n-            for ( Node node : nodes )\n+            for (Node node : nodes)\n             {\n                 out.writeStartObject();\n                 try\n                 {\n                     long nodeId = node.getId();\n-                    out.writeStringField( \"id\", Long.toString( nodeId ) );\n-                    if ( txStateChecker.isNodeDeletedInCurrentTx( nodeId ) )\n+                    out.writeStringField(\"id\", Long.toString(nodeId));\n+                    if (txStateChecker.isNodeDeletedInCurrentTx(nodeId))\n                     {\n-                        markDeleted( out );\n-                    }\n-                    else\n+                        markDeleted(out);\n+                    } else\n                     {\n-                        out.writeArrayFieldStart( \"labels\" );\n+                        out.writeArrayFieldStart(\"labels\");\n                         try\n                         {\n-                            for ( Label label : node.getLabels() )\n+                            for (Label label : node.getLabels())\n                             {\n-                                out.writeString( label.name() );\n+                                out.writeString(label.name());\n                             }\n-                        }\n-                        finally\n+                        } finally\n                         {\n                             out.writeEndArray();\n                         }\n-                        writeProperties( out, node );\n+                        writeProperties(out, node);\n                     }\n-                }\n-                finally\n+                } finally\n                 {\n                     out.writeEndObject();\n                 }\n             }\n-        }\n-        finally\n+        } finally\n         {\n             out.writeEndArray();\n         }\n     }\n \n-    private void markDeleted( JsonGenerator out ) throws IOException\n+    private void markDeleted(JsonGenerator out) throws IOException\n     {\n-        out.writeBooleanField( \"deleted\", Boolean.TRUE );\n+        out.writeBooleanField(\"deleted\", Boolean.TRUE);\n     }\n \n-    private void writeRelationships( JsonGenerator out, Iterable<Relationship> relationships,\n-            TransactionStateChecker txStateChecker ) throws IOException\n+    private void writeRelationships(JsonGenerator out, Iterable<Relationship> relationships,\n+                                    TransactionStateChecker txStateChecker) throws IOException\n     {\n-        out.writeArrayFieldStart( \"relationships\" );\n+        out.writeArrayFieldStart(\"relationships\");\n         try\n         {\n-            for ( Relationship relationship : relationships )\n+            for (Relationship relationship : relationships)\n             {\n                 out.writeStartObject();\n                 try\n                 {\n                     long relationshipId = relationship.getId();\n-                    out.writeStringField( \"id\", Long.toString( relationshipId ) );\n-                    if ( txStateChecker.isRelationshipDeletedInCurrentTx( relationshipId ) )\n+                    out.writeStringField(\"id\", Long.toString(relationshipId));\n+                    if (txStateChecker.isRelationshipDeletedInCurrentTx(relationshipId))\n                     {\n-                        markDeleted( out );\n-                    }\n-                    else\n+                        markDeleted(out);\n+                    } else\n                     {\n-                        out.writeStringField( \"type\", relationship.getType().name() );\n-                        out.writeStringField( \"startNode\", Long.toString( relationship.getStartNode().getId() ) );\n-                        out.writeStringField( \"endNode\", Long.toString( relationship.getEndNode().getId() ) );\n-                        writeProperties( out, relationship );\n+                        out.writeStringField(\"type\", relationship.getType().name());\n+                        out.writeStringField(\"startNode\", Long.toString(relationship.getStartNode().getId()));\n+                        out.writeStringField(\"endNode\", Long.toString(relationship.getEndNode().getId()));\n+                        writeProperties(out, relationship);\n                     }\n-                }\n-                finally\n+                } finally\n                 {\n                     out.writeEndObject();\n                 }\n             }\n-        }\n-        finally\n+        } finally\n         {\n             out.writeEndArray();\n         }\n     }\n \n-    private void writeProperties( JsonGenerator out, Entity container ) throws IOException\n+    private void writeProperties(JsonGenerator out, Entity container) throws IOException\n     {\n-        out.writeObjectFieldStart( \"properties\" );\n+        out.writeObjectFieldStart(\"properties\");\n         try\n         {\n-            for ( Map.Entry<String, Object> property : container.getAllProperties().entrySet() )\n+            for (Map.Entry<String, Object> property : container.getAllProperties().entrySet())\n             {\n-                out.writeObjectField( property.getKey(), property.getValue() );\n+                out.writeObjectField(property.getKey(), property.getValue());\n \n             }\n-        }\n-        finally\n+        } finally\n         {\n             out.writeEndObject();\n         }\n     }\n \n-    private void extract( Set<Node> nodes, Set<Relationship> relationships, Iterable<?> source )\n+    private void extract(Set<Node> nodes, Set<Relationship> relationships, Iterable<?> source)\n     {\n-        for ( Object item : source )\n+        for (Object item : source)\n         {\n-            if ( item instanceof Node )\n+            if (item instanceof Node)\n             {\n-                nodes.add( (Node) item );\n-            }\n-            else if ( item instanceof Relationship )\n+                nodes.add((Node) item);\n+            } else if (item instanceof Relationship)\n             {\n                 Relationship relationship = (Relationship) item;\n-                relationships.add( relationship );\n-                nodes.add( relationship.getStartNode() );\n-                nodes.add( relationship.getEndNode() );\n+                relationships.add(relationship);\n+                nodes.add(relationship.getStartNode());\n+                nodes.add(relationship.getEndNode());\n             }\n-            if ( item instanceof Path )\n+            if (item instanceof Path)\n             {\n                 Path path = (Path) item;\n-                for ( Node node : path.nodes() )\n+                for (Node node : path.nodes())\n                 {\n-                    nodes.add( node );\n+                    nodes.add(node);\n                 }\n-                for ( Relationship relationship : path.relationships() )\n+                for (Relationship relationship : path.relationships())\n                 {\n-                    relationships.add( relationship );\n+                    relationships.add(relationship);\n                 }\n-            }\n-            else if ( item instanceof Map<?, ?> )\n+            } else if (item instanceof Map<?, ?>)\n             {\n-                extract( nodes, relationships, ((Map<?, ?>) item).values() );\n-            }\n-            else if ( item instanceof Iterable<?> )\n+                extract(nodes, relationships, ((Map<?, ?>) item).values());\n+            } else if (item instanceof Iterable<?>)\n             {\n-                extract( nodes, relationships, (Iterable<?>) item );\n+                extract(nodes, relationships, (Iterable<?>) item);\n             }\n         }\n     }\n \n-    private static Iterable<?> map( RecordEvent recordEvent )\n+    private static Iterable<?> map(RecordEvent recordEvent)\n     {\n-        return new IterableWrapper<>( recordEvent.getColumns() )\n+        return new IterableWrapper<>(recordEvent.getColumns())\n         {\n             @Override\n-            protected Object underlyingObjectToObject( String key )\n+            protected Object underlyingObjectToObject(String key)\n             {\n-                return recordEvent.getValue( key );\n+                return recordEvent.getValue(key);\n             }\n         };\n     }\n",
            "diff_size": 77
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
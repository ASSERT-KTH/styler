{
    "project_name": "neo4j-neo4j",
    "error_id": "1448",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1448/XForwardFilter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1448/XForwardFilter.java\nindex 1406d22dd86..b0ce9eec262 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1448/XForwardFilter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1448/XForwardFilter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.web;\n \n import java.net.URI;\n@@ -39,16 +40,16 @@ import static org.neo4j.server.web.XForwardUtil.X_FORWARD_PROTO_HEADER_KEY;\n public class XForwardFilter implements ContainerRequestFilter\n {\n     @Override\n-    public void filter( ContainerRequestContext requestContext )\n+    public void filter(ContainerRequestContext requestContext)\n     {\n-        String xForwardedHost = requestContext.getHeaderString( X_FORWARD_HOST_HEADER_KEY );\n-        String xForwardedProto = requestContext.getHeaderString( X_FORWARD_PROTO_HEADER_KEY );\n+        String xForwardedHost = requestContext.getHeaderString(X_FORWARD_HOST_HEADER_KEY);\n+        String xForwardedProto = requestContext.getHeaderString(X_FORWARD_PROTO_HEADER_KEY);\n \n         UriInfo uriInfo = requestContext.getUriInfo();\n \n-        URI externalBaseUri = XForwardUtil.externalUri( uriInfo.getBaseUri(), xForwardedHost, xForwardedProto );\n-        URI externalRequestUri = XForwardUtil.externalUri( uriInfo.getRequestUri(), xForwardedHost, xForwardedProto );\n+        URI externalBaseUri = XForwardUtil.externalUri(uriInfo.getBaseUri(), xForwardedHost, xForwardedProto);\n+        URI externalRequestUri = XForwardUtil.externalUri(uriInfo.getRequestUri(), xForwardedHost, xForwardedProto);\n \n-        requestContext.setRequestUri( externalBaseUri, externalRequestUri );\n+        requestContext.setRequestUri(externalBaseUri, externalRequestUri);\n     }\n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4363",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4363/LuceneFulltextDocumentStructure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4363/LuceneFulltextDocumentStructure.java\nindex 33f5001b9fd..267fb0e3dd0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4363/LuceneFulltextDocumentStructure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4363/LuceneFulltextDocumentStructure.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.fulltext;\n \n import org.apache.lucene.document.Document;\n@@ -36,81 +37,81 @@ import static org.apache.lucene.document.Field.Store.NO;\n \n class LuceneFulltextDocumentStructure\n {\n-    private static final ThreadLocal<DocWithId> perThreadDocument = ThreadLocal.withInitial( DocWithId::new );\n-\n-    private LuceneFulltextDocumentStructure()\n-    {\n-    }\n-\n-    private static DocWithId reuseDocument( long id )\n+  private static final ThreadLocal<DocWithId> perThreadDocument = ThreadLocal.withInitial(DocWithId::new);\n+\n+  private LuceneFulltextDocumentStructure()\n+  {\n+  }\n+\n+  private static DocWithId reuseDocument(long id)\n+  {\n+    DocWithId doc = perThreadDocument.get();\n+    doc.setId(id);\n+    return doc;\n+  }\n+\n+  static Document documentRepresentingProperties(long id, Map<String, Object> values)\n+  {\n+    DocWithId document = reuseDocument(id);\n+    document.setValues(values);\n+    return document.document;\n+  }\n+\n+  static Field encodeValueField(String propertyKey, Value value)\n+  {\n+    return LuceneFulltextFieldEncoding.encodeField(propertyKey, value);\n+  }\n+\n+  private static class DocWithId\n+  {\n+    private final Document document;\n+\n+    private final Field idField;\n+    private final Field idValueField;\n+\n+    private DocWithId()\n     {\n-        DocWithId doc = perThreadDocument.get();\n-        doc.setId( id );\n-        return doc;\n+      idField = new StringField(FulltextProvider.FIELD_ENTITY_ID, \"\", NO);\n+      idValueField = new NumericDocValuesField(FulltextProvider.FIELD_ENTITY_ID, 0L);\n+      document = new Document();\n+      document.add(idField);\n+      document.add(idValueField);\n     }\n \n-    static Document documentRepresentingProperties( long id, Map<String,Object> values )\n+    private void setId(long id)\n     {\n-        DocWithId document = reuseDocument( id );\n-        document.setValues( values );\n-        return document.document;\n+      removeAllValueFields();\n+      idField.setStringValue(Long.toString(id));\n+      idValueField.setLongValue(id);\n     }\n \n-    static Field encodeValueField( String propertyKey, Value value )\n+    private void setValues(Map<String, Object> values)\n     {\n-        return LuceneFulltextFieldEncoding.encodeField( propertyKey, value );\n+      for (Map.Entry<String, Object> entry : values.entrySet())\n+      {\n+        Field field = encodeValueField(entry.getKey(), Values.of(entry.getValue()));\n+        document.add(field);\n+      }\n     }\n \n-    private static class DocWithId\n+    private void removeAllValueFields()\n     {\n-        private final Document document;\n-\n-        private final Field idField;\n-        private final Field idValueField;\n-\n-        private DocWithId()\n-        {\n-            idField = new StringField( FulltextProvider.FIELD_ENTITY_ID, \"\", NO );\n-            idValueField = new NumericDocValuesField( FulltextProvider.FIELD_ENTITY_ID, 0L );\n-            document = new Document();\n-            document.add( idField );\n-            document.add( idValueField );\n-        }\n-\n-        private void setId( long id )\n+      Iterator<IndexableField> it = document.getFields().iterator();\n+      while (it.hasNext())\n+      {\n+        IndexableField field = it.next();\n+        String fieldName = field.name();\n+        if (!fieldName.equals(FulltextProvider.FIELD_ENTITY_ID))\n         {\n-            removeAllValueFields();\n-            idField.setStringValue( Long.toString( id ) );\n-            idValueField.setLongValue( id );\n+          it.remove();\n         }\n-\n-        private void setValues( Map<String,Object> values )\n-        {\n-            for ( Map.Entry<String,Object> entry : values.entrySet() )\n-            {\n-                Field field = encodeValueField( entry.getKey(), Values.of( entry.getValue() ) );\n-                document.add( field );\n-            }\n-        }\n-\n-        private void removeAllValueFields()\n-        {\n-            Iterator<IndexableField> it = document.getFields().iterator();\n-            while ( it.hasNext() )\n-            {\n-                IndexableField field = it.next();\n-                String fieldName = field.name();\n-                if ( !fieldName.equals( FulltextProvider.FIELD_ENTITY_ID ) )\n-                {\n-                    it.remove();\n-                }\n-            }\n-        }\n-\n+      }\n     }\n \n-    static Term newTermForChangeOrRemove( long id )\n-    {\n-        return new Term( FulltextProvider.FIELD_ENTITY_ID, \"\" + id );\n-    }\n+  }\n+\n+  static Term newTermForChangeOrRemove(long id)\n+  {\n+    return new Term(FulltextProvider.FIELD_ENTITY_ID, \"\" + id);\n+  }\n }\n",
            "diff_size": 98
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4363/LuceneFulltextDocumentStructure.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4363/LuceneFulltextDocumentStructure.java\nindex 33f5001b9fd..0e0c8f897cc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4363/LuceneFulltextDocumentStructure.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4363/LuceneFulltextDocumentStructure.java\n@@ -106,11 +106,10 @@ class LuceneFulltextDocumentStructure\n                 }\n             }\n         }\n-\n     }\n \n     static Term newTermForChangeOrRemove( long id )\n     {\n         return new Term( FulltextProvider.FIELD_ENTITY_ID, \"\" + id );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "seedstack-business",
    "error_id": "125",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "1",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n */\npackage org.seedstack.business.util.inmemory;\n\nimport java.util.Iterator;\nimport java.util.Map;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/125/BaseInMemoryRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/125/BaseInMemoryRepository.java\nindex cff11e399bb..e2ec10d515e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/125/BaseInMemoryRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler/125/BaseInMemoryRepository.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.util.inmemory;\n \n import java.util.Iterator;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/125/BaseInMemoryRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/125/BaseInMemoryRepository.java\nindex cff11e399bb..e2ec10d515e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/125/BaseInMemoryRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/intellij/125/BaseInMemoryRepository.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.util.inmemory;\n \n import java.util.Iterator;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "36",
                    "column": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 40.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/125/BaseInMemoryRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/125/BaseInMemoryRepository.java\nindex cff11e399bb..f84459de69c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/125/BaseInMemoryRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/naturalize/125/BaseInMemoryRepository.java\n@@ -33,7 +33,7 @@ public abstract class BaseInMemoryRepository<A extends AggregateRoot<I>, I> exte\n     private final Map<I, A> bucket = (Map<I, A>) buckets.computeIfAbsent(getAggregateRootClass(),\n             key -> new ConcurrentHashMap<I, A>());\n \n-    /**\n+/**\n      * Creates a base in-memory repository. Actual classes managed by the repository\n      * are determined by reflection.\n      */\n@@ -55,8 +55,7 @@ public abstract class BaseInMemoryRepository<A extends AggregateRoot<I>, I> exte\n     public void add(A a) throws AggregateExistsException {\n         if (bucket.containsKey(a.getId())) {\n             throw new AggregateExistsException(\"Value already exist on repository\");\n-        }\n-        bucket.put(a.getId(), a);\n+        } bucket.put(a.getId(), a);\n     }\n \n     @Override\n@@ -90,4 +89,4 @@ public abstract class BaseInMemoryRepository<A extends AggregateRoot<I>, I> exte\n         }\n         return count;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "8",
                    "column": "1",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "column": "102",
                    "severity": "warning",
                    "message": "WhitespaceAround: '->' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "55",
                    "column": "85",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 84, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "61",
                    "column": "47",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 46, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "column": "43",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 42, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'for' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "72",
                    "column": "41",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 40, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "column": "45",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 44, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "column": "41",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 40, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "column": "48",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "76",
                    "column": "52",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 51, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "column": "48",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 47, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "column": "55",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "79",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "column": "92",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 91, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "column": "88",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 87, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "column": "37",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 36, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "column": "13",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 12, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "column": "9",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'while' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "93",
                    "column": "13",
                    "severity": "warning",
                    "message": "WhitespaceAround: 'if' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/125/BaseInMemoryRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/125/BaseInMemoryRepository.java\nindex cff11e399bb..6ce3f216b2c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/125/BaseInMemoryRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/codebuff/125/BaseInMemoryRepository.java\n@@ -27,18 +27,21 @@ import org.seedstack.business.specification.Specification;\n  * insertion order is NOT guaranteed to be maintained through the repository\n  * lifecycle.\n  */\n+\n+\n public abstract class BaseInMemoryRepository<A extends AggregateRoot<I>, I> extends BaseRepository<A, I> {\n+\n     private static final ConcurrentMap<Class<?>, Map<?, ?>> buckets = new ConcurrentHashMap<>();\n+\n     @SuppressWarnings(\"unchecked\")\n-    private final Map<I, A> bucket = (Map<I, A>) buckets.computeIfAbsent(getAggregateRootClass(),\n-            key -> new ConcurrentHashMap<I, A>());\n+    private final Map<I, A> bucket = (Map<I, A>) buckets.computeIfAbsent(getAggregateRootClass(), key-> new ConcurrentHashMap<I, A>());\n \n     /**\n      * Creates a base in-memory repository. Actual classes managed by the repository\n      * are determined by reflection.\n      */\n-    protected BaseInMemoryRepository() {\n-    }\n+\n+    protected BaseInMemoryRepository() {}\n \n     /**\n      * Creates a base in-memory repository. Actual classes managed by the repository\n@@ -47,47 +50,51 @@ public abstract class BaseInMemoryRepository<A extends AggregateRoot<I>, I> exte\n      * @param aggregateRootClass the actual aggregate root class.\n      * @param idClass            the actual aggregate identifier class.\n      */\n+\n     protected BaseInMemoryRepository(Class<A> aggregateRootClass, Class<I> idClass) {\n-        super(aggregateRootClass, idClass);\n+                                                                                    super(aggregateRootClass, idClass);\n     }\n \n     @Override\n     public void add(A a) throws AggregateExistsException {\n-        if (bucket.containsKey(a.getId())) {\n-            throw new AggregateExistsException(\"Value already exist on repository\");\n-        }\n+        if(bucket.containsKey(a.getId())) {\n+                                              throw new AggregateExistsException(\"Value already exist on repository\");\n+                                          }\n         bucket.put(a.getId(), a);\n     }\n \n     @Override\n     public Stream<A> get(Specification<A> specification, Option... options) {\n         Stream<A> stream = bucket.values()\n-                .stream()\n-                .filter(specification.asPredicate());\n-        for (Option option : options) {\n-            if (option instanceof OffsetOption) {\n-                stream = stream.skip(((OffsetOption) option).getOffset());\n-            } else if (option instanceof LimitOption) {\n-                stream = stream.limit(((LimitOption) option).getLimit());\n-            } else if (option instanceof SortOption) {\n-                stream = stream.sorted(((SortOption) option).buildComparator());\n-            }\n-        }\n+            .stream()\n+            .filter(specification.asPredicate());\n+        for(Option option :options) {\n+                                        if (option instanceof OffsetOption) {\n+                                            stream = stream.skip(((OffsetOption) option)\n+                                                .getOffset());\n+                                        } else if(option instanceof LimitOption) {\n+                                                   stream = stream.limit(((LimitOption) option)\n+                                                       .getLimit());\n+                                               } else if(option instanceof SortOption) {\n+                                                                                           stream = stream.sorted(((SortOption) option)\n+                                                                                               .buildComparator());\n+                                                                                       }\n+                                    }\n         return stream;\n     }\n \n     @Override\n     public long remove(Specification<A> specification) {\n         Iterator<Map.Entry<I, A>> iterator = bucket.entrySet()\n-                .iterator();\n+            .iterator();\n         int count = 0;\n-        while (iterator.hasNext()) {\n+        while(iterator.hasNext()) {\n             Map.Entry<I, A> next = iterator.next();\n-            if (specification.isSatisfiedBy(next.getValue())) {\n+            if(specification.isSatisfiedBy(next.getValue())) {\n                 iterator.remove();\n                 count++;\n             }\n         }\n         return count;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 31
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/125/BaseInMemoryRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/125/BaseInMemoryRepository.java\nindex cff11e399bb..e2ec10d515e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/125/BaseInMemoryRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_random/125/BaseInMemoryRepository.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.util.inmemory;\n \n import java.util.Iterator;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/125/BaseInMemoryRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/125/BaseInMemoryRepository.java\nindex cff11e399bb..e2ec10d515e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/errored/1/125/BaseInMemoryRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/seedstack-business/styler_three_grams/125/BaseInMemoryRepository.java\n@@ -5,6 +5,7 @@\n  * License, v. 2.0. If a copy of the MPL was not distributed with this\n  * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n  */\n+\n package org.seedstack.business.util.inmemory;\n \n import java.util.Iterator;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
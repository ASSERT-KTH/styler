{
    "project_name": "findbugsproject-findbugs",
    "error_id": "85",
    "information": {
        "errors": [
            {
                "line": "13",
                "column": "56",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": " * This library is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\t See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "13",
                    "column": "56",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "13",
                    "column": "56",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/85/FindBugsFrame.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/85/FindBugsFrame.java\nindex f6cce276369..1b2140f63a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/85/FindBugsFrame.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/85/FindBugsFrame.java\n@@ -133,7 +133,7 @@ import edu.umd.cs.findbugs.log.Logger;\n  *\n  * @author David Hovemeyer\n  */\n-public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync {\n+public final class FindBugsFrame extends javax.swing.JFrame implements LogSync {\n     /**\n      *\n      */\n@@ -147,7 +147,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      *\n      */\n-    private static final Font LABEL_FONT = new java.awt.Font(\"Dialog\", 1, 2*fontSize);\n+    private static final Font LABEL_FONT = new java.awt.Font(\"Dialog\", 1, 2 * fontSize);\n \n     /**\n      *\n@@ -193,14 +193,15 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                     result.append(\": \");\n                 }\n \n-                if (bugInstance.isExperimental())\n+                if (bugInstance.isExperimental()) {\n                     result.append(L10N.getLocalString(\"msg.exp_txt\", \"EXP: \"));\n+                }\n \n                 result.append(fullDescriptionsItem.isSelected() ? bugInstance.getMessage() : bugInstance.toString());\n \n                 return result.toString();\n             } catch (Exception e) {\n-                return MessageFormat.format(L10N.getLocalString(\"msg.errorformatting_txt\", \"Error formatting message for bug: \"), new Object[]{e.toString()});\n+                return MessageFormat.format(L10N.getLocalString(\"msg.errorformatting_txt\", \"Error formatting message for bug: \"), new Object[] {e.toString()});\n             }\n         }\n     }\n@@ -230,6 +231,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      */\n     private static class BugInstancePackageComparator implements Comparator<BugInstance>, Serializable {\n         private static final long serialVersionUID = 1L;\n+\n         public int compare(BugInstance lhs, BugInstance rhs) {\n             return lhs.getPrimaryClass().getPackageName().compareTo(rhs.getPrimaryClass().getPackageName());\n         }\n@@ -248,6 +250,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      */\n     private static class BugInstanceTypeComparator implements Comparator<BugInstance>, Serializable {\n         private static final long serialVersionUID = 1L;\n+\n         public int compare(BugInstance lhs, BugInstance rhs) {\n             String lhsString = lhs.toString();\n             String rhsString = rhs.toString();\n@@ -276,8 +279,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         private String getCategory(BugInstance warning) {\n             BugPattern bugPattern = warning.getBugPattern();\n             if (bugPattern == null) {\n-                if (FindBugs.DEBUG)\n+                if (FindBugs.DEBUG) {\n                     System.out.println(\"Unknown bug pattern for bug type: \" + warning.getType());\n+                }\n                 return \"\";\n             } else {\n                 return bugPattern.getCategory();\n@@ -290,16 +294,18 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      */\n     private static final Comparator<BugInstance> bugInstanceCategoryComparator = new BugInstanceCategoryComparator();\n \n-        /**\n+    /**\n      * Two-level comparison of bug instances by class name and\n      * BugInstance natural ordering.\n      */\n     private static class BugInstanceByClassComparator implements Comparator<BugInstance>, Serializable {\n         private static final long serialVersionUID = 1L;\n+\n         public int compare(BugInstance a, BugInstance b) {\n             int cmp = bugInstanceClassComparator.compare(a, b);\n-            if (cmp != 0)\n+            if (cmp != 0) {\n                 return cmp;\n+            }\n             return a.compareTo(b);\n         }\n     }\n@@ -316,8 +322,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     private static class BugInstanceByPackageComparator implements Comparator<BugInstance> {\n         public int compare(BugInstance a, BugInstance b) {\n             int cmp = bugInstancePackageComparator.compare(a, b);\n-            if (cmp != 0)\n+            if (cmp != 0) {\n                 return cmp;\n+            }\n             return a.compareTo(b);\n         }\n     }\n@@ -333,15 +340,17 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      */\n     private static class BugInstanceByTypeComparator implements Comparator<BugInstance>, Serializable {\n         private static final long serialVersionUID = 1L;\n+\n         public int compare(BugInstance a, BugInstance b) {\n             int cmp = bugInstanceTypeComparator.compare(a, b);\n-            if (cmp != 0)\n+            if (cmp != 0) {\n                 return cmp;\n+            }\n             return a.compareTo(b);\n         }\n     }\n \n-        /**\n+    /**\n      * The instance of BugTypeByTypeComparator.\n      */\n     private static final Comparator<BugInstance> bugInstanceByTypeComparator = new FindBugsFrame.BugInstanceByTypeComparator();\n@@ -352,20 +361,22 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      */\n     private static class BugInstanceByCategoryComparator implements Comparator<BugInstance>, Serializable {\n         private static final long serialVersionUID = 1L;\n+\n         public int compare(BugInstance a, BugInstance b) {\n             int cmp = bugInstanceCategoryComparator.compare(a, b);\n-            if (cmp != 0)\n+            if (cmp != 0) {\n                 return cmp;\n+            }\n             return a.compareTo(b);\n         }\n     }\n \n-         /**\n+    /**\n      * The instance of BugTypeByCategoryComparator.\n      */\n     private static final Comparator<BugInstance> bugInstanceByCategoryComparator = new FindBugsFrame.BugInstanceByCategoryComparator();\n \n-        /**\n+    /**\n      * Swing FileFilter class for file selection dialogs for FindBugs project files.\n      */\n     private static class ProjectFileFilter extends FileFilter {\n@@ -380,7 +391,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         }\n     }\n \n-        /**\n+    /**\n      * The instance of ProjectFileFilter.\n      */\n     private static final FileFilter projectFileFilter = new ProjectFileFilter();\n@@ -445,13 +456,15 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     private static class ArchiveAndDirectoryFilter extends FileFilter {\n         @Override\n         public boolean accept(File file) {\n-            if (file.isDirectory())\n+            if (file.isDirectory()) {\n                 return true;\n+            }\n \n             String fileName = file.getName();\n             int dot = fileName.lastIndexOf('.');\n-            if (dot < 0)\n+            if (dot < 0) {\n                 return false;\n+            }\n             String extension = fileName.substring(dot);\n             return archiveExtensionSet.contains(extension);\n         }\n@@ -474,7 +487,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     static final String GROUP_BY_CLASS = \"By class\";\n     static final String GROUP_BY_PACKAGE = \"By package\";\n     static final String GROUP_BY_BUG_TYPE = \"By bug type\";\n-        static final String GROUP_BY_BUG_CATEGORY=\"By bug category\";\n+    static final String GROUP_BY_BUG_CATEGORY = \"By bug category\";\n     private static final String[] GROUP_BY_ORDER_LIST = {\n         GROUP_BY_CLASS, GROUP_BY_PACKAGE, GROUP_BY_BUG_TYPE, GROUP_BY_BUG_CATEGORY\n     };\n@@ -648,6 +661,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             public void windowClosing(java.awt.event.WindowEvent evt) {\n                 exitForm(evt);\n             }\n+\n             @Override\n             public void windowOpened(java.awt.event.WindowEvent evt) {\n                 formWindowOpened(evt);\n@@ -1268,7 +1282,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         viewPanel.add(bugTreePanel, \"BugTree\");\n \n         {\n-            equalizeControls( new JComponent[]\n+            equalizeControls(new JComponent[]\n                 {\n                     addJarButton,\n                     addSourceDirButton,\n@@ -1285,445 +1299,449 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                     classpathDownButton\n                 });\n \n-                groupByTabbedPane.setTitleAt(0, L10N.getLocalString( \"dlg.byclass_tab\", \"By Class\"));\n-                groupByTabbedPane.setTitleAt(1, L10N.getLocalString( \"dlg.bypackage_tab\", \"By Package\"));\n-                groupByTabbedPane.setTitleAt(2, L10N.getLocalString( \"dlg.bybugtype_tab\", \"By Bug Type\"));\n-                groupByTabbedPane.setTitleAt(3, L10N.getLocalString( \"dlg.bybugcategory_tab\", \"By Bug Category\"));\n-                groupByTabbedPane.setTitleAt(4, L10N.getLocalString( \"dlg.summary_tab\", \"Summary\"));\n-                bugDetailsTabbedPane.setTitleAt(0, L10N.getLocalString( \"dlg.details_tab\", \"Details\"));\n-                bugDetailsTabbedPane.setTitleAt(1, L10N.getLocalString( \"dlg.sourcecode_tab\", \"Source Code\"));\n-                bugDetailsTabbedPane.setTitleAt(2, L10N.getLocalString( \"dlg.annotations_tab\", \"Annotations\"));\n-            }\n-\n-            gridBagConstraints = new java.awt.GridBagConstraints();\n-            gridBagConstraints.gridx = 0;\n-            gridBagConstraints.gridy = 0;\n-            gridBagConstraints.gridwidth = 2;\n-            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n-            gridBagConstraints.weightx = 1.0;\n-            gridBagConstraints.weighty = 1.0;\n-            getContentPane().add(viewPanel, gridBagConstraints);\n-\n-            urlLabel.setFont(BUTTON_FONT);\n-            urlLabel.setText(\"FindBugs - http://findbugs.sourceforge.net/\");\n-            gridBagConstraints = new java.awt.GridBagConstraints();\n-            gridBagConstraints.gridx = 0;\n-            gridBagConstraints.gridy = 1;\n-            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n-            gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 0);\n-            getContentPane().add(urlLabel, gridBagConstraints);\n-\n-            jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.X_AXIS));\n-\n-            jPanel1.add(logoLabel);\n-\n-            growBoxSpacer.setMaximumSize(new java.awt.Dimension(16, 16));\n-            jPanel1.add(growBoxSpacer);\n-\n-            gridBagConstraints = new java.awt.GridBagConstraints();\n-            gridBagConstraints.gridx = 1;\n-            gridBagConstraints.gridy = 1;\n-            gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;\n-            gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 2);\n-            getContentPane().add(jPanel1, gridBagConstraints);\n-\n-            theMenuBar.setFont(BUTTON_FONT);\n-            fileMenu.setText(\"File\");\n-            fileMenu.setFont(BUTTON_FONT);\n-            localiseButton(fileMenu, \"menu.file_menu\", \"&File\", true);\n-            fileMenu.addMenuListener(new javax.swing.event.MenuListener() {\n-                public void menuCanceled(javax.swing.event.MenuEvent evt) {\n-                }\n-                public void menuDeselected(javax.swing.event.MenuEvent evt) {\n-                }\n-                public void menuSelected(javax.swing.event.MenuEvent evt) {\n-                    fileMenuMenuSelected(evt);\n-                }\n-            });\n+            groupByTabbedPane.setTitleAt(0, L10N.getLocalString(\"dlg.byclass_tab\", \"By Class\"));\n+            groupByTabbedPane.setTitleAt(1, L10N.getLocalString(\"dlg.bypackage_tab\", \"By Package\"));\n+            groupByTabbedPane.setTitleAt(2, L10N.getLocalString(\"dlg.bybugtype_tab\", \"By Bug Type\"));\n+            groupByTabbedPane.setTitleAt(3, L10N.getLocalString(\"dlg.bybugcategory_tab\", \"By Bug Category\"));\n+            groupByTabbedPane.setTitleAt(4, L10N.getLocalString(\"dlg.summary_tab\", \"Summary\"));\n+            bugDetailsTabbedPane.setTitleAt(0, L10N.getLocalString(\"dlg.details_tab\", \"Details\"));\n+            bugDetailsTabbedPane.setTitleAt(1, L10N.getLocalString(\"dlg.sourcecode_tab\", \"Source Code\"));\n+            bugDetailsTabbedPane.setTitleAt(2, L10N.getLocalString(\"dlg.annotations_tab\", \"Annotations\"));\n+        }\n \n-            newProjectItem.setFont(BUTTON_FONT);\n-            newProjectItem.setText(\"New Project\");\n-            localiseButton(newProjectItem, \"menu.new_item\", \"&New Project\", true);\n-            newProjectItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    newProjectItemActionPerformed(evt);\n-                }\n-            });\n+        gridBagConstraints = new java.awt.GridBagConstraints();\n+        gridBagConstraints.gridx = 0;\n+        gridBagConstraints.gridy = 0;\n+        gridBagConstraints.gridwidth = 2;\n+        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n+        gridBagConstraints.weightx = 1.0;\n+        gridBagConstraints.weighty = 1.0;\n+        getContentPane().add(viewPanel, gridBagConstraints);\n \n-            fileMenu.add(newProjectItem);\n+        urlLabel.setFont(BUTTON_FONT);\n+        urlLabel.setText(\"FindBugs - http://findbugs.sourceforge.net/\");\n+        gridBagConstraints = new java.awt.GridBagConstraints();\n+        gridBagConstraints.gridx = 0;\n+        gridBagConstraints.gridy = 1;\n+        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n+        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 0);\n+        getContentPane().add(urlLabel, gridBagConstraints);\n \n-            openProjectItem.setFont(BUTTON_FONT);\n-            openProjectItem.setText(\"Open Project...\");\n-            localiseButton(openProjectItem, \"menu.open_item\", \"&Open Project...\", true);\n-            openProjectItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    openProjectItemActionPerformed(evt);\n-                }\n-            });\n+        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.X_AXIS));\n \n-            fileMenu.add(openProjectItem);\n+        jPanel1.add(logoLabel);\n \n-            recentProjectsMenu.setText(\"Recent Projects\");\n-            recentProjectsMenu.setFont(BUTTON_FONT);\n-            localiseButton(recentProjectsMenu, \"menu.recent_menu\", \"R&ecent Projects\", true);\n-            rebuildRecentProjectsMenu();\n-            fileMenu.add(recentProjectsMenu);\n+        growBoxSpacer.setMaximumSize(new java.awt.Dimension(16, 16));\n+        jPanel1.add(growBoxSpacer);\n \n-            fileMenu.add(jSeparator9);\n+        gridBagConstraints = new java.awt.GridBagConstraints();\n+        gridBagConstraints.gridx = 1;\n+        gridBagConstraints.gridy = 1;\n+        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;\n+        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 2);\n+        getContentPane().add(jPanel1, gridBagConstraints);\n \n-            closeProjectItem.setFont(BUTTON_FONT);\n-            closeProjectItem.setText(\"Close Project\");\n-            localiseButton(closeProjectItem, \"menu.close_item\", \"&Close Project\", true);\n-            closeProjectItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    closeProjectItemActionPerformed(evt);\n-                }\n-            });\n+        theMenuBar.setFont(BUTTON_FONT);\n+        fileMenu.setText(\"File\");\n+        fileMenu.setFont(BUTTON_FONT);\n+        localiseButton(fileMenu, \"menu.file_menu\", \"&File\", true);\n+        fileMenu.addMenuListener(new javax.swing.event.MenuListener() {\n+            public void menuCanceled(javax.swing.event.MenuEvent evt) {\n+            }\n \n-            fileMenu.add(closeProjectItem);\n+            public void menuDeselected(javax.swing.event.MenuEvent evt) {\n+            }\n \n-            saveProjectItem.setFont(BUTTON_FONT);\n-            saveProjectItem.setText(\"Save Project\");\n-            localiseButton(saveProjectItem, \"menu.save_item\", \"&Save Project\", true);\n-            saveProjectItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    saveProjectItemActionPerformed(evt);\n-                }\n-            });\n+            public void menuSelected(javax.swing.event.MenuEvent evt) {\n+                fileMenuMenuSelected(evt);\n+            }\n+        });\n \n-            fileMenu.add(saveProjectItem);\n+        newProjectItem.setFont(BUTTON_FONT);\n+        newProjectItem.setText(\"New Project\");\n+        localiseButton(newProjectItem, \"menu.new_item\", \"&New Project\", true);\n+        newProjectItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                newProjectItemActionPerformed(evt);\n+            }\n+        });\n \n-            saveProjectAsItem.setFont(BUTTON_FONT);\n-            saveProjectAsItem.setText(\"Save Project As...\");\n-            localiseButton(saveProjectAsItem, \"menu.saveas_item\", \"Save Project &As...\", true);\n-            saveProjectAsItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    saveProjectAsItemActionPerformed(evt);\n-                }\n-            });\n+        fileMenu.add(newProjectItem);\n \n-            fileMenu.add(saveProjectAsItem);\n+        openProjectItem.setFont(BUTTON_FONT);\n+        openProjectItem.setText(\"Open Project...\");\n+        localiseButton(openProjectItem, \"menu.open_item\", \"&Open Project...\", true);\n+        openProjectItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                openProjectItemActionPerformed(evt);\n+            }\n+        });\n \n-            reloadProjectItem.setFont(BUTTON_FONT);\n-            reloadProjectItem.setText(\"Reload Project\");\n-            localiseButton(reloadProjectItem, \"menu.reload_item\", \"&Reload Project\", true);\n-            reloadProjectItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    reloadProjectItemActionPerformed(evt);\n-                }\n-            });\n+        fileMenu.add(openProjectItem);\n \n-            fileMenu.add(reloadProjectItem);\n+        recentProjectsMenu.setText(\"Recent Projects\");\n+        recentProjectsMenu.setFont(BUTTON_FONT);\n+        localiseButton(recentProjectsMenu, \"menu.recent_menu\", \"R&ecent Projects\", true);\n+        rebuildRecentProjectsMenu();\n+        fileMenu.add(recentProjectsMenu);\n \n-            fileMenu.add(jSeparator3);\n+        fileMenu.add(jSeparator9);\n \n-            loadBugsItem.setFont(BUTTON_FONT);\n-            loadBugsItem.setText(\"Load Bugs...\");\n-            localiseButton(loadBugsItem, \"menu.loadbugs_item\", \"&Load Bugs...\", true);\n-            loadBugsItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    loadBugsItemActionPerformed(evt);\n-                }\n-            });\n+        closeProjectItem.setFont(BUTTON_FONT);\n+        closeProjectItem.setText(\"Close Project\");\n+        localiseButton(closeProjectItem, \"menu.close_item\", \"&Close Project\", true);\n+        closeProjectItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                closeProjectItemActionPerformed(evt);\n+            }\n+        });\n \n-            fileMenu.add(loadBugsItem);\n+        fileMenu.add(closeProjectItem);\n \n-            saveBugsItem.setFont(BUTTON_FONT);\n-            saveBugsItem.setText(\"Save Bugs\");\n-            localiseButton(saveBugsItem, \"menu.savebugs_item\", \"Save &Bugs...\", true);\n-            saveBugsItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    saveBugsItemActionPerformed(evt);\n-                }\n-            });\n+        saveProjectItem.setFont(BUTTON_FONT);\n+        saveProjectItem.setText(\"Save Project\");\n+        localiseButton(saveProjectItem, \"menu.save_item\", \"&Save Project\", true);\n+        saveProjectItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                saveProjectItemActionPerformed(evt);\n+            }\n+        });\n \n-            fileMenu.add(saveBugsItem);\n+        fileMenu.add(saveProjectItem);\n \n-            fileMenu.add(jSeparator6);\n+        saveProjectAsItem.setFont(BUTTON_FONT);\n+        saveProjectAsItem.setText(\"Save Project As...\");\n+        localiseButton(saveProjectAsItem, \"menu.saveas_item\", \"Save Project &As...\", true);\n+        saveProjectAsItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                saveProjectAsItemActionPerformed(evt);\n+            }\n+        });\n \n-            exitItem.setFont(BUTTON_FONT);\n-            exitItem.setText(\"Exit\");\n-            localiseButton(exitItem, \"menu.exit_item\", \"E&xit\", true);\n-            exitItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    exitItemActionPerformed(evt);\n-                }\n-            });\n+        fileMenu.add(saveProjectAsItem);\n \n-            fileMenu.add(exitItem);\n+        reloadProjectItem.setFont(BUTTON_FONT);\n+        reloadProjectItem.setText(\"Reload Project\");\n+        localiseButton(reloadProjectItem, \"menu.reload_item\", \"&Reload Project\", true);\n+        reloadProjectItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                reloadProjectItemActionPerformed(evt);\n+            }\n+        });\n \n-            theMenuBar.add(fileMenu);\n+        fileMenu.add(reloadProjectItem);\n \n-            editMenu.setText(\"Edit\");\n-            editMenu.setFont(BUTTON_FONT);\n-            editMenu.setEnabled(false);\n-            localiseButton(editMenu, \"menu.edit_menu\", \"&Edit\", true);\n-            cutItem.setFont(BUTTON_FONT);\n-            cutItem.setText(\"Cut\");\n-            localiseButton(cutItem, \"menu.cut_item\", \"Cut\", true);\n-            cutItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    cutActionPerformed(evt);\n-                }\n-            });\n+        fileMenu.add(jSeparator3);\n \n-            editMenu.add(cutItem);\n+        loadBugsItem.setFont(BUTTON_FONT);\n+        loadBugsItem.setText(\"Load Bugs...\");\n+        localiseButton(loadBugsItem, \"menu.loadbugs_item\", \"&Load Bugs...\", true);\n+        loadBugsItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                loadBugsItemActionPerformed(evt);\n+            }\n+        });\n \n-            copyItem.setFont(BUTTON_FONT);\n-            copyItem.setText(\"Copy\");\n-            localiseButton(copyItem, \"menu.copy_item\", \"Copy\", true);\n-            copyItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    copyActionPerformed(evt);\n-                }\n-            });\n+        fileMenu.add(loadBugsItem);\n \n-            editMenu.add(copyItem);\n+        saveBugsItem.setFont(BUTTON_FONT);\n+        saveBugsItem.setText(\"Save Bugs\");\n+        localiseButton(saveBugsItem, \"menu.savebugs_item\", \"Save &Bugs...\", true);\n+        saveBugsItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                saveBugsItemActionPerformed(evt);\n+            }\n+        });\n \n-            pasteItem.setFont(BUTTON_FONT);\n-            pasteItem.setText(\"Paste\");\n-            localiseButton(pasteItem, \"menu.paste_item\", \"Paste\", true);\n-            pasteItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    pasteActionPerformed(evt);\n-                }\n-            });\n+        fileMenu.add(saveBugsItem);\n \n-            editMenu.add(pasteItem);\n+        fileMenu.add(jSeparator6);\n \n-            editMenu.add(jSeparator10);\n+        exitItem.setFont(BUTTON_FONT);\n+        exitItem.setText(\"Exit\");\n+        localiseButton(exitItem, \"menu.exit_item\", \"E&xit\", true);\n+        exitItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                exitItemActionPerformed(evt);\n+            }\n+        });\n \n-            selectAllItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));\n-            selectAllItem.setFont(BUTTON_FONT);\n-            selectAllItem.setText(\"Select All\");\n-            localiseButton(selectAllItem, \"menu.selectall_item\", \"Select &All\", true);\n-            selectAllItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    selectAllActionPerformed(evt);\n-                }\n-            });\n+        fileMenu.add(exitItem);\n \n-            editMenu.add(selectAllItem);\n+        theMenuBar.add(fileMenu);\n \n-            theMenuBar.add(editMenu);\n+        editMenu.setText(\"Edit\");\n+        editMenu.setFont(BUTTON_FONT);\n+        editMenu.setEnabled(false);\n+        localiseButton(editMenu, \"menu.edit_menu\", \"&Edit\", true);\n+        cutItem.setFont(BUTTON_FONT);\n+        cutItem.setText(\"Cut\");\n+        localiseButton(cutItem, \"menu.cut_item\", \"Cut\", true);\n+        cutItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                cutActionPerformed(evt);\n+            }\n+        });\n \n-            viewMenu.setText(\"View\");\n-            viewMenu.setFont(BUTTON_FONT);\n-            localiseButton(viewMenu, \"menu.view_menu\", \"&View\", true);\n+        editMenu.add(cutItem);\n \n-            viewMenu.addMenuListener(new javax.swing.event.MenuListener() {\n-                public void menuCanceled(javax.swing.event.MenuEvent evt) {\n-                }\n-                public void menuDeselected(javax.swing.event.MenuEvent evt) {\n-                }\n-                public void menuSelected(javax.swing.event.MenuEvent evt) {\n-                    viewMenuMenuSelected(evt);\n-                }\n-            });\n+        copyItem.setFont(BUTTON_FONT);\n+        copyItem.setText(\"Copy\");\n+        localiseButton(copyItem, \"menu.copy_item\", \"Copy\", true);\n+        copyItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                copyActionPerformed(evt);\n+            }\n+        });\n \n-            viewBugDetailsItem.setFont(BUTTON_FONT);\n-            viewBugDetailsItem.setSelected(true);\n-            viewBugDetailsItem.setText(\"Bug Details\");\n-            localiseButton(viewBugDetailsItem, \"menu.bugdetails_item\", \"Bug &Details\", true);\n-            viewBugDetailsItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    viewBugDetailsItemActionPerformed(evt);\n-                }\n-            });\n+        editMenu.add(copyItem);\n \n-            viewMenu.add(viewBugDetailsItem);\n+        pasteItem.setFont(BUTTON_FONT);\n+        pasteItem.setText(\"Paste\");\n+        localiseButton(pasteItem, \"menu.paste_item\", \"Paste\", true);\n+        pasteItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                pasteActionPerformed(evt);\n+            }\n+        });\n \n-            fullDescriptionsItem.setFont(BUTTON_FONT);\n-            fullDescriptionsItem.setSelected(true);\n-            fullDescriptionsItem.setText(\"Full Descriptions\");\n-            localiseButton(fullDescriptionsItem, \"menu.fulldescriptions_item\", \"&Full Descriptions\", true);\n-            fullDescriptionsItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    fullDescriptionsItemActionPerformed(evt);\n-                }\n-            });\n+        editMenu.add(pasteItem);\n \n-            viewMenu.add(fullDescriptionsItem);\n-\n-            viewMenu.add(jSeparator7);\n-\n-            filterWarningsMenu.setText(\"Filter Warnings\");\n-            filterWarningsMenu.setFont(BUTTON_FONT);\n-            localiseButton(filterWarningsMenu, \"menu.filterwarnings_menu\", \"Filter &Warnings\", true);\n-            expPriorityButton.setFont(BUTTON_FONT);\n-            expPriorityButton.setText(\"Experimental Priority\");\n-            priorityButtonGroup.add(expPriorityButton);\n-            localiseButton(expPriorityButton, \"menu.exppriority_item\", \"&Experimental Priority\", true);\n-            expPriorityButton.setSelected(getPriorityThreshold() == Detector.EXP_PRIORITY);\n-            expPriorityButton.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    expPriorityButtonActionPerformed(evt);\n-                }\n-            });\n+        editMenu.add(jSeparator10);\n \n-            filterWarningsMenu.add(expPriorityButton);\n+        selectAllItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));\n+        selectAllItem.setFont(BUTTON_FONT);\n+        selectAllItem.setText(\"Select All\");\n+        localiseButton(selectAllItem, \"menu.selectall_item\", \"Select &All\", true);\n+        selectAllItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                selectAllActionPerformed(evt);\n+            }\n+        });\n \n-            lowPriorityButton.setFont(BUTTON_FONT);\n-            lowPriorityButton.setText(\"Low Priority\");\n-            priorityButtonGroup.add(lowPriorityButton);\n-            localiseButton(lowPriorityButton, \"menu.lowpriority_item\", \"&Low Priority\", true);\n-            lowPriorityButton.setSelected(getPriorityThreshold() == Detector.LOW_PRIORITY);\n-            lowPriorityButton.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    lowPriorityButtonActionPerformed(evt);\n-                }\n-            });\n+        editMenu.add(selectAllItem);\n \n-            filterWarningsMenu.add(lowPriorityButton);\n+        theMenuBar.add(editMenu);\n \n-            mediumPriorityButton.setFont(BUTTON_FONT);\n-            mediumPriorityButton.setText(\"Medium Priority\");\n-            priorityButtonGroup.add(mediumPriorityButton);\n-            localiseButton(mediumPriorityButton, \"menu.mediumpriority_item\", \"&Medium Priority\", true);\n-            mediumPriorityButton.setSelected(getPriorityThreshold() == Detector.NORMAL_PRIORITY);\n-            mediumPriorityButton.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    mediumPriorityButtonActionPerformed(evt);\n-                }\n-            });\n+        viewMenu.setText(\"View\");\n+        viewMenu.setFont(BUTTON_FONT);\n+        localiseButton(viewMenu, \"menu.view_menu\", \"&View\", true);\n \n-            filterWarningsMenu.add(mediumPriorityButton);\n+        viewMenu.addMenuListener(new javax.swing.event.MenuListener() {\n+            public void menuCanceled(javax.swing.event.MenuEvent evt) {\n+            }\n \n-            highPriorityButton.setFont(BUTTON_FONT);\n-            highPriorityButton.setText(\"High Priority\");\n-            priorityButtonGroup.add(highPriorityButton);\n-            localiseButton(highPriorityButton, \"menu.highpriority_item\", \"&High Priority\", true);\n-            highPriorityButton.setSelected(getPriorityThreshold() == Detector.HIGH_PRIORITY);\n-            highPriorityButton.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    highPriorityButtonActionPerformed(evt);\n-                }\n-            });\n+            public void menuDeselected(javax.swing.event.MenuEvent evt) {\n+            }\n \n-            filterWarningsMenu.add(highPriorityButton);\n+            public void menuSelected(javax.swing.event.MenuEvent evt) {\n+                viewMenuMenuSelected(evt);\n+            }\n+        });\n \n-            filterWarningsMenu.add(jSeparator11);\n+        viewBugDetailsItem.setFont(BUTTON_FONT);\n+        viewBugDetailsItem.setSelected(true);\n+        viewBugDetailsItem.setText(\"Bug Details\");\n+        localiseButton(viewBugDetailsItem, \"menu.bugdetails_item\", \"Bug &Details\", true);\n+        viewBugDetailsItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                viewBugDetailsItemActionPerformed(evt);\n+            }\n+        });\n \n-            viewMenu.add(filterWarningsMenu);\n+        viewMenu.add(viewBugDetailsItem);\n \n-            ButtonGroup bg = new ButtonGroup();\n-            bg.add(expPriorityButton);\n-            bg.add(lowPriorityButton);\n-            bg.add(mediumPriorityButton);\n-            bg.add(highPriorityButton);\n+        fullDescriptionsItem.setFont(BUTTON_FONT);\n+        fullDescriptionsItem.setSelected(true);\n+        fullDescriptionsItem.setText(\"Full Descriptions\");\n+        localiseButton(fullDescriptionsItem, \"menu.fulldescriptions_item\", \"&Full Descriptions\", true);\n+        fullDescriptionsItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                fullDescriptionsItemActionPerformed(evt);\n+            }\n+        });\n \n-            viewMenu.add(jSeparator8);\n+        viewMenu.add(fullDescriptionsItem);\n \n-            viewProjectItem.setFont(BUTTON_FONT);\n-            viewProjectItem.setText(\"View Project Details\");\n-            viewProjectItem.setEnabled(false);\n-            localiseButton(viewProjectItem, \"menu.viewprojectdetails_item\", \"View Project Details\", true);\n-            viewProjectItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    viewProjectItemActionPerformed(evt);\n-                }\n-            });\n+        viewMenu.add(jSeparator7);\n \n-            viewMenu.add(viewProjectItem);\n+        filterWarningsMenu.setText(\"Filter Warnings\");\n+        filterWarningsMenu.setFont(BUTTON_FONT);\n+        localiseButton(filterWarningsMenu, \"menu.filterwarnings_menu\", \"Filter &Warnings\", true);\n+        expPriorityButton.setFont(BUTTON_FONT);\n+        expPriorityButton.setText(\"Experimental Priority\");\n+        priorityButtonGroup.add(expPriorityButton);\n+        localiseButton(expPriorityButton, \"menu.exppriority_item\", \"&Experimental Priority\", true);\n+        expPriorityButton.setSelected(getPriorityThreshold() == Detector.EXP_PRIORITY);\n+        expPriorityButton.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                expPriorityButtonActionPerformed(evt);\n+            }\n+        });\n \n-            viewBugsItem.setFont(BUTTON_FONT);\n-            viewBugsItem.setText(\"View Bugs\");\n-            viewBugsItem.setEnabled(false);\n-            localiseButton(viewBugsItem, \"menu.viewbugs_item\", \"View Bugs\", true);\n-            viewBugsItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    viewBugsItemActionPerformed(evt);\n-                }\n-            });\n+        filterWarningsMenu.add(expPriorityButton);\n \n-            viewMenu.add(viewBugsItem);\n+        lowPriorityButton.setFont(BUTTON_FONT);\n+        lowPriorityButton.setText(\"Low Priority\");\n+        priorityButtonGroup.add(lowPriorityButton);\n+        localiseButton(lowPriorityButton, \"menu.lowpriority_item\", \"&Low Priority\", true);\n+        lowPriorityButton.setSelected(getPriorityThreshold() == Detector.LOW_PRIORITY);\n+        lowPriorityButton.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                lowPriorityButtonActionPerformed(evt);\n+            }\n+        });\n \n-            theMenuBar.add(viewMenu);\n+        filterWarningsMenu.add(lowPriorityButton);\n \n-            settingsMenu.setText(\"Settings\");\n-            settingsMenu.setFont(BUTTON_FONT);\n-            localiseButton(settingsMenu, \"menu.settings_menu\", \"&Settings\", true);\n-            settingsMenu.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    settingsMenuActionPerformed(evt);\n-                }\n-            });\n+        mediumPriorityButton.setFont(BUTTON_FONT);\n+        mediumPriorityButton.setText(\"Medium Priority\");\n+        priorityButtonGroup.add(mediumPriorityButton);\n+        localiseButton(mediumPriorityButton, \"menu.mediumpriority_item\", \"&Medium Priority\", true);\n+        mediumPriorityButton.setSelected(getPriorityThreshold() == Detector.NORMAL_PRIORITY);\n+        mediumPriorityButton.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                mediumPriorityButtonActionPerformed(evt);\n+            }\n+        });\n \n-            configureDetectorsItem.setFont(BUTTON_FONT);\n-            configureDetectorsItem.setText(\"Configure Detectors...\");\n-            localiseButton(configureDetectorsItem, \"menu.configure_item\", \"&Configure Detectors...\", true);\n-            configureDetectorsItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    configureDetectorsItemActionPerformed(evt);\n-                }\n-            });\n+        filterWarningsMenu.add(mediumPriorityButton);\n \n-            settingsMenu.add(configureDetectorsItem);\n-\n-            effortMenu.setText(\"Effort\");\n-            effortMenu.setFont(BUTTON_FONT);\n-            localiseButton(effortMenu, \"menu.effort_menu\", \"Effort\", true);\n-            minEffortItem.setFont(BUTTON_FONT);\n-            minEffortItem.setText(\"Minimum\");\n-            effortButtonGroup.add(minEffortItem);\n-            localiseButton(minEffortItem, \"menu.mineffort_item\", \"&Minimum\", true);\n-            minEffortItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    minEffortItemActionPerformed(evt);\n-                }\n-            });\n+        highPriorityButton.setFont(BUTTON_FONT);\n+        highPriorityButton.setText(\"High Priority\");\n+        priorityButtonGroup.add(highPriorityButton);\n+        localiseButton(highPriorityButton, \"menu.highpriority_item\", \"&High Priority\", true);\n+        highPriorityButton.setSelected(getPriorityThreshold() == Detector.HIGH_PRIORITY);\n+        highPriorityButton.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                highPriorityButtonActionPerformed(evt);\n+            }\n+        });\n \n-            effortMenu.add(minEffortItem);\n+        filterWarningsMenu.add(highPriorityButton);\n \n-            normalEffortItem.setFont(BUTTON_FONT);\n-            normalEffortItem.setSelected(true);\n-            normalEffortItem.setText(\"Normal\");\n-            effortButtonGroup.add(normalEffortItem);\n-            localiseButton(normalEffortItem, \"menu.normaleffort_item\", \"&Normal\", true);\n-            normalEffortItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    normalEffortItemActionPerformed(evt);\n-                }\n-            });\n+        filterWarningsMenu.add(jSeparator11);\n \n-            effortMenu.add(normalEffortItem);\n+        viewMenu.add(filterWarningsMenu);\n \n-            maxEffortItem.setFont(BUTTON_FONT);\n-            maxEffortItem.setText(\"Maximum\");\n-            effortButtonGroup.add(maxEffortItem);\n-            localiseButton(maxEffortItem, \"menu.maxeffort_item\", \"&Maximum\", true);\n-            maxEffortItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    maxEffortItemActionPerformed(evt);\n-                }\n-            });\n+        ButtonGroup bg = new ButtonGroup();\n+        bg.add(expPriorityButton);\n+        bg.add(lowPriorityButton);\n+        bg.add(mediumPriorityButton);\n+        bg.add(highPriorityButton);\n \n-            effortMenu.add(maxEffortItem);\n+        viewMenu.add(jSeparator8);\n \n-            settingsMenu.add(effortMenu);\n+        viewProjectItem.setFont(BUTTON_FONT);\n+        viewProjectItem.setText(\"View Project Details\");\n+        viewProjectItem.setEnabled(false);\n+        localiseButton(viewProjectItem, \"menu.viewprojectdetails_item\", \"View Project Details\", true);\n+        viewProjectItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                viewProjectItemActionPerformed(evt);\n+            }\n+        });\n \n-            theMenuBar.add(settingsMenu);\n+        viewMenu.add(viewProjectItem);\n \n-            helpMenu.setText(\"Help\");\n-            helpMenu.setFont(BUTTON_FONT);\n-            localiseButton(helpMenu, \"menu.help_menu\", \"&Help\", true);\n-            aboutItem.setFont(BUTTON_FONT);\n-            aboutItem.setText(\"About...\");\n-            localiseButton(aboutItem, \"menu.about_item\", \"&About\", true);\n-            aboutItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    aboutItemActionPerformed(evt);\n-                }\n-            });\n+        viewBugsItem.setFont(BUTTON_FONT);\n+        viewBugsItem.setText(\"View Bugs\");\n+        viewBugsItem.setEnabled(false);\n+        localiseButton(viewBugsItem, \"menu.viewbugs_item\", \"View Bugs\", true);\n+        viewBugsItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                viewBugsItemActionPerformed(evt);\n+            }\n+        });\n \n-            helpMenu.add(aboutItem);\n+        viewMenu.add(viewBugsItem);\n \n-            theMenuBar.add(helpMenu);\n+        theMenuBar.add(viewMenu);\n \n-            setJMenuBar(theMenuBar);\n+        settingsMenu.setText(\"Settings\");\n+        settingsMenu.setFont(BUTTON_FONT);\n+        localiseButton(settingsMenu, \"menu.settings_menu\", \"&Settings\", true);\n+        settingsMenu.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                settingsMenuActionPerformed(evt);\n+            }\n+        });\n+\n+        configureDetectorsItem.setFont(BUTTON_FONT);\n+        configureDetectorsItem.setText(\"Configure Detectors...\");\n+        localiseButton(configureDetectorsItem, \"menu.configure_item\", \"&Configure Detectors...\", true);\n+        configureDetectorsItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                configureDetectorsItemActionPerformed(evt);\n+            }\n+        });\n+\n+        settingsMenu.add(configureDetectorsItem);\n+\n+        effortMenu.setText(\"Effort\");\n+        effortMenu.setFont(BUTTON_FONT);\n+        localiseButton(effortMenu, \"menu.effort_menu\", \"Effort\", true);\n+        minEffortItem.setFont(BUTTON_FONT);\n+        minEffortItem.setText(\"Minimum\");\n+        effortButtonGroup.add(minEffortItem);\n+        localiseButton(minEffortItem, \"menu.mineffort_item\", \"&Minimum\", true);\n+        minEffortItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                minEffortItemActionPerformed(evt);\n+            }\n+        });\n \n-            pack();\n-        }//GEN-END:initComponents\n+        effortMenu.add(minEffortItem);\n+\n+        normalEffortItem.setFont(BUTTON_FONT);\n+        normalEffortItem.setSelected(true);\n+        normalEffortItem.setText(\"Normal\");\n+        effortButtonGroup.add(normalEffortItem);\n+        localiseButton(normalEffortItem, \"menu.normaleffort_item\", \"&Normal\", true);\n+        normalEffortItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                normalEffortItemActionPerformed(evt);\n+            }\n+        });\n+\n+        effortMenu.add(normalEffortItem);\n+\n+        maxEffortItem.setFont(BUTTON_FONT);\n+        maxEffortItem.setText(\"Maximum\");\n+        effortButtonGroup.add(maxEffortItem);\n+        localiseButton(maxEffortItem, \"menu.maxeffort_item\", \"&Maximum\", true);\n+        maxEffortItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                maxEffortItemActionPerformed(evt);\n+            }\n+        });\n+\n+        effortMenu.add(maxEffortItem);\n+\n+        settingsMenu.add(effortMenu);\n+\n+        theMenuBar.add(settingsMenu);\n+\n+        helpMenu.setText(\"Help\");\n+        helpMenu.setFont(BUTTON_FONT);\n+        localiseButton(helpMenu, \"menu.help_menu\", \"&Help\", true);\n+        aboutItem.setFont(BUTTON_FONT);\n+        aboutItem.setText(\"About...\");\n+        localiseButton(aboutItem, \"menu.about_item\", \"&About\", true);\n+        aboutItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                aboutItemActionPerformed(evt);\n+            }\n+        });\n+\n+        helpMenu.add(aboutItem);\n+\n+        theMenuBar.add(helpMenu);\n+\n+        setJMenuBar(theMenuBar);\n+\n+        pack();\n+    }//GEN-END:initComponents\n \n     private void maxEffortItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxEffortItemActionPerformed\n         settingList = FindBugs.MAX_EFFORT;\n@@ -1748,14 +1766,15 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     }//GEN-LAST:event_formWindowOpened\n \n     private void selectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAllActionPerformed\n-        if (selectedComponent == null)\n+        if (selectedComponent == null) {\n             return;\n+        }\n \n-        if (selectedComponent instanceof JTextComponent)\n-            ((JTextComponent)selectedComponent).selectAll();\n-        else if (selectedComponent instanceof JList) {\n-            JList list = (JList)selectedComponent;\n-            list.setSelectionInterval(0, list.getModel().getSize()-1);\n+        if (selectedComponent instanceof JTextComponent) {\n+            ((JTextComponent) selectedComponent).selectAll();\n+        } else if (selectedComponent instanceof JList) {\n+            JList list = (JList) selectedComponent;\n+            list.setSelectionInterval(0, list.getModel().getSize() - 1);\n         }\n     }//GEN-LAST:event_selectAllActionPerformed\n \n@@ -1780,27 +1799,26 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     }\n \n     private void pasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteActionPerformed\n-        if (selectedComponent == null)\n+        if (selectedComponent == null) {\n             return;\n+        }\n \n-        if (selectedComponent instanceof JTextComponent)\n-            ((JTextComponent)selectedComponent).paste();\n-        else if (selectedComponent instanceof JList) {\n+        if (selectedComponent instanceof JTextComponent) {\n+            ((JTextComponent) selectedComponent).paste();\n+        } else if (selectedComponent instanceof JList) {\n             Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n             Transferable transfer = cb.getContents(this);\n             if (transfer.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n                 try {\n-                    String path = (String)transfer.getTransferData(DataFlavor.stringFlavor);\n+                    String path = (String) transfer.getTransferData(DataFlavor.stringFlavor);\n \n                     if (selectedComponent == jarFileList) {\n                         jarNameTextField.setText(path);\n                         addJarButtonActionPerformed(evt);\n-                    }\n-                    else if (selectedComponent == sourceDirList) {\n+                    } else if (selectedComponent == sourceDirList) {\n                         srcDirTextField.setText(path);\n                         this.addSourceDirButtonActionPerformed(evt);\n-                    }\n-                    else if (selectedComponent == classpathEntryList) {\n+                    } else if (selectedComponent == classpathEntryList) {\n                         classpathEntryTextField.setText(path);\n                         addClasspathEntryButtonActionPerformed(evt);\n                     }\n@@ -1811,69 +1829,76 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     }//GEN-LAST:event_pasteActionPerformed\n \n     private void copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyActionPerformed\n-        if (selectedComponent == null)\n+        if (selectedComponent == null) {\n             return;\n+        }\n \n-        if (selectedComponent instanceof JTextComponent)\n-            ((JTextComponent)selectedComponent).copy();\n-        else if (selectedComponent instanceof JTree) {\n-            TreePath path = ((JTree)selectedComponent).getSelectionPath();\n+        if (selectedComponent instanceof JTextComponent) {\n+            ((JTextComponent) selectedComponent).copy();\n+        } else if (selectedComponent instanceof JTree) {\n+            TreePath path = ((JTree) selectedComponent).getSelectionPath();\n             StringSelection data = new StringSelection(path.getLastPathComponent().toString());\n             Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n             cb.setContents(data, data);\n-       }\n-        else if (selectedComponent instanceof JList) {\n-            StringSelection path = new StringSelection(buildSelectPath((JList)selectedComponent));\n+        } else if (selectedComponent instanceof JList) {\n+            StringSelection path = new StringSelection(buildSelectPath((JList) selectedComponent));\n             Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n             cb.setContents(path, path);\n         }\n     }//GEN-LAST:event_copyActionPerformed\n \n     private void cutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutActionPerformed\n-        if (selectedComponent == null)\n+        if (selectedComponent == null) {\n             return;\n+        }\n \n-        if (selectedComponent instanceof JTextComponent)\n-            ((JTextComponent)selectedComponent).cut();\n-        else if (selectedComponent instanceof JList) {\n-            StringSelection path = new StringSelection(buildSelectPath((JList)selectedComponent));\n+        if (selectedComponent instanceof JTextComponent) {\n+            ((JTextComponent) selectedComponent).cut();\n+        } else if (selectedComponent instanceof JList) {\n+            StringSelection path = new StringSelection(buildSelectPath((JList) selectedComponent));\n             Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n             cb.setContents(path, path);\n-            if (selectedComponent == jarFileList)\n+            if (selectedComponent == jarFileList) {\n                 removeJarButtonActionPerformed(evt);\n-            else if (selectedComponent == sourceDirList)\n+            } else if (selectedComponent == sourceDirList) {\n                 removeSrcDirButtonActionPerformed(evt);\n-            else if (selectedComponent == classpathEntryList)\n+            } else if (selectedComponent == classpathEntryList) {\n                 removeClasspathEntryButtonActionPerformed(evt);\n+            }\n         }\n     }//GEN-LAST:event_cutActionPerformed\n \n     private void focusGainedHandler(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focusGainedHandler\n         Component old = evt.getOppositeComponent();\n-        if (old instanceof JList)\n+        if (old instanceof JList) {\n             ((JList) old).clearSelection();\n+        }\n         selectedComponent = evt.getComponent();\n         ableEditMenu();\n     }//GEN-LAST:event_focusGainedHandler\n \n     private void classpathUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classpathUpButtonActionPerformed\n-        if (moveEntriesUp(classpathEntryList))\n+        if (moveEntriesUp(classpathEntryList)) {\n             resyncAuxClasspathEntries();\n+        }\n     }//GEN-LAST:event_classpathUpButtonActionPerformed\n \n     private void sourceDownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceDownButtonActionPerformed\n-        if (moveEntriesDown(sourceDirList))\n+        if (moveEntriesDown(sourceDirList)) {\n             resyncSourceEntries();\n+        }\n     }//GEN-LAST:event_sourceDownButtonActionPerformed\n \n     private void sourceUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceUpButtonActionPerformed\n-        if (moveEntriesUp(sourceDirList))\n+        if (moveEntriesUp(sourceDirList)) {\n             resyncSourceEntries();\n+        }\n     }//GEN-LAST:event_sourceUpButtonActionPerformed\n \n     private void classpathDownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classpathDownButtonActionPerformed\n-        if (moveEntriesDown(classpathEntryList))\n+        if (moveEntriesDown(classpathEntryList)) {\n             resyncAuxClasspathEntries();\n+        }\n     }//GEN-LAST:event_classpathDownButtonActionPerformed\n \n     private void viewBugsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBugsItemActionPerformed\n@@ -1917,8 +1942,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             if (result != JFileChooser.CANCEL_OPTION) {\n                 // Make sure current annotation text is up to date with its\n                 // corresponding bug instance\n-                if (currentBugInstance != null)\n+                if (currentBugInstance != null) {\n                     synchBugAnnotation(currentBugInstance);\n+                }\n \n                 // Save bugs to file\n                 File selectedFile = chooser.getSelectedFile();\n@@ -1991,8 +2017,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     private void reloadProjectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadProjectItemActionPerformed\n         Project current = getCurrentProject();\n \n-        if (current == null)\n+        if (current == null) {\n             return;\n+        }\n \n         try {\n             String filename = current.getProjectFileName();\n@@ -2082,11 +2109,13 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             for (int i = 0; i < numRows; ++i) {\n                 //System.out.println(\"Getting path for row \" + i);\n                 TreePath path = bugTree.getPathForRow(i);\n-                if (path == null)\n+                if (path == null) {\n                     continue;\n+                }\n                 DefaultMutableTreeNode node = (DefaultMutableTreeNode) path.getLastPathComponent();\n-                if (node instanceof BugTreeNode)\n+                if (node instanceof BugTreeNode) {\n                     bugTreeModel.valueForPathChanged(path, node.getUserObject());\n+                }\n             }\n         }\n     }//GEN-LAST:event_fullDescriptionsItemActionPerformed\n@@ -2117,15 +2146,17 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n \n     private void openProjectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openProjectItemActionPerformed\n \n-        if (!closeProjectHook(getCurrentProject(), L10N.getLocalString(\"msg.openproject_txt\", \"Open Project\")))\n+        if (!closeProjectHook(getCurrentProject(), L10N.getLocalString(\"msg.openproject_txt\", \"Open Project\"))) {\n             return;\n+        }\n \n         JFileChooser chooser = createFileChooser();\n         chooser.setFileFilter(projectFileFilter);\n         int result = chooseFileToOpen(chooser);\n \n-        if (result == JFileChooser.CANCEL_OPTION)\n+        if (result == JFileChooser.CANCEL_OPTION) {\n             return;\n+        }\n         try {\n             File file = chooser.getSelectedFile();\n             Project project = new Project();\n@@ -2135,7 +2166,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             rebuildRecentProjectsMenu();\n \n         } catch (IOException e) {\n-            logger.logMessage(Logger.ERROR, MessageFormat.format( L10N.getLocalString(\"msg.couldnotopenproject_txt\", \"Could not open project: {0}\"), new Object[]{e.getMessage()}));\n+            logger.logMessage(Logger.ERROR, MessageFormat.format(L10N.getLocalString(\"msg.couldnotopenproject_txt\", \"Could not open project: {0}\"), new Object[] {e.getMessage()}));\n         }\n     }//GEN-LAST:event_openProjectItemActionPerformed\n \n@@ -2151,7 +2182,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         Project project = getCurrentProject();\n \n         if (project.getFileCount() == 0) {\n-            logger.logMessage(Logger.ERROR, MessageFormat.format(L10N.getLocalString(\"msg.projectnojars_txt\", \"Project {0} has no Jar files selected\"), new Object[]{project}));\n+            logger.logMessage(Logger.ERROR, MessageFormat.format(L10N.getLocalString(\"msg.projectnojars_txt\", \"Project {0} has no Jar files selected\"), new Object[] {project}));\n             return;\n         }\n \n@@ -2160,7 +2191,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         sourceTextArea.setText(\"\");\n         AnalysisRun analysisRun = new AnalysisRun(project, this);\n \n-        logger.logMessage(Logger.INFO, MessageFormat.format(L10N.getLocalString(\"msg.beginninganalysis_txt\", \"Beginning analysis of {0}\"), new Object[]{project}));\n+        logger.logMessage(Logger.INFO, MessageFormat.format(L10N.getLocalString(\"msg.beginninganalysis_txt\", \"Beginning analysis of {0}\"), new Object[] {project}));\n \n         // Run the analysis!\n         RunAnalysisDialog dialog = new RunAnalysisDialog(this, analysisRun, analysisPriority);\n@@ -2169,7 +2200,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         dialog.setVisible(true);\n \n         if (dialog.isCompleted()) {\n-            logger.logMessage(Logger.INFO, MessageFormat.format(L10N.getLocalString(\"msg.analysiscompleted_txt\", \"Analysis {0} completed\"), new Object[]{project}));\n+            logger.logMessage(Logger.INFO, MessageFormat.format(L10N.getLocalString(\"msg.analysiscompleted_txt\", \"Analysis {0} completed\"), new Object[] {project}));\n \n             // Report any errors that might have occurred during analysis\n             analysisRun.reportAnalysisErrors();\n@@ -2181,17 +2212,18 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 // The analysis was killed by an unexpected exception\n                 Exception e = dialog.getException();\n                 AnalysisErrorDialog err = new AnalysisErrorDialog(this, true, null);\n-                err.addLine(MessageFormat.format(L10N.getLocalString(\"msg.fatalanalysisexception_txt\", \"Fatal analysis exception: {0}\"),  new Object[]{e.toString()}));\n+                err.addLine(MessageFormat.format(L10N.getLocalString(\"msg.fatalanalysisexception_txt\", \"Fatal analysis exception: {0}\"), new Object[] {e.toString()}));\n                 StackTraceElement[] callList = e.getStackTrace();\n-                for (StackTraceElement aCallList : callList)\n+                for (StackTraceElement aCallList : callList) {\n                     err.addLine(\"\\t\" + aCallList);\n+                }\n                 err.finish();\n                 err.setSize(650, 500);\n                 err.setLocationRelativeTo(null); // center the dialog\n                 err.setVisible(true);\n             } else {\n                 // Cancelled by user\n-                logger.logMessage(Logger.INFO, MessageFormat.format(L10N.getLocalString(\"msg.analysiscancelled_txt\", \"Analysis of {0} cancelled by user\"), new Object[]{project}));\n+                logger.logMessage(Logger.INFO, MessageFormat.format(L10N.getLocalString(\"msg.analysiscancelled_txt\", \"Analysis of {0} cancelled by user\"), new Object[] {project}));\n             }\n         }\n     }//GEN-LAST:event_findBugsButtonActionPerformed\n@@ -2240,8 +2272,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n \n     private void newProjectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProjectItemActionPerformed\n \n-        if (!closeProjectHook(getCurrentProject(), L10N.getLocalString(\"msg.newproject_txt\", \"New Project\")))\n+        if (!closeProjectHook(getCurrentProject(), L10N.getLocalString(\"msg.newproject_txt\", \"New Project\"))) {\n             return;\n+        }\n \n         Project project = new Project();\n         setProject(project);\n@@ -2303,10 +2336,12 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             comp.setMinimumSize(null);\n             comp.setPreferredSize(null);\n             d = comp.getPreferredSize();\n-            if (d.width > minX)\n+            if (d.width > minX) {\n                 minX = d.width;\n-            if (d.height > minY)\n+            }\n+            if (d.height > minY) {\n                 minY = d.height;\n+            }\n         }\n \n         d = new Dimension(minX, minY);\n@@ -2331,8 +2366,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     }\n \n     private void openRecentProjectItemActionPerformed(java.awt.event.ActionEvent evt) {\n-        if (!closeProjectHook(getCurrentProject(), L10N.getLocalString(\"msg.openproject_txt\", \"Open Project\")))\n+        if (!closeProjectHook(getCurrentProject(), L10N.getLocalString(\"msg.openproject_txt\", \"Open Project\"))) {\n             return;\n+        }\n \n         JMenuItem recentProjectItem = (JMenuItem) evt.getSource();\n         File file = new File(recentProjectItem.getText());\n@@ -2344,7 +2380,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             UserPreferences.getUserPreferences().useProject(file.getPath());\n         } catch (IOException e) {\n             UserPreferences.getUserPreferences().removeProject(file.getPath());\n-            logger.logMessage(Logger.ERROR, MessageFormat.format(L10N.getLocalString(\"msg.couldnotopenproject_txt\", \"Could not open project: {0}\"), new Object[]{e.getMessage()}));\n+            logger.logMessage(Logger.ERROR, MessageFormat.format(L10N.getLocalString(\"msg.couldnotopenproject_txt\", \"Could not open project: {0}\"), new Object[] {e.getMessage()}));\n         } finally {\n             rebuildRecentProjectsMenu();\n         }\n@@ -2352,8 +2388,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n \n     private boolean moveEntriesUp(JList entryList) {\n         int[] selIndices = entryList.getSelectedIndices();\n-        if (selIndices.length == 0)\n+        if (selIndices.length == 0) {\n             return false;\n+        }\n \n         boolean changed = false;\n         int lastInsertPos = -1;\n@@ -2374,8 +2411,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n \n     private boolean moveEntriesDown(JList entryList) {\n         int[] selIndices = entryList.getSelectedIndices();\n-        if (selIndices.length == 0)\n+        if (selIndices.length == 0) {\n             return false;\n+        }\n \n         boolean changed = false;\n         DefaultListModel model = (DefaultListModel) entryList.getModel();\n@@ -2397,34 +2435,39 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     private void resyncAuxClasspathEntries() {\n         Project project = getCurrentProject();\n         int numEntries = project.getNumAuxClasspathEntries();\n-        while (numEntries-- > 0)\n+        while (numEntries-- > 0) {\n             project.removeAuxClasspathEntry(0);\n+        }\n \n         DefaultListModel model = (DefaultListModel) classpathEntryList.getModel();\n-        for (int i = 0; i < model.size(); i++)\n+        for (int i = 0; i < model.size(); i++) {\n             project.addAuxClasspathEntry((String) model.get(i));\n+        }\n     }\n \n     private void resyncSourceEntries() {\n         Project project = getCurrentProject();\n         int numEntries = project.getNumSourceDirs();\n-        while (numEntries-- > 0)\n+        while (numEntries-- > 0) {\n             project.removeSourceDir(0);\n+        }\n \n         DefaultListModel model = (DefaultListModel) sourceDirList.getModel();\n-        for (int i = 0; i < model.size(); i++)\n+        for (int i = 0; i < model.size(); i++) {\n             project.addSourceDir((String) model.get(i));\n+        }\n     }\n \n     /**\n      * Localise the given AbstractButton, setting the text and optionally mnemonic\n      * Note that AbstractButton includes menus and menu items.\n-     * @param button\t\tThe button to localise\n-     * @param key\t\t   The key to look up in resource bundle\n+     *\n+     * @param button        The button to localise\n+     * @param key           The key to look up in resource bundle\n      * @param defaultString default String to use if key not found\n-     * @param setMnemonic\twhether or not to set the mnemonic. According to Sun's\n-     *\t\t\t\t\t  guidelines, default/cancel buttons should not have mnemonics\n-     *\t\t\t\t\t  but instead should use Return/Escape\n+     * @param setMnemonic   whether or not to set the mnemonic. According to Sun's\n+     *                      guidelines, default/cancel buttons should not have mnemonics\n+     *                      but instead should use Return/Escape\n      */\n     private void localiseButton(AbstractButton button, String key, String defaultString,\n                                 boolean setMnemonic) {\n@@ -2474,7 +2517,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n \n         // List of bug group tabs.\n         // This must be in the same order as GROUP_BY_ORDER_LIST!\n-        bugTreeList = new JTree[]{byClassBugTree, byPackageBugTree, byBugTypeBugTree, byBugCategoryBugTree};\n+        bugTreeList = new JTree[] {byClassBugTree, byPackageBugTree, byBugTypeBugTree, byBugCategoryBugTree};\n \n         // Configure bug trees\n         for (JTree bugTree : bugTreeList) {\n@@ -2497,27 +2540,27 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         // complete source lines, even though the source text doesn't\n         // fill the lines completely.\n         final Highlighter.HighlightPainter painter =\n-                new DefaultHighlighter.DefaultHighlightPainter(sourceTextArea.getSelectionColor()) {\n-            @Override\n-            public Shape paintLayer(Graphics g, int offs0, int offs1,\n-                    Shape bounds, JTextComponent c, View view) {\n-                try {\n-                    Shape extent = view.modelToView(offs0, Position.Bias.Forward, offs1, Position.Bias.Backward, bounds);\n-                    Rectangle rect = extent.getBounds();\n-                    rect.x = 0;\n-                    rect.width = bounds.getBounds().width;\n-                    g.setColor(getColor());\n-                    g.fillRect(rect.x, rect.y, rect.width, rect.height);\n-                    return rect;\n-                } catch (BadLocationException e) {\n-                    return null;\n+            new DefaultHighlighter.DefaultHighlightPainter(sourceTextArea.getSelectionColor()) {\n+                @Override\n+                public Shape paintLayer(Graphics g, int offs0, int offs1,\n+                                        Shape bounds, JTextComponent c, View view) {\n+                    try {\n+                        Shape extent = view.modelToView(offs0, Position.Bias.Forward, offs1, Position.Bias.Backward, bounds);\n+                        Rectangle rect = extent.getBounds();\n+                        rect.x = 0;\n+                        rect.width = bounds.getBounds().width;\n+                        g.setColor(getColor());\n+                        g.fillRect(rect.x, rect.y, rect.width, rect.height);\n+                        return rect;\n+                    } catch (BadLocationException e) {\n+                        return null;\n+                    }\n                 }\n-            }\n-        };\n+            };\n         Highlighter sourceHighlighter = new DefaultHighlighter() {\n             @Override\n             public Object addHighlight(int p0, int p1, Highlighter.HighlightPainter p)\n-            throws BadLocationException {\n+                throws BadLocationException {\n                 return super.addHighlight(p0, p1, painter);\n             }\n         };\n@@ -2551,7 +2594,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             saveBugsItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, MENU_MASK | Event.ALT_MASK));\n \n             // Leave room for the growBox on Mac\n-            growBoxSpacer.setMinimumSize(new java.awt.Dimension(16,16));\n+            growBoxSpacer.setMinimumSize(new java.awt.Dimension(16, 16));\n \n             // Remove Unnecessary/Redundant menu items.\n             fileMenu.remove(exitItem);\n@@ -2625,16 +2668,17 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * whose class is the same as the given class.\n      *\n      * @param tree the tree\n-     * @param c\tthe class\n+     * @param c    the class\n      * @return an instance of the given kind of object which is in the\n-     *\t\t current selection, or null if there is no matching object\n+     * current selection, or null if there is no matching object\n      */\n     private static <E> E getTreeSelectionOf(JTree tree, Class<E> c) {\n         TreePath selPath = tree.getSelectionPath();\n \n         // There may not be anything selected at the moment\n-        if (selPath == null)\n+        if (selPath == null) {\n             return null;\n+        }\n \n         // Work backwards from end until we get to the kind of\n         // object we're looking for.\n@@ -2642,8 +2686,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         for (int i = nodeList.length - 1; i >= 0; --i) {\n             DefaultMutableTreeNode node = (DefaultMutableTreeNode) nodeList[i];\n             Object nodeInfo = node.getUserObject();\n-            if (nodeInfo != null && nodeInfo.getClass() == c)\n+            if (nodeInfo != null && nodeInfo.getClass() == c) {\n                 return c.cast(nodeInfo);\n+            }\n         }\n         return null;\n     }\n@@ -2680,7 +2725,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * that we have top and bottom components).\n      *\n      * @param splitter the JSplitPane\n-     * @param evt\t  the event that is changing the splitter value\n+     * @param evt      the event that is changing the splitter value\n      */\n     private boolean isSplitterMaximized(JSplitPane splitter, java.beans.PropertyChangeEvent evt) {\n         Integer location = (Integer) evt.getNewValue();\n@@ -2724,8 +2769,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     private void setPriorityThreshold(int threshold) {\n         if (threshold != getFilterSettings().getMinPriorityAsInt()) {\n             getFilterSettings().setMinPriority(ProjectFilterSettings.getIntPriorityAsString(threshold));\n-            if (currentAnalysisRun != null)\n+            if (currentAnalysisRun != null) {\n                 synchAnalysisRun(currentAnalysisRun);\n+            }\n         }\n     }\n \n@@ -2735,12 +2781,12 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             if (selectedComponent != null) {\n                 boolean hasSelection = false;\n                 if (selectedComponent instanceof JList) {\n-                    JList list = (JList)selectedComponent;\n+                    JList list = (JList) selectedComponent;\n                     hasSelection = list.getSelectedIndices().length > 0;\n                 } else if (selectedComponent instanceof JTextField) {\n-                    JTextField tf = (JTextField)selectedComponent;\n+                    JTextField tf = (JTextField) selectedComponent;\n                     hasSelection = ((tf.getSelectedText() != null) &&\n-                            (tf.getSelectedText().length() > 0));\n+                        (tf.getSelectedText().length() > 0));\n                 }\n \n                 cutItem.setEnabled(hasSelection);\n@@ -2781,10 +2827,11 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     }\n \n     private void updateTitle(Project project) {\n-        if (project == null)\n+        if (project == null) {\n             this.setTitle(L10N.getLocalString(\"dlg.noproject_lbl\", \"FindBugs - no project\"));\n-        else\n+        } else {\n             this.setTitle(\"FindBugs - \" + project.toString());\n+        }\n     }\n \n     /**\n@@ -2792,7 +2839,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * If the project already has a valid filename, use that filename.\n      * Otherwise, prompt for one.\n      *\n-     * @param project\t the Project to save\n+     * @param project     the Project to save\n      * @param dialogTitle the title for the save dialog (if needed)\n      */\n     private boolean saveProject(Project project, String dialogTitle) {\n@@ -2802,33 +2849,35 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Offer to save the current Project to a file.\n      *\n-     * @param project\t\tthe Project to save\n-     * @param dialogTitle\tthe title for the save dialog (if needed)\n+     * @param project        the Project to save\n+     * @param dialogTitle    the title for the save dialog (if needed)\n      * @param chooseFilename if true, force a dialog to prompt the user\n-     *\t\t\t\t\t   for a filename\n+     *                       for a filename\n      * @return true if the project is saved successfully, false if the user\n-     *\t\t cancels or an error occurs\n+     * cancels or an error occurs\n      */\n     private boolean saveProject(Project project, String dialogTitle, boolean chooseFilename) {\n         boolean useRelativePaths;\n         try {\n-            if (project == null)\n+            if (project == null) {\n                 return true;\n+            }\n \n             File file;\n             String fileName = project.getProjectFileName();\n \n             if (!fileName.startsWith(\"<\") && !chooseFilename) {\n                 file = new File(fileName);\n-                useRelativePaths = project.getOption( Project.RELATIVE_PATHS );\n+                useRelativePaths = project.getOption(Project.RELATIVE_PATHS);\n             } else {\n                 JRadioButton relativePaths = new JRadioButton(L10N.getLocalString(\"msg.userelativepaths_txt\", \"Use Relative Paths\"));\n                 relativePaths.setSelected(project.getOption(Project.RELATIVE_PATHS));\n                 JFileChooser chooser = createFileChooser(relativePaths);\n                 chooser.setFileFilter(projectFileFilter);\n                 int result = chooseFile(chooser, dialogTitle);\n-                if (result == JFileChooser.CANCEL_OPTION)\n+                if (result == JFileChooser.CANCEL_OPTION) {\n                     return false;\n+                }\n                 file = chooser.getSelectedFile();\n                 fileName = Project.transformFilename(file.getPath());\n                 file = new File(fileName);\n@@ -2850,7 +2899,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         } catch (IOException e) {\n             logger.logMessage(Logger.ERROR, \"Could not save project: \" + e.toString());\n             JOptionPane.showMessageDialog(this, \"Error saving project: \" + e.toString(),\n-                    \"Error\", JOptionPane.ERROR_MESSAGE);\n+                \"Error\", JOptionPane.ERROR_MESSAGE);\n             return false;\n         }\n     }\n@@ -2858,28 +2907,31 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Hook to call before closing a project.\n      *\n-     * @param project\t\t the project being closed\n+     * @param project         the project being closed\n      * @param savePromptTitle title to use for the \"Save project?\" dialog\n      * @return true if user has confirmed that the project should be closed,\n-     *\t\t false if the close is cancelled\n+     * false if the close is cancelled\n      */\n     private boolean closeProjectHook(Project project, String savePromptTitle) {\n-        if (project == null || !project.isModified())\n+        if (project == null || !project.isModified()) {\n             return true;\n+        }\n \n         // Confirm that the project should be closed.\n         int option = JOptionPane.showConfirmDialog(this, L10N.getLocalString(\"msg.saveprojectquery_txt\", \"Save Project?\"), savePromptTitle,\n-                JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);\n+            JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);\n \n-        if (option == JOptionPane.CANCEL_OPTION)\n+        if (option == JOptionPane.CANCEL_OPTION) {\n             return false;\n-        else if (option == JOptionPane.YES_OPTION) {\n+        } else if (option == JOptionPane.YES_OPTION) {\n             boolean result = saveProject(project, \"Save Project\");\n-            if (result)\n+            if (result) {\n                 JOptionPane.showMessageDialog(this, \"Project was successfully saved.\");\n+            }\n             return result;\n-        } else\n+        } else {\n             return true;\n+        }\n     }\n \n     /**\n@@ -2928,8 +2980,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             String groupByOrder = GROUP_BY_ORDER_LIST[i];\n             analysisRun.setTreeModel(groupByOrder, bugTreeModel);\n             populateAnalysisRunTreeModel(analysisRun, groupByOrder);\n-            if (i < bugTreeList.length)\n+            if (i < bugTreeList.length) {\n                 bugTreeList[i].setModel(bugTreeModel);\n+            }\n         }\n \n         currentAnalysisRun = analysisRun;\n@@ -2967,8 +3020,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             bugSummaryEditorPane.setText(\"Could not set summary: \" + e.getMessage());\n             logger.logMessage(Logger.WARNING, e.getMessage());\n         } finally {\n-            if (reader != null)\n+            if (reader != null) {\n                 reader.close(); // polite, but doesn't do much in StringReader\n+            }\n         }\n \n     }\n@@ -2993,8 +3047,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         // priority threshold)\n         TreeSet<BugInstance> sortedCollection = new TreeSet<BugInstance>(getBugInstanceComparator(groupBy));\n         for (BugInstance bugInstance : analysisRun.getBugInstances()) {\n-            if (getFilterSettings().displayWarning(bugInstance))\n+            if (getFilterSettings().displayWarning(bugInstance)) {\n                 sortedCollection.add(bugInstance);\n+            }\n         }\n \n         // The grouper callback is what actually adds the group and bug\n@@ -3005,12 +3060,13 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n \n             public void startGroup(BugInstance member) {\n                 String groupName;\n-                if (groupBy == GROUP_BY_CLASS)\n+                if (groupBy == GROUP_BY_CLASS) {\n                     groupName = member.getPrimaryClass().getClassName();\n-                else if (groupBy == GROUP_BY_PACKAGE) {\n+                } else if (groupBy == GROUP_BY_PACKAGE) {\n                     groupName = member.getPrimaryClass().getPackageName();\n-                    if (groupName.equals(\"\"))\n+                    if (groupName.equals(\"\")) {\n                         groupName = \"Unnamed package\";\n+                    }\n                 } else if (groupBy == GROUP_BY_BUG_TYPE) {\n                     String desc = member.toString();\n                     String shortBugType = desc.substring(0, desc.indexOf(':'));\n@@ -3019,14 +3075,16 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 } else if (groupBy == GROUP_BY_BUG_CATEGORY) {\n                     BugPattern pattern = member.getBugPattern();\n                     if (pattern == null) {\n-                        if (FindBugs.DEBUG)\n+                        if (FindBugs.DEBUG) {\n                             System.out.println(\"Unknown bug pattern \" + member.getType());\n+                        }\n                         groupName = \"Unknown category\";\n                     } else {\n                         groupName = I18N.instance().getBugCategoryDescription(pattern.getCategory());\n                     }\n-                } else\n+                } else {\n                     throw new IllegalStateException(\"Unknown sort order: \" + groupBy);\n+                }\n                 currentGroup = new BugInstanceGroup(groupBy, groupName);\n                 currentGroupNode = new DefaultMutableTreeNode(currentGroup);\n                 bugTreeModel.insertNodeInto(currentGroupNode, bugRootNode, bugRootNode.getChildCount());\n@@ -3042,8 +3100,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 int count = currentGroup.getMemberCount();\n                 currentGroup.incrementMemberCount();\n                 BugTreeNode bugNode = new BugTreeNode(member);\n-                if (BUG_COUNT)\n+                if (BUG_COUNT) {\n                     bugNode.setCount(count);\n+                }\n                 bugTreeModel.insertNodeInto(bugNode, currentGroupNode, currentGroupNode.getChildCount());\n \n                 // Insert annotations\n@@ -3073,16 +3132,17 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * Get a BugInstance Comparator for given sort order.\n      */\n     private Comparator<BugInstance> getBugInstanceComparator(String sortOrder) {\n-        if (sortOrder.equals(GROUP_BY_CLASS))\n+        if (sortOrder.equals(GROUP_BY_CLASS)) {\n             return bugInstanceByClassComparator;\n-        else if (sortOrder.equals(GROUP_BY_PACKAGE))\n+        } else if (sortOrder.equals(GROUP_BY_PACKAGE)) {\n             return bugInstanceByPackageComparator;\n-        else if (sortOrder.equals(GROUP_BY_BUG_TYPE))\n+        } else if (sortOrder.equals(GROUP_BY_BUG_TYPE)) {\n             return bugInstanceByTypeComparator;\n-                else if (sortOrder.equals(GROUP_BY_BUG_CATEGORY))\n-                        return bugInstanceByCategoryComparator;\n-        else\n+        } else if (sortOrder.equals(GROUP_BY_BUG_CATEGORY)) {\n+            return bugInstanceByCategoryComparator;\n+        } else {\n             throw new IllegalArgumentException(\"Bad sort order: \" + sortOrder);\n+        }\n     }\n \n     /**\n@@ -3097,8 +3157,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             return bugInstanceTypeComparator;\n         } else if (groupBy.equals(GROUP_BY_BUG_CATEGORY)) {\n             return bugInstanceCategoryComparator;\n-        } else\n+        } else {\n             throw new IllegalArgumentException(\"Bad sort order: \" + groupBy);\n+        }\n     }\n \n     /**\n@@ -3108,12 +3169,14 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         //System.out.println(\"Showing view \" + viewName);\n         viewPanelLayout.show(viewPanel, viewName);\n         boolean viewingBugs = viewName.equals(\"BugTree\");\n-        if (viewingBugs)\n+        if (viewingBugs) {\n             checkBugDetailsVisibility();\n+        }\n \n         viewProjectItem.setSelected(!viewingBugs);\n-        if (viewingBugs)\n+        if (viewingBugs) {\n             viewBugsItem.setEnabled(true);\n+        }\n         viewBugsItem.setSelected(viewingBugs);\n \n         currentView = viewName;\n@@ -3232,13 +3295,15 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     private void synchBugInstance() {\n         // Get current bug instance\n         BugInstance selected = getCurrentBugInstance();\n-        if (selected == null)\n+        if (selected == null) {\n             return;\n+        }\n \n         // If the details window is minimized, then the user can't see\n         // it and there is no point in updating it.\n-        if (!viewBugDetailsItem.isSelected())\n+        if (!viewBugDetailsItem.isSelected()) {\n             return;\n+        }\n \n         // Get the current source line annotation.\n         // If the current leaf selected is not a source line annotation,\n@@ -3255,26 +3320,33 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         TreePath selPath = bugTree.getSelectionPath();\n         if (selPath != null) {\n             Object leaf = ((DefaultMutableTreeNode) selPath.getLastPathComponent()).getUserObject();\n-            if (leaf instanceof SourceLineAnnotation)\n+            if (leaf instanceof SourceLineAnnotation) {\n                 srcLine = (SourceLineAnnotation) leaf;\n-            else if (leaf instanceof BugAnnotationWithSourceLines)\n+            } else if (leaf instanceof BugAnnotationWithSourceLines) {\n                 srcLine = ((BugAnnotationWithSourceLines) leaf).getSourceLines();\n+            }\n \n-            if (srcLine == null)\n+            if (srcLine == null) {\n                 srcLine = selected.getPrimarySourceLineAnnotation();\n+            }\n         }\n \n         // Show source code.\n         if (srcLine == null || srcLine != currentSourceLineAnnotation) {\n             Project project = getCurrentProject();\n             AnalysisRun analysisRun = getCurrentAnalysisRun();\n-            if (project == null) throw new IllegalStateException(\"null project!\");\n-            if (analysisRun == null) throw new IllegalStateException(\"null analysis run!\");\n+            if (project == null) {\n+                throw new IllegalStateException(\"null project!\");\n+            }\n+            if (analysisRun == null) {\n+                throw new IllegalStateException(\"null analysis run!\");\n+            }\n             try {\n                 boolean success = viewSource(project, analysisRun, srcLine);\n                 sourceTextArea.setEnabled(success);\n-                if (!success)\n+                if (!success) {\n                     sourceTextArea.setText(\"No source line information for this bug\");\n+                }\n             } catch (IOException e) {\n                 sourceTextArea.setText(\"Could not find source: \" + e.getMessage());\n                 logger.logMessage(Logger.WARNING, e.getMessage());\n@@ -3298,14 +3370,14 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Update the source view window.\n      *\n-     * @param project\t the project (containing the source directories to search)\n+     * @param project     the project (containing the source directories to search)\n      * @param analysisRun the analysis run (containing the mapping of classes to source files)\n-     * @param srcLine\t the source line annotation (specifying source file to load and\n-     *\t\t\t\t\twhich lines to highlight)\n+     * @param srcLine     the source line annotation (specifying source file to load and\n+     *                    which lines to highlight)\n      * @return true if the source was shown successfully, false otherwise\n      */\n     private boolean viewSource(Project project, AnalysisRun analysisRun, final SourceLineAnnotation srcLine)\n-    throws IOException {\n+        throws IOException {\n         // Get rid of old source code text\n         sourceTextArea.setText(\"\");\n \n@@ -3313,8 +3385,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         // TODO: actually, might want to put a message in the source window\n         // explaining that we don't have the source file, and that\n         // they might want to recompile with debugging info turned on.\n-        if (srcLine == null)\n+        if (srcLine == null) {\n             return false;\n+        }\n \n         SourceFinder sourceFinder = project.getSourceFinder();\n \n@@ -3336,8 +3409,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             reader = new BufferedReader(new InputStreamReader(in));\n             sourceTextArea.read(reader, sourceFile); // 2nd arg is mostly ignored\n         } finally {\n-            if (reader != null)\n+            if (reader != null) {\n                 reader.close();\n+            }\n         }\n \n         if (srcLine.isUnknown()) {\n@@ -3406,8 +3480,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     private void showBugInfo(BugInstance bugInstance) {\n         // Are we already showing details for this kind of bug?\n         String bugDetailsKey = bugInstance.getType();\n-        if (bugDetailsKey.equals(currentBugDetailsKey))\n+        if (bugDetailsKey.equals(currentBugDetailsKey)) {\n             return;\n+        }\n \n         // Display the details\n         String html = I18N.instance().getDetailHTML(bugDetailsKey);\n@@ -3457,7 +3532,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n \n         //annotationTextArea.setText(selected.getAnnotationText());\n         String userAnnotation = selected.getAnnotationText();\n-        if (userAnnotation==null || userAnnotation.length()==0) {\n+        if (userAnnotation == null || userAnnotation.length() == 0) {\n             // this is the common case, so might as well optimize it\n             annotationTextArea.setText(\"\");\n             return;\n@@ -3484,8 +3559,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         int index = 0;\n \n         while (index < bugCategoryCheckBoxList.length) {\n-            if (bugCategoryCheckBoxList[index] == checkBox)\n+            if (bugCategoryCheckBoxList[index] == checkBox) {\n                 break;\n+            }\n             ++index;\n         }\n \n@@ -3569,7 +3645,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * Run a file chooser dialog.\n      * If a file is chosen, then the current directory is updated.\n      *\n-     * @param dialog\t  the file chooser dialog\n+     * @param dialog      the file chooser dialog\n      * @param dialogTitle the dialog title\n      * @return the outcome\n      */\n@@ -3628,12 +3704,14 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * such as a:\\b\\c\\c when a:\\b\\c was chosen\n      */\n     public File verifyFileSelection(File pickedFile) {\n-        if (pickedFile.exists())\n+        if (pickedFile.exists()) {\n             return pickedFile;\n+        }\n \n         File parent = pickedFile.getParentFile();\n-        if ((parent != null) && parent.getName().equals(pickedFile.getName()))\n+        if ((parent != null) && parent.getName().equals(pickedFile.getName())) {\n             return parent;\n+        }\n \n         //Something bad has happened\n         return pickedFile;\n@@ -3672,8 +3750,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             addSwitchWithOptionalExtraPart(\"-look\", \"plastic|gtk|native\", \"set look and feel\");\n             addOption(\"-project\", \"project file\", \"load given project\");\n             addOption(\"-priority\", \"thread priority\",\n-                      \"set analysis thread's priority level (default is \" +\n-                      (Thread.NORM_PRIORITY-1) + \")\");\n+                \"set analysis thread's priority level (default is \" +\n+                    (Thread.NORM_PRIORITY - 1) + \")\");\n             addOption(\"-loadbugs\", \"bugs xml filename\", \"load given bugs xml file\");\n         }\n \n@@ -3685,10 +3763,11 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n \n         // Thread priority for the analysis thread.  The default is\n         // just below the priority of the GUI\n-        private int priority = Thread.NORM_PRIORITY-1;\n+        private int priority = Thread.NORM_PRIORITY - 1;\n \n         /**\n          * Retrieve thread priority for the analysis thread.\n+         *\n          * @return thread priority for the analysis thread\n          */\n         public int getPriority() {\n@@ -3723,7 +3802,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                         UIManager.setLookAndFeel(theme);\n                     } catch (Exception e) {\n                         System.err.println(\"Couldn't load \" + arg +\n-                                \" look and feel: \" + e.toString());\n+                            \" look and feel: \" + e.toString());\n                     }\n                 }\n             } else {\n@@ -3740,8 +3819,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 int num;\n                 try {\n                     num = Integer.parseInt(argument);\n-                } catch(NumberFormatException e) {\n-                    num = Thread.NORM_PRIORITY-1;\n+                } catch (NumberFormatException e) {\n+                    num = Thread.NORM_PRIORITY - 1;\n                 }\n                 priority = num;\n             } else {\n@@ -3816,10 +3895,11 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n \n         if (commandLine.getSettingList() != null) {\n             frame.settingList = commandLine.getSettingList();\n-            if (Arrays.equals(frame.settingList,FindBugs.MIN_EFFORT))\n+            if (Arrays.equals(frame.settingList, FindBugs.MIN_EFFORT)) {\n                 frame.minEffortItem.setSelected(true);\n-            else if (Arrays.equals(frame.settingList, FindBugs.MAX_EFFORT))\n+            } else if (Arrays.equals(frame.settingList, FindBugs.MAX_EFFORT)) {\n                 frame.maxEffortItem.setSelected(true);\n+            }\n         }\n \n         frame.setSize(800, 600);\n@@ -3827,7 +3907,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         frame.setVisible(true);\n     }\n \n-    private int analysisPriority = Thread.NORM_PRIORITY-1;\n+    private int analysisPriority = Thread.NORM_PRIORITY - 1;\n \n     public void setPriority(int priority) {\n         this.analysisPriority = priority;\n",
            "diff_size": 846
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/85/FindBugsFrame.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/85/FindBugsFrame.java\nindex f6cce276369..936010d78a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/85/FindBugsFrame.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/85/FindBugsFrame.java\n@@ -10,12 +10,12 @@\n  *\n  * This library is distributed in the hope that it will be useful,\n  * but WITHOUT ANY WARRANTY; without even the implied warranty of\n- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.\t See the GNU\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  * Lesser General Public License for more details.\n  *\n  * You should have received a copy of the GNU Lesser General Public\n  * License along with this library; if not, write to the Free Software\n- * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA\t 02111-1307\t USA\n+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n  */\n \n /*\n@@ -64,7 +64,6 @@ import java.util.HashSet;\n import java.util.Iterator;\n import java.util.List;\n import java.util.TreeSet;\n-\n import javax.swing.AbstractButton;\n import javax.swing.ButtonGroup;\n import javax.swing.DefaultListModel;\n@@ -99,10 +98,8 @@ import javax.swing.tree.DefaultMutableTreeNode;\n import javax.swing.tree.DefaultTreeModel;\n import javax.swing.tree.TreePath;\n import javax.swing.tree.TreeSelectionModel;\n-\n import edu.umd.cs.findbugs.cloud.SignInCancelledException;\n import org.dom4j.DocumentException;\n-\n import edu.umd.cs.findbugs.BugAnnotation;\n import edu.umd.cs.findbugs.BugAnnotationWithSourceLines;\n import edu.umd.cs.findbugs.BugInstance;\n@@ -133,7 +130,9 @@ import edu.umd.cs.findbugs.log.Logger;\n  *\n  * @author David Hovemeyer\n  */\n-public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync {\n+\n+public final class FindBugsFrame extends\n+    javax.swing.JFrame implements LogSync {\n     /**\n      *\n      */\n@@ -141,17 +140,21 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      *\n      */\n+\n     private static final Font SOURCE_FONT = new java.awt.Font(\"Monospaced\", 0, fontSize);\n+\n     private static final Font JTREE_FONT = new java.awt.Font(\"SansSerif\", 0, fontSize);\n \n     /**\n      *\n      */\n-    private static final Font LABEL_FONT = new java.awt.Font(\"Dialog\", 1, 2*fontSize);\n+\n+    private static final Font LABEL_FONT = new java.awt.Font(\"Dialog\", 1, 2 * fontSize);\n \n     /**\n      *\n      */\n+\n     private static final Font BUTTON_FONT = new java.awt.Font(\"Dialog\", 0, fontSize);\n \n     private static final long serialVersionUID = 1L;\n@@ -159,9 +162,13 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /* ----------------------------------------------------------------------\n      * Helper classes\n      * ---------------------------------------------------------------------- */\n+\n     static final Color HIGH_PRIORITY_COLOR = new Color(0xff0000);\n+\n     static final Color NORMAL_PRIORITY_COLOR = new Color(0x9f0000);\n+\n     static final Color LOW_PRIORITY_COLOR = Color.BLACK;\n+\n     static final Color EXP_PRIORITY_COLOR = Color.BLACK;\n \n     /**\n@@ -169,15 +176,19 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * We use this instead of plain DefaultMutableTreeNodes in order to\n      * get more control over the exact text that is shown in the tree.\n      */\n+\n     private class BugTreeNode extends DefaultMutableTreeNode {\n         private static final long serialVersionUID = 1L;\n+\n         private int count;\n \n+\n         public BugTreeNode(BugInstance bugInstance) {\n             super(bugInstance);\n             count = -1;\n         }\n \n+\n         public void setCount(int count) {\n             this.count = count;\n         }\n@@ -187,20 +198,16 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             try {\n                 BugInstance bugInstance = (BugInstance) getUserObject();\n                 StringBuilder result = new StringBuilder();\n-\n                 if (count >= 0) {\n                     result.append(count);\n                     result.append(\": \");\n                 }\n-\n                 if (bugInstance.isExperimental())\n                     result.append(L10N.getLocalString(\"msg.exp_txt\", \"EXP: \"));\n-\n                 result.append(fullDescriptionsItem.isSelected() ? bugInstance.getMessage() : bugInstance.toString());\n-\n                 return result.toString();\n             } catch (Exception e) {\n-                return MessageFormat.format(L10N.getLocalString(\"msg.errorformatting_txt\", \"Error formatting message for bug: \"), new Object[]{e.toString()});\n+                return MessageFormat.format(L10N.getLocalString(\"msg.errorformatting_txt\", \"Error formatting message for bug: \"), new Object[] { e.toString() });\n             }\n         }\n     }\n@@ -211,15 +218,20 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * Note that all instances with the same class name will compare\n      * as equal.\n      */\n+\n+\n     private static class BugInstanceClassComparator implements Comparator<BugInstance> {\n         public int compare(BugInstance lhs, BugInstance rhs) {\n             return lhs.getPrimaryClass().compareTo(rhs.getPrimaryClass());\n         }\n+\n     }\n \n     /**\n      * The instance of BugInstanceClassComparator.\n      */\n+\n+\n     private static final Comparator<BugInstance> bugInstanceClassComparator = new BugInstanceClassComparator();\n \n     /**\n@@ -228,8 +240,10 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * Note that all instances with the same package name will compare\n      * as equal.\n      */\n+\n     private static class BugInstancePackageComparator implements Comparator<BugInstance>, Serializable {\n         private static final long serialVersionUID = 1L;\n+\n         public int compare(BugInstance lhs, BugInstance rhs) {\n             return lhs.getPrimaryClass().getPackageName().compareTo(rhs.getPrimaryClass().getPackageName());\n         }\n@@ -238,6 +252,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * The instance of BugInstancePackageComparator.\n      */\n+\n+\n     private static final Comparator<BugInstance> bugInstancePackageComparator = new BugInstancePackageComparator();\n \n     /**\n@@ -246,8 +262,10 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * Note that all instances with the same bug type will compare\n      * as equal.\n      */\n+\n     private static class BugInstanceTypeComparator implements Comparator<BugInstance>, Serializable {\n         private static final long serialVersionUID = 1L;\n+\n         public int compare(BugInstance lhs, BugInstance rhs) {\n             String lhsString = lhs.toString();\n             String rhsString = rhs.toString();\n@@ -258,6 +276,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * The instance of BugInstanceTypeComparator.\n      */\n+\n+\n     private static final Comparator<BugInstance> bugInstanceTypeComparator = new BugInstanceTypeComparator();\n \n     /**\n@@ -266,6 +286,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * Note that all instances with the same bug category will compare\n      * as equal.\n      */\n+\n     private static class BugInstanceCategoryComparator implements Comparator<BugInstance>, Serializable {\n         private static final long serialVersionUID = 1L;\n \n@@ -273,6 +294,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             return getCategory(lhs).compareTo(getCategory(rhs));\n         }\n \n+\n         private String getCategory(BugInstance warning) {\n             BugPattern bugPattern = warning.getBugPattern();\n             if (bugPattern == null) {\n@@ -288,14 +310,18 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * The instance of BugInstanceCategoryComparator.\n      */\n+\n+\n     private static final Comparator<BugInstance> bugInstanceCategoryComparator = new BugInstanceCategoryComparator();\n \n         /**\n      * Two-level comparison of bug instances by class name and\n      * BugInstance natural ordering.\n      */\n+\n     private static class BugInstanceByClassComparator implements Comparator<BugInstance>, Serializable {\n         private static final long serialVersionUID = 1L;\n+\n         public int compare(BugInstance a, BugInstance b) {\n             int cmp = bugInstanceClassComparator.compare(a, b);\n             if (cmp != 0)\n@@ -307,12 +333,15 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * The instance of BugInstanceByClassComparator.\n      */\n+\n+\n     private static final Comparator<BugInstance> bugInstanceByClassComparator = new FindBugsFrame.BugInstanceByClassComparator();\n \n     /**\n      * Two-level comparison of bug instances by package and\n      * BugInstance natural ordering.\n      */\n+\n     private static class BugInstanceByPackageComparator implements Comparator<BugInstance> {\n         public int compare(BugInstance a, BugInstance b) {\n             int cmp = bugInstancePackageComparator.compare(a, b);\n@@ -320,19 +349,24 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 return cmp;\n             return a.compareTo(b);\n         }\n+\n     }\n \n     /**\n      * The instance of BugInstanceByPackageComparator.\n      */\n+\n+\n     private static final Comparator<BugInstance> bugInstanceByPackageComparator = new FindBugsFrame.BugInstanceByPackageComparator();\n \n     /**\n      * Two-level comparison of bug instances by bug type and\n      * BugInstance natural ordering.\n      */\n+\n     private static class BugInstanceByTypeComparator implements Comparator<BugInstance>, Serializable {\n         private static final long serialVersionUID = 1L;\n+\n         public int compare(BugInstance a, BugInstance b) {\n             int cmp = bugInstanceTypeComparator.compare(a, b);\n             if (cmp != 0)\n@@ -344,14 +378,18 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         /**\n      * The instance of BugTypeByTypeComparator.\n      */\n+\n+\n     private static final Comparator<BugInstance> bugInstanceByTypeComparator = new FindBugsFrame.BugInstanceByTypeComparator();\n \n     /**\n      * Two-level comparison of bug instances by bug category and\n      * BugInstance natural ordering.\n      */\n+\n     private static class BugInstanceByCategoryComparator implements Comparator<BugInstance>, Serializable {\n         private static final long serialVersionUID = 1L;\n+\n         public int compare(BugInstance a, BugInstance b) {\n             int cmp = bugInstanceCategoryComparator.compare(a, b);\n             if (cmp != 0)\n@@ -363,11 +401,14 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n          /**\n      * The instance of BugTypeByCategoryComparator.\n      */\n+\n+\n     private static final Comparator<BugInstance> bugInstanceByCategoryComparator = new FindBugsFrame.BugInstanceByCategoryComparator();\n \n         /**\n      * Swing FileFilter class for file selection dialogs for FindBugs project files.\n      */\n+\n     private static class ProjectFileFilter extends FileFilter {\n         @Override\n         public boolean accept(File file) {\n@@ -383,12 +424,15 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         /**\n      * The instance of ProjectFileFilter.\n      */\n+\n+\n     private static final FileFilter projectFileFilter = new ProjectFileFilter();\n \n     /**\n      * Swing FileFilter for choosing an auxiliary classpath entry.\n      * Both Jar files and directories can be chosen.\n      */\n+\n     private static class AuxClasspathEntryFileFilter extends FileFilter {\n         @Override\n         public boolean accept(File file) {\n@@ -404,11 +448,14 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * The instance of AuxClasspathEntryFileFilter.\n      */\n+\n+\n     private static final FileFilter auxClasspathEntryFileFilter = new AuxClasspathEntryFileFilter();\n \n     /**\n      * Swing FileFilter for choosing XML saved bug files.\n      */\n+\n     private static class XMLFileFilter extends FileFilter {\n         @Override\n         public boolean accept(File file) {\n@@ -424,30 +471,33 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * The instance of XMLFileFilter.\n      */\n+\n+\n     private static final FileFilter xmlFileFilter = new XMLFileFilter();\n \n     /**\n      * Set of archive file extensions.\n      */\n+\n     private static final HashSet<String> archiveExtensionSet = new HashSet<String>();\n \n     static {\n-        archiveExtensionSet.add(\".jar\");\n-        archiveExtensionSet.add(\".zip\");\n-        archiveExtensionSet.add(\".ear\");\n-        archiveExtensionSet.add(\".war\");\n-        archiveExtensionSet.add(\".sar\");\n+    archiveExtensionSet.add(\".jar\");\n+    archiveExtensionSet.add(\".zip\");\n+    archiveExtensionSet.add(\".ear\");\n+    archiveExtensionSet.add(\".war\");\n+    archiveExtensionSet.add(\".sar\");\n     }\n \n     /**\n      * File filter for choosing archives and directories.\n      */\n+\n     private static class ArchiveAndDirectoryFilter extends FileFilter {\n         @Override\n         public boolean accept(File file) {\n             if (file.isDirectory())\n                 return true;\n-\n             String fileName = file.getName();\n             int dot = fileName.lastIndexOf('.');\n             if (dot < 0)\n@@ -465,6 +515,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * The instance of ArchiveAndDirectoryFilter.\n      */\n+\n+\n     private static final FileFilter archiveAndDirectoryFilter = new ArchiveAndDirectoryFilter();\n \n     /* ----------------------------------------------------------------------\n@@ -472,12 +524,14 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * ---------------------------------------------------------------------- */\n \n     static final String GROUP_BY_CLASS = \"By class\";\n+\n     static final String GROUP_BY_PACKAGE = \"By package\";\n+\n     static final String GROUP_BY_BUG_TYPE = \"By bug type\";\n-        static final String GROUP_BY_BUG_CATEGORY=\"By bug category\";\n-    private static final String[] GROUP_BY_ORDER_LIST = {\n-        GROUP_BY_CLASS, GROUP_BY_PACKAGE, GROUP_BY_BUG_TYPE, GROUP_BY_BUG_CATEGORY\n-    };\n+\n+    static final String GROUP_BY_BUG_CATEGORY = \"By bug category\";\n+\n+    private static final String[] GROUP_BY_ORDER_LIST = { GROUP_BY_CLASS, GROUP_BY_PACKAGE, GROUP_BY_BUG_TYPE, GROUP_BY_BUG_CATEGORY };\n \n     /**\n      * A fudge value required in our hack to get the REAL maximum\n@@ -485,6 +539,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * the value \"1\" would work here, but setting it a little higher\n      * makes the code a bit more robust.\n      */\n+\n     private static final int DIVIDER_FUDGE = 3;\n \n     private static final boolean BUG_COUNT = SystemProperties.getBoolean(\"findbugs.gui.bugCount\");\n@@ -492,6 +547,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /* ----------------------------------------------------------------------\n      * Member fields\n      * ---------------------------------------------------------------------- */\n+\n     Component selectedComponent = null;\n \n     /* ----------------------------------------------------------------------\n@@ -501,17 +557,15 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Creates new form FindBugsFrame.\n      */\n-    public FindBugsFrame() {\n \n+\n+    public FindBugsFrame() {\n         UserPreferences prefs = UserPreferences.getUserPreferences();\n         prefs.read();\n-\n         String dirProp = SystemProperties.getProperty(\"user.dir\");\n-\n         if (dirProp != null) {\n             currentDirectory = new File(dirProp);\n         }\n-\n         initComponents();\n         postInitComponents();\n     }\n@@ -526,9 +580,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * WARNING: Do NOT modify this code. The content of this method is\n      * always regenerated by the Form Editor.\n      */\n+\n     private void initComponents() {//GEN-BEGIN:initComponents\n         java.awt.GridBagConstraints gridBagConstraints;\n-\n         priorityButtonGroup = new javax.swing.ButtonGroup();\n         effortButtonGroup = new javax.swing.ButtonGroup();\n         //consoleSplitter = new javax.swing.JSplitPane();\n@@ -640,28 +694,22 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         maxEffortItem = new javax.swing.JCheckBoxMenuItem();\n         helpMenu = new javax.swing.JMenu();\n         aboutItem = new javax.swing.JMenuItem();\n-\n         getContentPane().setLayout(new java.awt.GridBagLayout());\n-\n         addWindowListener(new java.awt.event.WindowAdapter() {\n             @Override\n             public void windowClosing(java.awt.event.WindowEvent evt) {\n                 exitForm(evt);\n             }\n+\n             @Override\n             public void windowOpened(java.awt.event.WindowEvent evt) {\n                 formWindowOpened(evt);\n             }\n         });\n-\n         viewPanel.setLayout(new java.awt.CardLayout());\n-\n         viewPanel.add(emptyPanel, \"EmptyPanel\");\n-\n         viewPanel.add(reportPanel, \"ReportPanel\");\n-\n         editProjectPanel.setLayout(new java.awt.GridBagLayout());\n-\n         jarFileLabel.setFont(BUTTON_FONT);\n         jarFileLabel.setText(\"Archive or directory:\");\n         jarFileLabel.setText(L10N.getLocalString(\"dlg.jarfile_lbl\", \"Archive or Directory:\"));\n@@ -671,7 +719,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n         editProjectPanel.add(jarFileLabel, gridBagConstraints);\n-\n         jarNameTextField.addActionListener(new java.awt.event.ActionListener() {\n             public void actionPerformed(java.awt.event.ActionEvent evt) {\n                 jarNameTextFieldActionPerformed(evt);\n@@ -683,7 +730,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 focusGainedHandler(evt);\n             }\n         });\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 1;\n         gridBagConstraints.gridy = 2;\n@@ -691,7 +737,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         gridBagConstraints.weightx = 1.0;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);\n         editProjectPanel.add(jarNameTextField, gridBagConstraints);\n-\n         addJarButton.setFont(BUTTON_FONT);\n         addJarButton.setText(\"Add\");\n         addJarButton.setMaximumSize(new java.awt.Dimension(90, 25));\n@@ -703,14 +748,12 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 addJarButtonActionPerformed(evt);\n             }\n         });\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 3;\n         gridBagConstraints.gridy = 2;\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n         editProjectPanel.add(addJarButton, gridBagConstraints);\n-\n         jarFileListLabel.setFont(BUTTON_FONT);\n         jarFileListLabel.setText(\"Archives/directories:\");\n         jarFileListLabel.setText(L10N.getLocalString(\"dlg.jarlist_lbl\", \"Archives/Directories:\"));\n@@ -720,7 +763,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n         editProjectPanel.add(jarFileListLabel, gridBagConstraints);\n-\n         sourceDirLabel.setFont(BUTTON_FONT);\n         sourceDirLabel.setText(\"Source directory:\");\n         sourceDirLabel.setText(L10N.getLocalString(\"dlg.srcfile_lbl\", \"Source directory:\"));\n@@ -730,7 +772,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n         editProjectPanel.add(sourceDirLabel, gridBagConstraints);\n-\n         srcDirTextField.addActionListener(new java.awt.event.ActionListener() {\n             public void actionPerformed(java.awt.event.ActionEvent evt) {\n                 srcDirTextFieldActionPerformed(evt);\n@@ -742,7 +783,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 focusGainedHandler(evt);\n             }\n         });\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 1;\n         gridBagConstraints.gridy = 8;\n@@ -750,7 +790,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         gridBagConstraints.weightx = 1.0;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);\n         editProjectPanel.add(srcDirTextField, gridBagConstraints);\n-\n         addSourceDirButton.setFont(BUTTON_FONT);\n         addSourceDirButton.setText(\"Add\");\n         addSourceDirButton.setMaximumSize(new java.awt.Dimension(90, 25));\n@@ -762,14 +801,12 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 addSourceDirButtonActionPerformed(evt);\n             }\n         });\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 3;\n         gridBagConstraints.gridy = 8;\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n         editProjectPanel.add(addSourceDirButton, gridBagConstraints);\n-\n         sourceDirListLabel.setFont(BUTTON_FONT);\n         sourceDirListLabel.setText(\"Source directories:\");\n         sourceDirListLabel.setText(L10N.getLocalString(\"dlg.srclist_lbl\", \"Source directories:\"));\n@@ -779,7 +816,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n         editProjectPanel.add(sourceDirListLabel, gridBagConstraints);\n-\n         removeJarButton.setFont(BUTTON_FONT);\n         removeJarButton.setText(\"Remove\");\n         removeJarButton.setMaximumSize(new java.awt.Dimension(90, 25));\n@@ -791,14 +827,12 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 removeJarButtonActionPerformed(evt);\n             }\n         });\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 3;\n         gridBagConstraints.gridy = 3;\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n         editProjectPanel.add(removeJarButton, gridBagConstraints);\n-\n         removeSrcDirButton.setFont(BUTTON_FONT);\n         removeSrcDirButton.setText(\"Remove\");\n         removeSrcDirButton.setMaximumSize(new java.awt.Dimension(90, 25));\n@@ -810,14 +844,12 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 removeSrcDirButtonActionPerformed(evt);\n             }\n         });\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 3;\n         gridBagConstraints.gridy = 9;\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n         editProjectPanel.add(removeSrcDirButton, gridBagConstraints);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 1;\n@@ -825,7 +857,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n         gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n         editProjectPanel.add(jSeparator1, gridBagConstraints);\n-\n         browseJarButton.setFont(BUTTON_FONT);\n         browseJarButton.setText(\"Browse\");\n         browseJarButton.setMaximumSize(new java.awt.Dimension(90, 25));\n@@ -837,13 +868,11 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 browseJarButtonActionPerformed(evt);\n             }\n         });\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 2;\n         gridBagConstraints.gridy = 2;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n         editProjectPanel.add(browseJarButton, gridBagConstraints);\n-\n         browseSrcDirButton.setFont(BUTTON_FONT);\n         browseSrcDirButton.setText(\"Browse\");\n         browseSrcDirButton.setMaximumSize(new java.awt.Dimension(90, 25));\n@@ -855,13 +884,11 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 browseSrcDirButtonActionPerformed(evt);\n             }\n         });\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 2;\n         gridBagConstraints.gridy = 8;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n         editProjectPanel.add(browseSrcDirButton, gridBagConstraints);\n-\n         editProjectLabel.setBackground(new java.awt.Color(0, 0, 204));\n         editProjectLabel.setFont(LABEL_FONT);\n         editProjectLabel.setForeground(new java.awt.Color(255, 255, 255));\n@@ -874,7 +901,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         gridBagConstraints.gridwidth = 4;\n         gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n         editProjectPanel.add(editProjectLabel, gridBagConstraints);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 7;\n@@ -882,7 +908,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n         gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n         editProjectPanel.add(jSeparator2, gridBagConstraints);\n-\n         findBugsButton.setMnemonic('B');\n         findBugsButton.setText(\"Find Bugs!\");\n         findBugsButton.addActionListener(new java.awt.event.ActionListener() {\n@@ -890,14 +915,12 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 findBugsButtonActionPerformed(evt);\n             }\n         });\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 21;\n         gridBagConstraints.gridwidth = 4;\n         gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n         editProjectPanel.add(findBugsButton, gridBagConstraints);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 14;\n@@ -905,21 +928,17 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n         gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);\n         editProjectPanel.add(jSeparator4, gridBagConstraints);\n-\n         jarFileListScrollPane.setPreferredSize(new java.awt.Dimension(259, 1));\n         jarFileList.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));\n         jarFileList.setFont(BUTTON_FONT);\n         disableEditKeyBindings(jarFileList);\n-\n         jarFileList.addFocusListener(new java.awt.event.FocusAdapter() {\n             @Override\n             public void focusGained(java.awt.event.FocusEvent evt) {\n                 focusGainedHandler(evt);\n             }\n         });\n-\n         jarFileListScrollPane.setViewportView(jarFileList);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 1;\n         gridBagConstraints.gridy = 3;\n@@ -928,7 +947,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         gridBagConstraints.weighty = 0.4;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n         editProjectPanel.add(jarFileListScrollPane, gridBagConstraints);\n-\n         sourceDirListScrollPane.setPreferredSize(new java.awt.Dimension(259, 1));\n         sourceDirList.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));\n         sourceDirList.setFont(BUTTON_FONT);\n@@ -939,9 +957,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 focusGainedHandler(evt);\n             }\n         });\n-\n         sourceDirListScrollPane.setViewportView(sourceDirList);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 1;\n         gridBagConstraints.gridy = 9;\n@@ -951,7 +967,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         gridBagConstraints.weighty = 0.1;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n         editProjectPanel.add(sourceDirListScrollPane, gridBagConstraints);\n-\n         classpathEntryLabel.setFont(BUTTON_FONT);\n         classpathEntryLabel.setText(\"Classpath entry:\");\n         classpathEntryLabel.setText(L10N.getLocalString(\"dlg.classpathfile_lbl\", \"Classpath entry:\"));\n@@ -961,7 +976,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n         gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);\n         editProjectPanel.add(classpathEntryLabel, gridBagConstraints);\n-\n         classpathEntryListLabel.setFont(BUTTON_FONT);\n         classpathEntryListLabel.setText(\"Classpath entries:\");\n         classpathEntryListLabel.setText(L10N.getLocalString(\"dlg.classpathlist_lbl\", \"Classpath entries:\"));\n@@ -971,21 +985,18 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;\n         gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);\n         editProjectPanel.add(classpathEntryListLabel, gridBagConstraints);\n-\n         classpathEntryTextField.addFocusListener(new java.awt.event.FocusAdapter() {\n             @Override\n             public void focusGained(java.awt.event.FocusEvent evt) {\n                 focusGainedHandler(evt);\n             }\n         });\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 1;\n         gridBagConstraints.gridy = 15;\n         gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);\n         editProjectPanel.add(classpathEntryTextField, gridBagConstraints);\n-\n         browseClasspathEntryButton.setFont(BUTTON_FONT);\n         browseClasspathEntryButton.setText(\"Browse\");\n         browseClasspathEntryButton.setMaximumSize(new java.awt.Dimension(90, 25));\n@@ -997,12 +1008,10 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 browseClasspathEntryButtonActionPerformed(evt);\n             }\n         });\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 2;\n         gridBagConstraints.gridy = 15;\n         editProjectPanel.add(browseClasspathEntryButton, gridBagConstraints);\n-\n         addClasspathEntryButton.setFont(BUTTON_FONT);\n         addClasspathEntryButton.setText(\"Add\");\n         addClasspathEntryButton.setMaximumSize(new java.awt.Dimension(90, 25));\n@@ -1014,14 +1023,12 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 addClasspathEntryButtonActionPerformed(evt);\n             }\n         });\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 3;\n         gridBagConstraints.gridy = 15;\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);\n         editProjectPanel.add(addClasspathEntryButton, gridBagConstraints);\n-\n         removeClasspathEntryButton.setFont(BUTTON_FONT);\n         removeClasspathEntryButton.setText(\"Remove\");\n         removeClasspathEntryButton.setMaximumSize(new java.awt.Dimension(90, 25));\n@@ -1033,14 +1040,12 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 removeClasspathEntryButtonActionPerformed(evt);\n             }\n         });\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 3;\n         gridBagConstraints.gridy = 16;\n         gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);\n         editProjectPanel.add(removeClasspathEntryButton, gridBagConstraints);\n-\n         classpathEntryListScrollPane.setPreferredSize(new java.awt.Dimension(259, 1));\n         classpathEntryList.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));\n         classpathEntryList.setFont(BUTTON_FONT);\n@@ -1051,9 +1056,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 focusGainedHandler(evt);\n             }\n         });\n-\n         classpathEntryListScrollPane.setViewportView(classpathEntryList);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 1;\n         gridBagConstraints.gridy = 16;\n@@ -1063,7 +1066,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         gridBagConstraints.weighty = 0.1;\n         gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);\n         editProjectPanel.add(classpathEntryListScrollPane, gridBagConstraints);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 20;\n@@ -1071,7 +1073,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n         gridBagConstraints.insets = new java.awt.Insets(3, 0, 3, 0);\n         editProjectPanel.add(jSeparator5, gridBagConstraints);\n-\n         sourceUpButton.setFont(BUTTON_FONT);\n         sourceUpButton.setText(\"Up\");\n         sourceUpButton.setMaximumSize(new java.awt.Dimension(90, 25));\n@@ -1083,13 +1084,11 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 sourceUpButtonActionPerformed(evt);\n             }\n         });\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 3;\n         gridBagConstraints.gridy = 10;\n         gridBagConstraints.weighty = 0.2;\n         editProjectPanel.add(sourceUpButton, gridBagConstraints);\n-\n         sourceDownButton.setFont(BUTTON_FONT);\n         sourceDownButton.setText(\"Down\");\n         sourceDownButton.setMaximumSize(new java.awt.Dimension(90, 25));\n@@ -1101,11 +1100,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 sourceDownButtonActionPerformed(evt);\n             }\n         });\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridy = 11;\n         editProjectPanel.add(sourceDownButton, gridBagConstraints);\n-\n         classpathUpButton.setFont(BUTTON_FONT);\n         classpathUpButton.setText(\"Up\");\n         classpathUpButton.setMaximumSize(new java.awt.Dimension(90, 25));\n@@ -1117,13 +1114,11 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 classpathUpButtonActionPerformed(evt);\n             }\n         });\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 3;\n         gridBagConstraints.gridy = 17;\n         gridBagConstraints.weighty = 0.2;\n         editProjectPanel.add(classpathUpButton, gridBagConstraints);\n-\n         classpathDownButton.setFont(BUTTON_FONT);\n         classpathDownButton.setText(\"Down\");\n         classpathDownButton.setMaximumSize(new java.awt.Dimension(90, 25));\n@@ -1135,16 +1130,12 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 classpathDownButtonActionPerformed(evt);\n             }\n         });\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 3;\n         gridBagConstraints.gridy = 18;\n         editProjectPanel.add(classpathDownButton, gridBagConstraints);\n-\n         viewPanel.add(editProjectPanel, \"EditProjectPanel\");\n-\n         bugTreePanel.setLayout(new java.awt.GridBagLayout());\n-\n         bugTreeBugDetailsSplitter.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);\n         bugTreeBugDetailsSplitter.setResizeWeight(1.0);\n         bugTreeBugDetailsSplitter.setOneTouchExpandable(true);\n@@ -1153,64 +1144,47 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 bugTreeBugDetailsSplitterPropertyChange(evt);\n             }\n         });\n-\n         byClassBugTree.addFocusListener(new java.awt.event.FocusAdapter() {\n             @Override\n             public void focusGained(java.awt.event.FocusEvent evt) {\n                 focusGainedHandler(evt);\n             }\n         });\n-\n         byClassScrollPane.setViewportView(byClassBugTree);\n-\n         groupByTabbedPane.addTab(\"By Class\", byClassScrollPane);\n-\n         byPackageBugTree.addFocusListener(new java.awt.event.FocusAdapter() {\n             @Override\n             public void focusGained(java.awt.event.FocusEvent evt) {\n                 focusGainedHandler(evt);\n             }\n         });\n-\n         byPackageScrollPane.setViewportView(byPackageBugTree);\n-\n         groupByTabbedPane.addTab(\"By Package\", byPackageScrollPane);\n-\n         byBugTypeBugTree.addFocusListener(new java.awt.event.FocusAdapter() {\n             @Override\n             public void focusGained(java.awt.event.FocusEvent evt) {\n                 focusGainedHandler(evt);\n             }\n         });\n-\n         byBugTypeScrollPane.setViewportView(byBugTypeBugTree);\n-\n         groupByTabbedPane.addTab(\"By Bug Type\", byBugTypeScrollPane);\n-\n         byBugCategoryBugTree.addFocusListener(new java.awt.event.FocusAdapter() {\n             @Override\n             public void focusGained(java.awt.event.FocusEvent evt) {\n                 focusGainedHandler(evt);\n             }\n         });\n-\n         byBugCategoryScrollPane.setViewportView(byBugCategoryBugTree);\n-\n         groupByTabbedPane.addTab(\"By Category Type\", byBugCategoryScrollPane);\n-\n         bugSummaryEditorPane.addFocusListener(new java.awt.event.FocusAdapter() {\n             @Override\n             public void focusGained(java.awt.event.FocusEvent evt) {\n                 focusGainedHandler(evt);\n             }\n         });\n-\n         bySummary.setViewportView(bugSummaryEditorPane);\n-\n         groupByTabbedPane.addTab(\"Summary\", bySummary);\n-\n         bugTreeBugDetailsSplitter.setTopComponent(groupByTabbedPane);\n-\n         bugDescriptionEditorPane.setEditable(false);\n         bugDescriptionEditorPane.addFocusListener(new java.awt.event.FocusAdapter() {\n             @Override\n@@ -1218,11 +1192,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 focusGainedHandler(evt);\n             }\n         });\n-\n         bugDescriptionScrollPane.setViewportView(bugDescriptionEditorPane);\n-\n         bugDetailsTabbedPane.addTab(\"Details\", bugDescriptionScrollPane);\n-\n         sourceTextAreaScrollPane.setMinimumSize(new java.awt.Dimension(22, 180));\n         sourceTextAreaScrollPane.setPreferredSize(new java.awt.Dimension(0, 100));\n         sourceTextArea.setEditable(false);\n@@ -1234,28 +1205,20 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 focusGainedHandler(evt);\n             }\n         });\n-\n-\n         sourceTextAreaScrollPane.setViewportView(sourceTextArea);\n         sourceLineNumberer = new LineNumberer(sourceTextArea);\n         sourceLineNumberer.setBackground(Color.WHITE);\n         sourceTextAreaScrollPane.setRowHeaderView(sourceLineNumberer);\n-\n         bugDetailsTabbedPane.addTab(\"Source code\", sourceTextAreaScrollPane);\n-\n         annotationTextArea.addFocusListener(new java.awt.event.FocusAdapter() {\n             @Override\n             public void focusGained(java.awt.event.FocusEvent evt) {\n                 focusGainedHandler(evt);\n             }\n         });\n-\n         annotationTextAreaScrollPane.setViewportView(annotationTextArea);\n-\n         bugDetailsTabbedPane.addTab(\"Annotations\", annotationTextAreaScrollPane);\n-\n         bugTreeBugDetailsSplitter.setBottomComponent(bugDetailsTabbedPane);\n-\n         gridBagConstraints = new java.awt.GridBagConstraints();\n         gridBagConstraints.gridx = 0;\n         gridBagConstraints.gridy = 1;\n@@ -1264,507 +1227,431 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         gridBagConstraints.weightx = 1.0;\n         gridBagConstraints.weighty = 1.0;\n         bugTreePanel.add(bugTreeBugDetailsSplitter, gridBagConstraints);\n-\n         viewPanel.add(bugTreePanel, \"BugTree\");\n-\n         {\n-            equalizeControls( new JComponent[]\n-                {\n-                    addJarButton,\n-                    addSourceDirButton,\n-                    addClasspathEntryButton,\n-                    removeJarButton,\n-                    removeSrcDirButton,\n-                    removeClasspathEntryButton,\n-                    browseJarButton,\n-                    browseSrcDirButton,\n-                    browseClasspathEntryButton,\n-                    sourceUpButton,\n-                    sourceDownButton,\n-                    classpathUpButton,\n-                    classpathDownButton\n-                });\n-\n-                groupByTabbedPane.setTitleAt(0, L10N.getLocalString( \"dlg.byclass_tab\", \"By Class\"));\n-                groupByTabbedPane.setTitleAt(1, L10N.getLocalString( \"dlg.bypackage_tab\", \"By Package\"));\n-                groupByTabbedPane.setTitleAt(2, L10N.getLocalString( \"dlg.bybugtype_tab\", \"By Bug Type\"));\n-                groupByTabbedPane.setTitleAt(3, L10N.getLocalString( \"dlg.bybugcategory_tab\", \"By Bug Category\"));\n-                groupByTabbedPane.setTitleAt(4, L10N.getLocalString( \"dlg.summary_tab\", \"Summary\"));\n-                bugDetailsTabbedPane.setTitleAt(0, L10N.getLocalString( \"dlg.details_tab\", \"Details\"));\n-                bugDetailsTabbedPane.setTitleAt(1, L10N.getLocalString( \"dlg.sourcecode_tab\", \"Source Code\"));\n-                bugDetailsTabbedPane.setTitleAt(2, L10N.getLocalString( \"dlg.annotations_tab\", \"Annotations\"));\n-            }\n-\n-            gridBagConstraints = new java.awt.GridBagConstraints();\n-            gridBagConstraints.gridx = 0;\n-            gridBagConstraints.gridy = 0;\n-            gridBagConstraints.gridwidth = 2;\n-            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n-            gridBagConstraints.weightx = 1.0;\n-            gridBagConstraints.weighty = 1.0;\n-            getContentPane().add(viewPanel, gridBagConstraints);\n-\n-            urlLabel.setFont(BUTTON_FONT);\n-            urlLabel.setText(\"FindBugs - http://findbugs.sourceforge.net/\");\n-            gridBagConstraints = new java.awt.GridBagConstraints();\n-            gridBagConstraints.gridx = 0;\n-            gridBagConstraints.gridy = 1;\n-            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n-            gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 0);\n-            getContentPane().add(urlLabel, gridBagConstraints);\n-\n-            jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.X_AXIS));\n-\n-            jPanel1.add(logoLabel);\n-\n-            growBoxSpacer.setMaximumSize(new java.awt.Dimension(16, 16));\n-            jPanel1.add(growBoxSpacer);\n-\n-            gridBagConstraints = new java.awt.GridBagConstraints();\n-            gridBagConstraints.gridx = 1;\n-            gridBagConstraints.gridy = 1;\n-            gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;\n-            gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 2);\n-            getContentPane().add(jPanel1, gridBagConstraints);\n-\n-            theMenuBar.setFont(BUTTON_FONT);\n-            fileMenu.setText(\"File\");\n-            fileMenu.setFont(BUTTON_FONT);\n-            localiseButton(fileMenu, \"menu.file_menu\", \"&File\", true);\n-            fileMenu.addMenuListener(new javax.swing.event.MenuListener() {\n-                public void menuCanceled(javax.swing.event.MenuEvent evt) {\n-                }\n-                public void menuDeselected(javax.swing.event.MenuEvent evt) {\n-                }\n-                public void menuSelected(javax.swing.event.MenuEvent evt) {\n-                    fileMenuMenuSelected(evt);\n-                }\n-            });\n-\n-            newProjectItem.setFont(BUTTON_FONT);\n-            newProjectItem.setText(\"New Project\");\n-            localiseButton(newProjectItem, \"menu.new_item\", \"&New Project\", true);\n-            newProjectItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    newProjectItemActionPerformed(evt);\n-                }\n-            });\n-\n-            fileMenu.add(newProjectItem);\n-\n-            openProjectItem.setFont(BUTTON_FONT);\n-            openProjectItem.setText(\"Open Project...\");\n-            localiseButton(openProjectItem, \"menu.open_item\", \"&Open Project...\", true);\n-            openProjectItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    openProjectItemActionPerformed(evt);\n-                }\n-            });\n-\n-            fileMenu.add(openProjectItem);\n-\n-            recentProjectsMenu.setText(\"Recent Projects\");\n-            recentProjectsMenu.setFont(BUTTON_FONT);\n-            localiseButton(recentProjectsMenu, \"menu.recent_menu\", \"R&ecent Projects\", true);\n-            rebuildRecentProjectsMenu();\n-            fileMenu.add(recentProjectsMenu);\n-\n-            fileMenu.add(jSeparator9);\n-\n-            closeProjectItem.setFont(BUTTON_FONT);\n-            closeProjectItem.setText(\"Close Project\");\n-            localiseButton(closeProjectItem, \"menu.close_item\", \"&Close Project\", true);\n-            closeProjectItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    closeProjectItemActionPerformed(evt);\n-                }\n-            });\n+            equalizeControls(new JComponent[] { addJarButton,\n+                                                addSourceDirButton,\n+                                                addClasspathEntryButton,\n+                                                removeJarButton,\n+                                                removeSrcDirButton,\n+                                                removeClasspathEntryButton,\n+                                                browseJarButton,\n+                                                browseSrcDirButton,\n+                                                browseClasspathEntryButton,\n+                                                sourceUpButton,\n+                                                sourceDownButton,\n+                                                classpathUpButton,\n+                                                classpathDownButton });\n+            groupByTabbedPane.setTitleAt(0, L10N.getLocalString(\"dlg.byclass_tab\", \"By Class\"));\n+            groupByTabbedPane.setTitleAt(1, L10N.getLocalString(\"dlg.bypackage_tab\", \"By Package\"));\n+            groupByTabbedPane.setTitleAt(2, L10N.getLocalString(\"dlg.bybugtype_tab\", \"By Bug Type\"));\n+            groupByTabbedPane.setTitleAt(3, L10N.getLocalString(\"dlg.bybugcategory_tab\", \"By Bug Category\"));\n+            groupByTabbedPane.setTitleAt(4, L10N.getLocalString(\"dlg.summary_tab\", \"Summary\"));\n+            bugDetailsTabbedPane.setTitleAt(0, L10N.getLocalString(\"dlg.details_tab\", \"Details\"));\n+            bugDetailsTabbedPane.setTitleAt(1, L10N.getLocalString(\"dlg.sourcecode_tab\", \"Source Code\"));\n+            bugDetailsTabbedPane.setTitleAt(2, L10N.getLocalString(\"dlg.annotations_tab\", \"Annotations\"));\n+        }\n+        gridBagConstraints = new java.awt.GridBagConstraints();\n+        gridBagConstraints.gridx = 0;\n+        gridBagConstraints.gridy = 0;\n+        gridBagConstraints.gridwidth = 2;\n+        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;\n+        gridBagConstraints.weightx = 1.0;\n+        gridBagConstraints.weighty = 1.0;\n+        getContentPane().add(viewPanel, gridBagConstraints);\n+        urlLabel.setFont(BUTTON_FONT);\n+        urlLabel.setText(\"FindBugs - http://findbugs.sourceforge.net/\");\n+        gridBagConstraints = new java.awt.GridBagConstraints();\n+        gridBagConstraints.gridx = 0;\n+        gridBagConstraints.gridy = 1;\n+        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;\n+        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 0);\n+        getContentPane().add(urlLabel, gridBagConstraints);\n+        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.X_AXIS));\n+        jPanel1.add(logoLabel);\n+        growBoxSpacer.setMaximumSize(new java.awt.Dimension(16, 16));\n+        jPanel1.add(growBoxSpacer);\n+        gridBagConstraints = new java.awt.GridBagConstraints();\n+        gridBagConstraints.gridx = 1;\n+        gridBagConstraints.gridy = 1;\n+        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;\n+        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 2);\n+        getContentPane().add(jPanel1, gridBagConstraints);\n+        theMenuBar.setFont(BUTTON_FONT);\n+        fileMenu.setText(\"File\");\n+        fileMenu.setFont(BUTTON_FONT);\n+        localiseButton(fileMenu, \"menu.file_menu\", \"&File\", true);\n+        fileMenu.addMenuListener(new javax.swing.event.MenuListener() {\n+            public void menuCanceled(javax.swing.event.MenuEvent evt) {\n+            }\n \n-            fileMenu.add(closeProjectItem);\n+            public void menuDeselected(javax.swing.event.MenuEvent evt) {\n+            }\n \n-            saveProjectItem.setFont(BUTTON_FONT);\n-            saveProjectItem.setText(\"Save Project\");\n-            localiseButton(saveProjectItem, \"menu.save_item\", \"&Save Project\", true);\n-            saveProjectItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    saveProjectItemActionPerformed(evt);\n-                }\n-            });\n+            public void menuSelected(javax.swing.event.MenuEvent evt) {\n+                fileMenuMenuSelected(evt);\n+            }\n+        });\n+        newProjectItem.setFont(BUTTON_FONT);\n+        newProjectItem.setText(\"New Project\");\n+        localiseButton(newProjectItem, \"menu.new_item\", \"&New Project\", true);\n+        newProjectItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                newProjectItemActionPerformed(evt);\n+            }\n+        });\n+        fileMenu.add(newProjectItem);\n+        openProjectItem.setFont(BUTTON_FONT);\n+        openProjectItem.setText(\"Open Project...\");\n+        localiseButton(openProjectItem, \"menu.open_item\", \"&Open Project...\", true);\n+        openProjectItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                openProjectItemActionPerformed(evt);\n+            }\n+        });\n+        fileMenu.add(openProjectItem);\n+        recentProjectsMenu.setText(\"Recent Projects\");\n+        recentProjectsMenu.setFont(BUTTON_FONT);\n+        localiseButton(recentProjectsMenu, \"menu.recent_menu\", \"R&ecent Projects\", true);\n+        rebuildRecentProjectsMenu();\n+        fileMenu.add(recentProjectsMenu);\n+        fileMenu.add(jSeparator9);\n+        closeProjectItem.setFont(BUTTON_FONT);\n+        closeProjectItem.setText(\"Close Project\");\n+        localiseButton(closeProjectItem, \"menu.close_item\", \"&Close Project\", true);\n+        closeProjectItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                closeProjectItemActionPerformed(evt);\n+            }\n+        });\n+        fileMenu.add(closeProjectItem);\n+        saveProjectItem.setFont(BUTTON_FONT);\n+        saveProjectItem.setText(\"Save Project\");\n+        localiseButton(saveProjectItem, \"menu.save_item\", \"&Save Project\", true);\n+        saveProjectItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                saveProjectItemActionPerformed(evt);\n+            }\n+        });\n+        fileMenu.add(saveProjectItem);\n+        saveProjectAsItem.setFont(BUTTON_FONT);\n+        saveProjectAsItem.setText(\"Save Project As...\");\n+        localiseButton(saveProjectAsItem, \"menu.saveas_item\", \"Save Project &As...\", true);\n+        saveProjectAsItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                saveProjectAsItemActionPerformed(evt);\n+            }\n+        });\n+        fileMenu.add(saveProjectAsItem);\n+        reloadProjectItem.setFont(BUTTON_FONT);\n+        reloadProjectItem.setText(\"Reload Project\");\n+        localiseButton(reloadProjectItem, \"menu.reload_item\", \"&Reload Project\", true);\n+        reloadProjectItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                reloadProjectItemActionPerformed(evt);\n+            }\n+        });\n+        fileMenu.add(reloadProjectItem);\n+        fileMenu.add(jSeparator3);\n+        loadBugsItem.setFont(BUTTON_FONT);\n+        loadBugsItem.setText(\"Load Bugs...\");\n+        localiseButton(loadBugsItem, \"menu.loadbugs_item\", \"&Load Bugs...\", true);\n+        loadBugsItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                loadBugsItemActionPerformed(evt);\n+            }\n+        });\n+        fileMenu.add(loadBugsItem);\n+        saveBugsItem.setFont(BUTTON_FONT);\n+        saveBugsItem.setText(\"Save Bugs\");\n+        localiseButton(saveBugsItem, \"menu.savebugs_item\", \"Save &Bugs...\", true);\n+        saveBugsItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                saveBugsItemActionPerformed(evt);\n+            }\n+        });\n+        fileMenu.add(saveBugsItem);\n+        fileMenu.add(jSeparator6);\n+        exitItem.setFont(BUTTON_FONT);\n+        exitItem.setText(\"Exit\");\n+        localiseButton(exitItem, \"menu.exit_item\", \"E&xit\", true);\n+        exitItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                exitItemActionPerformed(evt);\n+            }\n+        });\n+        fileMenu.add(exitItem);\n+        theMenuBar.add(fileMenu);\n+        editMenu.setText(\"Edit\");\n+        editMenu.setFont(BUTTON_FONT);\n+        editMenu.setEnabled(false);\n+        localiseButton(editMenu, \"menu.edit_menu\", \"&Edit\", true);\n+        cutItem.setFont(BUTTON_FONT);\n+        cutItem.setText(\"Cut\");\n+        localiseButton(cutItem, \"menu.cut_item\", \"Cut\", true);\n+        cutItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                cutActionPerformed(evt);\n+            }\n+        });\n+        editMenu.add(cutItem);\n+        copyItem.setFont(BUTTON_FONT);\n+        copyItem.setText(\"Copy\");\n+        localiseButton(copyItem, \"menu.copy_item\", \"Copy\", true);\n+        copyItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                copyActionPerformed(evt);\n+            }\n+        });\n+        editMenu.add(copyItem);\n+        pasteItem.setFont(BUTTON_FONT);\n+        pasteItem.setText(\"Paste\");\n+        localiseButton(pasteItem, \"menu.paste_item\", \"Paste\", true);\n+        pasteItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                pasteActionPerformed(evt);\n+            }\n+        });\n+        editMenu.add(pasteItem);\n+        editMenu.add(jSeparator10);\n+        selectAllItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));\n+        selectAllItem.setFont(BUTTON_FONT);\n+        selectAllItem.setText(\"Select All\");\n+        localiseButton(selectAllItem, \"menu.selectall_item\", \"Select &All\", true);\n+        selectAllItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                selectAllActionPerformed(evt);\n+            }\n+        });\n+        editMenu.add(selectAllItem);\n+        theMenuBar.add(editMenu);\n+        viewMenu.setText(\"View\");\n+        viewMenu.setFont(BUTTON_FONT);\n+        localiseButton(viewMenu, \"menu.view_menu\", \"&View\", true);\n+        viewMenu.addMenuListener(new javax.swing.event.MenuListener() {\n+            public void menuCanceled(javax.swing.event.MenuEvent evt) {\n+            }\n \n-            fileMenu.add(saveProjectItem);\n+            public void menuDeselected(javax.swing.event.MenuEvent evt) {\n+            }\n \n-            saveProjectAsItem.setFont(BUTTON_FONT);\n-            saveProjectAsItem.setText(\"Save Project As...\");\n-            localiseButton(saveProjectAsItem, \"menu.saveas_item\", \"Save Project &As...\", true);\n-            saveProjectAsItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    saveProjectAsItemActionPerformed(evt);\n-                }\n-            });\n-\n-            fileMenu.add(saveProjectAsItem);\n-\n-            reloadProjectItem.setFont(BUTTON_FONT);\n-            reloadProjectItem.setText(\"Reload Project\");\n-            localiseButton(reloadProjectItem, \"menu.reload_item\", \"&Reload Project\", true);\n-            reloadProjectItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    reloadProjectItemActionPerformed(evt);\n-                }\n-            });\n-\n-            fileMenu.add(reloadProjectItem);\n-\n-            fileMenu.add(jSeparator3);\n-\n-            loadBugsItem.setFont(BUTTON_FONT);\n-            loadBugsItem.setText(\"Load Bugs...\");\n-            localiseButton(loadBugsItem, \"menu.loadbugs_item\", \"&Load Bugs...\", true);\n-            loadBugsItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    loadBugsItemActionPerformed(evt);\n-                }\n-            });\n-\n-            fileMenu.add(loadBugsItem);\n-\n-            saveBugsItem.setFont(BUTTON_FONT);\n-            saveBugsItem.setText(\"Save Bugs\");\n-            localiseButton(saveBugsItem, \"menu.savebugs_item\", \"Save &Bugs...\", true);\n-            saveBugsItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    saveBugsItemActionPerformed(evt);\n-                }\n-            });\n-\n-            fileMenu.add(saveBugsItem);\n-\n-            fileMenu.add(jSeparator6);\n-\n-            exitItem.setFont(BUTTON_FONT);\n-            exitItem.setText(\"Exit\");\n-            localiseButton(exitItem, \"menu.exit_item\", \"E&xit\", true);\n-            exitItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    exitItemActionPerformed(evt);\n-                }\n-            });\n-\n-            fileMenu.add(exitItem);\n-\n-            theMenuBar.add(fileMenu);\n-\n-            editMenu.setText(\"Edit\");\n-            editMenu.setFont(BUTTON_FONT);\n-            editMenu.setEnabled(false);\n-            localiseButton(editMenu, \"menu.edit_menu\", \"&Edit\", true);\n-            cutItem.setFont(BUTTON_FONT);\n-            cutItem.setText(\"Cut\");\n-            localiseButton(cutItem, \"menu.cut_item\", \"Cut\", true);\n-            cutItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    cutActionPerformed(evt);\n-                }\n-            });\n-\n-            editMenu.add(cutItem);\n-\n-            copyItem.setFont(BUTTON_FONT);\n-            copyItem.setText(\"Copy\");\n-            localiseButton(copyItem, \"menu.copy_item\", \"Copy\", true);\n-            copyItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    copyActionPerformed(evt);\n-                }\n-            });\n-\n-            editMenu.add(copyItem);\n-\n-            pasteItem.setFont(BUTTON_FONT);\n-            pasteItem.setText(\"Paste\");\n-            localiseButton(pasteItem, \"menu.paste_item\", \"Paste\", true);\n-            pasteItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    pasteActionPerformed(evt);\n-                }\n-            });\n-\n-            editMenu.add(pasteItem);\n-\n-            editMenu.add(jSeparator10);\n-\n-            selectAllItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));\n-            selectAllItem.setFont(BUTTON_FONT);\n-            selectAllItem.setText(\"Select All\");\n-            localiseButton(selectAllItem, \"menu.selectall_item\", \"Select &All\", true);\n-            selectAllItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    selectAllActionPerformed(evt);\n-                }\n-            });\n-\n-            editMenu.add(selectAllItem);\n-\n-            theMenuBar.add(editMenu);\n-\n-            viewMenu.setText(\"View\");\n-            viewMenu.setFont(BUTTON_FONT);\n-            localiseButton(viewMenu, \"menu.view_menu\", \"&View\", true);\n-\n-            viewMenu.addMenuListener(new javax.swing.event.MenuListener() {\n-                public void menuCanceled(javax.swing.event.MenuEvent evt) {\n-                }\n-                public void menuDeselected(javax.swing.event.MenuEvent evt) {\n-                }\n-                public void menuSelected(javax.swing.event.MenuEvent evt) {\n-                    viewMenuMenuSelected(evt);\n-                }\n-            });\n-\n-            viewBugDetailsItem.setFont(BUTTON_FONT);\n-            viewBugDetailsItem.setSelected(true);\n-            viewBugDetailsItem.setText(\"Bug Details\");\n-            localiseButton(viewBugDetailsItem, \"menu.bugdetails_item\", \"Bug &Details\", true);\n-            viewBugDetailsItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    viewBugDetailsItemActionPerformed(evt);\n-                }\n-            });\n-\n-            viewMenu.add(viewBugDetailsItem);\n-\n-            fullDescriptionsItem.setFont(BUTTON_FONT);\n-            fullDescriptionsItem.setSelected(true);\n-            fullDescriptionsItem.setText(\"Full Descriptions\");\n-            localiseButton(fullDescriptionsItem, \"menu.fulldescriptions_item\", \"&Full Descriptions\", true);\n-            fullDescriptionsItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    fullDescriptionsItemActionPerformed(evt);\n-                }\n-            });\n-\n-            viewMenu.add(fullDescriptionsItem);\n-\n-            viewMenu.add(jSeparator7);\n-\n-            filterWarningsMenu.setText(\"Filter Warnings\");\n-            filterWarningsMenu.setFont(BUTTON_FONT);\n-            localiseButton(filterWarningsMenu, \"menu.filterwarnings_menu\", \"Filter &Warnings\", true);\n-            expPriorityButton.setFont(BUTTON_FONT);\n-            expPriorityButton.setText(\"Experimental Priority\");\n-            priorityButtonGroup.add(expPriorityButton);\n-            localiseButton(expPriorityButton, \"menu.exppriority_item\", \"&Experimental Priority\", true);\n-            expPriorityButton.setSelected(getPriorityThreshold() == Detector.EXP_PRIORITY);\n-            expPriorityButton.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    expPriorityButtonActionPerformed(evt);\n-                }\n-            });\n-\n-            filterWarningsMenu.add(expPriorityButton);\n-\n-            lowPriorityButton.setFont(BUTTON_FONT);\n-            lowPriorityButton.setText(\"Low Priority\");\n-            priorityButtonGroup.add(lowPriorityButton);\n-            localiseButton(lowPriorityButton, \"menu.lowpriority_item\", \"&Low Priority\", true);\n-            lowPriorityButton.setSelected(getPriorityThreshold() == Detector.LOW_PRIORITY);\n-            lowPriorityButton.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    lowPriorityButtonActionPerformed(evt);\n-                }\n-            });\n-\n-            filterWarningsMenu.add(lowPriorityButton);\n-\n-            mediumPriorityButton.setFont(BUTTON_FONT);\n-            mediumPriorityButton.setText(\"Medium Priority\");\n-            priorityButtonGroup.add(mediumPriorityButton);\n-            localiseButton(mediumPriorityButton, \"menu.mediumpriority_item\", \"&Medium Priority\", true);\n-            mediumPriorityButton.setSelected(getPriorityThreshold() == Detector.NORMAL_PRIORITY);\n-            mediumPriorityButton.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    mediumPriorityButtonActionPerformed(evt);\n-                }\n-            });\n-\n-            filterWarningsMenu.add(mediumPriorityButton);\n-\n-            highPriorityButton.setFont(BUTTON_FONT);\n-            highPriorityButton.setText(\"High Priority\");\n-            priorityButtonGroup.add(highPriorityButton);\n-            localiseButton(highPriorityButton, \"menu.highpriority_item\", \"&High Priority\", true);\n-            highPriorityButton.setSelected(getPriorityThreshold() == Detector.HIGH_PRIORITY);\n-            highPriorityButton.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    highPriorityButtonActionPerformed(evt);\n-                }\n-            });\n-\n-            filterWarningsMenu.add(highPriorityButton);\n-\n-            filterWarningsMenu.add(jSeparator11);\n-\n-            viewMenu.add(filterWarningsMenu);\n-\n-            ButtonGroup bg = new ButtonGroup();\n-            bg.add(expPriorityButton);\n-            bg.add(lowPriorityButton);\n-            bg.add(mediumPriorityButton);\n-            bg.add(highPriorityButton);\n-\n-            viewMenu.add(jSeparator8);\n-\n-            viewProjectItem.setFont(BUTTON_FONT);\n-            viewProjectItem.setText(\"View Project Details\");\n-            viewProjectItem.setEnabled(false);\n-            localiseButton(viewProjectItem, \"menu.viewprojectdetails_item\", \"View Project Details\", true);\n-            viewProjectItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    viewProjectItemActionPerformed(evt);\n-                }\n-            });\n-\n-            viewMenu.add(viewProjectItem);\n-\n-            viewBugsItem.setFont(BUTTON_FONT);\n-            viewBugsItem.setText(\"View Bugs\");\n-            viewBugsItem.setEnabled(false);\n-            localiseButton(viewBugsItem, \"menu.viewbugs_item\", \"View Bugs\", true);\n-            viewBugsItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    viewBugsItemActionPerformed(evt);\n-                }\n-            });\n-\n-            viewMenu.add(viewBugsItem);\n-\n-            theMenuBar.add(viewMenu);\n-\n-            settingsMenu.setText(\"Settings\");\n-            settingsMenu.setFont(BUTTON_FONT);\n-            localiseButton(settingsMenu, \"menu.settings_menu\", \"&Settings\", true);\n-            settingsMenu.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    settingsMenuActionPerformed(evt);\n-                }\n-            });\n-\n-            configureDetectorsItem.setFont(BUTTON_FONT);\n-            configureDetectorsItem.setText(\"Configure Detectors...\");\n-            localiseButton(configureDetectorsItem, \"menu.configure_item\", \"&Configure Detectors...\", true);\n-            configureDetectorsItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    configureDetectorsItemActionPerformed(evt);\n-                }\n-            });\n-\n-            settingsMenu.add(configureDetectorsItem);\n-\n-            effortMenu.setText(\"Effort\");\n-            effortMenu.setFont(BUTTON_FONT);\n-            localiseButton(effortMenu, \"menu.effort_menu\", \"Effort\", true);\n-            minEffortItem.setFont(BUTTON_FONT);\n-            minEffortItem.setText(\"Minimum\");\n-            effortButtonGroup.add(minEffortItem);\n-            localiseButton(minEffortItem, \"menu.mineffort_item\", \"&Minimum\", true);\n-            minEffortItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    minEffortItemActionPerformed(evt);\n-                }\n-            });\n-\n-            effortMenu.add(minEffortItem);\n-\n-            normalEffortItem.setFont(BUTTON_FONT);\n-            normalEffortItem.setSelected(true);\n-            normalEffortItem.setText(\"Normal\");\n-            effortButtonGroup.add(normalEffortItem);\n-            localiseButton(normalEffortItem, \"menu.normaleffort_item\", \"&Normal\", true);\n-            normalEffortItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    normalEffortItemActionPerformed(evt);\n-                }\n-            });\n-\n-            effortMenu.add(normalEffortItem);\n-\n-            maxEffortItem.setFont(BUTTON_FONT);\n-            maxEffortItem.setText(\"Maximum\");\n-            effortButtonGroup.add(maxEffortItem);\n-            localiseButton(maxEffortItem, \"menu.maxeffort_item\", \"&Maximum\", true);\n-            maxEffortItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    maxEffortItemActionPerformed(evt);\n-                }\n-            });\n-\n-            effortMenu.add(maxEffortItem);\n-\n-            settingsMenu.add(effortMenu);\n-\n-            theMenuBar.add(settingsMenu);\n-\n-            helpMenu.setText(\"Help\");\n-            helpMenu.setFont(BUTTON_FONT);\n-            localiseButton(helpMenu, \"menu.help_menu\", \"&Help\", true);\n-            aboutItem.setFont(BUTTON_FONT);\n-            aboutItem.setText(\"About...\");\n-            localiseButton(aboutItem, \"menu.about_item\", \"&About\", true);\n-            aboutItem.addActionListener(new java.awt.event.ActionListener() {\n-                public void actionPerformed(java.awt.event.ActionEvent evt) {\n-                    aboutItemActionPerformed(evt);\n-                }\n-            });\n-\n-            helpMenu.add(aboutItem);\n-\n-            theMenuBar.add(helpMenu);\n-\n-            setJMenuBar(theMenuBar);\n+            public void menuSelected(javax.swing.event.MenuEvent evt) {\n+                viewMenuMenuSelected(evt);\n+            }\n+        });\n+        viewBugDetailsItem.setFont(BUTTON_FONT);\n+        viewBugDetailsItem.setSelected(true);\n+        viewBugDetailsItem.setText(\"Bug Details\");\n+        localiseButton(viewBugDetailsItem, \"menu.bugdetails_item\", \"Bug &Details\", true);\n+        viewBugDetailsItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                viewBugDetailsItemActionPerformed(evt);\n+            }\n+        });\n+        viewMenu.add(viewBugDetailsItem);\n+        fullDescriptionsItem.setFont(BUTTON_FONT);\n+        fullDescriptionsItem.setSelected(true);\n+        fullDescriptionsItem.setText(\"Full Descriptions\");\n+        localiseButton(fullDescriptionsItem, \"menu.fulldescriptions_item\", \"&Full Descriptions\", true);\n+        fullDescriptionsItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                fullDescriptionsItemActionPerformed(evt);\n+            }\n+        });\n+        viewMenu.add(fullDescriptionsItem);\n+        viewMenu.add(jSeparator7);\n+        filterWarningsMenu.setText(\"Filter Warnings\");\n+        filterWarningsMenu.setFont(BUTTON_FONT);\n+        localiseButton(filterWarningsMenu, \"menu.filterwarnings_menu\", \"Filter &Warnings\", true);\n+        expPriorityButton.setFont(BUTTON_FONT);\n+        expPriorityButton.setText(\"Experimental Priority\");\n+        priorityButtonGroup.add(expPriorityButton);\n+        localiseButton(expPriorityButton, \"menu.exppriority_item\", \"&Experimental Priority\", true);\n+        expPriorityButton.setSelected(getPriorityThreshold() == Detector.EXP_PRIORITY);\n+        expPriorityButton.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                expPriorityButtonActionPerformed(evt);\n+            }\n+        });\n+        filterWarningsMenu.add(expPriorityButton);\n+        lowPriorityButton.setFont(BUTTON_FONT);\n+        lowPriorityButton.setText(\"Low Priority\");\n+        priorityButtonGroup.add(lowPriorityButton);\n+        localiseButton(lowPriorityButton, \"menu.lowpriority_item\", \"&Low Priority\", true);\n+        lowPriorityButton.setSelected(getPriorityThreshold() == Detector.LOW_PRIORITY);\n+        lowPriorityButton.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                lowPriorityButtonActionPerformed(evt);\n+            }\n+        });\n+        filterWarningsMenu.add(lowPriorityButton);\n+        mediumPriorityButton.setFont(BUTTON_FONT);\n+        mediumPriorityButton.setText(\"Medium Priority\");\n+        priorityButtonGroup.add(mediumPriorityButton);\n+        localiseButton(mediumPriorityButton, \"menu.mediumpriority_item\", \"&Medium Priority\", true);\n+        mediumPriorityButton.setSelected(getPriorityThreshold() == Detector.NORMAL_PRIORITY);\n+        mediumPriorityButton.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                mediumPriorityButtonActionPerformed(evt);\n+            }\n+        });\n+        filterWarningsMenu.add(mediumPriorityButton);\n+        highPriorityButton.setFont(BUTTON_FONT);\n+        highPriorityButton.setText(\"High Priority\");\n+        priorityButtonGroup.add(highPriorityButton);\n+        localiseButton(highPriorityButton, \"menu.highpriority_item\", \"&High Priority\", true);\n+        highPriorityButton.setSelected(getPriorityThreshold() == Detector.HIGH_PRIORITY);\n+        highPriorityButton.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                highPriorityButtonActionPerformed(evt);\n+            }\n+        });\n+        filterWarningsMenu.add(highPriorityButton);\n+        filterWarningsMenu.add(jSeparator11);\n+        viewMenu.add(filterWarningsMenu);\n+        ButtonGroup bg = new ButtonGroup();\n+        bg.add(expPriorityButton);\n+        bg.add(lowPriorityButton);\n+        bg.add(mediumPriorityButton);\n+        bg.add(highPriorityButton);\n+        viewMenu.add(jSeparator8);\n+        viewProjectItem.setFont(BUTTON_FONT);\n+        viewProjectItem.setText(\"View Project Details\");\n+        viewProjectItem.setEnabled(false);\n+        localiseButton(viewProjectItem, \"menu.viewprojectdetails_item\", \"View Project Details\", true);\n+        viewProjectItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                viewProjectItemActionPerformed(evt);\n+            }\n+        });\n+        viewMenu.add(viewProjectItem);\n+        viewBugsItem.setFont(BUTTON_FONT);\n+        viewBugsItem.setText(\"View Bugs\");\n+        viewBugsItem.setEnabled(false);\n+        localiseButton(viewBugsItem, \"menu.viewbugs_item\", \"View Bugs\", true);\n+        viewBugsItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                viewBugsItemActionPerformed(evt);\n+            }\n+        });\n+        viewMenu.add(viewBugsItem);\n+        theMenuBar.add(viewMenu);\n+        settingsMenu.setText(\"Settings\");\n+        settingsMenu.setFont(BUTTON_FONT);\n+        localiseButton(settingsMenu, \"menu.settings_menu\", \"&Settings\", true);\n+        settingsMenu.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                settingsMenuActionPerformed(evt);\n+            }\n+        });\n+        configureDetectorsItem.setFont(BUTTON_FONT);\n+        configureDetectorsItem.setText(\"Configure Detectors...\");\n+        localiseButton(configureDetectorsItem, \"menu.configure_item\", \"&Configure Detectors...\", true);\n+        configureDetectorsItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                configureDetectorsItemActionPerformed(evt);\n+            }\n+        });\n+        settingsMenu.add(configureDetectorsItem);\n+        effortMenu.setText(\"Effort\");\n+        effortMenu.setFont(BUTTON_FONT);\n+        localiseButton(effortMenu, \"menu.effort_menu\", \"Effort\", true);\n+        minEffortItem.setFont(BUTTON_FONT);\n+        minEffortItem.setText(\"Minimum\");\n+        effortButtonGroup.add(minEffortItem);\n+        localiseButton(minEffortItem, \"menu.mineffort_item\", \"&Minimum\", true);\n+        minEffortItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                minEffortItemActionPerformed(evt);\n+            }\n+        });\n+        effortMenu.add(minEffortItem);\n+        normalEffortItem.setFont(BUTTON_FONT);\n+        normalEffortItem.setSelected(true);\n+        normalEffortItem.setText(\"Normal\");\n+        effortButtonGroup.add(normalEffortItem);\n+        localiseButton(normalEffortItem, \"menu.normaleffort_item\", \"&Normal\", true);\n+        normalEffortItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                normalEffortItemActionPerformed(evt);\n+            }\n+        });\n+        effortMenu.add(normalEffortItem);\n+        maxEffortItem.setFont(BUTTON_FONT);\n+        maxEffortItem.setText(\"Maximum\");\n+        effortButtonGroup.add(maxEffortItem);\n+        localiseButton(maxEffortItem, \"menu.maxeffort_item\", \"&Maximum\", true);\n+        maxEffortItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                maxEffortItemActionPerformed(evt);\n+            }\n+        });\n+        effortMenu.add(maxEffortItem);\n+        settingsMenu.add(effortMenu);\n+        theMenuBar.add(settingsMenu);\n+        helpMenu.setText(\"Help\");\n+        helpMenu.setFont(BUTTON_FONT);\n+        localiseButton(helpMenu, \"menu.help_menu\", \"&Help\", true);\n+        aboutItem.setFont(BUTTON_FONT);\n+        aboutItem.setText(\"About...\");\n+        localiseButton(aboutItem, \"menu.about_item\", \"&About\", true);\n+        aboutItem.addActionListener(new java.awt.event.ActionListener() {\n+            public void actionPerformed(java.awt.event.ActionEvent evt) {\n+                aboutItemActionPerformed(evt);\n+            }\n+        });\n+        helpMenu.add(aboutItem);\n+        theMenuBar.add(helpMenu);\n+        setJMenuBar(theMenuBar);\n+        pack();\n+    }//GEN-END:initComponents\n \n-            pack();\n-        }//GEN-END:initComponents\n \n     private void maxEffortItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maxEffortItemActionPerformed\n         settingList = FindBugs.MAX_EFFORT;\n     }//GEN-LAST:event_maxEffortItemActionPerformed\n \n+\n     private void normalEffortItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_normalEffortItemActionPerformed\n         settingList = FindBugs.DEFAULT_EFFORT;\n     }//GEN-LAST:event_normalEffortItemActionPerformed\n \n+\n     private void minEffortItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minEffortItemActionPerformed\n         settingList = FindBugs.MIN_EFFORT;\n     }//GEN-LAST:event_minEffortItemActionPerformed\n \n+\n     private void settingsMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_settingsMenuActionPerformed\n         // TODO add your handling code here:\n     }//GEN-LAST:event_settingsMenuActionPerformed\n \n+\n     private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened\n         if (SystemProperties.getBoolean(\"findbugs.noSummary\")) {\n             groupByTabbedPane.remove(bySummary);\n         }\n     }//GEN-LAST:event_formWindowOpened\n \n+\n     private void selectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectAllActionPerformed\n         if (selectedComponent == null)\n             return;\n-\n-        if (selectedComponent instanceof JTextComponent)\n-            ((JTextComponent)selectedComponent).selectAll();\n+        if (selectedComponent instanceof JTextComponent) ((JTextComponent) selectedComponent).selectAll();\n         else if (selectedComponent instanceof JList) {\n-            JList list = (JList)selectedComponent;\n-            list.setSelectionInterval(0, list.getModel().getSize()-1);\n+            JList list = (JList) selectedComponent;\n+            list.setSelectionInterval(0, list.getModel().getSize() - 1);\n         }\n     }//GEN-LAST:event_selectAllActionPerformed\n \n+\n     private void disableEditKeyBindings(JList list) {\n         list.getInputMap().put(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK), \"none\");\n         list.getInputMap().put(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK), \"none\");\n         list.getInputMap().put(KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK), \"none\");\n     }\n \n+\n     private String buildSelectPath(JList list) {\n         StringBuilder path = new StringBuilder();\n         int[] indices = list.getSelectedIndices();\n@@ -1779,64 +1666,58 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         return path.toString();\n     }\n \n+\n     private void pasteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteActionPerformed\n         if (selectedComponent == null)\n             return;\n-\n-        if (selectedComponent instanceof JTextComponent)\n-            ((JTextComponent)selectedComponent).paste();\n+        if (selectedComponent instanceof JTextComponent) ((JTextComponent) selectedComponent).paste();\n         else if (selectedComponent instanceof JList) {\n             Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n             Transferable transfer = cb.getContents(this);\n             if (transfer.isDataFlavorSupported(DataFlavor.stringFlavor)) {\n                 try {\n-                    String path = (String)transfer.getTransferData(DataFlavor.stringFlavor);\n-\n+                    String path = (String) transfer.getTransferData(DataFlavor.stringFlavor);\n                     if (selectedComponent == jarFileList) {\n                         jarNameTextField.setText(path);\n                         addJarButtonActionPerformed(evt);\n-                    }\n-                    else if (selectedComponent == sourceDirList) {\n+                    } else if (selectedComponent == sourceDirList) {\n                         srcDirTextField.setText(path);\n                         this.addSourceDirButtonActionPerformed(evt);\n-                    }\n-                    else if (selectedComponent == classpathEntryList) {\n-                        classpathEntryTextField.setText(path);\n-                        addClasspathEntryButtonActionPerformed(evt);\n-                    }\n+                    } else if (selectedComponent == classpathEntryList) {\n+                               classpathEntryTextField.setText(path);\n+                               addClasspathEntryButtonActionPerformed(evt);\n+                           }\n                 } catch (Exception e) {\n+\n                 }\n             }\n         }\n     }//GEN-LAST:event_pasteActionPerformed\n \n+\n     private void copyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyActionPerformed\n         if (selectedComponent == null)\n             return;\n-\n-        if (selectedComponent instanceof JTextComponent)\n-            ((JTextComponent)selectedComponent).copy();\n+        if (selectedComponent instanceof JTextComponent) ((JTextComponent) selectedComponent).copy();\n         else if (selectedComponent instanceof JTree) {\n-            TreePath path = ((JTree)selectedComponent).getSelectionPath();\n+            TreePath path = ((JTree) selectedComponent).getSelectionPath();\n             StringSelection data = new StringSelection(path.getLastPathComponent().toString());\n             Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n             cb.setContents(data, data);\n-       }\n-        else if (selectedComponent instanceof JList) {\n-            StringSelection path = new StringSelection(buildSelectPath((JList)selectedComponent));\n-            Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n-            cb.setContents(path, path);\n-        }\n+        } else if (selectedComponent instanceof JList) {\n+                 StringSelection path = new StringSelection(buildSelectPath((JList) selectedComponent));\n+                 Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n+                 cb.setContents(path, path);\n+             }\n     }//GEN-LAST:event_copyActionPerformed\n \n+\n     private void cutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutActionPerformed\n         if (selectedComponent == null)\n             return;\n-\n-        if (selectedComponent instanceof JTextComponent)\n-            ((JTextComponent)selectedComponent).cut();\n+        if (selectedComponent instanceof JTextComponent) ((JTextComponent) selectedComponent).cut();\n         else if (selectedComponent instanceof JList) {\n-            StringSelection path = new StringSelection(buildSelectPath((JList)selectedComponent));\n+            StringSelection path = new StringSelection(buildSelectPath((JList) selectedComponent));\n             Clipboard cb = Toolkit.getDefaultToolkit().getSystemClipboard();\n             cb.setContents(path, path);\n             if (selectedComponent == jarFileList)\n@@ -1848,72 +1729,79 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         }\n     }//GEN-LAST:event_cutActionPerformed\n \n+\n     private void focusGainedHandler(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focusGainedHandler\n         Component old = evt.getOppositeComponent();\n-        if (old instanceof JList)\n-            ((JList) old).clearSelection();\n+        if (old instanceof JList) ((JList) old).clearSelection();\n         selectedComponent = evt.getComponent();\n         ableEditMenu();\n     }//GEN-LAST:event_focusGainedHandler\n \n+\n     private void classpathUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classpathUpButtonActionPerformed\n         if (moveEntriesUp(classpathEntryList))\n             resyncAuxClasspathEntries();\n     }//GEN-LAST:event_classpathUpButtonActionPerformed\n \n+\n     private void sourceDownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceDownButtonActionPerformed\n         if (moveEntriesDown(sourceDirList))\n             resyncSourceEntries();\n     }//GEN-LAST:event_sourceDownButtonActionPerformed\n \n+\n     private void sourceUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sourceUpButtonActionPerformed\n         if (moveEntriesUp(sourceDirList))\n             resyncSourceEntries();\n     }//GEN-LAST:event_sourceUpButtonActionPerformed\n \n+\n     private void classpathDownButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classpathDownButtonActionPerformed\n         if (moveEntriesDown(classpathEntryList))\n             resyncAuxClasspathEntries();\n     }//GEN-LAST:event_classpathDownButtonActionPerformed\n \n+\n     private void viewBugsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBugsItemActionPerformed\n         setView(\"BugTree\");\n     }//GEN-LAST:event_viewBugsItemActionPerformed\n \n+\n     private void viewProjectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewProjectItemActionPerformed\n         setView(\"EditProjectPanel\");\n     }//GEN-LAST:event_viewProjectItemActionPerformed\n \n+\n     private void highPriorityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_highPriorityButtonActionPerformed\n         setPriorityThreshold(Detector.HIGH_PRIORITY);\n     }//GEN-LAST:event_highPriorityButtonActionPerformed\n \n+\n     private void mediumPriorityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mediumPriorityButtonActionPerformed\n         setPriorityThreshold(Detector.NORMAL_PRIORITY);\n     }//GEN-LAST:event_mediumPriorityButtonActionPerformed\n \n+\n     private void lowPriorityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lowPriorityButtonActionPerformed\n         setPriorityThreshold(Detector.LOW_PRIORITY);\n     }//GEN-LAST:event_lowPriorityButtonActionPerformed\n \n+\n     private void expPriorityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_expPriorityButtonActionPerformed\n         setPriorityThreshold(Detector.EXP_PRIORITY);\n     }//GEN-LAST:event_expPriorityButtonActionPerformed\n \n-    private void saveBugsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBugsItemActionPerformed\n \n+    private void saveBugsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBugsItemActionPerformed\n         try {\n             if (currentAnalysisRun == null) {\n                 logger.logMessage(Logger.ERROR, \"No bugs are loaded!\");\n                 return;\n             }\n-\n             JFileChooser chooser = createFileChooser();\n             chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);\n             chooser.setFileFilter(xmlFileFilter);\n-\n             int result = chooseFile(chooser, L10N.getLocalString(\"dlg.savebugs_ttl\", \"Save Bugs\"));\n-\n             if (result != JFileChooser.CANCEL_OPTION) {\n                 // Make sure current annotation text is up to date with its\n                 // corresponding bug instance\n@@ -1932,43 +1820,36 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         }\n     }//GEN-LAST:event_saveBugsItemActionPerformed\n \n+\n     private void loadBugsFromFile(File file) throws IOException, DocumentException {\n         File selectedFile = file;\n-\n         Project project = new Project();\n         AnalysisRun analysisRun = new AnalysisRun(project, this);\n-\n         analysisRun.loadBugsFromFile(selectedFile);\n-\n         project.setProjectFileName(file.getName()); // otherwise frame will show \"<<unnamed project>>\"\n         setProject(project);\n         synchAnalysisRun(analysisRun);\n     }\n \n+\n     private void loadBugsFromURL(String urlspec) throws IOException, DocumentException {\n         URL url = new URL(urlspec);\n         InputStream in = url.openStream();\n-\n         Project project = new Project();\n         AnalysisRun analysisRun = new AnalysisRun(project, this);\n-\n         analysisRun.loadBugsFromInputStream(in);\n-\n         setProject(project);\n         synchAnalysisRun(analysisRun);\n     }\n \n+\n     private void loadBugsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadBugsItemActionPerformed\n         // FIXME: offer to save current project and bugs\n-\n         try {\n-\n             JFileChooser chooser = createFileChooser();\n             chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);\n             chooser.setFileFilter(xmlFileFilter);\n-\n             int result = chooseFile(chooser, L10N.getLocalString(\"dlg.loadbugs_ttl\", \"Load Bugs...\"));\n-\n             if (result != JFileChooser.CANCEL_OPTION) {\n                 loadBugsFromFile(chooser.getSelectedFile());\n             }\n@@ -1978,9 +1859,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             }\n             logger.logMessage(Logger.ERROR, \"Could not load bugs: \" + e.toString());\n         }\n-\n     }//GEN-LAST:event_loadBugsItemActionPerformed\n \n+\n     private void configureDetectorsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configureDetectorsItemActionPerformed\n         ConfigureDetectorsDialog dialog = new ConfigureDetectorsDialog(this, true);\n         dialog.setSize(700, 520);\n@@ -1988,12 +1869,11 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         dialog.setVisible(true);\n     }//GEN-LAST:event_configureDetectorsItemActionPerformed\n \n+\n     private void reloadProjectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reloadProjectItemActionPerformed\n         Project current = getCurrentProject();\n-\n         if (current == null)\n             return;\n-\n         try {\n             String filename = current.getProjectFileName();\n             Project project = new Project();\n@@ -2004,13 +1884,14 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         } catch (IOException e) {\n             logger.logMessage(Logger.ERROR, \"Could not reload project: \" + e.getMessage());\n         }\n-\n     }//GEN-LAST:event_reloadProjectItemActionPerformed\n \n+\n     private void saveProjectAsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveProjectAsItemActionPerformed\n         saveProject(getCurrentProject(), L10N.getLocalString(\"dlg.saveprojectas_ttl\", \"Save Project As...\"), true);\n     }//GEN-LAST:event_saveProjectAsItemActionPerformed\n \n+\n     private void viewMenuMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_viewMenuMenuSelected\n         // View bug details and full descriptions items,\n         // are only enabled if there is a project open.\n@@ -2019,6 +1900,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         fullDescriptionsItem.setEnabled(hasProject);\n     }//GEN-LAST:event_viewMenuMenuSelected\n \n+\n     private void fileMenuMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_fileMenuMenuSelected\n         // Save and close project items are only enabled if there is a project open.\n         boolean hasProject = getCurrentProject() != null;\n@@ -2030,19 +1912,19 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         // Save bugs is only enabled if there is a current analysis run\n         boolean hasAnalysisRun = currentAnalysisRun != null;\n         saveBugsItem.setEnabled(hasAnalysisRun);\n-\n     }//GEN-LAST:event_fileMenuMenuSelected\n \n+\n     private void closeProjectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeProjectItemActionPerformed\n         if (closeProjectHook(getCurrentProject(), L10N.getLocalString(\"dlg.closeproject_lbl\", \"Close Project\"))) {\n             setProject(null);\n         }\n     }//GEN-LAST:event_closeProjectItemActionPerformed\n \n+\n     private void removeClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeClasspathEntryButtonActionPerformed\n         Project project = getCurrentProject();\n         DefaultListModel listModel = (DefaultListModel) classpathEntryList.getModel();\n-\n         int[] selIndices = classpathEntryList.getSelectedIndices();\n         for (int i = selIndices.length - 1; i >= 0; i--) {\n             int sel = selIndices[i];\n@@ -2051,18 +1933,18 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         }\n     }//GEN-LAST:event_removeClasspathEntryButtonActionPerformed\n \n+\n     private void addClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClasspathEntryButtonActionPerformed\n         addClasspathEntryToList();\n     }//GEN-LAST:event_addClasspathEntryButtonActionPerformed\n \n+\n     private void browseClasspathEntryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseClasspathEntryButtonActionPerformed\n         JFileChooser chooser = createFileChooser();\n         chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);\n         chooser.setFileFilter(auxClasspathEntryFileFilter);\n         chooser.setMultiSelectionEnabled(true);\n-\n         int result = chooseFile(chooser, \"Add Entry\");\n-\n         if (result != JFileChooser.CANCEL_OPTION) {\n             File[] selectedFileList = chooser.getSelectedFiles();\n             for (int i = 0; i < selectedFileList.length; ++i) {\n@@ -2073,12 +1955,12 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         }\n     }//GEN-LAST:event_browseClasspathEntryButtonActionPerformed\n \n+\n     private void fullDescriptionsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullDescriptionsItemActionPerformed\n         for (JTree bugTree : bugTreeList) {\n             // Redisplay the displayed bug instance nodes\n             DefaultTreeModel bugTreeModel = (DefaultTreeModel) bugTree.getModel();\n             int numRows = bugTree.getRowCount();\n-\n             for (int i = 0; i < numRows; ++i) {\n                 //System.out.println(\"Getting path for row \" + i);\n                 TreePath path = bugTree.getPathForRow(i);\n@@ -2091,18 +1973,19 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         }\n     }//GEN-LAST:event_fullDescriptionsItemActionPerformed\n \n+\n     private void viewBugDetailsItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBugDetailsItemActionPerformed\n         String view = getView();\n         if (view.equals(\"BugTree\")) {\n             checkBugDetailsVisibility();\n         }\n-\n     }//GEN-LAST:event_viewBugDetailsItemActionPerformed\n \n+\n     private void bugTreeBugDetailsSplitterPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_bugTreeBugDetailsSplitterPropertyChange\n         // Here we want to\n-        //\t (1) Keep the View:Bug details checkbox item up to date, and\n-        //\t (2) keep the details window synchronized with the current bug instance\n+        //   (1) Keep the View:Bug details checkbox item up to date, and\n+        //   (2) keep the details window synchronized with the current bug instance\n         String propertyName = evt.getPropertyName();\n         if (propertyName.equals(JSplitPane.DIVIDER_LOCATION_PROPERTY)) {\n             boolean isMaximized = isSplitterMaximized(bugTreeBugDetailsSplitter, evt);\n@@ -2115,15 +1998,13 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         }\n     }//GEN-LAST:event_bugTreeBugDetailsSplitterPropertyChange\n \n-    private void openProjectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openProjectItemActionPerformed\n \n+    private void openProjectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openProjectItemActionPerformed\n         if (!closeProjectHook(getCurrentProject(), L10N.getLocalString(\"msg.openproject_txt\", \"Open Project\")))\n             return;\n-\n         JFileChooser chooser = createFileChooser();\n         chooser.setFileFilter(projectFileFilter);\n         int result = chooseFileToOpen(chooser);\n-\n         if (result == JFileChooser.CANCEL_OPTION)\n             return;\n         try {\n@@ -2133,43 +2014,45 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             setProject(project);\n             UserPreferences.getUserPreferences().useProject(file.getPath());\n             rebuildRecentProjectsMenu();\n-\n         } catch (IOException e) {\n-            logger.logMessage(Logger.ERROR, MessageFormat.format( L10N.getLocalString(\"msg.couldnotopenproject_txt\", \"Could not open project: {0}\"), new Object[]{e.getMessage()}));\n+            logger.logMessage(Logger.ERROR,\n+                              MessageFormat.format(L10N.getLocalString(\"msg.couldnotopenproject_txt\", \"Could not open project: {0}\"), new Object[] { e.getMessage() }));\n         }\n     }//GEN-LAST:event_openProjectItemActionPerformed\n \n+\n     private void saveProjectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveProjectItemActionPerformed\n         saveProject(getCurrentProject(), L10N.getLocalString(\"msg.saveproject_txt\", \"Save Project\"));\n     }//GEN-LAST:event_saveProjectItemActionPerformed\n \n+\n     private void aboutItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutItemActionPerformed\n         about();\n     }//GEN-LAST:event_aboutItemActionPerformed\n \n+\n     private void findBugsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findBugsButtonActionPerformed\n         Project project = getCurrentProject();\n-\n         if (project.getFileCount() == 0) {\n-            logger.logMessage(Logger.ERROR, MessageFormat.format(L10N.getLocalString(\"msg.projectnojars_txt\", \"Project {0} has no Jar files selected\"), new Object[]{project}));\n+            logger.logMessage(Logger.ERROR,\n+                              MessageFormat.format(L10N.getLocalString(\"msg.projectnojars_txt\", \"Project {0} has no Jar files selected\"), new Object[] { project }));\n             return;\n         }\n-\n         bugDescriptionEditorPane.setText(\"\");\n         currentBugDetailsKey = null;\n         sourceTextArea.setText(\"\");\n         AnalysisRun analysisRun = new AnalysisRun(project, this);\n-\n-        logger.logMessage(Logger.INFO, MessageFormat.format(L10N.getLocalString(\"msg.beginninganalysis_txt\", \"Beginning analysis of {0}\"), new Object[]{project}));\n+        logger.logMessage(Logger.INFO,\n+                          MessageFormat.format(L10N.getLocalString(\"msg.beginninganalysis_txt\", \"Beginning analysis of {0}\"), new Object[] { project }));\n \n         // Run the analysis!\n         RunAnalysisDialog dialog = new RunAnalysisDialog(this, analysisRun, analysisPriority);\n         dialog.setSize(400, 300);\n         dialog.setLocationRelativeTo(null); // center the dialog\n         dialog.setVisible(true);\n-\n         if (dialog.isCompleted()) {\n-            logger.logMessage(Logger.INFO, MessageFormat.format(L10N.getLocalString(\"msg.analysiscompleted_txt\", \"Analysis {0} completed\"), new Object[]{project}));\n+            logger.logMessage(Logger.INFO,\n+                              MessageFormat.format(L10N.getLocalString(\"msg.analysiscompleted_txt\", \"Analysis {0} completed\"), new Object[] { project }));\n \n             // Report any errors that might have occurred during analysis\n             analysisRun.reportAnalysisErrors();\n@@ -2181,7 +2064,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 // The analysis was killed by an unexpected exception\n                 Exception e = dialog.getException();\n                 AnalysisErrorDialog err = new AnalysisErrorDialog(this, true, null);\n-                err.addLine(MessageFormat.format(L10N.getLocalString(\"msg.fatalanalysisexception_txt\", \"Fatal analysis exception: {0}\"),  new Object[]{e.toString()}));\n+                err.addLine(MessageFormat.format(L10N.getLocalString(\"msg.fatalanalysisexception_txt\", \"Fatal analysis exception: {0}\"), new Object[] { e.toString() }));\n                 StackTraceElement[] callList = e.getStackTrace();\n                 for (StackTraceElement aCallList : callList)\n                     err.addLine(\"\\t\" + aCallList);\n@@ -2191,17 +2074,18 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 err.setVisible(true);\n             } else {\n                 // Cancelled by user\n-                logger.logMessage(Logger.INFO, MessageFormat.format(L10N.getLocalString(\"msg.analysiscancelled_txt\", \"Analysis of {0} cancelled by user\"), new Object[]{project}));\n+                logger.logMessage(Logger.INFO,\n+                                  MessageFormat.format(L10N.getLocalString(\"msg.analysiscancelled_txt\", \"Analysis of {0} cancelled by user\"), new Object[] { project }));\n             }\n         }\n     }//GEN-LAST:event_findBugsButtonActionPerformed\n \n+\n     private void browseSrcDirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseSrcDirButtonActionPerformed\n         JFileChooser chooser = createFileChooser();\n         chooser.setFileFilter(archiveAndDirectoryFilter);\n         chooser.setMultiSelectionEnabled(true);\n         chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);\n-\n         int rc = chooseFile(chooser, L10N.getLocalString(\"msg_addsource_lbl\", \"Add source directory or archive\"));\n         if (rc == JFileChooser.APPROVE_OPTION) {\n             File[] selectedFileList = chooser.getSelectedFiles();\n@@ -2213,20 +2097,22 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         }\n     }//GEN-LAST:event_browseSrcDirButtonActionPerformed\n \n+\n     private void srcDirTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_srcDirTextFieldActionPerformed\n         addSourceDirToList();\n     }//GEN-LAST:event_srcDirTextFieldActionPerformed\n \n+\n     private void jarNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jarNameTextFieldActionPerformed\n         addJarToList();\n     }//GEN-LAST:event_jarNameTextFieldActionPerformed\n \n+\n     private void browseJarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseJarButtonActionPerformed\n         JFileChooser chooser = createFileChooser();\n         chooser.setFileFilter(archiveAndDirectoryFilter);\n         chooser.setMultiSelectionEnabled(true);\n         chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);\n-\n         int rc = chooseFile(chooser, L10N.getLocalString(\"msg.addarchiveordirectory_txt\", \"Add archive or directory\"));\n         if (rc == JFileChooser.APPROVE_OPTION) {\n             File[] selectedFileList = chooser.getSelectedFiles();\n@@ -2238,23 +2124,23 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         }\n     }//GEN-LAST:event_browseJarButtonActionPerformed\n \n-    private void newProjectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProjectItemActionPerformed\n \n+    private void newProjectItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newProjectItemActionPerformed\n         if (!closeProjectHook(getCurrentProject(), L10N.getLocalString(\"msg.newproject_txt\", \"New Project\")))\n             return;\n-\n         Project project = new Project();\n         setProject(project);\n     }//GEN-LAST:event_newProjectItemActionPerformed\n \n+\n     private void exitItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitItemActionPerformed\n         exitFindBugs();\n     }//GEN-LAST:event_exitItemActionPerformed\n \n+\n     private void removeSrcDirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeSrcDirButtonActionPerformed\n         Project project = getCurrentProject();\n         DefaultListModel listModel = (DefaultListModel) sourceDirList.getModel();\n-\n         int[] selIndices = sourceDirList.getSelectedIndices();\n         for (int i = selIndices.length - 1; i >= 0; i--) {\n             int sel = selIndices[i];\n@@ -2263,10 +2149,10 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         }\n     }//GEN-LAST:event_removeSrcDirButtonActionPerformed\n \n+\n     private void removeJarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeJarButtonActionPerformed\n         Project project = getCurrentProject();\n         DefaultListModel listModel = (DefaultListModel) jarFileList.getModel();\n-\n         int[] selIndices = jarFileList.getSelectedIndices();\n         for (int i = selIndices.length - 1; i >= 0; i--) {\n             int sel = selIndices[i];\n@@ -2275,10 +2161,12 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         }\n     }//GEN-LAST:event_removeJarButtonActionPerformed\n \n+\n     private void addSourceDirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSourceDirButtonActionPerformed\n         addSourceDirToList();\n     }//GEN-LAST:event_addSourceDirButtonActionPerformed\n \n+\n     private void addJarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addJarButtonActionPerformed\n         addJarToList();\n     }//GEN-LAST:event_addJarButtonActionPerformed\n@@ -2286,6 +2174,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Exit the Application\n      */\n+\n+\n     private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm\n         exitFindBugs();\n     }//GEN-LAST:event_exitForm\n@@ -2294,9 +2184,10 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * This makes the set of controls passed in all the same size, equal to\n      * the minimum needed of the largest control.\n      */\n+\n+\n     private void equalizeControls(JComponent[] components) {\n         Dimension d;\n-\n         int minX = 0, minY = 0;\n         for (JComponent comp : components) {\n             comp.setMaximumSize(null);\n@@ -2308,7 +2199,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             if (d.height > minY)\n                 minY = d.height;\n         }\n-\n         d = new Dimension(minX, minY);\n         for (JComponent comp : components) {\n             comp.setMinimumSize(d);\n@@ -2322,18 +2212,19 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      *\n      * @param e the TreeSelectionEvent\n      */\n-    private void bugTreeSelectionChanged(TreeSelectionEvent e) {\n \n+\n+    private void bugTreeSelectionChanged(TreeSelectionEvent e) {\n         BugInstance selected = getCurrentBugInstance();\n         if (selected != null) {\n             synchBugInstance();\n         }\n     }\n \n+\n     private void openRecentProjectItemActionPerformed(java.awt.event.ActionEvent evt) {\n         if (!closeProjectHook(getCurrentProject(), L10N.getLocalString(\"msg.openproject_txt\", \"Open Project\")))\n             return;\n-\n         JMenuItem recentProjectItem = (JMenuItem) evt.getSource();\n         File file = new File(recentProjectItem.getText());\n         try {\n@@ -2344,17 +2235,18 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             UserPreferences.getUserPreferences().useProject(file.getPath());\n         } catch (IOException e) {\n             UserPreferences.getUserPreferences().removeProject(file.getPath());\n-            logger.logMessage(Logger.ERROR, MessageFormat.format(L10N.getLocalString(\"msg.couldnotopenproject_txt\", \"Could not open project: {0}\"), new Object[]{e.getMessage()}));\n+            logger.logMessage(Logger.ERROR,\n+                              MessageFormat.format(L10N.getLocalString(\"msg.couldnotopenproject_txt\", \"Could not open project: {0}\"), new Object[] { e.getMessage() }));\n         } finally {\n             rebuildRecentProjectsMenu();\n         }\n     }\n \n+\n     private boolean moveEntriesUp(JList entryList) {\n         int[] selIndices = entryList.getSelectedIndices();\n         if (selIndices.length == 0)\n             return false;\n-\n         boolean changed = false;\n         int lastInsertPos = -1;\n         DefaultListModel model = (DefaultListModel) entryList.getModel();\n@@ -2367,16 +2259,15 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             }\n             lastInsertPos = selIndices[i];\n         }\n-\n         entryList.setSelectedIndices(selIndices);\n         return changed;\n     }\n \n+\n     private boolean moveEntriesDown(JList entryList) {\n         int[] selIndices = entryList.getSelectedIndices();\n         if (selIndices.length == 0)\n             return false;\n-\n         boolean changed = false;\n         DefaultListModel model = (DefaultListModel) entryList.getModel();\n         int lastInsertPos = model.getSize();\n@@ -2389,28 +2280,27 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             }\n             lastInsertPos = selIndices[i];\n         }\n-\n         entryList.setSelectedIndices(selIndices);\n         return changed;\n     }\n \n+\n     private void resyncAuxClasspathEntries() {\n         Project project = getCurrentProject();\n         int numEntries = project.getNumAuxClasspathEntries();\n         while (numEntries-- > 0)\n             project.removeAuxClasspathEntry(0);\n-\n         DefaultListModel model = (DefaultListModel) classpathEntryList.getModel();\n         for (int i = 0; i < model.size(); i++)\n             project.addAuxClasspathEntry((String) model.get(i));\n     }\n \n+\n     private void resyncSourceEntries() {\n         Project project = getCurrentProject();\n         int numEntries = project.getNumSourceDirs();\n         while (numEntries-- > 0)\n             project.removeSourceDir(0);\n-\n         DefaultListModel model = (DefaultListModel) sourceDirList.getModel();\n         for (int i = 0; i < model.size(); i++)\n             project.addSourceDir((String) model.get(i));\n@@ -2419,15 +2309,16 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Localise the given AbstractButton, setting the text and optionally mnemonic\n      * Note that AbstractButton includes menus and menu items.\n-     * @param button\t\tThe button to localise\n-     * @param key\t\t   The key to look up in resource bundle\n+     * @param button        The button to localise\n+     * @param key          The key to look up in resource bundle\n      * @param defaultString default String to use if key not found\n-     * @param setMnemonic\twhether or not to set the mnemonic. According to Sun's\n-     *\t\t\t\t\t  guidelines, default/cancel buttons should not have mnemonics\n-     *\t\t\t\t\t  but instead should use Return/Escape\n+     * @param setMnemonic   whether or not to set the mnemonic. According to Sun's\n+     *                    guidelines, default/cancel buttons should not have mnemonics\n+     *                    but instead should use Return/Escape\n      */\n-    private void localiseButton(AbstractButton button, String key, String defaultString,\n-                                boolean setMnemonic) {\n+\n+\n+    private void localiseButton(AbstractButton button, String key, String defaultString, boolean setMnemonic) {\n         AnnotatedString.localiseButton(button, key, defaultString, setMnemonic);\n     }\n \n@@ -2439,6 +2330,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * This is called from the constructor to perform post-initialization\n      * of the components in the form.\n      */\n+\n+\n     private void postInitComponents() {\n         logger = new ConsoleLogger(this);\n \n@@ -2452,7 +2345,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         int count = 0;\n         for (String bugCategory : bugCategoryCollection) {\n             String bugCategoryDescription = I18N.instance().getBugCategoryDescription(bugCategory);\n-\n             final JCheckBoxMenuItem item = new JCheckBoxMenuItem(bugCategoryDescription, true);\n             item.setFont(BUTTON_FONT);\n             item.setSelected(getFilterSettings().containsCategory(bugCategory));\n@@ -2461,20 +2353,16 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                     toggleBugCategory(item);\n                 }\n             });\n-\n             filterWarningsMenu.add(item);\n-\n             this.bugCategoryCheckBoxList[count] = item;\n             this.bugCategoryList[count] = bugCategory;\n-\n             ++count;\n         }\n-\n         viewPanelLayout = (CardLayout) viewPanel.getLayout();\n \n         // List of bug group tabs.\n         // This must be in the same order as GROUP_BY_ORDER_LIST!\n-        bugTreeList = new JTree[]{byClassBugTree, byPackageBugTree, byBugTypeBugTree, byBugCategoryBugTree};\n+        bugTreeList = new JTree[] { byClassBugTree, byPackageBugTree, byBugTypeBugTree, byBugCategoryBugTree };\n \n         // Configure bug trees\n         for (JTree bugTree : bugTreeList) {\n@@ -2488,7 +2376,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 }\n             });\n         }\n-\n         jarFileList.setModel(new DefaultListModel());\n         sourceDirList.setModel(new DefaultListModel());\n         classpathEntryList.setModel(new DefaultListModel());\n@@ -2496,11 +2383,10 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         // We use a special highlight painter to ensure that the highlights cover\n         // complete source lines, even though the source text doesn't\n         // fill the lines completely.\n-        final Highlighter.HighlightPainter painter =\n-                new DefaultHighlighter.DefaultHighlightPainter(sourceTextArea.getSelectionColor()) {\n+\n+        final Highlighter.HighlightPainter painter = new DefaultHighlighter.DefaultHighlightPainter(sourceTextArea.getSelectionColor()) {\n             @Override\n-            public Shape paintLayer(Graphics g, int offs0, int offs1,\n-                    Shape bounds, JTextComponent c, View view) {\n+            public Shape paintLayer(Graphics g, int offs0, int offs1, Shape bounds, JTextComponent c, View view) {\n                 try {\n                     Shape extent = view.modelToView(offs0, Position.Bias.Forward, offs1, Position.Bias.Backward, bounds);\n                     Rectangle rect = extent.getBounds();\n@@ -2513,16 +2399,14 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                     return null;\n                 }\n             }\n-        };\n+                                           };\n         Highlighter sourceHighlighter = new DefaultHighlighter() {\n-            @Override\n-            public Object addHighlight(int p0, int p1, Highlighter.HighlightPainter p)\n-            throws BadLocationException {\n-                return super.addHighlight(p0, p1, painter);\n-            }\n-        };\n+                        @Override\n+                        public Object addHighlight(int p0, int p1, Highlighter.HighlightPainter p) throws BadLocationException {\n+                            return super.addHighlight(p0, p1, painter);\n+                        }\n+                    };\n         sourceTextArea.setHighlighter(sourceHighlighter);\n-\n         updateTitle(getCurrentProject());\n \n         // Load the icon for the UMD logo\n@@ -2531,18 +2415,17 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         logoLabel.setIcon(logoIcon);\n \n         // Set common Menu Accelerators\n+\n         final int MENU_MASK = getMenuMask();\n         newProjectItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_N, MENU_MASK));\n         openProjectItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_O, MENU_MASK));\n         saveProjectItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, MENU_MASK));\n         closeProjectItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_W, MENU_MASK));\n         reloadProjectItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_R, MENU_MASK));\n-\n         cutItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, MENU_MASK));\n         copyItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_C, MENU_MASK));\n         pasteItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_V, MENU_MASK));\n         selectAllItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_A, MENU_MASK));\n-\n         if (MAC_OS_X) {\n             // Some more accelerators that use modifiers. Other platforms\n             // tend not to use modifiers for menu accelerators\n@@ -2551,7 +2434,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             saveBugsItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, MENU_MASK | Event.ALT_MASK));\n \n             // Leave room for the growBox on Mac\n-            growBoxSpacer.setMinimumSize(new java.awt.Dimension(16,16));\n+            growBoxSpacer.setMinimumSize(new java.awt.Dimension(16, 16));\n \n             // Remove Unnecessary/Redundant menu items.\n             fileMenu.remove(exitItem);\n@@ -2564,10 +2447,10 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             // class loader will try to load OSXAdapter on a non Mac system\n             try {\n                 Class<?> osxAdapter = Class.forName(\"edu.umd.cs.findbugs.gui.OSXAdapter\");\n-                Class<?>[] defArgs = {FindBugsFrame.class};\n+                Class<?>[] defArgs = { FindBugsFrame.class };\n                 Method registerMethod = osxAdapter.getDeclaredMethod(\"registerMacOSXApplication\", defArgs);\n                 if (registerMethod != null) {\n-                    Object[] args = {this};\n+                    Object[] args = { this };\n                     registerMethod.invoke(osxAdapter, args);\n                 }\n             } catch (NoClassDefFoundError e) {\n@@ -2585,9 +2468,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 }\n             }\n         }\n-\n     }\n \n+\n     private void rebuildRecentProjectsMenu() {\n         UserPreferences prefs = UserPreferences.getUserPreferences();\n         final List<String> recentProjects = prefs.getRecentProjects();\n@@ -2625,10 +2508,12 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * whose class is the same as the given class.\n      *\n      * @param tree the tree\n-     * @param c\tthe class\n+     * @param c the class\n      * @return an instance of the given kind of object which is in the\n-     *\t\t current selection, or null if there is no matching object\n+     *       current selection, or null if there is no matching object\n      */\n+\n+\n     private static <E> E getTreeSelectionOf(JTree tree, Class<E> c) {\n         TreePath selPath = tree.getSelectionPath();\n \n@@ -2651,6 +2536,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Get the current project.\n      */\n+\n+\n     private Project getCurrentProject() {\n         return currentProject;\n     }\n@@ -2658,6 +2545,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Get the current analysis run.\n      */\n+\n+\n     private AnalysisRun getCurrentAnalysisRun() {\n         return currentAnalysisRun;\n     }\n@@ -2665,6 +2554,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Get the bug instance currently selected in the bug tree.\n      */\n+\n+\n     private BugInstance getCurrentBugInstance() {\n         JTree bugTree = getCurrentBugTree();\n         if (bugTree != null) {\n@@ -2680,20 +2571,22 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * that we have top and bottom components).\n      *\n      * @param splitter the JSplitPane\n-     * @param evt\t  the event that is changing the splitter value\n+     * @param evt     the event that is changing the splitter value\n      */\n+\n+\n     private boolean isSplitterMaximized(JSplitPane splitter, java.beans.PropertyChangeEvent evt) {\n         Integer location = (Integer) evt.getNewValue();\n-\n         int height = splitter.getHeight();\n         int hopefullyMaxDivider = height - (splitter.getDividerSize() + DIVIDER_FUDGE);\n         //System.out.println(\"Splitter: \"+(splitter==consoleSplitter?\"consoleSplitter\":\"bugTreeBugDetailsSplitter\")+\n-        //\t\": height=\"+height+\",location=\"+location+\n-        //\t\",hopefullyMax=\"+hopefullyMaxDivider);\n+        //  \": height=\"+height+\",location=\"+location+\n+        //  \",hopefullyMax=\"+hopefullyMaxDivider);\n         boolean isMaximized = location.intValue() >= hopefullyMaxDivider;\n         return isMaximized;\n     }\n \n+\n     private void checkBugDetailsVisibility() {\n         if (viewBugDetailsItem.isSelected()) {\n             bugTreeBugDetailsSplitter.resetToPreferredSizes();\n@@ -2703,6 +2596,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         //System.out.(\"New bug detail splitter location \" + bugTreeBugDetailsSplitter.getDividerLocation());\n     }\n \n+\n     private JTree getCurrentBugTree() {\n         JScrollPane selected = (JScrollPane) groupByTabbedPane.getSelectedComponent();\n         Object view = selected.getViewport().getView();\n@@ -2721,6 +2615,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      *\n      * @param threshold the threshold\n      */\n+\n+\n     private void setPriorityThreshold(int threshold) {\n         if (threshold != getFilterSettings().getMinPriorityAsInt()) {\n             getFilterSettings().setMinPriority(ProjectFilterSettings.getIntPriorityAsString(threshold));\n@@ -2729,27 +2625,25 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         }\n     }\n \n+\n     private void ableEditMenu() {\n         String view = getView();\n         if ((view != null) && view.equals(\"EditProjectPanel\")) {\n             if (selectedComponent != null) {\n                 boolean hasSelection = false;\n                 if (selectedComponent instanceof JList) {\n-                    JList list = (JList)selectedComponent;\n+                    JList list = (JList) selectedComponent;\n                     hasSelection = list.getSelectedIndices().length > 0;\n                 } else if (selectedComponent instanceof JTextField) {\n-                    JTextField tf = (JTextField)selectedComponent;\n-                    hasSelection = ((tf.getSelectedText() != null) &&\n-                            (tf.getSelectedText().length() > 0));\n+                    JTextField tf = (JTextField) selectedComponent;\n+                    hasSelection = ((tf.getSelectedText() != null) && (tf.getSelectedText().length() > 0));\n                 }\n-\n                 cutItem.setEnabled(hasSelection);\n                 copyItem.setEnabled(hasSelection);\n                 selectAllItem.setEnabled(true);\n             }\n-            //\t\t\t} else if (view.equals(\"BugTree\")) {\n-            //\t\t\t} else if (view.equals(\"ReportPanel\")) {\n-\n+            //          } else if (view.equals(\"BugTree\")) {\n+            //          } else if (view.equals(\"ReportPanel\")) {\n         } else {\n             cutItem.setEnabled(false);\n             copyItem.setEnabled(true);\n@@ -2758,6 +2652,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         }\n     }\n \n+\n     private void setProject(Project project) {\n         currentProject = project;\n         if (project != null) {\n@@ -2780,6 +2675,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         ableEditMenu();\n     }\n \n+\n     private void updateTitle(Project project) {\n         if (project == null)\n             this.setTitle(L10N.getLocalString(\"dlg.noproject_lbl\", \"FindBugs - no project\"));\n@@ -2792,9 +2688,11 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * If the project already has a valid filename, use that filename.\n      * Otherwise, prompt for one.\n      *\n-     * @param project\t the Project to save\n+     * @param project    the Project to save\n      * @param dialogTitle the title for the save dialog (if needed)\n      */\n+\n+\n     private boolean saveProject(Project project, String dialogTitle) {\n         return saveProject(project, dialogTitle, false);\n     }\n@@ -2802,25 +2700,25 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Offer to save the current Project to a file.\n      *\n-     * @param project\t\tthe Project to save\n-     * @param dialogTitle\tthe title for the save dialog (if needed)\n+     * @param project       the Project to save\n+     * @param dialogTitle   the title for the save dialog (if needed)\n      * @param chooseFilename if true, force a dialog to prompt the user\n-     *\t\t\t\t\t   for a filename\n+     *                     for a filename\n      * @return true if the project is saved successfully, false if the user\n-     *\t\t cancels or an error occurs\n+     *       cancels or an error occurs\n      */\n+\n+\n     private boolean saveProject(Project project, String dialogTitle, boolean chooseFilename) {\n         boolean useRelativePaths;\n         try {\n             if (project == null)\n                 return true;\n-\n             File file;\n             String fileName = project.getProjectFileName();\n-\n             if (!fileName.startsWith(\"<\") && !chooseFilename) {\n                 file = new File(fileName);\n-                useRelativePaths = project.getOption( Project.RELATIVE_PATHS );\n+                useRelativePaths = project.getOption(Project.RELATIVE_PATHS);\n             } else {\n                 JRadioButton relativePaths = new JRadioButton(L10N.getLocalString(\"msg.userelativepaths_txt\", \"Use Relative Paths\"));\n                 relativePaths.setSelected(project.getOption(Project.RELATIVE_PATHS));\n@@ -2834,23 +2732,18 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 file = new File(fileName);\n                 useRelativePaths = relativePaths.isSelected();\n             }\n-\n             project.write(file.getPath(), useRelativePaths, file.getParent());\n             logger.logMessage(Logger.INFO, \"Project saved\");\n             project.setProjectFileName(file.getPath());\n-\n             UserPreferences prefs = UserPreferences.getUserPreferences();\n             prefs.useProject(file.getPath());\n             prefs.read();\n             rebuildRecentProjectsMenu();\n-\n             updateTitle(project);\n-\n             return true;\n         } catch (IOException e) {\n             logger.logMessage(Logger.ERROR, \"Could not save project: \" + e.toString());\n-            JOptionPane.showMessageDialog(this, \"Error saving project: \" + e.toString(),\n-                    \"Error\", JOptionPane.ERROR_MESSAGE);\n+            JOptionPane.showMessageDialog(this, \"Error saving project: \" + e.toString(), \"Error\", JOptionPane.ERROR_MESSAGE);\n             return false;\n         }\n     }\n@@ -2858,19 +2751,23 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Hook to call before closing a project.\n      *\n-     * @param project\t\t the project being closed\n+     * @param project        the project being closed\n      * @param savePromptTitle title to use for the \"Save project?\" dialog\n      * @return true if user has confirmed that the project should be closed,\n-     *\t\t false if the close is cancelled\n+     *       false if the close is cancelled\n      */\n+\n+\n     private boolean closeProjectHook(Project project, String savePromptTitle) {\n         if (project == null || !project.isModified())\n             return true;\n \n         // Confirm that the project should be closed.\n-        int option = JOptionPane.showConfirmDialog(this, L10N.getLocalString(\"msg.saveprojectquery_txt\", \"Save Project?\"), savePromptTitle,\n-                JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE);\n-\n+        int option = JOptionPane.showConfirmDialog(this,\n+L10N.getLocalString(\"msg.saveprojectquery_txt\", \"Save Project?\"),\n+savePromptTitle,\n+JOptionPane.YES_NO_CANCEL_OPTION,\n+JOptionPane.QUESTION_MESSAGE);\n         if (option == JOptionPane.CANCEL_OPTION)\n             return false;\n         else if (option == JOptionPane.YES_OPTION) {\n@@ -2879,7 +2776,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 JOptionPane.showMessageDialog(this, \"Project was successfully saved.\");\n             return result;\n         } else\n-            return true;\n+              return true;\n     }\n \n     /**\n@@ -2887,6 +2784,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      *\n      * @param project the selected project\n      */\n+\n+\n     private void synchProject(Project project) {\n         // Clear text fields\n         jarNameTextField.setText(\"\");\n@@ -2894,19 +2793,16 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         classpathEntryTextField.setText(\"\");\n \n         // Populate jar file, source directory, and aux classpath entry lists\n-\n         DefaultListModel jarListModel = (DefaultListModel) jarFileList.getModel();\n         jarListModel.clear();\n         for (int i = 0; i < project.getFileCount(); ++i) {\n             jarListModel.addElement(project.getFile(i));\n         }\n-\n         DefaultListModel srcDirListModel = (DefaultListModel) sourceDirList.getModel();\n         srcDirListModel.clear();\n         for (int i = 0; i < project.getNumSourceDirs(); ++i) {\n             srcDirListModel.addElement(project.getSourceDir(i));\n         }\n-\n         DefaultListModel classpathEntryListModel = (DefaultListModel) classpathEntryList.getModel();\n         classpathEntryListModel.clear();\n         for (int i = 0; i < project.getNumAuxClasspathEntries(); ++i) {\n@@ -2919,19 +2815,19 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      *\n      * @param analysisRun the selected analysis run\n      */\n+\n+\n     private void synchAnalysisRun(AnalysisRun analysisRun) {\n         // Create and populate tree models\n         for (int i = 0; i < GROUP_BY_ORDER_LIST.length; ++i) {\n             DefaultMutableTreeNode bugRootNode = new DefaultMutableTreeNode();\n             DefaultTreeModel bugTreeModel = new DefaultTreeModel(bugRootNode);\n-\n             String groupByOrder = GROUP_BY_ORDER_LIST[i];\n             analysisRun.setTreeModel(groupByOrder, bugTreeModel);\n             populateAnalysisRunTreeModel(analysisRun, groupByOrder);\n             if (i < bugTreeList.length)\n                 bugTreeList[i].setModel(bugTreeModel);\n         }\n-\n         currentAnalysisRun = analysisRun;\n \n         //set the summary output\n@@ -2939,6 +2835,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         setView(\"BugTree\");\n     }\n \n+\n     private void setSummary(String summaryXML) {\n         bugSummaryEditorPane.setContentType(\"text/html\");\n         /*\n@@ -2948,7 +2845,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         // An immediate inline call to set the scroll position does nothing.\n         // So, use invokeLater(), even though this results in flashing.\n         // [What we really need is a way to set the text WITHOUT changing\n-        // the caret position.\tNeed to investigate.]\n+        // the caret position.  Need to investigate.]\n         SwingUtilities.invokeLater(new Runnable() {\n             public void run() {\n                 bySummary.getViewport().setViewPosition(new Point(0, 0));\n@@ -2970,12 +2867,13 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             if (reader != null)\n                 reader.close(); // polite, but doesn't do much in StringReader\n         }\n-\n     }\n \n     /**\n      * Populate an analysis run's tree model for given sort order.\n      */\n+\n+\n     private void populateAnalysisRunTreeModel(AnalysisRun analysisRun, final String groupBy) {\n         //System.out.println(\"Populating bug tree for order \" + groupBy);\n \n@@ -3000,62 +2898,62 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         // The grouper callback is what actually adds the group and bug\n         // nodes to the tree.\n         Grouper.Callback<BugInstance> callback = new Grouper.Callback<BugInstance>() {\n-            private BugInstanceGroup currentGroup;\n-            private DefaultMutableTreeNode currentGroupNode;\n-\n-            public void startGroup(BugInstance member) {\n-                String groupName;\n-                if (groupBy == GROUP_BY_CLASS)\n-                    groupName = member.getPrimaryClass().getClassName();\n-                else if (groupBy == GROUP_BY_PACKAGE) {\n-                    groupName = member.getPrimaryClass().getPackageName();\n-                    if (groupName.equals(\"\"))\n-                        groupName = \"Unnamed package\";\n-                } else if (groupBy == GROUP_BY_BUG_TYPE) {\n-                    String desc = member.toString();\n-                    String shortBugType = desc.substring(0, desc.indexOf(':'));\n-                    String bugTypeDescription = I18N.instance().getBugTypeDescription(shortBugType);\n-                    groupName = shortBugType + \": \" + bugTypeDescription;\n-                } else if (groupBy == GROUP_BY_BUG_CATEGORY) {\n-                    BugPattern pattern = member.getBugPattern();\n-                    if (pattern == null) {\n-                        if (FindBugs.DEBUG)\n-                            System.out.println(\"Unknown bug pattern \" + member.getType());\n-                        groupName = \"Unknown category\";\n-                    } else {\n-                        groupName = I18N.instance().getBugCategoryDescription(pattern.getCategory());\n-                    }\n-                } else\n-                    throw new IllegalStateException(\"Unknown sort order: \" + groupBy);\n-                currentGroup = new BugInstanceGroup(groupBy, groupName);\n-                currentGroupNode = new DefaultMutableTreeNode(currentGroup);\n-                bugTreeModel.insertNodeInto(currentGroupNode, bugRootNode, bugRootNode.getChildCount());\n-\n-                insertIntoGroup(member);\n-            }\n-\n-            public void addToGroup(BugInstance member) {\n-                insertIntoGroup(member);\n-            }\n-\n-            private void insertIntoGroup(BugInstance member) {\n-                int count = currentGroup.getMemberCount();\n-                currentGroup.incrementMemberCount();\n-                BugTreeNode bugNode = new BugTreeNode(member);\n-                if (BUG_COUNT)\n-                    bugNode.setCount(count);\n-                bugTreeModel.insertNodeInto(bugNode, currentGroupNode, currentGroupNode.getChildCount());\n+                                                     private BugInstanceGroup currentGroup;\n+\n+                                                     private DefaultMutableTreeNode currentGroupNode;\n+\n+                                                     public void startGroup(BugInstance member) {\n+                                                         String groupName;\n+                                                         if (groupBy == GROUP_BY_CLASS)\n+                                                             groupName = member.getPrimaryClass().getClassName();\n+                                                         else if (groupBy == GROUP_BY_PACKAGE) {\n+                                                             groupName = member.getPrimaryClass().getPackageName();\n+                                                             if (groupName.equals(\"\"))\n+                                                                 groupName = \"Unnamed package\";\n+                                                         } else if (groupBy == GROUP_BY_BUG_TYPE) {\n+                                                                  String desc = member.toString();\n+                                                                  String shortBugType = desc.substring(0, desc.indexOf(':'));\n+                                                                  String bugTypeDescription = I18N.instance().getBugTypeDescription(shortBugType);\n+                                                                  groupName = shortBugType + \": \" + bugTypeDescription;\n+                                                              } else if (groupBy == GROUP_BY_BUG_CATEGORY) {\n+                                                                    BugPattern pattern = member.getBugPattern();\n+                                                                    if (pattern == null) {\n+                                                                        if (FindBugs.DEBUG)\n+                                                                            System.out.println(\"Unknown bug pattern \" + member.getType());\n+                                                                        groupName = \"Unknown category\";\n+                                                                    } else {\n+                                                                        groupName = I18N.instance().getBugCategoryDescription(pattern.getCategory());\n+                                                                    }\n+                                                                } else\n+                                                                      throw new IllegalStateException(\"Unknown sort order: \" + groupBy);\n+                                                         currentGroup = new BugInstanceGroup(groupBy, groupName);\n+                                                         currentGroupNode = new DefaultMutableTreeNode(currentGroup);\n+                                                         bugTreeModel.insertNodeInto(currentGroupNode, bugRootNode, bugRootNode.getChildCount());\n+                                                         insertIntoGroup(member);\n+                                                     }\n+\n+                                                     public void addToGroup(BugInstance member) {\n+                                                         insertIntoGroup(member);\n+                                                     }\n+\n+\n+                                                     private void insertIntoGroup(BugInstance member) {\n+                                                         int count = currentGroup.getMemberCount();\n+                                                         currentGroup.incrementMemberCount();\n+                                                         BugTreeNode bugNode = new BugTreeNode(member);\n+                                                         if (BUG_COUNT)\n+                                                             bugNode.setCount(count);\n+                                                         bugTreeModel.insertNodeInto(bugNode, currentGroupNode, currentGroupNode.getChildCount());\n \n                 // Insert annotations\n-                Iterator<BugAnnotation> j = member.annotationIterator();\n-                while (j.hasNext()) {\n-                    BugAnnotation annotation = j.next();\n-                    DefaultMutableTreeNode annotationNode = new DefaultMutableTreeNode(annotation);\n-                    bugTreeModel.insertNodeInto(annotationNode, bugNode, bugNode.getChildCount());\n-                }\n-\n-            }\n-        };\n+                                                         Iterator<BugAnnotation> j = member.annotationIterator();\n+                                                         while (j.hasNext()) {\n+                                                             BugAnnotation annotation = j.next();\n+                                                             DefaultMutableTreeNode annotationNode = new DefaultMutableTreeNode(annotation);\n+                                                             bugTreeModel.insertNodeInto(annotationNode, bugNode, bugNode.getChildCount());\n+                                                         }\n+                                                     }\n+                                      };\n \n         // Create the grouper, and execute it to populate the bug tree\n         Grouper<BugInstance> grouper = new Grouper<BugInstance>(callback);\n@@ -3072,6 +2970,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Get a BugInstance Comparator for given sort order.\n      */\n+\n+\n     private Comparator<BugInstance> getBugInstanceComparator(String sortOrder) {\n         if (sortOrder.equals(GROUP_BY_CLASS))\n             return bugInstanceByClassComparator;\n@@ -3079,8 +2979,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             return bugInstanceByPackageComparator;\n         else if (sortOrder.equals(GROUP_BY_BUG_TYPE))\n             return bugInstanceByTypeComparator;\n-                else if (sortOrder.equals(GROUP_BY_BUG_CATEGORY))\n-                        return bugInstanceByCategoryComparator;\n+        else if (sortOrder.equals(GROUP_BY_BUG_CATEGORY))\n+            return bugInstanceByCategoryComparator;\n         else\n             throw new IllegalArgumentException(\"Bad sort order: \" + sortOrder);\n     }\n@@ -3088,34 +2988,36 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Get a Grouper for a given sort order.\n      */\n+\n+\n     private Comparator<BugInstance> getGroupComparator(String groupBy) {\n         if (groupBy.equals(GROUP_BY_CLASS)) {\n             return bugInstanceClassComparator;\n         } else if (groupBy.equals(GROUP_BY_PACKAGE)) {\n             return bugInstancePackageComparator;\n         } else if (groupBy.equals(GROUP_BY_BUG_TYPE)) {\n-            return bugInstanceTypeComparator;\n-        } else if (groupBy.equals(GROUP_BY_BUG_CATEGORY)) {\n-            return bugInstanceCategoryComparator;\n-        } else\n-            throw new IllegalArgumentException(\"Bad sort order: \" + groupBy);\n+                   return bugInstanceTypeComparator;\n+               } else if (groupBy.equals(GROUP_BY_BUG_CATEGORY)) {\n+                   return bugInstanceCategoryComparator;\n+               } else\n+                     throw new IllegalArgumentException(\"Bad sort order: \" + groupBy);\n     }\n \n     /**\n      * Set the view panel to display the named view.\n      */\n+\n+\n     private void setView(String viewName) {\n         //System.out.println(\"Showing view \" + viewName);\n         viewPanelLayout.show(viewPanel, viewName);\n         boolean viewingBugs = viewName.equals(\"BugTree\");\n         if (viewingBugs)\n             checkBugDetailsVisibility();\n-\n         viewProjectItem.setSelected(!viewingBugs);\n         if (viewingBugs)\n             viewBugsItem.setEnabled(true);\n         viewBugsItem.setSelected(viewingBugs);\n-\n         currentView = viewName;\n         ableEditMenu();\n     }\n@@ -3123,6 +3025,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Get which view is displayed currently.\n      */\n+\n+\n     private String getView() {\n         return currentView;\n     }\n@@ -3131,6 +3035,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * Called to add the jar file in the jarNameTextField to the\n      * Jar file list (and the project it represents).\n      */\n+\n+\n     private void addJarToList() {\n         String dirs = jarNameTextField.getText();\n         String[] jarDirs = parsePaths(dirs);\n@@ -3147,6 +3053,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      *\n      * @param srcFile the jar file to add to the project\n      */\n+\n+\n     private void addSrcToProject(String srcFile) {\n         Project project = getCurrentProject();\n         if (project.addSourceDir(srcFile)) {\n@@ -3160,6 +3068,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      *\n      * @param jarFile the jar file to add to the project\n      */\n+\n+\n     private void addJarToProject(String jarFile) {\n         Project project = getCurrentProject();\n         if (project.addFile(jarFile)) {\n@@ -3174,6 +3084,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * @param path the classpath\n      * @return an array of paths\n      */\n+\n+\n     private String[] parsePaths(String paths) {\n         return paths.split(SystemProperties.getProperty(\"path.separator\"));\n     }\n@@ -3182,6 +3094,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * Called to add the source directory in the sourceDirTextField\n      * to the source directory list (and the project it represents).\n      */\n+\n+\n     private void addSourceDirToList() {\n         String dirs = srcDirTextField.getText();\n         String[] sourceDirs = parsePaths(dirs);\n@@ -3201,6 +3115,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * Called to add the classpath entry in the classpathEntryTextField\n      * to the classpath entry list (and the project it represents).\n      */\n+\n+\n     private void addClasspathEntryToList() {\n         String dirs = classpathEntryTextField.getText();\n         String[] classDirs = parsePaths(dirs);\n@@ -3217,6 +3133,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      *\n      * @param classpathEntry the classpath entry to add\n      */\n+\n+\n     private void addClasspathEntryToProject(String classpathEntry) {\n         Project project = getCurrentProject();\n         if (project.addAuxClasspathEntry(classpathEntry)) {\n@@ -3229,6 +3147,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * Synchronize current bug instance with the bug detail\n      * window (source view, details window, etc.)\n      */\n+\n+\n     private void synchBugInstance() {\n         // Get current bug instance\n         BugInstance selected = getCurrentBugInstance();\n@@ -3259,7 +3179,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 srcLine = (SourceLineAnnotation) leaf;\n             else if (leaf instanceof BugAnnotationWithSourceLines)\n                 srcLine = ((BugAnnotationWithSourceLines) leaf).getSourceLines();\n-\n             if (srcLine == null)\n                 srcLine = selected.getPrimarySourceLineAnnotation();\n         }\n@@ -3268,8 +3187,10 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         if (srcLine == null || srcLine != currentSourceLineAnnotation) {\n             Project project = getCurrentProject();\n             AnalysisRun analysisRun = getCurrentAnalysisRun();\n-            if (project == null) throw new IllegalStateException(\"null project!\");\n-            if (analysisRun == null) throw new IllegalStateException(\"null analysis run!\");\n+            if (project == null)\n+                throw new IllegalStateException(\"null project!\");\n+            if (analysisRun == null)\n+                throw new IllegalStateException(\"null analysis run!\");\n             try {\n                 boolean success = viewSource(project, analysisRun, srcLine);\n                 sourceTextArea.setEnabled(success);\n@@ -3279,7 +3200,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 sourceTextArea.setText(\"Could not find source: \" + e.getMessage());\n                 logger.logMessage(Logger.WARNING, e.getMessage());\n             }\n-\n             currentSourceLineAnnotation = srcLine;\n         }\n \n@@ -3293,19 +3213,20 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         currentBugInstance = selected;\n     }\n \n+\n     private static final int SELECTION_VOFFSET = 2;\n \n     /**\n      * Update the source view window.\n      *\n-     * @param project\t the project (containing the source directories to search)\n+     * @param project    the project (containing the source directories to search)\n      * @param analysisRun the analysis run (containing the mapping of classes to source files)\n-     * @param srcLine\t the source line annotation (specifying source file to load and\n-     *\t\t\t\t\twhich lines to highlight)\n+     * @param srcLine    the source line annotation (specifying source file to load and\n+     *                  which lines to highlight)\n      * @return true if the source was shown successfully, false otherwise\n      */\n-    private boolean viewSource(Project project, AnalysisRun analysisRun, final SourceLineAnnotation srcLine)\n-    throws IOException {\n+\n+    private boolean viewSource(Project project, AnalysisRun analysisRun, final SourceLineAnnotation srcLine) throws IOException {\n         // Get rid of old source code text\n         sourceTextArea.setText(\"\");\n \n@@ -3315,7 +3236,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         // they might want to recompile with debugging info turned on.\n         if (srcLine == null)\n             return false;\n-\n         SourceFinder sourceFinder = project.getSourceFinder();\n \n         // Look up the source file for this class.\n@@ -3329,9 +3249,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             logger.logMessage(Logger.WARNING, \"No source file for class \" + srcLine.getClassName());\n             return false;\n         }\n-\n         BufferedReader reader = null;\n-\n         try {\n             reader = new BufferedReader(new InputStreamReader(in));\n             sourceTextArea.read(reader, sourceFile); // 2nd arg is mostly ignored\n@@ -3339,7 +3257,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             if (reader != null)\n                 reader.close();\n         }\n-\n         if (srcLine.isUnknown()) {\n             // No line number information, so can't highlight anything\n \n@@ -3394,7 +3311,6 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 }\n             }\n         });\n-\n         return true;\n     }\n \n@@ -3403,6 +3319,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      *\n      * @param bugInstance the bug instance\n      */\n+\n+\n     private void showBugInfo(BugInstance bugInstance) {\n         // Are we already showing details for this kind of bug?\n         String bugDetailsKey = bugInstance.getType();\n@@ -3421,7 +3339,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n         // An immediate inline call to set the scroll position does nothing.\n         // So, use invokeLater(), even though this results in flashing.\n         // [What we really need is a way to set the text WITHOUT changing\n-        // the caret position.\tNeed to investigate.]\n+        // the caret position.  Need to investigate.]\n         SwingUtilities.invokeLater(new Runnable() {\n             public void run() {\n                 bugDescriptionScrollPane.getViewport().setViewPosition(new Point(0, 0));\n@@ -3445,6 +3363,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      *\n      * @param selected the new BugInstance\n      */\n+\n+\n     private void synchBugAnnotation(BugInstance selected) {\n         if (currentBugInstance != null) {\n             String text = annotationTextArea.getText();\n@@ -3457,7 +3377,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n \n         //annotationTextArea.setText(selected.getAnnotationText());\n         String userAnnotation = selected.getAnnotationText();\n-        if (userAnnotation==null || userAnnotation.length()==0) {\n+        if (userAnnotation == null || userAnnotation.length() == 0) {\n             // this is the common case, so might as well optimize it\n             annotationTextArea.setText(\"\");\n             return;\n@@ -3480,29 +3400,26 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      *\n      * @param checkBox the bug category checkbox\n      */\n+\n+\n     private void toggleBugCategory(JCheckBoxMenuItem checkBox) {\n         int index = 0;\n-\n         while (index < bugCategoryCheckBoxList.length) {\n             if (bugCategoryCheckBoxList[index] == checkBox)\n                 break;\n             ++index;\n         }\n-\n         if (index == bugCategoryCheckBoxList.length) {\n             error(\"Could not find bug category checkbox\");\n             return;\n         }\n-\n         boolean selected = checkBox.isSelected();\n         String bugCategory = bugCategoryList[index];\n-\n         if (selected) {\n             getFilterSettings().addCategory(bugCategory);\n         } else {\n             getFilterSettings().removeCategory(bugCategory);\n         }\n-\n         if (currentAnalysisRun != null) {\n             synchAnalysisRun(currentAnalysisRun);\n         }\n@@ -3515,6 +3432,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Show About\n      */\n+\n     void about() {\n         AboutDialog dialog = new AboutDialog(this, logger, true);\n         dialog.setSize(600, 554);\n@@ -3525,10 +3443,11 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Exit the application.\n      */\n+\n     @SuppressWarnings(\"DM_EXIT\")\n     void exitFindBugs() {\n         // TODO: offer to save work, etc.\n-//\t\tUserPreferences.getUserPreferences().storeUserDetectorPreferences();\n+//      UserPreferences.getUserPreferences().storeUserDetectorPreferences();\n         UserPreferences.getUserPreferences().write();\n         System.exit(0);\n     }\n@@ -3539,6 +3458,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      *\n      * @return the file chooser\n      */\n+\n+\n     private JFileChooser createFileChooser() {\n         return new JFileChooser(currentDirectory);\n     }\n@@ -3550,6 +3471,8 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * @param extraComp The extra component to append to the dialog\n      * @return the file chooser\n      */\n+\n+\n     private JFileChooser createFileChooser(final JComponent extraComp) {\n         return new JFileChooser(currentDirectory) {\n             private static final long serialVersionUID = 1L;\n@@ -3569,10 +3492,12 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * Run a file chooser dialog.\n      * If a file is chosen, then the current directory is updated.\n      *\n-     * @param dialog\t  the file chooser dialog\n+     * @param dialog      the file chooser dialog\n      * @param dialogTitle the dialog title\n      * @return the outcome\n      */\n+\n+\n     private int chooseFile(JFileChooser dialog, String dialogTitle) {\n         int outcome = dialog.showDialog(this, dialogTitle);\n         return updateCurrentDirectoryFromDialog(dialog, outcome);\n@@ -3585,11 +3510,14 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * @param dialog the file chooser dialog\n      * @return the outcome\n      */\n+\n+\n     private int chooseFileToOpen(JFileChooser dialog) {\n         int outcome = dialog.showOpenDialog(this);\n         return updateCurrentDirectoryFromDialog(dialog, outcome);\n     }\n \n+\n     private int updateCurrentDirectoryFromDialog(JFileChooser dialog, int outcome) {\n         if (outcome != JFileChooser.CANCEL_OPTION) {\n             File selectedFile = dialog.getSelectedFile();\n@@ -3601,6 +3529,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Get the Logger.\n      */\n+\n     public Logger getLogger() {\n         return logger;\n     }\n@@ -3608,6 +3537,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Show an error dialog.\n      */\n+\n     public void error(String message) {\n         JOptionPane.showMessageDialog(this, message, \"Error\", JOptionPane.ERROR_MESSAGE);\n     }\n@@ -3617,9 +3547,10 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      *\n      * @param message the message to write\n      */\n+\n     public void writeToLog(String message) {\n-//\t\tconsoleMessageArea.append(message);\n-//\t\tconsoleMessageArea.append(\"\\n\");\n+//      consoleMessageArea.append(message);\n+//      consoleMessageArea.append(\"\\n\");\n     }\n \n     /**\n@@ -3627,10 +3558,10 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * Double clicking a directory causes a repeated name, for some reason\n      * such as a:\\b\\c\\c when a:\\b\\c was chosen\n      */\n+\n     public File verifyFileSelection(File pickedFile) {\n         if (pickedFile.exists())\n             return pickedFile;\n-\n         File parent = pickedFile.getParentFile();\n         if ((parent != null) && parent.getName().equals(pickedFile.getName()))\n             return parent;\n@@ -3642,6 +3573,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Get the current ProjectFilterSettings.\n      */\n+\n     public ProjectFilterSettings getFilterSettings() {\n         return UserPreferences.getUserPreferences().getFilterSettings();\n     }\n@@ -3649,6 +3581,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n     /**\n      * Get the current priority threshold.\n      */\n+\n     public int getPriorityThreshold() {\n         return getFilterSettings().getMinPriorityAsInt();\n     }\n@@ -3658,6 +3591,7 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      *\n      * @return list of AnalysisFeatureSettings\n      */\n+\n     public AnalysisFeatureSetting[] getSettingList() {\n         return settingList;\n     }\n@@ -3666,14 +3600,16 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * main() method\n      * ---------------------------------------------------------------------- */\n \n+\n     private static class SwingCommandLine extends FindBugsCommandLine {\n+\n         public SwingCommandLine() {\n             addSwitch(\"-debug\", \"enable debug output\");\n             addSwitchWithOptionalExtraPart(\"-look\", \"plastic|gtk|native\", \"set look and feel\");\n             addOption(\"-project\", \"project file\", \"load given project\");\n-            addOption(\"-priority\", \"thread priority\",\n-                      \"set analysis thread's priority level (default is \" +\n-                      (Thread.NORM_PRIORITY-1) + \")\");\n+            addOption(\"-priority\",\n+                                          \"thread priority\",\n+                                          \"set analysis thread's priority level (default is \" + (Thread.NORM_PRIORITY - 1) + \")\");\n             addOption(\"-loadbugs\", \"bugs xml filename\", \"load given bugs xml file\");\n         }\n \n@@ -3685,12 +3621,15 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n \n         // Thread priority for the analysis thread.  The default is\n         // just below the priority of the GUI\n-        private int priority = Thread.NORM_PRIORITY-1;\n+\n+\n+        private int priority = Thread.NORM_PRIORITY - 1;\n \n         /**\n          * Retrieve thread priority for the analysis thread.\n          * @return thread priority for the analysis thread\n          */\n+\n         public int getPriority() {\n             return priority;\n         }\n@@ -3702,28 +3641,25 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n                 System.setProperty(\"findbugs.debug\", \"true\");\n             } else if (option.equals(\"-look\")) {\n                 String arg = optionExtraPart;\n-\n                 String theme = null;\n                 if (arg.equals(\"plastic\")) {\n                     // You can get the Plastic look and feel from jgoodies.com:\n-                    //\thttp://www.jgoodies.com/downloads/libraries.html\n+                    //  http://www.jgoodies.com/downloads/libraries.html\n                     // Just put \"plastic.jar\" in the lib directory, right next\n                     // to the other jar files.\n                     theme = \"com.jgoodies.plaf.plastic.PlasticXPLookAndFeel\";\n                 } else if (arg.equals(\"gtk\")) {\n                     theme = \"com.sun.java.swing.plaf.gtk.GTKLookAndFeel\";\n                 } else if (arg.equals(\"native\")) {\n-                    theme = UIManager.getSystemLookAndFeelClassName();\n-                } else {\n-                    System.err.println(\"Style '\" + arg + \"' not supported\");\n-                }\n-\n+                           theme = UIManager.getSystemLookAndFeelClassName();\n+                       } else {\n+                           System.err.println(\"Style '\" + arg + \"' not supported\");\n+                       }\n                 if (theme != null) {\n                     try {\n                         UIManager.setLookAndFeel(theme);\n                     } catch (Exception e) {\n-                        System.err.println(\"Couldn't load \" + arg +\n-                                \" look and feel: \" + e.toString());\n+                        System.err.println(\"Couldn't load \" + arg + \" look and feel: \" + e.toString());\n                     }\n                 }\n             } else {\n@@ -3731,19 +3667,18 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             }\n         }\n \n-\n         @Override\n         protected void handleOptionWithArgument(String option, String argument) throws IOException {\n             if (option.equals(\"-loadbugs\")) {\n                 bugsFilename = argument;\n             } else if (option.equals(\"-priority\")) {\n-                int num;\n-                try {\n-                    num = Integer.parseInt(argument);\n-                } catch(NumberFormatException e) {\n-                    num = Thread.NORM_PRIORITY-1;\n-                }\n-                priority = num;\n+                  int num;\n+                  try {\n+                      num = Integer.parseInt(argument);\n+                  } catch (NumberFormatException e) {\n+                      num = Thread.NORM_PRIORITY - 1;\n+                  }\n+                  priority = num;\n             } else {\n                 super.handleOptionWithArgument(option, argument);\n             }\n@@ -3756,9 +3691,9 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * @param args the command line arguments\n      * @throws IOException\n      */\n+\n     public static void main(String args[]) throws IOException {\n         Project project = null;\n-\n         SwingCommandLine commandLine = new SwingCommandLine();\n         try {\n             commandLine.parse(args);\n@@ -3774,25 +3709,22 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             showCommandLineOptions();\n             System.exit(1);\n         }\n-\n         if (commandLine.getProject().getFileCount() > 0) {\n             project = commandLine.getProject();\n         }\n \n-        //\t  Uncomment one of these to test I18N\n-        //\t\tLocale.setDefault( Locale.FRENCH );\n-        //\t\tLocale.setDefault( Locale.GERMAN );\n-        //\t\tLocale.setDefault( Locale.JAPANESE );\n-        //\t\tLocale.setDefault( new Locale( \"et\" ));\n-        //\t\tLocale.setDefault( new Locale( \"fi\" ));\n-        //\t\tLocale.setDefault( new Locale( \"es\" ));\n-        //\t\tLocale.setDefault( new Locale( \"pl\" ));\n+        //    Uncomment one of these to test I18N\n+        //      Locale.setDefault( Locale.FRENCH );\n+        //      Locale.setDefault( Locale.GERMAN );\n+        //      Locale.setDefault( Locale.JAPANESE );\n+        //      Locale.setDefault( new Locale( \"et\" ));\n+        //      Locale.setDefault( new Locale( \"fi\" ));\n+        //      Locale.setDefault( new Locale( \"es\" ));\n+        //      Locale.setDefault( new Locale( \"pl\" ));\n \n         // Load plugins!\n         DetectorFactoryCollection.instance();\n-\n         FindBugsFrame frame = new FindBugsFrame();\n-\n         if (project != null) {\n             frame.setProject(project);\n         } else if (commandLine.getBugsFilename().length() > 0) {\n@@ -3804,30 +3736,28 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n             }\n         } else if (SystemProperties.getProperty(\"findbugs.loadBugsFromURL\") != null) {\n             // Allow JNLP launch to specify the URL of a report to load\n-            try {\n-                String urlspec = SystemProperties.getProperty(\"findbugs.loadBugsFromURL\");\n-                frame.loadBugsFromURL(urlspec);\n-            } catch (Exception e) {\n-                System.err.println(\"Error: \" + e.getMessage());\n-            }\n-        }\n-\n+                   try {\n+                       String urlspec = SystemProperties.getProperty(\"findbugs.loadBugsFromURL\");\n+                       frame.loadBugsFromURL(urlspec);\n+                   } catch (Exception e) {\n+                       System.err.println(\"Error: \" + e.getMessage());\n+                   }\n+               }\n         frame.setPriority(commandLine.getPriority());\n-\n         if (commandLine.getSettingList() != null) {\n             frame.settingList = commandLine.getSettingList();\n-            if (Arrays.equals(frame.settingList,FindBugs.MIN_EFFORT))\n+            if (Arrays.equals(frame.settingList, FindBugs.MIN_EFFORT))\n                 frame.minEffortItem.setSelected(true);\n             else if (Arrays.equals(frame.settingList, FindBugs.MAX_EFFORT))\n                 frame.maxEffortItem.setSelected(true);\n         }\n-\n         frame.setSize(800, 600);\n         frame.setLocationRelativeTo(null); // center the frame\n         frame.setVisible(true);\n     }\n \n-    private int analysisPriority = Thread.NORM_PRIORITY-1;\n+\n+    private int analysisPriority = Thread.NORM_PRIORITY - 1;\n \n     public void setPriority(int priority) {\n         this.analysisPriority = priority;\n@@ -3847,135 +3777,256 @@ public final class  FindBugsFrame extends javax.swing.JFrame implements LogSync\n      * ---------------------------------------------------------------------- */\n \n     // Variables declaration - do not modify//GEN-BEGIN:variables\n+\n+\n     private javax.swing.JMenuItem aboutItem;\n+\n     private javax.swing.JButton addClasspathEntryButton;\n+\n     private javax.swing.JButton addJarButton;\n+\n     private javax.swing.JButton addSourceDirButton;\n+\n     private javax.swing.JTextArea annotationTextArea;\n+\n     private javax.swing.JScrollPane annotationTextAreaScrollPane;\n+\n     private javax.swing.JButton browseClasspathEntryButton;\n+\n     private javax.swing.JButton browseJarButton;\n+\n     private javax.swing.JButton browseSrcDirButton;\n+\n     private javax.swing.JEditorPane bugDescriptionEditorPane;\n+\n     private javax.swing.JScrollPane bugDescriptionScrollPane;\n+\n     private javax.swing.JTabbedPane bugDetailsTabbedPane;\n+\n     private javax.swing.JEditorPane bugSummaryEditorPane;\n+\n     private javax.swing.JSplitPane bugTreeBugDetailsSplitter;\n+\n     private javax.swing.JPanel bugTreePanel;\n+\n     private javax.swing.JTree byBugCategoryBugTree;\n+\n     private javax.swing.JScrollPane byBugCategoryScrollPane;\n+\n     private javax.swing.JTree byBugTypeBugTree;\n+\n     private javax.swing.JScrollPane byBugTypeScrollPane;\n+\n     private javax.swing.JTree byClassBugTree;\n+\n     private javax.swing.JScrollPane byClassScrollPane;\n+\n     private javax.swing.JTree byPackageBugTree;\n+\n     private javax.swing.JScrollPane byPackageScrollPane;\n+\n     private javax.swing.JScrollPane bySummary;\n+\n     private javax.swing.JButton classpathDownButton;\n+\n     private javax.swing.JLabel classpathEntryLabel;\n+\n     private javax.swing.JList classpathEntryList;\n+\n     private javax.swing.JLabel classpathEntryListLabel;\n+\n     private javax.swing.JScrollPane classpathEntryListScrollPane;\n+\n     private javax.swing.JTextField classpathEntryTextField;\n+\n     private javax.swing.JButton classpathUpButton;\n+\n     private javax.swing.JMenuItem closeProjectItem;\n+\n     private javax.swing.JMenuItem configureDetectorsItem;\n+\n     private javax.swing.JMenuItem copyItem;\n+\n     private javax.swing.JMenuItem cutItem;\n+\n     private javax.swing.JMenu editMenu;\n+\n     private javax.swing.JLabel editProjectLabel;\n+\n     private javax.swing.JPanel editProjectPanel;\n+\n     private javax.swing.ButtonGroup effortButtonGroup;\n+\n     private javax.swing.JMenu effortMenu;\n+\n     private javax.swing.JPanel emptyPanel;\n+\n     private javax.swing.JMenuItem exitItem;\n+\n     private javax.swing.JRadioButtonMenuItem expPriorityButton;\n+\n     private javax.swing.JMenu fileMenu;\n+\n     private javax.swing.JMenu filterWarningsMenu;\n+\n     private javax.swing.JButton findBugsButton;\n+\n     private javax.swing.JCheckBoxMenuItem fullDescriptionsItem;\n+\n     private javax.swing.JTabbedPane groupByTabbedPane;\n+\n     private javax.swing.JLabel growBoxSpacer;\n+\n     private javax.swing.JMenu helpMenu;\n+\n     private javax.swing.JRadioButtonMenuItem highPriorityButton;\n+\n     private javax.swing.JPanel jPanel1;\n+\n     private javax.swing.JSeparator jSeparator1;\n+\n     private javax.swing.JSeparator jSeparator10;\n+\n     private javax.swing.JSeparator jSeparator11;\n+\n     private javax.swing.JSeparator jSeparator2;\n+\n     private javax.swing.JSeparator jSeparator3;\n+\n     private javax.swing.JSeparator jSeparator4;\n+\n     private javax.swing.JSeparator jSeparator5;\n+\n     private javax.swing.JSeparator jSeparator6;\n+\n     private javax.swing.JSeparator jSeparator7;\n+\n     private javax.swing.JSeparator jSeparator8;\n+\n     private javax.swing.JSeparator jSeparator9;\n+\n     private javax.swing.JLabel jarFileLabel;\n+\n     private javax.swing.JList jarFileList;\n+\n     private javax.swing.JLabel jarFileListLabel;\n+\n     private javax.swing.JScrollPane jarFileListScrollPane;\n+\n     private javax.swing.JTextField jarNameTextField;\n+\n     private javax.swing.JMenuItem loadBugsItem;\n+\n     private javax.swing.JLabel logoLabel;\n+\n     private javax.swing.JRadioButtonMenuItem lowPriorityButton;\n+\n     private javax.swing.JCheckBoxMenuItem maxEffortItem;\n+\n     private javax.swing.JRadioButtonMenuItem mediumPriorityButton;\n+\n     private javax.swing.JCheckBoxMenuItem minEffortItem;\n+\n     private javax.swing.JMenuItem newProjectItem;\n+\n     private javax.swing.JCheckBoxMenuItem normalEffortItem;\n+\n     private javax.swing.JMenuItem openProjectItem;\n+\n     private javax.swing.JMenuItem pasteItem;\n+\n     private javax.swing.ButtonGroup priorityButtonGroup;\n+\n     private javax.swing.JMenu recentProjectsMenu;\n+\n     private javax.swing.JMenuItem reloadProjectItem;\n+\n     private javax.swing.JButton removeClasspathEntryButton;\n+\n     private javax.swing.JButton removeJarButton;\n+\n     private javax.swing.JButton removeSrcDirButton;\n+\n     private javax.swing.JPanel reportPanel;\n+\n     private javax.swing.JMenuItem saveBugsItem;\n+\n     private javax.swing.JMenuItem saveProjectAsItem;\n+\n     private javax.swing.JMenuItem saveProjectItem;\n+\n     private javax.swing.JMenuItem selectAllItem;\n+\n     private javax.swing.JMenu settingsMenu;\n+\n     private javax.swing.JLabel sourceDirLabel;\n+\n     private javax.swing.JList sourceDirList;\n+\n     private javax.swing.JLabel sourceDirListLabel;\n+\n     private javax.swing.JScrollPane sourceDirListScrollPane;\n+\n     private javax.swing.JButton sourceDownButton;\n+\n     private javax.swing.JTextArea sourceTextArea;\n+\n     private LineNumberer sourceLineNumberer;\n+\n     private javax.swing.JScrollPane sourceTextAreaScrollPane;\n+\n     private javax.swing.JButton sourceUpButton;\n+\n     private javax.swing.JTextField srcDirTextField;\n+\n     private javax.swing.JMenuBar theMenuBar;\n+\n     private javax.swing.JLabel urlLabel;\n+\n     private javax.swing.JCheckBoxMenuItem viewBugDetailsItem;\n+\n     private javax.swing.JRadioButtonMenuItem viewBugsItem;\n+\n     private javax.swing.JMenu viewMenu;\n+\n     private javax.swing.JPanel viewPanel;\n+\n     private javax.swing.JRadioButtonMenuItem viewProjectItem;\n     // End of variables declaration//GEN-END:variables\n \n     // My variable declarations\n+\n     private Logger logger;\n+\n     private CardLayout viewPanelLayout;\n+\n     private String currentView;\n+\n     private File currentDirectory;\n+\n     private Project currentProject;\n+\n     private JTree[] bugTreeList;\n+\n     private AnalysisRun currentAnalysisRun;\n+\n     private BugInstance currentBugInstance; // be lazy in switching bug instance details\n+\n     private SourceLineAnnotation currentSourceLineAnnotation; // as above\n+\n     private String currentBugDetailsKey;\n+\n     private JCheckBoxMenuItem[] bugCategoryCheckBoxList;\n+\n     private String[] bugCategoryList;\n+\n     private AnalysisFeatureSetting[] settingList = FindBugs.DEFAULT_EFFORT;\n \n     // My constant declarations\n+\n     private final static boolean MAC_OS_X = SystemProperties.getProperty(\"os.name\").toLowerCase().startsWith(\"mac os x\");\n \n     private static int getMenuMask() {\n         return Toolkit.getDefaultToolkit().getMenuShortcutKeyMask();\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1362
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "13",
                    "column": "56",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
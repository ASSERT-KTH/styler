{
    "project_name": "StevenLooman-sonar-magik",
    "error_id": "29",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "public class LhsRhsComparatorEqualCheck extends MagikCheck {\n\n  private static final String MESSAGE = \"Left hand side and right hand side of comparator are equal.\";\n  public static final String CHECK_KEY = \"LhsRhsComparatorEqual\";\n\n  @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/29/LhsRhsComparatorEqualCheck.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/29/LhsRhsComparatorEqualCheck.java\nindex ed536ff7144..367a6c06e11 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/29/LhsRhsComparatorEqualCheck.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/intellij/29/LhsRhsComparatorEqualCheck.java\n@@ -13,7 +13,8 @@ import java.util.List;\n @Rule(key = LhsRhsComparatorEqualCheck.CHECK_KEY)\n public class LhsRhsComparatorEqualCheck extends MagikCheck {\n \n-  private static final String MESSAGE = \"Left hand side and right hand side of comparator are equal.\";\n+  private static final String MESSAGE =\n+      \"Left hand side and right hand side of comparator are equal.\";\n   public static final String CHECK_KEY = \"LhsRhsComparatorEqual\";\n \n   @Override\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/29/LhsRhsComparatorEqualCheck.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/29/LhsRhsComparatorEqualCheck.java\nindex ed536ff7144..88b95c19eb9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/29/LhsRhsComparatorEqualCheck.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/naturalize/29/LhsRhsComparatorEqualCheck.java\n@@ -35,4 +35,4 @@ public class LhsRhsComparatorEqualCheck extends MagikCheck {\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/29/LhsRhsComparatorEqualCheck.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/29/LhsRhsComparatorEqualCheck.java\nindex ed536ff7144..d1f00664af9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/errored/1/29/LhsRhsComparatorEqualCheck.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/StevenLooman-sonar-magik/codebuff/29/LhsRhsComparatorEqualCheck.java\n@@ -6,7 +6,6 @@ import org.sonar.check.Rule;\n import org.stevenlooman.sw.magik.MagikCheck;\n import org.stevenlooman.sw.magik.analysis.AstCompare;\n import org.stevenlooman.sw.magik.api.MagikGrammar;\n-\n import java.util.Arrays;\n import java.util.List;\n \n@@ -19,11 +18,11 @@ public class LhsRhsComparatorEqualCheck extends MagikCheck {\n   @Override\n   public List<AstNodeType> subscribedTo() {\n     return Arrays.asList(\n-        MagikGrammar.OR_EXPRESSION,\n-        MagikGrammar.XOR_EXPRESSION,\n-        MagikGrammar.AND_EXPRESSION,\n-        MagikGrammar.EQUALITY_EXPRESSION,\n-        MagikGrammar.RELATIONAL_EXPRESSION);\n+                    MagikGrammar.OR_EXPRESSION,\n+                    MagikGrammar.XOR_EXPRESSION,\n+                    MagikGrammar.AND_EXPRESSION,\n+                    MagikGrammar.EQUALITY_EXPRESSION,\n+                    MagikGrammar.RELATIONAL_EXPRESSION);\n   }\n \n   @Override\n@@ -34,5 +33,4 @@ public class LhsRhsComparatorEqualCheck extends MagikCheck {\n       addIssue(MESSAGE, node);\n     }\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3996",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3996/ParameterMissingAnnotationError.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3996/ParameterMissingAnnotationError.java\nindex 4df9caabf87..4478d2d5543 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3996/ParameterMissingAnnotationError.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3996/ParameterMissingAnnotationError.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.tooling.procedure.messages;\n \n import javax.lang.model.element.AnnotationMirror;\n@@ -24,33 +25,33 @@ import javax.lang.model.element.Element;\n \n public class ParameterMissingAnnotationError implements CompilationMessage\n {\n-    private final Element element;\n-    private final AnnotationMirror mirror;\n-    private final String errorMessage;\n+  private final Element element;\n+  private final AnnotationMirror mirror;\n+  private final String errorMessage;\n \n-    public ParameterMissingAnnotationError( Element element, AnnotationMirror mirror, String errorMessage,\n-            Object... args )\n-    {\n-        this.element = element;\n-        this.mirror = mirror;\n-        this.errorMessage = String.format( errorMessage, args );\n-    }\n+  public ParameterMissingAnnotationError(Element element, AnnotationMirror mirror, String errorMessage,\n+                                         Object... args)\n+  {\n+    this.element = element;\n+    this.mirror = mirror;\n+    this.errorMessage = String.format(errorMessage, args);\n+  }\n \n-    @Override\n-    public Element getElement()\n-    {\n-        return element;\n-    }\n+  @Override\n+  public Element getElement()\n+  {\n+    return element;\n+  }\n \n-    @Override\n-    public AnnotationMirror getMirror()\n-    {\n-        return mirror;\n-    }\n+  @Override\n+  public AnnotationMirror getMirror()\n+  {\n+    return mirror;\n+  }\n \n-    @Override\n-    public String getContents()\n-    {\n-        return errorMessage;\n-    }\n+  @Override\n+  public String getContents()\n+  {\n+    return errorMessage;\n+  }\n }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3996/ParameterMissingAnnotationError.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3996/ParameterMissingAnnotationError.java\nindex 4df9caabf87..efa77d913f0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3996/ParameterMissingAnnotationError.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3996/ParameterMissingAnnotationError.java\n@@ -53,4 +53,4 @@ public class ParameterMissingAnnotationError implements CompilationMessage\n     {\n         return errorMessage;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
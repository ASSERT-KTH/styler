{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4465",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "78",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "131",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "285",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "301",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "357",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "361",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "364",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "371",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "392",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "394",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "402",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "405",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "405",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "411",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "433",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "443",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "448",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "453",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "453",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "468",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4465/SlaveLocksClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4465/SlaveLocksClient.java\nindex 113fc90f1a3..566371b6ad7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4465/SlaveLocksClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4465/SlaveLocksClient.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.lock;\n \n import java.util.Arrays;\n@@ -63,427 +64,416 @@ import static org.neo4j.kernel.impl.locking.LockType.WRITE;\n  */\n class SlaveLocksClient implements Locks.Client\n {\n-    private final Master master;\n-    private final Locks.Client client;\n-    private final Locks localLockManager;\n-    private final RequestContextFactory requestContextFactory;\n-    private final AvailabilityGuard availabilityGuard;\n-\n-    // Using atomic ints to avoid creating garbage through boxing.\n-    private final Log log;\n-    private boolean initialized;\n-    private volatile boolean stopped;\n-\n-    SlaveLocksClient( Master master, Locks.Client local, Locks localLockManager,\n-            RequestContextFactory requestContextFactory, AvailabilityGuard availabilityGuard, LogProvider logProvider )\n-    {\n-        this.master = master;\n-        this.client = local;\n-        this.localLockManager = localLockManager;\n-        this.requestContextFactory = requestContextFactory;\n-        this.availabilityGuard = availabilityGuard;\n-        this.log = logProvider.getLog( getClass() );\n-    }\n-\n-    @Override\n-    public void acquireShared( LockTracer tracer, ResourceType resourceType, long... resourceIds ) throws AcquireLockTimeoutException\n-    {\n-        assertNotStopped();\n-\n-        long[] newResourceIds = firstTimeSharedLocks( resourceType, resourceIds );\n-        if ( newResourceIds.length > 0 )\n+  private final Master master;\n+  private final Locks.Client client;\n+  private final Locks localLockManager;\n+  private final RequestContextFactory requestContextFactory;\n+  private final AvailabilityGuard availabilityGuard;\n+\n+  // Using atomic ints to avoid creating garbage through boxing.\n+  private final Log log;\n+  private boolean initialized;\n+  private volatile boolean stopped;\n+\n+  SlaveLocksClient(Master master, Locks.Client local, Locks localLockManager,\n+                   RequestContextFactory requestContextFactory, AvailabilityGuard availabilityGuard, LogProvider logProvider)\n+  {\n+    this.master = master;\n+    this.client = local;\n+    this.localLockManager = localLockManager;\n+    this.requestContextFactory = requestContextFactory;\n+    this.availabilityGuard = availabilityGuard;\n+    this.log = logProvider.getLog(getClass());\n+  }\n+\n+  @Override\n+  public void acquireShared(LockTracer tracer, ResourceType resourceType, long... resourceIds) throws AcquireLockTimeoutException\n+  {\n+    assertNotStopped();\n+\n+    long[] newResourceIds = firstTimeSharedLocks(resourceType, resourceIds);\n+    if (newResourceIds.length > 0)\n+    {\n+      try\n+      {\n+        acquireSharedOnMasterFiltered(tracer, resourceType, newResourceIds);\n+      } catch (Throwable failure)\n+      {\n+        if (resourceIds != newResourceIds)\n         {\n-            try\n-            {\n-                acquireSharedOnMasterFiltered( tracer, resourceType, newResourceIds );\n-            }\n-            catch ( Throwable failure )\n-            {\n-                if ( resourceIds != newResourceIds )\n-                {\n-                    releaseShared( resourceType, resourceIds, newResourceIds );\n-                }\n-                throw failure;\n-            }\n-            for ( long resourceId : newResourceIds )\n-            {\n-                if ( !client.trySharedLock( resourceType, resourceId ) )\n-                {\n-                    throw new LocalDeadlockDetectedException(\n-                            client, localLockManager, resourceType, resourceId, READ );\n-                }\n-            }\n+          releaseShared(resourceType, resourceIds, newResourceIds);\n         }\n-    }\n-\n-    @Override\n-    public void acquireExclusive( LockTracer tracer, ResourceType resourceType, long... resourceIds ) throws\n-            AcquireLockTimeoutException\n-    {\n-        assertNotStopped();\n-\n-        long[] newResourceIds = firstTimeExclusiveLocks( resourceType, resourceIds );\n-        if ( newResourceIds.length > 0 )\n+        throw failure;\n+      }\n+      for (long resourceId : newResourceIds)\n+      {\n+        if (!client.trySharedLock(resourceType, resourceId))\n         {\n-            try ( LockWaitEvent event = tracer.waitForLock( true, resourceType, newResourceIds ) )\n-            {\n-                acquireExclusiveOnMaster( resourceType, newResourceIds );\n-            }\n-            catch ( Throwable failure )\n-            {\n-                if ( resourceIds != newResourceIds )\n-                {\n-                    releaseExclusive( resourceType, resourceIds, newResourceIds );\n-                }\n-                throw failure;\n-            }\n-            for ( long resourceId : newResourceIds )\n-            {\n-                if ( !client.tryExclusiveLock( resourceType, resourceId ) )\n-                {\n-                    throw new LocalDeadlockDetectedException(\n-                            client, localLockManager, resourceType, resourceId, WRITE );\n-                }\n-            }\n+          throw new LocalDeadlockDetectedException(\n+              client, localLockManager, resourceType, resourceId, READ);\n         }\n+      }\n     }\n+  }\n \n-    @Override\n-    public boolean tryExclusiveLock( ResourceType resourceType, long resourceId )\n-    {\n-        throw newUnsupportedDirectTryLockUsageException();\n-    }\n-\n-    @Override\n-    public boolean trySharedLock( ResourceType resourceType, long resourceId )\n-    {\n-        throw newUnsupportedDirectTryLockUsageException();\n-    }\n-\n-    @Override\n-    public boolean reEnterShared( ResourceType resourceType, long resourceId )\n-    {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public boolean reEnterExclusive( ResourceType resourceType, long resourceId )\n-    {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public void releaseShared( ResourceType resourceType, long... resourceIds )\n-    {\n-        assertNotStopped();\n-\n-        client.releaseShared( resourceType, resourceIds );\n-    }\n-\n-    @Override\n-    public void releaseExclusive( ResourceType resourceType, long... resourceIds )\n-    {\n-        assertNotStopped();\n-\n-        client.releaseExclusive( resourceType, resourceIds );\n-    }\n-\n-    @Override\n-    public void prepare()\n-    {\n-        client.prepare();\n-    }\n+  @Override\n+  public void acquireExclusive(LockTracer tracer, ResourceType resourceType, long... resourceIds) throws\n+      AcquireLockTimeoutException\n+  {\n+    assertNotStopped();\n \n-    @Override\n-    public void stop()\n+    long[] newResourceIds = firstTimeExclusiveLocks(resourceType, resourceIds);\n+    if (newResourceIds.length > 0)\n     {\n-        client.stop();\n-        stopLockSessionOnMaster();\n-        stopped = true;\n-    }\n-\n-    @Override\n-    public void close()\n-    {\n-        client.close();\n-        if ( initialized )\n+      try (LockWaitEvent event = tracer.waitForLock(true, resourceType, newResourceIds))\n+      {\n+        acquireExclusiveOnMaster(resourceType, newResourceIds);\n+      } catch (Throwable failure)\n+      {\n+        if (resourceIds != newResourceIds)\n         {\n-            if ( !stopped )\n-            {\n-                closeLockSessionOnMaster();\n-                stopped = true;\n-            }\n-            initialized = false;\n+          releaseExclusive(resourceType, resourceIds, newResourceIds);\n         }\n-    }\n+        throw failure;\n+      }\n+      for (long resourceId : newResourceIds)\n+      {\n+        if (!client.tryExclusiveLock(resourceType, resourceId))\n+        {\n+          throw new LocalDeadlockDetectedException(\n+              client, localLockManager, resourceType, resourceId, WRITE);\n+        }\n+      }\n+    }\n+  }\n+\n+  @Override\n+  public boolean tryExclusiveLock(ResourceType resourceType, long resourceId)\n+  {\n+    throw newUnsupportedDirectTryLockUsageException();\n+  }\n+\n+  @Override\n+  public boolean trySharedLock(ResourceType resourceType, long resourceId)\n+  {\n+    throw newUnsupportedDirectTryLockUsageException();\n+  }\n+\n+  @Override\n+  public boolean reEnterShared(ResourceType resourceType, long resourceId)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public boolean reEnterExclusive(ResourceType resourceType, long resourceId)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public void releaseShared(ResourceType resourceType, long... resourceIds)\n+  {\n+    assertNotStopped();\n+\n+    client.releaseShared(resourceType, resourceIds);\n+  }\n+\n+  @Override\n+  public void releaseExclusive(ResourceType resourceType, long... resourceIds)\n+  {\n+    assertNotStopped();\n+\n+    client.releaseExclusive(resourceType, resourceIds);\n+  }\n+\n+  @Override\n+  public void prepare()\n+  {\n+    client.prepare();\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+    client.stop();\n+    stopLockSessionOnMaster();\n+    stopped = true;\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    client.close();\n+    if (initialized)\n+    {\n+      if (!stopped)\n+      {\n+        closeLockSessionOnMaster();\n+        stopped = true;\n+      }\n+      initialized = false;\n+    }\n+  }\n+\n+  @Override\n+  public int getLockSessionId()\n+  {\n+    assertNotStopped();\n+    return initialized ? client.getLockSessionId() : -1;\n+  }\n+\n+  @Override\n+  public Stream<? extends ActiveLock> activeLocks()\n+  {\n+    return client.activeLocks();\n+  }\n+\n+  @Override\n+  public long activeLockCount()\n+  {\n+    return client.activeLockCount();\n+  }\n+\n+  /**\n+   * In order to prevent various indexes collisions on master during transaction commit that originate on one of the\n+   * slaves we need to grab same locks on {@link ResourceTypes#LABEL} and {@link ResourceTypes#RELATIONSHIP_TYPE}\n+   * that\n+   * where obtained on origin. To be able to do that and also prevent shared locks to be propagates to master in cases\n+   * of\n+   * read only transactions we need to postpone obtaining them till we know that we participating in a\n+   * transaction that performs modifications.\n+   *\n+   * @param tracer lock tracer\n+   */\n+  void acquireDeferredSharedLocks(LockTracer tracer)\n+  {\n+    assertNotStopped();\n+    Map<ResourceType, PrimitiveLongList> deferredLocksMap = new HashMap<>();\n+    List<? extends ActiveLock> activeLocks = client.activeLocks()\n+        .filter(activeLock -> ActiveLock.SHARED_MODE.equals(activeLock.mode()))\n+        .filter(this::isLabelOrRelationshipType).collect(Collectors.toList());\n+    for (ActiveLock activeLock : activeLocks)\n+    {\n+      Function<ResourceType, PrimitiveLongList> listCreator = resourceType -> Primitive.longList();\n+      deferredLocksMap.computeIfAbsent(activeLock.resourceType(), listCreator)\n+          .add(activeLock.resourceId());\n+    }\n+    deferredLocksMap.forEach((type, ids) -> lockResourcesOnMaster(tracer, type, ids));\n+  }\n+\n+  private void lockResourcesOnMaster(LockTracer tracer, ResourceType type, PrimitiveLongList ids)\n+  {\n+    long[] resourceIds = ids.toArray();\n+    try (LockWaitEvent event = tracer.waitForLock(false, type, resourceIds))\n+    {\n+      acquireSharedOnMaster(type, resourceIds);\n+    }\n+  }\n+\n+  private boolean isLabelOrRelationshipType(ActiveLock activeLock)\n+  {\n+    return (activeLock.resourceType() == ResourceTypes.LABEL) ||\n+        (activeLock.resourceType() == ResourceTypes.RELATIONSHIP_TYPE);\n+  }\n+\n+  private void stopLockSessionOnMaster()\n+  {\n+    try\n+    {\n+      endLockSessionOnMaster(false);\n+    } catch (Throwable t)\n+    {\n+      log.warn(\"Unable to stop lock session on master\", t);\n+    }\n+  }\n+\n+  private void closeLockSessionOnMaster()\n+  {\n+    endLockSessionOnMaster(true);\n+  }\n \n-    @Override\n-    public int getLockSessionId()\n+  private void endLockSessionOnMaster(boolean success)\n+  {\n+    try (Response<Void> ignored = master.endLockSession(newRequestContextFor(client), success))\n     {\n-        assertNotStopped();\n-        return initialized ? client.getLockSessionId() : -1;\n+      // Lock session is closed on master at this point\n+    } catch (ComException e)\n+    {\n+      throw new DistributedLockFailureException(\n+          \"Failed to end the lock session on the master (which implies releasing all held locks)\",\n+          master, e);\n     }\n+  }\n \n-    @Override\n-    public Stream<? extends ActiveLock> activeLocks()\n+  private long[] firstTimeSharedLocks(ResourceType resourceType, long[] resourceIds)\n+  {\n+    int cursor = 0;\n+    for (int i = 0; i < resourceIds.length; i++)\n     {\n-        return client.activeLocks();\n+      if (!client.reEnterShared(resourceType, resourceIds[i]))\n+      {\n+        resourceIds[cursor++] = resourceIds[i];\n+      }\n     }\n-\n-    @Override\n-    public long activeLockCount()\n+    if (cursor == 0)\n     {\n-        return client.activeLockCount();\n+      return PrimitiveLongCollections.EMPTY_LONG_ARRAY;\n     }\n+    return cursor == resourceIds.length ? resourceIds : Arrays.copyOf(resourceIds, cursor);\n+  }\n \n-    /**\n-     * In order to prevent various indexes collisions on master during transaction commit that originate on one of the\n-     * slaves we need to grab same locks on {@link ResourceTypes#LABEL} and {@link ResourceTypes#RELATIONSHIP_TYPE}\n-     * that\n-     * where obtained on origin. To be able to do that and also prevent shared locks to be propagates to master in cases\n-     * of\n-     * read only transactions we need to postpone obtaining them till we know that we participating in a\n-     * transaction that performs modifications.\n-     *\n-     * @param tracer lock tracer\n-     */\n-    void acquireDeferredSharedLocks( LockTracer tracer )\n+  private long[] firstTimeExclusiveLocks(ResourceType resourceType, long[] resourceIds)\n+  {\n+    int cursor = 0;\n+    for (int i = 0; i < resourceIds.length; i++)\n     {\n-        assertNotStopped();\n-        Map<ResourceType,PrimitiveLongList> deferredLocksMap = new HashMap<>();\n-        List<? extends ActiveLock> activeLocks = client.activeLocks()\n-                        .filter( activeLock -> ActiveLock.SHARED_MODE.equals( activeLock.mode() ) )\n-                        .filter( this::isLabelOrRelationshipType ).collect( Collectors.toList() );\n-        for ( ActiveLock activeLock : activeLocks )\n-        {\n-            Function<ResourceType,PrimitiveLongList> listCreator = resourceType -> Primitive.longList();\n-            deferredLocksMap.computeIfAbsent( activeLock.resourceType(), listCreator )\n-                            .add( activeLock.resourceId() );\n-        }\n-        deferredLocksMap.forEach( ( type, ids ) -> lockResourcesOnMaster( tracer, type, ids ) );\n+      if (!client.reEnterExclusive(resourceType, resourceIds[i]))\n+      {\n+        resourceIds[cursor++] = resourceIds[i];\n+      }\n     }\n-\n-    private void lockResourcesOnMaster( LockTracer tracer, ResourceType type, PrimitiveLongList ids )\n+    if (cursor == 0)\n     {\n-        long[] resourceIds = ids.toArray();\n-        try ( LockWaitEvent event = tracer.waitForLock( false, type, resourceIds ) )\n-        {\n-            acquireSharedOnMaster( type, resourceIds );\n-        }\n+      return PrimitiveLongCollections.EMPTY_LONG_ARRAY;\n     }\n+    return cursor == resourceIds.length ? resourceIds : Arrays.copyOf(resourceIds, cursor);\n+  }\n \n-    private boolean isLabelOrRelationshipType( ActiveLock activeLock )\n+  private void releaseShared(ResourceType resourceType, long[] resourceIds, long[] excludedIds)\n+  {\n+    for (int i = 0, j = 0; i < resourceIds.length; i++)\n     {\n-        return (activeLock.resourceType() == ResourceTypes.LABEL) ||\n-                (activeLock.resourceType() == ResourceTypes.RELATIONSHIP_TYPE);\n+      if (resourceIds[i] == excludedIds[j])\n+      {\n+        j++;\n+      } else\n+      {\n+        client.releaseShared(resourceType, resourceIds[i]);\n+      }\n     }\n+  }\n \n-    private void stopLockSessionOnMaster()\n+  private void releaseExclusive(ResourceType resourceType, long[] resourceIds, long[] excludedIds)\n+  {\n+    for (int i = 0, j = 0; i < resourceIds.length; i++)\n     {\n-        try\n-        {\n-            endLockSessionOnMaster( false );\n-        }\n-        catch ( Throwable t )\n-        {\n-            log.warn( \"Unable to stop lock session on master\", t );\n-        }\n+      if (resourceIds[i] == excludedIds[j])\n+      {\n+        j++;\n+      } else\n+      {\n+        client.releaseShared(resourceType, resourceIds[i]);\n+      }\n     }\n+  }\n \n-    private void closeLockSessionOnMaster()\n+  private void acquireSharedOnMasterFiltered(LockTracer lockTracer, ResourceType resourceType, long... resourceIds)\n+  {\n+    if ((resourceType == ResourceTypes.INDEX_ENTRY) ||\n+        (resourceType == ResourceTypes.LABEL) ||\n+        (resourceType == ResourceTypes.RELATIONSHIP_TYPE))\n     {\n-        endLockSessionOnMaster( true );\n+      return;\n     }\n-\n-    private void endLockSessionOnMaster( boolean success )\n+    try (LockWaitEvent event = lockTracer.waitForLock(false, resourceType, resourceIds))\n     {\n-        try ( Response<Void> ignored = master.endLockSession( newRequestContextFor( client ), success ) )\n-        {\n-            // Lock session is closed on master at this point\n-        }\n-        catch ( ComException e )\n-        {\n-            throw new DistributedLockFailureException(\n-                    \"Failed to end the lock session on the master (which implies releasing all held locks)\",\n-                    master, e );\n-        }\n+      acquireSharedOnMaster(resourceType, resourceIds);\n     }\n+  }\n \n-    private long[] firstTimeSharedLocks( ResourceType resourceType, long[] resourceIds )\n+  private void acquireSharedOnMaster(ResourceType resourceType, long[] resourceIds)\n+  {\n+    makeSureTxHasBeenInitialized();\n+    RequestContext requestContext = newRequestContextFor(this);\n+    try (Response<LockResult> response = master.acquireSharedLock(requestContext, resourceType, resourceIds))\n     {\n-        int cursor = 0;\n-        for ( int i = 0; i < resourceIds.length; i++ )\n-        {\n-            if ( !client.reEnterShared( resourceType, resourceIds[i] ) )\n-            {\n-                resourceIds[cursor++] = resourceIds[i];\n-            }\n-        }\n-        if ( cursor == 0 )\n-        {\n-            return PrimitiveLongCollections.EMPTY_LONG_ARRAY;\n-        }\n-        return cursor == resourceIds.length ? resourceIds : Arrays.copyOf( resourceIds, cursor );\n-    }\n-\n-    private long[] firstTimeExclusiveLocks( ResourceType resourceType, long[] resourceIds )\n+      receiveLockResponse(response);\n+    } catch (ComException e)\n     {\n-        int cursor = 0;\n-        for ( int i = 0; i < resourceIds.length; i++ )\n-        {\n-            if ( !client.reEnterExclusive( resourceType, resourceIds[i] ) )\n-            {\n-                resourceIds[cursor++] = resourceIds[i];\n-            }\n-        }\n-        if ( cursor == 0 )\n-        {\n-            return PrimitiveLongCollections.EMPTY_LONG_ARRAY;\n-        }\n-        return cursor == resourceIds.length ? resourceIds : Arrays.copyOf( resourceIds, cursor );\n+      throw new DistributedLockFailureException(\"Cannot get shared lock(s) on master\", master, e);\n     }\n+  }\n \n-    private void releaseShared( ResourceType resourceType, long[] resourceIds, long[] excludedIds )\n+  private void acquireExclusiveOnMaster(ResourceType resourceType, long... resourceIds)\n+  {\n+    makeSureTxHasBeenInitialized();\n+    RequestContext requestContext = newRequestContextFor(this);\n+    try (Response<LockResult> response = master.acquireExclusiveLock(requestContext, resourceType, resourceIds))\n     {\n-        for ( int i = 0, j = 0; i < resourceIds.length; i++ )\n-        {\n-            if ( resourceIds[i] == excludedIds[j] )\n-            {\n-                j++;\n-            }\n-            else\n-            {\n-                client.releaseShared( resourceType, resourceIds[i] );\n-            }\n-        }\n-    }\n-\n-    private void releaseExclusive( ResourceType resourceType, long[] resourceIds, long[] excludedIds )\n+      receiveLockResponse(response);\n+    } catch (ComException e)\n     {\n-        for ( int i = 0, j = 0; i < resourceIds.length; i++ )\n-        {\n-            if ( resourceIds[i] == excludedIds[j] )\n-            {\n-                j++;\n-            }\n-            else\n-            {\n-                client.releaseShared( resourceType, resourceIds[i] );\n-            }\n-        }\n+      throw new DistributedLockFailureException(\"Cannot get exclusive lock(s) on master\", master, e);\n     }\n+  }\n \n-    private void acquireSharedOnMasterFiltered( LockTracer lockTracer, ResourceType resourceType, long... resourceIds )\n-    {\n-        if ( (resourceType == ResourceTypes.INDEX_ENTRY) ||\n-             (resourceType == ResourceTypes.LABEL) ||\n-             (resourceType == ResourceTypes.RELATIONSHIP_TYPE) )\n-        {\n-            return;\n-        }\n-        try ( LockWaitEvent event = lockTracer.waitForLock( false, resourceType, resourceIds ) )\n-        {\n-            acquireSharedOnMaster( resourceType, resourceIds );\n-        }\n-    }\n+  private void receiveLockResponse(Response<LockResult> response)\n+  {\n+    LockResult result = response.response();\n \n-    private void acquireSharedOnMaster( ResourceType resourceType, long[] resourceIds )\n+    switch (result.getStatus())\n     {\n-        makeSureTxHasBeenInitialized();\n-        RequestContext requestContext = newRequestContextFor( this );\n-        try ( Response<LockResult> response = master.acquireSharedLock( requestContext, resourceType, resourceIds ) )\n-        {\n-            receiveLockResponse( response );\n-        }\n-        catch ( ComException e )\n-        {\n-            throw new DistributedLockFailureException( \"Cannot get shared lock(s) on master\", master, e );\n-        }\n+      case DEAD_LOCKED:\n+        throw new DeadlockDetectedException(result.getMessage());\n+      case NOT_LOCKED:\n+        throw new UnsupportedOperationException(result.toString());\n+      case OK_LOCKED:\n+        break;\n+      default:\n+        throw new UnsupportedOperationException(result.toString());\n     }\n+  }\n \n-    private void acquireExclusiveOnMaster( ResourceType resourceType, long... resourceIds )\n+  private void makeSureTxHasBeenInitialized()\n+  {\n+    try\n     {\n-        makeSureTxHasBeenInitialized();\n-        RequestContext requestContext = newRequestContextFor( this );\n-        try ( Response<LockResult> response = master.acquireExclusiveLock( requestContext, resourceType, resourceIds ) )\n-        {\n-            receiveLockResponse( response );\n-        }\n-        catch ( ComException e )\n-        {\n-            throw new DistributedLockFailureException( \"Cannot get exclusive lock(s) on master\", master, e );\n-        }\n-    }\n-\n-    private void receiveLockResponse( Response<LockResult> response )\n+      availabilityGuard.checkAvailable();\n+    } catch (UnavailableException e)\n     {\n-        LockResult result = response.response();\n-\n-        switch ( result.getStatus() )\n-        {\n-            case DEAD_LOCKED:\n-                throw new DeadlockDetectedException( result.getMessage() );\n-            case NOT_LOCKED:\n-                throw new UnsupportedOperationException( result.toString() );\n-            case OK_LOCKED:\n-                break;\n-            default:\n-                throw new UnsupportedOperationException( result.toString() );\n-        }\n+      throw new TransientDatabaseFailureException(\"Database not available\", e);\n     }\n \n-    private void makeSureTxHasBeenInitialized()\n+    if (!initialized)\n     {\n-        try\n-        {\n-            availabilityGuard.checkAvailable();\n-        }\n-        catch ( UnavailableException e )\n+      try (Response<Void> ignored = master.newLockSession(newRequestContextFor(client)))\n+      {\n+        // Lock session is initialized on master at this point\n+      } catch (Exception exception)\n+      {\n+        // Temporary wrapping, we should review the exception structure of the Locks API to allow this to\n+        // not use runtime exceptions here.\n+        ComException e;\n+        if (exception instanceof ComException)\n         {\n-            throw new TransientDatabaseFailureException( \"Database not available\", e );\n-        }\n-\n-        if ( !initialized )\n+          e = (ComException) exception;\n+        } else\n         {\n-            try ( Response<Void> ignored = master.newLockSession( newRequestContextFor( client ) ) )\n-            {\n-                // Lock session is initialized on master at this point\n-            }\n-            catch ( Exception exception )\n-            {\n-                // Temporary wrapping, we should review the exception structure of the Locks API to allow this to\n-                // not use runtime exceptions here.\n-                ComException e;\n-                if ( exception instanceof ComException )\n-                {\n-                    e = (ComException) exception;\n-                }\n-                else\n-                {\n-                    e = new ComException( exception );\n-                }\n-                throw new DistributedLockFailureException( \"Failed to start a new lock session on master\", master, e );\n-            }\n-            initialized = true;\n+          e = new ComException(exception);\n         }\n+        throw new DistributedLockFailureException(\"Failed to start a new lock session on master\", master, e);\n+      }\n+      initialized = true;\n     }\n+  }\n \n-    private RequestContext newRequestContextFor( Locks.Client client )\n-    {\n-        return requestContextFactory.newRequestContext( client.getLockSessionId() );\n-    }\n+  private RequestContext newRequestContextFor(Locks.Client client)\n+  {\n+    return requestContextFactory.newRequestContext(client.getLockSessionId());\n+  }\n \n-    private void assertNotStopped()\n+  private void assertNotStopped()\n+  {\n+    if (stopped)\n     {\n-        if ( stopped )\n-        {\n-            throw new LockClientStoppedException( this );\n-        }\n+      throw new LockClientStoppedException(this);\n     }\n+  }\n \n-    private UnsupportedOperationException newUnsupportedDirectTryLockUsageException()\n-    {\n-        return new UnsupportedOperationException(\n-                \"Distributed tryLocks are not supported. They only work with local lock managers.\" );\n-    }\n+  private UnsupportedOperationException newUnsupportedDirectTryLockUsageException()\n+  {\n+    return new UnsupportedOperationException(\n+        \"Distributed tryLocks are not supported. They only work with local lock managers.\");\n+  }\n }\n",
            "diff_size": 584
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "94",
                    "column": "35",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "35",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "250",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 218).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4465/SlaveLocksClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4465/SlaveLocksClient.java\nindex 113fc90f1a3..cdd9fa96ba2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4465/SlaveLocksClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4465/SlaveLocksClient.java\n@@ -91,7 +91,7 @@ class SlaveLocksClient implements Locks.Client\n         assertNotStopped();\n \n         long[] newResourceIds = firstTimeSharedLocks( resourceType, resourceIds );\n-        if ( newResourceIds.length > 0 )\n+        if ( newResourceIds.length> 0 )\n         {\n             try\n             {\n@@ -109,21 +109,19 @@ class SlaveLocksClient implements Locks.Client\n             {\n                 if ( !client.trySharedLock( resourceType, resourceId ) )\n                 {\n-                    throw new LocalDeadlockDetectedException(\n-                            client, localLockManager, resourceType, resourceId, READ );\n-                }\n+                    throw new LocalDeadlockDetectedException( client, localLockManager, resourceType, resourceId, READ );\n+    }\n             }\n         }\n     }\n \n     @Override\n-    public void acquireExclusive( LockTracer tracer, ResourceType resourceType, long... resourceIds ) throws\n-            AcquireLockTimeoutException\n+    public void acquireExclusive( LockTracer tracer, ResourceType resourceType, long... resourceIds ) throws AcquireLockTimeoutException\n     {\n         assertNotStopped();\n \n         long[] newResourceIds = firstTimeExclusiveLocks( resourceType, resourceIds );\n-        if ( newResourceIds.length > 0 )\n+        if ( newResourceIds.length> 0 )\n         {\n             try ( LockWaitEvent event = tracer.waitForLock( true, resourceType, newResourceIds ) )\n             {\n@@ -141,9 +139,8 @@ class SlaveLocksClient implements Locks.Client\n             {\n                 if ( !client.tryExclusiveLock( resourceType, resourceId ) )\n                 {\n-                    throw new LocalDeadlockDetectedException(\n-                            client, localLockManager, resourceType, resourceId, WRITE );\n-                }\n+                    throw new LocalDeadlockDetectedException( client, localLockManager, resourceType, resourceId, WRITE );\n+    }\n             }\n         }\n     }\n@@ -176,16 +173,14 @@ class SlaveLocksClient implements Locks.Client\n     public void releaseShared( ResourceType resourceType, long... resourceIds )\n     {\n         assertNotStopped();\n-\n-        client.releaseShared( resourceType, resourceIds );\n+client.releaseShared( resourceType, resourceIds );\n     }\n \n     @Override\n     public void releaseExclusive( ResourceType resourceType, long... resourceIds )\n     {\n         assertNotStopped();\n-\n-        client.releaseExclusive( resourceType, resourceIds );\n+client.releaseExclusive( resourceType, resourceIds );\n     }\n \n     @Override\n@@ -213,7 +208,8 @@ class SlaveLocksClient implements Locks.Client\n                 closeLockSessionOnMaster();\n                 stopped = true;\n             }\n-            initialized = false;\n+\n+initialized = false;\n         }\n     }\n \n@@ -251,15 +247,12 @@ class SlaveLocksClient implements Locks.Client\n     {\n         assertNotStopped();\n         Map<ResourceType,PrimitiveLongList> deferredLocksMap = new HashMap<>();\n-        List<? extends ActiveLock> activeLocks = client.activeLocks()\n-                        .filter( activeLock -> ActiveLock.SHARED_MODE.equals( activeLock.mode() ) )\n-                        .filter( this::isLabelOrRelationshipType ).collect( Collectors.toList() );\n-        for ( ActiveLock activeLock : activeLocks )\n+        List<? extends ActiveLock> activeLocks = client.activeLocks().filter( activeLock -> ActiveLock.SHARED_MODE.equals( activeLock.mode() ) ).filter( this::isLabelOrRelationshipType ).collect( Collectors.toList() );\n+for ( ActiveLock activeLock : activeLocks )\n         {\n             Function<ResourceType,PrimitiveLongList> listCreator = resourceType -> Primitive.longList();\n-            deferredLocksMap.computeIfAbsent( activeLock.resourceType(), listCreator )\n-                            .add( activeLock.resourceId() );\n-        }\n+            deferredLocksMap.computeIfAbsent( activeLock.resourceType(), listCreator ).add( activeLock.resourceId() );\n+    }\n         deferredLocksMap.forEach( ( type, ids ) -> lockResourcesOnMaster( tracer, type, ids ) );\n     }\n \n@@ -274,8 +267,7 @@ class SlaveLocksClient implements Locks.Client\n \n     private boolean isLabelOrRelationshipType( ActiveLock activeLock )\n     {\n-        return (activeLock.resourceType() == ResourceTypes.LABEL) ||\n-                (activeLock.resourceType() == ResourceTypes.RELATIONSHIP_TYPE);\n+        return (activeLock.resourceType() == ResourceTypes.LABEL) || (activeLock.resourceType() == ResourceTypes.RELATIONSHIP_TYPE);\n     }\n \n     private void stopLockSessionOnMaster()\n@@ -303,10 +295,8 @@ class SlaveLocksClient implements Locks.Client\n         }\n         catch ( ComException e )\n         {\n-            throw new DistributedLockFailureException(\n-                    \"Failed to end the lock session on the master (which implies releasing all held locks)\",\n-                    master, e );\n-        }\n+            throw new DistributedLockFailureException( \"Failed to end the lock session on the master (which implies releasing all held locks)\", master, e );\n+    }\n     }\n \n     private long[] firstTimeSharedLocks( ResourceType resourceType, long[] resourceIds )\n@@ -323,7 +313,8 @@ class SlaveLocksClient implements Locks.Client\n         {\n             return PrimitiveLongCollections.EMPTY_LONG_ARRAY;\n         }\n-        return cursor == resourceIds.length ? resourceIds : Arrays.copyOf( resourceIds, cursor );\n+\n+return cursor == resourceIds.length ? resourceIds : Arrays.copyOf( resourceIds, cursor );\n     }\n \n     private long[] firstTimeExclusiveLocks( ResourceType resourceType, long[] resourceIds )\n@@ -340,7 +331,8 @@ class SlaveLocksClient implements Locks.Client\n         {\n             return PrimitiveLongCollections.EMPTY_LONG_ARRAY;\n         }\n-        return cursor == resourceIds.length ? resourceIds : Arrays.copyOf( resourceIds, cursor );\n+\n+return cursor == resourceIds.length ? resourceIds : Arrays.copyOf( resourceIds, cursor );\n     }\n \n     private void releaseShared( ResourceType resourceType, long[] resourceIds, long[] excludedIds )\n@@ -375,10 +367,9 @@ class SlaveLocksClient implements Locks.Client\n \n     private void acquireSharedOnMasterFiltered( LockTracer lockTracer, ResourceType resourceType, long... resourceIds )\n     {\n-        if ( (resourceType == ResourceTypes.INDEX_ENTRY) ||\n-             (resourceType == ResourceTypes.LABEL) ||\n-             (resourceType == ResourceTypes.RELATIONSHIP_TYPE) )\n-        {\n+        if ( ( resourceType == ResourceTypes.INDEX_ENTRY) || ( resourceType == ResourceTypes.LABEL) ||\n+             ( resourceType == ResourceTypes.RELATIONSHIP_TYPE) )\n+{\n             return;\n         }\n         try ( LockWaitEvent event = lockTracer.waitForLock( false, resourceType, resourceIds ) )\n@@ -418,10 +409,9 @@ class SlaveLocksClient implements Locks.Client\n     private void receiveLockResponse( Response<LockResult> response )\n     {\n         LockResult result = response.response();\n-\n-        switch ( result.getStatus() )\n+switch ( result.getStatus() )\n         {\n-            case DEAD_LOCKED:\n+case DEAD_LOCKED:\n                 throw new DeadlockDetectedException( result.getMessage() );\n             case NOT_LOCKED:\n                 throw new UnsupportedOperationException( result.toString() );\n@@ -429,7 +419,7 @@ class SlaveLocksClient implements Locks.Client\n                 break;\n             default:\n                 throw new UnsupportedOperationException( result.toString() );\n-        }\n+    }\n     }\n \n     private void makeSureTxHasBeenInitialized()\n@@ -464,7 +454,8 @@ class SlaveLocksClient implements Locks.Client\n                 }\n                 throw new DistributedLockFailureException( \"Failed to start a new lock session on master\", master, e );\n             }\n-            initialized = true;\n+\n+initialized = true;\n         }\n     }\n \n@@ -483,7 +474,6 @@ class SlaveLocksClient implements Locks.Client\n \n     private UnsupportedOperationException newUnsupportedDirectTryLockUsageException()\n     {\n-        return new UnsupportedOperationException(\n-                \"Distributed tryLocks are not supported. They only work with local lock managers.\" );\n+        return new UnsupportedOperationException( \"Distributed tryLocks are not supported. They only work with local lock managers.\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3392",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3392/PositionCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3392/PositionCache.java\nindex 8462efc3b6b..7d294c4f1d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3392/PositionCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3392/PositionCache.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.log.segmented;\n \n import org.neo4j.causalclustering.core.consensus.log.LogPosition;\n@@ -26,62 +27,62 @@ import org.neo4j.causalclustering.core.consensus.log.LogPosition;\n  * approximate byte position for an entry given an index. The index is defined as a relative\n  * offset index starting from 0 for each segment, instead of the absolute logIndex in the\n  * log file.\n- *\n+ * <p>\n  * The necessity and efficiency of this cache is understood by considering the values put into\n  * it. When closing cursors the position after the last entry is cached so that when the next\n  * batch of entries are to be read the position is already known.\n  */\n class PositionCache\n {\n-    private static final LogPosition BEGINNING_OF_RECORDS = new LogPosition( 0, SegmentHeader.SIZE );\n-    static final int CACHE_SIZE = 8;\n+  private static final LogPosition BEGINNING_OF_RECORDS = new LogPosition(0, SegmentHeader.SIZE);\n+  static final int CACHE_SIZE = 8;\n \n-    private LogPosition[] cache = new LogPosition[CACHE_SIZE];\n-    private int pos;\n+  private LogPosition[] cache = new LogPosition[CACHE_SIZE];\n+  private int pos;\n \n-    PositionCache()\n+  PositionCache()\n+  {\n+    for (int i = 0; i < cache.length; i++)\n     {\n-        for ( int i = 0; i < cache.length; i++ )\n-        {\n-            cache[i] = BEGINNING_OF_RECORDS;\n-        }\n+      cache[i] = BEGINNING_OF_RECORDS;\n     }\n+  }\n \n-    /**\n-     * Saves a known position in the cache.\n-     *\n-     * @param position The position which should interpreted as (offsetIndex, byteOffset).\n-     */\n-    public synchronized void put( LogPosition position )\n-    {\n-        cache[pos] = position;\n-        pos = (pos + 1) % CACHE_SIZE;\n-    }\n+  /**\n+   * Saves a known position in the cache.\n+   *\n+   * @param position The position which should interpreted as (offsetIndex, byteOffset).\n+   */\n+  public synchronized void put(LogPosition position)\n+  {\n+    cache[pos] = position;\n+    pos = (pos + 1) % CACHE_SIZE;\n+  }\n \n-    /**\n-     * Returns a position at or before the searched offsetIndex, the closest known.\n-     * Users will have to scan forward to reach the exact position.\n-     *\n-     * @param offsetIndex The relative index.\n-     * @return A position at or before the searched offsetIndex.\n-     */\n-    synchronized LogPosition lookup( long offsetIndex )\n+  /**\n+   * Returns a position at or before the searched offsetIndex, the closest known.\n+   * Users will have to scan forward to reach the exact position.\n+   *\n+   * @param offsetIndex The relative index.\n+   * @return A position at or before the searched offsetIndex.\n+   */\n+  synchronized LogPosition lookup(long offsetIndex)\n+  {\n+    if (offsetIndex == 0)\n     {\n-        if ( offsetIndex == 0 )\n-        {\n-            return BEGINNING_OF_RECORDS;\n-        }\n-\n-        LogPosition best = BEGINNING_OF_RECORDS;\n+      return BEGINNING_OF_RECORDS;\n+    }\n \n-        for ( int i = 0; i < CACHE_SIZE; i++ )\n-        {\n-            if ( cache[i].logIndex <= offsetIndex && cache[i].logIndex > best.logIndex )\n-            {\n-                best = cache[i];\n-            }\n-        }\n+    LogPosition best = BEGINNING_OF_RECORDS;\n \n-        return best;\n+    for (int i = 0; i < CACHE_SIZE; i++)\n+    {\n+      if (cache[i].logIndex <= offsetIndex && cache[i].logIndex > best.logIndex)\n+      {\n+        best = cache[i];\n+      }\n     }\n+\n+    return best;\n+  }\n }\n",
            "diff_size": 56
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "78",
                    "column": "71",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3392/PositionCache.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3392/PositionCache.java\nindex 8462efc3b6b..52d3c878998 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3392/PositionCache.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3392/PositionCache.java\n@@ -55,7 +55,7 @@ class PositionCache\n     public synchronized void put( LogPosition position )\n     {\n         cache[pos] = position;\n-        pos = (pos + 1) % CACHE_SIZE;\n+        pos = (pos + 1 ) % CACHE_SIZE;\n     }\n \n     /**\n@@ -73,10 +73,9 @@ class PositionCache\n         }\n \n         LogPosition best = BEGINNING_OF_RECORDS;\n-\n-        for ( int i = 0; i < CACHE_SIZE; i++ )\n+for ( int i = 0; i < CACHE_SIZE; i++ )\n         {\n-            if ( cache[i].logIndex <= offsetIndex && cache[i].logIndex > best.logIndex )\n+            if ( cache[i].logIndex <= offsetIndex && cache[i].logIndex> best.logIndex )\n             {\n                 best = cache[i];\n             }\n@@ -84,4 +83,4 @@ class PositionCache\n \n         return best;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
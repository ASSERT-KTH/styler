{
    "project_name": "neo4j-neo4j",
    "error_id": "1416",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1416/UserFunctionSignature.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1416/UserFunctionSignature.java\nindex c6f71b20274..3625a546a7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1416/UserFunctionSignature.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1416/UserFunctionSignature.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api.procs;\n \n import java.util.Arrays;\n@@ -43,17 +44,17 @@ public final class UserFunctionSignature\n     private final String category;\n     private final boolean caseInsensitive;\n \n-    public UserFunctionSignature( QualifiedName name,\n-            List<FieldSignature> inputSignature,\n-            Neo4jTypes.AnyType type,\n-            String deprecated,\n-            String[] allowed,\n-            String description,\n-            String category,\n-            boolean caseInsensitive )\n+    public UserFunctionSignature(QualifiedName name,\n+                                 List<FieldSignature> inputSignature,\n+                                 Neo4jTypes.AnyType type,\n+                                 String deprecated,\n+                                 String[] allowed,\n+                                 String description,\n+                                 String category,\n+                                 boolean caseInsensitive)\n     {\n         this.name = name;\n-        this.inputSignature = unmodifiableList( inputSignature );\n+        this.inputSignature = unmodifiableList(inputSignature);\n         this.type = type;\n         this.deprecated = deprecated;\n         this.description = description;\n@@ -69,7 +70,7 @@ public final class UserFunctionSignature\n \n     public Optional<String> deprecated()\n     {\n-        return Optional.ofNullable( deprecated );\n+        return Optional.ofNullable(deprecated);\n     }\n \n     public List<FieldSignature> inputSignature()\n@@ -84,12 +85,12 @@ public final class UserFunctionSignature\n \n     public Optional<String> description()\n     {\n-        return Optional.ofNullable( description );\n+        return Optional.ofNullable(description);\n     }\n \n     public Optional<String> category()\n     {\n-        return Optional.ofNullable( category );\n+        return Optional.ofNullable(category);\n     }\n \n     public String[] allowed()\n@@ -103,19 +104,19 @@ public final class UserFunctionSignature\n     }\n \n     @Override\n-    public boolean equals( Object o )\n+    public boolean equals(Object o)\n     {\n-        if ( this == o )\n+        if (this == o)\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+        if (o == null || getClass() != o.getClass())\n         {\n             return false;\n         }\n \n         UserFunctionSignature that = (UserFunctionSignature) o;\n-        return name.equals( that.name ) && inputSignature.equals( that.inputSignature ) && type.equals( that.type );\n+        return name.equals(that.name) && inputSignature.equals(that.inputSignature) && type.equals(that.type);\n     }\n \n     @Override\n@@ -127,9 +128,9 @@ public final class UserFunctionSignature\n     @Override\n     public String toString()\n     {\n-        String strInSig = inputSignature == null ? \"...\" : Iterables.toString( inputSignature, \", \" );\n-            String strOutSig = type == null ? \"...\" : type.toString();\n-            return String.format( \"%s(%s) :: (%s)\", name, strInSig, strOutSig );\n+        String strInSig = inputSignature == null ? \"...\" : Iterables.toString(inputSignature, \", \");\n+        String strOutSig = type == null ? \"...\" : type.toString();\n+        return String.format(\"%s(%s) :: (%s)\", name, strInSig, strOutSig);\n     }\n \n     public static class Builder\n@@ -142,44 +143,48 @@ public final class UserFunctionSignature\n         private String description;\n         private String category;\n \n-        public Builder( String[] namespace, String name )\n+        public Builder(String[] namespace, String name)\n         {\n-            this.name = new QualifiedName( namespace, name );\n+            this.name = new QualifiedName(namespace, name);\n         }\n \n-        public Builder description( String description )\n+        public Builder description(String description)\n         {\n             this.description = description;\n             return this;\n         }\n \n-        public Builder category( String category )\n+        public Builder category(String category)\n         {\n             this.category = category;\n             return this;\n         }\n \n-        public Builder deprecatedBy( String deprecated )\n+        public Builder deprecatedBy(String deprecated)\n         {\n             this.deprecated = deprecated;\n             return this;\n         }\n \n-        /** Define an input field */\n-        public Builder in( String name, Neo4jTypes.AnyType type )\n+        /**\n+         * Define an input field\n+         */\n+        public Builder in(String name, Neo4jTypes.AnyType type)\n         {\n-            inputSignature.add( FieldSignature.inputField( name, type ) );\n+            inputSignature.add(FieldSignature.inputField(name, type));\n             return this;\n         }\n \n-        /** Define an output field */\n-        public Builder out( Neo4jTypes.AnyType type )\n+        /**\n+         * Define an output field\n+         */\n+        public Builder out(Neo4jTypes.AnyType type)\n         {\n             outputType = type;\n             return this;\n         }\n \n-        public Builder allowed( String[] allowed )\n+        public Builder allowed(String[] allowed)\n         {\n             this.allowed = allowed;\n             return this;\n@@ -187,30 +192,30 @@ public final class UserFunctionSignature\n \n         public UserFunctionSignature build()\n         {\n-            if ( outputType == null )\n+            if (outputType == null)\n             {\n-                throw new IllegalStateException( \"output type must be set\" );\n+                throw new IllegalStateException(\"output type must be set\");\n             }\n-            return new UserFunctionSignature( name, inputSignature, outputType, deprecated, allowed, description, category, false );\n+            return new UserFunctionSignature(name, inputSignature, outputType, deprecated, allowed, description, category, false);\n         }\n     }\n \n-    public static Builder functionSignature( String... namespaceAndName )\n+    public static Builder functionSignature(String... namespaceAndName)\n     {\n         String[] namespace = namespaceAndName.length > 1 ?\n-                             Arrays.copyOf( namespaceAndName, namespaceAndName.length - 1 ) :\n-                             new String[0];\n+          Arrays.copyOf(namespaceAndName, namespaceAndName.length - 1) :\n+          new String[0];\n         String name = namespaceAndName[namespaceAndName.length - 1];\n-        return functionSignature( namespace, name );\n+        return functionSignature(namespace, name);\n     }\n \n-    public static Builder functionSignature( QualifiedName name )\n+    public static Builder functionSignature(QualifiedName name)\n     {\n-        return new Builder( name.namespace(), name.name() );\n+        return new Builder(name.namespace(), name.name());\n     }\n \n-    public static Builder functionSignature( String[] namespace, String name )\n+    public static Builder functionSignature(String[] namespace, String name)\n     {\n-        return new Builder( namespace, name );\n+        return new Builder(namespace, name);\n     }\n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1041",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "141",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "97",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "131",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "74",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "103",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1041/DatabaseTransactionEventListeners.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1041/DatabaseTransactionEventListeners.java\nindex 7753b5b8ddd..90f10735701 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1041/DatabaseTransactionEventListeners.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1041/DatabaseTransactionEventListeners.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.internal.event;\n \n import java.util.Collection;\n@@ -36,54 +37,53 @@ import static org.neo4j.kernel.internal.event.EmptyTransactionData.EMPTY_DATA;\n /**\n  * Handle the collection of transaction event listeners, and fire events as needed.\n  */\n-@SuppressWarnings( {\"unchecked\", \"rawtypes\"} )\n+@SuppressWarnings({\"unchecked\", \"rawtypes\"})\n public class DatabaseTransactionEventListeners\n {\n     private final GlobalTransactionEventListeners globalTransactionEventListeners;\n     private final GraphDatabaseFacade databaseFacade;\n     private final String databaseName;\n \n-    public DatabaseTransactionEventListeners( GraphDatabaseFacade databaseFacade, GlobalTransactionEventListeners globalTransactionEventListeners,\n-            NamedDatabaseId namedDatabaseId )\n+    public DatabaseTransactionEventListeners(GraphDatabaseFacade databaseFacade, GlobalTransactionEventListeners globalTransactionEventListeners,\n+                                             NamedDatabaseId namedDatabaseId)\n     {\n         this.databaseFacade = databaseFacade;\n         this.globalTransactionEventListeners = globalTransactionEventListeners;\n         this.databaseName = namedDatabaseId.name();\n     }\n \n-    public TransactionListenersState beforeCommit( ReadableTransactionState state, KernelTransaction transaction, StorageReader storageReader )\n+    public TransactionListenersState beforeCommit(ReadableTransactionState state, KernelTransaction transaction, StorageReader storageReader)\n     {\n         // The iterator grabs a snapshot of our list of listenerIterator\n-        Collection<TransactionEventListener<?>> eventListeners = globalTransactionEventListeners.getDatabaseTransactionEventListeners( databaseName );\n-        if ( !canInvokeBeforeCommitListeners( eventListeners, state ) )\n+        Collection<TransactionEventListener<?>> eventListeners = globalTransactionEventListeners.getDatabaseTransactionEventListeners(databaseName);\n+        if (!canInvokeBeforeCommitListeners(eventListeners, state))\n         {\n             // Use 'null' as a signal that no event listenerIterator were registered at beforeCommit time\n             return null;\n         }\n \n-        TransactionData txData = state == null ? EMPTY_DATA : new TxStateTransactionDataSnapshot( state, storageReader, transaction );\n-        TransactionListenersState listenersStates = new TransactionListenersState( txData );\n+        TransactionData txData = state == null ? EMPTY_DATA : new TxStateTransactionDataSnapshot(state, storageReader, transaction);\n+        TransactionListenersState listenersStates = new TransactionListenersState(txData);\n \n-        for ( TransactionEventListener<?> listener : eventListeners )\n+        for (TransactionEventListener<?> listener : eventListeners)\n         {\n             Object listenerState = null;\n             try\n             {\n-                listenerState = listener.beforeCommit( txData, transaction.internalTransaction(), databaseFacade );\n-            }\n-            catch ( Throwable t )\n+                listenerState = listener.beforeCommit(txData, transaction.internalTransaction(), databaseFacade);\n+            } catch (Throwable t)\n             {\n-                listenersStates.failed( t );\n+                listenersStates.failed(t);\n             }\n-            listenersStates.addListenerState( listener, listenerState );\n+            listenersStates.addListenerState(listener, listenerState);\n         }\n \n         return listenersStates;\n     }\n \n-    public void afterCommit( TransactionListenersState listeners )\n+    public void afterCommit(TransactionListenersState listeners)\n     {\n-        if ( listeners == null )\n+        if (listeners == null)\n         {\n             // As per beforeCommit, 'null' means no listeners were registered in time for this transaction to\n             // observe them.\n@@ -93,15 +93,14 @@ public class DatabaseTransactionEventListeners\n         TransactionData txData = listeners.getTxData();\n         try\n         {\n-            for ( ListenerState listenerState : listeners.getStates() )\n+            for (ListenerState listenerState : listeners.getStates())\n             {\n                 TransactionEventListener listener = listenerState.getListener();\n-                listener.afterCommit( txData, listenerState.getState(), databaseFacade );\n+                listener.afterCommit(txData, listenerState.getState(), databaseFacade);\n             }\n-        }\n-        finally\n+        } finally\n         {\n-            if ( txData instanceof TxStateTransactionDataSnapshot )\n+            if (txData instanceof TxStateTransactionDataSnapshot)\n             {\n                 ((TxStateTransactionDataSnapshot) txData).close();\n             }\n@@ -109,41 +108,41 @@ public class DatabaseTransactionEventListeners\n         }\n     }\n \n-    public void afterRollback( TransactionListenersState listenersState )\n+    public void afterRollback(TransactionListenersState listenersState)\n     {\n-        if ( listenersState == null )\n+        if (listenersState == null)\n         {\n             // For legacy reasons, we don't call transaction listeners on implicit rollback.\n             return;\n         }\n \n         TransactionData txData = listenersState.getTxData();\n-        for ( ListenerState listenerState : listenersState.getStates() )\n+        for (ListenerState listenerState : listenersState.getStates())\n         {\n             TransactionEventListener listener = listenerState.getListener();\n-            listener.afterRollback( txData, listenerState.getState(), databaseFacade );\n+            listener.afterRollback(txData, listenerState.getState(), databaseFacade);\n         }\n     }\n \n-    private boolean canInvokeBeforeCommitListeners( Collection<TransactionEventListener<?>> listeners, ReadableTransactionState state )\n+    private boolean canInvokeBeforeCommitListeners(Collection<TransactionEventListener<?>> listeners, ReadableTransactionState state)\n     {\n-        return !listeners.isEmpty() && canInvokeListenersWithTransactionState( state );\n+        return !listeners.isEmpty() && canInvokeListenersWithTransactionState(state);\n     }\n \n-    private boolean canInvokeListenersWithTransactionState( ReadableTransactionState state )\n+    private boolean canInvokeListenersWithTransactionState(ReadableTransactionState state)\n     {\n-        if ( state == null )\n+        if (state == null)\n         {\n             // no need to invoke listeners for transaction without state (read-only transaction)\n             return false;\n         }\n-        if ( state.hasDataChanges() )\n+        if (state.hasDataChanges())\n         {\n             // transaction has data changes and listeners can be invoked (write transaction that created nodes or relationships)\n             return true;\n         }\n \n         // system database listeners receive events about all transactions, including internal transactions that create tokens and make schema changes\n-        return state.hasChanges() && SYSTEM_DATABASE_NAME.equals( databaseName );\n+        return state.hasChanges() && SYSTEM_DATABASE_NAME.equals(databaseName);\n     }\n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
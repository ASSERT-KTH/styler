{
    "project_name": "Angel-ML-angel",
    "error_id": "935",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/935/PS2PSPusher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/935/PS2PSPusher.java\nindex a2f2eaf8a08..fea9f436116 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/935/PS2PSPusher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/935/PS2PSPusher.java\n@@ -30,23 +30,26 @@ import io.netty.buffer.ByteBuf;\n public interface PS2PSPusher {\n   /**\n    * Push the update to the slave pss\n+   *\n    * @param request update request\n-   * @param msg update data\n+   * @param msg     update data\n    * @param partLoc the slaves pss\n    */\n   void put(PartitionRequest request, ByteBuf msg, PartitionLocation partLoc);\n \n   /**\n    * Update the clock vector in slave pss\n-   * @param partKey partition information\n+   *\n+   * @param partKey   partition information\n    * @param taskIndex task index\n-   * @param clock clock value\n-   * @param partLoc the pss that the partition is stored\n+   * @param clock     clock value\n+   * @param partLoc   the pss that the partition is stored\n    */\n   void updateClock(PartitionKey partKey, int taskIndex, int clock, PartitionLocation partLoc);\n \n   /**\n    * Recover a partition to a slave ps\n+   *\n    * @param part partition recover information: partition id, the slave ps id, the slave ps location\n    */\n   FutureResult<Response> recover(RecoverPartKey part);\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/935/PS2PSPusher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/935/PS2PSPusher.java\nindex a2f2eaf8a08..d23a4b46c73 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/935/PS2PSPusher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/935/PS2PSPusher.java\n@@ -50,4 +50,4 @@ public interface PS2PSPusher {\n    * @param part partition recover information: partition id, the slave ps id, the slave ps location\n    */\n   FutureResult<Response> recover(RecoverPartKey part);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/935/PS2PSPusher.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/935/PS2PSPusher.java\nindex a2f2eaf8a08..e6a9bec5c95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/935/PS2PSPusher.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/935/PS2PSPusher.java\n@@ -27,6 +27,8 @@ import io.netty.buffer.ByteBuf;\n /**\n  * PS to PS push interface, it is used to back up matrix partition update use \"PUSH\" mode\n  */\n+\n+\n public interface PS2PSPusher {\n   /**\n    * Push the update to the slave pss\n@@ -34,7 +36,8 @@ public interface PS2PSPusher {\n    * @param msg update data\n    * @param partLoc the slaves pss\n    */\n-  void put(PartitionRequest request, ByteBuf msg, PartitionLocation partLoc);\n+  void put(\n+    PartitionRequest request, ByteBuf msg, PartitionLocation partLoc);\n \n   /**\n    * Update the clock vector in slave pss\n@@ -43,11 +46,16 @@ public interface PS2PSPusher {\n    * @param clock clock value\n    * @param partLoc the pss that the partition is stored\n    */\n-  void updateClock(PartitionKey partKey, int taskIndex, int clock, PartitionLocation partLoc);\n+\n+\n+  void updateClock(\n+    PartitionKey partKey, int taskIndex, int clock, PartitionLocation partLoc);\n \n   /**\n    * Recover a partition to a slave ps\n    * @param part partition recover information: partition id, the slave ps id, the slave ps location\n    */\n+\n+\n   FutureResult<Response> recover(RecoverPartKey part);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
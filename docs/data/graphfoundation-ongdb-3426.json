{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3426",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3426/QueryLoggerKernelExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3426/QueryLoggerKernelExtension.java\nindex 7165b65bbdb..e219ad9fe47 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3426/QueryLoggerKernelExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3426/QueryLoggerKernelExtension.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.query;\n \n import org.neo4j.helpers.Service;\n@@ -31,54 +32,54 @@ import org.neo4j.kernel.monitoring.Monitors;\n import org.neo4j.logging.Log;\n import org.neo4j.scheduler.JobScheduler;\n \n-@Service.Implementation( KernelExtensionFactory.class )\n+@Service.Implementation(KernelExtensionFactory.class)\n public class QueryLoggerKernelExtension extends KernelExtensionFactory<QueryLoggerKernelExtension.Dependencies>\n {\n-    public interface Dependencies\n-    {\n-        FileSystemAbstraction fileSystem();\n+  public interface Dependencies\n+  {\n+    FileSystemAbstraction fileSystem();\n \n-        Config config();\n+    Config config();\n \n-        Monitors monitoring();\n+    Monitors monitoring();\n \n-        LogService logger();\n+    LogService logger();\n \n-        JobScheduler jobScheduler();\n-    }\n+    JobScheduler jobScheduler();\n+  }\n \n-    public QueryLoggerKernelExtension()\n-    {\n-        super( \"query-logging\" );\n-    }\n+  public QueryLoggerKernelExtension()\n+  {\n+    super(\"query-logging\");\n+  }\n \n-    @Override\n-    public Lifecycle newInstance( @SuppressWarnings( \"unused\" ) KernelContext context, final Dependencies dependencies )\n-    {\n-        FileSystemAbstraction fileSystem = dependencies.fileSystem();\n-        Config config = dependencies.config();\n-        Monitors monitoring = dependencies.monitoring();\n-        LogService logService = dependencies.logger();\n-        JobScheduler jobScheduler = dependencies.jobScheduler();\n+  @Override\n+  public Lifecycle newInstance(@SuppressWarnings(\"unused\") KernelContext context, final Dependencies dependencies)\n+  {\n+    FileSystemAbstraction fileSystem = dependencies.fileSystem();\n+    Config config = dependencies.config();\n+    Monitors monitoring = dependencies.monitoring();\n+    LogService logService = dependencies.logger();\n+    JobScheduler jobScheduler = dependencies.jobScheduler();\n \n-        return new LifecycleAdapter()\n-        {\n-            DynamicLoggingQueryExecutionMonitor logger;\n+    return new LifecycleAdapter()\n+    {\n+      DynamicLoggingQueryExecutionMonitor logger;\n \n-            @Override\n-            public void init()\n-            {\n-                Log debugLog = logService.getInternalLog( DynamicLoggingQueryExecutionMonitor.class );\n-                this.logger = new DynamicLoggingQueryExecutionMonitor( config, fileSystem, jobScheduler, debugLog );\n-                this.logger.init();\n-                monitoring.addMonitorListener( this.logger );\n-            }\n+      @Override\n+      public void init()\n+      {\n+        Log debugLog = logService.getInternalLog(DynamicLoggingQueryExecutionMonitor.class);\n+        this.logger = new DynamicLoggingQueryExecutionMonitor(config, fileSystem, jobScheduler, debugLog);\n+        this.logger.init();\n+        monitoring.addMonitorListener(this.logger);\n+      }\n \n-            @Override\n-            public void shutdown()\n-            {\n-                logger.shutdown();\n-            }\n-        };\n-    }\n+      @Override\n+      public void shutdown()\n+      {\n+        logger.shutdown();\n+      }\n+    };\n+  }\n }\n",
            "diff_size": 40
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3426/QueryLoggerKernelExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3426/QueryLoggerKernelExtension.java\nindex 7165b65bbdb..0d41985c21f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3426/QueryLoggerKernelExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3426/QueryLoggerKernelExtension.java\n@@ -60,8 +60,7 @@ public class QueryLoggerKernelExtension extends KernelExtensionFactory<QueryLogg\n         Monitors monitoring = dependencies.monitoring();\n         LogService logService = dependencies.logger();\n         JobScheduler jobScheduler = dependencies.jobScheduler();\n-\n-        return new LifecycleAdapter()\n+return new LifecycleAdapter()\n         {\n             DynamicLoggingQueryExecutionMonitor logger;\n \n@@ -81,4 +80,4 @@ public class QueryLoggerKernelExtension extends KernelExtensionFactory<QueryLogg\n             }\n         };\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
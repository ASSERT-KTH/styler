{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4239",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4239/Mknode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4239/Mknode.java\nindex 82a5601ebb7..51c8fddb214 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4239/Mknode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4239/Mknode.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.kernel.apps;\n \n import org.neo4j.graphdb.Node;\n@@ -30,42 +31,42 @@ import org.neo4j.shell.OptionValueType;\n import org.neo4j.shell.Output;\n import org.neo4j.shell.Session;\n \n-@Service.Implementation( App.class )\n+@Service.Implementation(App.class)\n public class Mknode extends TransactionProvidingApp\n {\n-    {\n-        addOptionDefinition( \"np\", new OptionDefinition( OptionValueType.MUST,\n-                \"Properties (a json map) to set for the new node (if one is created)\" ) );\n-        addOptionDefinition( \"cd\", new OptionDefinition( OptionValueType.NONE,\n-                \"Go to the created node, like doing 'cd'\" ) );\n-        addOptionDefinition( \"v\", new OptionDefinition( OptionValueType.NONE,\n-                \"Verbose mode: display created node\" ) );\n-        addOptionDefinition( \"l\", new OptionDefinition( OptionValueType.MUST,\n-                \"Labels to attach to the created node, either a single label or a JSON array\" ) );\n-    }\n+  {\n+    addOptionDefinition(\"np\", new OptionDefinition(OptionValueType.MUST,\n+        \"Properties (a json map) to set for the new node (if one is created)\"));\n+    addOptionDefinition(\"cd\", new OptionDefinition(OptionValueType.NONE,\n+        \"Go to the created node, like doing 'cd'\"));\n+    addOptionDefinition(\"v\", new OptionDefinition(OptionValueType.NONE,\n+        \"Verbose mode: display created node\"));\n+    addOptionDefinition(\"l\", new OptionDefinition(OptionValueType.MUST,\n+        \"Labels to attach to the created node, either a single label or a JSON array\"));\n+  }\n+\n+  @Override\n+  public String getDescription()\n+  {\n+    return \"Creates a new node, f.ex:\\n\" +\n+        \"mknode --cd --np \\\"{'name':'Neo'}\\\" -l PERSON\";\n+  }\n \n-    @Override\n-    public String getDescription()\n+  @Override\n+  protected Continuation exec(AppCommandParser parser, Session session, Output out) throws Exception\n+  {\n+    GraphDatabaseAPI db = getServer().getDb();\n+    Node node = db.createNode(parseLabels(parser));\n+\n+    setProperties(node, parser.option(\"np\", null));\n+    if (parser.options().containsKey(\"cd\"))\n     {\n-        return \"Creates a new node, f.ex:\\n\" +\n-                \"mknode --cd --np \\\"{'name':'Neo'}\\\" -l PERSON\";\n+      cdTo(session, node);\n     }\n-\n-    @Override\n-    protected Continuation exec( AppCommandParser parser, Session session, Output out ) throws Exception\n+    if (parser.options().containsKey(\"v\"))\n     {\n-        GraphDatabaseAPI db = getServer().getDb();\n-        Node node = db.createNode( parseLabels( parser ) );\n-\n-        setProperties( node, parser.option( \"np\", null ) );\n-        if ( parser.options().containsKey( \"cd\" ) )\n-        {\n-            cdTo( session, node );\n-        }\n-        if ( parser.options().containsKey( \"v\" ) )\n-        {\n-            out.println( \"Node \" + getDisplayName( getServer(), session, node, false ) + \" created\" );\n-        }\n-        return Continuation.INPUT_COMPLETE;\n+      out.println(\"Node \" + getDisplayName(getServer(), session, node, false) + \" created\");\n     }\n+    return Continuation.INPUT_COMPLETE;\n+  }\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4239/Mknode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4239/Mknode.java\nindex 82a5601ebb7..a6e953af5d0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4239/Mknode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4239/Mknode.java\n@@ -34,21 +34,16 @@ import org.neo4j.shell.Session;\n public class Mknode extends TransactionProvidingApp\n {\n     {\n-        addOptionDefinition( \"np\", new OptionDefinition( OptionValueType.MUST,\n-                \"Properties (a json map) to set for the new node (if one is created)\" ) );\n-        addOptionDefinition( \"cd\", new OptionDefinition( OptionValueType.NONE,\n-                \"Go to the created node, like doing 'cd'\" ) );\n-        addOptionDefinition( \"v\", new OptionDefinition( OptionValueType.NONE,\n-                \"Verbose mode: display created node\" ) );\n-        addOptionDefinition( \"l\", new OptionDefinition( OptionValueType.MUST,\n-                \"Labels to attach to the created node, either a single label or a JSON array\" ) );\n+        addOptionDefinition( \"np\", new OptionDefinition( OptionValueType.MUST, \"Properties (a json map) to set for the new node (if one is created)\" ) );\n+addOptionDefinition( \"cd\", new OptionDefinition( OptionValueType.NONE, \"Go to the created node, like doing 'cd'\" ) );\n+addOptionDefinition( \"v\", new OptionDefinition( OptionValueType.NONE, \"Verbose mode: display created node\" ) );\n+addOptionDefinition( \"l\", new OptionDefinition( OptionValueType.MUST, \"Labels to attach to the created node, either a single label or a JSON array\" ) );\n     }\n \n     @Override\n     public String getDescription()\n     {\n-        return \"Creates a new node, f.ex:\\n\" +\n-                \"mknode --cd --np \\\"{'name':'Neo'}\\\" -l PERSON\";\n+        return \"Creates a new node, f.ex:\\n\" + \"mknode --cd --np \\\"{'name':'Neo'}\\\" -l PERSON\";\n     }\n \n     @Override\n@@ -62,10 +57,12 @@ public class Mknode extends TransactionProvidingApp\n         {\n             cdTo( session, node );\n         }\n-        if ( parser.options().containsKey( \"v\" ) )\n+\n+if ( parser.options().containsKey( \"v\" ) )\n         {\n             out.println( \"Node \" + getDisplayName( getServer(), session, node, false ) + \" created\" );\n         }\n-        return Continuation.INPUT_COMPLETE;\n+\n+return Continuation.INPUT_COMPLETE;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
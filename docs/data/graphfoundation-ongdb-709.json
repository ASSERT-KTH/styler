{
    "project_name": "graphfoundation-ongdb",
    "error_id": "709",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "66",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "164",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "164",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "175",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "183",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "301",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "318",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/709/MemoryRecommendationsCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/709/MemoryRecommendationsCommand.java\nindex a65dd6e51c3..a2c53e67a8e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/709/MemoryRecommendationsCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/709/MemoryRecommendationsCommand.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.dbms;\n \n import java.io.File;\n@@ -58,335 +59,330 @@ import static org.neo4j.kernel.configuration.Settings.buildSetting;\n \n public class MemoryRecommendationsCommand implements AdminCommand\n {\n-    // Fields: {System Memory in GiBs; OS memory reserve in GiBs; JVM Heap memory in GiBs}.\n-    // And the page cache gets what's left, though always at least 100 MiB.\n-    // Heap never goes beyond 31 GiBs.\n-    private static final Bracket[] datapoints = {\n-            new Bracket( 0.01, 0.005, 0.005 ),\n-            new Bracket( 1.0, 0.5, 0.5 ),\n-            new Bracket( 2.0, 1, 0.5 ),\n-            new Bracket( 4.0, 1.5, 2 ),\n-            new Bracket( 6.0, 2, 3 ),\n-            new Bracket( 8.0, 2.5, 3.5 ),\n-            new Bracket( 10.0, 3, 4 ),\n-            new Bracket( 12.0, 3.5, 4.5 ),\n-            new Bracket( 16.0, 4, 5 ),\n-            new Bracket( 24.0, 6, 8 ),\n-            new Bracket( 32.0, 8, 12 ),\n-            new Bracket( 64.0, 12, 24 ),\n-            new Bracket( 128.0, 16, 31 ),\n-            new Bracket( 256.0, 20, 31 ),\n-            new Bracket( 512.0, 24, 31 ),\n-            new Bracket( 1024.0, 30, 31 ),\n-    };\n-    private static final String ARG_MEMORY = \"memory\";\n-    private final Path homeDir;\n-    private final OutsideWorld outsideWorld;\n-    private final Path configDir;\n-\n-    static long recommendOsMemory( long totalMemoryBytes )\n+  // Fields: {System Memory in GiBs; OS memory reserve in GiBs; JVM Heap memory in GiBs}.\n+  // And the page cache gets what's left, though always at least 100 MiB.\n+  // Heap never goes beyond 31 GiBs.\n+  private static final Bracket[] datapoints = {\n+      new Bracket(0.01, 0.005, 0.005),\n+      new Bracket(1.0, 0.5, 0.5),\n+      new Bracket(2.0, 1, 0.5),\n+      new Bracket(4.0, 1.5, 2),\n+      new Bracket(6.0, 2, 3),\n+      new Bracket(8.0, 2.5, 3.5),\n+      new Bracket(10.0, 3, 4),\n+      new Bracket(12.0, 3.5, 4.5),\n+      new Bracket(16.0, 4, 5),\n+      new Bracket(24.0, 6, 8),\n+      new Bracket(32.0, 8, 12),\n+      new Bracket(64.0, 12, 24),\n+      new Bracket(128.0, 16, 31),\n+      new Bracket(256.0, 20, 31),\n+      new Bracket(512.0, 24, 31),\n+      new Bracket(1024.0, 30, 31),\n+  };\n+  private static final String ARG_MEMORY = \"memory\";\n+  private final Path homeDir;\n+  private final OutsideWorld outsideWorld;\n+  private final Path configDir;\n+\n+  static long recommendOsMemory(long totalMemoryBytes)\n+  {\n+    Brackets brackets = findMemoryBrackets(totalMemoryBytes);\n+    return brackets.recommend(Bracket::osMemory);\n+  }\n+\n+  static long recommendHeapMemory(long totalMemoryBytes)\n+  {\n+    Brackets brackets = findMemoryBrackets(totalMemoryBytes);\n+    return brackets.recommend(Bracket::heapMemory);\n+  }\n+\n+  static long recommendPageCacheMemory(long totalMemoryBytes)\n+  {\n+    long osMemory = recommendOsMemory(totalMemoryBytes);\n+    long heapMemory = recommendHeapMemory(totalMemoryBytes);\n+    long recommendation = totalMemoryBytes - osMemory - heapMemory;\n+    recommendation = Math.max(mebiBytes(100), recommendation);\n+    recommendation = Math.min(tebiBytes(16), recommendation);\n+    return recommendation;\n+  }\n+\n+  private static Brackets findMemoryBrackets(long totalMemoryBytes)\n+  {\n+    double totalMemoryGB = ((double) totalMemoryBytes) / ((double) gibiBytes(1));\n+    Bracket lower = null;\n+    Bracket upper = null;\n+    for (int i = 1; i < datapoints.length; i++)\n     {\n-        Brackets brackets = findMemoryBrackets( totalMemoryBytes );\n-        return brackets.recommend( Bracket::osMemory );\n+      if (totalMemoryGB < datapoints[i].totalMemory)\n+      {\n+        lower = datapoints[i - 1];\n+        upper = datapoints[i];\n+        break;\n+      }\n     }\n-\n-    static long recommendHeapMemory( long totalMemoryBytes )\n+    if (lower == null)\n     {\n-        Brackets brackets = findMemoryBrackets( totalMemoryBytes );\n-        return brackets.recommend( Bracket::heapMemory );\n+      lower = datapoints[datapoints.length - 1];\n+      upper = datapoints[datapoints.length - 1];\n     }\n-\n-    static long recommendPageCacheMemory( long totalMemoryBytes )\n+    return new Brackets(totalMemoryGB, lower, upper);\n+  }\n+\n+  public static Arguments buildArgs()\n+  {\n+    String memory = bytesToString(OsBeanUtil.getTotalPhysicalMemory());\n+    return new Arguments()\n+        .withArgument(new OptionalNamedArg(ARG_MEMORY, memory, memory,\n+            \"Recommend memory settings with respect to the given amount of memory, \" +\n+                \"instead of the total memory of the system running the command.\"))\n+        .withDatabase(\n+            \"Name of specific database to calculate page cache memory requirement for. \" +\n+                \"The generic calculation is still a good generic recommendation for this machine, \" +\n+                \"but there will be an additional calculation for minimal required page cache memory \" +\n+                \"for mapping all store and index files that are managed by the page cache.\");\n+  }\n+\n+  static String bytesToString(double bytes)\n+  {\n+    double gibi1 = ONE_GIBI_BYTE;\n+    double mebi1 = ONE_MEBI_BYTE;\n+    double mebi100 = 100 * mebi1;\n+    double kibi1 = ONE_KIBI_BYTE;\n+    double kibi100 = 100 * kibi1;\n+    if (bytes >= gibi1)\n     {\n-        long osMemory = recommendOsMemory( totalMemoryBytes );\n-        long heapMemory = recommendHeapMemory( totalMemoryBytes );\n-        long recommendation = totalMemoryBytes - osMemory - heapMemory;\n-        recommendation = Math.max( mebiBytes( 100 ), recommendation );\n-        recommendation = Math.min( tebiBytes( 16 ), recommendation );\n-        return recommendation;\n-    }\n-\n-    private static Brackets findMemoryBrackets( long totalMemoryBytes )\n+      double gibibytes = bytes / gibi1;\n+      double modMebi = bytes % gibi1;\n+      if (modMebi >= mebi100)\n+      {\n+        return format(Locale.ROOT, \"%dm\", Math.round(bytes / mebi100) * 100);\n+      } else\n+      {\n+        return format(Locale.ROOT, \"%.0fg\", gibibytes);\n+      }\n+    } else if (bytes >= mebi1)\n     {\n-        double totalMemoryGB = ((double) totalMemoryBytes) / ((double) gibiBytes( 1 ));\n-        Bracket lower = null;\n-        Bracket upper = null;\n-        for ( int i = 1; i < datapoints.length; i++ )\n-        {\n-            if ( totalMemoryGB < datapoints[i].totalMemory )\n-            {\n-                lower = datapoints[i - 1];\n-                upper = datapoints[i];\n-                break;\n-            }\n-        }\n-        if ( lower == null )\n-        {\n-            lower = datapoints[datapoints.length - 1];\n-            upper = datapoints[datapoints.length - 1];\n-        }\n-        return new Brackets( totalMemoryGB, lower, upper );\n-    }\n-\n-    public static Arguments buildArgs()\n+      double mebibytes = bytes / mebi1;\n+      double modKibi = bytes % mebi1;\n+      if (modKibi >= kibi100)\n+      {\n+        return format(Locale.ROOT, \"%dk\", Math.round(bytes / kibi100) * 100);\n+      } else\n+      {\n+        return format(Locale.ROOT, \"%.0fm\", mebibytes);\n+      }\n+    } else\n     {\n-        String memory = bytesToString( OsBeanUtil.getTotalPhysicalMemory() );\n-        return new Arguments()\n-                .withArgument( new OptionalNamedArg( ARG_MEMORY, memory, memory,\n-                        \"Recommend memory settings with respect to the given amount of memory, \" +\n-                        \"instead of the total memory of the system running the command.\" ) )\n-                .withDatabase(\n-                        \"Name of specific database to calculate page cache memory requirement for. \" +\n-                        \"The generic calculation is still a good generic recommendation for this machine, \" +\n-                        \"but there will be an additional calculation for minimal required page cache memory \" +\n-                        \"for mapping all store and index files that are managed by the page cache.\" );\n+      // For kilobytes there's no need to bother with decimals, just print a rough figure rounded upwards\n+      double kibiBytes = bytes / kibi1;\n+      return format(Locale.ROOT, \"%dk\", (long) Math.ceil(kibiBytes));\n     }\n-\n-    static String bytesToString( double bytes )\n+  }\n+\n+  MemoryRecommendationsCommand(Path homeDir, Path configDir, OutsideWorld outsideWorld)\n+  {\n+    this.homeDir = homeDir;\n+    this.outsideWorld = outsideWorld;\n+    this.configDir = configDir;\n+  }\n+\n+  @Override\n+  public void execute(String[] args) throws IncorrectUsage, CommandFailed\n+  {\n+    Arguments arguments = buildArgs().parse(args);\n+\n+    String mem = arguments.get(ARG_MEMORY);\n+    long memory = buildSetting(ARG_MEMORY, BYTES).build().apply(arguments::get);\n+    String os = bytesToString(recommendOsMemory(memory));\n+    String heap = bytesToString(recommendHeapMemory(memory));\n+    String pagecache = bytesToString(recommendPageCacheMemory(memory));\n+    boolean specificDb = arguments.has(ARG_DATABASE);\n+\n+    print(\"# Memory settings recommendation from neo4j-admin memrec:\");\n+    print(\"#\");\n+    print(\"# Assuming the system is dedicated to running Neo4j and has \" + mem + \" of memory,\");\n+    print(\"# we recommend a heap size of around \" + heap + \", and a page cache of around \" + pagecache + \",\");\n+    print(\"# and that about \" + os + \" is left for the operating system, and the native memory\");\n+    print(\"# needed by Lucene and Netty.\");\n+    print(\"#\");\n+    print(\"# Tip: If the indexing storage use is high, e.g. there are many indexes or most\");\n+    print(\"# data indexed, then it might advantageous to leave more memory for the\");\n+    print(\"# operating system.\");\n+    print(\"#\");\n+    print(\"# Tip: The more concurrent transactions your workload has and the more updates\");\n+    print(\"# they do, the more heap memory you will need. However, don't allocate more\");\n+    print(\"# than 31g of heap, since this will disable pointer compression, also known as\");\n+    print(\"# \\\"compressed oops\\\", in the JVM and make less effective use of the heap.\");\n+    print(\"#\");\n+    print(\"# Tip: Setting the initial and the max heap size to the same value means the\");\n+    print(\"# JVM will never need to change the heap size. Changing the heap size otherwise\");\n+    print(\"# involves a full GC, which is desirable to avoid.\");\n+    print(\"#\");\n+    print(\"# Based on the above, the following memory settings are recommended:\");\n+    print(initialHeapSize.name() + \"=\" + heap);\n+    print(maxHeapSize.name() + \"=\" + heap);\n+    print(pagecache_memory.name() + \"=\" + pagecache);\n+\n+    if (!specificDb)\n     {\n-        double gibi1 = ONE_GIBI_BYTE;\n-        double mebi1 = ONE_MEBI_BYTE;\n-        double mebi100 = 100 * mebi1;\n-        double kibi1 = ONE_KIBI_BYTE;\n-        double kibi100 = 100 * kibi1;\n-        if ( bytes >= gibi1 )\n-        {\n-            double gibibytes = bytes / gibi1;\n-            double modMebi = bytes % gibi1;\n-            if ( modMebi >= mebi100 )\n-            {\n-                return format( Locale.ROOT, \"%dm\", Math.round( bytes / mebi100 ) * 100 );\n-            }\n-            else\n-            {\n-                return format( Locale.ROOT, \"%.0fg\", gibibytes );\n-            }\n-        }\n-        else if ( bytes >= mebi1 )\n-        {\n-            double mebibytes = bytes / mebi1;\n-            double modKibi = bytes % mebi1;\n-            if ( modKibi >= kibi100 )\n-            {\n-                return format( Locale.ROOT, \"%dk\", Math.round( bytes / kibi100 ) * 100 );\n-            }\n-            else\n-            {\n-                return format( Locale.ROOT, \"%.0fm\", mebibytes );\n-            }\n-        }\n-        else\n-        {\n-            // For kilobytes there's no need to bother with decimals, just print a rough figure rounded upwards\n-            double kibiBytes = bytes / kibi1;\n-            return format( Locale.ROOT, \"%dk\", (long) Math.ceil( kibiBytes ) );\n-        }\n+      return;\n     }\n+    String databaseName = arguments.get(ARG_DATABASE);\n+    File configFile = configDir.resolve(Config.DEFAULT_CONFIG_FILE_NAME).toFile();\n+    File storeDir = getConfig(configFile, databaseName).get(database_path);\n+    long pageCacheSize = dbSpecificPageCacheSize(storeDir);\n+    long luceneSize = dbSpecificLuceneSize(storeDir);\n+\n+    print(\"#\");\n+    print(\"# The numbers below have been derived based on your current data volume in database and index configuration of database '\" + databaseName +\n+        \"'.\");\n+    print(\"# They can be used as an input into more detailed memory analysis.\");\n+    print(\"# Lucene indexes: \" + bytesToString(luceneSize));\n+    print(\"# Data volume and native indexes: \" + bytesToString(pageCacheSize));\n+  }\n+\n+  private long dbSpecificPageCacheSize(File storeDir)\n+  {\n+    return sumStoreFiles(storeDir) + sumIndexFiles(baseSchemaIndexFolder(storeDir), getNativeIndexFileFilter(storeDir, false));\n+  }\n+\n+  private long dbSpecificLuceneSize(File storeDir)\n+  {\n+    return sumIndexFiles(baseSchemaIndexFolder(storeDir), getNativeIndexFileFilter(storeDir, true));\n+  }\n+\n+  private FilenameFilter getNativeIndexFileFilter(File storeDir, boolean inverse)\n+  {\n+    FileFilter nativeIndexFilter = new NativeIndexFileFilter(storeDir);\n+    return (dir, name) ->\n+    {\n+      File file = new File(dir, name);\n+      if (outsideWorld.fileSystem().isDirectory(file))\n+      {\n+        // Always go down directories\n+        return true;\n+      }\n+      if (name.equals(FailureStorage.DEFAULT_FAILURE_FILE_NAME))\n+      {\n+        // Never include failure-storage files\n+        return false;\n+      }\n+\n+      return inverse != nativeIndexFilter.accept(file);\n+    };\n+  }\n \n-    MemoryRecommendationsCommand( Path homeDir, Path configDir, OutsideWorld outsideWorld )\n+  private long sumStoreFiles(File storeDir)\n+  {\n+    long total = 0;\n+    // Include store files\n+    for (StoreType type : StoreType.values())\n     {\n-        this.homeDir = homeDir;\n-        this.outsideWorld = outsideWorld;\n-        this.configDir = configDir;\n+      if (type.isRecordStore())\n+      {\n+        File file = new File(storeDir, type.getStoreFile().storeFileName());\n+        total += sizeOfFileIfExists(file);\n+      }\n     }\n-\n-    @Override\n-    public void execute( String[] args ) throws IncorrectUsage, CommandFailed\n+    // Include label index\n+    total += sizeOfFileIfExists(new File(storeDir, NativeLabelScanStore.FILE_NAME));\n+    return total;\n+  }\n+\n+  private long sizeOfFileIfExists(File file)\n+  {\n+    return outsideWorld.fileSystem().fileExists(file) ? outsideWorld.fileSystem().getFileSize(file) : 0;\n+  }\n+\n+  private long sumIndexFiles(File file, FilenameFilter filter)\n+  {\n+    long total = 0;\n+    if (outsideWorld.fileSystem().isDirectory(file))\n     {\n-        Arguments arguments = buildArgs().parse( args );\n-\n-        String mem = arguments.get( ARG_MEMORY );\n-        long memory = buildSetting( ARG_MEMORY, BYTES ).build().apply( arguments::get );\n-        String os = bytesToString( recommendOsMemory( memory ) );\n-        String heap = bytesToString( recommendHeapMemory( memory ) );\n-        String pagecache = bytesToString( recommendPageCacheMemory( memory ) );\n-        boolean specificDb = arguments.has( ARG_DATABASE );\n-\n-        print( \"# Memory settings recommendation from neo4j-admin memrec:\" );\n-        print( \"#\" );\n-        print( \"# Assuming the system is dedicated to running Neo4j and has \" + mem + \" of memory,\" );\n-        print( \"# we recommend a heap size of around \" + heap + \", and a page cache of around \" + pagecache + \",\" );\n-        print( \"# and that about \" + os + \" is left for the operating system, and the native memory\" );\n-        print( \"# needed by Lucene and Netty.\" );\n-        print( \"#\" );\n-        print( \"# Tip: If the indexing storage use is high, e.g. there are many indexes or most\" );\n-        print( \"# data indexed, then it might advantageous to leave more memory for the\" );\n-        print( \"# operating system.\" );\n-        print( \"#\" );\n-        print( \"# Tip: The more concurrent transactions your workload has and the more updates\" );\n-        print( \"# they do, the more heap memory you will need. However, don't allocate more\" );\n-        print( \"# than 31g of heap, since this will disable pointer compression, also known as\" );\n-        print( \"# \\\"compressed oops\\\", in the JVM and make less effective use of the heap.\" );\n-        print( \"#\" );\n-        print( \"# Tip: Setting the initial and the max heap size to the same value means the\" );\n-        print( \"# JVM will never need to change the heap size. Changing the heap size otherwise\" );\n-        print( \"# involves a full GC, which is desirable to avoid.\" );\n-        print( \"#\" );\n-        print( \"# Based on the above, the following memory settings are recommended:\" );\n-        print( initialHeapSize.name() + \"=\" + heap );\n-        print( maxHeapSize.name() + \"=\" + heap );\n-        print( pagecache_memory.name() + \"=\" + pagecache );\n-\n-        if ( !specificDb )\n+      File[] children = outsideWorld.fileSystem().listFiles(file, filter);\n+      if (children != null)\n+      {\n+        for (File child : children)\n         {\n-            return;\n+          total += sumIndexFiles(child, filter);\n         }\n-        String databaseName = arguments.get( ARG_DATABASE );\n-        File configFile = configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME ).toFile();\n-        File storeDir = getConfig( configFile, databaseName ).get( database_path );\n-        long pageCacheSize = dbSpecificPageCacheSize( storeDir );\n-        long luceneSize = dbSpecificLuceneSize( storeDir );\n-\n-        print( \"#\" );\n-        print( \"# The numbers below have been derived based on your current data volume in database and index configuration of database '\" + databaseName +\n-                \"'.\" );\n-        print( \"# They can be used as an input into more detailed memory analysis.\" );\n-        print( \"# Lucene indexes: \" + bytesToString( luceneSize ) );\n-        print( \"# Data volume and native indexes: \" + bytesToString( pageCacheSize ) );\n-    }\n-\n-    private long dbSpecificPageCacheSize( File storeDir )\n+      }\n+    } else\n     {\n-        return sumStoreFiles( storeDir ) + sumIndexFiles( baseSchemaIndexFolder( storeDir ), getNativeIndexFileFilter( storeDir, false ) );\n+      total += outsideWorld.fileSystem().getFileSize(file);\n     }\n+    return total;\n+  }\n \n-    private long dbSpecificLuceneSize( File storeDir )\n+  private Config getConfig(File configFile, String databaseName) throws CommandFailed\n+  {\n+    if (!outsideWorld.fileSystem().fileExists(configFile))\n     {\n-        return sumIndexFiles( baseSchemaIndexFolder( storeDir ), getNativeIndexFileFilter( storeDir, true ) );\n+      throw new CommandFailed(\"Unable to find config file, tried: \" + configFile.getAbsolutePath());\n     }\n+    return Config.fromFile(configFile).withHome(homeDir).withSetting(active_database, databaseName).withConnectorsDisabled().build();\n+  }\n \n-    private FilenameFilter getNativeIndexFileFilter( File storeDir, boolean inverse )\n-    {\n-        FileFilter nativeIndexFilter = new NativeIndexFileFilter( storeDir );\n-        return ( dir, name ) ->\n-        {\n-            File file = new File( dir, name );\n-            if ( outsideWorld.fileSystem().isDirectory( file ) )\n-            {\n-                // Always go down directories\n-                return true;\n-            }\n-            if ( name.equals( FailureStorage.DEFAULT_FAILURE_FILE_NAME ) )\n-            {\n-                // Never include failure-storage files\n-                return false;\n-            }\n-\n-            return inverse != nativeIndexFilter.accept( file );\n-        };\n-    }\n+  private void print(String text)\n+  {\n+    outsideWorld.stdOutLine(text);\n+  }\n \n-    private long sumStoreFiles( File storeDir )\n-    {\n-        long total = 0;\n-        // Include store files\n-        for ( StoreType type : StoreType.values() )\n-        {\n-            if ( type.isRecordStore() )\n-            {\n-                File file = new File( storeDir, type.getStoreFile().storeFileName() );\n-                total += sizeOfFileIfExists( file );\n-            }\n-        }\n-        // Include label index\n-        total += sizeOfFileIfExists( new File( storeDir, NativeLabelScanStore.FILE_NAME ) );\n-        return total;\n-    }\n+  private static final class Bracket\n+  {\n+    private final double totalMemory;\n+    private final double osMemory;\n+    private final double heapMemory;\n \n-    private long sizeOfFileIfExists( File file )\n+    private Bracket(double totalMemory, double osMemory, double heapMemory)\n     {\n-        return outsideWorld.fileSystem().fileExists( file ) ? outsideWorld.fileSystem().getFileSize( file ) : 0;\n+      this.totalMemory = totalMemory;\n+      this.osMemory = osMemory;\n+      this.heapMemory = heapMemory;\n     }\n \n-    private long sumIndexFiles( File file, FilenameFilter filter )\n+    double osMemory()\n     {\n-        long total = 0;\n-        if ( outsideWorld.fileSystem().isDirectory( file ) )\n-        {\n-            File[] children = outsideWorld.fileSystem().listFiles( file, filter );\n-            if ( children != null )\n-            {\n-                for ( File child : children )\n-                {\n-                    total += sumIndexFiles( child, filter );\n-                }\n-            }\n-        }\n-        else\n-        {\n-            total += outsideWorld.fileSystem().getFileSize( file );\n-        }\n-        return total;\n+      return osMemory;\n     }\n \n-    private Config getConfig( File configFile, String databaseName ) throws CommandFailed\n+    double heapMemory()\n     {\n-        if ( !outsideWorld.fileSystem().fileExists( configFile ) )\n-        {\n-            throw new CommandFailed( \"Unable to find config file, tried: \" + configFile.getAbsolutePath() );\n-        }\n-        return Config.fromFile( configFile ).withHome( homeDir ).withSetting( active_database, databaseName ).withConnectorsDisabled().build();\n+      return heapMemory;\n     }\n+  }\n \n-    private void print( String text )\n+  private static final class Brackets\n+  {\n+    private final double totalMemoryGB;\n+    private final Bracket lower;\n+    private final Bracket upper;\n+\n+    private Brackets(double totalMemoryGB, Bracket lower, Bracket upper)\n     {\n-        outsideWorld.stdOutLine( text );\n+      this.totalMemoryGB = totalMemoryGB;\n+      this.lower = lower;\n+      this.upper = upper;\n     }\n \n-    private static final class Bracket\n+    private double differenceFactor()\n     {\n-        private final double totalMemory;\n-        private final double osMemory;\n-        private final double heapMemory;\n-\n-        private Bracket( double totalMemory, double osMemory, double heapMemory )\n-        {\n-            this.totalMemory = totalMemory;\n-            this.osMemory = osMemory;\n-            this.heapMemory = heapMemory;\n-        }\n-\n-        double osMemory()\n-        {\n-            return osMemory;\n-        }\n-\n-        double heapMemory()\n-        {\n-            return heapMemory;\n-        }\n+      if (lower == upper)\n+      {\n+        return 0;\n+      }\n+      return (totalMemoryGB - lower.totalMemory) / (upper.totalMemory - lower.totalMemory);\n     }\n \n-    private static final class Brackets\n+    public long recommend(ToDoubleFunction<Bracket> parameter)\n     {\n-        private final double totalMemoryGB;\n-        private final Bracket lower;\n-        private final Bracket upper;\n-\n-        private Brackets( double totalMemoryGB, Bracket lower, Bracket upper )\n-        {\n-            this.totalMemoryGB = totalMemoryGB;\n-            this.lower = lower;\n-            this.upper = upper;\n-        }\n-\n-        private double differenceFactor()\n-        {\n-            if ( lower == upper )\n-            {\n-                return 0;\n-            }\n-            return (totalMemoryGB - lower.totalMemory) / (upper.totalMemory - lower.totalMemory);\n-        }\n-\n-        public long recommend( ToDoubleFunction<Bracket> parameter )\n-        {\n-            double factor = differenceFactor();\n-            double lowerParam = parameter.applyAsDouble( lower );\n-            double upperParam = parameter.applyAsDouble( upper );\n-            double diff = upperParam - lowerParam;\n-            double recommend = lowerParam + (diff * factor);\n-            return mebiBytes( (long) (recommend * 1024.0) );\n-        }\n+      double factor = differenceFactor();\n+      double lowerParam = parameter.applyAsDouble(lower);\n+      double upperParam = parameter.applyAsDouble(upper);\n+      double diff = upperParam - lowerParam;\n+      double recommend = lowerParam + (diff * factor);\n+      return mebiBytes((long) (recommend * 1024.0));\n     }\n+  }\n }\n",
            "diff_size": 470
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 516).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 584).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "217",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/709/MemoryRecommendationsCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/709/MemoryRecommendationsCommand.java\nindex a65dd6e51c3..bc96024043c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/709/MemoryRecommendationsCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/709/MemoryRecommendationsCommand.java\n@@ -61,25 +61,10 @@ public class MemoryRecommendationsCommand implements AdminCommand\n     // Fields: {System Memory in GiBs; OS memory reserve in GiBs; JVM Heap memory in GiBs}.\n     // And the page cache gets what's left, though always at least 100 MiB.\n     // Heap never goes beyond 31 GiBs.\n-    private static final Bracket[] datapoints = {\n-            new Bracket( 0.01, 0.005, 0.005 ),\n-            new Bracket( 1.0, 0.5, 0.5 ),\n-            new Bracket( 2.0, 1, 0.5 ),\n-            new Bracket( 4.0, 1.5, 2 ),\n-            new Bracket( 6.0, 2, 3 ),\n-            new Bracket( 8.0, 2.5, 3.5 ),\n-            new Bracket( 10.0, 3, 4 ),\n-            new Bracket( 12.0, 3.5, 4.5 ),\n-            new Bracket( 16.0, 4, 5 ),\n-            new Bracket( 24.0, 6, 8 ),\n-            new Bracket( 32.0, 8, 12 ),\n-            new Bracket( 64.0, 12, 24 ),\n-            new Bracket( 128.0, 16, 31 ),\n-            new Bracket( 256.0, 20, 31 ),\n-            new Bracket( 512.0, 24, 31 ),\n-            new Bracket( 1024.0, 30, 31 ),\n+    private static final Bracket[] datapoints = { new Bracket( 0.01, 0.005, 0.005 ), new Bracket( 1.0, 0.5, 0.5 ), new Bracket( 2.0, 1, 0.5 ), new Bracket( 4.0, 1.5, 2 ), new Bracket( 6.0, 2, 3 ), new Bracket( 8.0, 2.5, 3.5 ), new Bracket( 10.0, 3, 4 ), new Bracket( 12.0, 3.5, 4.5 ), new Bracket( 16.0, 4, 5 ), new Bracket( 24.0, 6, 8 ), new Bracket( 32.0, 8, 12 ), new Bracket( 64.0, 12, 24 ), new Bracket( 128.0, 16, 31 ), new Bracket( 256.0, 20, 31 ), new Bracket( 512.0, 24, 31 ), new Bracket( 1024.0, 30, 31 ),\n     };\n-    private static final String ARG_MEMORY = \"memory\";\n+\n+private static final String ARG_MEMORY = \"memory\";\n     private final Path homeDir;\n     private final OutsideWorld outsideWorld;\n     private final Path configDir;\n@@ -131,15 +116,7 @@ public class MemoryRecommendationsCommand implements AdminCommand\n     public static Arguments buildArgs()\n     {\n         String memory = bytesToString( OsBeanUtil.getTotalPhysicalMemory() );\n-        return new Arguments()\n-                .withArgument( new OptionalNamedArg( ARG_MEMORY, memory, memory,\n-                        \"Recommend memory settings with respect to the given amount of memory, \" +\n-                        \"instead of the total memory of the system running the command.\" ) )\n-                .withDatabase(\n-                        \"Name of specific database to calculate page cache memory requirement for. \" +\n-                        \"The generic calculation is still a good generic recommendation for this machine, \" +\n-                        \"but there will be an additional calculation for minimal required page cache memory \" +\n-                        \"for mapping all store and index files that are managed by the page cache.\" );\n+        return new Arguments().withArgument( new OptionalNamedArg( ARG_MEMORY, memory, memory, \"Recommend memory settings with respect to the given amount of memory, \" + \"instead of the total memory of the system running the command.\" ) ).withDatabase( \"Name of specific database to calculate page cache memory requirement for. \" + \"The generic calculation is still a good generic recommendation for this machine, \" + \"but there will be an additional calculation for minimal required page cache memory \" + \"for mapping all store and index files that are managed by the page cache.\" );\n     }\n \n     static String bytesToString( double bytes )\n@@ -194,8 +171,7 @@ public class MemoryRecommendationsCommand implements AdminCommand\n     public void execute( String[] args ) throws IncorrectUsage, CommandFailed\n     {\n         Arguments arguments = buildArgs().parse( args );\n-\n-        String mem = arguments.get( ARG_MEMORY );\n+String mem = arguments.get( ARG_MEMORY );\n         long memory = buildSetting( ARG_MEMORY, BYTES ).build().apply( arguments::get );\n         String os = bytesToString( recommendOsMemory( memory ) );\n         String heap = bytesToString( recommendHeapMemory( memory ) );\n@@ -226,21 +202,20 @@ public class MemoryRecommendationsCommand implements AdminCommand\n         print( initialHeapSize.name() + \"=\" + heap );\n         print( maxHeapSize.name() + \"=\" + heap );\n         print( pagecache_memory.name() + \"=\" + pagecache );\n-\n-        if ( !specificDb )\n+if ( !specificDb )\n         {\n             return;\n         }\n-        String databaseName = arguments.get( ARG_DATABASE );\n+\n+String databaseName = arguments.get( ARG_DATABASE );\n         File configFile = configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME ).toFile();\n         File storeDir = getConfig( configFile, databaseName ).get( database_path );\n         long pageCacheSize = dbSpecificPageCacheSize( storeDir );\n         long luceneSize = dbSpecificLuceneSize( storeDir );\n \n         print( \"#\" );\n-        print( \"# The numbers below have been derived based on your current data volume in database and index configuration of database '\" + databaseName +\n-                \"'.\" );\n-        print( \"# They can be used as an input into more detailed memory analysis.\" );\n+        print( \"# The numbers below have been derived based on your current data volume in database and index configuration of database '\" + databaseName + \"'.\" );\n+print( \"# They can be used as an input into more detailed memory analysis.\" );\n         print( \"# Lucene indexes: \" + bytesToString( luceneSize ) );\n         print( \"# Data volume and native indexes: \" + bytesToString( pageCacheSize ) );\n     }\n@@ -266,7 +241,8 @@ public class MemoryRecommendationsCommand implements AdminCommand\n                 // Always go down directories\n                 return true;\n             }\n-            if ( name.equals( FailureStorage.DEFAULT_FAILURE_FILE_NAME ) )\n+\n+if ( name.equals( FailureStorage.DEFAULT_FAILURE_FILE_NAME ) )\n             {\n                 // Never include failure-storage files\n                 return false;\n@@ -316,7 +292,8 @@ public class MemoryRecommendationsCommand implements AdminCommand\n         {\n             total += outsideWorld.fileSystem().getFileSize( file );\n         }\n-        return total;\n+\n+return total;\n     }\n \n     private Config getConfig( File configFile, String databaseName ) throws CommandFailed\n@@ -325,7 +302,8 @@ public class MemoryRecommendationsCommand implements AdminCommand\n         {\n             throw new CommandFailed( \"Unable to find config file, tried: \" + configFile.getAbsolutePath() );\n         }\n-        return Config.fromFile( configFile ).withHome( homeDir ).withSetting( active_database, databaseName ).withConnectorsDisabled().build();\n+\n+return Config.fromFile( configFile ).withHome( homeDir ).withSetting( active_database, databaseName ).withConnectorsDisabled().build();\n     }\n \n     private void print( String text )\n@@ -376,7 +354,7 @@ public class MemoryRecommendationsCommand implements AdminCommand\n             {\n                 return 0;\n             }\n-            return (totalMemoryGB - lower.totalMemory) / (upper.totalMemory - lower.totalMemory);\n+            return ( totalMemoryGB - lower.totalMemory) / (upper.totalMemory - lower.totalMemory);\n         }\n \n         public long recommend( ToDoubleFunction<Bracket> parameter )\n@@ -385,8 +363,8 @@ public class MemoryRecommendationsCommand implements AdminCommand\n             double lowerParam = parameter.applyAsDouble( lower );\n             double upperParam = parameter.applyAsDouble( upper );\n             double diff = upperParam - lowerParam;\n-            double recommend = lowerParam + (diff * factor);\n-            return mebiBytes( (long) (recommend * 1024.0) );\n+            double recommend = lowerParam + ( diff * factor);\n+            return mebiBytes( (long) ( recommend * 1024.0) );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 47
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 518).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "column": "47",
                    "severity": "error",
                    "message": "'-' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "98",
                    "column": "57",
                    "severity": "error",
                    "message": "'-' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "106",
                    "column": "59",
                    "severity": "error",
                    "message": "'/' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 584).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "138",
                    "column": "29",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "140",
                    "column": "29",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "143",
                    "column": "37",
                    "severity": "error",
                    "message": "'/' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "144",
                    "column": "35",
                    "severity": "error",
                    "message": "'%' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "147",
                    "column": "69",
                    "severity": "error",
                    "message": "'/' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "147",
                    "column": "80",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "157",
                    "column": "37",
                    "severity": "error",
                    "message": "'/' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "158",
                    "column": "35",
                    "severity": "error",
                    "message": "'%' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "161",
                    "column": "69",
                    "severity": "error",
                    "message": "'/' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "161",
                    "column": "80",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "171",
                    "column": "41",
                    "severity": "error",
                    "message": "'/' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "196",
                    "column": "62",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "228",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "270",
                    "column": "9",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "298",
                    "column": "17",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "298",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "371",
                    "column": "56",
                    "severity": "error",
                    "message": "'/' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "380",
                    "column": "51",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "381",
                    "column": "49",
                    "severity": "error",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/709/MemoryRecommendationsCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/709/MemoryRecommendationsCommand.java\nindex a65dd6e51c3..091f2775f99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/709/MemoryRecommendationsCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/709/MemoryRecommendationsCommand.java\n@@ -25,7 +25,6 @@ import java.io.FilenameFilter;\n import java.nio.file.Path;\n import java.util.Locale;\n import java.util.function.ToDoubleFunction;\n-\n import org.neo4j.commandline.admin.AdminCommand;\n import org.neo4j.commandline.admin.CommandFailed;\n import org.neo4j.commandline.admin.IncorrectUsage;\n@@ -38,22 +37,36 @@ import org.neo4j.kernel.configuration.Config;\n import org.neo4j.kernel.impl.index.labelscan.NativeLabelScanStore;\n import org.neo4j.kernel.impl.store.StoreType;\n import org.neo4j.kernel.internal.NativeIndexFileFilter;\n-\n import static java.lang.String.format;\n+\n import static org.neo4j.commandline.arguments.common.Database.ARG_DATABASE;\n+\n import static org.neo4j.configuration.ExternalSettings.initialHeapSize;\n+\n import static org.neo4j.configuration.ExternalSettings.maxHeapSize;\n+\n import static org.neo4j.graphdb.factory.GraphDatabaseSettings.active_database;\n+\n import static org.neo4j.graphdb.factory.GraphDatabaseSettings.database_path;\n+\n import static org.neo4j.graphdb.factory.GraphDatabaseSettings.pagecache_memory;\n+\n import static org.neo4j.io.ByteUnit.ONE_GIBI_BYTE;\n+\n import static org.neo4j.io.ByteUnit.ONE_KIBI_BYTE;\n+\n import static org.neo4j.io.ByteUnit.ONE_MEBI_BYTE;\n+\n import static org.neo4j.io.ByteUnit.gibiBytes;\n+\n import static org.neo4j.io.ByteUnit.mebiBytes;\n+\n import static org.neo4j.io.ByteUnit.tebiBytes;\n+\n import static org.neo4j.kernel.api.index.IndexDirectoryStructure.baseSchemaIndexFolder;\n+\n import static org.neo4j.kernel.configuration.Settings.BYTES;\n+\n import static org.neo4j.kernel.configuration.Settings.buildSetting;\n \n public class MemoryRecommendationsCommand implements AdminCommand\n@@ -61,29 +74,11 @@ public class MemoryRecommendationsCommand implements AdminCommand\n     // Fields: {System Memory in GiBs; OS memory reserve in GiBs; JVM Heap memory in GiBs}.\n     // And the page cache gets what's left, though always at least 100 MiB.\n     // Heap never goes beyond 31 GiBs.\n-    private static final Bracket[] datapoints = {\n-            new Bracket( 0.01, 0.005, 0.005 ),\n-            new Bracket( 1.0, 0.5, 0.5 ),\n-            new Bracket( 2.0, 1, 0.5 ),\n-            new Bracket( 4.0, 1.5, 2 ),\n-            new Bracket( 6.0, 2, 3 ),\n-            new Bracket( 8.0, 2.5, 3.5 ),\n-            new Bracket( 10.0, 3, 4 ),\n-            new Bracket( 12.0, 3.5, 4.5 ),\n-            new Bracket( 16.0, 4, 5 ),\n-            new Bracket( 24.0, 6, 8 ),\n-            new Bracket( 32.0, 8, 12 ),\n-            new Bracket( 64.0, 12, 24 ),\n-            new Bracket( 128.0, 16, 31 ),\n-            new Bracket( 256.0, 20, 31 ),\n-            new Bracket( 512.0, 24, 31 ),\n-            new Bracket( 1024.0, 30, 31 ),\n-    };\n+    private static final Bracket[] datapoints = { new Bracket( 0.01, 0.005, 0.005 ), new Bracket( 1.0, 0.5, 0.5 ), new Bracket( 2.0, 1, 0.5 ), new Bracket( 4.0, 1.5, 2 ), new Bracket( 6.0, 2, 3 ), new Bracket( 8.0, 2.5, 3.5 ), new Bracket( 10.0, 3, 4 ), new Bracket( 12.0, 3.5, 4.5 ), new Bracket( 16.0, 4, 5 ), new Bracket( 24.0, 6, 8 ), new Bracket( 32.0, 8, 12 ), new Bracket( 64.0, 12, 24 ), new Bracket( 128.0, 16, 31 ), new Bracket( 256.0, 20, 31 ), new Bracket( 512.0, 24, 31 ), new Bracket( 1024.0, 30, 31 ),};\n     private static final String ARG_MEMORY = \"memory\";\n     private final Path homeDir;\n     private final OutsideWorld outsideWorld;\n     private final Path configDir;\n-\n     static long recommendOsMemory( long totalMemoryBytes )\n     {\n         Brackets brackets = findMemoryBrackets( totalMemoryBytes );\n@@ -100,7 +95,7 @@ public class MemoryRecommendationsCommand implements AdminCommand\n     {\n         long osMemory = recommendOsMemory( totalMemoryBytes );\n         long heapMemory = recommendHeapMemory( totalMemoryBytes );\n-        long recommendation = totalMemoryBytes - osMemory - heapMemory;\n+        long recommendation = totalMemoryBytes- osMemory- heapMemory;\n         recommendation = Math.max( mebiBytes( 100 ), recommendation );\n         recommendation = Math.min( tebiBytes( 16 ), recommendation );\n         return recommendation;\n@@ -108,67 +103,62 @@ public class MemoryRecommendationsCommand implements AdminCommand\n \n     private static Brackets findMemoryBrackets( long totalMemoryBytes )\n     {\n-        double totalMemoryGB = ((double) totalMemoryBytes) / ((double) gibiBytes( 1 ));\n+        double totalMemoryGB = ((double) totalMemoryBytes)/ ((double) gibiBytes( 1 ));\n         Bracket lower = null;\n         Bracket upper = null;\n         for ( int i = 1; i < datapoints.length; i++ )\n         {\n-            if ( totalMemoryGB < datapoints[i].totalMemory )\n+            if ( totalMemoryGB < datapoints[ i].totalMemory )\n             {\n-                lower = datapoints[i - 1];\n-                upper = datapoints[i];\n+                lower = datapoints[ i - 1];\n+                upper = datapoints[ i];\n                 break;\n             }\n         }\n+\n         if ( lower == null )\n         {\n-            lower = datapoints[datapoints.length - 1];\n-            upper = datapoints[datapoints.length - 1];\n+            lower = datapoints[ datapoints.length - 1];\n+            upper = datapoints[ datapoints.length - 1];\n         }\n+\n         return new Brackets( totalMemoryGB, lower, upper );\n     }\n \n     public static Arguments buildArgs()\n     {\n         String memory = bytesToString( OsBeanUtil.getTotalPhysicalMemory() );\n-        return new Arguments()\n-                .withArgument( new OptionalNamedArg( ARG_MEMORY, memory, memory,\n-                        \"Recommend memory settings with respect to the given amount of memory, \" +\n-                        \"instead of the total memory of the system running the command.\" ) )\n-                .withDatabase(\n-                        \"Name of specific database to calculate page cache memory requirement for. \" +\n-                        \"The generic calculation is still a good generic recommendation for this machine, \" +\n-                        \"but there will be an additional calculation for minimal required page cache memory \" +\n-                        \"for mapping all store and index files that are managed by the page cache.\" );\n+        return new Arguments().withArgument( new OptionalNamedArg( ARG_MEMORY, memory, memory, \"Recommend memory settings with respect to the given amount of memory, \" + \"instead of the total memory of the system running the command.\" ) ).withDatabase( \"Name of specific database to calculate page cache memory requirement for. \" + \"The generic calculation is still a good generic recommendation for this machine, \" + \"but there will be an additional calculation for minimal required page cache memory \" + \"for mapping all store and index files that are managed by the page cache.\" );\n     }\n \n     static String bytesToString( double bytes )\n     {\n         double gibi1 = ONE_GIBI_BYTE;\n         double mebi1 = ONE_MEBI_BYTE;\n-        double mebi100 = 100 * mebi1;\n+        double mebi100 = 100* mebi1;\n         double kibi1 = ONE_KIBI_BYTE;\n-        double kibi100 = 100 * kibi1;\n+        double kibi100 = 100* kibi1;\n         if ( bytes >= gibi1 )\n         {\n-            double gibibytes = bytes / gibi1;\n-            double modMebi = bytes % gibi1;\n+            double gibibytes = bytes/ gibi1;\n+            double modMebi = bytes% gibi1;\n             if ( modMebi >= mebi100 )\n             {\n-                return format( Locale.ROOT, \"%dm\", Math.round( bytes / mebi100 ) * 100 );\n+                return format( Locale.ROOT, \"%dm\", Math.round( bytes/ mebi100 )* 100 );\n             }\n             else\n             {\n                 return format( Locale.ROOT, \"%.0fg\", gibibytes );\n             }\n         }\n-        else if ( bytes >= mebi1 )\n+        else\n+        if ( bytes >= mebi1 )\n         {\n-            double mebibytes = bytes / mebi1;\n-            double modKibi = bytes % mebi1;\n+            double mebibytes = bytes/ mebi1;\n+            double modKibi = bytes% mebi1;\n             if ( modKibi >= kibi100 )\n             {\n-                return format( Locale.ROOT, \"%dk\", Math.round( bytes / kibi100 ) * 100 );\n+                return format( Locale.ROOT, \"%dk\", Math.round( bytes/ kibi100 )* 100 );\n             }\n             else\n             {\n@@ -176,11 +166,11 @@ public class MemoryRecommendationsCommand implements AdminCommand\n             }\n         }\n         else\n-        {\n+            {\n             // For kilobytes there's no need to bother with decimals, just print a rough figure rounded upwards\n-            double kibiBytes = bytes / kibi1;\n-            return format( Locale.ROOT, \"%dk\", (long) Math.ceil( kibiBytes ) );\n-        }\n+                double kibiBytes = bytes/ kibi1;\n+                return format( Locale.ROOT, \"%dk\", (long) Math.ceil( kibiBytes ) );\n+            }\n     }\n \n     MemoryRecommendationsCommand( Path homeDir, Path configDir, OutsideWorld outsideWorld )\n@@ -194,18 +184,16 @@ public class MemoryRecommendationsCommand implements AdminCommand\n     public void execute( String[] args ) throws IncorrectUsage, CommandFailed\n     {\n         Arguments arguments = buildArgs().parse( args );\n-\n         String mem = arguments.get( ARG_MEMORY );\n         long memory = buildSetting( ARG_MEMORY, BYTES ).build().apply( arguments::get );\n         String os = bytesToString( recommendOsMemory( memory ) );\n         String heap = bytesToString( recommendHeapMemory( memory ) );\n         String pagecache = bytesToString( recommendPageCacheMemory( memory ) );\n         boolean specificDb = arguments.has( ARG_DATABASE );\n-\n         print( \"# Memory settings recommendation from neo4j-admin memrec:\" );\n         print( \"#\" );\n         print( \"# Assuming the system is dedicated to running Neo4j and has \" + mem + \" of memory,\" );\n-        print( \"# we recommend a heap size of around \" + heap + \", and a page cache of around \" + pagecache + \",\" );\n+        print( \"# we recommend a heap size of around \" + heap+ \", and a page cache of around \" + pagecache + \",\" );\n         print( \"# and that about \" + os + \" is left for the operating system, and the native memory\" );\n         print( \"# needed by Lucene and Netty.\" );\n         print( \"#\" );\n@@ -226,20 +214,18 @@ public class MemoryRecommendationsCommand implements AdminCommand\n         print( initialHeapSize.name() + \"=\" + heap );\n         print( maxHeapSize.name() + \"=\" + heap );\n         print( pagecache_memory.name() + \"=\" + pagecache );\n-\n-        if ( !specificDb )\n+        if ( ! specificDb )\n         {\n             return;\n         }\n+\n         String databaseName = arguments.get( ARG_DATABASE );\n         File configFile = configDir.resolve( Config.DEFAULT_CONFIG_FILE_NAME ).toFile();\n         File storeDir = getConfig( configFile, databaseName ).get( database_path );\n         long pageCacheSize = dbSpecificPageCacheSize( storeDir );\n         long luceneSize = dbSpecificLuceneSize( storeDir );\n-\n         print( \"#\" );\n-        print( \"# The numbers below have been derived based on your current data volume in database and index configuration of database '\" + databaseName +\n-                \"'.\" );\n+        print( \"# The numbers below have been derived based on your current data volume in database and index configuration of database '\" + databaseName + \"'.\" );\n         print( \"# They can be used as an input into more detailed memory analysis.\" );\n         print( \"# Lucene indexes: \" + bytesToString( luceneSize ) );\n         print( \"# Data volume and native indexes: \" + bytesToString( pageCacheSize ) );\n@@ -259,28 +245,30 @@ public class MemoryRecommendationsCommand implements AdminCommand\n     {\n         FileFilter nativeIndexFilter = new NativeIndexFileFilter( storeDir );\n         return ( dir, name ) ->\n-        {\n-            File file = new File( dir, name );\n-            if ( outsideWorld.fileSystem().isDirectory( file ) )\n-            {\n+               {\n+                   File file = new File( dir, name );\n+                   if ( outsideWorld.fileSystem().isDirectory( file ) )\n+                   {\n                 // Always go down directories\n-                return true;\n-            }\n-            if ( name.equals( FailureStorage.DEFAULT_FAILURE_FILE_NAME ) )\n-            {\n+                       return true;\n+                   }\n+\n+                   if ( name.equals( FailureStorage.DEFAULT_FAILURE_FILE_NAME ) )\n+                   {\n                 // Never include failure-storage files\n-                return false;\n-            }\n+                       return false;\n+                   }\n \n-            return inverse != nativeIndexFilter.accept( file );\n-        };\n+                   return inverse != nativeIndexFilter.accept( file );\n+               };\n     }\n \n     private long sumStoreFiles( File storeDir )\n     {\n         long total = 0;\n         // Include store files\n-        for ( StoreType type : StoreType.values() )\n+        for( StoreType type : StoreType.values()\n+        )\n         {\n             if ( type.isRecordStore() )\n             {\n@@ -289,6 +277,7 @@ public class MemoryRecommendationsCommand implements AdminCommand\n             }\n         }\n         // Include label index\n+\n         total += sizeOfFileIfExists( new File( storeDir, NativeLabelScanStore.FILE_NAME ) );\n         return total;\n     }\n@@ -306,7 +295,7 @@ public class MemoryRecommendationsCommand implements AdminCommand\n             File[] children = outsideWorld.fileSystem().listFiles( file, filter );\n             if ( children != null )\n             {\n-                for ( File child : children )\n+                for( File child : children)\n                 {\n                     total += sumIndexFiles( child, filter );\n                 }\n@@ -316,15 +305,17 @@ public class MemoryRecommendationsCommand implements AdminCommand\n         {\n             total += outsideWorld.fileSystem().getFileSize( file );\n         }\n+\n         return total;\n     }\n \n     private Config getConfig( File configFile, String databaseName ) throws CommandFailed\n     {\n-        if ( !outsideWorld.fileSystem().fileExists( configFile ) )\n+        if ( ! outsideWorld.fileSystem().fileExists( configFile ) )\n         {\n             throw new CommandFailed( \"Unable to find config file, tried: \" + configFile.getAbsolutePath() );\n         }\n+\n         return Config.fromFile( configFile ).withHome( homeDir ).withSetting( active_database, databaseName ).withConnectorsDisabled().build();\n     }\n \n@@ -376,7 +367,8 @@ public class MemoryRecommendationsCommand implements AdminCommand\n             {\n                 return 0;\n             }\n-            return (totalMemoryGB - lower.totalMemory) / (upper.totalMemory - lower.totalMemory);\n+\n+            return ( totalMemoryGB - lower.totalMemory)/ ( upper.totalMemory - lower.totalMemory);\n         }\n \n         public long recommend( ToDoubleFunction<Bracket> parameter )\n@@ -385,8 +377,8 @@ public class MemoryRecommendationsCommand implements AdminCommand\n             double lowerParam = parameter.applyAsDouble( lower );\n             double upperParam = parameter.applyAsDouble( upper );\n             double diff = upperParam - lowerParam;\n-            double recommend = lowerParam + (diff * factor);\n-            return mebiBytes( (long) (recommend * 1024.0) );\n+            double recommend = lowerParam + ( diff* factor);\n+            return mebiBytes( (long) ( recommend* 1024.0) );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 102
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
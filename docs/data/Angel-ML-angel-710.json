{
    "project_name": "Angel-ML-angel",
    "error_id": "710",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/710/InitNeighbor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/710/InitNeighbor.java\nindex e663c7c0137..7db446c48cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/710/InitNeighbor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/710/InitNeighbor.java\n@@ -76,4 +76,4 @@ public class InitNeighbor extends UpdateFunc {\n       tempColumnOffsets.add(neighbors);\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/710/InitNeighbor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/710/InitNeighbor.java\nindex e663c7c0137..e8fc1922b15 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/710/InitNeighbor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/710/InitNeighbor.java\n@@ -28,6 +28,7 @@ import java.util.List;\n /**\n  * Init node neighbors\n  */\n+\n public class InitNeighbor extends UpdateFunc {\n \n   public InitNeighbor(InitNeighborParam param) {\n@@ -44,11 +45,9 @@ public class InitNeighbor extends UpdateFunc {\n     int[] nodeIds = param.getNodeIds();\n     int[] neighborNums = param.getNeighborNums();\n     int[] neighbors = param.getNeighbors();\n-\n     ServerMatrix matrix = psContext.getMatrixStorageManager().getMatrix(param.getMatrixId());\n     CSRPartition part = (CSRPartition) matrix.getPartition(param.getPartKey().getPartitionId());\n     IntCSRStorage storage = (IntCSRStorage) part.getStorage();\n-\n     synchronized (storage) {\n       int startOffset = (int) param.getPartKey().getStartCol();\n \n@@ -59,6 +58,7 @@ public class InitNeighbor extends UpdateFunc {\n       }\n \n       // Put the node ids, node neighbor number, node neighbors to the cache\n+\n       List<int[]> tempRowIds = storage.getTempRowIds();\n       List<int[]> tempRowLens = storage.getTempRowLens();\n       List<int[]> tempColumnOffsets = storage.getTempColumnIndices();\n@@ -70,10 +70,10 @@ public class InitNeighbor extends UpdateFunc {\n         storage.setTempRowLens(tempRowLens);\n         storage.setTempColumnIndices(tempColumnOffsets);\n       }\n-\n       tempRowIds.add(param.getNodeIds());\n       tempRowLens.add(neighborNums);\n       tempColumnOffsets.add(neighbors);\n     }\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3451",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3451/TransactionLogWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3451/TransactionLogWriter.java\nindex 984c34cc798..253fe888d8b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3451/TransactionLogWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3451/TransactionLogWriter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log;\n \n import java.io.IOException;\n@@ -26,28 +27,28 @@ import org.neo4j.kernel.impl.transaction.log.entry.LogEntryWriter;\n \n public class TransactionLogWriter\n {\n-    private final LogEntryWriter writer;\n-\n-    public TransactionLogWriter( LogEntryWriter writer )\n-    {\n-        this.writer = writer;\n-    }\n-\n-    public void append( TransactionRepresentation transaction, long transactionId ) throws IOException\n-    {\n-        writer.writeStartEntry( transaction.getMasterId(), transaction.getAuthorId(),\n-                transaction.getTimeStarted(), transaction.getLatestCommittedTxWhenStarted(),\n-                transaction.additionalHeader() );\n-\n-        // Write all the commands to the log channel\n-        writer.serialize( transaction );\n-\n-        // Write commit record\n-        writer.writeCommitEntry( transactionId, transaction.getTimeCommitted() );\n-    }\n-\n-    public void checkPoint( LogPosition logPosition ) throws IOException\n-    {\n-        writer.writeCheckPointEntry( logPosition );\n-    }\n+  private final LogEntryWriter writer;\n+\n+  public TransactionLogWriter(LogEntryWriter writer)\n+  {\n+    this.writer = writer;\n+  }\n+\n+  public void append(TransactionRepresentation transaction, long transactionId) throws IOException\n+  {\n+    writer.writeStartEntry(transaction.getMasterId(), transaction.getAuthorId(),\n+        transaction.getTimeStarted(), transaction.getLatestCommittedTxWhenStarted(),\n+        transaction.additionalHeader());\n+\n+    // Write all the commands to the log channel\n+    writer.serialize(transaction);\n+\n+    // Write commit record\n+    writer.writeCommitEntry(transactionId, transaction.getTimeCommitted());\n+  }\n+\n+  public void checkPoint(LogPosition logPosition) throws IOException\n+  {\n+    writer.writeCheckPointEntry(logPosition);\n+  }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 196).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3451/TransactionLogWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3451/TransactionLogWriter.java\nindex 984c34cc798..57201a72712 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3451/TransactionLogWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3451/TransactionLogWriter.java\n@@ -35,11 +35,8 @@ public class TransactionLogWriter\n \n     public void append( TransactionRepresentation transaction, long transactionId ) throws IOException\n     {\n-        writer.writeStartEntry( transaction.getMasterId(), transaction.getAuthorId(),\n-                transaction.getTimeStarted(), transaction.getLatestCommittedTxWhenStarted(),\n-                transaction.additionalHeader() );\n-\n-        // Write all the commands to the log channel\n+        writer.writeStartEntry( transaction.getMasterId(), transaction.getAuthorId(), transaction.getTimeStarted(), transaction.getLatestCommittedTxWhenStarted(), transaction.additionalHeader() );\n+    // Write all the commands to the log channel\n         writer.serialize( transaction );\n \n         // Write commit record\n@@ -50,4 +47,4 @@ public class TransactionLogWriter\n     {\n         writer.writeCheckPointEntry( logPosition );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
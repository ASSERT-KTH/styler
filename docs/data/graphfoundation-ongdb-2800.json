{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2800",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2800/CoreSnapshot.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2800/CoreSnapshot.java\nindex 2adf88bd57e..728075a3494 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2800/CoreSnapshot.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2800/CoreSnapshot.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.snapshot;\n \n import java.io.IOException;\n@@ -32,86 +33,86 @@ import static java.lang.String.format;\n \n public class CoreSnapshot\n {\n-    private final long prevIndex;\n-    private final long prevTerm;\n-\n-    private final Map<CoreStateType,Object> snapshotCollection = new HashMap<>();\n-\n-    public CoreSnapshot( long prevIndex, long prevTerm )\n-    {\n-        this.prevIndex = prevIndex;\n-        this.prevTerm = prevTerm;\n-    }\n-\n-    public long prevIndex()\n-    {\n-        return prevIndex;\n-    }\n-\n-    public long prevTerm()\n-    {\n-        return prevTerm;\n-    }\n-\n-    public void add( CoreStateType type, Object state )\n-    {\n-        snapshotCollection.put( type, state );\n-    }\n-\n-    public <T> T get( CoreStateType type )\n-    {\n-        return (T) snapshotCollection.get( type );\n-    }\n-\n-    public Iterable<CoreStateType> types()\n-    {\n-        return snapshotCollection.keySet();\n-    }\n-\n-    public int size()\n-    {\n-        return snapshotCollection.size();\n-    }\n-\n-    public static class Marshal extends SafeChannelMarshal<CoreSnapshot>\n+  private final long prevIndex;\n+  private final long prevTerm;\n+\n+  private final Map<CoreStateType, Object> snapshotCollection = new HashMap<>();\n+\n+  public CoreSnapshot(long prevIndex, long prevTerm)\n+  {\n+    this.prevIndex = prevIndex;\n+    this.prevTerm = prevTerm;\n+  }\n+\n+  public long prevIndex()\n+  {\n+    return prevIndex;\n+  }\n+\n+  public long prevTerm()\n+  {\n+    return prevTerm;\n+  }\n+\n+  public void add(CoreStateType type, Object state)\n+  {\n+    snapshotCollection.put(type, state);\n+  }\n+\n+  public <T> T get(CoreStateType type)\n+  {\n+    return (T) snapshotCollection.get(type);\n+  }\n+\n+  public Iterable<CoreStateType> types()\n+  {\n+    return snapshotCollection.keySet();\n+  }\n+\n+  public int size()\n+  {\n+    return snapshotCollection.size();\n+  }\n+\n+  public static class Marshal extends SafeChannelMarshal<CoreSnapshot>\n+  {\n+    @Override\n+    public void marshal(CoreSnapshot coreSnapshot, WritableChannel buffer) throws IOException\n     {\n-        @Override\n-        public void marshal( CoreSnapshot coreSnapshot, WritableChannel buffer ) throws IOException\n-        {\n-            buffer.putLong( coreSnapshot.prevIndex );\n-            buffer.putLong( coreSnapshot.prevTerm );\n-\n-            buffer.putInt( coreSnapshot.size() );\n-            for ( CoreStateType type : coreSnapshot.types() )\n-            {\n-                buffer.putInt( type.ordinal() );\n-                type.marshal.marshal( coreSnapshot.get( type ), buffer );\n-            }\n-        }\n-\n-        @Override\n-        public CoreSnapshot unmarshal0( ReadableChannel channel ) throws IOException, EndOfStreamException\n-        {\n-            long prevIndex = channel.getLong();\n-            long prevTerm = channel.getLong();\n-\n-            CoreSnapshot coreSnapshot = new CoreSnapshot( prevIndex, prevTerm );\n-            int snapshotCount = channel.getInt();\n-            for ( int i = 0; i < snapshotCount; i++ )\n-            {\n-                int typeOrdinal = channel.getInt();\n-                CoreStateType type = CoreStateType.values()[typeOrdinal];\n-                Object state = type.marshal.unmarshal( channel );\n-                coreSnapshot.add( type, state );\n-            }\n-\n-            return coreSnapshot;\n-        }\n+      buffer.putLong(coreSnapshot.prevIndex);\n+      buffer.putLong(coreSnapshot.prevTerm);\n+\n+      buffer.putInt(coreSnapshot.size());\n+      for (CoreStateType type : coreSnapshot.types())\n+      {\n+        buffer.putInt(type.ordinal());\n+        type.marshal.marshal(coreSnapshot.get(type), buffer);\n+      }\n     }\n \n     @Override\n-    public String toString()\n+    public CoreSnapshot unmarshal0(ReadableChannel channel) throws IOException, EndOfStreamException\n     {\n-        return format( \"CoreSnapshot{prevIndex=%d, prevTerm=%d, snapshotCollection=%s}\", prevIndex, prevTerm, snapshotCollection );\n+      long prevIndex = channel.getLong();\n+      long prevTerm = channel.getLong();\n+\n+      CoreSnapshot coreSnapshot = new CoreSnapshot(prevIndex, prevTerm);\n+      int snapshotCount = channel.getInt();\n+      for (int i = 0; i < snapshotCount; i++)\n+      {\n+        int typeOrdinal = channel.getInt();\n+        CoreStateType type = CoreStateType.values()[typeOrdinal];\n+        Object state = type.marshal.unmarshal(channel);\n+        coreSnapshot.add(type, state);\n+      }\n+\n+      return coreSnapshot;\n     }\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return format(\"CoreSnapshot{prevIndex=%d, prevTerm=%d, snapshotCollection=%s}\", prevIndex, prevTerm, snapshotCollection);\n+  }\n }\n",
            "diff_size": 100
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2800/CoreSnapshot.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2800/CoreSnapshot.java\nindex 2adf88bd57e..1f0e410f623 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2800/CoreSnapshot.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2800/CoreSnapshot.java\n@@ -80,8 +80,7 @@ public class CoreSnapshot\n         {\n             buffer.putLong( coreSnapshot.prevIndex );\n             buffer.putLong( coreSnapshot.prevTerm );\n-\n-            buffer.putInt( coreSnapshot.size() );\n+buffer.putInt( coreSnapshot.size() );\n             for ( CoreStateType type : coreSnapshot.types() )\n             {\n                 buffer.putInt( type.ordinal() );\n@@ -94,8 +93,7 @@ public class CoreSnapshot\n         {\n             long prevIndex = channel.getLong();\n             long prevTerm = channel.getLong();\n-\n-            CoreSnapshot coreSnapshot = new CoreSnapshot( prevIndex, prevTerm );\n+CoreSnapshot coreSnapshot = new CoreSnapshot( prevIndex, prevTerm );\n             int snapshotCount = channel.getInt();\n             for ( int i = 0; i < snapshotCount; i++ )\n             {\n@@ -114,4 +112,4 @@ public class CoreSnapshot\n     {\n         return format( \"CoreSnapshot{prevIndex=%d, prevTerm=%d, snapshotCollection=%s}\", prevIndex, prevTerm, snapshotCollection );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
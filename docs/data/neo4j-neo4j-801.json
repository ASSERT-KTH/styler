{
    "project_name": "neo4j-neo4j",
    "error_id": "801",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "165",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "195",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "198",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/801/DuplicateCheckStrategy.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/801/DuplicateCheckStrategy.java\nindex 156cc922b1e..2e2f00c5417 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/801/DuplicateCheckStrategy.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/801/DuplicateCheckStrategy.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.schema.verification;\n \n import org.eclipse.collections.api.map.primitive.MutableObjectLongMap;\n@@ -35,7 +36,7 @@ import static java.lang.Math.min;\n /**\n  * Base class for strategy used for duplicate check during verification of value uniqueness during\n  * constraint creation.\n- *\n+ * <p>\n  * Each particular strategy determines how uniqueness check is done and how to accumulate and store those values for\n  * to make check time and resource consumption optimal.\n  */\n@@ -43,30 +44,32 @@ abstract class DuplicateCheckStrategy\n {\n     /**\n      * Check uniqueness of multiple properties that belong to a node with provided node id\n+     *\n      * @param values property values\n      * @param nodeId checked node id\n      * @throws IndexEntryConflictException\n      */\n-    abstract void checkForDuplicate( Value[] values, long nodeId )\n-            throws IndexEntryConflictException;\n+    abstract void checkForDuplicate(Value[] values, long nodeId)\n+      throws IndexEntryConflictException;\n \n     /**\n      * Check uniqueness of single property that belong to a node with provided node id.\n-     * @param value property value\n+     *\n+     * @param value  property value\n      * @param nodeId checked node id\n      * @throws IndexEntryConflictException\n      */\n-    abstract void checkForDuplicate( Value value, long nodeId ) throws IndexEntryConflictException;\n+    abstract void checkForDuplicate(Value value, long nodeId) throws IndexEntryConflictException;\n \n-    private static boolean propertyValuesEqual( Value[] properties, Value[] values )\n+    private static boolean propertyValuesEqual(Value[] properties, Value[] values)\n     {\n-        if ( properties.length != values.length )\n+        if (properties.length != values.length)\n         {\n             return false;\n         }\n-        for ( int i = 0; i < properties.length; i++ )\n+        for (int i = 0; i < properties.length; i++)\n         {\n-            if ( !properties[i].equals( values[i] ) )\n+            if (!properties[i].equals(values[i]))\n             {\n                 return false;\n             }\n@@ -81,30 +84,30 @@ abstract class DuplicateCheckStrategy\n     {\n         private final MutableObjectLongMap<Object> valueNodeIdMap;\n \n-        MapDuplicateCheckStrategy( int expectedNumberOfEntries )\n+        MapDuplicateCheckStrategy(int expectedNumberOfEntries)\n         {\n-            this.valueNodeIdMap = new ObjectLongHashMap<>( expectedNumberOfEntries );\n+            this.valueNodeIdMap = new ObjectLongHashMap<>(expectedNumberOfEntries);\n         }\n \n         @Override\n-        public void checkForDuplicate( Value[] values, long nodeId ) throws IndexEntryConflictException\n+        public void checkForDuplicate(Value[] values, long nodeId) throws IndexEntryConflictException\n         {\n-            final ValueTuple key = ValueTuple.of( values );\n-            if ( valueNodeIdMap.containsKey( key ) )\n+            final ValueTuple key = ValueTuple.of(values);\n+            if (valueNodeIdMap.containsKey(key))\n             {\n-                throw new IndexEntryConflictException( valueNodeIdMap.get( key ), nodeId, key );\n+                throw new IndexEntryConflictException(valueNodeIdMap.get(key), nodeId, key);\n             }\n-            valueNodeIdMap.put( key, nodeId );\n+            valueNodeIdMap.put(key, nodeId);\n         }\n \n         @Override\n-        void checkForDuplicate( Value value, long nodeId ) throws IndexEntryConflictException\n+        void checkForDuplicate(Value value, long nodeId) throws IndexEntryConflictException\n         {\n-            if ( valueNodeIdMap.containsKey( value ) )\n+            if (valueNodeIdMap.containsKey(value))\n             {\n-                throw new IndexEntryConflictException( valueNodeIdMap.get( value ), nodeId, value );\n+                throw new IndexEntryConflictException(valueNodeIdMap.get(value), nodeId, value);\n             }\n-            valueNodeIdMap.put( value, nodeId );\n+            valueNodeIdMap.put(value, nodeId);\n         }\n     }\n \n@@ -125,92 +128,90 @@ abstract class DuplicateCheckStrategy\n \n         BucketsDuplicateCheckStrategy()\n         {\n-            this( BUCKET_STRATEGY_ENTRIES_THRESHOLD );\n+            this(BUCKET_STRATEGY_ENTRIES_THRESHOLD);\n         }\n \n-        BucketsDuplicateCheckStrategy( int expectedNumberOfEntries )\n+        BucketsDuplicateCheckStrategy(int expectedNumberOfEntries)\n         {\n-            numberOfBuckets = min( MAX_NUMBER_OF_BUCKETS, (expectedNumberOfEntries / BASE_ENTRY_SIZE) + 1 );\n+            numberOfBuckets = min(MAX_NUMBER_OF_BUCKETS, (expectedNumberOfEntries / BASE_ENTRY_SIZE) + 1);\n             buckets = new BucketEntry[numberOfBuckets];\n-            bucketSetSize = max( 100, BUCKET_STRATEGY_ENTRIES_THRESHOLD / numberOfBuckets );\n+            bucketSetSize = max(100, BUCKET_STRATEGY_ENTRIES_THRESHOLD / numberOfBuckets);\n         }\n \n         @Override\n-        public void checkForDuplicate( Value[] values, long nodeId )\n-                throws IndexEntryConflictException\n+        public void checkForDuplicate(Value[] values, long nodeId)\n+          throws IndexEntryConflictException\n         {\n-            BucketEntry current = bucketEntrySet( Arrays.hashCode( values ), bucketSetSize );\n+            BucketEntry current = bucketEntrySet(Arrays.hashCode(values), bucketSetSize);\n \n             // We either have to find the first conflicting entry set element,\n             // or append one for the property we just fetched:\n             scan:\n             do\n             {\n-                for ( int i = 0; i < bucketSetSize; i++ )\n+                for (int i = 0; i < bucketSetSize; i++)\n                 {\n                     Value[] currentValues = (Value[]) current.value[i];\n \n-                    if ( current.nodeId[i] == StatementConstants.NO_SUCH_NODE )\n+                    if (current.nodeId[i] == StatementConstants.NO_SUCH_NODE)\n                     {\n                         current.value[i] = values;\n                         current.nodeId[i] = nodeId;\n-                        if ( i == bucketSetSize - 1 )\n+                        if (i == bucketSetSize - 1)\n                         {\n-                            current.next = new BucketEntry( bucketSetSize );\n+                            current.next = new BucketEntry(bucketSetSize);\n                         }\n                         break scan;\n-                    }\n-                    else if ( propertyValuesEqual( values, currentValues ) )\n+                    } else if (propertyValuesEqual(values, currentValues))\n                     {\n-                        throw new IndexEntryConflictException( current.nodeId[i], nodeId, currentValues );\n+                        throw new IndexEntryConflictException(current.nodeId[i], nodeId, currentValues);\n                     }\n                 }\n                 current = current.next;\n             }\n-            while ( current != null );\n+            while (current != null);\n         }\n \n         @Override\n-        void checkForDuplicate( Value propertyValue, long nodeId ) throws IndexEntryConflictException\n+        void checkForDuplicate(Value propertyValue, long nodeId) throws IndexEntryConflictException\n         {\n-            BucketEntry current = bucketEntrySet( propertyValue.hashCode(), bucketSetSize );\n+            BucketEntry current = bucketEntrySet(propertyValue.hashCode(), bucketSetSize);\n \n             // We either have to find the first conflicting entry set element,\n             // or append one for the property we just fetched:\n             scan:\n             do\n             {\n-                for ( int i = 0; i < bucketSetSize; i++ )\n+                for (int i = 0; i < bucketSetSize; i++)\n                 {\n                     Value value = (Value) current.value[i];\n \n-                    if ( current.nodeId[i] == StatementConstants.NO_SUCH_NODE )\n+                    if (current.nodeId[i] == StatementConstants.NO_SUCH_NODE)\n                     {\n                         current.value[i] = propertyValue;\n                         current.nodeId[i] = nodeId;\n-                        if ( i == bucketSetSize - 1 )\n+                        if (i == bucketSetSize - 1)\n                         {\n-                            current.next = new BucketEntry( bucketSetSize );\n+                            current.next = new BucketEntry(bucketSetSize);\n                         }\n                         break scan;\n-                    }\n-                    else if ( propertyValue.equals( value ) )\n+                    } else if (propertyValue.equals(value))\n                     {\n-                        throw new IndexEntryConflictException( current.nodeId[i], nodeId, value );\n+                        throw new IndexEntryConflictException(current.nodeId[i], nodeId, value);\n                     }\n                 }\n                 current = current.next;\n             }\n-            while ( current != null );\n+            while (current != null);\n         }\n \n-        private BucketEntry bucketEntrySet( int hashCode, int entrySetSize )\n+        private BucketEntry bucketEntrySet(int hashCode, int entrySetSize)\n         {\n-            int bucket = Math.abs( hashCode  % numberOfBuckets );\n+            int bucket = Math.abs(hashCode % numberOfBuckets);\n             BucketEntry current = buckets[bucket];\n-            if ( current == null )\n+            if (current == null)\n             {\n-                current = new BucketEntry( entrySetSize );\n+                current = new BucketEntry(entrySetSize);\n                 buckets[bucket] = current;\n             }\n             return current;\n@@ -227,11 +228,11 @@ abstract class DuplicateCheckStrategy\n             final long[] nodeId;\n             BucketEntry next;\n \n-            BucketEntry( int entrySize )\n+            BucketEntry(int entrySize)\n             {\n                 value = new Object[entrySize];\n                 nodeId = new long[entrySize];\n-                Arrays.fill( nodeId, StatementConstants.NO_SUCH_NODE );\n+                Arrays.fill(nodeId, StatementConstants.NO_SUCH_NODE);\n             }\n         }\n     }\n",
            "diff_size": 54
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
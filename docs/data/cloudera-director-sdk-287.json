{
    "project_name": "cloudera-director-sdk",
    "error_id": "287",
    "information": {
        "errors": [
            {
                "line": "0",
                "severity": "error",
                "message": "Required pattern 'Cloudera copyright header' missing in file.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
            }
        ]
    },
    "source_code": "// Licensed to Cloudera, Inc. under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/287/Health.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/287/Health.java\nindex a9923e436c8..ab5c93f0e65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/287/Health.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/intellij/287/Health.java\n@@ -22,6 +22,7 @@ package com.cloudera.director.client.v2.model;\n public class Health {\n   private Long lastReported;\n   private String status;\n+\n   public interface Status {\n     String DISABLED = \"DISABLED\";\n     String NOT_AVAILABLE = \"NOT_AVAILABLE\";\n@@ -32,7 +33,9 @@ public class Health {\n     String CONCERNING = \"CONCERNING\";\n     String BAD = \"BAD\";\n   }\n-  public Health() { }\n+\n+  public Health() {\n+  }\n \n   private Health(Long lastReported, String status) {\n     this.lastReported = lastReported;\n@@ -69,13 +72,15 @@ public class Health {\n \n   public HealthBuilder toBuilder() {\n     return builder()\n-      .lastReported(lastReported)\n-      .status(status)\n-      ;\n+        .lastReported(lastReported)\n+        .status(status)\n+        ;\n   }\n+\n   public Long getLastReported() {\n     return lastReported;\n   }\n+\n   public void setLastReported(Long lastReported) {\n     this.lastReported = lastReported;\n   }\n@@ -83,23 +88,32 @@ public class Health {\n   public String getStatus() {\n     return status;\n   }\n+\n   public void setStatus(String status) {\n     this.status = status;\n   }\n \n   @Override\n   public boolean equals(Object o) {\n-    if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n \n     Health other = (Health) o; // NOPMD\n \n     if (lastReported != null ?\n         !lastReported.equals(other.lastReported) :\n-        other.lastReported != null) return false;\n+        other.lastReported != null) {\n+      return false;\n+    }\n     if (status != null ?\n         !status.equals(other.status) :\n-        other.status != null) return false;\n+        other.status != null) {\n+      return false;\n+    }\n     return true;\n   }\n \n@@ -112,7 +126,7 @@ public class Health {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Health {\" + newLine);\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "87",
                    "column": "30",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "89",
                    "column": "20",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/287/Health.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/287/Health.java\nindex a9923e436c8..3d2a2f5b5a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/287/Health.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/naturalize/287/Health.java\n@@ -1,28 +1,14 @@\n-// Licensed to Cloudera, Inc. under one\n-// or more contributor license agreements.  See the NOTICE file\n-// distributed with this work for additional information\n-// regarding copyright ownership.  Cloudera, Inc. licenses this file\n-// to you under the Apache License, Version 2.0 (the\n-// \"License\"); you may not use this file except in compliance\n-// with the License.  You may obtain a copy of the License at\n-//\n-//     http://www.apache.org/licenses/LICENSE-2.0\n-//\n-// Unless required by applicable law or agreed to in writing, software\n-// distributed under the License is distributed on an \"AS IS\" BASIS,\n-// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-// See the License for the specific language governing permissions and\n-// limitations under the License.\n-\n+// Licensed to Cloudera, Inc.\n // Note: This file is auto generated. Do not edit manually.\n \n package com.cloudera.director.client.v2.model;\n \n-\n public class Health {\n+\n   private Long lastReported;\n   private String status;\n-  public interface Status {\n+\n+public interface Status {\n     String DISABLED = \"DISABLED\";\n     String NOT_AVAILABLE = \"NOT_AVAILABLE\";\n     String STARTING = \"STARTING\";\n@@ -32,7 +18,8 @@ public class Health {\n     String CONCERNING = \"CONCERNING\";\n     String BAD = \"BAD\";\n   }\n-  public Health() { }\n+\n+public Health() { }\n \n   private Health(Long lastReported, String status) {\n     this.lastReported = lastReported;\n@@ -49,7 +36,8 @@ public class Health {\n   }\n \n   public static class HealthBuilder {\n-    private Long lastReported = null;\n+\n+  private Long lastReported = null;\n     private String status = null;\n \n     public HealthBuilder lastReported(Long lastReported) {\n@@ -68,12 +56,11 @@ public class Health {\n   }\n \n   public HealthBuilder toBuilder() {\n-    return builder()\n-      .lastReported(lastReported)\n-      .status(status)\n-      ;\n+    return builder().lastReported(lastReported)\n+      .status(status);\n   }\n-  public Long getLastReported() {\n+\n+public Long getLastReported() {\n     return lastReported;\n   }\n   public void setLastReported(Long lastReported) {\n@@ -90,16 +77,16 @@ public class Health {\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (o == null ||\n+getClass() != o.getClass()) return false;\n+\n+    Health other = (Health) o;\n \n-    Health other = (Health) o; // NOPMD\n+// NOPMD\n \n-    if (lastReported != null ?\n-        !lastReported.equals(other.lastReported) :\n-        other.lastReported != null) return false;\n-    if (status != null ?\n-        !status.equals(other.status) :\n-        other.status != null) return false;\n+    if (lastReported != null ?!lastReported.equals(other.lastReported) : other.lastReported != null) return false;\n+\n+if (status != null ?!status.equals(other.status) : other.status != null) return false;\n     return true;\n   }\n \n@@ -112,7 +99,7 @@ public class Health {\n   }\n \n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Health {\" + newLine);\n@@ -121,5 +108,4 @@ public class Health {\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 44
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                },
                {
                    "line": "52",
                    "column": "19",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "52",
                    "column": "20",
                    "severity": "warning",
                    "message": "'}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "116",
                    "column": "18",
                    "severity": "warning",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "119",
                    "column": "27",
                    "severity": "warning",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "121",
                    "column": "29",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "121",
                    "column": "29",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "121",
                    "column": "70",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "122",
                    "column": "23",
                    "severity": "warning",
                    "message": "'?' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "122",
                    "column": "23",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "122",
                    "column": "52",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "130",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "130",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "130",
                    "column": "47",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "130",
                    "column": "72",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "130",
                    "column": "72",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "131",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "131",
                    "column": "16",
                    "severity": "warning",
                    "message": "'*' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "131",
                    "column": "41",
                    "severity": "warning",
                    "message": "'?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "131",
                    "column": "60",
                    "severity": "warning",
                    "message": "':' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "131",
                    "column": "60",
                    "severity": "warning",
                    "message": "':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/287/Health.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/287/Health.java\nindex a9923e436c8..d067f52fa64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/errored/1/287/Health.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/cloudera-director-sdk/codebuff/287/Health.java\n@@ -18,38 +18,58 @@\n \n package com.cloudera.director.client.v2.model;\n \n-\n public class Health {\n+\n   private Long lastReported;\n+\n   private String status;\n+\n   public interface Status {\n-    String DISABLED = \"DISABLED\";\n-    String NOT_AVAILABLE = \"NOT_AVAILABLE\";\n-    String STARTING = \"STARTING\";\n-    String STOPPING = \"STOPPING\";\n-    String STOPPED = \"STOPPED\";\n-    String GOOD = \"GOOD\";\n-    String CONCERNING = \"CONCERNING\";\n-    String BAD = \"BAD\";\n+String DISABLED = \"DISABLED\";\n+\n+\n+String NOT_AVAILABLE = \"NOT_AVAILABLE\";\n+\n+\n+String STARTING = \"STARTING\";\n+\n+\n+String STOPPING = \"STOPPING\";\n+\n+\n+String STOPPED = \"STOPPED\";\n+\n+\n+String GOOD = \"GOOD\";\n+\n+\n+String CONCERNING = \"CONCERNING\";\n+\n+\n+String BAD = \"BAD\";\n   }\n-  public Health() { }\n+\n+  public Health() {}\n+\n \n   private Health(Long lastReported, String status) {\n-    this.lastReported = lastReported;\n-    this.status = status;\n-  }\n+                                                   this.lastReported = lastReported;\n+                                                   this.status = status;\n+                    }\n \n   private Health(HealthBuilder builder) {\n-    this.lastReported = builder.lastReported;\n-    this.status = builder.status;\n-  }\n+                                        this.lastReported = builder.lastReported;\n+                                        this.status = builder.status;\n+                    }\n \n   public static HealthBuilder builder() {\n     return new HealthBuilder();\n   }\n \n   public static class HealthBuilder {\n+\n     private Long lastReported = null;\n+\n     private String status = null;\n \n     public HealthBuilder lastReported(Long lastReported) {\n@@ -70,12 +90,13 @@ public class Health {\n   public HealthBuilder toBuilder() {\n     return builder()\n       .lastReported(lastReported)\n-      .status(status)\n-      ;\n+      .status(status);\n   }\n+\n   public Long getLastReported() {\n     return lastReported;\n   }\n+\n   public void setLastReported(Long lastReported) {\n     this.lastReported = lastReported;\n   }\n@@ -83,43 +104,46 @@ public class Health {\n   public String getStatus() {\n     return status;\n   }\n+\n   public void setStatus(String status) {\n     this.status = status;\n   }\n \n+\n   @Override\n   public boolean equals(Object o) {\n     if (this == o) return true;\n-    if (o == null || getClass() != o.getClass()) return false;\n+    if (o == null||\n+        getClass() != o.getClass()) return false;\n \n-    Health other = (Health) o; // NOPMD\n+    Health other = (Health)o; // NOPMD\n \n-    if (lastReported != null ?\n-        !lastReported.equals(other.lastReported) :\n-        other.lastReported != null) return false;\n-    if (status != null ?\n-        !status.equals(other.status) :\n-        other.status != null) return false;\n+    if (lastReported != null?!lastReported.equals(other.lastReported): other.lastReported != null) return false;\n+    if (status != null?!status.equals(other.status): other.status != null) return false;\n     return true;\n   }\n \n+\n   @Override\n   public int hashCode() {\n     int result = 0;\n-    result = 31 * result + (lastReported != null ? lastReported.hashCode() : 0);\n-    result = 31 * result + (status != null ? status.hashCode() : 0);\n+    result = 31*result + (lastReported != null? lastReported.hashCode():0);\n+    result = 31*result + (status != null? status.hashCode():0);\n     return result;\n   }\n \n+\n   @Override\n-  public String toString()  {\n+  public String toString() {\n     StringBuilder sb = new StringBuilder();\n+\n     String newLine = System.getProperty(\"line.separator\");\n     sb.append(\"class Health {\" + newLine);\n-    sb.append(\"  lastReported: \").append(lastReported).append(newLine);\n-    sb.append(\"  status: \").append(status).append(newLine);\n+    sb.append(\"  lastReported: \")\n+      .append(lastReported).append(newLine);\n+    sb.append(\"  status: \")\n+      .append(status).append(newLine);\n     sb.append(\"}\" + newLine);\n     return sb.toString();\n   }\n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 64
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "0",
                    "severity": "error",
                    "message": "Required pattern 'Cloudera copyright header' missing in file.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
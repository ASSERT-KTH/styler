{
    "project_name": "graphfoundation-ongdb",
    "error_id": "210",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "59",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "80",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "90",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "95",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "101",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "129",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "134",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "140",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "156",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "163",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "181",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "184",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/210/GraphExtractionWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/210/GraphExtractionWriter.java\nindex c7bd8c2cf17..e8bebfe7358 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/210/GraphExtractionWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/210/GraphExtractionWriter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.transactional;\n \n import org.codehaus.jackson.JsonGenerator;\n@@ -36,178 +37,166 @@ import org.neo4j.helpers.collection.IterableWrapper;\n \n class GraphExtractionWriter implements ResultDataContentWriter\n {\n-    @Override\n-    public void write( JsonGenerator out, Iterable<String> columns, Result.ResultRow row,\n-            TransactionStateChecker txStateChecker ) throws IOException\n-    {\n-        Set<Node> nodes = new HashSet<>();\n-        Set<Relationship> relationships = new HashSet<>();\n-        extract( nodes, relationships, map( columns, row ) );\n+  @Override\n+  public void write(JsonGenerator out, Iterable<String> columns, Result.ResultRow row,\n+                    TransactionStateChecker txStateChecker) throws IOException\n+  {\n+    Set<Node> nodes = new HashSet<>();\n+    Set<Relationship> relationships = new HashSet<>();\n+    extract(nodes, relationships, map(columns, row));\n \n-        out.writeObjectFieldStart( \"graph\" );\n-        try\n-        {\n-            writeNodes( out, nodes, txStateChecker );\n-            writeRelationships( out, relationships, txStateChecker );\n-        }\n-        finally\n-        {\n-            out.writeEndObject();\n-        }\n+    out.writeObjectFieldStart(\"graph\");\n+    try\n+    {\n+      writeNodes(out, nodes, txStateChecker);\n+      writeRelationships(out, relationships, txStateChecker);\n+    } finally\n+    {\n+      out.writeEndObject();\n     }\n+  }\n \n-    private void writeNodes( JsonGenerator out, Iterable<Node> nodes, TransactionStateChecker txStateChecker )\n-            throws IOException\n+  private void writeNodes(JsonGenerator out, Iterable<Node> nodes, TransactionStateChecker txStateChecker)\n+      throws IOException\n+  {\n+    out.writeArrayFieldStart(\"nodes\");\n+    try\n     {\n-        out.writeArrayFieldStart( \"nodes\" );\n+      for (Node node : nodes)\n+      {\n+        out.writeStartObject();\n         try\n         {\n-            for ( Node node : nodes )\n+          long nodeId = node.getId();\n+          out.writeStringField(\"id\", Long.toString(nodeId));\n+          if (txStateChecker.isNodeDeletedInCurrentTx(nodeId))\n+          {\n+            markDeleted(out);\n+          } else\n+          {\n+            out.writeArrayFieldStart(\"labels\");\n+            try\n             {\n-                out.writeStartObject();\n-                try\n-                {\n-                    long nodeId = node.getId();\n-                    out.writeStringField( \"id\", Long.toString( nodeId ) );\n-                    if ( txStateChecker.isNodeDeletedInCurrentTx( nodeId ) )\n-                    {\n-                        markDeleted( out );\n-                    }\n-                    else\n-                    {\n-                        out.writeArrayFieldStart( \"labels\" );\n-                        try\n-                        {\n-                            for ( Label label : node.getLabels() )\n-                            {\n-                                out.writeString( label.name() );\n-                            }\n-                        }\n-                        finally\n-                        {\n-                            out.writeEndArray();\n-                        }\n-                        writeProperties( out, node );\n-                    }\n-                }\n-                finally\n-                {\n-                    out.writeEndObject();\n-                }\n+              for (Label label : node.getLabels())\n+              {\n+                out.writeString(label.name());\n+              }\n+            } finally\n+            {\n+              out.writeEndArray();\n             }\n-        }\n-        finally\n+            writeProperties(out, node);\n+          }\n+        } finally\n         {\n-            out.writeEndArray();\n+          out.writeEndObject();\n         }\n-    }\n-\n-    private void markDeleted( JsonGenerator out ) throws IOException\n+      }\n+    } finally\n     {\n-        out.writeBooleanField( \"deleted\", Boolean.TRUE );\n+      out.writeEndArray();\n     }\n+  }\n+\n+  private void markDeleted(JsonGenerator out) throws IOException\n+  {\n+    out.writeBooleanField(\"deleted\", Boolean.TRUE);\n+  }\n \n-    private void writeRelationships( JsonGenerator out, Iterable<Relationship> relationships,\n-            TransactionStateChecker txStateChecker ) throws IOException\n+  private void writeRelationships(JsonGenerator out, Iterable<Relationship> relationships,\n+                                  TransactionStateChecker txStateChecker) throws IOException\n+  {\n+    out.writeArrayFieldStart(\"relationships\");\n+    try\n     {\n-        out.writeArrayFieldStart( \"relationships\" );\n+      for (Relationship relationship : relationships)\n+      {\n+        out.writeStartObject();\n         try\n         {\n-            for ( Relationship relationship : relationships )\n-            {\n-                out.writeStartObject();\n-                try\n-                {\n-                    long relationshipId = relationship.getId();\n-                    out.writeStringField( \"id\", Long.toString( relationshipId ) );\n-                    if ( txStateChecker.isRelationshipDeletedInCurrentTx( relationshipId ) )\n-                    {\n-                        markDeleted( out );\n-                    }\n-                    else\n-                    {\n-                        out.writeStringField( \"type\", relationship.getType().name() );\n-                        out.writeStringField( \"startNode\", Long.toString( relationship.getStartNode().getId() ) );\n-                        out.writeStringField( \"endNode\", Long.toString( relationship.getEndNode().getId() ) );\n-                        writeProperties( out, relationship );\n-                    }\n-                }\n-                finally\n-                {\n-                    out.writeEndObject();\n-                }\n-            }\n-        }\n-        finally\n+          long relationshipId = relationship.getId();\n+          out.writeStringField(\"id\", Long.toString(relationshipId));\n+          if (txStateChecker.isRelationshipDeletedInCurrentTx(relationshipId))\n+          {\n+            markDeleted(out);\n+          } else\n+          {\n+            out.writeStringField(\"type\", relationship.getType().name());\n+            out.writeStringField(\"startNode\", Long.toString(relationship.getStartNode().getId()));\n+            out.writeStringField(\"endNode\", Long.toString(relationship.getEndNode().getId()));\n+            writeProperties(out, relationship);\n+          }\n+        } finally\n         {\n-            out.writeEndArray();\n+          out.writeEndObject();\n         }\n+      }\n+    } finally\n+    {\n+      out.writeEndArray();\n     }\n+  }\n \n-    private void writeProperties( JsonGenerator out, PropertyContainer container ) throws IOException\n+  private void writeProperties(JsonGenerator out, PropertyContainer container) throws IOException\n+  {\n+    out.writeObjectFieldStart(\"properties\");\n+    try\n     {\n-        out.writeObjectFieldStart( \"properties\" );\n-        try\n-        {\n-            for ( Map.Entry<String, Object> property : container.getAllProperties().entrySet() )\n-            {\n-                out.writeObjectField( property.getKey(), property.getValue() );\n+      for (Map.Entry<String, Object> property : container.getAllProperties().entrySet())\n+      {\n+        out.writeObjectField(property.getKey(), property.getValue());\n \n-            }\n-        }\n-        finally\n-        {\n-            out.writeEndObject();\n-        }\n+      }\n+    } finally\n+    {\n+      out.writeEndObject();\n     }\n+  }\n \n-    private void extract( Set<Node> nodes, Set<Relationship> relationships, Iterable<?> source )\n+  private void extract(Set<Node> nodes, Set<Relationship> relationships, Iterable<?> source)\n+  {\n+    for (Object item : source)\n     {\n-        for ( Object item : source )\n+      if (item instanceof Node)\n+      {\n+        nodes.add((Node) item);\n+      } else if (item instanceof Relationship)\n+      {\n+        Relationship relationship = (Relationship) item;\n+        relationships.add(relationship);\n+        nodes.add(relationship.getStartNode());\n+        nodes.add(relationship.getEndNode());\n+      }\n+      if (item instanceof Path)\n+      {\n+        Path path = (Path) item;\n+        for (Node node : path.nodes())\n         {\n-            if ( item instanceof Node )\n-            {\n-                nodes.add( (Node) item );\n-            }\n-            else if ( item instanceof Relationship )\n-            {\n-                Relationship relationship = (Relationship) item;\n-                relationships.add( relationship );\n-                nodes.add( relationship.getStartNode() );\n-                nodes.add( relationship.getEndNode() );\n-            }\n-            if ( item instanceof Path )\n-            {\n-                Path path = (Path) item;\n-                for ( Node node : path.nodes() )\n-                {\n-                    nodes.add( node );\n-                }\n-                for ( Relationship relationship : path.relationships() )\n-                {\n-                    relationships.add( relationship );\n-                }\n-            }\n-            else if ( item instanceof Map<?, ?> )\n-            {\n-                extract( nodes, relationships, ((Map<?, ?>) item).values() );\n-            }\n-            else if ( item instanceof Iterable<?> )\n-            {\n-                extract( nodes, relationships, (Iterable<?>) item );\n-            }\n+          nodes.add(node);\n+        }\n+        for (Relationship relationship : path.relationships())\n+        {\n+          relationships.add(relationship);\n         }\n+      } else if (item instanceof Map<?, ?>)\n+      {\n+        extract(nodes, relationships, ((Map<?, ?>) item).values());\n+      } else if (item instanceof Iterable<?>)\n+      {\n+        extract(nodes, relationships, (Iterable<?>) item);\n+      }\n     }\n+  }\n \n-    private static Iterable<?> map( Iterable<String> columns, final Result.ResultRow row )\n+  private static Iterable<?> map(Iterable<String> columns, final Result.ResultRow row)\n+  {\n+    return new IterableWrapper<Object, String>(columns)\n     {\n-        return new IterableWrapper<Object, String>( columns )\n-        {\n-            @Override\n-            protected Object underlyingObjectToObject( String key )\n-            {\n-                return row.get( key );\n-            }\n-        };\n-    }\n+      @Override\n+      protected Object underlyingObjectToObject(String key)\n+      {\n+        return row.get(key);\n+      }\n+    };\n+  }\n }\n",
            "diff_size": 205
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/210/GraphExtractionWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/210/GraphExtractionWriter.java\nindex c7bd8c2cf17..57d570dc052 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/210/GraphExtractionWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/210/GraphExtractionWriter.java\n@@ -39,12 +39,11 @@ class GraphExtractionWriter implements ResultDataContentWriter\n     @Override\n     public void write( JsonGenerator out, Iterable<String> columns, Result.ResultRow row,\n             TransactionStateChecker txStateChecker ) throws IOException\n-    {\n+{\n         Set<Node> nodes = new HashSet<>();\n         Set<Relationship> relationships = new HashSet<>();\n         extract( nodes, relationships, map( columns, row ) );\n-\n-        out.writeObjectFieldStart( \"graph\" );\n+out.writeObjectFieldStart( \"graph\" );\n         try\n         {\n             writeNodes( out, nodes, txStateChecker );\n@@ -56,9 +55,8 @@ class GraphExtractionWriter implements ResultDataContentWriter\n         }\n     }\n \n-    private void writeNodes( JsonGenerator out, Iterable<Node> nodes, TransactionStateChecker txStateChecker )\n-            throws IOException\n-    {\n+    private void writeNodes( JsonGenerator out, Iterable<Node> nodes, TransactionStateChecker txStateChecker ) throws IOException\n+{\n         out.writeArrayFieldStart( \"nodes\" );\n         try\n         {\n@@ -87,7 +85,8 @@ class GraphExtractionWriter implements ResultDataContentWriter\n                         {\n                             out.writeEndArray();\n                         }\n-                        writeProperties( out, node );\n+\n+writeProperties( out, node );\n                     }\n                 }\n                 finally\n@@ -109,7 +108,7 @@ class GraphExtractionWriter implements ResultDataContentWriter\n \n     private void writeRelationships( JsonGenerator out, Iterable<Relationship> relationships,\n             TransactionStateChecker txStateChecker ) throws IOException\n-    {\n+{\n         out.writeArrayFieldStart( \"relationships\" );\n         try\n         {\n@@ -149,11 +148,10 @@ class GraphExtractionWriter implements ResultDataContentWriter\n         out.writeObjectFieldStart( \"properties\" );\n         try\n         {\n-            for ( Map.Entry<String, Object> property : container.getAllProperties().entrySet() )\n+            for ( Map.Entry<String,Object> property : container.getAllProperties().entrySet() )\n             {\n                 out.writeObjectField( property.getKey(), property.getValue() );\n-\n-            }\n+    }\n         }\n         finally\n         {\n@@ -176,7 +174,8 @@ class GraphExtractionWriter implements ResultDataContentWriter\n                 nodes.add( relationship.getStartNode() );\n                 nodes.add( relationship.getEndNode() );\n             }\n-            if ( item instanceof Path )\n+\n+if ( item instanceof Path )\n             {\n                 Path path = (Path) item;\n                 for ( Node node : path.nodes() )\n@@ -210,4 +209,4 @@ class GraphExtractionWriter implements ResultDataContentWriter\n             }\n         };\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "ibinti-bugvm",
    "error_id": "39",
    "information": {
        "errors": [
            {
                "line": "35",
                "severity": "error",
                "message": "Line is longer than 80 characters (found 86).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n/**\n * Extended {@link SchemeSocketFactory} interface for layered sockets such as SSL/TLS.\n *\n * @since 4.1\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/39/LayeredSchemeSocketFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/39/LayeredSchemeSocketFactory.java\nindex dedfe502dc5..2cbdf7bc9ae 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/39/LayeredSchemeSocketFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/intellij/39/LayeredSchemeSocketFactory.java\n@@ -35,34 +35,31 @@ import java.net.UnknownHostException;\n  * Extended {@link SchemeSocketFactory} interface for layered sockets such as SSL/TLS.\n  *\n  * @since 4.1\n- *\n  * @deprecated (4.2)  use {@link SchemeLayeredSocketFactory}\n  */\n @Deprecated\n public interface LayeredSchemeSocketFactory extends SchemeSocketFactory {\n \n-    /**\n-     * Returns a socket connected to the given host that is layered over an\n-     * existing socket.  Used primarily for creating secure sockets through\n-     * proxies.\n-     *\n-     * @param socket the existing socket\n-     * @param target    the name of the target host.\n-     * @param port      the port to connect to on the target host\n-     * @param autoClose a flag for closing the underling socket when the created\n-     * socket is closed\n-     *\n-     * @return Socket a new socket\n-     *\n-     * @throws IOException if an I/O error occurs while creating the socket\n-     * @throws UnknownHostException if the IP address of the host cannot be\n-     * determined\n-     */\n-    Socket createLayeredSocket(\n-        Socket socket,\n-        String target,\n-        int port,\n-        boolean autoClose\n-    ) throws IOException, UnknownHostException;\n+  /**\n+   * Returns a socket connected to the given host that is layered over an\n+   * existing socket.  Used primarily for creating secure sockets through\n+   * proxies.\n+   *\n+   * @param socket    the existing socket\n+   * @param target    the name of the target host.\n+   * @param port      the port to connect to on the target host\n+   * @param autoClose a flag for closing the underling socket when the created\n+   *                  socket is closed\n+   * @return Socket a new socket\n+   * @throws IOException          if an I/O error occurs while creating the socket\n+   * @throws UnknownHostException if the IP address of the host cannot be\n+   *                              determined\n+   */\n+  Socket createLayeredSocket(\n+    Socket socket,\n+    String target,\n+    int port,\n+    boolean autoClose\n+  ) throws IOException, UnknownHostException;\n \n }\n",
            "diff_size": 24
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/39/LayeredSchemeSocketFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/39/LayeredSchemeSocketFactory.java\nindex dedfe502dc5..8463232e321 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/39/LayeredSchemeSocketFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/naturalize/39/LayeredSchemeSocketFactory.java\n@@ -65,4 +65,4 @@ public interface LayeredSchemeSocketFactory extends SchemeSocketFactory {\n         boolean autoClose\n     ) throws IOException, UnknownHostException;\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/39/LayeredSchemeSocketFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/39/LayeredSchemeSocketFactory.java\nindex dedfe502dc5..7c21b787f46 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/errored/1/39/LayeredSchemeSocketFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ibinti-bugvm/codebuff/39/LayeredSchemeSocketFactory.java\n@@ -38,6 +38,8 @@ import java.net.UnknownHostException;\n  *\n  * @deprecated (4.2)  use {@link SchemeLayeredSocketFactory}\n  */\n+\n+\n @Deprecated\n public interface LayeredSchemeSocketFactory extends SchemeSocketFactory {\n \n@@ -58,11 +60,7 @@ public interface LayeredSchemeSocketFactory extends SchemeSocketFactory {\n      * @throws UnknownHostException if the IP address of the host cannot be\n      * determined\n      */\n-    Socket createLayeredSocket(\n-        Socket socket,\n-        String target,\n-        int port,\n-        boolean autoClose\n-    ) throws IOException, UnknownHostException;\n \n-}\n+\n+    Socket createLayeredSocket(Socket socket, String target, int port, boolean autoClose) throws IOException, UnknownHostException;\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
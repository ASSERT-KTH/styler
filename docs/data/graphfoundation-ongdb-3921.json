{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3921",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "98",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "144",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "148",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3921/Timer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3921/Timer.java\nindex c46e2c877ad..9d4f1ba7c23 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3921/Timer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3921/Timer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.schedule;\n \n import org.neo4j.causalclustering.core.consensus.schedule.TimerService.TimerName;\n@@ -33,171 +34,168 @@ import static java.lang.String.format;\n  */\n public class Timer\n {\n-    private final TimerName name;\n-    private final JobScheduler scheduler;\n-    private final Log log;\n-    private final JobScheduler.Group group;\n-    private final TimeoutHandler handler;\n-\n-    private Timeout timeout;\n-    private Delay delay;\n-    private JobScheduler.JobHandle job;\n-    private long activeJobId;\n-\n-    /**\n-     * Creates a timer in the deactivated state.\n-     *\n-     * @param name The name of the timer.\n-     * @param scheduler The underlying scheduler used.\n-     * @param group The scheduler group used.\n-     * @param handler The timeout handler.\n-     */\n-    Timer( TimerName name, JobScheduler scheduler, Log log, JobScheduler.Group group, TimeoutHandler handler )\n+  private final TimerName name;\n+  private final JobScheduler scheduler;\n+  private final Log log;\n+  private final JobScheduler.Group group;\n+  private final TimeoutHandler handler;\n+\n+  private Timeout timeout;\n+  private Delay delay;\n+  private JobScheduler.JobHandle job;\n+  private long activeJobId;\n+\n+  /**\n+   * Creates a timer in the deactivated state.\n+   *\n+   * @param name      The name of the timer.\n+   * @param scheduler The underlying scheduler used.\n+   * @param group     The scheduler group used.\n+   * @param handler   The timeout handler.\n+   */\n+  Timer(TimerName name, JobScheduler scheduler, Log log, JobScheduler.Group group, TimeoutHandler handler)\n+  {\n+    this.name = name;\n+    this.scheduler = scheduler;\n+    this.log = log;\n+    this.group = group;\n+    this.handler = handler;\n+  }\n+\n+  /**\n+   * Activates the timer to go off at the specified timeout. Calling this method\n+   * when the timer already is active will shift the timeout to the new value.\n+   *\n+   * @param newTimeout The new timeout value.\n+   */\n+  public synchronized void set(Timeout newTimeout)\n+  {\n+    delay = newTimeout.next();\n+    timeout = newTimeout;\n+    long jobId = newJobId();\n+    job = scheduler.schedule(group, () -> handle(jobId), delay.amount(), delay.unit());\n+  }\n+\n+  private long newJobId()\n+  {\n+    activeJobId = activeJobId + 1;\n+    return activeJobId;\n+  }\n+\n+  private void handle(long jobId)\n+  {\n+    synchronized (this)\n     {\n-        this.name = name;\n-        this.scheduler = scheduler;\n-        this.log = log;\n-        this.group = group;\n-        this.handler = handler;\n+      if (activeJobId != jobId)\n+      {\n+        return;\n+      }\n     }\n \n-    /**\n-     * Activates the timer to go off at the specified timeout. Calling this method\n-     * when the timer already is active will shift the timeout to the new value.\n-     *\n-     * @param newTimeout The new timeout value.\n-     */\n-    public synchronized void set( Timeout newTimeout )\n+    try\n+    {\n+      handler.onTimeout(this);\n+    } catch (Throwable e)\n     {\n-        delay = newTimeout.next();\n-        timeout = newTimeout;\n-        long jobId = newJobId();\n-        job = scheduler.schedule( group, () -> handle( jobId ), delay.amount(), delay.unit() );\n+      log.error(format(\"[%s] Handler threw exception\", canonicalName()), e);\n     }\n-\n-    private long newJobId()\n+  }\n+\n+  /**\n+   * Resets the timer based on the currently programmed timeout.\n+   */\n+  public synchronized void reset()\n+  {\n+    if (timeout == null)\n     {\n-        activeJobId = activeJobId + 1;\n-        return activeJobId;\n+      throw new IllegalStateException(\"You can't reset until you have set a timeout\");\n     }\n-\n-    private void handle( long jobId )\n+    set(timeout);\n+  }\n+\n+  /**\n+   * Deactivates the timer and cancels a currently running job.\n+   * <p>\n+   * Be careful to not have a timeout handler executing in parallel with a\n+   * timer, because this will just cancel the timer. If you for example\n+   * {@link #reset()} in the timeout handler, but keep executing the handler,\n+   * then a subsequent cancel will not ensure that the first execution of the\n+   * handler was cancelled.\n+   *\n+   * @param cancelMode The mode of cancelling.\n+   */\n+  public void cancel(CancelMode cancelMode)\n+  {\n+    JobScheduler.JobHandle job;\n+\n+    synchronized (this)\n     {\n-        synchronized ( this )\n-        {\n-            if ( activeJobId != jobId )\n-            {\n-                return;\n-            }\n-        }\n+      activeJobId++;\n+      job = this.job;\n+    }\n \n-        try\n+    if (job != null)\n+    {\n+      try\n+      {\n+        if (cancelMode == CancelMode.SYNC_WAIT)\n         {\n-            handler.onTimeout( this );\n-        }\n-        catch ( Throwable e )\n+          job.waitTermination();\n+        } else if (cancelMode == CancelMode.ASYNC_INTERRUPT)\n         {\n-            log.error( format( \"[%s] Handler threw exception\", canonicalName() ), e );\n+          job.cancel(true);\n         }\n+      } catch (Exception e)\n+      {\n+        log.warn(format(\"[%s] Cancelling timer threw exception\", canonicalName()), e);\n+      }\n     }\n-\n+  }\n+\n+  /**\n+   * Schedules the timer for an immediate timeout.\n+   */\n+  public synchronized void invoke()\n+  {\n+    long jobId = newJobId();\n+    job = scheduler.schedule(group, () -> handle(jobId));\n+  }\n+\n+  synchronized Delay delay()\n+  {\n+    return delay;\n+  }\n+\n+  public TimerName name()\n+  {\n+    return name;\n+  }\n+\n+  private String canonicalName()\n+  {\n+    return name.getClass().getCanonicalName() + \".\" + name.name();\n+  }\n+\n+  public enum CancelMode\n+  {\n     /**\n-     * Resets the timer based on the currently programmed timeout.\n+     * Asynchronously cancels.\n      */\n-    public synchronized void reset()\n-    {\n-        if ( timeout == null )\n-        {\n-            throw new IllegalStateException( \"You can't reset until you have set a timeout\" );\n-        }\n-        set( timeout );\n-    }\n+    ASYNC,\n \n     /**\n-     * Deactivates the timer and cancels a currently running job.\n-     * <p>\n-     * Be careful to not have a timeout handler executing in parallel with a\n-     * timer, because this will just cancel the timer. If you for example\n-     * {@link #reset()} in the timeout handler, but keep executing the handler,\n-     * then a subsequent cancel will not ensure that the first execution of the\n-     * handler was cancelled.\n-     *\n-     * @param cancelMode The mode of cancelling.\n+     * Asynchronously cancels and interrupts the handler.\n      */\n-    public void cancel( CancelMode cancelMode )\n-    {\n-        JobScheduler.JobHandle job;\n-\n-        synchronized ( this )\n-        {\n-            activeJobId++;\n-            job = this.job;\n-        }\n-\n-        if ( job != null )\n-        {\n-            try\n-            {\n-                if ( cancelMode == CancelMode.SYNC_WAIT )\n-                {\n-                    job.waitTermination();\n-                }\n-                else if ( cancelMode == CancelMode.ASYNC_INTERRUPT )\n-                {\n-                    job.cancel( true );\n-                }\n-            }\n-            catch ( Exception e )\n-            {\n-                log.warn( format( \"[%s] Cancelling timer threw exception\", canonicalName() ), e );\n-            }\n-        }\n-    }\n+    ASYNC_INTERRUPT,\n \n     /**\n-     * Schedules the timer for an immediate timeout.\n+     * Synchronously cancels and waits for the handler to finish.\n      */\n-    public synchronized void invoke()\n-    {\n-        long jobId = newJobId();\n-        job = scheduler.schedule( group, () -> handle( jobId ) );\n-    }\n+    SYNC_WAIT,\n \n-    synchronized Delay delay()\n-    {\n-        return delay;\n-    }\n-\n-    public TimerName name()\n-    {\n-        return name;\n-    }\n-\n-    private String canonicalName()\n-    {\n-        return name.getClass().getCanonicalName() + \".\" + name.name();\n-    }\n-\n-    public enum CancelMode\n-    {\n-        /**\n-         * Asynchronously cancels.\n-         */\n-        ASYNC,\n-\n-        /**\n-         * Asynchronously cancels and interrupts the handler.\n-         */\n-        ASYNC_INTERRUPT,\n-\n-        /**\n-         * Synchronously cancels and waits for the handler to finish.\n-         */\n-        SYNC_WAIT,\n-\n-        /*\n-         * Note that SYNC_INTERRUPT cannot be supported, since the underlying\n-         * primitive is a future which cannot be cancelled/interrupted and awaited.\n-         */\n-    }\n+    /*\n+     * Note that SYNC_INTERRUPT cannot be supported, since the underlying\n+     * primitive is a future which cannot be cancelled/interrupted and awaited.\n+     */\n+  }\n }\n",
            "diff_size": 235
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3921/Timer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3921/Timer.java\nindex c46e2c877ad..0235b2e801c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3921/Timer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3921/Timer.java\n@@ -110,7 +110,8 @@ public class Timer\n         {\n             throw new IllegalStateException( \"You can't reset until you have set a timeout\" );\n         }\n-        set( timeout );\n+\n+set( timeout );\n     }\n \n     /**\n@@ -200,4 +201,4 @@ public class Timer\n          * primitive is a future which cannot be cancelled/interrupted and awaited.\n          */\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "wso2-attic-commons",
    "error_id": "187",
    "information": {
        "errors": [
            {
                "line": "36",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 123).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\npublic class ProcessManagementDaoImpl extends DaoBaseImpl implements ProcessManagementDAO {\n    public Object[] findFailedCountAndLastFailedDateForProcessId(BpelDAOConnection conn, String status, String processId) {\n        Date lastFailureDt = null;\n        int failureInstances = 0;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/187/ProcessManagementDaoImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/187/ProcessManagementDaoImpl.java\nindex eda14c2cdee..317b1a69b56 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/187/ProcessManagementDaoImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/187/ProcessManagementDaoImpl.java\n@@ -33,8 +33,9 @@ import org.apache.ode.bpel.dao.ProcessManagementDAO;\n import org.apache.ode.bpel.dao.ProcessManagementDAO.InstanceSummaryKey;\n \n public class ProcessManagementDaoImpl extends DaoBaseImpl implements ProcessManagementDAO {\n-    public Object[] findFailedCountAndLastFailedDateForProcessId(BpelDAOConnection conn, String status, String processId) {\n-        Date lastFailureDt = null;\n+    public Object[] findFailedCountAndLastFailedDateForProcessId(BpelDAOConnection conn, String status,\n+            String processId) {\n+         Date lastFailureDt = null;\n         int failureInstances = 0;\n \n         InstanceFilter instanceFilter = new InstanceFilter(\"status=\" + status + \" pid=\"+ processId);\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/187/ProcessManagementDaoImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/187/ProcessManagementDaoImpl.java\nindex eda14c2cdee..28235f01580 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/187/ProcessManagementDaoImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/187/ProcessManagementDaoImpl.java\n@@ -33,40 +33,42 @@ import org.apache.ode.bpel.dao.ProcessManagementDAO;\n import org.apache.ode.bpel.dao.ProcessManagementDAO.InstanceSummaryKey;\n \n public class ProcessManagementDaoImpl extends DaoBaseImpl implements ProcessManagementDAO {\n-    public Object[] findFailedCountAndLastFailedDateForProcessId(BpelDAOConnection conn, String status, String processId) {\n-        Date lastFailureDt = null;\n-        int failureInstances = 0;\n+  public Object[] findFailedCountAndLastFailedDateForProcessId(BpelDAOConnection conn, String status,\n+                                                               String processId) {\n+    Date lastFailureDt = null;\n+    int failureInstances = 0;\n \n-        InstanceFilter instanceFilter = new InstanceFilter(\"status=\" + status + \" pid=\"+ processId);\n-        for (ProcessInstanceDAO instance : conn.instanceQuery(instanceFilter)) {\n-            int count = instance.getActivityFailureCount();\n-            if (count > 0) {\n-                ++failureInstances;\n-                Date failureDt = instance.getActivityFailureDateTime();\n-                if (lastFailureDt == null || lastFailureDt.before(failureDt))\n-                    lastFailureDt = failureDt;\n-            }\n+    InstanceFilter instanceFilter = new InstanceFilter(\"status=\" + status + \" pid=\" + processId);\n+    for (ProcessInstanceDAO instance : conn.instanceQuery(instanceFilter)) {\n+      int count = instance.getActivityFailureCount();\n+      if (count > 0) {\n+        ++failureInstances;\n+        Date failureDt = instance.getActivityFailureDateTime();\n+        if (lastFailureDt == null || lastFailureDt.before(failureDt)) {\n+          lastFailureDt = failureDt;\n         }\n-\n-        return new Object[] {failureInstances, lastFailureDt};\n+      }\n     }\n \n-    public void prefetchActivityFailureCounts(Collection<ProcessInstanceDAO> instances) {\n-        // do nothing\n-    }\n+    return new Object[] {failureInstances, lastFailureDt};\n+  }\n \n-    public int countInstancesByPidAndString(BpelDAOConnection conn, QName pid, String status) {\n-        InstanceFilter instanceFilter = new InstanceFilter(\"status=\" + status + \" pid=\"+ pid);\n+  public void prefetchActivityFailureCounts(Collection<ProcessInstanceDAO> instances) {\n+    // do nothing\n+  }\n \n-        // TODO: this is grossly inefficient\n-        return conn.instanceQuery(instanceFilter).size();\n-    }\n+  public int countInstancesByPidAndString(BpelDAOConnection conn, QName pid, String status) {\n+    InstanceFilter instanceFilter = new InstanceFilter(\"status=\" + status + \" pid=\" + pid);\n \n-    public Map<InstanceSummaryKey, Long> countInstancesSummary(Set<String> pids) {\n-        return new HashMap<InstanceSummaryKey, Long>();\n-    }\n+    // TODO: this is grossly inefficient\n+    return conn.instanceQuery(instanceFilter).size();\n+  }\n \n-    public Map<String, FailedSummaryValue> findFailedCountAndLastFailedDateForProcessIds(Set<String> pids) {\n-        return new HashMap<String, FailedSummaryValue>();\n-    }\n+  public Map<InstanceSummaryKey, Long> countInstancesSummary(Set<String> pids) {\n+    return new HashMap<InstanceSummaryKey, Long>();\n+  }\n+\n+  public Map<String, FailedSummaryValue> findFailedCountAndLastFailedDateForProcessIds(Set<String> pids) {\n+    return new HashMap<String, FailedSummaryValue>();\n+  }\n }\n",
            "diff_size": 34
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/187/ProcessManagementDaoImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/187/ProcessManagementDaoImpl.java\nindex eda14c2cdee..2ad2349d917 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/187/ProcessManagementDaoImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/187/ProcessManagementDaoImpl.java\n@@ -37,7 +37,7 @@ public class ProcessManagementDaoImpl extends DaoBaseImpl implements ProcessMana\n         Date lastFailureDt = null;\n         int failureInstances = 0;\n \n-        InstanceFilter instanceFilter = new InstanceFilter(\"status=\" + status + \" pid=\"+ processId);\n+        InstanceFilter instanceFilter = new InstanceFilter(\"status=\" + status + \" pid=\" + processId);\n         for (ProcessInstanceDAO instance : conn.instanceQuery(instanceFilter)) {\n             int count = instance.getActivityFailureCount();\n             if (count > 0) {\n@@ -56,7 +56,7 @@ public class ProcessManagementDaoImpl extends DaoBaseImpl implements ProcessMana\n     }\n \n     public int countInstancesByPidAndString(BpelDAOConnection conn, QName pid, String status) {\n-        InstanceFilter instanceFilter = new InstanceFilter(\"status=\" + status + \" pid=\"+ pid);\n+        InstanceFilter instanceFilter = new InstanceFilter(\"status=\" + status + \" pid=\" + pid);\n \n         // TODO: this is grossly inefficient\n         return conn.instanceQuery(instanceFilter).size();\n@@ -69,4 +69,4 @@ public class ProcessManagementDaoImpl extends DaoBaseImpl implements ProcessMana\n     public Map<String, FailedSummaryValue> findFailedCountAndLastFailedDateForProcessIds(Set<String> pids) {\n         return new HashMap<String, FailedSummaryValue>();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/187/ProcessManagementDaoImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/187/ProcessManagementDaoImpl.java\nindex eda14c2cdee..317b1a69b56 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/187/ProcessManagementDaoImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/187/ProcessManagementDaoImpl.java\n@@ -33,8 +33,9 @@ import org.apache.ode.bpel.dao.ProcessManagementDAO;\n import org.apache.ode.bpel.dao.ProcessManagementDAO.InstanceSummaryKey;\n \n public class ProcessManagementDaoImpl extends DaoBaseImpl implements ProcessManagementDAO {\n-    public Object[] findFailedCountAndLastFailedDateForProcessId(BpelDAOConnection conn, String status, String processId) {\n-        Date lastFailureDt = null;\n+    public Object[] findFailedCountAndLastFailedDateForProcessId(BpelDAOConnection conn, String status,\n+            String processId) {\n+         Date lastFailureDt = null;\n         int failureInstances = 0;\n \n         InstanceFilter instanceFilter = new InstanceFilter(\"status=\" + status + \" pid=\"+ processId);\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "560",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "69",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "165",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "165",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/560/OnlineBackupCommandBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/560/OnlineBackupCommandBuilder.java\nindex 45ada9ddace..489a3499a18 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/560/OnlineBackupCommandBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/560/OnlineBackupCommandBuilder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.backup.impl;\n \n import org.apache.commons.lang3.StringUtils;\n@@ -50,303 +51,304 @@ import static java.lang.String.format;\n  */\n public class OnlineBackupCommandBuilder\n {\n-    private String host;\n-    private Integer port;\n-    private Boolean fallbackToFull;\n-    private Long timeout;\n-    private Boolean checkConsistency;\n-    private File consistencyReportLocation;\n-    private Config additionalConfig;\n-    private SelectedBackupProtocol selectedBackupProtocol;\n-    private Boolean consistencyCheckGraph;\n-    private Boolean consistencyCheckIndexes;\n-    private Boolean consistencyCheckLabel;\n-    private Boolean consistencyCheckOwners;\n-    private OutputStream output;\n-    private Optional<String[]> rawArgs = Optional.empty();\n-\n-    public OnlineBackupCommandBuilder withRawArgs( String... args )\n-    {\n-        rawArgs = Optional.of( args );\n-        return this;\n-    }\n-\n-    public OnlineBackupCommandBuilder withHost( String host )\n-    {\n-        this.host = host;\n-        return this;\n-    }\n-\n-    public OnlineBackupCommandBuilder withPort( Integer port )\n-    {\n-        this.port = port;\n-        return this;\n-    }\n-\n-    public OnlineBackupCommandBuilder withFallbackToFull( Boolean flag )\n-    {\n-        this.fallbackToFull = flag;\n-        return this;\n-    }\n-\n-    public OnlineBackupCommandBuilder withTimeout( Long timeoutInMillis )\n-    {\n-        this.timeout = timeoutInMillis;\n-        return this;\n-    }\n-\n-    public OnlineBackupCommandBuilder withConsistencyCheck( Boolean flag )\n-    {\n-        this.checkConsistency = flag;\n-        return this;\n-    }\n-\n-    public OnlineBackupCommandBuilder withReportFlag( File consistencyReportLocation )\n-    {\n-        this.consistencyReportLocation = consistencyReportLocation;\n-        return this;\n-    }\n-\n-    public OnlineBackupCommandBuilder withAdditionalConfig( Config additionalConfig )\n-    {\n-        this.additionalConfig = additionalConfig;\n-        return this;\n-    }\n-\n-    public OnlineBackupCommandBuilder withGraphConsistencyCheck( Boolean flag )\n-    {\n-        this.consistencyCheckGraph = flag;\n-        return this;\n-    }\n-\n-    public OnlineBackupCommandBuilder withIndexConsistencyCheck( Boolean flag )\n-    {\n-        this.consistencyCheckIndexes = flag;\n-        return this;\n-    }\n-\n-    public OnlineBackupCommandBuilder withLabelConsistencyCheck( Boolean flag )\n-    {\n-        this.consistencyCheckLabel = flag;\n-        return this;\n-    }\n-\n-    public OnlineBackupCommandBuilder withOwnerConsistencyCheck( Boolean flag )\n-    {\n-        this.consistencyCheckOwners = flag;\n-        return this;\n-    }\n-\n-    public OnlineBackupCommandBuilder withOutput( OutputStream outputStream )\n-    {\n-        this.output = outputStream;\n-        return this;\n-    }\n-\n-    public OnlineBackupCommandBuilder withSelectedBackupStrategy( SelectedBackupProtocol selectedBackupStrategy )\n-    {\n-        this.selectedBackupProtocol = selectedBackupStrategy;\n-        return this;\n-    }\n-\n-    public boolean backup( File neo4jHome, String backupName ) throws CommandFailed, IncorrectUsage\n-    {\n-        File targetLocation = new File( neo4jHome, backupName );\n-        String[] args;\n-        if ( rawArgs.isPresent() )\n-        {\n-            args = rawArgs.get();\n-        }\n-        else\n-        {\n-            try\n-            {\n-                args = resolveArgs( targetLocation );\n-            }\n-            catch ( IOException e )\n-            {\n-                throw new CommandFailed( \"Failed to resolve arguments\", e );\n-            }\n-        }\n-        new OnlineBackupCommandProvider()\n-                .create( neo4jHome.toPath(),\n-                        configDirFromTarget( neo4jHome.toPath() ),\n-                        resolveOutsideWorld() )\n-                .execute( args );\n-        return true;\n-    }\n-\n-    public String[] resolveArgs( File targetLocation ) throws IOException\n-    {\n-        return args(\n-                argBackupName( targetLocation ),\n-                argBackupLocation( targetLocation ),\n-                argFrom(),\n-                argFallbackToFull(),\n-                argSelectedProtocol(),\n-                argTimeout(),\n-                argCheckConsistency(),\n-                argReportDir(),\n-                argAdditionalConf( targetLocation ),\n-                argCcGraph(),\n-                argCcIndexes(),\n-                argCcLabel(),\n-                argCcOwners() );\n-    }\n-\n-    private OutsideWorld resolveOutsideWorld()\n-    {\n-        Optional<OutputStream> output = Optional.ofNullable( this.output );\n-        return new ParameterisedOutsideWorld(\n-                System.console(), output.orElse( System.out ),\n-                output.orElse( System.err ),\n-                System.in, new DefaultFileSystemAbstraction() );\n-    }\n-\n-    /**\n-     * Client handles the ports and hosts automatically, so no necessary need to specify\n-     * @return command line parameter for specifying the backup address\n-     */\n-    private String argFrom()\n-    {\n-        if ( host == null && port == null )\n-        {\n-            return \"\";\n-        }\n-        String address = String.join( \":\",\n-                Optional.ofNullable( host ).orElse( \"\" ),\n-                Optional.ofNullable( port ).map( port -> Integer.toString( port ) ).orElse( \"\" ) );\n-        return format( \"--from=%s\", address );\n-    }\n-\n-    /**\n-     * The backup location is the directory that stores multiple backups. Each directory in \"backup location\" is named after the backup name.\n-     * In order for a backup to belong where the user wants it, the backup location is the parent of the target specified by the user.\n-     * @return backup location command line argument\n-     */\n-    private String argBackupLocation( File targetLocation )\n-    {\n-        String location = Optional.ofNullable( targetLocation )\n-                .map( f -> targetLocation.getParentFile() )\n-                .orElseThrow( wrongArguments( \"No target location specified\" ) )\n-                .toString();\n-        return format( \"--backup-dir=%s\", location );\n-    }\n-\n-    private String argBackupName( File targetLocation )\n-    {\n-        String backupName = Optional.ofNullable( targetLocation )\n-                .map( File::getName )\n-                .orElseThrow( wrongArguments( \"No target location specified\" ) );\n-        return format( \"--name=%s\", backupName );\n-    }\n-\n-    private static Supplier<IllegalArgumentException> wrongArguments( String message )\n-    {\n-        return () -> new IllegalArgumentException( message );\n-    }\n-\n-    private String argFallbackToFull()\n-    {\n-        return Optional.ofNullable( fallbackToFull )\n-                .map( flag -> format( \"--fallback-to-full=%s\", flag ) )\n-                .orElse( \"\" );\n-    }\n-\n-    private String argSelectedProtocol()\n-    {\n-        return Optional.ofNullable( selectedBackupProtocol )\n-                .map( SelectedBackupProtocol::getName )\n-                .map( argValue -> format( \"--%s=%s\", OnlineBackupContextBuilder.ARG_NAME_PROTO_OVERRIDE, argValue ) )\n-                .orElse( \"\" );\n-    }\n-\n-    private String argTimeout()\n-    {\n-        return Optional.ofNullable( this.timeout )\n-                .map( value -> format(\"--timeout=%dms\", value) )\n-                .orElse( \"\" );\n-    }\n-\n-    private String argCcOwners()\n-    {\n-        return Optional.ofNullable( this.consistencyCheckOwners )\n-                .map( value -> format( \"--check-consistency=%b\", this.consistencyCheckOwners ) )\n-                .orElse( \"\" );\n-    }\n-\n-    private String argCcLabel()\n-    {\n-        return Optional.ofNullable( this.consistencyCheckLabel )\n-                .map( value -> format( \"--cc-label-scan-store=%b\", this.consistencyCheckLabel ) )\n-                .orElse( \"\" );\n-    }\n-\n-    private String argCcIndexes()\n-    {\n-        return Optional.ofNullable( this.consistencyCheckIndexes )\n-                .map( value -> format( \"--cc-indexes=%b\", this.consistencyCheckIndexes ) )\n-                .orElse( \"\" );\n-    }\n-\n-    private String argCcGraph()\n-    {\n-        return Optional.ofNullable( this.consistencyCheckGraph )\n-                .map( value -> format( \"--cc-graph=%b\", this.consistencyCheckGraph ) )\n-                .orElse( \"\" );\n-    }\n-\n-    private String argAdditionalConf( File backupTarget ) throws IOException\n-    {\n-        if ( additionalConfig == null )\n-        {\n-            return \"\";\n-        }\n-        File configFile = backupTarget.toPath().resolve( \"../additional_neo4j.conf\" ).toFile();\n-        writeConfigToFile( additionalConfig, configFile );\n-\n-        return format( \"--additional-config=%s\", configFile );\n-    }\n-\n-    private void writeConfigToFile( Config config, File file ) throws IOException\n-    {\n-        try ( Writer fileWriter = new BufferedWriter( new FileWriter( file ) ) )\n-        {\n-            for ( Map.Entry<String,String> entry : config.getRaw().entrySet() )\n-            {\n-                fileWriter.write( format( \"%s=%s\\n\", entry.getKey(), entry.getValue() ) );\n-            }\n-        }\n-    }\n-\n-    private String argReportDir()\n-    {\n-        return Optional.ofNullable( this.consistencyReportLocation )\n-                .map( value -> format( \"--cc-report-dir=%s\", value ))\n-                .orElse( \"\" );\n-    }\n-\n-    private String argCheckConsistency()\n-    {\n-        return Optional.ofNullable( this.checkConsistency )\n-                .map( value -> format( \"--check-consistency=%s\", value ) )\n-                .orElse( \"\" );\n-    }\n-\n-    /**\n-     * Removes empty args and is a convenience method\n-     * @param args nullable, can be empty\n-     * @return cleaned command line parameters\n-     */\n-    private static String[] args( String... args )\n-    {\n-        return Stream.of( args )\n-                .filter( StringUtils::isNoneEmpty )\n-                .toArray( String[]::new );\n-    }\n-\n-    private static Path configDirFromTarget( Path neo4jHome )\n-    {\n-        return neo4jHome.resolve( \"conf\" );\n-    }\n+  private String host;\n+  private Integer port;\n+  private Boolean fallbackToFull;\n+  private Long timeout;\n+  private Boolean checkConsistency;\n+  private File consistencyReportLocation;\n+  private Config additionalConfig;\n+  private SelectedBackupProtocol selectedBackupProtocol;\n+  private Boolean consistencyCheckGraph;\n+  private Boolean consistencyCheckIndexes;\n+  private Boolean consistencyCheckLabel;\n+  private Boolean consistencyCheckOwners;\n+  private OutputStream output;\n+  private Optional<String[]> rawArgs = Optional.empty();\n+\n+  public OnlineBackupCommandBuilder withRawArgs(String... args)\n+  {\n+    rawArgs = Optional.of(args);\n+    return this;\n+  }\n+\n+  public OnlineBackupCommandBuilder withHost(String host)\n+  {\n+    this.host = host;\n+    return this;\n+  }\n+\n+  public OnlineBackupCommandBuilder withPort(Integer port)\n+  {\n+    this.port = port;\n+    return this;\n+  }\n+\n+  public OnlineBackupCommandBuilder withFallbackToFull(Boolean flag)\n+  {\n+    this.fallbackToFull = flag;\n+    return this;\n+  }\n+\n+  public OnlineBackupCommandBuilder withTimeout(Long timeoutInMillis)\n+  {\n+    this.timeout = timeoutInMillis;\n+    return this;\n+  }\n+\n+  public OnlineBackupCommandBuilder withConsistencyCheck(Boolean flag)\n+  {\n+    this.checkConsistency = flag;\n+    return this;\n+  }\n+\n+  public OnlineBackupCommandBuilder withReportFlag(File consistencyReportLocation)\n+  {\n+    this.consistencyReportLocation = consistencyReportLocation;\n+    return this;\n+  }\n+\n+  public OnlineBackupCommandBuilder withAdditionalConfig(Config additionalConfig)\n+  {\n+    this.additionalConfig = additionalConfig;\n+    return this;\n+  }\n+\n+  public OnlineBackupCommandBuilder withGraphConsistencyCheck(Boolean flag)\n+  {\n+    this.consistencyCheckGraph = flag;\n+    return this;\n+  }\n+\n+  public OnlineBackupCommandBuilder withIndexConsistencyCheck(Boolean flag)\n+  {\n+    this.consistencyCheckIndexes = flag;\n+    return this;\n+  }\n+\n+  public OnlineBackupCommandBuilder withLabelConsistencyCheck(Boolean flag)\n+  {\n+    this.consistencyCheckLabel = flag;\n+    return this;\n+  }\n+\n+  public OnlineBackupCommandBuilder withOwnerConsistencyCheck(Boolean flag)\n+  {\n+    this.consistencyCheckOwners = flag;\n+    return this;\n+  }\n+\n+  public OnlineBackupCommandBuilder withOutput(OutputStream outputStream)\n+  {\n+    this.output = outputStream;\n+    return this;\n+  }\n+\n+  public OnlineBackupCommandBuilder withSelectedBackupStrategy(SelectedBackupProtocol selectedBackupStrategy)\n+  {\n+    this.selectedBackupProtocol = selectedBackupStrategy;\n+    return this;\n+  }\n+\n+  public boolean backup(File neo4jHome, String backupName) throws CommandFailed, IncorrectUsage\n+  {\n+    File targetLocation = new File(neo4jHome, backupName);\n+    String[] args;\n+    if (rawArgs.isPresent())\n+    {\n+      args = rawArgs.get();\n+    } else\n+    {\n+      try\n+      {\n+        args = resolveArgs(targetLocation);\n+      } catch (IOException e)\n+      {\n+        throw new CommandFailed(\"Failed to resolve arguments\", e);\n+      }\n+    }\n+    new OnlineBackupCommandProvider()\n+        .create(neo4jHome.toPath(),\n+            configDirFromTarget(neo4jHome.toPath()),\n+            resolveOutsideWorld())\n+        .execute(args);\n+    return true;\n+  }\n+\n+  public String[] resolveArgs(File targetLocation) throws IOException\n+  {\n+    return args(\n+        argBackupName(targetLocation),\n+        argBackupLocation(targetLocation),\n+        argFrom(),\n+        argFallbackToFull(),\n+        argSelectedProtocol(),\n+        argTimeout(),\n+        argCheckConsistency(),\n+        argReportDir(),\n+        argAdditionalConf(targetLocation),\n+        argCcGraph(),\n+        argCcIndexes(),\n+        argCcLabel(),\n+        argCcOwners());\n+  }\n+\n+  private OutsideWorld resolveOutsideWorld()\n+  {\n+    Optional<OutputStream> output = Optional.ofNullable(this.output);\n+    return new ParameterisedOutsideWorld(\n+        System.console(), output.orElse(System.out),\n+        output.orElse(System.err),\n+        System.in, new DefaultFileSystemAbstraction());\n+  }\n+\n+  /**\n+   * Client handles the ports and hosts automatically, so no necessary need to specify\n+   *\n+   * @return command line parameter for specifying the backup address\n+   */\n+  private String argFrom()\n+  {\n+    if (host == null && port == null)\n+    {\n+      return \"\";\n+    }\n+    String address = String.join(\":\",\n+        Optional.ofNullable(host).orElse(\"\"),\n+        Optional.ofNullable(port).map(port -> Integer.toString(port)).orElse(\"\"));\n+    return format(\"--from=%s\", address);\n+  }\n+\n+  /**\n+   * The backup location is the directory that stores multiple backups. Each directory in \"backup location\" is named after the backup name.\n+   * In order for a backup to belong where the user wants it, the backup location is the parent of the target specified by the user.\n+   *\n+   * @return backup location command line argument\n+   */\n+  private String argBackupLocation(File targetLocation)\n+  {\n+    String location = Optional.ofNullable(targetLocation)\n+        .map(f -> targetLocation.getParentFile())\n+        .orElseThrow(wrongArguments(\"No target location specified\"))\n+        .toString();\n+    return format(\"--backup-dir=%s\", location);\n+  }\n+\n+  private String argBackupName(File targetLocation)\n+  {\n+    String backupName = Optional.ofNullable(targetLocation)\n+        .map(File::getName)\n+        .orElseThrow(wrongArguments(\"No target location specified\"));\n+    return format(\"--name=%s\", backupName);\n+  }\n+\n+  private static Supplier<IllegalArgumentException> wrongArguments(String message)\n+  {\n+    return () -> new IllegalArgumentException(message);\n+  }\n+\n+  private String argFallbackToFull()\n+  {\n+    return Optional.ofNullable(fallbackToFull)\n+        .map(flag -> format(\"--fallback-to-full=%s\", flag))\n+        .orElse(\"\");\n+  }\n+\n+  private String argSelectedProtocol()\n+  {\n+    return Optional.ofNullable(selectedBackupProtocol)\n+        .map(SelectedBackupProtocol::getName)\n+        .map(argValue -> format(\"--%s=%s\", OnlineBackupContextBuilder.ARG_NAME_PROTO_OVERRIDE, argValue))\n+        .orElse(\"\");\n+  }\n+\n+  private String argTimeout()\n+  {\n+    return Optional.ofNullable(this.timeout)\n+        .map(value -> format(\"--timeout=%dms\", value))\n+        .orElse(\"\");\n+  }\n+\n+  private String argCcOwners()\n+  {\n+    return Optional.ofNullable(this.consistencyCheckOwners)\n+        .map(value -> format(\"--check-consistency=%b\", this.consistencyCheckOwners))\n+        .orElse(\"\");\n+  }\n+\n+  private String argCcLabel()\n+  {\n+    return Optional.ofNullable(this.consistencyCheckLabel)\n+        .map(value -> format(\"--cc-label-scan-store=%b\", this.consistencyCheckLabel))\n+        .orElse(\"\");\n+  }\n+\n+  private String argCcIndexes()\n+  {\n+    return Optional.ofNullable(this.consistencyCheckIndexes)\n+        .map(value -> format(\"--cc-indexes=%b\", this.consistencyCheckIndexes))\n+        .orElse(\"\");\n+  }\n+\n+  private String argCcGraph()\n+  {\n+    return Optional.ofNullable(this.consistencyCheckGraph)\n+        .map(value -> format(\"--cc-graph=%b\", this.consistencyCheckGraph))\n+        .orElse(\"\");\n+  }\n+\n+  private String argAdditionalConf(File backupTarget) throws IOException\n+  {\n+    if (additionalConfig == null)\n+    {\n+      return \"\";\n+    }\n+    File configFile = backupTarget.toPath().resolve(\"../additional_neo4j.conf\").toFile();\n+    writeConfigToFile(additionalConfig, configFile);\n+\n+    return format(\"--additional-config=%s\", configFile);\n+  }\n+\n+  private void writeConfigToFile(Config config, File file) throws IOException\n+  {\n+    try (Writer fileWriter = new BufferedWriter(new FileWriter(file)))\n+    {\n+      for (Map.Entry<String, String> entry : config.getRaw().entrySet())\n+      {\n+        fileWriter.write(format(\"%s=%s\\n\", entry.getKey(), entry.getValue()));\n+      }\n+    }\n+  }\n+\n+  private String argReportDir()\n+  {\n+    return Optional.ofNullable(this.consistencyReportLocation)\n+        .map(value -> format(\"--cc-report-dir=%s\", value))\n+        .orElse(\"\");\n+  }\n+\n+  private String argCheckConsistency()\n+  {\n+    return Optional.ofNullable(this.checkConsistency)\n+        .map(value -> format(\"--check-consistency=%s\", value))\n+        .orElse(\"\");\n+  }\n+\n+  /**\n+   * Removes empty args and is a convenience method\n+   *\n+   * @param args nullable, can be empty\n+   * @return cleaned command line parameters\n+   */\n+  private static String[] args(String... args)\n+  {\n+    return Stream.of(args)\n+        .filter(StringUtils::isNoneEmpty)\n+        .toArray(String[]::new);\n+  }\n+\n+  private static Path configDirFromTarget(Path neo4jHome)\n+  {\n+    return neo4jHome.resolve(\"conf\");\n+  }\n }\n",
            "diff_size": 301
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
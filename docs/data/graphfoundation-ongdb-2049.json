{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2049",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "55",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2049/PruningScheduler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2049/PruningScheduler.java\nindex c549b8b6bc1..5ed43d5274e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2049/PruningScheduler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2049/PruningScheduler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.log.pruning;\n \n import static java.util.concurrent.TimeUnit.MILLISECONDS;\n@@ -35,78 +36,76 @@ import org.neo4j.logging.LogProvider;\n \n public class PruningScheduler extends LifecycleAdapter\n {\n-    private final RaftLogPruner logPruner;\n-    private final JobScheduler scheduler;\n-    private final long recurringPeriodMillis;\n-    private final Runnable job = new Runnable()\n-    {\n-        @Override\n-        public void run()\n-        {\n-            try\n-            {\n-                checkPointing = true;\n-                if ( stopped )\n-                {\n-                    return;\n-                }\n-                logPruner.prune();\n-            }\n-            catch ( IOException e )\n-            {\n-                // no need to reschedule since the check pointer has raised a kernel panic and a shutdown is expected\n-                throw new UnderlyingStorageException( e );\n-            }\n-            finally\n-            {\n-                checkPointing = false;\n-            }\n-\n-            // reschedule only if it is not stopped\n-            if ( !stopped )\n-            {\n-                handle = scheduler.schedule( raftLogPruning, job, recurringPeriodMillis, MILLISECONDS );\n-            }\n-        }\n-    };\n-    private final Log log;\n-\n-    private volatile JobScheduler.JobHandle handle;\n-    private volatile boolean stopped;\n-    private volatile boolean checkPointing;\n-    private final BooleanSupplier checkPointingCondition = new BooleanSupplier()\n+  private final RaftLogPruner logPruner;\n+  private final JobScheduler scheduler;\n+  private final long recurringPeriodMillis;\n+  private final Runnable job = new Runnable()\n+  {\n+    @Override\n+    public void run()\n     {\n-        @Override\n-        public boolean getAsBoolean()\n+      try\n+      {\n+        checkPointing = true;\n+        if (stopped)\n         {\n-            return !checkPointing;\n+          return;\n         }\n-    };\n+        logPruner.prune();\n+      } catch (IOException e)\n+      {\n+        // no need to reschedule since the check pointer has raised a kernel panic and a shutdown is expected\n+        throw new UnderlyingStorageException(e);\n+      } finally\n+      {\n+        checkPointing = false;\n+      }\n \n-    public PruningScheduler( RaftLogPruner logPruner, JobScheduler scheduler, long recurringPeriodMillis, LogProvider\n-            logProvider )\n-    {\n-        this.logPruner = logPruner;\n-        this.scheduler = scheduler;\n-        this.recurringPeriodMillis = recurringPeriodMillis;\n-        log = logProvider.getLog( getClass() );\n+      // reschedule only if it is not stopped\n+      if (!stopped)\n+      {\n+        handle = scheduler.schedule(raftLogPruning, job, recurringPeriodMillis, MILLISECONDS);\n+      }\n     }\n+  };\n+  private final Log log;\n \n+  private volatile JobScheduler.JobHandle handle;\n+  private volatile boolean stopped;\n+  private volatile boolean checkPointing;\n+  private final BooleanSupplier checkPointingCondition = new BooleanSupplier()\n+  {\n     @Override\n-    public void start()\n+    public boolean getAsBoolean()\n     {\n-        handle = scheduler.schedule( raftLogPruning, job, recurringPeriodMillis, MILLISECONDS );\n+      return !checkPointing;\n     }\n+  };\n \n-    @Override\n-    public void stop()\n+  public PruningScheduler(RaftLogPruner logPruner, JobScheduler scheduler, long recurringPeriodMillis, LogProvider\n+      logProvider)\n+  {\n+    this.logPruner = logPruner;\n+    this.scheduler = scheduler;\n+    this.recurringPeriodMillis = recurringPeriodMillis;\n+    log = logProvider.getLog(getClass());\n+  }\n+\n+  @Override\n+  public void start()\n+  {\n+    handle = scheduler.schedule(raftLogPruning, job, recurringPeriodMillis, MILLISECONDS);\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+    log.info(\"PruningScheduler stopping\");\n+    stopped = true;\n+    if (handle != null)\n     {\n-        log.info( \"PruningScheduler stopping\" );\n-        stopped = true;\n-        if ( handle != null )\n-        {\n-            handle.cancel( false );\n-        }\n-        Predicates.awaitForever( checkPointingCondition, 100, MILLISECONDS );\n+      handle.cancel(false);\n     }\n+    Predicates.awaitForever(checkPointingCondition, 100, MILLISECONDS);\n+  }\n }\n",
            "diff_size": 102
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2049/PruningScheduler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2049/PruningScheduler.java\nindex c549b8b6bc1..c2331bf0902 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2049/PruningScheduler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2049/PruningScheduler.java\n@@ -20,11 +20,10 @@\n package org.neo4j.causalclustering.core.consensus.log.pruning;\n \n import static java.util.concurrent.TimeUnit.MILLISECONDS;\n-import static org.neo4j.scheduler.JobScheduler.Groups.raftLogPruning;\n \n+import static org.neo4j.scheduler.JobScheduler.Groups.raftLogPruning;\n import java.io.IOException;\n import java.util.function.BooleanSupplier;\n-\n import org.neo4j.causalclustering.core.state.RaftLogPruner;\n import org.neo4j.function.Predicates;\n import org.neo4j.kernel.impl.store.UnderlyingStorageException;\n@@ -39,52 +38,52 @@ public class PruningScheduler extends LifecycleAdapter\n     private final JobScheduler scheduler;\n     private final long recurringPeriodMillis;\n     private final Runnable job = new Runnable()\n+{\n+    @Override\n+    public void run()\n     {\n-        @Override\n-        public void run()\n+        try\n         {\n-            try\n+            checkPointing = true;\n+            if ( stopped )\n             {\n-                checkPointing = true;\n-                if ( stopped )\n-                {\n-                    return;\n-                }\n-                logPruner.prune();\n+                return;\n             }\n-            catch ( IOException e )\n-            {\n+\n+            logPruner.prune();\n+        }\n+        catch ( IOException e )\n+        {\n                 // no need to reschedule since the check pointer has raised a kernel panic and a shutdown is expected\n-                throw new UnderlyingStorageException( e );\n-            }\n-            finally\n-            {\n-                checkPointing = false;\n-            }\n+            throw new UnderlyingStorageException( e );\n+        }\n+        finally\n+        {\n+            checkPointing = false;\n+        }\n \n             // reschedule only if it is not stopped\n-            if ( !stopped )\n-            {\n-                handle = scheduler.schedule( raftLogPruning, job, recurringPeriodMillis, MILLISECONDS );\n-            }\n+\n+        if ( ! stopped )\n+        {\n+            handle = scheduler.schedule( raftLogPruning, job, recurringPeriodMillis, MILLISECONDS );\n         }\n-    };\n+    }\n+};\n     private final Log log;\n-\n     private volatile JobScheduler.JobHandle handle;\n     private volatile boolean stopped;\n     private volatile boolean checkPointing;\n     private final BooleanSupplier checkPointingCondition = new BooleanSupplier()\n+{\n+    @Override\n+    public boolean getAsBoolean()\n     {\n-        @Override\n-        public boolean getAsBoolean()\n-        {\n-            return !checkPointing;\n-        }\n-    };\n+        return ! checkPointing;\n+    }\n+};\n \n-    public PruningScheduler( RaftLogPruner logPruner, JobScheduler scheduler, long recurringPeriodMillis, LogProvider\n-            logProvider )\n+    public PruningScheduler( RaftLogPruner logPruner, JobScheduler scheduler, long recurringPeriodMillis, LogProvider logProvider )\n     {\n         this.logPruner = logPruner;\n         this.scheduler = scheduler;\n@@ -107,6 +106,7 @@ public class PruningScheduler extends LifecycleAdapter\n         {\n             handle.cancel( false );\n         }\n+\n         Predicates.awaitForever( checkPointingCondition, 100, MILLISECONDS );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 47
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
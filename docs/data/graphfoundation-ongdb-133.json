{
    "project_name": "graphfoundation-ongdb",
    "error_id": "133",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/133/NativeSchemaKey.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/133/NativeSchemaKey.java\nindex 3124a7bf38c..4c7af771c29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/133/NativeSchemaKey.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/133/NativeSchemaKey.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import org.neo4j.index.internal.gbptree.GBPTree;\n@@ -30,101 +31,101 @@ import org.neo4j.values.storable.Value;\n  */\n abstract class NativeSchemaKey<SELF extends NativeSchemaKey<SELF>> extends TemporalValueWriterAdapter<RuntimeException>\n {\n-    private static final boolean DEFAULT_COMPARE_ID = true;\n-\n-    private long entityId;\n-    private boolean compareId = DEFAULT_COMPARE_ID;\n-\n-    /**\n-     * Marks that comparisons with this key requires also comparing entityId, this allows functionality\n-     * of inclusive/exclusive bounds of range queries.\n-     * This is because {@link GBPTree} only support from inclusive and to exclusive.\n-     * <p>\n-     * Note that {@code compareId} is only an in memory state.\n-     */\n-    void setCompareId( boolean compareId )\n-    {\n-        this.compareId = compareId;\n-    }\n-\n-    boolean getCompareId()\n-    {\n-        return compareId;\n-    }\n-\n-    long getEntityId()\n-    {\n-        return entityId;\n-    }\n-\n-    void setEntityId( long entityId )\n-    {\n-        this.entityId = entityId;\n-    }\n-\n-    final void from( long entityId, Value... values )\n+  private static final boolean DEFAULT_COMPARE_ID = true;\n+\n+  private long entityId;\n+  private boolean compareId = DEFAULT_COMPARE_ID;\n+\n+  /**\n+   * Marks that comparisons with this key requires also comparing entityId, this allows functionality\n+   * of inclusive/exclusive bounds of range queries.\n+   * This is because {@link GBPTree} only support from inclusive and to exclusive.\n+   * <p>\n+   * Note that {@code compareId} is only an in memory state.\n+   */\n+  void setCompareId(boolean compareId)\n+  {\n+    this.compareId = compareId;\n+  }\n+\n+  boolean getCompareId()\n+  {\n+    return compareId;\n+  }\n+\n+  long getEntityId()\n+  {\n+    return entityId;\n+  }\n+\n+  void setEntityId(long entityId)\n+  {\n+    this.entityId = entityId;\n+  }\n+\n+  final void from(long entityId, Value... values)\n+  {\n+    initialize(entityId);\n+    // copy value state and store in this key instance\n+    assertValidValue(values).writeTo(this);\n+  }\n+\n+  /**\n+   * Initializes this key with entity id and resets other flags to default values.\n+   * Doesn't touch value data.\n+   *\n+   * @param entityId entity id to set for this key.\n+   */\n+  void initialize(long entityId)\n+  {\n+    this.compareId = DEFAULT_COMPARE_ID;\n+    this.entityId = entityId;\n+  }\n+\n+  private Value assertValidValue(Value... values)\n+  {\n+    if (values.length > 1)\n     {\n-        initialize( entityId );\n-        // copy value state and store in this key instance\n-        assertValidValue( values ).writeTo( this );\n+      throw new IllegalArgumentException(\"Tried to create composite key with non-composite schema key layout\");\n     }\n-\n-    /**\n-     * Initializes this key with entity id and resets other flags to default values.\n-     * Doesn't touch value data.\n-     *\n-     * @param entityId entity id to set for this key.\n-     */\n-    void initialize( long entityId )\n+    if (values.length < 1)\n     {\n-        this.compareId = DEFAULT_COMPARE_ID;\n-        this.entityId = entityId;\n+      throw new IllegalArgumentException(\"Tried to create key without value\");\n     }\n-\n-    private Value assertValidValue( Value... values )\n-    {\n-        if ( values.length > 1 )\n-        {\n-            throw new IllegalArgumentException( \"Tried to create composite key with non-composite schema key layout\" );\n-        }\n-        if ( values.length < 1 )\n-        {\n-            throw new IllegalArgumentException( \"Tried to create key without value\" );\n-        }\n-        return assertCorrectType( values[0] );\n-    }\n-\n-    protected abstract Value assertCorrectType( Value value );\n-\n-    String propertiesAsString()\n-    {\n-        return asValue().toString();\n-    }\n-\n-    abstract Value asValue();\n-\n-    final void initAsLowest()\n-    {\n-        initialize( Long.MIN_VALUE );\n-        initValueAsLowest();\n-    }\n-\n-    abstract void initValueAsLowest();\n-\n-    final void initAsHighest()\n-    {\n-        initialize( Long.MAX_VALUE );\n-        initValueAsHighest();\n-    }\n-\n-    abstract void initValueAsHighest();\n-\n-    /**\n-     * Compares the value of this key to that of another key.\n-     * This method is expected to be called in scenarios where inconsistent reads may happen (and later retried).\n-     *\n-     * @param other the key to compare to.\n-     * @return comparison against the {@code other} key.\n-     */\n-    abstract int compareValueTo( SELF other );\n+    return assertCorrectType(values[0]);\n+  }\n+\n+  protected abstract Value assertCorrectType(Value value);\n+\n+  String propertiesAsString()\n+  {\n+    return asValue().toString();\n+  }\n+\n+  abstract Value asValue();\n+\n+  final void initAsLowest()\n+  {\n+    initialize(Long.MIN_VALUE);\n+    initValueAsLowest();\n+  }\n+\n+  abstract void initValueAsLowest();\n+\n+  final void initAsHighest()\n+  {\n+    initialize(Long.MAX_VALUE);\n+    initValueAsHighest();\n+  }\n+\n+  abstract void initValueAsHighest();\n+\n+  /**\n+   * Compares the value of this key to that of another key.\n+   * This method is expected to be called in scenarios where inconsistent reads may happen (and later retried).\n+   *\n+   * @param other the key to compare to.\n+   * @return comparison against the {@code other} key.\n+   */\n+  abstract int compareValueTo(SELF other);\n }\n",
            "diff_size": 115
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "86",
                    "column": "27",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/133/NativeSchemaKey.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/133/NativeSchemaKey.java\nindex 3124a7bf38c..114c0a4ae59 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/133/NativeSchemaKey.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/133/NativeSchemaKey.java\n@@ -83,20 +83,21 @@ abstract class NativeSchemaKey<SELF extends NativeSchemaKey<SELF>> extends Tempo\n \n     private Value assertValidValue( Value... values )\n     {\n-        if ( values.length > 1 )\n+        if ( values.length> 1 )\n         {\n             throw new IllegalArgumentException( \"Tried to create composite key with non-composite schema key layout\" );\n         }\n-        if ( values.length < 1 )\n+\n+if ( values.length < 1 )\n         {\n             throw new IllegalArgumentException( \"Tried to create key without value\" );\n         }\n-        return assertCorrectType( values[0] );\n+\n+return assertCorrectType( values[0] );\n     }\n \n     protected abstract Value assertCorrectType( Value value );\n-\n-    String propertiesAsString()\n+String propertiesAsString()\n     {\n         return asValue().toString();\n     }\n@@ -127,4 +128,4 @@ abstract class NativeSchemaKey<SELF extends NativeSchemaKey<SELF>> extends Tempo\n      * @return comparison against the {@code other} key.\n      */\n     abstract int compareValueTo( SELF other );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
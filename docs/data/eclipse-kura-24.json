{
    "project_name": "eclipse-kura",
    "error_id": "24",
    "information": {
        "errors": [
            {
                "line": "92",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 153).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n            auditLogger.info(\n                    \"UI Channel Servlet - Success - Successfully wrote Channel CSV description for user: {}, session: {}, asset pid: {}, driver pid: {}\",\n                    session.getAttribute(Attributes.AUTORIZED_USER.getValue()), session.getId(), assetPid, driverPid);\n        } catch (Exception ex) {\n            logger.error(\"Error while exporting CSV output!\", ex);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/24/ChannelServlet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler/24/ChannelServlet.java\nindex 2b956c7b548..fcdcc7500ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/24/ChannelServlet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler/24/ChannelServlet.java\n@@ -88,9 +88,8 @@ public class ChannelServlet extends HttpServlet {\n                 }\n             }\n \n-            auditLogger.info(\n-                    \"UI Channel Servlet - Success - Successfully wrote Channel CSV description for user: {}, session: {}, asset pid: {}, driver pid: {}\",\n-                    session.getAttribute(Attributes.AUTORIZED_USER.getValue()), session.getId(), assetPid, driverPid);\n+            auditLogger.info(\"UI Channel Servlet - Success - Successfully wrote Channel CSV description for user: {}, session: {}, asset pid: {}, driver pid: {}\",\n+            session.getAttribute(Attributes.AUTORIZED_USER.getValue()), session.getId(), assetPid, driverPid);\n         } catch (Exception ex) {\n             logger.error(\"Error while exporting CSV output!\", ex);\n             auditLogger.warn(\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/24/ChannelServlet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/intellij/24/ChannelServlet.java\nindex 2b956c7b548..64967f64f7d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/24/ChannelServlet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/intellij/24/ChannelServlet.java\n@@ -10,6 +10,7 @@\n  *  Eurotech\n  *\n  *******************************************************************************/\n+\n package org.eclipse.kura.web.server.servlet;\n \n import static java.lang.String.format;\n@@ -60,7 +61,7 @@ public class ChannelServlet extends HttpServlet {\n      * Instance of Base Asset Channel Descriptor\n      */\n     private static final GwtConfigComponent WIRE_ASSET_CHANNEL_DESCRIPTOR = GwtServerUtil.toGwtConfigComponent(null,\n-            WireAssetChannelDescriptor.get().getDescriptor());\n+        WireAssetChannelDescriptor.get().getDescriptor());\n \n     @Override\n     protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n@@ -89,13 +90,13 @@ public class ChannelServlet extends HttpServlet {\n             }\n \n             auditLogger.info(\n-                    \"UI Channel Servlet - Success - Successfully wrote Channel CSV description for user: {}, session: {}, asset pid: {}, driver pid: {}\",\n-                    session.getAttribute(Attributes.AUTORIZED_USER.getValue()), session.getId(), assetPid, driverPid);\n+                \"UI Channel Servlet - Success - Successfully wrote Channel CSV description for user: {}, session: {}, asset pid: {}, driver pid: {}\",\n+                session.getAttribute(Attributes.AUTORIZED_USER.getValue()), session.getId(), assetPid, driverPid);\n         } catch (Exception ex) {\n             logger.error(\"Error while exporting CSV output!\", ex);\n             auditLogger.warn(\n-                    \"UI Channel Servlet - Failure - Failed to write Channel CSV description for user: {}, session: {}\",\n-                    session.getAttribute(Attributes.AUTORIZED_USER.getValue()), session.getId());\n+                \"UI Channel Servlet - Failure - Failed to write Channel CSV description for user: {}, session: {}\",\n+                session.getAttribute(Attributes.AUTORIZED_USER.getValue()), session.getId());\n         }\n     }\n \n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/24/ChannelServlet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/naturalize/24/ChannelServlet.java\nindex 2b956c7b548..06a6373a014 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/24/ChannelServlet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/naturalize/24/ChannelServlet.java\n@@ -186,4 +186,4 @@ public class ChannelServlet extends HttpServlet {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 261).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 206).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/24/ChannelServlet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/codebuff/24/ChannelServlet.java\nindex 2b956c7b548..c5bca7260ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/24/ChannelServlet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/codebuff/24/ChannelServlet.java\n@@ -23,13 +23,11 @@ import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n import java.util.concurrent.atomic.AtomicBoolean;\n-\n import javax.servlet.ServletException;\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.servlet.http.HttpSession;\n-\n import org.apache.commons.csv.CSVFormat;\n import org.apache.commons.csv.CSVPrinter;\n import org.eclipse.kura.asset.Asset;\n@@ -52,16 +50,13 @@ import org.slf4j.LoggerFactory;\n public class ChannelServlet extends HttpServlet {\n \n     private static final long serialVersionUID = -1445700937173920652L;\n-\n     private static Logger logger = LoggerFactory.getLogger(ChannelServlet.class);\n     private static final Logger auditLogger = LoggerFactory.getLogger(\"AuditLogger\");\n \n     /**\n      * Instance of Base Asset Channel Descriptor\n      */\n-    private static final GwtConfigComponent WIRE_ASSET_CHANNEL_DESCRIPTOR = GwtServerUtil.toGwtConfigComponent(null,\n-            WireAssetChannelDescriptor.get().getDescriptor());\n-\n+    private static final GwtConfigComponent WIRE_ASSET_CHANNEL_DESCRIPTOR = GwtServerUtil.toGwtConfigComponent(null, WireAssetChannelDescriptor.get().getDescriptor());\n     @Override\n     protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n         HttpSession session = req.getSession(false);\n@@ -72,10 +67,8 @@ public class ChannelServlet extends HttpServlet {\n             // END XSRF security check\n             String assetPid = req.getParameter(\"assetPid\");\n             String driverPid = req.getParameter(\"driverPid\");\n-\n             Writer out = new StringWriter();\n             CSVPrinter printer = new CSVPrinter(out, CSVFormat.RFC4180);\n-\n             if (!fillCsvFields(printer, assetPid, driverPid)) {\n                 resp.getWriter().write(\"Error generating CSV output!\");\n             } else {\n@@ -87,15 +80,10 @@ public class ChannelServlet extends HttpServlet {\n                     writer.write(out.toString());\n                 }\n             }\n-\n-            auditLogger.info(\n-                    \"UI Channel Servlet - Success - Successfully wrote Channel CSV description for user: {}, session: {}, asset pid: {}, driver pid: {}\",\n-                    session.getAttribute(Attributes.AUTORIZED_USER.getValue()), session.getId(), assetPid, driverPid);\n+            auditLogger.info(\"UI Channel Servlet - Success - Successfully wrote Channel CSV description for user: {}, session: {}, asset pid: {}, driver pid: {}\", session.getAttribute(Attributes.AUTORIZED_USER.getValue()), session.getId(), assetPid, driverPid);\n         } catch (Exception ex) {\n             logger.error(\"Error while exporting CSV output!\", ex);\n-            auditLogger.warn(\n-                    \"UI Channel Servlet - Failure - Failed to write Channel CSV description for user: {}, session: {}\",\n-                    session.getAttribute(Attributes.AUTORIZED_USER.getValue()), session.getId());\n+            auditLogger.warn(\"UI Channel Servlet - Failure - Failed to write Channel CSV description for user: {}, session: {}\", session.getAttribute(Attributes.AUTORIZED_USER.getValue()), session.getId());\n         }\n     }\n \n@@ -111,11 +99,9 @@ public class ChannelServlet extends HttpServlet {\n                 }\n                 orderedFields.add(new StringBuilder().append(\"+\").append(i.getId().substring(1)).toString());\n             });\n-\n             withDriver(driverPid, driver -> {\n                 @SuppressWarnings(\"unchecked\")\n                 List<AD> descriptor = (List<AD>) driver.getChannelDescriptor().getDescriptor();\n-\n                 for (AD ad : descriptor) {\n                     try {\n                         printer.print(ad.getId());\n@@ -126,40 +112,35 @@ public class ChannelServlet extends HttpServlet {\n                 }\n             });\n             printer.println();\n-\n             withAsset(assetPid, asset -> asset.getAssetConfiguration().getAssetChannels().forEach((name, channel) -> {\n-                orderedFields.forEach(key -> {\n-                    try {\n-                        printer.print(channel.getConfiguration().get(key));\n-                    } catch (IOException e) {\n-                        error.set(true);\n-                    }\n-                });\n-                try {\n-                    printer.println();\n-                } catch (IOException e) {\n-                    error.set(true);\n-                }\n-            }));\n+                                             orderedFields.forEach(key -> {\n+                                                 try {\n+                                                     printer.print(channel.getConfiguration().get(key));\n+                                                 } catch (IOException e) {\n+                                                     error.set(true);\n+                                                 }\n+                                             });\n+                                             try {\n+                                                 printer.println();\n+                                             } catch (IOException e) {\n+                                                 error.set(true);\n+                                             }\n+                                         }));\n         } catch (Exception ex) {\n             error.set(true);\n         }\n-\n         return !error.get();\n     }\n \n     private void withAsset(final String kuraServicePid, final ServiceConsumer<Asset> consumer) throws Exception {\n         final BundleContext ctx = FrameworkUtil.getBundle(ServiceLocator.class).getBundleContext();\n-\n         final String filter = format(\"(%s=%s)\", KURA_SERVICE_PID, kuraServicePid);\n         final Collection<ServiceReference<Asset>> refs = ctx.getServiceReferences(Asset.class, filter);\n-\n         if (refs == null || refs.isEmpty()) {\n             return;\n         }\n \n         final ServiceReference<Asset> assetRef = refs.iterator().next();\n-\n         try {\n             consumer.consume(ctx.getService(assetRef));\n         } finally {\n@@ -169,21 +150,17 @@ public class ChannelServlet extends HttpServlet {\n \n     private void withDriver(final String kuraServicePid, final ServiceConsumer<Driver> consumer) throws Exception {\n         final BundleContext ctx = FrameworkUtil.getBundle(ServiceLocator.class).getBundleContext();\n-\n         final String filter = format(\"(%s=%s)\", KURA_SERVICE_PID, kuraServicePid);\n         final Collection<ServiceReference<Driver>> refs = ctx.getServiceReferences(Driver.class, filter);\n-\n         if (refs == null || refs.isEmpty()) {\n             return;\n         }\n \n         final ServiceReference<Driver> driverRef = refs.iterator().next();\n-\n         try {\n             consumer.consume(ctx.getService(driverRef));\n         } finally {\n             ctx.ungetService(driverRef);\n         }\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "93",
                    "column": "21",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/24/ChannelServlet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_random/24/ChannelServlet.java\nindex 2b956c7b548..fb0e1ffb82d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/24/ChannelServlet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_random/24/ChannelServlet.java\n@@ -89,7 +89,8 @@ public class ChannelServlet extends HttpServlet {\n             }\n \n             auditLogger.info(\n-                    \"UI Channel Servlet - Success - Successfully wrote Channel CSV description for user: {}, session: {}, asset pid: {}, driver pid: {}\",\n+                    \"UI Channel Servlet - Success - Successfully wrote Channel CSV description for user: {}, session: {}, asset pid: {}, driver pid: {}\"\n+                    ,\n                     session.getAttribute(Attributes.AUTORIZED_USER.getValue()), session.getId(), assetPid, driverPid);\n         } catch (Exception ex) {\n             logger.error(\"Error while exporting CSV output!\", ex);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/24/ChannelServlet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_three_grams/24/ChannelServlet.java\nindex 2b956c7b548..fcdcc7500ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/24/ChannelServlet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/styler_three_grams/24/ChannelServlet.java\n@@ -88,9 +88,8 @@ public class ChannelServlet extends HttpServlet {\n                 }\n             }\n \n-            auditLogger.info(\n-                    \"UI Channel Servlet - Success - Successfully wrote Channel CSV description for user: {}, session: {}, asset pid: {}, driver pid: {}\",\n-                    session.getAttribute(Attributes.AUTORIZED_USER.getValue()), session.getId(), assetPid, driverPid);\n+            auditLogger.info(\"UI Channel Servlet - Success - Successfully wrote Channel CSV description for user: {}, session: {}, asset pid: {}, driver pid: {}\",\n+            session.getAttribute(Attributes.AUTORIZED_USER.getValue()), session.getId(), assetPid, driverPid);\n         } catch (Exception ex) {\n             logger.error(\"Error while exporting CSV output!\", ex);\n             auditLogger.warn(\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
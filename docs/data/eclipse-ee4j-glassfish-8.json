{
    "project_name": "eclipse-ee4j-glassfish",
    "error_id": "8",
    "information": {
        "errors": [
            {
                "line": "84",
                "column": "5",
                "severity": "warning",
                "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "            runAs.writeDescriptor(subNode, TagNames.RUNAS_SPECIFIED_IDENTITY, descriptor.getRunAsIdentity());\n        }\n    return subNode;\n    }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/8/SecurityIdentityNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler/8/SecurityIdentityNode.java\nindex 35786096a05..d68fd23fb8d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/8/SecurityIdentityNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler/8/SecurityIdentityNode.java\n@@ -80,7 +80,6 @@ public class SecurityIdentityNode extends DeploymentDescriptorNode {\n         } else {\n             RunAsNode runAs = new RunAsNode();\n             runAs.writeDescriptor(subNode, TagNames.RUNAS_SPECIFIED_IDENTITY, descriptor.getRunAsIdentity());\n-        }\n-    return subNode;\n+        }return subNode;\n     }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/8/SecurityIdentityNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/intellij/8/SecurityIdentityNode.java\nindex 35786096a05..9a9ae27115d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/8/SecurityIdentityNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/intellij/8/SecurityIdentityNode.java\n@@ -31,8 +31,7 @@ import com.sun.enterprise.deployment.xml.TagNames;\n /**\n  * This node handles all information relative to security-indentity tag\n  *\n- * @author  Jerome Dochez\n- * @version\n+ * @author Jerome Dochez\n  */\n public class SecurityIdentityNode extends DeploymentDescriptorNode {\n \n@@ -48,12 +47,12 @@ public class SecurityIdentityNode extends DeploymentDescriptorNode {\n \n     @Override\n     protected Map getDispatchTable() {\n-        return  null;\n+        return null;\n     }\n \n     @Override\n     public void startElement(XMLElement element, Attributes attributes) {\n-        if( EjbTagNames.USE_CALLER_IDENTITY.equals(element.getQName()) ) {\n+        if (EjbTagNames.USE_CALLER_IDENTITY.equals(element.getQName())) {\n             ((EjbDescriptor) getParentNode().getDescriptor()).\n                 setUsesCallerIdentity(true);\n         } else {\n@@ -75,12 +74,14 @@ public class SecurityIdentityNode extends DeploymentDescriptorNode {\n         Node subNode = appendChild(parent, nodeName);\n         appendTextChild(subNode, TagNames.DESCRIPTION, descriptor.getSecurityIdentityDescription());\n         if (descriptor.getUsesCallerIdentity()) {\n-            Node useCaller = subNode.getOwnerDocument().createElement(EjbTagNames.USE_CALLER_IDENTITY);\n+            Node useCaller =\n+                subNode.getOwnerDocument().createElement(EjbTagNames.USE_CALLER_IDENTITY);\n             subNode.appendChild(useCaller);\n         } else {\n             RunAsNode runAs = new RunAsNode();\n-            runAs.writeDescriptor(subNode, TagNames.RUNAS_SPECIFIED_IDENTITY, descriptor.getRunAsIdentity());\n+            runAs.writeDescriptor(subNode, TagNames.RUNAS_SPECIFIED_IDENTITY,\n+                descriptor.getRunAsIdentity());\n         }\n-    return subNode;\n+        return subNode;\n     }\n }\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "84",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/8/SecurityIdentityNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/naturalize/8/SecurityIdentityNode.java\nindex 35786096a05..d009f7acf6a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/8/SecurityIdentityNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/naturalize/8/SecurityIdentityNode.java\n@@ -48,7 +48,7 @@ public class SecurityIdentityNode extends DeploymentDescriptorNode {\n \n     @Override\n     protected Map getDispatchTable() {\n-        return  null;\n+        return null;\n     }\n \n     @Override\n@@ -81,6 +81,6 @@ public class SecurityIdentityNode extends DeploymentDescriptorNode {\n             RunAsNode runAs = new RunAsNode();\n             runAs.writeDescriptor(subNode, TagNames.RUNAS_SPECIFIED_IDENTITY, descriptor.getRunAsIdentity());\n         }\n-    return subNode;\n+return subNode;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/8/SecurityIdentityNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_random/8/SecurityIdentityNode.java\nindex 35786096a05..d68fd23fb8d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/8/SecurityIdentityNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_random/8/SecurityIdentityNode.java\n@@ -80,7 +80,6 @@ public class SecurityIdentityNode extends DeploymentDescriptorNode {\n         } else {\n             RunAsNode runAs = new RunAsNode();\n             runAs.writeDescriptor(subNode, TagNames.RUNAS_SPECIFIED_IDENTITY, descriptor.getRunAsIdentity());\n-        }\n-    return subNode;\n+        }return subNode;\n     }\n }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/8/SecurityIdentityNode.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_three_grams/8/SecurityIdentityNode.java\nindex 35786096a05..d68fd23fb8d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/8/SecurityIdentityNode.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_three_grams/8/SecurityIdentityNode.java\n@@ -80,7 +80,6 @@ public class SecurityIdentityNode extends DeploymentDescriptorNode {\n         } else {\n             RunAsNode runAs = new RunAsNode();\n             runAs.writeDescriptor(subNode, TagNames.RUNAS_SPECIFIED_IDENTITY, descriptor.getRunAsIdentity());\n-        }\n-    return subNode;\n+        }return subNode;\n     }\n }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
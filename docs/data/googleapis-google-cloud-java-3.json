{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "3",
    "information": {
        "errors": [
            {
                "line": "425",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "   */\n  // [TARGET listSubscriptionsAsync(ListOption...)]\n  public Page<Subscription> listSubscriptionsAsync() throws ExecutionException, InterruptedException {\n    // [START listSubscriptionsAsync]\n    Future<AsyncPage<Subscription>> future =\n        pubsub.listSubscriptionsAsync(ListOption.pageSize(100));",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "425",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/3/PubSubSnippets.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/3/PubSubSnippets.java\nindex d03cbe8347c..6ada73b4519 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/3/PubSubSnippets.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/3/PubSubSnippets.java\n@@ -422,7 +422,8 @@ public class PubSubSnippets {\n    * Example of asynchronously listing subscriptions, specifying the page size.\n    */\n   // [TARGET listSubscriptionsAsync(ListOption...)]\n-  public Page<Subscription> listSubscriptionsAsync() throws ExecutionException, InterruptedException {\n+  public Page<Subscription> listSubscriptionsAsync()\n+      throws ExecutionException, InterruptedException {\n     // [START listSubscriptionsAsync]\n     Future<AsyncPage<Subscription>> future =\n         pubsub.listSubscriptionsAsync(ListOption.pageSize(100));\n@@ -801,7 +802,8 @@ public class PubSubSnippets {\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n   public void modifyAckDeadlineMoreMessagesAsync(String subscriptionName, String ackId1,\n-      String ackId2) throws ExecutionException, InterruptedException {\n+                                                 String ackId2)\n+      throws ExecutionException, InterruptedException {\n     // [START modifyAckDeadlineMoreMessagesAsync]\n     Future<Void> future =\n         pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackId1, ackId2);\n@@ -834,7 +836,8 @@ public class PubSubSnippets {\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n   public void modifyAckDeadlineMessageListAsync(String subscriptionName, String ackId1,\n-      String ackId2) throws ExecutionException, InterruptedException {\n+                                                String ackId2)\n+      throws ExecutionException, InterruptedException {\n     // [START modifyAckDeadlineMessageListAsync]\n     List<String> ackIds = new LinkedList<>();\n     ackIds.add(ackId1);\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "425",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/3/PubSubSnippets.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/3/PubSubSnippets.java\nindex d03cbe8347c..2434a176d21 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/3/PubSubSnippets.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/3/PubSubSnippets.java\n@@ -175,7 +175,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public boolean deleteTopicAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START deleteTopicAsync]\n+  // [START deleteTopicAsync]\n     Future<Boolean> future = pubsub.deleteTopicAsync(topicName);\n     // ...\n     boolean deleted = future.get();\n@@ -208,7 +208,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public String publishOneMessageAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START publishOneMessageAsync]\n+  // [START publishOneMessageAsync]\n     Message message = Message.of(\"payload\");\n     Future<String> future = pubsub.publishAsync(topicName, message);\n     // ...\n@@ -239,7 +239,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public List<String> publishMessageListAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START publishMessageListAsync]\n+  // [START publishMessageListAsync]\n     List<Message> messages = new LinkedList<>();\n     messages.add(Message.of(\"payload1\"));\n     messages.add(Message.of(\"payload2\"));\n@@ -271,7 +271,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public List<String> publishMessagesAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START publishMessagesAsync]\n+  // [START publishMessagesAsync]\n     Message message1 = Message.of(\"payload1\");\n     Message message2 = Message.of(\"payload2\");\n     Future<List<String>> future = pubsub.publishAsync(topicName, message1, message2);\n@@ -303,7 +303,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public Subscription createSubscriptionAsync(String topicName, String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START createSubscriptionAsync]\n+  // [START createSubscriptionAsync]\n     SubscriptionInfo subscriptionInfo = SubscriptionInfo.of(topicName, subscriptionName);\n     Future<Subscription> future = pubsub.createAsync(subscriptionInfo);\n     // ...\n@@ -346,7 +346,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"https://www.example.com/push\"]\n   public void replacePushConfigAsync(String subscriptionName, String endpoint)\n       throws ExecutionException, InterruptedException {\n-    // [START replacePushConfigAsync]\n+  // [START replacePushConfigAsync]\n     PushConfig pushConfig = PushConfig.of(endpoint);\n     Future<Void> future = pubsub.replacePushConfigAsync(subscriptionName, pushConfig);\n     // ...\n@@ -362,7 +362,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public void replacePushConfigToPullAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START replacePushConfigToPullAsync]\n+  // [START replacePushConfigToPullAsync]\n     Future<Void> future = pubsub.replacePushConfigAsync(subscriptionName, null);\n     // ...\n     future.get();\n@@ -391,7 +391,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public Subscription getSubscriptionAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START getSubscriptionAsync]\n+  // [START getSubscriptionAsync]\n     Future<Subscription> future = pubsub.getSubscriptionAsync(subscriptionName);\n     // ...\n     Subscription subscription = future.get();\n@@ -426,7 +426,7 @@ public class PubSubSnippets {\n     // [START listSubscriptionsAsync]\n     Future<AsyncPage<Subscription>> future =\n         pubsub.listSubscriptionsAsync(ListOption.pageSize(100));\n-    // ...\n+// ...\n     AsyncPage<Subscription> subscriptions = future.get();\n     Iterator<Subscription> subscriptionIterator = subscriptions.iterateAll();\n     while (subscriptionIterator.hasNext()) {\n@@ -462,10 +462,10 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public Page<SubscriptionId> listSubscriptionsForTopicAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START listSubscriptionsForTopicAsync]\n+  // [START listSubscriptionsForTopicAsync]\n     Future<AsyncPage<SubscriptionId>> future =\n         pubsub.listSubscriptionsAsync(topicName, ListOption.pageSize(100));\n-    // ...\n+// ...\n     AsyncPage<SubscriptionId> subscriptions = future.get();\n     Iterator<SubscriptionId> subscriptionIterator = subscriptions.iterateAll();\n     while (subscriptionIterator.hasNext()) {\n@@ -500,7 +500,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public boolean deleteSubscriptionAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START deleteSubscriptionAsync]\n+  // [START deleteSubscriptionAsync]\n     Future<Boolean> future = pubsub.deleteSubscriptionAsync(subscriptionName);\n     // ...\n     boolean deleted = future.get();\n@@ -525,7 +525,9 @@ public class PubSubSnippets {\n     while (messages.hasNext()) {\n       ReceivedMessage message = messages.next();\n       // do something with message and ack/nack it\n-      message.ack(); // or message.nack()\n+      message.ack();\n+\n+// or message.nack()\n     }\n     // [END pull]\n   }\n@@ -544,7 +546,9 @@ public class PubSubSnippets {\n     while (messages.hasNext()) {\n       ReceivedMessage message = messages.next();\n       // do something with message and ack/nack it\n-      message.ack(); // or message.nack()\n+      message.ack();\n+\n+// or message.nack()\n     }\n     // [END pullAsync]\n   }\n@@ -590,7 +594,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"message_ack_id\"]\n   public void ackOneMessageAsync(String subscriptionName, String ackId)\n       throws ExecutionException, InterruptedException {\n-    // [START ackOneMessageAsync]\n+  // [START ackOneMessageAsync]\n     Future<Void> future = pubsub.ackAsync(subscriptionName, ackId);\n     // ...\n     future.get();\n@@ -619,7 +623,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"message2_ack_id\"]\n   public void ackMoreMessagesAsync(String subscriptionName, String ackId1, String ackId2)\n       throws ExecutionException, InterruptedException {\n-    // [START ackMoreMessagesAsync]\n+  // [START ackMoreMessagesAsync]\n     Future<Void> future = pubsub.ackAsync(subscriptionName, ackId1, ackId2);\n     // ...\n     future.get();\n@@ -651,7 +655,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"message2_ack_id\"]\n   public void ackMessageListAsync(String subscriptionName, String ackId1, String ackId2)\n       throws ExecutionException, InterruptedException {\n-    // [START ackMessageListAsync]\n+  // [START ackMessageListAsync]\n     List<String> ackIds = new LinkedList<>();\n     ackIds.add(ackId1);\n     ackIds.add(ackId2);\n@@ -681,7 +685,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"message_ack_id\"]\n   public void nackOneMessageAsync(String subscriptionName, String ackId)\n       throws ExecutionException, InterruptedException {\n-    // [START nackOneMessageAsync]\n+  // [START nackOneMessageAsync]\n     Future<Void> future = pubsub.nackAsync(subscriptionName, ackId);\n     // ...\n     future.get();\n@@ -710,7 +714,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"message2_ack_id\"]\n   public void nackMoreMessagesAsync(String subscriptionName, String ackId1, String ackId2)\n       throws ExecutionException, InterruptedException {\n-    // [START nackMoreMessagesAsync]\n+  // [START nackMoreMessagesAsync]\n     Future<Void> future = pubsub.nackAsync(subscriptionName, ackId1, ackId2);\n     // ...\n     future.get();\n@@ -742,7 +746,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"message2_ack_id\"]\n   public void nackMessageListAsync(String subscriptionName, String ackId1, String ackId2)\n       throws ExecutionException, InterruptedException {\n-    // [START nackMessageListAsync]\n+  // [START nackMessageListAsync]\n     List<String> ackIds = new LinkedList<>();\n     ackIds.add(ackId1);\n     ackIds.add(ackId2);\n@@ -772,10 +776,10 @@ public class PubSubSnippets {\n   // [VARIABLE \"message_ack_id\"]\n   public void modifyAckDeadlineOneMessageAsync(String subscriptionName, String ackId)\n       throws ExecutionException, InterruptedException {\n-    // [START modifyAckDeadlineOneMessageAsync]\n+  // [START modifyAckDeadlineOneMessageAsync]\n     Future<Void> future =\n         pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackId);\n-    // ...\n+// ...\n     future.get();\n     // [END modifyAckDeadlineOneMessageAsync]\n   }\n@@ -802,10 +806,10 @@ public class PubSubSnippets {\n   // [VARIABLE \"message2_ack_id\"]\n   public void modifyAckDeadlineMoreMessagesAsync(String subscriptionName, String ackId1,\n       String ackId2) throws ExecutionException, InterruptedException {\n-    // [START modifyAckDeadlineMoreMessagesAsync]\n+  // [START modifyAckDeadlineMoreMessagesAsync]\n     Future<Void> future =\n         pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackId1, ackId2);\n-    // ...\n+// ...\n     future.get();\n     // [END modifyAckDeadlineMoreMessagesAsync]\n   }\n@@ -835,13 +839,13 @@ public class PubSubSnippets {\n   // [VARIABLE \"message2_ack_id\"]\n   public void modifyAckDeadlineMessageListAsync(String subscriptionName, String ackId1,\n       String ackId2) throws ExecutionException, InterruptedException {\n-    // [START modifyAckDeadlineMessageListAsync]\n+  // [START modifyAckDeadlineMessageListAsync]\n     List<String> ackIds = new LinkedList<>();\n     ackIds.add(ackId1);\n     ackIds.add(ackId2);\n     Future<Void> future =\n         pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackIds);\n-    // ...\n+// ...\n     future.get();\n     // [END modifyAckDeadlineMessageListAsync]\n   }\n@@ -868,7 +872,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public Policy getTopicPolicyAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START getTopicPolicyAsync]\n+  // [START getTopicPolicyAsync]\n     Future<Policy> future = pubsub.getTopicPolicyAsync(topicName);\n     // ...\n     Policy policy = future.get();\n@@ -902,7 +906,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public Policy replaceTopicPolicyAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START replaceTopicPolicyAsync]\n+  // [START replaceTopicPolicyAsync]\n     Policy policy = pubsub.getTopicPolicy(topicName);\n     Policy updatedPolicy = policy.toBuilder()\n         .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n@@ -935,7 +939,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_topic_name\"]\n   public List<Boolean> testTopicPermissionsAsync(String topicName)\n       throws ExecutionException, InterruptedException {\n-    // [START testTopicPermissionsAsync]\n+  // [START testTopicPermissionsAsync]\n     List<String> permissions = new LinkedList<>();\n     permissions.add(\"pubsub.topics.get\");\n     Future<List<Boolean>> future = pubsub.testTopicPermissionsAsync(topicName, permissions);\n@@ -967,7 +971,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public Policy getSubscriptionPolicyAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START getSubscriptionPolicyAsync]\n+  // [START getSubscriptionPolicyAsync]\n     Future<Policy> future = pubsub.getSubscriptionPolicyAsync(subscriptionName);\n     // ...\n     Policy policy = future.get();\n@@ -1001,14 +1005,14 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public Policy replaceSubscriptionPolicyAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START replaceSubscriptionPolicyAsync]\n+  // [START replaceSubscriptionPolicyAsync]\n     Policy policy = pubsub.getSubscriptionPolicy(subscriptionName);\n     Policy updatedPolicy = policy.toBuilder()\n         .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n         .build();\n     Future<Policy> future =\n         pubsub.replaceSubscriptionPolicyAsync(subscriptionName, updatedPolicy);\n-    // ...\n+// ...\n     updatedPolicy = future.get();\n     // [END replaceSubscriptionPolicyAsync]\n     return updatedPolicy;\n@@ -1025,7 +1029,7 @@ public class PubSubSnippets {\n     permissions.add(\"pubsub.subscriptions.get\");\n     List<Boolean> testedPermissions =\n         pubsub.testSubscriptionPermissions(subscriptionName, permissions);\n-    // [END testSubscriptionPermissions]\n+// [END testSubscriptionPermissions]\n     return testedPermissions;\n   }\n \n@@ -1037,14 +1041,14 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   public List<Boolean> testSubscriptionPermissionsAsync(String subscriptionName)\n       throws ExecutionException, InterruptedException {\n-    // [START testSubscriptionPermissionsAsync]\n+  // [START testSubscriptionPermissionsAsync]\n     List<String> permissions = new LinkedList<>();\n     permissions.add(\"pubsub.subscriptions.get\");\n     Future<List<Boolean>> future =\n         pubsub.testSubscriptionPermissionsAsync(subscriptionName, permissions);\n-    // ...\n+// ...\n     List<Boolean> testedPermissions = future.get();\n     // [END testSubscriptionPermissionsAsync]\n     return testedPermissions;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 40
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "189",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "225",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "257",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "290",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "323",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "368",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "384",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "415",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "450",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "452",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "472",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "488",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "490",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "528",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "592",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 34, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "597",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 34, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "598",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "626",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "656",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "689",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "720",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "750",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "783",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "814",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "816",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "844",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "846",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "877",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 152).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "882",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "911",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "933",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "945",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "948",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "977",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1011",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1033",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1045",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1048",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1066",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1078",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "1082",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/3/PubSubSnippets.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/3/PubSubSnippets.java\nindex d03cbe8347c..3aea34e88d7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/3/PubSubSnippets.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/3/PubSubSnippets.java\n@@ -38,7 +38,6 @@ import com.google.cloud.pubsub.SubscriptionId;\n import com.google.cloud.pubsub.SubscriptionInfo;\n import com.google.cloud.pubsub.Topic;\n import com.google.cloud.pubsub.TopicInfo;\n-\n import java.util.Iterator;\n import java.util.LinkedList;\n import java.util.List;\n@@ -49,6 +48,8 @@ import java.util.concurrent.TimeUnit;\n /**\n  * This class contains a number of snippets for the {@link PubSub} interface.\n  */\n+\n+\n public class PubSubSnippets {\n \n   private final PubSub pubsub;\n@@ -62,6 +63,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET create(TopicInfo)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Topic createTopic(String topicName) {\n     // [START createTopic]\n     TopicInfo topicInfo = TopicInfo.of(topicName);\n@@ -75,6 +77,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET createAsync(TopicInfo)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Topic createTopicAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START createTopicAsync]\n     TopicInfo topicInfo = TopicInfo.of(topicName);\n@@ -90,11 +93,13 @@ public class PubSubSnippets {\n    */\n   // [TARGET getTopic(String)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Topic getTopic(String topicName) {\n     // [START getTopic]\n     Topic topic = pubsub.getTopic(topicName);\n     if (topic == null) {\n       // topic was not found\n+\n     }\n     // [END getTopic]\n     return topic;\n@@ -105,6 +110,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET getTopicAsync(String)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Topic getTopicAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START getTopicAsync]\n     Future<Topic> future = pubsub.getTopicAsync(topicName);\n@@ -112,6 +118,7 @@ public class PubSubSnippets {\n     Topic topic = future.get();\n     if (topic == null) {\n       // topic was not found\n+\n     }\n     // [END getTopicAsync]\n     return topic;\n@@ -121,6 +128,7 @@ public class PubSubSnippets {\n    * Example of listing topics, specifying the page size.\n    */\n   // [TARGET listTopics(ListOption...)]\n+\n   public Page<Topic> listTopics() {\n     // [START listTopics]\n     Page<Topic> topics = pubsub.listTopics(ListOption.pageSize(100));\n@@ -137,6 +145,7 @@ public class PubSubSnippets {\n    * Example of asynchronously listing topics, specifying the page size.\n    */\n   // [TARGET listTopicsAsync(ListOption...)]\n+\n   public Page<Topic> listTopicsAsync() throws ExecutionException, InterruptedException {\n     // [START listTopicsAsync]\n     Future<AsyncPage<Topic>> future = pubsub.listTopicsAsync(ListOption.pageSize(100));\n@@ -156,13 +165,16 @@ public class PubSubSnippets {\n    */\n   // [TARGET deleteTopic(String)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public boolean deleteTopic(String topicName) {\n     // [START deleteTopic]\n     boolean deleted = pubsub.deleteTopic(topicName);\n     if (deleted) {\n       // the topic was deleted\n+\n     } else {\n       // the topic was not found\n+\n     }\n     // [END deleteTopic]\n     return deleted;\n@@ -173,16 +185,18 @@ public class PubSubSnippets {\n    */\n   // [TARGET deleteTopicAsync(String)]\n   // [VARIABLE \"my_topic_name\"]\n-  public boolean deleteTopicAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public boolean deleteTopicAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START deleteTopicAsync]\n     Future<Boolean> future = pubsub.deleteTopicAsync(topicName);\n     // ...\n     boolean deleted = future.get();\n     if (deleted) {\n       // the topic was deleted\n+\n     } else {\n       // the topic was not found\n+\n     }\n     // [END deleteTopicAsync]\n     return deleted;\n@@ -193,6 +207,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET publish(String, Message)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public String publishOneMessage(String topicName) {\n     // [START publishOneMessage]\n     Message message = Message.of(\"payload\");\n@@ -206,8 +221,8 @@ public class PubSubSnippets {\n    */\n   // [TARGET publishAsync(String, Message)]\n   // [VARIABLE \"my_topic_name\"]\n-  public String publishOneMessageAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public String publishOneMessageAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START publishOneMessageAsync]\n     Message message = Message.of(\"payload\");\n     Future<String> future = pubsub.publishAsync(topicName, message);\n@@ -222,6 +237,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET publish(String, Iterable)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public List<String> publishMessageList(String topicName) {\n     // [START publishMessageList]\n     List<Message> messages = new LinkedList<>();\n@@ -237,8 +253,8 @@ public class PubSubSnippets {\n    */\n   // [TARGET publishAsync(String, Iterable)]\n   // [VARIABLE \"my_topic_name\"]\n-  public List<String> publishMessageListAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public List<String> publishMessageListAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START publishMessageListAsync]\n     List<Message> messages = new LinkedList<>();\n     messages.add(Message.of(\"payload1\"));\n@@ -255,6 +271,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET publish(String, Message, Message...)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public List<String> publishMessages(String topicName) {\n     // [START publishMessages]\n     Message message1 = Message.of(\"payload1\");\n@@ -269,8 +286,8 @@ public class PubSubSnippets {\n    */\n   // [TARGET publishAsync(String, Message, Message...)]\n   // [VARIABLE \"my_topic_name\"]\n-  public List<String> publishMessagesAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public List<String> publishMessagesAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START publishMessagesAsync]\n     Message message1 = Message.of(\"payload1\");\n     Message message2 = Message.of(\"payload2\");\n@@ -287,6 +304,7 @@ public class PubSubSnippets {\n   // [TARGET create(SubscriptionInfo)]\n   // [VARIABLE \"my_topic_name\"]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public Subscription createSubscription(String topicName, String subscriptionName) {\n     // [START createSubscription]\n     SubscriptionInfo subscriptionInfo = SubscriptionInfo.of(topicName, subscriptionName);\n@@ -301,8 +319,8 @@ public class PubSubSnippets {\n   // [TARGET createAsync(SubscriptionInfo)]\n   // [VARIABLE \"my_topic_name\"]\n   // [VARIABLE \"my_subscription_name\"]\n-  public Subscription createSubscriptionAsync(String topicName, String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Subscription createSubscriptionAsync(String topicName, String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START createSubscriptionAsync]\n     SubscriptionInfo subscriptionInfo = SubscriptionInfo.of(topicName, subscriptionName);\n     Future<Subscription> future = pubsub.createAsync(subscriptionInfo);\n@@ -318,6 +336,7 @@ public class PubSubSnippets {\n   // [TARGET replacePushConfig(String, PushConfig)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"https://www.example.com/push\"]\n+\n   public void replacePushConfig(String subscriptionName, String endpoint) {\n     // [START replacePushConfig]\n     PushConfig pushConfig = PushConfig.of(endpoint);\n@@ -331,6 +350,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET replacePushConfig(String, PushConfig)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public void replacePushConfigToPull(String subscriptionName) {\n     // [START replacePushConfigToPull]\n     pubsub.replacePushConfig(subscriptionName, null);\n@@ -344,8 +364,8 @@ public class PubSubSnippets {\n   // [TARGET replacePushConfigAsync(String, PushConfig)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"https://www.example.com/push\"]\n-  public void replacePushConfigAsync(String subscriptionName, String endpoint)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void replacePushConfigAsync(String subscriptionName, String endpoint) throws ExecutionException, InterruptedException {\n     // [START replacePushConfigAsync]\n     PushConfig pushConfig = PushConfig.of(endpoint);\n     Future<Void> future = pubsub.replacePushConfigAsync(subscriptionName, pushConfig);\n@@ -360,8 +380,8 @@ public class PubSubSnippets {\n    */\n   // [TARGET replacePushConfigAsync(String, PushConfig)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public void replacePushConfigToPullAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void replacePushConfigToPullAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START replacePushConfigToPullAsync]\n     Future<Void> future = pubsub.replacePushConfigAsync(subscriptionName, null);\n     // ...\n@@ -374,11 +394,13 @@ public class PubSubSnippets {\n    */\n   // [TARGET getSubscription(String)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public Subscription getSubscription(String subscriptionName) {\n     // [START getSubscription]\n     Subscription subscription = pubsub.getSubscription(subscriptionName);\n     if (subscription == null) {\n       // subscription was not found\n+\n     }\n     // [END getSubscription]\n     return subscription;\n@@ -389,14 +411,15 @@ public class PubSubSnippets {\n    */\n   // [TARGET getSubscriptionAsync(String)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public Subscription getSubscriptionAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Subscription getSubscriptionAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START getSubscriptionAsync]\n     Future<Subscription> future = pubsub.getSubscriptionAsync(subscriptionName);\n     // ...\n     Subscription subscription = future.get();\n     if (subscription == null) {\n       // subscription was not found\n+\n     }\n     // [END getSubscriptionAsync]\n     return subscription;\n@@ -406,6 +429,7 @@ public class PubSubSnippets {\n    * Example of listing subscriptions, specifying the page size.\n    */\n   // [TARGET listSubscriptions(ListOption...)]\n+\n   public Page<Subscription> listSubscriptions() {\n     // [START listSubscriptions]\n     Page<Subscription> subscriptions = pubsub.listSubscriptions(ListOption.pageSize(100));\n@@ -422,10 +446,10 @@ public class PubSubSnippets {\n    * Example of asynchronously listing subscriptions, specifying the page size.\n    */\n   // [TARGET listSubscriptionsAsync(ListOption...)]\n+\n   public Page<Subscription> listSubscriptionsAsync() throws ExecutionException, InterruptedException {\n     // [START listSubscriptionsAsync]\n-    Future<AsyncPage<Subscription>> future =\n-        pubsub.listSubscriptionsAsync(ListOption.pageSize(100));\n+    Future<AsyncPage<Subscription>> future = pubsub.listSubscriptionsAsync(ListOption.pageSize(100));\n     // ...\n     AsyncPage<Subscription> subscriptions = future.get();\n     Iterator<Subscription> subscriptionIterator = subscriptions.iterateAll();\n@@ -442,10 +466,10 @@ public class PubSubSnippets {\n    */\n   // [TARGET listSubscriptions(String, ListOption...)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Page<SubscriptionId> listSubscriptionsForTopic(String topicName) {\n     // [START listSubscriptionsForTopic]\n-    Page<SubscriptionId> subscriptions =\n-        pubsub.listSubscriptions(topicName, ListOption.pageSize(100));\n+    Page<SubscriptionId> subscriptions = pubsub.listSubscriptions(topicName, ListOption.pageSize(100));\n     Iterator<SubscriptionId> subscriptionIterator = subscriptions.iterateAll();\n     while (subscriptionIterator.hasNext()) {\n       SubscriptionId subscription = subscriptionIterator.next();\n@@ -460,11 +484,10 @@ public class PubSubSnippets {\n    */\n   // [TARGET listSubscriptionsAsync(String, ListOption...)]\n   // [VARIABLE \"my_topic_name\"]\n-  public Page<SubscriptionId> listSubscriptionsForTopicAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Page<SubscriptionId> listSubscriptionsForTopicAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START listSubscriptionsForTopicAsync]\n-    Future<AsyncPage<SubscriptionId>> future =\n-        pubsub.listSubscriptionsAsync(topicName, ListOption.pageSize(100));\n+    Future<AsyncPage<SubscriptionId>> future = pubsub.listSubscriptionsAsync(topicName, ListOption.pageSize(100));\n     // ...\n     AsyncPage<SubscriptionId> subscriptions = future.get();\n     Iterator<SubscriptionId> subscriptionIterator = subscriptions.iterateAll();\n@@ -481,13 +504,16 @@ public class PubSubSnippets {\n    */\n   // [TARGET deleteSubscription(String)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public boolean deleteSubscription(String subscriptionName) {\n     // [START deleteSubscription]\n     boolean deleted = pubsub.deleteSubscription(subscriptionName);\n     if (deleted) {\n       // the subscription was deleted\n+\n     } else {\n       // the subscription was not found\n+\n     }\n     // [END deleteSubscription]\n     return deleted;\n@@ -498,16 +524,18 @@ public class PubSubSnippets {\n    */\n   // [TARGET deleteSubscriptionAsync(String)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public boolean deleteSubscriptionAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public boolean deleteSubscriptionAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START deleteSubscriptionAsync]\n     Future<Boolean> future = pubsub.deleteSubscriptionAsync(subscriptionName);\n     // ...\n     boolean deleted = future.get();\n     if (deleted) {\n       // the subscription was deleted\n+\n     } else {\n       // the subscription was not found\n+\n     }\n     // [END deleteSubscriptionAsync]\n     return deleted;\n@@ -518,6 +546,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET pull(String, int)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public void pull(String subscriptionName) {\n     // [START pull]\n     Iterator<ReceivedMessage> messages = pubsub.pull(subscriptionName, 100);\n@@ -535,6 +564,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET pullAsync(String, int)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public void pullAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START pullAsync]\n     Future<Iterator<ReceivedMessage>> future = pubsub.pullAsync(subscriptionName, 100);\n@@ -554,15 +584,18 @@ public class PubSubSnippets {\n    */\n   // [TARGET pullAsync(String, MessageProcessor, PullOption...)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public void pullWithMessageConsumer(String subscriptionName) throws Exception {\n     // [START pullWithMessageConsumer]\n     MessageProcessor callback = new MessageProcessor() {\n-      public void process(Message message) throws Exception {\n+\n+                                  public void process(Message message) throws Exception {\n         // Ack deadline is renewed until this method returns\n         // Message is acked if this method returns successfully\n         // Message is nacked if this method throws an exception\n-      }\n-    };\n+\n+                                  }\n+};\n     PubSub.MessageConsumer consumer = pubsub.pullAsync(subscriptionName, callback);\n     // ...\n     // Stop pulling\n@@ -576,6 +609,7 @@ public class PubSubSnippets {\n   // [TARGET ack(String, String, String...)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message_ack_id\"]\n+\n   public void ackOneMessage(String subscriptionName, String ackId) {\n     // [START ackOneMessage]\n     pubsub.ack(subscriptionName, ackId);\n@@ -588,8 +622,8 @@ public class PubSubSnippets {\n   // [TARGET ackAsync(String, String, String...)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message_ack_id\"]\n-  public void ackOneMessageAsync(String subscriptionName, String ackId)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void ackOneMessageAsync(String subscriptionName, String ackId) throws ExecutionException, InterruptedException {\n     // [START ackOneMessageAsync]\n     Future<Void> future = pubsub.ackAsync(subscriptionName, ackId);\n     // ...\n@@ -604,6 +638,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n+\n   public void ackMoreMessages(String subscriptionName, String ackId1, String ackId2) {\n     // [START ackMoreMessages]\n     pubsub.ack(subscriptionName, ackId1, ackId2);\n@@ -617,8 +652,8 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n-  public void ackMoreMessagesAsync(String subscriptionName, String ackId1, String ackId2)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void ackMoreMessagesAsync(String subscriptionName, String ackId1, String ackId2) throws ExecutionException, InterruptedException {\n     // [START ackMoreMessagesAsync]\n     Future<Void> future = pubsub.ackAsync(subscriptionName, ackId1, ackId2);\n     // ...\n@@ -633,6 +668,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n+\n   public void ackMessageList(String subscriptionName, String ackId1, String ackId2) {\n     // [START ackMessageList]\n     List<String> ackIds = new LinkedList<>();\n@@ -649,8 +685,8 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n-  public void ackMessageListAsync(String subscriptionName, String ackId1, String ackId2)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void ackMessageListAsync(String subscriptionName, String ackId1, String ackId2) throws ExecutionException, InterruptedException {\n     // [START ackMessageListAsync]\n     List<String> ackIds = new LinkedList<>();\n     ackIds.add(ackId1);\n@@ -667,6 +703,7 @@ public class PubSubSnippets {\n   // [TARGET nack(String, String, String...)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message_ack_id\"]\n+\n   public void nackOneMessage(String subscriptionName, String ackId) {\n     // [START nackOneMessage]\n     pubsub.nack(subscriptionName, ackId);\n@@ -679,8 +716,8 @@ public class PubSubSnippets {\n   // [TARGET nackAsync(String, String, String...)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message_ack_id\"]\n-  public void nackOneMessageAsync(String subscriptionName, String ackId)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void nackOneMessageAsync(String subscriptionName, String ackId) throws ExecutionException, InterruptedException {\n     // [START nackOneMessageAsync]\n     Future<Void> future = pubsub.nackAsync(subscriptionName, ackId);\n     // ...\n@@ -695,6 +732,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n+\n   public void nackMoreMessages(String subscriptionName, String ackId1, String ackId2) {\n     // [START nackMoreMessages]\n     pubsub.nack(subscriptionName, ackId1, ackId2);\n@@ -708,8 +746,8 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n-  public void nackMoreMessagesAsync(String subscriptionName, String ackId1, String ackId2)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void nackMoreMessagesAsync(String subscriptionName, String ackId1, String ackId2) throws ExecutionException, InterruptedException {\n     // [START nackMoreMessagesAsync]\n     Future<Void> future = pubsub.nackAsync(subscriptionName, ackId1, ackId2);\n     // ...\n@@ -724,6 +762,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n+\n   public void nackMessageList(String subscriptionName, String ackId1, String ackId2) {\n     // [START nackMessageList]\n     List<String> ackIds = new LinkedList<>();\n@@ -740,8 +779,8 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n-  public void nackMessageListAsync(String subscriptionName, String ackId1, String ackId2)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void nackMessageListAsync(String subscriptionName, String ackId1, String ackId2) throws ExecutionException, InterruptedException {\n     // [START nackMessageListAsync]\n     List<String> ackIds = new LinkedList<>();\n     ackIds.add(ackId1);\n@@ -758,6 +797,7 @@ public class PubSubSnippets {\n   // [TARGET modifyAckDeadline(String, int, TimeUnit, String, String...)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message_ack_id\"]\n+\n   public void modifyAckDeadlineOneMessage(String subscriptionName, String ackId) {\n     // [START modifyAckDeadlineOneMessage]\n     pubsub.modifyAckDeadline(subscriptionName, 60, TimeUnit.SECONDS, ackId);\n@@ -770,11 +810,10 @@ public class PubSubSnippets {\n   // [TARGET modifyAckDeadlineAsync(String, int, TimeUnit, String, String...)]\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message_ack_id\"]\n-  public void modifyAckDeadlineOneMessageAsync(String subscriptionName, String ackId)\n-      throws ExecutionException, InterruptedException {\n+\n+  public void modifyAckDeadlineOneMessageAsync(String subscriptionName, String ackId) throws ExecutionException, InterruptedException {\n     // [START modifyAckDeadlineOneMessageAsync]\n-    Future<Void> future =\n-        pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackId);\n+    Future<Void> future = pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackId);\n     // ...\n     future.get();\n     // [END modifyAckDeadlineOneMessageAsync]\n@@ -787,6 +826,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n+\n   public void modifyAckDeadlineMoreMessages(String subscriptionName, String ackId1, String ackId2) {\n     // [START modifyAckDeadline]\n     pubsub.modifyAckDeadline(subscriptionName, 60, TimeUnit.SECONDS, ackId1, ackId2);\n@@ -800,11 +840,10 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n-  public void modifyAckDeadlineMoreMessagesAsync(String subscriptionName, String ackId1,\n-      String ackId2) throws ExecutionException, InterruptedException {\n+\n+  public void modifyAckDeadlineMoreMessagesAsync(String subscriptionName, String ackId1, String ackId2) throws ExecutionException, InterruptedException {\n     // [START modifyAckDeadlineMoreMessagesAsync]\n-    Future<Void> future =\n-        pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackId1, ackId2);\n+    Future<Void> future = pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackId1, ackId2);\n     // ...\n     future.get();\n     // [END modifyAckDeadlineMoreMessagesAsync]\n@@ -817,6 +856,7 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n+\n   public void modifyAckDeadlineMessageList(String subscriptionName, String ackId1, String ackId2) {\n     // [START modifyAckDeadlineMessageList]\n     List<String> ackIds = new LinkedList<>();\n@@ -833,14 +873,13 @@ public class PubSubSnippets {\n   // [VARIABLE \"my_subscription_name\"]\n   // [VARIABLE \"message1_ack_id\"]\n   // [VARIABLE \"message2_ack_id\"]\n-  public void modifyAckDeadlineMessageListAsync(String subscriptionName, String ackId1,\n-      String ackId2) throws ExecutionException, InterruptedException {\n+\n+  public void modifyAckDeadlineMessageListAsync(String subscriptionName, String ackId1, String ackId2) throws ExecutionException, InterruptedException {\n     // [START modifyAckDeadlineMessageListAsync]\n     List<String> ackIds = new LinkedList<>();\n     ackIds.add(ackId1);\n     ackIds.add(ackId2);\n-    Future<Void> future =\n-        pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackIds);\n+    Future<Void> future = pubsub.modifyAckDeadlineAsync(subscriptionName, 60, TimeUnit.SECONDS, ackIds);\n     // ...\n     future.get();\n     // [END modifyAckDeadlineMessageListAsync]\n@@ -851,11 +890,13 @@ public class PubSubSnippets {\n    */\n   // [TARGET getTopicPolicy(String)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Policy getTopicPolicy(String topicName) {\n     // [START getTopicPolicy]\n     Policy policy = pubsub.getTopicPolicy(topicName);\n     if (policy == null) {\n       // topic was not found\n+\n     }\n     // [END getTopicPolicy]\n     return policy;\n@@ -866,14 +907,15 @@ public class PubSubSnippets {\n    */\n   // [TARGET getTopicPolicyAsync(String)]\n   // [VARIABLE \"my_topic_name\"]\n-  public Policy getTopicPolicyAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Policy getTopicPolicyAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START getTopicPolicyAsync]\n     Future<Policy> future = pubsub.getTopicPolicyAsync(topicName);\n     // ...\n     Policy policy = future.get();\n     if (policy == null) {\n       // topic was not found\n+\n     }\n     // [END getTopicPolicyAsync]\n     return policy;\n@@ -884,12 +926,11 @@ public class PubSubSnippets {\n    */\n   // [TARGET replaceTopicPolicy(String, Policy)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public Policy replaceTopicPolicy(String topicName) {\n     // [START replaceTopicPolicy]\n     Policy policy = pubsub.getTopicPolicy(topicName);\n-    Policy updatedPolicy = policy.toBuilder()\n-        .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n-        .build();\n+    Policy updatedPolicy = policy.toBuilder().addIdentity(Role.viewer(), Identity.allAuthenticatedUsers()).build();\n     updatedPolicy = pubsub.replaceTopicPolicy(topicName, updatedPolicy);\n     // [END replaceTopicPolicy]\n     return updatedPolicy;\n@@ -900,13 +941,11 @@ public class PubSubSnippets {\n    */\n   // [TARGET replaceTopicPolicyAsync(String, Policy)]\n   // [VARIABLE \"my_topic_name\"]\n-  public Policy replaceTopicPolicyAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Policy replaceTopicPolicyAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START replaceTopicPolicyAsync]\n     Policy policy = pubsub.getTopicPolicy(topicName);\n-    Policy updatedPolicy = policy.toBuilder()\n-        .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n-        .build();\n+    Policy updatedPolicy = policy.toBuilder().addIdentity(Role.viewer(), Identity.allAuthenticatedUsers()).build();\n     Future<Policy> future = pubsub.replaceTopicPolicyAsync(topicName, updatedPolicy);\n     // ...\n     updatedPolicy = future.get();\n@@ -919,6 +958,7 @@ public class PubSubSnippets {\n    */\n   // [TARGET testTopicPermissions(String, List)]\n   // [VARIABLE \"my_topic_name\"]\n+\n   public List<Boolean> testTopicPermissions(String topicName) {\n     // [START testTopicPermissions]\n     List<String> permissions = new LinkedList<>();\n@@ -933,8 +973,8 @@ public class PubSubSnippets {\n    */\n   // [TARGET testTopicPermissionsAsync(String, List)]\n   // [VARIABLE \"my_topic_name\"]\n-  public List<Boolean> testTopicPermissionsAsync(String topicName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public List<Boolean> testTopicPermissionsAsync(String topicName) throws ExecutionException, InterruptedException {\n     // [START testTopicPermissionsAsync]\n     List<String> permissions = new LinkedList<>();\n     permissions.add(\"pubsub.topics.get\");\n@@ -950,11 +990,13 @@ public class PubSubSnippets {\n    */\n   // [TARGET getSubscriptionPolicy(String)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public Policy getSubscriptionPolicy(String subscriptionName) {\n     // [START getSubscriptionPolicy]\n     Policy policy = pubsub.getSubscriptionPolicy(subscriptionName);\n     if (policy == null) {\n       // subscription was not found\n+\n     }\n     // [END getSubscriptionPolicy]\n     return policy;\n@@ -965,14 +1007,15 @@ public class PubSubSnippets {\n    */\n   // [TARGET getSubscriptionPolicyAsync(String)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public Policy getSubscriptionPolicyAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Policy getSubscriptionPolicyAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START getSubscriptionPolicyAsync]\n     Future<Policy> future = pubsub.getSubscriptionPolicyAsync(subscriptionName);\n     // ...\n     Policy policy = future.get();\n     if (policy == null) {\n       // subscription was not found\n+\n     }\n     // [END getSubscriptionPolicyAsync]\n     return policy;\n@@ -983,12 +1026,11 @@ public class PubSubSnippets {\n    */\n   // [TARGET replaceSubscriptionPolicy(String, Policy)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public Policy replaceSubscriptionPolicy(String subscriptionName) {\n     // [START replaceSubscriptionPolicy]\n     Policy policy = pubsub.getSubscriptionPolicy(subscriptionName);\n-    Policy updatedPolicy = policy.toBuilder()\n-        .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n-        .build();\n+    Policy updatedPolicy = policy.toBuilder().addIdentity(Role.viewer(), Identity.allAuthenticatedUsers()).build();\n     updatedPolicy = pubsub.replaceSubscriptionPolicy(subscriptionName, updatedPolicy);\n     // [END replaceSubscriptionPolicy]\n     return updatedPolicy;\n@@ -999,15 +1041,12 @@ public class PubSubSnippets {\n    */\n   // [TARGET replaceSubscriptionPolicyAsync(String, Policy)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public Policy replaceSubscriptionPolicyAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public Policy replaceSubscriptionPolicyAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START replaceSubscriptionPolicyAsync]\n     Policy policy = pubsub.getSubscriptionPolicy(subscriptionName);\n-    Policy updatedPolicy = policy.toBuilder()\n-        .addIdentity(Role.viewer(), Identity.allAuthenticatedUsers())\n-        .build();\n-    Future<Policy> future =\n-        pubsub.replaceSubscriptionPolicyAsync(subscriptionName, updatedPolicy);\n+    Policy updatedPolicy = policy.toBuilder().addIdentity(Role.viewer(), Identity.allAuthenticatedUsers()).build();\n+    Future<Policy> future = pubsub.replaceSubscriptionPolicyAsync(subscriptionName, updatedPolicy);\n     // ...\n     updatedPolicy = future.get();\n     // [END replaceSubscriptionPolicyAsync]\n@@ -1019,12 +1058,12 @@ public class PubSubSnippets {\n    */\n   // [TARGET testSubscriptionPermissions(String, List)]\n   // [VARIABLE \"my_subscription_name\"]\n+\n   public List<Boolean> testSubscriptionPermissions(String subscriptionName) {\n     // [START testSubscriptionPermissions]\n     List<String> permissions = new LinkedList<>();\n     permissions.add(\"pubsub.subscriptions.get\");\n-    List<Boolean> testedPermissions =\n-        pubsub.testSubscriptionPermissions(subscriptionName, permissions);\n+    List<Boolean> testedPermissions = pubsub.testSubscriptionPermissions(subscriptionName, permissions);\n     // [END testSubscriptionPermissions]\n     return testedPermissions;\n   }\n@@ -1035,16 +1074,15 @@ public class PubSubSnippets {\n    */\n   // [TARGET testSubscriptionPermissionsAsync(String, List)]\n   // [VARIABLE \"my_subscription_name\"]\n-  public List<Boolean> testSubscriptionPermissionsAsync(String subscriptionName)\n-      throws ExecutionException, InterruptedException {\n+\n+  public List<Boolean> testSubscriptionPermissionsAsync(String subscriptionName) throws ExecutionException, InterruptedException {\n     // [START testSubscriptionPermissionsAsync]\n     List<String> permissions = new LinkedList<>();\n     permissions.add(\"pubsub.subscriptions.get\");\n-    Future<List<Boolean>> future =\n-        pubsub.testSubscriptionPermissionsAsync(subscriptionName, permissions);\n+    Future<List<Boolean>> future = pubsub.testSubscriptionPermissionsAsync(subscriptionName, permissions);\n     // ...\n     List<Boolean> testedPermissions = future.get();\n     // [END testSubscriptionPermissionsAsync]\n     return testedPermissions;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 141
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "425",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "425",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
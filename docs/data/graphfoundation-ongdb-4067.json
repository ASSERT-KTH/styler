{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4067",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4067/LogEntryStart.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4067/LogEntryStart.java\nindex c08502e3a2a..60be3f39865 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4067/LogEntryStart.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4067/LogEntryStart.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.entry;\n \n import java.util.Arrays;\n@@ -30,141 +31,141 @@ import static org.neo4j.kernel.impl.transaction.log.entry.LogEntryVersion.CURREN\n \n public class LogEntryStart extends AbstractLogEntry\n {\n-    private final int masterId;\n-    private final int authorId;\n-    private final long timeWritten;\n-    private final long lastCommittedTxWhenTransactionStarted;\n-    private final byte[] additionalHeader;\n-    private LogPosition startPosition;\n-\n-    public LogEntryStart( int masterId, int authorId, long timeWritten,\n-                          long lastCommittedTxWhenTransactionStarted, byte[] additionalHeader,\n-                          LogPosition startPosition )\n-    {\n-        this( CURRENT, masterId, authorId, timeWritten,\n-                lastCommittedTxWhenTransactionStarted, additionalHeader, startPosition );\n-    }\n-\n-    public LogEntryStart( LogEntryVersion version, int masterId, int authorId, long timeWritten,\n-                          long lastCommittedTxWhenTransactionStarted, byte[] additionalHeader, LogPosition startPosition )\n-    {\n-        super( version, TX_START );\n-        this.masterId = masterId;\n-        this.authorId = authorId;\n-        this.startPosition = startPosition;\n-        this.timeWritten = timeWritten;\n-        this.lastCommittedTxWhenTransactionStarted = lastCommittedTxWhenTransactionStarted;\n-        this.additionalHeader = additionalHeader;\n-    }\n-\n-    public int getMasterId()\n-    {\n-        return masterId;\n-    }\n-\n-    public int getLocalId()\n-    {\n-        return authorId;\n-    }\n-\n-    public LogPosition getStartPosition()\n-    {\n-        return startPosition;\n-    }\n-\n-    public long getTimeWritten()\n-    {\n-        return timeWritten;\n-    }\n-\n-    public long getLastCommittedTxWhenTransactionStarted()\n-    {\n-        return lastCommittedTxWhenTransactionStarted;\n-    }\n-\n-    public byte[] getAdditionalHeader()\n-    {\n-        return additionalHeader;\n-    }\n-\n-    /**\n-     * @return combines necessary state to get a unique checksum to identify this transaction uniquely.\n-     */\n-    public static long checksum( byte[] additionalHeader, int masterId, int authorId )\n-    {\n-        // [4 bits combined masterId/myId][4 bits xid hashcode, which combines time/randomness]\n-        long lowBits = Arrays.hashCode( additionalHeader );\n-        long highBits = masterId * 37 + authorId;\n-        return (highBits << 32) | (lowBits & 0xFFFFFFFFL);\n-    }\n-\n-    public static long checksum( LogEntryStart entry )\n-    {\n-        return checksum( entry.additionalHeader, entry.masterId, entry.authorId );\n-    }\n-\n-    public long checksum()\n-    {\n-        return checksum( this );\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return toString( Format.DEFAULT_TIME_ZONE );\n-    }\n-\n-    @Override\n-    public String toString( TimeZone timeZone )\n-    {\n-        return \"Start[\" +\n-                \"master=\" + masterId + \",\" +\n-                \"me=\" + authorId + \",\" +\n-                \"time=\" + timestamp( timeWritten, timeZone ) + \",\" +\n-                \"lastCommittedTxWhenTransactionStarted=\" + lastCommittedTxWhenTransactionStarted + \",\" +\n-                \"additionalHeaderLength=\" + (additionalHeader == null ? -1 : additionalHeader.length) + \",\" +\n-                (additionalHeader == null ? \"\" : Arrays.toString( additionalHeader ) ) + \",\" +\n-                \"position=\" + startPosition + \",\" +\n-                \"checksum=\" + checksum( this ) +\n-                \"]\";\n-    }\n-\n-    @Override\n-    @SuppressWarnings( \"unchecked\" )\n-    public <T extends LogEntry> T as()\n-    {\n-        return (T) this;\n-    }\n-\n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        LogEntryStart start = (LogEntryStart) o;\n-\n-        return authorId == start.authorId &&\n-               lastCommittedTxWhenTransactionStarted == start.lastCommittedTxWhenTransactionStarted &&\n-               masterId == start.masterId && timeWritten == start.timeWritten &&\n-               Arrays.equals( additionalHeader, start.additionalHeader ) && startPosition.equals( start.startPosition );\n-    }\n-\n-    @Override\n-    public int hashCode()\n-    {\n-        int result = masterId;\n-        result = 31 * result + authorId;\n-        result = 31 * result + (int) (timeWritten ^ (timeWritten >>> 32));\n-        result = 31 * result + (int) (lastCommittedTxWhenTransactionStarted ^ (lastCommittedTxWhenTransactionStarted >>> 32));\n-        result = 31 * result + (additionalHeader != null ? Arrays.hashCode( additionalHeader ) : 0);\n-        result = 31 * result + startPosition.hashCode();\n-        return result;\n-    }\n+  private final int masterId;\n+  private final int authorId;\n+  private final long timeWritten;\n+  private final long lastCommittedTxWhenTransactionStarted;\n+  private final byte[] additionalHeader;\n+  private LogPosition startPosition;\n+\n+  public LogEntryStart(int masterId, int authorId, long timeWritten,\n+                       long lastCommittedTxWhenTransactionStarted, byte[] additionalHeader,\n+                       LogPosition startPosition)\n+  {\n+    this(CURRENT, masterId, authorId, timeWritten,\n+        lastCommittedTxWhenTransactionStarted, additionalHeader, startPosition);\n+  }\n+\n+  public LogEntryStart(LogEntryVersion version, int masterId, int authorId, long timeWritten,\n+                       long lastCommittedTxWhenTransactionStarted, byte[] additionalHeader, LogPosition startPosition)\n+  {\n+    super(version, TX_START);\n+    this.masterId = masterId;\n+    this.authorId = authorId;\n+    this.startPosition = startPosition;\n+    this.timeWritten = timeWritten;\n+    this.lastCommittedTxWhenTransactionStarted = lastCommittedTxWhenTransactionStarted;\n+    this.additionalHeader = additionalHeader;\n+  }\n+\n+  public int getMasterId()\n+  {\n+    return masterId;\n+  }\n+\n+  public int getLocalId()\n+  {\n+    return authorId;\n+  }\n+\n+  public LogPosition getStartPosition()\n+  {\n+    return startPosition;\n+  }\n+\n+  public long getTimeWritten()\n+  {\n+    return timeWritten;\n+  }\n+\n+  public long getLastCommittedTxWhenTransactionStarted()\n+  {\n+    return lastCommittedTxWhenTransactionStarted;\n+  }\n+\n+  public byte[] getAdditionalHeader()\n+  {\n+    return additionalHeader;\n+  }\n+\n+  /**\n+   * @return combines necessary state to get a unique checksum to identify this transaction uniquely.\n+   */\n+  public static long checksum(byte[] additionalHeader, int masterId, int authorId)\n+  {\n+    // [4 bits combined masterId/myId][4 bits xid hashcode, which combines time/randomness]\n+    long lowBits = Arrays.hashCode(additionalHeader);\n+    long highBits = masterId * 37 + authorId;\n+    return (highBits << 32) | (lowBits & 0xFFFFFFFFL);\n+  }\n+\n+  public static long checksum(LogEntryStart entry)\n+  {\n+    return checksum(entry.additionalHeader, entry.masterId, entry.authorId);\n+  }\n+\n+  public long checksum()\n+  {\n+    return checksum(this);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return toString(Format.DEFAULT_TIME_ZONE);\n+  }\n+\n+  @Override\n+  public String toString(TimeZone timeZone)\n+  {\n+    return \"Start[\" +\n+        \"master=\" + masterId + \",\" +\n+        \"me=\" + authorId + \",\" +\n+        \"time=\" + timestamp(timeWritten, timeZone) + \",\" +\n+        \"lastCommittedTxWhenTransactionStarted=\" + lastCommittedTxWhenTransactionStarted + \",\" +\n+        \"additionalHeaderLength=\" + (additionalHeader == null ? -1 : additionalHeader.length) + \",\" +\n+        (additionalHeader == null ? \"\" : Arrays.toString(additionalHeader)) + \",\" +\n+        \"position=\" + startPosition + \",\" +\n+        \"checksum=\" + checksum(this) +\n+        \"]\";\n+  }\n+\n+  @Override\n+  @SuppressWarnings(\"unchecked\")\n+  public <T extends LogEntry> T as()\n+  {\n+    return (T) this;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n+    {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass())\n+    {\n+      return false;\n+    }\n+\n+    LogEntryStart start = (LogEntryStart) o;\n+\n+    return authorId == start.authorId &&\n+        lastCommittedTxWhenTransactionStarted == start.lastCommittedTxWhenTransactionStarted &&\n+        masterId == start.masterId && timeWritten == start.timeWritten &&\n+        Arrays.equals(additionalHeader, start.additionalHeader) && startPosition.equals(start.startPosition);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = masterId;\n+    result = 31 * result + authorId;\n+    result = 31 * result + (int) (timeWritten ^ (timeWritten >>> 32));\n+    result = 31 * result + (int) (lastCommittedTxWhenTransactionStarted ^ (lastCommittedTxWhenTransactionStarted >>> 32));\n+    result = 31 * result + (additionalHeader != null ? Arrays.hashCode(additionalHeader) : 0);\n+    result = 31 * result + startPosition.hashCode();\n+    return result;\n+  }\n }\n",
            "diff_size": 138
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 193).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 470).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "153",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4067/LogEntryStart.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4067/LogEntryStart.java\nindex c08502e3a2a..350c283702f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4067/LogEntryStart.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4067/LogEntryStart.java\n@@ -37,17 +37,15 @@ public class LogEntryStart extends AbstractLogEntry\n     private final byte[] additionalHeader;\n     private LogPosition startPosition;\n \n-    public LogEntryStart( int masterId, int authorId, long timeWritten,\n-                          long lastCommittedTxWhenTransactionStarted, byte[] additionalHeader,\n+    public LogEntryStart( int masterId, int authorId, long timeWritten, long lastCommittedTxWhenTransactionStarted, byte[] additionalHeader,\n                           LogPosition startPosition )\n-    {\n+{\n         this( CURRENT, masterId, authorId, timeWritten,\n                 lastCommittedTxWhenTransactionStarted, additionalHeader, startPosition );\n     }\n \n-    public LogEntryStart( LogEntryVersion version, int masterId, int authorId, long timeWritten,\n-                          long lastCommittedTxWhenTransactionStarted, byte[] additionalHeader, LogPosition startPosition )\n-    {\n+    public LogEntryStart( LogEntryVersion version, int masterId, int authorId, long timeWritten, long lastCommittedTxWhenTransactionStarted, byte[] additionalHeader, LogPosition startPosition )\n+{\n         super( version, TX_START );\n         this.masterId = masterId;\n         this.authorId = authorId;\n@@ -95,7 +93,7 @@ public class LogEntryStart extends AbstractLogEntry\n         // [4 bits combined masterId/myId][4 bits xid hashcode, which combines time/randomness]\n         long lowBits = Arrays.hashCode( additionalHeader );\n         long highBits = masterId * 37 + authorId;\n-        return (highBits << 32) | (lowBits & 0xFFFFFFFFL);\n+        return ( highBits << 32) | ( lowBits & 0xFFFFFFFFL );\n     }\n \n     public static long checksum( LogEntryStart entry )\n@@ -117,16 +115,7 @@ public class LogEntryStart extends AbstractLogEntry\n     @Override\n     public String toString( TimeZone timeZone )\n     {\n-        return \"Start[\" +\n-                \"master=\" + masterId + \",\" +\n-                \"me=\" + authorId + \",\" +\n-                \"time=\" + timestamp( timeWritten, timeZone ) + \",\" +\n-                \"lastCommittedTxWhenTransactionStarted=\" + lastCommittedTxWhenTransactionStarted + \",\" +\n-                \"additionalHeaderLength=\" + (additionalHeader == null ? -1 : additionalHeader.length) + \",\" +\n-                (additionalHeader == null ? \"\" : Arrays.toString( additionalHeader ) ) + \",\" +\n-                \"position=\" + startPosition + \",\" +\n-                \"checksum=\" + checksum( this ) +\n-                \"]\";\n+        return \"Start[\" + \"master=\" + masterId + \",\" + \"me=\" + authorId + \",\" + \"time=\" + timestamp( timeWritten, timeZone ) + \",\" + \"lastCommittedTxWhenTransactionStarted=\" + lastCommittedTxWhenTransactionStarted + \",\" + \"additionalHeaderLength=\" + ( additionalHeader == null ? -1 : additionalHeader.length) + \",\" + ( additionalHeader == null ? \"\" : Arrays.toString( additionalHeader ) ) + \",\" + \"position=\" + startPosition + \",\" + \"checksum=\" + checksum( this ) + \"]\";\n     }\n \n     @Override\n@@ -143,15 +132,15 @@ public class LogEntryStart extends AbstractLogEntry\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n \n         LogEntryStart start = (LogEntryStart) o;\n \n-        return authorId == start.authorId &&\n-               lastCommittedTxWhenTransactionStarted == start.lastCommittedTxWhenTransactionStarted &&\n+        return authorId == start.authorId && lastCommittedTxWhenTransactionStarted == start.lastCommittedTxWhenTransactionStarted &&\n                masterId == start.masterId && timeWritten == start.timeWritten &&\n                Arrays.equals( additionalHeader, start.additionalHeader ) && startPosition.equals( start.startPosition );\n     }\n@@ -161,10 +150,10 @@ public class LogEntryStart extends AbstractLogEntry\n     {\n         int result = masterId;\n         result = 31 * result + authorId;\n-        result = 31 * result + (int) (timeWritten ^ (timeWritten >>> 32));\n-        result = 31 * result + (int) (lastCommittedTxWhenTransactionStarted ^ (lastCommittedTxWhenTransactionStarted >>> 32));\n-        result = 31 * result + (additionalHeader != null ? Arrays.hashCode( additionalHeader ) : 0);\n+        result = 31 * result + ( int) ( timeWritten ^ ( timeWritten >>> 32 ));\n+        result = 31 * result + ( int) ( lastCommittedTxWhenTransactionStarted ^ ( lastCommittedTxWhenTransactionStarted >>> 32 ));\n+        result = 31 * result + (additionalHeader != null ? Arrays.hashCode( additionalHeader ) : 0 );\n         result = 31 * result + startPosition.hashCode();\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
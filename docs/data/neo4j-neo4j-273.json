{
    "project_name": "neo4j-neo4j",
    "error_id": "273",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "124",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "79",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "155",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "206",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "138",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "114",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "154",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "271",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "286",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "286",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "289",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "293",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "305",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "305",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "341",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "358",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "397",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "92",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "401",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "407",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "410",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "417",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "417",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "444",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "444",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "459",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "467",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "491",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "525",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "525",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "531",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "544",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "562",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "562",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "585",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "597",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "142",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "150",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "613",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "613",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "627",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "627",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "629",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "629",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "635",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "652",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "652",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "654",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "654",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "657",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "657",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "661",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "661",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "670",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "698",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "698",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "700",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "700",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "710",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "710",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "710",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "712",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "712",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "722",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "722",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "732",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "732",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/273/BlockBasedIndexPopulator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/273/BlockBasedIndexPopulator.java\nindex b5e4ab688e4..6592e857797 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/273/BlockBasedIndexPopulator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/273/BlockBasedIndexPopulator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.Closeable;\n@@ -68,7 +69,7 @@ import static org.neo4j.util.concurrent.Runnables.runAll;\n /**\n  * {@link IndexPopulator} for native indexes that stores scan updates in parallel append-only files. When all scan updates have been collected\n  * each file is sorted and then all of them merged together into the resulting index.\n- *\n+ * <p>\n  * Note on buffers: basically each thread adding scan updates will make use of a {@link ByteBufferFactory#acquireThreadLocalBuffer(MemoryTracker)}\n  * thread-local buffer}.\n  * This together with {@link ByteBufferFactory#globalAllocator() a global buffer for external updates} and carefully reused\n@@ -76,7 +77,7 @@ import static org.neo4j.util.concurrent.Runnables.runAll;\n  * how many indexes are being built concurrently by the same job and regardless of index sizes. Formula for peak number of buffers in use is roughly\n  * {@code 10 * numberOfPopulationWorkers} where numberOfPopulationWorkers is currently capped to 8. So given a buffer size of 1 MiB then maximum memory\n  * usage for one population job (which can populate multiple index) is ~80 MiB.\n- *\n+ * <p>\n  * Regarding block size: as entries gets written to a BlockStorage, they are buffered up to this size, then sorted and written out.\n  * As blocks gets merged into bigger blocks, this is still the size of the read buffer for each block no matter its size.\n  * Each thread has its own buffer when writing and each thread has {@link #mergeFactor} buffers when merging.\n@@ -85,13 +86,13 @@ import static org.neo4j.util.concurrent.Runnables.runAll;\n  * <pre>\n  * blockSize * numberOfPopulationWorkers * {@link #mergeFactor}\n  * </pre>\n- *\n+ * <p>\n  * where {@link GraphDatabaseInternalSettings#index_population_workers} controls the number of population workers.\n  *\n  * @param <KEY>\n  * @param <VALUE>\n  */\n-public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>,VALUE extends NativeIndexValue> extends NativeIndexPopulator<KEY,VALUE>\n+public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>, VALUE extends NativeIndexValue> extends NativeIndexPopulator<KEY, VALUE>\n {\n     private final boolean archiveFailedIndex;\n     private final MemoryTracker memoryTracker;\n@@ -106,7 +107,7 @@ public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>,V\n     private final List<ThreadLocalBlockStorage> allScanUpdates = new CopyOnWriteArrayList<>();\n     private final ThreadLocal<ThreadLocalBlockStorage> scanUpdates;\n     private final ByteBufferFactory bufferFactory;\n-    private IndexUpdateStorage<KEY,VALUE> externalUpdates;\n+    private IndexUpdateStorage<KEY, VALUE> externalUpdates;\n     // written in a synchronized method when creating new thread-local instances, read when processing external updates\n     private volatile boolean scanCompleted;\n     private final CloseCancellation cancellation = new CloseCancellation();\n@@ -120,55 +121,56 @@ public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>,V\n     private final AtomicLong numberOfAppliedScanUpdates = new AtomicLong();\n     private final AtomicLong numberOfAppliedExternalUpdates = new AtomicLong();\n \n-    BlockBasedIndexPopulator( DatabaseIndexContext databaseIndexContext, IndexFiles indexFiles, IndexLayout<KEY,VALUE> layout,\n-            IndexDescriptor descriptor, boolean archiveFailedIndex, ByteBufferFactory bufferFactory, Config config, MemoryTracker memoryTracker )\n+    BlockBasedIndexPopulator(DatabaseIndexContext databaseIndexContext, IndexFiles indexFiles, IndexLayout<KEY, VALUE> layout,\n+                             IndexDescriptor descriptor, boolean archiveFailedIndex, ByteBufferFactory bufferFactory, Config config,\n+                             MemoryTracker memoryTracker)\n     {\n-        this( databaseIndexContext, indexFiles, layout, descriptor, archiveFailedIndex, bufferFactory, config, memoryTracker, NO_MONITOR );\n+        this(databaseIndexContext, indexFiles, layout, descriptor, archiveFailedIndex, bufferFactory, config, memoryTracker, NO_MONITOR);\n     }\n \n-    BlockBasedIndexPopulator( DatabaseIndexContext databaseIndexContext, IndexFiles indexFiles, IndexLayout<KEY,VALUE> layout,\n-            IndexDescriptor descriptor, boolean archiveFailedIndex, ByteBufferFactory bufferFactory, Config config, MemoryTracker memoryTracker,\n-            BlockStorage.Monitor blockStorageMonitor )\n+    BlockBasedIndexPopulator(DatabaseIndexContext databaseIndexContext, IndexFiles indexFiles, IndexLayout<KEY, VALUE> layout,\n+                             IndexDescriptor descriptor, boolean archiveFailedIndex, ByteBufferFactory bufferFactory, Config config,\n+                             MemoryTracker memoryTracker,\n+                             BlockStorage.Monitor blockStorageMonitor)\n     {\n-        super( databaseIndexContext, indexFiles, layout, descriptor );\n+        super(databaseIndexContext, indexFiles, layout, descriptor);\n         this.archiveFailedIndex = archiveFailedIndex;\n         this.memoryTracker = memoryTracker;\n-        this.mergeFactor = config.get( GraphDatabaseInternalSettings.index_populator_merge_factor );\n+        this.mergeFactor = config.get(GraphDatabaseInternalSettings.index_populator_merge_factor);\n         this.blockStorageMonitor = blockStorageMonitor;\n-        this.scanUpdates = ThreadLocal.withInitial( this::newThreadLocalBlockStorage );\n+        this.scanUpdates = ThreadLocal.withInitial(this::newThreadLocalBlockStorage);\n         this.bufferFactory = bufferFactory;\n     }\n \n     private synchronized ThreadLocalBlockStorage newThreadLocalBlockStorage()\n     {\n-        Preconditions.checkState( !cancellation.cancelled(), \"Already closed\" );\n-        Preconditions.checkState( !scanCompleted, \"Scan has already been completed\" );\n+        Preconditions.checkState(!cancellation.cancelled(), \"Already closed\");\n+        Preconditions.checkState(!scanCompleted, \"Scan has already been completed\");\n         try\n         {\n             int id = allScanUpdates.size();\n-            ThreadLocalBlockStorage blockStorage = new ThreadLocalBlockStorage( id );\n-            allScanUpdates.add( blockStorage );\n+            ThreadLocalBlockStorage blockStorage = new ThreadLocalBlockStorage(id);\n+            allScanUpdates.add(blockStorage);\n             return blockStorage;\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n-            throw new UncheckedIOException( e );\n+            throw new UncheckedIOException(e);\n         }\n     }\n \n     @Override\n     public void create()\n     {\n-        if ( archiveFailedIndex )\n+        if (archiveFailedIndex)\n         {\n             indexFiles.archiveIndex();\n         }\n         super.create();\n         Path storeFile = indexFiles.getStoreFile();\n-        Path externalUpdatesFile = storeFile.resolveSibling( storeFile.getFileName() + \".ext\" );\n+        Path externalUpdatesFile = storeFile.resolveSibling(storeFile.getFileName() + \".ext\");\n         validator = instantiateValueValidator();\n-        externalUpdates = new IndexUpdateStorage<>( fileSystem, externalUpdatesFile, bufferFactory.globalAllocator(), smallerBufferSize(), layout,\n-                memoryTracker );\n+        externalUpdates = new IndexUpdateStorage<>(fileSystem, externalUpdatesFile, bufferFactory.globalAllocator(), smallerBufferSize(), layout,\n+          memoryTracker);\n     }\n \n     protected abstract IndexValueValidator instantiateValueValidator();\n@@ -179,56 +181,55 @@ public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>,V\n     }\n \n     @Override\n-    public void add( Collection<? extends IndexEntryUpdate<?>> updates, PageCursorTracer cursorTracer )\n+    public void add(Collection<? extends IndexEntryUpdate<?>> updates, PageCursorTracer cursorTracer)\n     {\n-        if ( !updates.isEmpty() )\n+        if (!updates.isEmpty())\n         {\n-            BlockStorage<KEY,VALUE> blockStorage = scanUpdates.get().blockStorage;\n-            for ( IndexEntryUpdate<?> update : updates )\n+            BlockStorage<KEY, VALUE> blockStorage = scanUpdates.get().blockStorage;\n+            for (IndexEntryUpdate<?> update : updates)\n             {\n-                storeUpdate( (ValueIndexEntryUpdate<?>) update, blockStorage );\n+                storeUpdate((ValueIndexEntryUpdate<?>) update, blockStorage);\n             }\n         }\n     }\n \n-    private void storeUpdate( long entityId, Value[] values, BlockStorage<KEY,VALUE> blockStorage )\n+    private void storeUpdate(long entityId, Value[] values, BlockStorage<KEY, VALUE> blockStorage)\n     {\n         try\n         {\n-            validator.validate( entityId, values );\n+            validator.validate(entityId, values);\n             KEY key = layout.newKey();\n             VALUE value = layout.newValue();\n-            initializeKeyFromUpdate( key, entityId, values );\n-            value.from( values );\n-            blockStorage.add( key, value );\n-        }\n-        catch ( IOException e )\n+            initializeKeyFromUpdate(key, entityId, values);\n+            value.from(values);\n+            blockStorage.add(key, value);\n+        } catch (IOException e)\n         {\n-            throw new UncheckedIOException( e );\n+            throw new UncheckedIOException(e);\n         }\n     }\n \n-    private void storeUpdate( ValueIndexEntryUpdate<?> update, BlockStorage<KEY,VALUE> blockStorage )\n+    private void storeUpdate(ValueIndexEntryUpdate<?> update, BlockStorage<KEY, VALUE> blockStorage)\n     {\n-        storeUpdate( update.getEntityId(), update.values(), blockStorage );\n+        storeUpdate(update.getEntityId(), update.values(), blockStorage);\n     }\n \n     private synchronized boolean markMergeStarted()\n     {\n         scanCompleted = true;\n-        if ( cancellation.cancelled() )\n+        if (cancellation.cancelled())\n         {\n             return false;\n         }\n-        mergeOngoingLatch = new CountDownLatch( 1 );\n+        mergeOngoingLatch = new CountDownLatch(1);\n         return true;\n     }\n \n     @Override\n-    public void scanCompleted( PhaseTracker phaseTracker, PopulationWorkScheduler populationWorkScheduler, PageCursorTracer cursorTracer )\n-            throws IndexEntryConflictException\n+    public void scanCompleted(PhaseTracker phaseTracker, PopulationWorkScheduler populationWorkScheduler, PageCursorTracer cursorTracer)\n+      throws IndexEntryConflictException\n     {\n-        if ( !markMergeStarted() )\n+        if (!markMergeStarted())\n         {\n             // This populator has already been closed, either from an external cancel or drop call.\n             // Either way we're not supposed to do this merge.\n@@ -237,94 +238,89 @@ public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>,V\n \n         try\n         {\n-            phaseTracker.enterPhase( PhaseTracker.Phase.MERGE );\n-            if ( !allScanUpdates.isEmpty() )\n+            phaseTracker.enterPhase(PhaseTracker.Phase.MERGE);\n+            if (!allScanUpdates.isEmpty())\n             {\n-                mergeScanUpdates( populationWorkScheduler );\n+                mergeScanUpdates(populationWorkScheduler);\n             }\n \n             externalUpdates.doneAdding();\n             // don't merge and sort the external updates\n \n             // Build the tree from the scan updates\n-            if ( cancellation.cancelled() )\n+            if (cancellation.cancelled())\n             {\n                 // Do one additional check before starting to write to the tree\n                 return;\n             }\n-            phaseTracker.enterPhase( PhaseTracker.Phase.BUILD );\n+            phaseTracker.enterPhase(PhaseTracker.Phase.BUILD);\n             Path storeFile = indexFiles.getStoreFile();\n-            Path duplicatesFile = storeFile.resolveSibling( storeFile.getFileName() + \".dup\" );\n+            Path duplicatesFile = storeFile.resolveSibling(storeFile.getFileName() + \".dup\");\n             int readBufferSize = smallerBufferSize();\n-            try ( var allocator = bufferFactory.newLocalAllocator();\n-                  var indexKeyStorage = new IndexKeyStorage<>( fileSystem, duplicatesFile, allocator, readBufferSize, layout, memoryTracker ) )\n+            try (var allocator = bufferFactory.newLocalAllocator();\n+                 var indexKeyStorage = new IndexKeyStorage<>(fileSystem, duplicatesFile, allocator, readBufferSize, layout, memoryTracker))\n             {\n-                RecordingConflictDetector<KEY,VALUE> recordingConflictDetector = new RecordingConflictDetector<>( !descriptor.isUnique(), indexKeyStorage );\n-                writeScanUpdatesToTree( recordingConflictDetector, allocator, readBufferSize, cursorTracer );\n+                RecordingConflictDetector<KEY, VALUE> recordingConflictDetector = new RecordingConflictDetector<>(!descriptor.isUnique(), indexKeyStorage);\n+                writeScanUpdatesToTree(recordingConflictDetector, allocator, readBufferSize, cursorTracer);\n \n                 // Apply the external updates\n-                phaseTracker.enterPhase( PhaseTracker.Phase.APPLY_EXTERNAL );\n-                writeExternalUpdatesToTree( recordingConflictDetector, cursorTracer );\n+                phaseTracker.enterPhase(PhaseTracker.Phase.APPLY_EXTERNAL);\n+                writeExternalUpdatesToTree(recordingConflictDetector, cursorTracer);\n \n                 // Verify uniqueness\n-                if ( descriptor.isUnique() )\n+                if (descriptor.isUnique())\n                 {\n-                    try ( IndexKeyStorage.KeyEntryCursor<KEY> allConflictingKeys = recordingConflictDetector.allConflicts() )\n+                    try (IndexKeyStorage.KeyEntryCursor<KEY> allConflictingKeys = recordingConflictDetector.allConflicts())\n                     {\n-                        verifyUniqueKeys( allConflictingKeys, cursorTracer );\n+                        verifyUniqueKeys(allConflictingKeys, cursorTracer);\n                     }\n-                }\n-                else\n+                } else\n                 {\n-                    nonUniqueIndexSample = buildNonUniqueIndexSample( cursorTracer );\n+                    nonUniqueIndexSample = buildNonUniqueIndexSample(cursorTracer);\n                 }\n             }\n \n             // Flush the tree here, but keep its state as populating. This is done so that the \"actual\" flush-and-mark-online during flip\n             // becomes way faster and so the flip lock time is reduced.\n-            flushTreeAndMarkAs( BYTE_POPULATING, cursorTracer );\n-        }\n-        catch ( IOException e )\n+            flushTreeAndMarkAs(BYTE_POPULATING, cursorTracer);\n+        } catch (IOException e)\n         {\n-            throw new UncheckedIOException( e );\n-        }\n-        catch ( InterruptedException e )\n+            throw new UncheckedIOException(e);\n+        } catch (InterruptedException e)\n         {\n             Thread.currentThread().interrupt();\n-            throw new RuntimeException( \"Got interrupted, so merge not completed\", e );\n-        }\n-        catch ( ExecutionException e )\n+            throw new RuntimeException(\"Got interrupted, so merge not completed\", e);\n+        } catch (ExecutionException e)\n         {\n             // Propagating merge exception from other thread\n             Throwable executionException = e.getCause();\n-            Exceptions.throwIfUnchecked( executionException );\n-            throw new RuntimeException( executionException );\n-        }\n-        finally\n+            Exceptions.throwIfUnchecked(executionException);\n+            throw new RuntimeException(executionException);\n+        } finally\n         {\n             mergeOngoingLatch.countDown();\n         }\n     }\n \n-    private void mergeScanUpdates(  PopulationWorkScheduler populationWorkScheduler ) throws InterruptedException, ExecutionException, IOException\n+    private void mergeScanUpdates(PopulationWorkScheduler populationWorkScheduler) throws InterruptedException, ExecutionException, IOException\n     {\n         List<JobHandle<?>> mergeFutures = new ArrayList<>();\n-        for ( ThreadLocalBlockStorage part : allScanUpdates )\n+        for (ThreadLocalBlockStorage part : allScanUpdates)\n         {\n-            BlockStorage<KEY,VALUE> scanUpdates = part.blockStorage;\n+            BlockStorage<KEY, VALUE> scanUpdates = part.blockStorage;\n             // Call doneAdding here so that the buffer it allocates if it needs to flush something will be shared with other indexes\n             scanUpdates.doneAdding();\n-            mergeFutures.add( populationWorkScheduler.schedule(\n-                    indexName -> \"Block merging for '\" + indexName + \"'\",\n-                    () ->\n-                    {\n-                        scanUpdates.merge( mergeFactor, cancellation );\n-                        return null;\n-                    } )\n+            mergeFutures.add(populationWorkScheduler.schedule(\n+              indexName -> \"Block merging for '\" + indexName + \"'\",\n+              () ->\n+              {\n+                  scanUpdates.merge(mergeFactor, cancellation);\n+                  return null;\n+              })\n             );\n         }\n         // Wait for merge jobs to finish and let potential exceptions in the merge threads have a chance to propagate\n-        for ( JobHandle<?> mergeFuture : mergeFutures )\n+        for (JobHandle<?> mergeFuture : mergeFutures)\n         {\n             mergeFuture.get();\n         }\n@@ -334,101 +330,102 @@ public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>,V\n      * We will loop over all external updates once to add them to the tree. This is done without checking any uniqueness.\n      * If index is a uniqueness index we will then loop over external updates again and for each ADD or CHANGED update\n      * we will verify that those entries are unique in the tree and throw as soon as we find a duplicate.\n-     * @throws IOException If something goes wrong while reading from index.\n+     *\n+     * @throws IOException                 If something goes wrong while reading from index.\n      * @throws IndexEntryConflictException If a duplicate is found.\n      */\n-    private void writeExternalUpdatesToTree( RecordingConflictDetector<KEY,VALUE> recordingConflictDetector, PageCursorTracer cursorTracer )\n-            throws IOException, IndexEntryConflictException\n+    private void writeExternalUpdatesToTree(RecordingConflictDetector<KEY, VALUE> recordingConflictDetector, PageCursorTracer cursorTracer)\n+      throws IOException, IndexEntryConflictException\n     {\n-        try ( Writer<KEY,VALUE> writer = tree.writer( cursorTracer );\n-              IndexUpdateCursor<KEY,VALUE> updates = externalUpdates.reader() )\n+        try (Writer<KEY, VALUE> writer = tree.writer(cursorTracer);\n+             IndexUpdateCursor<KEY, VALUE> updates = externalUpdates.reader())\n         {\n-            while ( updates.next() && !cancellation.cancelled() )\n+            while (updates.next() && !cancellation.cancelled())\n             {\n-                switch ( updates.updateMode() )\n+                switch (updates.updateMode())\n                 {\n-                case ADDED:\n-                    writeToTree( writer, recordingConflictDetector, updates.key(), updates.value() );\n-                    break;\n-                case REMOVED:\n-                    writer.remove( updates.key() );\n-                    break;\n-                case CHANGED:\n-                    writer.remove( updates.key() );\n-                    writeToTree( writer, recordingConflictDetector, updates.key2(), updates.value() );\n-                    break;\n-                default:\n-                    throw new IllegalArgumentException( \"Unknown update mode \" + updates.updateMode() );\n+                    case ADDED:\n+                        writeToTree(writer, recordingConflictDetector, updates.key(), updates.value());\n+                        break;\n+                    case REMOVED:\n+                        writer.remove(updates.key());\n+                        break;\n+                    case CHANGED:\n+                        writer.remove(updates.key());\n+                        writeToTree(writer, recordingConflictDetector, updates.key2(), updates.value());\n+                        break;\n+                    default:\n+                        throw new IllegalArgumentException(\"Unknown update mode \" + updates.updateMode());\n                 }\n                 numberOfAppliedExternalUpdates.incrementAndGet();\n             }\n         }\n     }\n \n-    private void verifyUniqueKeys( IndexKeyStorage.KeyEntryCursor<KEY> allConflictingKeys, PageCursorTracer cursorTracer )\n-            throws IOException, IndexEntryConflictException\n+    private void verifyUniqueKeys(IndexKeyStorage.KeyEntryCursor<KEY> allConflictingKeys, PageCursorTracer cursorTracer)\n+      throws IOException, IndexEntryConflictException\n     {\n-        while ( allConflictingKeys.next() && !cancellation.cancelled() )\n+        while (allConflictingKeys.next() && !cancellation.cancelled())\n         {\n             KEY key = allConflictingKeys.key();\n-            key.setCompareId( false );\n-            try ( var seeker = tree.seek( key, key, cursorTracer ) )\n+            key.setCompareId(false);\n+            try (var seeker = tree.seek(key, key, cursorTracer))\n             {\n-                verifyUniqueSeek( seeker );\n+                verifyUniqueSeek(seeker);\n             }\n         }\n     }\n \n-    private void verifyUniqueSeek( Seeker<KEY,VALUE> seek ) throws IOException, IndexEntryConflictException\n+    private void verifyUniqueSeek(Seeker<KEY, VALUE> seek) throws IOException, IndexEntryConflictException\n     {\n-        if ( seek != null )\n+        if (seek != null)\n         {\n-            if ( seek.next() )\n+            if (seek.next())\n             {\n                 KEY key = seek.key();\n                 long firstEntityId = key.getEntityId();\n-                if ( seek.next() )\n+                if (seek.next())\n                 {\n                     long secondEntityId = key.getEntityId();\n-                    throw new IndexEntryConflictException( firstEntityId, secondEntityId, key.asValues() );\n+                    throw new IndexEntryConflictException(firstEntityId, secondEntityId, key.asValues());\n                 }\n             }\n         }\n     }\n \n-    private void writeScanUpdatesToTree( RecordingConflictDetector<KEY,VALUE> recordingConflictDetector, Allocator allocator, int bufferSize,\n-            PageCursorTracer cursorTracer ) throws IOException, IndexEntryConflictException\n+    private void writeScanUpdatesToTree(RecordingConflictDetector<KEY, VALUE> recordingConflictDetector, Allocator allocator, int bufferSize,\n+                                        PageCursorTracer cursorTracer) throws IOException, IndexEntryConflictException\n     {\n-        try ( MergingBlockEntryReader<KEY,VALUE> allEntries = new MergingBlockEntryReader<>( layout );\n-              var singleBlockScopedBuffer = allocator.allocate( (int) kibiBytes( 8 ), memoryTracker );\n-              var readBuffers = new CompositeBuffer() )\n+        try (MergingBlockEntryReader<KEY, VALUE> allEntries = new MergingBlockEntryReader<>(layout);\n+             var singleBlockScopedBuffer = allocator.allocate((int) kibiBytes(8), memoryTracker);\n+             var readBuffers = new CompositeBuffer())\n         {\n-            for ( ThreadLocalBlockStorage part : allScanUpdates )\n+            for (ThreadLocalBlockStorage part : allScanUpdates)\n             {\n-                var readScopedBuffer = allocator.allocate( bufferSize, memoryTracker );\n-                readBuffers.addBuffer( readScopedBuffer );\n-                try ( BlockReader<KEY,VALUE> reader = part.blockStorage.reader() )\n+                var readScopedBuffer = allocator.allocate(bufferSize, memoryTracker);\n+                readBuffers.addBuffer(readScopedBuffer);\n+                try (BlockReader<KEY, VALUE> reader = part.blockStorage.reader())\n                 {\n-                    BlockEntryReader<KEY,VALUE> singleMergedBlock = reader.nextBlock( readScopedBuffer );\n-                    if ( singleMergedBlock != null )\n+                    BlockEntryReader<KEY, VALUE> singleMergedBlock = reader.nextBlock(readScopedBuffer);\n+                    if (singleMergedBlock != null)\n                     {\n-                        allEntries.addSource( singleMergedBlock );\n+                        allEntries.addSource(singleMergedBlock);\n                         // Pass in some sort of ByteBuffer here. The point is that there should be no more data to read,\n                         // if there is then it's due to a bug in the code and must be fixed.\n-                        if ( reader.nextBlock( singleBlockScopedBuffer ) != null )\n+                        if (reader.nextBlock(singleBlockScopedBuffer) != null)\n                         {\n-                            throw new IllegalStateException( \"Final BlockStorage had multiple blocks\" );\n+                            throw new IllegalStateException(\"Final BlockStorage had multiple blocks\");\n                         }\n                     }\n                 }\n             }\n \n             int asMuchAsPossibleToTheLeft = 1;\n-            try ( Writer<KEY,VALUE> writer = tree.writer( asMuchAsPossibleToTheLeft, cursorTracer ) )\n+            try (Writer<KEY, VALUE> writer = tree.writer(asMuchAsPossibleToTheLeft, cursorTracer))\n             {\n-                while ( allEntries.next() && !cancellation.cancelled() )\n+                while (allEntries.next() && !cancellation.cancelled())\n                 {\n-                    writeToTree( writer, recordingConflictDetector, allEntries.key(), allEntries.value() );\n+                    writeToTree(writer, recordingConflictDetector, allEntries.key(), allEntries.value());\n                     numberOfAppliedScanUpdates.incrementAndGet();\n                 }\n             }\n@@ -436,20 +433,20 @@ public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>,V\n     }\n \n     @Override\n-    public IndexUpdater newPopulatingUpdater( PageCursorTracer cursorTracer )\n+    public IndexUpdater newPopulatingUpdater(PageCursorTracer cursorTracer)\n     {\n-        if ( scanCompleted )\n+        if (scanCompleted)\n         {\n             // Will need the reader from newReader, which a sub-class of this class implements\n-            return new DelegatingIndexUpdater( super.newPopulatingUpdater( cursorTracer ) )\n+            return new DelegatingIndexUpdater(super.newPopulatingUpdater(cursorTracer))\n             {\n                 @Override\n-                public void process( IndexEntryUpdate<?> update ) throws IndexEntryConflictException\n+                public void process(IndexEntryUpdate<?> update) throws IndexEntryConflictException\n                 {\n-                    ValueIndexEntryUpdate<?> valueUpdate = asValueUpdate( update );\n-                    validateUpdate( valueUpdate );\n+                    ValueIndexEntryUpdate<?> valueUpdate = asValueUpdate(update);\n+                    validateUpdate(valueUpdate);\n                     numberOfIndexUpdatesSinceSample.incrementAndGet();\n-                    super.process( valueUpdate );\n+                    super.process(valueUpdate);\n                 }\n             };\n         }\n@@ -459,18 +456,17 @@ public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>,V\n             private volatile boolean closed;\n \n             @Override\n-            public void process( IndexEntryUpdate<?> update )\n+            public void process(IndexEntryUpdate<?> update)\n             {\n                 assertOpen();\n-                ValueIndexEntryUpdate<?> valueUpdate = asValueUpdate( update );\n+                ValueIndexEntryUpdate<?> valueUpdate = asValueUpdate(update);\n                 try\n                 {\n-                    validateUpdate( valueUpdate );\n-                    externalUpdates.add( valueUpdate );\n-                }\n-                catch ( IOException e )\n+                    validateUpdate(valueUpdate);\n+                    externalUpdates.add(valueUpdate);\n+                } catch (IOException e)\n                 {\n-                    throw new UncheckedIOException( e );\n+                    throw new UncheckedIOException(e);\n                 }\n             }\n \n@@ -482,37 +478,37 @@ public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>,V\n \n             private void assertOpen()\n             {\n-                if ( closed )\n+                if (closed)\n                 {\n-                    throw new IllegalStateException( \"Updater has been closed\" );\n+                    throw new IllegalStateException(\"Updater has been closed\");\n                 }\n             }\n         };\n     }\n \n-    private void validateUpdate( ValueIndexEntryUpdate<?> update )\n+    private void validateUpdate(ValueIndexEntryUpdate<?> update)\n     {\n-        if ( update.updateMode() != UpdateMode.REMOVED )\n+        if (update.updateMode() != UpdateMode.REMOVED)\n         {\n-            validator.validate( update.getEntityId(), update.values() );\n+            validator.validate(update.getEntityId(), update.values());\n         }\n     }\n \n     @Override\n     public synchronized void drop()\n     {\n-        runAll( \"Failed while trying to drop index\",\n-                this::closeBlockStorage /* Close internal resources */,\n-                super::drop /* Super drop will close inherited resources */\n+        runAll(\"Failed while trying to drop index\",\n+          this::closeBlockStorage /* Close internal resources */,\n+          super::drop /* Super drop will close inherited resources */\n         );\n     }\n \n     @Override\n-    public synchronized void close( boolean populationCompletedSuccessfully, PageCursorTracer cursorTracer )\n+    public synchronized void close(boolean populationCompletedSuccessfully, PageCursorTracer cursorTracer)\n     {\n-        runAll( \"Failed while trying to close index\",\n-                this::closeBlockStorage /* Close internal resources */,\n-                () -> super.close( populationCompletedSuccessfully, cursorTracer ) /* Super close will close inherited resources */\n+        runAll(\"Failed while trying to close index\",\n+          this::closeBlockStorage /* Close internal resources */,\n+          () -> super.close(populationCompletedSuccessfully, cursorTracer) /* Super close will close inherited resources */\n         );\n     }\n \n@@ -526,27 +522,26 @@ public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>,V\n \n         // If there's a merge concurrently running it will very soon notice the cancel request and abort whatever it's doing as soon as it can.\n         // Let's wait for that merge to be fully aborted by simply waiting for the merge latch.\n-        if ( mergeOngoingLatch != null )\n+        if (mergeOngoingLatch != null)\n         {\n             try\n             {\n                 // We want to await any ongoing merge because it becomes problematic to close the channels otherwise\n                 mergeOngoingLatch.await();\n-            }\n-            catch ( InterruptedException e )\n+            } catch (InterruptedException e)\n             {\n                 Thread.currentThread().interrupt();\n                 // We still want to go ahead and try to close things properly, so get by only restoring the interrupt flag on the thread\n             }\n         }\n \n-        List<Closeable> toClose = allScanUpdates.stream().map( local -> local.blockStorage ).collect( Collectors.toCollection( ArrayList::new ) );\n-        toClose.add( externalUpdates );\n-        IOUtils.closeAllUnchecked( toClose );\n+        List<Closeable> toClose = allScanUpdates.stream().map(local -> local.blockStorage).collect(Collectors.toCollection(ArrayList::new));\n+        toClose.add(externalUpdates);\n+        IOUtils.closeAllUnchecked(toClose);\n     }\n \n     @Override\n-    public PopulationProgress progress( PopulationProgress scanProgress )\n+    public PopulationProgress progress(PopulationProgress scanProgress)\n     {\n         // A general note on scanProgress.getTotal(). Before the scan is completed most progress parts will base their estimates on that value.\n         // It is known that it may be slightly higher since it'll be based on store high-id, not the actual count.\n@@ -561,38 +556,37 @@ public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>,V\n         PopulationProgress.MultiBuilder builder = PopulationProgress.multiple();\n \n         // Add scan progress (this one weights a bit heavier than the others)\n-        builder.add( scanProgress, 4 );\n+        builder.add(scanProgress, 4);\n \n         // Add merge progress\n-        if ( !allScanUpdates.isEmpty() )\n+        if (!allScanUpdates.isEmpty())\n         {\n             // The parts are merged in parallel so just take the first one and it will represent the whole merge progress.\n             // It will be fairly accurate, but slightly off sometimes if other threads gets scheduling problems, i.e. if this part\n             // finish far apart from others.\n             long completed = 0;\n             long total = 0;\n-            if ( scanCompleted )\n+            if (scanCompleted)\n             {\n                 // We know the actual entry count to write during merge since we have been monitoring those values\n-                ThreadLocalBlockStorage part = first( allScanUpdates );\n+                ThreadLocalBlockStorage part = first(allScanUpdates);\n                 completed = part.entriesMerged.get();\n                 total = part.totalEntriesToMerge;\n             }\n-            builder.add( PopulationProgress.single( completed, total ), 1 );\n+            builder.add(PopulationProgress.single(completed, total), 1);\n         }\n \n         // Add tree building incl. external updates\n         PopulationProgress treeBuildProgress;\n-        if ( allScanUpdates.stream().allMatch( part -> part.mergeStarted ) )\n+        if (allScanUpdates.stream().allMatch(part -> part.mergeStarted))\n         {\n-            long entryCount = allScanUpdates.stream().mapToLong( part -> part.count ).sum() + externalUpdates.count();\n-            treeBuildProgress = PopulationProgress.single( numberOfAppliedScanUpdates.get() + numberOfAppliedExternalUpdates.get(), entryCount );\n-        }\n-        else\n+            long entryCount = allScanUpdates.stream().mapToLong(part -> part.count).sum() + externalUpdates.count();\n+            treeBuildProgress = PopulationProgress.single(numberOfAppliedScanUpdates.get() + numberOfAppliedExternalUpdates.get(), entryCount);\n+        } else\n         {\n             treeBuildProgress = PopulationProgress.NONE;\n         }\n-        builder.add( treeBuildProgress, 2 );\n+        builder.add(treeBuildProgress, 2);\n \n         return builder.build();\n     }\n@@ -600,12 +594,12 @@ public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>,V\n     /**\n      * Write key and value to tree and record duplicates if any.\n      */\n-    private void writeToTree( Writer<KEY,VALUE> writer, RecordingConflictDetector<KEY,VALUE> recordingConflictDetector, KEY key, VALUE value )\n-            throws IndexEntryConflictException\n+    private void writeToTree(Writer<KEY, VALUE> writer, RecordingConflictDetector<KEY, VALUE> recordingConflictDetector, KEY key, VALUE value)\n+      throws IndexEntryConflictException\n     {\n-        recordingConflictDetector.controlConflictDetection( key );\n-        writer.merge( key, value, recordingConflictDetector );\n-        handleMergeConflict( writer, recordingConflictDetector, key, value );\n+        recordingConflictDetector.controlConflictDetection(key);\n+        writer.merge(key, value, recordingConflictDetector);\n+        handleMergeConflict(writer, recordingConflictDetector, key, value);\n     }\n \n     /**\n@@ -613,34 +607,34 @@ public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>,V\n      * value later on. But for now we try and insert conflicting value again but with a relaxed uniqueness constraint. Insert is done with a throwing\n      * conflict checker which means it will throw if we see same value AND same id in one key.\n      */\n-    private void handleMergeConflict( Writer<KEY,VALUE> writer, RecordingConflictDetector<KEY,VALUE> recordingConflictDetector, KEY key, VALUE value )\n-            throws IndexEntryConflictException\n+    private void handleMergeConflict(Writer<KEY, VALUE> writer, RecordingConflictDetector<KEY, VALUE> recordingConflictDetector, KEY key, VALUE value)\n+      throws IndexEntryConflictException\n     {\n-        if ( recordingConflictDetector.wasConflicting() )\n+        if (recordingConflictDetector.wasConflicting())\n         {\n             // Report conflict\n             KEY copy = layout.newKey();\n-            layout.copyKey( key, copy );\n-            recordingConflictDetector.reportConflict( copy );\n+            layout.copyKey(key, copy);\n+            recordingConflictDetector.reportConflict(copy);\n \n             // Insert and overwrite with relaxed uniqueness constraint\n-            recordingConflictDetector.relaxUniqueness( key );\n-            writer.put( key, value );\n+            recordingConflictDetector.relaxUniqueness(key);\n+            writer.put(key, value);\n         }\n     }\n \n     @Override\n-    public IndexSample sample( PageCursorTracer cursorTracer )\n+    public IndexSample sample(PageCursorTracer cursorTracer)\n     {\n-        if ( !descriptor.isUnique() )\n+        if (!descriptor.isUnique())\n         {\n             return new IndexSample(\n-                    nonUniqueIndexSample.indexSize(),\n-                    nonUniqueIndexSample.uniqueValues(),\n-                    nonUniqueIndexSample.sampleSize(),\n-                    numberOfIndexUpdatesSinceSample.get() );\n+              nonUniqueIndexSample.indexSize(),\n+              nonUniqueIndexSample.uniqueValues(),\n+              nonUniqueIndexSample.sampleSize(),\n+              numberOfIndexUpdatesSinceSample.get());\n         }\n-        return super.sample( cursorTracer );\n+        return super.sample(cursorTracer);\n     }\n \n     /**\n@@ -649,34 +643,34 @@ public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>,V\n      */\n     private class ThreadLocalBlockStorage extends BlockStorage.Monitor.Delegate\n     {\n-        private final BlockStorage<KEY,VALUE> blockStorage;\n+        private final BlockStorage<KEY, VALUE> blockStorage;\n         private volatile long count;\n         private volatile boolean mergeStarted;\n         private volatile long totalEntriesToMerge;\n         private final AtomicLong entriesMerged = new AtomicLong();\n \n-        ThreadLocalBlockStorage( int id ) throws IOException\n+        ThreadLocalBlockStorage(int id) throws IOException\n         {\n-            super( blockStorageMonitor );\n+            super(blockStorageMonitor);\n             Path storeFile = indexFiles.getStoreFile();\n-            Path blockFile = storeFile.resolveSibling( storeFile.getFileName() + \".scan-\" + id );\n-            this.blockStorage = new BlockStorage<>( layout, bufferFactory, fileSystem, blockFile, this, memoryTracker );\n+            Path blockFile = storeFile.resolveSibling(storeFile.getFileName() + \".scan-\" + id);\n+            this.blockStorage = new BlockStorage<>(layout, bufferFactory, fileSystem, blockFile, this, memoryTracker);\n         }\n \n         @Override\n-        public void mergeStarted( long entryCount, long totalEntriesToWriteDuringMerge )\n+        public void mergeStarted(long entryCount, long totalEntriesToWriteDuringMerge)\n         {\n-            super.mergeStarted( entryCount, totalEntriesToWriteDuringMerge );\n+            super.mergeStarted(entryCount, totalEntriesToWriteDuringMerge);\n             this.count = entryCount;\n             this.totalEntriesToMerge = totalEntriesToWriteDuringMerge;\n             this.mergeStarted = true;\n         }\n \n         @Override\n-        public void entriesMerged( int entries )\n+        public void entriesMerged(int entries)\n         {\n-            super.entriesMerged( entries );\n-            entriesMerged.addAndGet( entries );\n+            super.entriesMerged(entries);\n+            entriesMerged.addAndGet(entries);\n         }\n     }\n \n@@ -697,26 +691,25 @@ public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>,V\n     }\n \n     private static class RecordingConflictDetector<KEY extends NativeIndexKey<KEY>, VALUE extends NativeIndexValue>\n-            extends ConflictDetectingValueMerger<KEY,VALUE,KEY>\n+      extends ConflictDetectingValueMerger<KEY, VALUE, KEY>\n     {\n         private final IndexKeyStorage<KEY> allConflictingKeys;\n \n-        RecordingConflictDetector( boolean compareEntityIds, IndexKeyStorage<KEY> indexKeyStorage )\n+        RecordingConflictDetector(boolean compareEntityIds, IndexKeyStorage<KEY> indexKeyStorage)\n         {\n-            super( compareEntityIds );\n+            super(compareEntityIds);\n             allConflictingKeys = indexKeyStorage;\n         }\n \n         @Override\n-        void doReportConflict( long existingNodeId, long addedNodeId, KEY conflictingKey )\n+        void doReportConflict(long existingNodeId, long addedNodeId, KEY conflictingKey)\n         {\n             try\n             {\n-                allConflictingKeys.add( conflictingKey );\n-            }\n-            catch ( IOException e )\n+                allConflictingKeys.add(conflictingKey);\n+            } catch (IOException e)\n             {\n-                throw new UncheckedIOException( e );\n+                throw new UncheckedIOException(e);\n             }\n         }\n \n@@ -726,9 +719,9 @@ public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>,V\n             return allConflictingKeys.reader();\n         }\n \n-        void relaxUniqueness( KEY key )\n+        void relaxUniqueness(KEY key)\n         {\n-            key.setCompareId( true );\n+            key.setCompareId(true);\n         }\n     }\n \n@@ -736,15 +729,15 @@ public abstract class BlockBasedIndexPopulator<KEY extends NativeIndexKey<KEY>,V\n     {\n         private final Collection<AutoCloseable> buffers = new ArrayList<>();\n \n-        public void addBuffer( AutoCloseable buffer )\n+        public void addBuffer(AutoCloseable buffer)\n         {\n-            buffers.add( buffer );\n+            buffers.add(buffer);\n         }\n \n         @Override\n         public void close()\n         {\n-            closeAllUnchecked( buffers );\n+            closeAllUnchecked(buffers);\n         }\n     }\n }\n",
            "diff_size": 224
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2791",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "245",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2791/FabricBookmark.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2791/FabricBookmark.java\nindex 7c633d7a422..5fb1c76f9c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2791/FabricBookmark.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2791/FabricBookmark.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.fabric.bolt;\n \n import java.util.ArrayList;\n@@ -44,9 +45,9 @@ public class FabricBookmark extends BookmarkMetadata implements Bookmark\n     private final List<InternalGraphState> internalGraphStates;\n     private final List<ExternalGraphState> externalGraphStates;\n \n-    public FabricBookmark( List<InternalGraphState> internalGraphStates, List<ExternalGraphState> externalGraphStates )\n+    public FabricBookmark(List<InternalGraphState> internalGraphStates, List<ExternalGraphState> externalGraphStates)\n     {\n-        super( -1, null );\n+        super(-1, null);\n \n         this.internalGraphStates = internalGraphStates;\n         this.externalGraphStates = externalGraphStates;\n@@ -75,81 +76,81 @@ public class FabricBookmark extends BookmarkMetadata implements Bookmark\n     }\n \n     @Override\n-    public void attachTo( BoltResponseHandler state )\n+    public void attachTo(BoltResponseHandler state)\n     {\n-        state.onMetadata( BOOKMARK_KEY, utf8Value( serialize() ) );\n+        state.onMetadata(BOOKMARK_KEY, utf8Value(serialize()));\n     }\n \n     @Override\n-    public Bookmark toBookmark( BiFunction<Long,NamedDatabaseId, Bookmark> defaultBookmarkFormat )\n+    public Bookmark toBookmark(BiFunction<Long, NamedDatabaseId, Bookmark> defaultBookmarkFormat)\n     {\n         return this;\n     }\n \n     public String serialize()\n     {\n-        String serializedState = BookmarkStateSerializer.serialize( this );\n+        String serializedState = BookmarkStateSerializer.serialize(this);\n         return PREFIX + serializedState;\n     }\n \n-    public static FabricBookmark merge( List<FabricBookmark> fabricBookmarks )\n+    public static FabricBookmark merge(List<FabricBookmark> fabricBookmarks)\n     {\n-        List<InternalGraphState> mergedInternalGraphStates = mergeInternalGraphStates( fabricBookmarks );\n-        List<ExternalGraphState> mergedExternalGraphStates = mergeExternalGraphStates( fabricBookmarks );\n+        List<InternalGraphState> mergedInternalGraphStates = mergeInternalGraphStates(fabricBookmarks);\n+        List<ExternalGraphState> mergedExternalGraphStates = mergeExternalGraphStates(fabricBookmarks);\n \n-        return new FabricBookmark( mergedInternalGraphStates, mergedExternalGraphStates );\n+        return new FabricBookmark(mergedInternalGraphStates, mergedExternalGraphStates);\n     }\n \n-    private static List<InternalGraphState> mergeInternalGraphStates( List<FabricBookmark> fabricBookmarks  )\n+    private static List<InternalGraphState> mergeInternalGraphStates(List<FabricBookmark> fabricBookmarks)\n     {\n-        Map<UUID,Long> internalGraphTxIds = new HashMap<>();\n+        Map<UUID, Long> internalGraphTxIds = new HashMap<>();\n \n         fabricBookmarks.stream()\n-                .flatMap( fabricBookmark -> fabricBookmark.getInternalGraphStates().stream() )\n-                .forEach( internalGraphState -> internalGraphTxIds.merge( internalGraphState.getGraphUuid(),\n-                        internalGraphState.getTransactionId(),\n-                        Math::max )\n-                );\n+          .flatMap(fabricBookmark -> fabricBookmark.getInternalGraphStates().stream())\n+          .forEach(internalGraphState -> internalGraphTxIds.merge(internalGraphState.getGraphUuid(),\n+            internalGraphState.getTransactionId(),\n+            Math::max)\n+          );\n \n         return internalGraphTxIds.entrySet().stream()\n-                .map( entry -> new InternalGraphState( entry.getKey(), entry.getValue() ) )\n-                .collect( Collectors.toList());\n+          .map(entry -> new InternalGraphState(entry.getKey(), entry.getValue()))\n+          .collect(Collectors.toList());\n     }\n \n-    private static List<ExternalGraphState> mergeExternalGraphStates( List<FabricBookmark> fabricBookmarks  )\n+    private static List<ExternalGraphState> mergeExternalGraphStates(List<FabricBookmark> fabricBookmarks)\n     {\n-        Map<UUID,List<RemoteBookmark>> externalGraphStates = new HashMap<>();\n+        Map<UUID, List<RemoteBookmark>> externalGraphStates = new HashMap<>();\n \n         fabricBookmarks.stream()\n-                .flatMap( fabricBookmark -> fabricBookmark.getExternalGraphStates().stream() )\n-                .forEach( externalGraphState -> externalGraphStates.computeIfAbsent( externalGraphState.getGraphUuid(), key -> new ArrayList<>() )\n-                        .addAll( externalGraphState.getBookmarks() )\n-                );\n+          .flatMap(fabricBookmark -> fabricBookmark.getExternalGraphStates().stream())\n+          .forEach(externalGraphState -> externalGraphStates.computeIfAbsent(externalGraphState.getGraphUuid(), key -> new ArrayList<>())\n+            .addAll(externalGraphState.getBookmarks())\n+          );\n \n         return externalGraphStates.entrySet().stream()\n-                .map( entry -> new ExternalGraphState( entry.getKey(), entry.getValue() ) )\n-                .collect( Collectors.toList());\n+          .map(entry -> new ExternalGraphState(entry.getKey(), entry.getValue()))\n+          .collect(Collectors.toList());\n     }\n \n     @Override\n-    public boolean equals( Object o )\n+    public boolean equals(Object o)\n     {\n-        if ( this == o )\n+        if (this == o)\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+        if (o == null || getClass() != o.getClass())\n         {\n             return false;\n         }\n         FabricBookmark that = (FabricBookmark) o;\n-        return internalGraphStates.equals( that.internalGraphStates ) && externalGraphStates.equals( that.externalGraphStates );\n+        return internalGraphStates.equals(that.internalGraphStates) && externalGraphStates.equals(that.externalGraphStates);\n     }\n \n     @Override\n     public int hashCode()\n     {\n-        return Objects.hash( internalGraphStates, externalGraphStates );\n+        return Objects.hash(internalGraphStates, externalGraphStates);\n     }\n \n     @Override\n@@ -166,7 +167,7 @@ public class FabricBookmark extends BookmarkMetadata implements Bookmark\n         private final UUID graphUuid;\n         private final long transactionId;\n \n-        public InternalGraphState( UUID graphUuid, long transactionId )\n+        public InternalGraphState(UUID graphUuid, long transactionId)\n         {\n             this.graphUuid = graphUuid;\n             this.transactionId = transactionId;\n@@ -183,24 +184,24 @@ public class FabricBookmark extends BookmarkMetadata implements Bookmark\n         }\n \n         @Override\n-        public boolean equals( Object o )\n+        public boolean equals(Object o)\n         {\n-            if ( this == o )\n+            if (this == o)\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+            if (o == null || getClass() != o.getClass())\n             {\n                 return false;\n             }\n             InternalGraphState that = (InternalGraphState) o;\n-            return transactionId == that.transactionId && graphUuid.equals( that.graphUuid );\n+            return transactionId == that.transactionId && graphUuid.equals(that.graphUuid);\n         }\n \n         @Override\n         public int hashCode()\n         {\n-            return Objects.hash( graphUuid, transactionId );\n+            return Objects.hash(graphUuid, transactionId);\n         }\n \n         @Override\n@@ -218,7 +219,7 @@ public class FabricBookmark extends BookmarkMetadata implements Bookmark\n         private final UUID graphUuid;\n         private final List<RemoteBookmark> bookmarks;\n \n-        public ExternalGraphState( UUID graphUuid, List<RemoteBookmark> bookmarks )\n+        public ExternalGraphState(UUID graphUuid, List<RemoteBookmark> bookmarks)\n         {\n             this.graphUuid = graphUuid;\n             this.bookmarks = bookmarks;\n@@ -235,24 +236,24 @@ public class FabricBookmark extends BookmarkMetadata implements Bookmark\n         }\n \n         @Override\n-        public boolean equals( Object o )\n+        public boolean equals(Object o)\n         {\n-            if ( this == o )\n+            if (this == o)\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+            if (o == null || getClass() != o.getClass())\n             {\n                 return false;\n             }\n             ExternalGraphState that = (ExternalGraphState) o;\n-            return graphUuid.equals( that.graphUuid ) && bookmarks.equals( that.bookmarks );\n+            return graphUuid.equals(that.graphUuid) && bookmarks.equals(that.bookmarks);\n         }\n \n         @Override\n         public int hashCode()\n         {\n-            return Objects.hash( graphUuid, bookmarks );\n+            return Objects.hash(graphUuid, bookmarks);\n         }\n \n         @Override\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
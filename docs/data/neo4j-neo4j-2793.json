{
    "project_name": "neo4j-neo4j",
    "error_id": "2793",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "30",
                    "column": "89",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "92",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2793/IndexQueryConstraints.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2793/IndexQueryConstraints.java\nindex 1835624f1c8..c3c4008e583 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2793/IndexQueryConstraints.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2793/IndexQueryConstraints.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api;\n \n import java.util.OptionalLong;\n@@ -26,8 +27,8 @@ import org.neo4j.util.Preconditions;\n \n public class IndexQueryConstraints\n {\n-    private static final IndexQueryConstraints UNCONSTRAINED = new IndexQueryConstraints( IndexOrder.NONE, false, false, false, 0, 0 );\n-    private static final IndexQueryConstraints UNORDERED_VALUES = new IndexQueryConstraints( IndexOrder.NONE, true, false, false, 0, 0 );\n+    private static final IndexQueryConstraints UNCONSTRAINED = new IndexQueryConstraints(IndexOrder.NONE, false, false, false, 0, 0);\n+    private static final IndexQueryConstraints UNORDERED_VALUES = new IndexQueryConstraints(IndexOrder.NONE, true, false, false, 0, 0);\n \n     private final IndexOrder order;\n     private final boolean needsValues;\n@@ -36,7 +37,7 @@ public class IndexQueryConstraints\n     private final long skip;\n     private final long limit;\n \n-    private IndexQueryConstraints( IndexOrder order, boolean needsValues, boolean hasSkip, boolean hasLimit, long skip, long limit )\n+    private IndexQueryConstraints(IndexOrder order, boolean needsValues, boolean hasSkip, boolean hasLimit, long skip, long limit)\n     {\n         this.order = order;\n         this.needsValues = needsValues;\n@@ -56,34 +57,34 @@ public class IndexQueryConstraints\n         return UNORDERED_VALUES;\n     }\n \n-    public static IndexQueryConstraints unordered( boolean needsValues )\n+    public static IndexQueryConstraints unordered(boolean needsValues)\n     {\n         return needsValues ? unorderedValues() : unconstrained();\n     }\n \n-    public static IndexQueryConstraints constrained( IndexOrder order, boolean needsValues )\n+    public static IndexQueryConstraints constrained(IndexOrder order, boolean needsValues)\n     {\n-        return new IndexQueryConstraints( order, needsValues, false, false, 0, 0 );\n+        return new IndexQueryConstraints(order, needsValues, false, false, 0, 0);\n     }\n \n-    public IndexQueryConstraints skip( long skip )\n+    public IndexQueryConstraints skip(long skip)\n     {\n-        Preconditions.checkState( skip >= 0, \"Skip argument cannot be negative: %s.\", skip );\n-        if ( hasLimit )\n+        Preconditions.checkState(skip >= 0, \"Skip argument cannot be negative: %s.\", skip);\n+        if (hasLimit)\n         {\n-            Preconditions.requireNoLongAddOverflow( skip, limit, \"SKIP (%s) and LIMIT (%s) combined are too large; would overflow 64-bit signed integer.\" );\n+            Preconditions.requireNoLongAddOverflow(skip, limit, \"SKIP (%s) and LIMIT (%s) combined are too large; would overflow 64-bit signed integer.\");\n         }\n-        return new IndexQueryConstraints( order, needsValues, true, hasLimit, skip, limit );\n+        return new IndexQueryConstraints(order, needsValues, true, hasLimit, skip, limit);\n     }\n \n-    public IndexQueryConstraints limit( long limit )\n+    public IndexQueryConstraints limit(long limit)\n     {\n-        Preconditions.checkState( limit >= 0, \"Limit argument cannot be negative: %s.\", limit );\n-        if ( hasSkip )\n+        Preconditions.checkState(limit >= 0, \"Limit argument cannot be negative: %s.\", limit);\n+        if (hasSkip)\n         {\n-            Preconditions.requireNoLongAddOverflow( skip, limit, \"SKIP (%s) and LIMIT (%s) are too large; would overflow 64-bit signed integer.\" );\n+            Preconditions.requireNoLongAddOverflow(skip, limit, \"SKIP (%s) and LIMIT (%s) are too large; would overflow 64-bit signed integer.\");\n         }\n-        return new IndexQueryConstraints( order, needsValues, hasSkip, true, skip, limit );\n+        return new IndexQueryConstraints(order, needsValues, hasSkip, true, skip, limit);\n     }\n \n     public boolean isOrdered()\n@@ -103,11 +104,11 @@ public class IndexQueryConstraints\n \n     public OptionalLong skip()\n     {\n-        return hasSkip ? OptionalLong.of( skip ) : OptionalLong.empty();\n+        return hasSkip ? OptionalLong.of(skip) : OptionalLong.empty();\n     }\n \n     public OptionalLong limit()\n     {\n-        return hasLimit ? OptionalLong.of( limit ) : OptionalLong.empty();\n+        return hasLimit ? OptionalLong.of(limit) : OptionalLong.empty();\n     }\n }\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
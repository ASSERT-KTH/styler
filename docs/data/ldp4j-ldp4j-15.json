{
    "project_name": "ldp4j-ldp4j",
    "error_id": "15",
    "information": {
        "errors": [
            {
                "line": "34",
                "severity": "error",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "\npublic final class ClassUtils {\n\t\n\tprivate ClassUtils(){\n\t}\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/errored/1/15/ClassUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/styler/15/ClassUtils.java\nindex f3b0d62ef76..9d75230ff64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/errored/1/15/ClassUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/styler/15/ClassUtils.java\n@@ -31,7 +31,7 @@ import java.util.Collection;\n import java.util.Iterator;\n \n public final class ClassUtils {\n-\t\n+\n \tprivate ClassUtils(){\n \t}\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "49",
                    "column": "72",
                    "severity": "error",
                    "message": "';' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/errored/1/15/ClassUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/intellij/15/ClassUtils.java\nindex f3b0d62ef76..6518647553c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/errored/1/15/ClassUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/intellij/15/ClassUtils.java\n@@ -1,29 +1,30 @@\n /**\n  * #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#\n- *   This file is part of the LDP4j Project:\n- *     http://www.ldp4j.org/\n- *\n- *   Center for Open Middleware\n- *     http://www.centeropenmiddleware.com/\n+ * This file is part of the LDP4j Project:\n+ * http://www.ldp4j.org/\n+ * <p>\n+ * Center for Open Middleware\n+ * http://www.centeropenmiddleware.com/\n  * #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#\n- *   Copyright (C) 2014-2016 Center for Open Middleware.\n+ * Copyright (C) 2014-2016 Center for Open Middleware.\n  * #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#\n- *   Licensed under the Apache License, Version 2.0 (the \"License\");\n- *   you may not use this file except in compliance with the License.\n- *   You may obtain a copy of the License at\n- *\n- *             http://www.apache.org/licenses/LICENSE-2.0\n- *\n- *   Unless required by applicable law or agreed to in writing, software\n- *   distributed under the License is distributed on an \"AS IS\" BASIS,\n- *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- *   See the License for the specific language governing permissions and\n- *   limitations under the License.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n  * #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#\n- *   Artifact    : org.ldp4j.commons.rmf:rmf-bean:0.2.2\n- *   Bundle      : rmf-bean-0.2.2.jar\n+ * Artifact    : org.ldp4j.commons.rmf:rmf-bean:0.2.2\n+ * Bundle      : rmf-bean-0.2.2.jar\n  * #-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=#\n  */\n+\n package org.ldp4j.rdf.bean.util;\n \n import java.util.Arrays;\n@@ -31,27 +32,27 @@ import java.util.Collection;\n import java.util.Iterator;\n \n public final class ClassUtils {\n-\t\n-\tprivate ClassUtils(){\n-\t}\n-\n-\tpublic static String toString(Class<?>... classes) {\n-\t\treturn toString(Arrays.asList(classes));\n-\t}\n-\n-\tpublic static String toString(Collection<Class<?>> classes) {\n-\t\treturn concat(classes, \", \");\n-\t}\n-\n-\tpublic static String concat(Collection<Class<?>> classes, String separator) {\n-\t\tStringBuilder builder=new StringBuilder();\n-\t\tfor(Iterator<Class<?>> it=classes.iterator();it.hasNext();) {\n-\t\t\tbuilder.append(it.next().getCanonicalName());\n-\t\t\tif(it.hasNext()) {\n-\t\t\t\tbuilder.append(separator);\n-\t\t\t}\n-\t\t}\n-\t\treturn builder.toString();\n-\t}\n+\n+    private ClassUtils() {\n+    }\n+\n+    public static String toString(Class<?>... classes) {\n+        return toString(Arrays.asList(classes));\n+    }\n+\n+    public static String toString(Collection<Class<?>> classes) {\n+        return concat(classes, \", \");\n+    }\n+\n+    public static String concat(Collection<Class<?>> classes, String separator) {\n+        StringBuilder builder = new StringBuilder();\n+        for (Iterator<Class<?>> it = classes.iterator(); it.hasNext(); ) {\n+            builder.append(it.next().getCanonicalName());\n+            if (it.hasNext()) {\n+                builder.append(separator);\n+            }\n+        }\n+        return builder.toString();\n+    }\n \n }\n\\ No newline at end of file\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/errored/1/15/ClassUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/codebuff/15/ClassUtils.java\nindex f3b0d62ef76..5674e634427 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/errored/1/15/ClassUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/codebuff/15/ClassUtils.java\n@@ -31,27 +31,27 @@ import java.util.Collection;\n import java.util.Iterator;\n \n public final class ClassUtils {\n-\t\n-\tprivate ClassUtils(){\n-\t}\n \n-\tpublic static String toString(Class<?>... classes) {\n-\t\treturn toString(Arrays.asList(classes));\n-\t}\n+ private ClassUtils() {\n+ }\n \n-\tpublic static String toString(Collection<Class<?>> classes) {\n-\t\treturn concat(classes, \", \");\n-\t}\n+ public static String toString(Class<?>... classes) {\n+  return toString(Arrays.asList(classes));\n+ }\n \n-\tpublic static String concat(Collection<Class<?>> classes, String separator) {\n-\t\tStringBuilder builder=new StringBuilder();\n-\t\tfor(Iterator<Class<?>> it=classes.iterator();it.hasNext();) {\n-\t\t\tbuilder.append(it.next().getCanonicalName());\n-\t\t\tif(it.hasNext()) {\n-\t\t\t\tbuilder.append(separator);\n-\t\t\t}\n-\t\t}\n-\t\treturn builder.toString();\n-\t}\n+ public static String toString(Collection<Class<?>> classes) {\n+  return concat(classes,\", \");\n+ }\n+\n+ public static String concat(Collection<Class<?>> classes, String separator) {\n+  StringBuilder builder= new StringBuilder();\n+  for(Iterator<Class<?>> it= classes.iterator();it.hasNext();) {\n+   builder.append(it.next().getCanonicalName());\n+   if(it.hasNext()) {\n+    builder.append(separator);\n+   }\n+  }\n+  return builder.toString();\n+ }\n \n }\n\\ No newline at end of file\n",
            "diff_size": 23
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/errored/1/15/ClassUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/styler_random/15/ClassUtils.java\nindex f3b0d62ef76..9d75230ff64 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/errored/1/15/ClassUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/styler_random/15/ClassUtils.java\n@@ -31,7 +31,7 @@ import java.util.Collection;\n import java.util.Iterator;\n \n public final class ClassUtils {\n-\t\n+\n \tprivate ClassUtils(){\n \t}\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/errored/1/15/ClassUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/styler_three_grams/15/ClassUtils.java\nindex f3b0d62ef76..6fd6c501193 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/errored/1/15/ClassUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ldp4j-ldp4j/styler_three_grams/15/ClassUtils.java\n@@ -30,8 +30,8 @@ import java.util.Arrays;\n import java.util.Collection;\n import java.util.Iterator;\n \n-public final class ClassUtils {\n-\t\n+public final class ClassUtils{\n+\n \tprivate ClassUtils(){\n \t}\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize"
    ]
}
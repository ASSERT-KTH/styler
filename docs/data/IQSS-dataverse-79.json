{
    "project_name": "IQSS-dataverse",
    "error_id": "79",
    "information": {
        "errors": [
            {
                "line": "15",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": " */\npublic class JsfHelper {\n\tprivate static final Logger logger = Logger.getLogger(JsfHelper.class.getName());\n\t\n\tpublic static final JsfHelper JH = new JsfHelper();\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "16",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/79/JsfHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/79/JsfHelper.java\nindex 5b87b18573b..9233e296dde 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/79/JsfHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/79/JsfHelper.java\n@@ -12,7 +12,7 @@ import javax.faces.context.FacesContext;\n  * @author michael\n  */\n public class JsfHelper {\n-\tprivate static final Logger logger = Logger.getLogger(JsfHelper.class.getName());\n+private static final Logger logger = Logger.getLogger(JsfHelper.class.getName());\n \t\n \tpublic static final JsfHelper JH = new JsfHelper();\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/79/JsfHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/79/JsfHelper.java\nindex 5b87b18573b..e6b2b1794b1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/79/JsfHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/79/JsfHelper.java\n@@ -9,44 +9,53 @@ import javax.faces.context.FacesContext;\n \n /**\n  * Utility class for common JSF tasks.\n+ *\n  * @author michael\n  */\n public class JsfHelper {\n-\tprivate static final Logger logger = Logger.getLogger(JsfHelper.class.getName());\n-\t\n-\tpublic static final JsfHelper JH = new JsfHelper();\n-\n-        public static void addSuccessMessage(String message) {\n-              FacesContext.getCurrentInstance().getExternalContext().getFlash().put(\"successMsg\", message);\n-      \n-        } \n-        public static void addFlashMessage(String message) {\n-            addSuccessMessage(message);\n-        }\n-        public static void addErrorMessage(String message) {\n-              FacesContext.getCurrentInstance().getExternalContext().getFlash().put(\"errorMsg\", message);      \n-        } \n-        public static void addInfoMessage(String message) {\n-              FacesContext.getCurrentInstance().getExternalContext().getFlash().put(\"infoMsg\", message);      \n-        } \n-        public static void addWarningMessage(String message) {\n-              FacesContext.getCurrentInstance().getExternalContext().getFlash().put(\"warningMsg\", message);      \n-        } \n-\tpublic void addMessage( FacesMessage.Severity s, String summary, String details ) {\n-\t\tFacesContext.getCurrentInstance().addMessage(null, new FacesMessage(s, summary, details));\n-\t}\n-\tpublic void addMessage( FacesMessage.Severity s, String summary ) {\n-\t\taddMessage(s, summary, \"\");\n-\t}\n-\t\n-\tpublic <T extends Enum<T>> T enumValue( String param, Class<T> enmClass, T defaultValue ) {\n-\t\tif ( param == null ) return defaultValue;\n-\t\tparam = param.trim();\n-\t\ttry {\n-\t\t\treturn Enum.valueOf(enmClass, param);\n-\t\t} catch ( IllegalArgumentException iar ) {\n-\t\t\tlogger.log(Level.WARNING, \"Illegal value for enum {0}: ''{1}''\", new Object[]{enmClass.getName(), param});\n-\t\t\treturn defaultValue;\n-\t\t}\n-\t}\n+  private static final Logger logger = Logger.getLogger(JsfHelper.class.getName());\n+\n+  public static final JsfHelper JH = new JsfHelper();\n+\n+  public static void addSuccessMessage(String message) {\n+    FacesContext.getCurrentInstance().getExternalContext().getFlash().put(\"successMsg\", message);\n+\n+  }\n+\n+  public static void addFlashMessage(String message) {\n+    addSuccessMessage(message);\n+  }\n+\n+  public static void addErrorMessage(String message) {\n+    FacesContext.getCurrentInstance().getExternalContext().getFlash().put(\"errorMsg\", message);\n+  }\n+\n+  public static void addInfoMessage(String message) {\n+    FacesContext.getCurrentInstance().getExternalContext().getFlash().put(\"infoMsg\", message);\n+  }\n+\n+  public static void addWarningMessage(String message) {\n+    FacesContext.getCurrentInstance().getExternalContext().getFlash().put(\"warningMsg\", message);\n+  }\n+\n+  public void addMessage(FacesMessage.Severity s, String summary, String details) {\n+    FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(s, summary, details));\n+  }\n+\n+  public void addMessage(FacesMessage.Severity s, String summary) {\n+    addMessage(s, summary, \"\");\n+  }\n+\n+  public <T extends Enum<T>> T enumValue(String param, Class<T> enmClass, T defaultValue) {\n+    if (param == null) {\n+      return defaultValue;\n+    }\n+    param = param.trim();\n+    try {\n+      return Enum.valueOf(enmClass, param);\n+    } catch (IllegalArgumentException iar) {\n+      logger.log(Level.WARNING, \"Illegal value for enum {0}: ''{1}''\", new Object[] {enmClass.getName(), param});\n+      return defaultValue;\n+    }\n+  }\n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/79/JsfHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/79/JsfHelper.java\nindex 5b87b18573b..e36b2d41818 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/79/JsfHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/79/JsfHelper.java\n@@ -11,42 +11,50 @@ import javax.faces.context.FacesContext;\n  * Utility class for common JSF tasks.\n  * @author michael\n  */\n+\n+\n public class JsfHelper {\n-\tprivate static final Logger logger = Logger.getLogger(JsfHelper.class.getName());\n-\t\n-\tpublic static final JsfHelper JH = new JsfHelper();\n-\n-        public static void addSuccessMessage(String message) {\n-              FacesContext.getCurrentInstance().getExternalContext().getFlash().put(\"successMsg\", message);\n-      \n-        } \n-        public static void addFlashMessage(String message) {\n-            addSuccessMessage(message);\n+\n+    private static final Logger logger = Logger.getLogger(JsfHelper.class.getName());\n+\n+    public static final JsfHelper JH = new JsfHelper();\n+\n+    public static void addSuccessMessage(String message) {\n+        FacesContext.getCurrentInstance().getExternalContext().getFlash().put(\"successMsg\", message);\n+    }\n+\n+    public static void addFlashMessage(String message) {\n+        addSuccessMessage(message);\n+    }\n+\n+    public static void addErrorMessage(String message) {\n+        FacesContext.getCurrentInstance().getExternalContext().getFlash().put(\"errorMsg\", message);\n+    }\n+\n+    public static void addInfoMessage(String message) {\n+        FacesContext.getCurrentInstance().getExternalContext().getFlash().put(\"infoMsg\", message);\n+    }\n+\n+    public static void addWarningMessage(String message) {\n+        FacesContext.getCurrentInstance().getExternalContext().getFlash().put(\"warningMsg\", message);\n+    }\n+\n+    public void addMessage(FacesMessage.Severity s, String summary, String details) {\n+        FacesContext.getCurrentInstance().addMessage(null, new FacesMessage(s, summary, details));\n+    }\n+\n+    public void addMessage(FacesMessage.Severity s, String summary) {\n+        addMessage(s, summary, \"\");\n+    }\n+\n+    public <T extends Enum<T>> T enumValue(String param, Class<T> enmClass, T defaultValue) {\n+        if (param == null) return defaultValue;\n+        param = param.trim();\n+        try {\n+            return Enum.valueOf(enmClass, param);\n+        } catch (IllegalArgumentException iar) {\n+            logger.log(Level.WARNING, \"Illegal value for enum {0}: ''{1}''\", new Object[]{enmClass.getName(), param});\n+            return defaultValue;\n         }\n-        public static void addErrorMessage(String message) {\n-              FacesContext.getCurrentInstance().getExternalContext().getFlash().put(\"errorMsg\", message);      \n-        } \n-        public static void addInfoMessage(String message) {\n-              FacesContext.getCurrentInstance().getExternalContext().getFlash().put(\"infoMsg\", message);      \n-        } \n-        public static void addWarningMessage(String message) {\n-              FacesContext.getCurrentInstance().getExternalContext().getFlash().put(\"warningMsg\", message);      \n-        } \n-\tpublic void addMessage( FacesMessage.Severity s, String summary, String details ) {\n-\t\tFacesContext.getCurrentInstance().addMessage(null, new FacesMessage(s, summary, details));\n-\t}\n-\tpublic void addMessage( FacesMessage.Severity s, String summary ) {\n-\t\taddMessage(s, summary, \"\");\n-\t}\n-\t\n-\tpublic <T extends Enum<T>> T enumValue( String param, Class<T> enmClass, T defaultValue ) {\n-\t\tif ( param == null ) return defaultValue;\n-\t\tparam = param.trim();\n-\t\ttry {\n-\t\t\treturn Enum.valueOf(enmClass, param);\n-\t\t} catch ( IllegalArgumentException iar ) {\n-\t\t\tlogger.log(Level.WARNING, \"Illegal value for enum {0}: ''{1}''\", new Object[]{enmClass.getName(), param});\n-\t\t\treturn defaultValue;\n-\t\t}\n-\t}\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 70
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "16",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/79/JsfHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/79/JsfHelper.java\nindex 5b87b18573b..9233e296dde 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/79/JsfHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/79/JsfHelper.java\n@@ -12,7 +12,7 @@ import javax.faces.context.FacesContext;\n  * @author michael\n  */\n public class JsfHelper {\n-\tprivate static final Logger logger = Logger.getLogger(JsfHelper.class.getName());\n+private static final Logger logger = Logger.getLogger(JsfHelper.class.getName());\n \t\n \tpublic static final JsfHelper JH = new JsfHelper();\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "16",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/79/JsfHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/79/JsfHelper.java\nindex 5b87b18573b..d68c7461169 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/79/JsfHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/79/JsfHelper.java\n@@ -12,7 +12,7 @@ import javax.faces.context.FacesContext;\n  * @author michael\n  */\n public class JsfHelper {\n-\tprivate static final Logger logger = Logger.getLogger(JsfHelper.class.getName());\n+    private static final Logger logger = Logger.getLogger(JsfHelper.class.getName());\n \t\n \tpublic static final JsfHelper JH = new JsfHelper();\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
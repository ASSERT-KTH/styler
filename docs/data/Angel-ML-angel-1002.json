{
    "project_name": "Angel-ML-angel",
    "error_id": "1002",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1002/GetRowParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1002/GetRowParam.java\nindex e6b32b28ec2..2d6281f05ea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1002/GetRowParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1002/GetRowParam.java\n@@ -25,7 +25,7 @@ import java.util.List;\n /**\n  * The Get row parameter.\n  */\n-public class GetRowParam implements ParamSplit{\n+public class GetRowParam implements ParamSplit {\n   /**\n    * The Matrix id.\n    */\n@@ -51,7 +51,7 @@ public class GetRowParam implements ParamSplit{\n    * @param clock      the clock\n    * @param bypassMode the bypass mode\n    */\n-  public GetRowParam(int matrixId, int rowIndex, int clock, boolean bypassMode){\n+  public GetRowParam(int matrixId, int rowIndex, int clock, boolean bypassMode) {\n     this.matrixId = matrixId;\n     this.rowIndex = rowIndex;\n     this.clock = clock;\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1002/GetRowParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1002/GetRowParam.java\nindex e6b32b28ec2..068d05b0e95 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1002/GetRowParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1002/GetRowParam.java\n@@ -25,7 +25,7 @@ import java.util.List;\n /**\n  * The Get row parameter.\n  */\n-public class GetRowParam implements ParamSplit{\n+public class GetRowParam implements ParamSplit {\n   /**\n    * The Matrix id.\n    */\n@@ -51,7 +51,7 @@ public class GetRowParam implements ParamSplit{\n    * @param clock      the clock\n    * @param bypassMode the bypass mode\n    */\n-  public GetRowParam(int matrixId, int rowIndex, int clock, boolean bypassMode){\n+  public GetRowParam(int matrixId, int rowIndex, int clock, boolean bypassMode) {\n     this.matrixId = matrixId;\n     this.rowIndex = rowIndex;\n     this.clock = clock;\n@@ -117,4 +117,4 @@ public class GetRowParam implements ParamSplit{\n   public void setClock(int clock) {\n     this.clock = clock;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1002/GetRowParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1002/GetRowParam.java\nindex e6b32b28ec2..09856ec5e19 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1002/GetRowParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1002/GetRowParam.java\n@@ -18,29 +18,33 @@ package com.tencent.angel.ml.matrix.udf.getrow;\n \n import com.tencent.angel.PartitionKey;\n import com.tencent.angel.psagent.PSAgentContext;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n /**\n  * The Get row parameter.\n  */\n-public class GetRowParam implements ParamSplit{\n+\n+public class GetRowParam implements ParamSplit {\n   /**\n    * The Matrix id.\n    */\n+\n   protected final int matrixId;\n   /**\n    * The Row index.\n    */\n+\n   protected final int rowIndex;\n   /**\n    * The Clock.\n    */\n+\n   protected int clock;\n   /**\n    * The Bypass mode.\n    */\n+\n   protected final boolean bypassMode;\n \n   /**\n@@ -51,7 +55,8 @@ public class GetRowParam implements ParamSplit{\n    * @param clock      the clock\n    * @param bypassMode the bypass mode\n    */\n-  public GetRowParam(int matrixId, int rowIndex, int clock, boolean bypassMode){\n+\n+  public GetRowParam(int matrixId, int rowIndex, int clock, boolean bypassMode) {\n     this.matrixId = matrixId;\n     this.rowIndex = rowIndex;\n     this.clock = clock;\n@@ -63,6 +68,7 @@ public class GetRowParam implements ParamSplit{\n    *\n    * @return the matrix id\n    */\n+\n   public int getMatrixId() {\n     return matrixId;\n   }\n@@ -72,6 +78,7 @@ public class GetRowParam implements ParamSplit{\n    *\n    * @return the clock\n    */\n+\n   public int getClock() {\n     return clock;\n   }\n@@ -81,6 +88,7 @@ public class GetRowParam implements ParamSplit{\n    *\n    * @return the boolean\n    */\n+\n   public boolean isBypassMode() {\n     return bypassMode;\n   }\n@@ -90,22 +98,19 @@ public class GetRowParam implements ParamSplit{\n    *\n    * @return the row index\n    */\n+\n   public int getRowIndex() {\n     return rowIndex;\n   }\n \n   @Override\n   public List<PartitionGetRowParam> split() {\n-    List<PartitionKey> parts =\n-        PSAgentContext.get().getMatrixPartitionRouter().getPartitionKeyList(matrixId);\n+    List<PartitionKey> parts = PSAgentContext.get().getMatrixPartitionRouter().getPartitionKeyList(matrixId);\n     int size = parts.size();\n-\n     List<PartitionGetRowParam> partParams = new ArrayList<PartitionGetRowParam>(size);\n-\n     for (int i = 0; i < size; i++) {\n       partParams.add(new PartitionGetRowParam(matrixId, parts.get(i), rowIndex, clock, false));\n     }\n-\n     return partParams;\n   }\n \n@@ -114,7 +119,9 @@ public class GetRowParam implements ParamSplit{\n    *\n    * @param clock the clock\n    */\n+\n   public void setClock(int clock) {\n     this.clock = clock;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
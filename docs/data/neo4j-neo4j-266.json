{
    "project_name": "neo4j-neo4j",
    "error_id": "266",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "129",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "135",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/266/GroupingRecoveryCleanupWorkCollector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/266/GroupingRecoveryCleanupWorkCollector.java\nindex 33fa7875043..7dcbaf20b35 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/266/GroupingRecoveryCleanupWorkCollector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/266/GroupingRecoveryCleanupWorkCollector.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.util.concurrent.BlockingQueue;\n@@ -46,12 +47,12 @@ public class GroupingRecoveryCleanupWorkCollector extends RecoveryCleanupWorkCol\n \n     /**\n      * @param jobScheduler {@link JobScheduler} to queue {@link CleanupJob} into.\n-     * @param group {@link Group} to which all cleanup jobs should be scheduled.\n-     * @param workerGroup {@link Group} to which all sub-tasks of cleanup jobs should be scheduled.\n+     * @param group        {@link Group} to which all cleanup jobs should be scheduled.\n+     * @param workerGroup  {@link Group} to which all sub-tasks of cleanup jobs should be scheduled.\n      * @param databaseName name of the database that is being recovered. This is currently used only for monitoring\n-     * purposes to link this unit of work with a database it belongs to.\n+     *                     purposes to link this unit of work with a database it belongs to.\n      */\n-    public GroupingRecoveryCleanupWorkCollector( JobScheduler jobScheduler, Group group, Group workerGroup, String databaseName )\n+    public GroupingRecoveryCleanupWorkCollector(JobScheduler jobScheduler, Group group, Group workerGroup, String databaseName)\n     {\n         this.jobScheduler = jobScheduler;\n         this.group = group;\n@@ -66,16 +67,16 @@ public class GroupingRecoveryCleanupWorkCollector extends RecoveryCleanupWorkCol\n     }\n \n     @Override\n-    public void add( CleanupJob job )\n+    public void add(CleanupJob job)\n     {\n-        Preconditions.checkState( moreJobsAllowed, \"Index clean jobs can't be added after collector start.\" );\n-        jobs.add( job );\n+        Preconditions.checkState(moreJobsAllowed, \"Index clean jobs can't be added after collector start.\");\n+        jobs.add(job);\n     }\n \n     @Override\n     public void start()\n     {\n-        Preconditions.checkState( moreJobsAllowed, \"Already started\" );\n+        Preconditions.checkState(moreJobsAllowed, \"Already started\");\n         moreJobsAllowed = false;\n     }\n \n@@ -83,7 +84,7 @@ public class GroupingRecoveryCleanupWorkCollector extends RecoveryCleanupWorkCol\n     public void shutdown() throws ExecutionException, InterruptedException\n     {\n         moreJobsAllowed = false;\n-        if ( handle != null )\n+        if (handle != null)\n         {\n             // Also set the started flag which acts as a signal to exit the scheduled job on empty queue,\n             // this is of course a special case where perhaps not start() gets called, i.e. if something fails\n@@ -91,7 +92,7 @@ public class GroupingRecoveryCleanupWorkCollector extends RecoveryCleanupWorkCol\n             handle.waitTermination();\n         }\n         CleanupJob job;\n-        while ( (job = jobs.poll()) != null )\n+        while ((job = jobs.poll()) != null)\n         {\n             job.close();\n         }\n@@ -99,7 +100,7 @@ public class GroupingRecoveryCleanupWorkCollector extends RecoveryCleanupWorkCol\n \n     private void scheduleJobs()\n     {\n-        handle = jobScheduler.schedule( group, JobMonitoringParams.systemJob( databaseName, \"Index recovery clean up\" ), allJobs() );\n+        handle = jobScheduler.schedule(group, JobMonitoringParams.systemJob(databaseName, \"Index recovery clean up\"), allJobs());\n     }\n \n     private Runnable allJobs()\n@@ -111,36 +112,34 @@ public class GroupingRecoveryCleanupWorkCollector extends RecoveryCleanupWorkCol\n             {\n                 try\n                 {\n-                    job = jobs.poll( 100, TimeUnit.MILLISECONDS );\n-                    if ( job != null )\n+                    job = jobs.poll(100, TimeUnit.MILLISECONDS);\n+                    if (job != null)\n                     {\n-                        job.run( new CleanupJob.Executor()\n+                        job.run(new CleanupJob.Executor()\n                         {\n                             @Override\n-                            public <T> CleanupJob.JobResult<T> submit( String jobDescription, Callable<T> job )\n+                            public <T> CleanupJob.JobResult<T> submit(String jobDescription, Callable<T> job)\n                             {\n-                                var jobMonitoringParams = JobMonitoringParams.systemJob( databaseName, jobDescription );\n-                                var jobHandle = jobScheduler.schedule( workerGroup, jobMonitoringParams, job );\n+                                var jobMonitoringParams = JobMonitoringParams.systemJob(databaseName, jobDescription);\n+                                var jobHandle = jobScheduler.schedule(workerGroup, jobMonitoringParams, job);\n                                 return jobHandle::get;\n                             }\n-                        } );\n+                        });\n                     }\n-                }\n-                catch ( Exception e )\n+                } catch (Exception e)\n                 {\n                     // There's no audience for these exceptions. The jobs themselves know if they've failed and communicates\n                     // that to its tree. The scheduled job is just a vessel for running these cleanup jobs.\n-                }\n-                finally\n+                } finally\n                 {\n-                    if ( job != null )\n+                    if (job != null)\n                     {\n                         job.close();\n                     }\n                 }\n             }\n             // Even if there are no jobs in the queue then continue looping until we go to started state\n-            while ( !jobs.isEmpty() || moreJobsAllowed );\n+            while (!jobs.isEmpty() || moreJobsAllowed);\n         };\n     }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "intuit-Tank",
    "error_id": "35",
    "information": {
        "errors": [
            {
                "line": "22",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 124).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import javax.xml.bind.annotation.XmlType;\n\n@XmlType(name = \"logic\", propOrder = { \"name\", \"script\", \"scriptGroupName\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n@XmlAccessorType(XmlAccessType.FIELD)\n@XmlRootElement\npublic class LogicStep extends TestStep implements FailableStep {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/35/LogicStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/35/LogicStep.java\nindex c22ec58f842..0ea2119eecc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/35/LogicStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/35/LogicStep.java\n@@ -17,9 +17,7 @@ import javax.xml.bind.annotation.XmlAccessType;\n import javax.xml.bind.annotation.XmlAccessorType;\n import javax.xml.bind.annotation.XmlAttribute;\n import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlType(name = \"logic\", propOrder = { \"name\", \"script\", \"scriptGroupName\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+import javax.xml.bind.annotation.XmlType;@XmlType(name = \"logic\", propOrder = { \"name\", \"script\", \"scriptGroupName\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n @XmlRootElement\n public class LogicStep extends TestStep implements FailableStep {\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/35/LogicStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/35/LogicStep.java\nindex c22ec58f842..31b64e51755 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/35/LogicStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/35/LogicStep.java\n@@ -19,93 +19,90 @@ import javax.xml.bind.annotation.XmlAttribute;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(name = \"logic\", propOrder = { \"name\", \"script\", \"scriptGroupName\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+@XmlType(name = \"logic\", propOrder = {\"name\", \"script\",\n+  \"scriptGroupName\"}, namespace = HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n @XmlRootElement\n public class LogicStep extends TestStep implements FailableStep {\n \n-    @XmlAttribute\n-    private String name = \"\";\n-\n-    @XmlAttribute\n-    private String script = \"\";\n-\n-    @XmlAttribute\n-    private String scriptGroupName = \"\";\n-\n-    private transient String onFail = \"\";\n-\n-    /**\n-     * @return the name\n-     */\n-    public String getName() {\n-        return name;\n-    }\n-\n-    /**\n-     * @param name\n-     *            the name to set\n-     */\n-    public void setName(String name) {\n-        this.name = name;\n-    }\n-\n-    /**\n-     * @return the script\n-     */\n-    public String getScript() {\n-        return script;\n-    }\n-\n-    /**\n-     * @return the scriptGroupName\n-     */\n-    public String getScriptGroupName() {\n-        return scriptGroupName;\n-    }\n-\n-    /**\n-     * @param scriptGroupName\n-     *            the scriptGroupName to set\n-     */\n-    public void setScriptGroupName(String scriptGroupName) {\n-        this.scriptGroupName = scriptGroupName;\n-    }\n-\n-    /**\n-     * @return the onFail\n-     */\n-    public String getOnFail() {\n-        return onFail;\n-    }\n-\n-    /**\n-     * @param onFail\n-     *            the onFail to set\n-     */\n-    public void setOnFail(String onFail) {\n-        this.onFail = onFail;\n-    }\n-\n-    /**\n-     * @param script\n-     *            the script to set\n-     */\n-    public void setScript(String script) {\n-        this.script = script;\n-    }\n-\n-    @Override\n-    public String getInfo() {\n-        return new StringBuilder().append(\"Logic Step: \").append(name).toString();\n-    }\n-\n-    /**\n-     * @{inheritDoc\n-     */\n-    @Override\n-    public String toString() {\n-        return getClass().getSimpleName() + \" : \" + name;\n-    }\n+  @XmlAttribute\n+  private String name = \"\";\n+\n+  @XmlAttribute\n+  private String script = \"\";\n+\n+  @XmlAttribute\n+  private String scriptGroupName = \"\";\n+\n+  private transient String onFail = \"\";\n+\n+  /**\n+   * @return the name\n+   */\n+  public String getName() {\n+    return name;\n+  }\n+\n+  /**\n+   * @param name the name to set\n+   */\n+  public void setName(String name) {\n+    this.name = name;\n+  }\n+\n+  /**\n+   * @return the script\n+   */\n+  public String getScript() {\n+    return script;\n+  }\n+\n+  /**\n+   * @return the scriptGroupName\n+   */\n+  public String getScriptGroupName() {\n+    return scriptGroupName;\n+  }\n+\n+  /**\n+   * @param scriptGroupName the scriptGroupName to set\n+   */\n+  public void setScriptGroupName(String scriptGroupName) {\n+    this.scriptGroupName = scriptGroupName;\n+  }\n+\n+  /**\n+   * @return the onFail\n+   */\n+  public String getOnFail() {\n+    return onFail;\n+  }\n+\n+  /**\n+   * @param onFail the onFail to set\n+   */\n+  public void setOnFail(String onFail) {\n+    this.onFail = onFail;\n+  }\n+\n+  /**\n+   * @param script the script to set\n+   */\n+  public void setScript(String script) {\n+    this.script = script;\n+  }\n+\n+  @Override\n+  public String getInfo() {\n+    return new StringBuilder().append(\"Logic Step: \").append(name).toString();\n+  }\n+\n+  /**\n+   * @{inheritDoc\n+   */\n+  @Override\n+  public String toString() {\n+    return getClass().getSimpleName() + \" : \" + name;\n+  }\n \n }\n",
            "diff_size": 85
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/35/LogicStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/35/LogicStep.java\nindex c22ec58f842..1170e047e48 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/35/LogicStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/35/LogicStep.java\n@@ -108,4 +108,4 @@ public class LogicStep extends TestStep implements FailableStep {\n         return getClass().getSimpleName() + \" : \" + name;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/35/LogicStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/35/LogicStep.java\nindex c22ec58f842..023054db2de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/35/LogicStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/35/LogicStep.java\n@@ -13,6 +13,8 @@ package com.intuit.tank.harness.data;\n  * #L%\n  */\n \n+\n+\n import javax.xml.bind.annotation.XmlAccessType;\n import javax.xml.bind.annotation.XmlAccessorType;\n import javax.xml.bind.annotation.XmlAttribute;\n@@ -23,7 +25,6 @@ import javax.xml.bind.annotation.XmlType;\n @XmlAccessorType(XmlAccessType.FIELD)\n @XmlRootElement\n public class LogicStep extends TestStep implements FailableStep {\n-\n     @XmlAttribute\n     private String name = \"\";\n \n@@ -32,12 +33,13 @@ public class LogicStep extends TestStep implements FailableStep {\n \n     @XmlAttribute\n     private String scriptGroupName = \"\";\n-\n     private transient String onFail = \"\";\n \n     /**\n      * @return the name\n      */\n+\n+\n     public String getName() {\n         return name;\n     }\n@@ -46,6 +48,8 @@ public class LogicStep extends TestStep implements FailableStep {\n      * @param name\n      *            the name to set\n      */\n+\n+\n     public void setName(String name) {\n         this.name = name;\n     }\n@@ -53,6 +57,8 @@ public class LogicStep extends TestStep implements FailableStep {\n     /**\n      * @return the script\n      */\n+\n+\n     public String getScript() {\n         return script;\n     }\n@@ -60,6 +66,8 @@ public class LogicStep extends TestStep implements FailableStep {\n     /**\n      * @return the scriptGroupName\n      */\n+\n+\n     public String getScriptGroupName() {\n         return scriptGroupName;\n     }\n@@ -68,6 +76,8 @@ public class LogicStep extends TestStep implements FailableStep {\n      * @param scriptGroupName\n      *            the scriptGroupName to set\n      */\n+\n+\n     public void setScriptGroupName(String scriptGroupName) {\n         this.scriptGroupName = scriptGroupName;\n     }\n@@ -75,6 +85,8 @@ public class LogicStep extends TestStep implements FailableStep {\n     /**\n      * @return the onFail\n      */\n+\n+\n     public String getOnFail() {\n         return onFail;\n     }\n@@ -83,6 +95,8 @@ public class LogicStep extends TestStep implements FailableStep {\n      * @param onFail\n      *            the onFail to set\n      */\n+\n+\n     public void setOnFail(String onFail) {\n         this.onFail = onFail;\n     }\n@@ -91,6 +105,8 @@ public class LogicStep extends TestStep implements FailableStep {\n      * @param script\n      *            the script to set\n      */\n+\n+\n     public void setScript(String script) {\n         this.script = script;\n     }\n@@ -103,9 +119,10 @@ public class LogicStep extends TestStep implements FailableStep {\n     /**\n      * @{inheritDoc\n      */\n+\n     @Override\n     public String toString() {\n         return getClass().getSimpleName() + \" : \" + name;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "22",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "22",
                    "column": "46",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/35/LogicStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/35/LogicStep.java\nindex c22ec58f842..51d3ea42f50 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/35/LogicStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/35/LogicStep.java\n@@ -19,7 +19,7 @@ import javax.xml.bind.annotation.XmlAttribute;\n import javax.xml.bind.annotation.XmlRootElement;\n import javax.xml.bind.annotation.XmlType;\n \n-@XmlType(name = \"logic\", propOrder = { \"name\", \"script\", \"scriptGroupName\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+@XmlType(name = \"logic\", propOrder = {\"name\" , \"script\", \"scriptGroupName\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n @XmlRootElement\n public class LogicStep extends TestStep implements FailableStep {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/35/LogicStep.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/35/LogicStep.java\nindex c22ec58f842..0ea2119eecc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/35/LogicStep.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/35/LogicStep.java\n@@ -17,9 +17,7 @@ import javax.xml.bind.annotation.XmlAccessType;\n import javax.xml.bind.annotation.XmlAccessorType;\n import javax.xml.bind.annotation.XmlAttribute;\n import javax.xml.bind.annotation.XmlRootElement;\n-import javax.xml.bind.annotation.XmlType;\n-\n-@XmlType(name = \"logic\", propOrder = { \"name\", \"script\", \"scriptGroupName\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n+import javax.xml.bind.annotation.XmlType;@XmlType(name = \"logic\", propOrder = { \"name\", \"script\", \"scriptGroupName\" }, namespace = HarnessDataNamespace.NAMESPACE_V1)\n @XmlAccessorType(XmlAccessType.FIELD)\n @XmlRootElement\n public class LogicStep extends TestStep implements FailableStep {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
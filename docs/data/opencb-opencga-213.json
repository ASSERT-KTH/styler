{
    "project_name": "opencb-opencga",
    "error_id": "213",
    "information": {
        "errors": [
            {
                "line": "68",
                "column": "16",
                "severity": "error",
                "message": "'catch' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "        try {\n            storageManager.exportData(tpedFile.getAbsolutePath(), TPED, null, query, QueryOptions.empty(), token);\n        } catch(CatalogException | IOException | StorageEngineException e) {\n            throw new ToolException(e);\n        }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/213/GeneticChecksUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler/213/GeneticChecksUtils.java\nindex 9beb1525188..774f10e0945 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/213/GeneticChecksUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler/213/GeneticChecksUtils.java\n@@ -65,7 +65,7 @@ public class GeneticChecksUtils {\n                                    String token) throws ToolException {\n         try {\n             storageManager.exportData(tpedFile.getAbsolutePath(), TPED, null, query, QueryOptions.empty(), token);\n-        } catch(CatalogException | IOException | StorageEngineException e) {\n+        } catch (CatalogException | IOException | StorageEngineException e) {\n             throw new ToolException(e);\n         }\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/213/GeneticChecksUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/213/GeneticChecksUtils.java\nindex 9beb1525188..d5ce9832c7c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/213/GeneticChecksUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/213/GeneticChecksUtils.java\n@@ -21,81 +21,81 @@ import static org.opencb.opencga.storage.core.variant.io.VariantWriterFactory.Va\n \n public class GeneticChecksUtils {\n \n-    public static void selectMarkers(String basename, String study, List<String> samples, Path outDir, VariantStorageManager storageManager,\n-                                     String token) throws ToolException {\n-            AbstractMap.SimpleEntry<String, String> outputBinding = new AbstractMap.SimpleEntry<>(outDir.toAbsolutePath().toString(),\n-                    \"/data/output\");\n+  public static void selectMarkers(String basename, String study, List<String> samples, Path outDir, VariantStorageManager storageManager,\n+                                   String token) throws ToolException {\n+    AbstractMap.SimpleEntry<String, String> outputBinding = new AbstractMap.SimpleEntry<>(outDir.toAbsolutePath().toString(),\n+        \"/data/output\");\n \n-            // Apply filter and export variants in format .tped and .tfam to run plink\n-            Query query = new Query()\n-                    .append(VariantQueryParam.STUDY.key(), study)\n-                    .append(VariantQueryParam.SAMPLE.key(), samples)\n-                    .append(VariantQueryParam.TYPE.key(), \"SNV\");\n-            //.append(VariantQueryParam.FILTER.key(), \"PASS\")\n+    // Apply filter and export variants in format .tped and .tfam to run plink\n+    Query query = new Query()\n+        .append(VariantQueryParam.STUDY.key(), study)\n+        .append(VariantQueryParam.SAMPLE.key(), samples)\n+        .append(VariantQueryParam.TYPE.key(), \"SNV\");\n+    //.append(VariantQueryParam.FILTER.key(), \"PASS\")\n \n-            // First, autosomal chromosomes\n-            File tpedAutosomeFile = outDir.resolve(basename + \".tped\").toFile();\n-            File tfamAutosomeFile = outDir.resolve(basename + \".tfam\").toFile();\n-            query.put(VariantQueryParam.REGION.key(), Arrays.asList(\"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22\".split(\",\")));\n-            query.put(VariantQueryParam.STATS_MAF.key(), \"ALL>0.3\");\n-            exportData(tpedAutosomeFile, tfamAutosomeFile, query, storageManager, token);\n-            if (tpedAutosomeFile.exists() && tpedAutosomeFile.length() > 0) {\n-                pruneVariants(basename, outputBinding);\n-            }\n+    // First, autosomal chromosomes\n+    File tpedAutosomeFile = outDir.resolve(basename + \".tped\").toFile();\n+    File tfamAutosomeFile = outDir.resolve(basename + \".tfam\").toFile();\n+    query.put(VariantQueryParam.REGION.key(), Arrays.asList(\"1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22\".split(\",\")));\n+    query.put(VariantQueryParam.STATS_MAF.key(), \"ALL>0.3\");\n+    exportData(tpedAutosomeFile, tfamAutosomeFile, query, storageManager, token);\n+    if (tpedAutosomeFile.exists() && tpedAutosomeFile.length() > 0) {\n+      pruneVariants(basename, outputBinding);\n+    }\n \n-            // First, X chromosome\n-            File tpedXFile = outDir.resolve(\"x.tped\").toFile();\n-            File tfamXFile = outDir.resolve(\"x.tfam\").toFile();\n-            query.put(VariantQueryParam.REGION.key(), \"X\");\n-            query.put(VariantQueryParam.STATS_MAF.key(), \"ALL>0.05\");\n-            exportData(tpedXFile, tfamXFile, query, storageManager, token);\n-            if (tpedXFile.exists() && tpedXFile.length() > 0) {\n-                pruneVariants(\"x\", outputBinding);\n-            }\n+    // First, X chromosome\n+    File tpedXFile = outDir.resolve(\"x.tped\").toFile();\n+    File tfamXFile = outDir.resolve(\"x.tfam\").toFile();\n+    query.put(VariantQueryParam.REGION.key(), \"X\");\n+    query.put(VariantQueryParam.STATS_MAF.key(), \"ALL>0.05\");\n+    exportData(tpedXFile, tfamXFile, query, storageManager, token);\n+    if (tpedXFile.exists() && tpedXFile.length() > 0) {\n+      pruneVariants(\"x\", outputBinding);\n+    }\n \n-            // Append files:\n-            //   - the x.tped file to autosome.tped file (since tfam files contain the same sample information)\n-            //   - the x.prune.out file to autosome.prune.out file\n-            appendFile(tpedXFile.getAbsolutePath(), tpedAutosomeFile.getAbsolutePath());\n-            appendFile(outDir.resolve(\"x.prune.out\").toString(), outDir.resolve(basename + \".prune.out\").toString());\n+    // Append files:\n+    //   - the x.tped file to autosome.tped file (since tfam files contain the same sample information)\n+    //   - the x.prune.out file to autosome.prune.out file\n+    appendFile(tpedXFile.getAbsolutePath(), tpedAutosomeFile.getAbsolutePath());\n+    appendFile(outDir.resolve(\"x.prune.out\").toString(), outDir.resolve(basename + \".prune.out\").toString());\n \n-    }\n+  }\n \n-    private static void exportData(File tpedFile, File tfamFile, Query query, VariantStorageManager storageManager,\n-                                   String token) throws ToolException {\n-        try {\n-            storageManager.exportData(tpedFile.getAbsolutePath(), TPED, null, query, QueryOptions.empty(), token);\n-        } catch(CatalogException | IOException | StorageEngineException e) {\n-            throw new ToolException(e);\n-        }\n+  private static void exportData(File tpedFile, File tfamFile, Query query, VariantStorageManager storageManager,\n+                                 String token) throws ToolException {\n+    try {\n+      storageManager.exportData(tpedFile.getAbsolutePath(), TPED, null, query, QueryOptions.empty(), token);\n+    } catch (CatalogException | IOException | StorageEngineException e) {\n+      throw new ToolException(e);\n+    }\n \n-        if (!tpedFile.exists() || !tfamFile.exists()) {\n-            throw new ToolException(\"Something wrong exporting data to TPED/TFAM format\");\n-        }\n+    if (!tpedFile.exists() || !tfamFile.exists()) {\n+      throw new ToolException(\"Something wrong exporting data to TPED/TFAM format\");\n     }\n+  }\n \n-    private static void pruneVariants(String basename, AbstractMap.SimpleEntry<String, String> outputBinding) throws ToolException {\n-        // Variant pruning using PLINK in docker\n-        String plinkParams = \"plink --tfile /data/output/\" + basename + \" --indep 50 5 2 --out /data/output/\" + basename;\n-        try {\n-            DockerUtils.run(PlinkWrapperAnalysis.PLINK_DOCKER_IMAGE, null, outputBinding, plinkParams, null);\n-        } catch (IOException e) {\n-            throw new ToolException(e);\n-        }\n+  private static void pruneVariants(String basename, AbstractMap.SimpleEntry<String, String> outputBinding) throws ToolException {\n+    // Variant pruning using PLINK in docker\n+    String plinkParams = \"plink --tfile /data/output/\" + basename + \" --indep 50 5 2 --out /data/output/\" + basename;\n+    try {\n+      DockerUtils.run(PlinkWrapperAnalysis.PLINK_DOCKER_IMAGE, null, outputBinding, plinkParams, null);\n+    } catch (IOException e) {\n+      throw new ToolException(e);\n     }\n+  }\n \n-    private static void appendFile(String srcFilename, String destFilename) throws ToolException {\n-        if (new File(srcFilename).exists()) {\n-            try (FileWriter f = new FileWriter(destFilename, true);\n-                 PrintWriter p = new PrintWriter(new BufferedWriter(f))) {\n-                FileInputStream fis = new FileInputStream(srcFilename);\n-                Scanner sc = new Scanner(fis);\n-                while (sc.hasNextLine()) {\n-                    p.println(sc.nextLine());\n-                }\n-            } catch (IOException e) {\n-                throw new ToolException(e);\n-            }\n+  private static void appendFile(String srcFilename, String destFilename) throws ToolException {\n+    if (new File(srcFilename).exists()) {\n+      try (FileWriter f = new FileWriter(destFilename, true);\n+           PrintWriter p = new PrintWriter(new BufferedWriter(f))) {\n+        FileInputStream fis = new FileInputStream(srcFilename);\n+        Scanner sc = new Scanner(fis);\n+        while (sc.hasNextLine()) {\n+          p.println(sc.nextLine());\n         }\n+      } catch (IOException e) {\n+        throw new ToolException(e);\n+      }\n     }\n+  }\n }\n",
            "diff_size": 70
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/213/GeneticChecksUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/213/GeneticChecksUtils.java\nindex 9beb1525188..3a5712cc92b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/213/GeneticChecksUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/213/GeneticChecksUtils.java\n@@ -58,14 +58,13 @@ public class GeneticChecksUtils {\n             //   - the x.prune.out file to autosome.prune.out file\n             appendFile(tpedXFile.getAbsolutePath(), tpedAutosomeFile.getAbsolutePath());\n             appendFile(outDir.resolve(\"x.prune.out\").toString(), outDir.resolve(basename + \".prune.out\").toString());\n-\n     }\n \n     private static void exportData(File tpedFile, File tfamFile, Query query, VariantStorageManager storageManager,\n                                    String token) throws ToolException {\n-        try {\n+    try {\n             storageManager.exportData(tpedFile.getAbsolutePath(), TPED, null, query, QueryOptions.empty(), token);\n-        } catch(CatalogException | IOException | StorageEngineException e) {\n+        } catch (CatalogException | IOException | StorageEngineException e) {\n             throw new ToolException(e);\n         }\n \n@@ -88,7 +87,7 @@ public class GeneticChecksUtils {\n         if (new File(srcFilename).exists()) {\n             try (FileWriter f = new FileWriter(destFilename, true);\n                  PrintWriter p = new PrintWriter(new BufferedWriter(f))) {\n-                FileInputStream fis = new FileInputStream(srcFilename);\n+    FileInputStream fis = new FileInputStream(srcFilename);\n                 Scanner sc = new Scanner(fis);\n                 while (sc.hasNextLine()) {\n                     p.println(sc.nextLine());\n@@ -98,4 +97,4 @@ public class GeneticChecksUtils {\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/213/GeneticChecksUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_random/213/GeneticChecksUtils.java\nindex 9beb1525188..774f10e0945 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/213/GeneticChecksUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_random/213/GeneticChecksUtils.java\n@@ -65,7 +65,7 @@ public class GeneticChecksUtils {\n                                    String token) throws ToolException {\n         try {\n             storageManager.exportData(tpedFile.getAbsolutePath(), TPED, null, query, QueryOptions.empty(), token);\n-        } catch(CatalogException | IOException | StorageEngineException e) {\n+        } catch (CatalogException | IOException | StorageEngineException e) {\n             throw new ToolException(e);\n         }\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/213/GeneticChecksUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_three_grams/213/GeneticChecksUtils.java\nindex 9beb1525188..774f10e0945 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/213/GeneticChecksUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_three_grams/213/GeneticChecksUtils.java\n@@ -65,7 +65,7 @@ public class GeneticChecksUtils {\n                                    String token) throws ToolException {\n         try {\n             storageManager.exportData(tpedFile.getAbsolutePath(), TPED, null, query, QueryOptions.empty(), token);\n-        } catch(CatalogException | IOException | StorageEngineException e) {\n+        } catch (CatalogException | IOException | StorageEngineException e) {\n             throw new ToolException(e);\n         }\n \n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
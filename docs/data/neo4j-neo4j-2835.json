{
    "project_name": "neo4j-neo4j",
    "error_id": "2835",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2835/LogPruneStrategyFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2835/LogPruneStrategyFactory.java\nindex 1fc6d7e41e6..fd2ee47d55f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2835/LogPruneStrategyFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2835/LogPruneStrategyFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.pruning;\n \n import java.util.stream.LongStream;\n@@ -37,7 +38,7 @@ public class LogPruneStrategyFactory\n     static final LogPruneStrategy NO_PRUNING = new LogPruneStrategy()\n     {\n         @Override\n-        public LongStream findLogVersionsToDelete( long upToLogVersion )\n+        public LongStream findLogVersionsToDelete(long upToLogVersion)\n         {\n             // Never delete anything.\n             return LongStream.empty();\n@@ -68,42 +69,42 @@ public class LogPruneStrategyFactory\n      *   <li>1k hours - For keeping last 1000 hours worth of log data</li>\n      * </ul>\n      */\n-    LogPruneStrategy strategyFromConfigValue( FileSystemAbstraction fileSystem, LogFiles logFiles, LogProvider logProvider, SystemNanoClock clock,\n-            String configValue )\n+    LogPruneStrategy strategyFromConfigValue(FileSystemAbstraction fileSystem, LogFiles logFiles, LogProvider logProvider, SystemNanoClock clock,\n+                                             String configValue)\n     {\n-        ThresholdConfigValue value = parse( configValue );\n+        ThresholdConfigValue value = parse(configValue);\n \n-        if ( value == ThresholdConfigValue.NO_PRUNING )\n+        if (value == ThresholdConfigValue.NO_PRUNING)\n         {\n             return NO_PRUNING;\n         }\n \n-        Threshold thresholdToUse = getThresholdByType( fileSystem, logProvider, clock, value, configValue );\n-        return new ThresholdBasedPruneStrategy( logFiles.getLogFile(), thresholdToUse );\n+        Threshold thresholdToUse = getThresholdByType(fileSystem, logProvider, clock, value, configValue);\n+        return new ThresholdBasedPruneStrategy(logFiles.getLogFile(), thresholdToUse);\n     }\n \n     @VisibleForTesting\n-    static Threshold getThresholdByType( FileSystemAbstraction fileSystem, LogProvider logProvider, SystemNanoClock clock, ThresholdConfigValue value,\n-            String originalConfigValue )\n+    static Threshold getThresholdByType(FileSystemAbstraction fileSystem, LogProvider logProvider, SystemNanoClock clock, ThresholdConfigValue value,\n+                                        String originalConfigValue)\n     {\n         long thresholdValue = value.value;\n \n-        switch ( value.type )\n+        switch (value.type)\n         {\n             case \"files\":\n-                return new FileCountThreshold( thresholdValue );\n+                return new FileCountThreshold(thresholdValue);\n             case \"size\":\n-                return new FileSizeThreshold( fileSystem, thresholdValue );\n+                return new FileSizeThreshold(fileSystem, thresholdValue);\n             case \"txs\":\n             case \"entries\": // txs and entries are synonyms\n-                return new EntryCountThreshold( logProvider, thresholdValue );\n+                return new EntryCountThreshold(logProvider, thresholdValue);\n             case \"hours\":\n-                return new EntryTimespanThreshold( logProvider, clock, HOURS, thresholdValue );\n+                return new EntryTimespanThreshold(logProvider, clock, HOURS, thresholdValue);\n             case \"days\":\n-                return new EntryTimespanThreshold( logProvider, clock, DAYS, thresholdValue );\n+                return new EntryTimespanThreshold(logProvider, clock, DAYS, thresholdValue);\n             default:\n-                throw new IllegalArgumentException( \"Invalid log pruning configuration value '\" + originalConfigValue +\n-                        \"'. Invalid type '\" + value.type + \"', valid are files, size, txs, entries, hours, days.\" );\n+                throw new IllegalArgumentException(\"Invalid log pruning configuration value '\" + originalConfigValue +\n+                  \"'. Invalid type '\" + value.type + \"', valid are files, size, txs, entries, hours, days.\");\n         }\n     }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
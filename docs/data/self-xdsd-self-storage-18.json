{
    "project_name": "self-xdsd-self-storage",
    "error_id": "18",
    "information": {
        "errors": [
            {
                "line": "82",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "                )\n            ).where(SLF_APITOKENS_XDSD.TOKEN.eq(token)).fetch();\n        if(result.size() > 0) {\n            final Record record = result.get(0);\n            return new StoredApiToken(\n                this.storage,",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/18/SelfApiTokens.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/18/SelfApiTokens.java\nindex a9dc3c8872c..0f49413ac56 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/18/SelfApiTokens.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/18/SelfApiTokens.java\n@@ -79,7 +79,7 @@ public final class SelfApiTokens implements ApiTokens {\n                     SLF_APITOKENS_XDSD.PROVIDER.eq(SLF_USERS_XDSD.PROVIDER)\n                 )\n             ).where(SLF_APITOKENS_XDSD.TOKEN.eq(token)).fetch();\n-        if(result.size() > 0) {\n+        if (result.size() > 0) {\n             final Record record = result.get(0);\n             return new StoredApiToken(\n                 this.storage,\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "64",
                    "severity": "error",
                    "message": "@param tag description should start with capital letter",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/18/SelfApiTokens.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/18/SelfApiTokens.java\nindex a9dc3c8872c..e9953dd0182 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/18/SelfApiTokens.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/18/SelfApiTokens.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.storage;\n \n import com.selfxdsd.api.ApiToken;\n@@ -32,16 +33,18 @@ import org.jooq.Record;\n import org.jooq.Result;\n \n import java.util.Iterator;\n+\n import static com.selfxdsd.storage.generated.jooq.Tables.SLF_APITOKENS_XDSD;\n import static com.selfxdsd.storage.generated.jooq.tables.SlfUsersXdsd.SLF_USERS_XDSD;\n \n /**\n  * Api tokens in Self.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n- * @since 0.0.27\n  * @todo #232:60min Implement method ofUser(...) and write integration\n- *  tests for it.\n+ * tests for it.\n+ * @since 0.0.27\n  */\n public final class SelfApiTokens implements ApiTokens {\n \n@@ -57,7 +60,8 @@ public final class SelfApiTokens implements ApiTokens {\n \n     /**\n      * Ctor.\n-     * @param storage Parent Storage.\n+     *\n+     * @param storage  Parent Storage.\n      * @param database Database.\n      */\n     public SelfApiTokens(\n@@ -79,7 +83,7 @@ public final class SelfApiTokens implements ApiTokens {\n                     SLF_APITOKENS_XDSD.PROVIDER.eq(SLF_USERS_XDSD.PROVIDER)\n                 )\n             ).where(SLF_APITOKENS_XDSD.TOKEN.eq(token)).fetch();\n-        if(result.size() > 0) {\n+        if (result.size() > 0) {\n             final Record record = result.get(0);\n             return new StoredApiToken(\n                 this.storage,\n@@ -107,7 +111,7 @@ public final class SelfApiTokens implements ApiTokens {\n     public Iterator<ApiToken> iterator() {\n         throw new UnsupportedOperationException(\n             \"You cannot iterate over all ApiTokens in Self. \"\n-            + \"Call #ofUser(...) first.\"\n+                + \"Call #ofUser(...) first.\"\n         );\n     }\n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "76",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'0' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/18/SelfApiTokens.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/18/SelfApiTokens.java\nindex a9dc3c8872c..73161dbcedc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/18/SelfApiTokens.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/18/SelfApiTokens.java\n@@ -60,27 +60,22 @@ public final class SelfApiTokens implements ApiTokens {\n      * @param storage Parent Storage.\n      * @param database Database.\n      */\n-    public SelfApiTokens(\n-        final Storage storage,\n-        final Database database\n-    ) {\n+    public SelfApiTokens(final Storage storage,\n+        final Database database) {\n         this.storage = storage;\n         this.database = database;\n     }\n \n     @Override\n     public ApiToken getById(final String token) {\n-        final Result<Record> result = this.database.jooq()\n-            .select()\n-            .from(SLF_APITOKENS_XDSD)\n-            .join(SLF_USERS_XDSD)\n-            .on(\n+        final Result<Record> result = this.database.jooq().select().from(SLF_APITOKENS_XDSD).join(SLF_USERS_XDSD).on(\n                 SLF_APITOKENS_XDSD.USERNAME.eq(SLF_USERS_XDSD.USERNAME).and(\n                     SLF_APITOKENS_XDSD.PROVIDER.eq(SLF_USERS_XDSD.PROVIDER)\n                 )\n             ).where(SLF_APITOKENS_XDSD.TOKEN.eq(token)).fetch();\n         if(result.size() > 0) {\n-            final Record record = result.get(0);\n+            final Record record = result.get(\n+    0);\n             return new StoredApiToken(\n                 this.storage,\n                 record.getValue(SLF_APITOKENS_XDSD.NAME),\n@@ -90,8 +85,7 @@ public final class SelfApiTokens implements ApiTokens {\n                     record.get(SLF_USERS_XDSD.USERNAME),\n                     record.get(SLF_USERS_XDSD.EMAIL),\n                     record.get(SLF_USERS_XDSD.ROLE),\n-                    record.get(SLF_USERS_XDSD.PROVIDER),\n-                    this.storage\n+                    record.get(SLF_USERS_XDSD.PROVIDER), this.storage\n                 )\n             );\n         }\n@@ -110,4 +104,4 @@ public final class SelfApiTokens implements ApiTokens {\n             + \"Call #ofUser(...) first.\"\n         );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "77",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 73, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "column": "21",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "82",
                    "column": "23",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 277).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "98",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "130",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "161",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "193",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "218",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "220",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "230",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "259",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "266",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "86",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 34, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 30, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "column": "20",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "112",
                    "column": "22",
                    "severity": "error",
                    "message": "'<' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/18/SelfApiTokens.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/18/SelfApiTokens.java\nindex a9dc3c8872c..ab07ce8df51 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/18/SelfApiTokens.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/18/SelfApiTokens.java\n@@ -30,9 +30,12 @@ import com.selfxdsd.core.StoredApiToken;\n import com.selfxdsd.core.StoredUser;\n import org.jooq.Record;\n import org.jooq.Result;\n-\n import java.util.Iterator;\n+\n+\n import static com.selfxdsd.storage.generated.jooq.Tables.SLF_APITOKENS_XDSD;\n+\n+\n import static com.selfxdsd.storage.generated.jooq.tables.SlfUsersXdsd.SLF_USERS_XDSD;\n \n /**\n@@ -43,16 +46,21 @@ import static com.selfxdsd.storage.generated.jooq.tables.SlfUsersXdsd.SLF_USERS_\n  * @todo #232:60min Implement method ofUser(...) and write integration\n  *  tests for it.\n  */\n+\n+\n public final class SelfApiTokens implements ApiTokens {\n \n     /**\n      * Parent Storage.\n      */\n+\n+\n     private final Storage storage;\n \n     /**\n      * Database.\n      */\n+\n     private final Database database;\n \n     /**\n@@ -60,41 +68,38 @@ public final class SelfApiTokens implements ApiTokens {\n      * @param storage Parent Storage.\n      * @param database Database.\n      */\n-    public SelfApiTokens(\n-        final Storage storage,\n-        final Database database\n-    ) {\n+\n+\n+    public SelfApiTokens(final Storage storage, final Database database) {\n         this.storage = storage;\n-        this.database = database;\n+\n+\n+                                                                         this.database = database;\n     }\n \n     @Override\n     public ApiToken getById(final String token) {\n-        final Result<Record> result = this.database.jooq()\n-            .select()\n-            .from(SLF_APITOKENS_XDSD)\n-            .join(SLF_USERS_XDSD)\n-            .on(\n-                SLF_APITOKENS_XDSD.USERNAME.eq(SLF_USERS_XDSD.USERNAME).and(\n-                    SLF_APITOKENS_XDSD.PROVIDER.eq(SLF_USERS_XDSD.PROVIDER)\n-                )\n-            ).where(SLF_APITOKENS_XDSD.TOKEN.eq(token)).fetch();\n-        if(result.size() > 0) {\n-            final Record record = result.get(0);\n-            return new StoredApiToken(\n-                this.storage,\n-                record.getValue(SLF_APITOKENS_XDSD.NAME),\n-                record.getValue(SLF_APITOKENS_XDSD.TOKEN),\n-                record.getValue(SLF_APITOKENS_XDSD.EXPIRESAT),\n-                new StoredUser(\n-                    record.get(SLF_USERS_XDSD.USERNAME),\n-                    record.get(SLF_USERS_XDSD.EMAIL),\n-                    record.get(SLF_USERS_XDSD.ROLE),\n-                    record.get(SLF_USERS_XDSD.PROVIDER),\n-                    this.storage\n-                )\n-            );\n-        }\n+        final Result < Record> result=\n+            this.database.jooq() .select() .from( SLF_APITOKENS_XDSD) .join( SLF_USERS_XDSD) .on( SLF_APITOKENS_XDSD.USERNAME.eq( SLF_USERS_XDSD.USERNAME) .and( SLF_APITOKENS_XDSD.PROVIDER.eq( SLF_USERS_XDSD.PROVIDER) ) ) .where( SLF_APITOKENS_XDSD.TOKEN.eq( token) ) .fetch();\n+\n+\n+        if( result.size()> 0) {\n+                                  final Record record= result.get( 0);\n+return new StoredApiToken(\n+          this.storage,\n+          record.getValue( SLF_APITOKENS_XDSD.NAME),\n+          record.getValue( SLF_APITOKENS_XDSD.TOKEN),\n+          record.getValue( SLF_APITOKENS_XDSD.EXPIRESAT),\n+          new StoredUser(\n+              record.get( SLF_USERS_XDSD.USERNAME),\n+              record.get( SLF_USERS_XDSD.EMAIL),\n+              record.get( SLF_USERS_XDSD.ROLE),\n+              record.get( SLF_USERS_XDSD.PROVIDER),\n+              this.storage\n+          )\n+      );\n+                              }\n+\n         return null;\n     }\n \n@@ -104,10 +109,9 @@ public final class SelfApiTokens implements ApiTokens {\n     }\n \n     @Override\n-    public Iterator<ApiToken> iterator() {\n+    public Iterator < ApiToken> iterator() {\n         throw new UnsupportedOperationException(\n-            \"You cannot iterate over all ApiTokens in Self. \"\n-            + \"Call #ofUser(...) first.\"\n+                  \"You cannot iterate over all ApiTokens in Self. \" + \"Call #ofUser(...) first.\"\n         );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "82",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/18/SelfApiTokens.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_three_grams/18/SelfApiTokens.java\nindex a9dc3c8872c..0f49413ac56 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/18/SelfApiTokens.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_three_grams/18/SelfApiTokens.java\n@@ -79,7 +79,7 @@ public final class SelfApiTokens implements ApiTokens {\n                     SLF_APITOKENS_XDSD.PROVIDER.eq(SLF_USERS_XDSD.PROVIDER)\n                 )\n             ).where(SLF_APITOKENS_XDSD.TOKEN.eq(token)).fetch();\n-        if(result.size() > 0) {\n+        if (result.size() > 0) {\n             final Record record = result.get(0);\n             return new StoredApiToken(\n                 this.storage,\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
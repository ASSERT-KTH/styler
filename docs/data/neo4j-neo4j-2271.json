{
    "project_name": "neo4j-neo4j",
    "error_id": "2271",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2271/ThrowingConsistencyCheckVisitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2271/ThrowingConsistencyCheckVisitor.java\nindex 92dcc934b66..0e8c64bb1cf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2271/ThrowingConsistencyCheckVisitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2271/ThrowingConsistencyCheckVisitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.internal.gbptree;\n \n import java.nio.file.Path;\n@@ -35,180 +36,181 @@ public class ThrowingConsistencyCheckVisitor<KEY> implements GBPTreeConsistencyC\n     private static final String unexpectedExceptionInconsistency = \"Unexpected exception inconsistency: \";\n \n     @Override\n-    public void notATreeNode( long pageId, Path file )\n+    public void notATreeNode(long pageId, Path file)\n     {\n-        throwTreeStructureInconsistency( \"Page: %d is not a tree node page.\", pageId );\n+        throwTreeStructureInconsistency(\"Page: %d is not a tree node page.\", pageId);\n     }\n \n     @Override\n-    public void unknownTreeNodeType( long pageId, byte treeNodeType, Path file )\n+    public void unknownTreeNodeType(long pageId, byte treeNodeType, Path file)\n     {\n-        throwTreeStructureInconsistency( \"Page: %d has an unknown tree node type: %d.\", pageId, treeNodeType );\n+        throwTreeStructureInconsistency(\"Page: %d has an unknown tree node type: %d.\", pageId, treeNodeType);\n     }\n \n     @Override\n-    public void siblingsDontPointToEachOther( long leftNode, long leftNodeGeneration, long leftRightSiblingPointerGeneration, long leftRightSiblingPointer,\n-            long rightLeftSiblingPointer, long rightLeftSiblingPointerGeneration, long rightNode, long rightNodeGeneration, Path file )\n+    public void siblingsDontPointToEachOther(long leftNode, long leftNodeGeneration, long leftRightSiblingPointerGeneration, long leftRightSiblingPointer,\n+                                             long rightLeftSiblingPointer, long rightLeftSiblingPointerGeneration, long rightNode, long rightNodeGeneration,\n+                                             Path file)\n     {\n-        throwTreeStructureInconsistency( \"Sibling pointers misaligned.%n\" +\n-                        \"  Left siblings view:  %s%n\" +\n-                        \"  Right siblings view: %s%n\",\n-                leftPattern( leftNode, leftNodeGeneration, leftRightSiblingPointerGeneration, leftRightSiblingPointer ),\n-                rightPattern( rightNode, rightNodeGeneration, rightLeftSiblingPointerGeneration, rightLeftSiblingPointer ) );\n+        throwTreeStructureInconsistency(\"Sibling pointers misaligned.%n\" +\n+            \"  Left siblings view:  %s%n\" +\n+            \"  Right siblings view: %s%n\",\n+          leftPattern(leftNode, leftNodeGeneration, leftRightSiblingPointerGeneration, leftRightSiblingPointer),\n+          rightPattern(rightNode, rightNodeGeneration, rightLeftSiblingPointerGeneration, rightLeftSiblingPointer));\n     }\n \n     @Override\n-    public void rightmostNodeHasRightSibling( long rightSiblingPointer, long rightmostNode, Path file )\n+    public void rightmostNodeHasRightSibling(long rightSiblingPointer, long rightmostNode, Path file)\n     {\n-        throwTreeStructureInconsistency( \"Expected rightmost right sibling to be %d but was %d. Current rightmost node is %d.\",\n-                NO_NODE_FLAG, rightSiblingPointer, rightmostNode );\n+        throwTreeStructureInconsistency(\"Expected rightmost right sibling to be %d but was %d. Current rightmost node is %d.\",\n+          NO_NODE_FLAG, rightSiblingPointer, rightmostNode);\n     }\n \n     @Override\n-    public void pointerToOldVersionOfTreeNode( long pageId, long successorPointer, Path file )\n+    public void pointerToOldVersionOfTreeNode(long pageId, long successorPointer, Path file)\n     {\n-        throwTreeStructureInconsistency( \"We ended up on tree node %d which has a newer generation, successor is: %d\", pageId, successorPointer );\n+        throwTreeStructureInconsistency(\"We ended up on tree node %d which has a newer generation, successor is: %d\", pageId, successorPointer);\n     }\n \n     @Override\n-    public void pointerHasLowerGenerationThanNode( GBPTreePointerType pointerType, long sourceNode, long pointerGeneration, long pointer,\n-            long targetNodeGeneration, Path file )\n+    public void pointerHasLowerGenerationThanNode(GBPTreePointerType pointerType, long sourceNode, long pointerGeneration, long pointer,\n+                                                  long targetNodeGeneration, Path file)\n     {\n-        throwTreeStructureInconsistency( \"Pointer (%s) in tree node %d has pointer generation %d, but target node %d has a higher generation %d.\",\n-                pointerType.toString(), sourceNode, pointerGeneration, pointer, targetNodeGeneration );\n+        throwTreeStructureInconsistency(\"Pointer (%s) in tree node %d has pointer generation %d, but target node %d has a higher generation %d.\",\n+          pointerType.toString(), sourceNode, pointerGeneration, pointer, targetNodeGeneration);\n     }\n \n     @Override\n-    public void keysOutOfOrderInNode( long pageId, Path file )\n+    public void keysOutOfOrderInNode(long pageId, Path file)\n     {\n-        throwKeyOrderInconsistency( \"Keys in tree node %d are out of order.\", pageId );\n+        throwKeyOrderInconsistency(\"Keys in tree node %d are out of order.\", pageId);\n     }\n \n     @Override\n-    public void keysLocatedInWrongNode( KeyRange<KEY> range, KEY key, int pos, int keyCount, long pageId, Path file )\n+    public void keysLocatedInWrongNode(KeyRange<KEY> range, KEY key, int pos, int keyCount, long pageId, Path file)\n     {\n-        throwKeyOrderInconsistency( \"Expected range for this tree node is %n%s%n but found %s in position %d, with keyCount %d on page %d.\",\n-                range, key, pos, keyCount, pageId );\n+        throwKeyOrderInconsistency(\"Expected range for this tree node is %n%s%n but found %s in position %d, with keyCount %d on page %d.\",\n+          range, key, pos, keyCount, pageId);\n     }\n \n     @Override\n-    public void unusedPage( long pageId, Path file )\n+    public void unusedPage(long pageId, Path file)\n     {\n-        throwTreeMetaInconsistency( \"Index has a leaked page that will never be reclaimed, pageId=%d.\", pageId );\n+        throwTreeMetaInconsistency(\"Index has a leaked page that will never be reclaimed, pageId=%d.\", pageId);\n     }\n \n     @Override\n-    public void pageIdExceedLastId( long lastId, long pageId, Path file )\n+    public void pageIdExceedLastId(long lastId, long pageId, Path file)\n     {\n-        throwTreeMetaInconsistency( \"Tree node has page id larger than registered last id, lastId=%d, pageId=%d.\", lastId, pageId );\n+        throwTreeMetaInconsistency(\"Tree node has page id larger than registered last id, lastId=%d, pageId=%d.\", lastId, pageId);\n     }\n \n     @Override\n-    public void nodeMetaInconsistency( long pageId, String message, Path file )\n+    public void nodeMetaInconsistency(long pageId, String message, Path file)\n     {\n-        throwNodeMetaInconsistency( \"Tree node %d has inconsistent meta data: %s.\", pageId, message );\n+        throwNodeMetaInconsistency(\"Tree node %d has inconsistent meta data: %s.\", pageId, message);\n     }\n \n     @Override\n-    public void pageIdSeenMultipleTimes( long pageId, Path file )\n+    public void pageIdSeenMultipleTimes(long pageId, Path file)\n     {\n         throwTreeStructureInconsistency(\n-                \"Page id seen multiple times, this means either active tree node is present in freelist or pointers in tree create a loop, pageId=%d.\",\n-                pageId );\n+          \"Page id seen multiple times, this means either active tree node is present in freelist or pointers in tree create a loop, pageId=%d.\",\n+          pageId);\n     }\n \n     @Override\n-    public void crashedPointer( long pageId, GBPTreePointerType pointerType, long generationA, long readPointerA, long pointerA, byte stateA, long generationB,\n-            long readPointerB, long pointerB, byte stateB, Path file )\n+    public void crashedPointer(long pageId, GBPTreePointerType pointerType, long generationA, long readPointerA, long pointerA, byte stateA, long generationB,\n+                               long readPointerB, long pointerB, byte stateB, Path file)\n     {\n-        throwTreeStructureInconsistency( \"Crashed pointer found in tree node %d, pointer: %s%n  slotA[%s]%n  slotB[%s]\",\n-                pageId, pointerType.toString(),\n-                stateToString( generationA, readPointerA, pointerA, stateA ),\n-                stateToString( generationB, readPointerB, pointerB, stateB ) );\n+        throwTreeStructureInconsistency(\"Crashed pointer found in tree node %d, pointer: %s%n  slotA[%s]%n  slotB[%s]\",\n+          pageId, pointerType.toString(),\n+          stateToString(generationA, readPointerA, pointerA, stateA),\n+          stateToString(generationB, readPointerB, pointerB, stateB));\n     }\n \n     @Override\n-    public void brokenPointer( long pageId, GBPTreePointerType pointerType, long generationA, long readPointerA, long pointerA, byte stateA, long generationB,\n-            long readPointerB, long pointerB, byte stateB, Path file )\n+    public void brokenPointer(long pageId, GBPTreePointerType pointerType, long generationA, long readPointerA, long pointerA, byte stateA, long generationB,\n+                              long readPointerB, long pointerB, byte stateB, Path file)\n     {\n-        throwTreeStructureInconsistency( \"Broken pointer found in tree node %d, pointer: %s%n  slotA[%s]%n  slotB[%s]\",\n-                pageId, pointerType.toString(),\n-                stateToString( generationA, readPointerA, pointerA, stateA ),\n-                stateToString( generationB, readPointerB, pointerB, stateB ) );\n+        throwTreeStructureInconsistency(\"Broken pointer found in tree node %d, pointer: %s%n  slotA[%s]%n  slotB[%s]\",\n+          pageId, pointerType.toString(),\n+          stateToString(generationA, readPointerA, pointerA, stateA),\n+          stateToString(generationB, readPointerB, pointerB, stateB));\n     }\n \n     @Override\n-    public void unreasonableKeyCount( long pageId, int keyCount, Path file )\n+    public void unreasonableKeyCount(long pageId, int keyCount, Path file)\n     {\n-        throwTreeMetaInconsistency( \"Unexpected keyCount on pageId %d, keyCount=%d\", pageId, keyCount );\n+        throwTreeMetaInconsistency(\"Unexpected keyCount on pageId %d, keyCount=%d\", pageId, keyCount);\n     }\n \n     @Override\n-    public void childNodeFoundAmongParentNodes( KeyRange<KEY> parentRange, int level, long pageId, Path file )\n+    public void childNodeFoundAmongParentNodes(KeyRange<KEY> parentRange, int level, long pageId, Path file)\n     {\n-        throwTreeStructureInconsistency( \"Circular reference, child tree node found among parent nodes. Parents:%n%s%nlevel: %d, pageId: %d\",\n-                parentRange, level, pageId );\n+        throwTreeStructureInconsistency(\"Circular reference, child tree node found among parent nodes. Parents:%n%s%nlevel: %d, pageId: %d\",\n+          parentRange, level, pageId);\n     }\n \n     @Override\n-    public void exception( Exception e )\n+    public void exception(Exception e)\n     {\n-        throwUnexpectedExceptionInconsistency( \"%s\", Exceptions.stringify( e ) );\n+        throwUnexpectedExceptionInconsistency(\"%s\", Exceptions.stringify(e));\n     }\n \n     @Override\n-    public void dirtyOnStartup( Path file )\n+    public void dirtyOnStartup(Path file)\n     {\n         // This is not considered an inconsistency\n     }\n \n-    private static String stateToString( long generation, long readPointer, long pointer, byte stateA )\n+    private static String stateToString(long generation, long readPointer, long pointer, byte stateA)\n     {\n-        return format( \"generation=%d, readPointer=%d, pointer=%d, state=%s\",\n-                generation, readPointer, pointer, GenerationSafePointerPair.pointerStateName( stateA ) );\n+        return format(\"generation=%d, readPointer=%d, pointer=%d, state=%s\",\n+          generation, readPointer, pointer, GenerationSafePointerPair.pointerStateName(stateA));\n     }\n \n-    private String leftPattern( long actualLeftSibling, long actualLeftSiblingGeneration,\n-            long expectedRightSiblingGeneration, long expectedRightSibling )\n+    private String leftPattern(long actualLeftSibling, long actualLeftSiblingGeneration,\n+                               long expectedRightSiblingGeneration, long expectedRightSibling)\n     {\n-        return format( \"{%d(%d)}-(%d)->{%d}\", actualLeftSibling, actualLeftSiblingGeneration, expectedRightSiblingGeneration,\n-                expectedRightSibling );\n+        return format(\"{%d(%d)}-(%d)->{%d}\", actualLeftSibling, actualLeftSiblingGeneration, expectedRightSiblingGeneration,\n+          expectedRightSibling);\n     }\n \n-    private String rightPattern( long actualRightSibling, long actualRightSiblingGeneration,\n-            long expectedLeftSiblingGeneration, long expectedLeftSibling )\n+    private String rightPattern(long actualRightSibling, long actualRightSiblingGeneration,\n+                                long expectedLeftSiblingGeneration, long expectedLeftSibling)\n     {\n-        return format( \"{%d}<-(%d)-{%d(%d)}\", expectedLeftSibling, expectedLeftSiblingGeneration, actualRightSibling,\n-                actualRightSiblingGeneration );\n+        return format(\"{%d}<-(%d)-{%d(%d)}\", expectedLeftSibling, expectedLeftSiblingGeneration, actualRightSibling,\n+          actualRightSiblingGeneration);\n     }\n \n-    private void throwKeyOrderInconsistency( String format, Object... args )\n+    private void throwKeyOrderInconsistency(String format, Object... args)\n     {\n-        throwWithPrefix( keyOrderInconsistency, format, args );\n+        throwWithPrefix(keyOrderInconsistency, format, args);\n     }\n \n-    private void throwTreeStructureInconsistency( String format, Object... args )\n+    private void throwTreeStructureInconsistency(String format, Object... args)\n     {\n-        throwWithPrefix( treeStructureInconsistency, format, args );\n+        throwWithPrefix(treeStructureInconsistency, format, args);\n     }\n \n-    private void throwNodeMetaInconsistency( String format, Object... args )\n+    private void throwNodeMetaInconsistency(String format, Object... args)\n     {\n-        throwWithPrefix( nodeMetaInconsistency, format, args );\n+        throwWithPrefix(nodeMetaInconsistency, format, args);\n     }\n \n-    private void throwTreeMetaInconsistency( String format, Object... args )\n+    private void throwTreeMetaInconsistency(String format, Object... args)\n     {\n-        throwWithPrefix( treeMetaInconsistency, format, args );\n+        throwWithPrefix(treeMetaInconsistency, format, args);\n     }\n \n-    private void throwUnexpectedExceptionInconsistency( String format, Object... args )\n+    private void throwUnexpectedExceptionInconsistency(String format, Object... args)\n     {\n-        throwWithPrefix( unexpectedExceptionInconsistency, format, args );\n+        throwWithPrefix(unexpectedExceptionInconsistency, format, args);\n     }\n \n-    private void throwWithPrefix( String prefix, String format, Object[] args )\n+    private void throwWithPrefix(String prefix, String format, Object[] args)\n     {\n-        throw new TreeInconsistencyException( String.format( prefix + format, args ) );\n+        throw new TreeInconsistencyException(String.format(prefix + format, args));\n     }\n }\n",
            "diff_size": 79
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
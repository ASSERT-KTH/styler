{
    "project_name": "graphfoundation-ongdb",
    "error_id": "313",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/313/BooleanValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/313/BooleanValue.java\nindex 13f34c2f53d..f303a7a7007 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/313/BooleanValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/313/BooleanValue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import org.neo4j.hashing.HashFunction;\n@@ -31,160 +32,160 @@ import static java.lang.String.format;\n public abstract class BooleanValue extends ScalarValue\n {\n \n-    private BooleanValue()\n+  private BooleanValue()\n+  {\n+  }\n+\n+  @Override\n+  public boolean eq(Object other)\n+  {\n+    return other != null && other instanceof Value && equals((Value) other);\n+  }\n+\n+  @Override\n+  public <T> T map(ValueMapper<T> mapper)\n+  {\n+    return mapper.mapBoolean(this);\n+  }\n+\n+  public ValueGroup valueGroup()\n+  {\n+    return ValueGroup.BOOLEAN;\n+  }\n+\n+  public abstract boolean booleanValue();\n+\n+  @Override\n+  public NumberType numberType()\n+  {\n+    return NumberType.NO_NUMBER;\n+  }\n+\n+  @Override\n+  public long updateHash(HashFunction hashFunction, long hash)\n+  {\n+    return hashFunction.update(hash, hashCode());\n+  }\n+\n+  @Override\n+  public String getTypeName()\n+  {\n+    return \"Boolean\";\n+  }\n+\n+  public static final BooleanValue TRUE = new BooleanValue()\n+  {\n+    @Override\n+    public boolean equals(Value other)\n     {\n+      return this == other;\n     }\n \n     @Override\n-    public boolean eq( Object other )\n+    public boolean equals(boolean x)\n     {\n-        return other != null && other instanceof Value && equals( (Value) other );\n+      return x;\n     }\n \n     @Override\n-    public <T> T map( ValueMapper<T> mapper )\n+    public int computeHash()\n     {\n-        return mapper.mapBoolean( this );\n+      //Use same as Boolean.TRUE.hashCode\n+      return 1231;\n     }\n \n-    public ValueGroup valueGroup()\n+    public boolean booleanValue()\n     {\n-        return ValueGroup.BOOLEAN;\n+      return true;\n     }\n \n-    public abstract boolean booleanValue();\n-\n     @Override\n-    public NumberType numberType()\n+    int unsafeCompareTo(Value otherValue)\n     {\n-        return NumberType.NO_NUMBER;\n+      BooleanValue other = (BooleanValue) otherValue;\n+      return other.booleanValue() ? 0 : 1;\n     }\n \n     @Override\n-    public long updateHash( HashFunction hashFunction, long hash )\n+    public <E extends Exception> void writeTo(ValueWriter<E> writer) throws E\n     {\n-        return hashFunction.update( hash, hashCode() );\n+      writer.writeBoolean(true);\n     }\n \n     @Override\n-    public String getTypeName()\n+    public Object asObjectCopy()\n     {\n-        return \"Boolean\";\n+      return Boolean.TRUE;\n     }\n \n-    public static final BooleanValue TRUE = new BooleanValue()\n+    @Override\n+    public String prettyPrint()\n     {\n-        @Override\n-        public boolean equals( Value other )\n-        {\n-            return this == other;\n-        }\n-\n-        @Override\n-        public boolean equals( boolean x )\n-        {\n-            return x;\n-        }\n-\n-        @Override\n-        public int computeHash()\n-        {\n-            //Use same as Boolean.TRUE.hashCode\n-            return 1231;\n-        }\n+      return Boolean.toString(true);\n+    }\n \n-        public boolean booleanValue()\n-        {\n-            return true;\n-        }\n+    @Override\n+    public String toString()\n+    {\n+      return format(\"%s('%s')\", getTypeName(), Boolean.toString(true));\n+    }\n+  };\n \n-        @Override\n-        int unsafeCompareTo( Value otherValue )\n-        {\n-            BooleanValue other = (BooleanValue) otherValue;\n-            return other.booleanValue() ? 0 : 1;\n-        }\n+  public static final BooleanValue FALSE = new BooleanValue()\n+  {\n+    @Override\n+    public boolean equals(Value other)\n+    {\n+      return this == other;\n+    }\n \n-        @Override\n-        public <E extends Exception> void writeTo( ValueWriter<E> writer ) throws E\n-        {\n-            writer.writeBoolean( true );\n-        }\n+    @Override\n+    public boolean equals(boolean x)\n+    {\n+      return !x;\n+    }\n \n-        @Override\n-        public Object asObjectCopy()\n-        {\n-            return Boolean.TRUE;\n-        }\n+    @Override\n+    public int computeHash()\n+    {\n+      //Use same as Boolean.FALSE.hashCode\n+      return 1237;\n+    }\n \n-        @Override\n-        public String prettyPrint()\n-        {\n-            return Boolean.toString( true );\n-        }\n+    public boolean booleanValue()\n+    {\n+      return false;\n+    }\n \n-        @Override\n-        public String toString()\n-        {\n-            return format( \"%s('%s')\", getTypeName(), Boolean.toString( true ) );\n-        }\n-    };\n+    @Override\n+    int unsafeCompareTo(Value otherValue)\n+    {\n+      BooleanValue other = (BooleanValue) otherValue;\n+      return !other.booleanValue() ? 0 : -1;\n+    }\n \n-    public static final BooleanValue FALSE = new BooleanValue()\n+    @Override\n+    public <E extends Exception> void writeTo(ValueWriter<E> writer) throws E\n     {\n-        @Override\n-        public boolean equals( Value other )\n-        {\n-            return this == other;\n-        }\n+      writer.writeBoolean(false);\n+    }\n \n-        @Override\n-        public boolean equals( boolean x )\n-        {\n-            return !x;\n-        }\n+    @Override\n+    public Object asObjectCopy()\n+    {\n+      return Boolean.FALSE;\n+    }\n \n-        @Override\n-        public int computeHash()\n-        {\n-            //Use same as Boolean.FALSE.hashCode\n-            return 1237;\n-        }\n+    @Override\n+    public String prettyPrint()\n+    {\n+      return Boolean.toString(false);\n+    }\n \n-        public boolean booleanValue()\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        int unsafeCompareTo( Value otherValue )\n-        {\n-            BooleanValue other = (BooleanValue) otherValue;\n-            return !other.booleanValue() ? 0 : -1;\n-        }\n-\n-        @Override\n-        public <E extends Exception> void writeTo( ValueWriter<E> writer ) throws E\n-        {\n-            writer.writeBoolean( false );\n-        }\n-\n-        @Override\n-        public Object asObjectCopy()\n-        {\n-            return Boolean.FALSE;\n-        }\n-\n-        @Override\n-        public String prettyPrint()\n-        {\n-            return Boolean.toString( false );\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return format( \"%s('%s')\", getTypeName(), Boolean.toString( false ) );\n-        }\n-    };\n+    @Override\n+    public String toString()\n+    {\n+      return format(\"%s('%s')\", getTypeName(), Boolean.toString(false));\n+    }\n+  };\n }\n",
            "diff_size": 172
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/313/BooleanValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/313/BooleanValue.java\nindex 13f34c2f53d..676313a24ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/313/BooleanValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/313/BooleanValue.java\n@@ -30,7 +30,6 @@ import static java.lang.String.format;\n  */\n public abstract class BooleanValue extends ScalarValue\n {\n-\n     private BooleanValue()\n     {\n     }\n@@ -187,4 +186,4 @@ public abstract class BooleanValue extends ScalarValue\n             return format( \"%s('%s')\", getTypeName(), Boolean.toString( false ) );\n         }\n     };\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
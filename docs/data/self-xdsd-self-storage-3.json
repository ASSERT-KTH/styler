{
    "project_name": "self-xdsd-self-storage",
    "error_id": "3",
    "information": {
        "errors": [
            {
                "line": "57",
                "column": "12",
                "severity": "error",
                "message": "'for' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        final Resignations resignations = task.resignations();\n        MatcherAssert.assertThat(resignations, Matchers.iterableWithSize(2));\n        for(final Resignation res : resignations) {\n            MatcherAssert.assertThat(\n                res.task(),\n                Matchers.is(task)",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/3/SelfResignationsITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/3/SelfResignationsITCase.java\nindex f024508e195..46d5855e42d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/3/SelfResignationsITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler/3/SelfResignationsITCase.java\n@@ -54,7 +54,7 @@ public final class SelfResignationsITCase {\n         MatcherAssert.assertThat(task, Matchers.notNullValue());\n         final Resignations resignations = task.resignations();\n         MatcherAssert.assertThat(resignations, Matchers.iterableWithSize(2));\n-        for(final Resignation res : resignations) {\n+        for (final Resignation res : resignations) {\n             MatcherAssert.assertThat(\n                 res.task(),\n                 Matchers.is(task)\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/3/SelfResignationsITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/3/SelfResignationsITCase.java\nindex f024508e195..d54d1fe7bde 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/3/SelfResignationsITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/intellij/3/SelfResignationsITCase.java\n@@ -20,6 +20,7 @@\n  * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n  * POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package com.selfxdsd.storage;\n \n import com.selfxdsd.api.*;\n@@ -30,6 +31,7 @@ import org.junit.Test;\n \n /**\n  * Integration tests for {@link SelfResignations}.\n+ *\n  * @author Mihai Andronache (amihaiemil@gmail.com)\n  * @version $Id$\n  * @since 0.0.8\n@@ -54,7 +56,7 @@ public final class SelfResignationsITCase {\n         MatcherAssert.assertThat(task, Matchers.notNullValue());\n         final Resignations resignations = task.resignations();\n         MatcherAssert.assertThat(resignations, Matchers.iterableWithSize(2));\n-        for(final Resignation res : resignations) {\n+        for (final Resignation res : resignations) {\n             MatcherAssert.assertThat(\n                 res.task(),\n                 Matchers.is(task)\n@@ -107,7 +109,7 @@ public final class SelfResignationsITCase {\n     /**\n      * SelfResignations.register(...) throws ISE if the Task has no assignee.\n      */\n-    @Test (expected = IllegalStateException.class)\n+    @Test(expected = IllegalStateException.class)\n     public void registerComplainsOnNoAssignee() {\n         final Storage storage = new SelfJooq(new H2Database());\n         final Project project = storage\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'\"vlad/test\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "'\"999\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'\"vlad/test\"' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'2' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "141",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 98).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "161",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "166",
                    "severity": "error",
                    "message": "'1' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "167",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "severity": "error",
                    "message": "'\"alexandra\"' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "')' has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/3/SelfResignationsITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/3/SelfResignationsITCase.java\nindex f024508e195..4d5af0970d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/3/SelfResignationsITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/naturalize/3/SelfResignationsITCase.java\n@@ -41,19 +41,23 @@ public final class SelfResignationsITCase {\n      */\n     @Test\n     public void returnsTaskResignations() {\n-        final Storage storage = new SelfJooq(new H2Database());\n-        final Project project = storage\n-            .projects()\n-            .getProjectById(\"vlad/test\", Provider.Names.GITHUB);\n+        final Storage storage = new SelfJooq(\n+    new H2Database());\n+        final Project project = storage.projects().getProjectById(\n+    \"vlad/test\", Provider.Names.GITHUB\n+    );\n         MatcherAssert.assertThat(\n             project,\n             Matchers.notNullValue()\n         );\n-        final Task task = project\n-            .tasks().getById(\"999\", \"vlad/test\", Provider.Names.GITHUB);\n+        final Task task = project.tasks().getById(\n+    \"999\",\n+\"vlad/test\", Provider.Names.GITHUB\n+    );\n         MatcherAssert.assertThat(task, Matchers.notNullValue());\n         final Resignations resignations = task.resignations();\n-        MatcherAssert.assertThat(resignations, Matchers.iterableWithSize(2));\n+        MatcherAssert.assertThat(resignations, Matchers.iterableWithSize(\n+    2));\n         for(final Resignation res : resignations) {\n             MatcherAssert.assertThat(\n                 res.task(),\n@@ -61,7 +65,8 @@ public final class SelfResignationsITCase {\n             );\n             MatcherAssert.assertThat(\n                 res.contributor().provider(),\n-                Matchers.is(Provider.Names.GITHUB)\n+                Matchers.is(Provider.Names.GITHUB\n+    )\n             );\n             MatcherAssert.assertThat(\n                 res.timestamp(),\n@@ -82,10 +87,9 @@ public final class SelfResignationsITCase {\n      */\n     @Test\n     public void returnsEmptyTaskResignations() {\n-        final Storage storage = new SelfJooq(new H2Database());\n-        final Project project = storage\n-            .projects()\n-            .getProjectById(\n+        final Storage storage = new SelfJooq(\n+    new H2Database());\n+        final Project project = storage.projects().getProjectById(\n                 \"amihaiemil/docker-java-api\",\n                 Provider.Names.GITHUB\n             );\n@@ -93,8 +97,7 @@ public final class SelfResignationsITCase {\n             project,\n             Matchers.notNullValue()\n         );\n-        final Task task = project\n-            .tasks().getById(\n+        final Task task = project.tasks().getById(\n                 \"123\",\n                 \"amihaiemil/docker-java-api\",\n                 Provider.Names.GITHUB\n@@ -107,12 +110,11 @@ public final class SelfResignationsITCase {\n     /**\n      * SelfResignations.register(...) throws ISE if the Task has no assignee.\n      */\n-    @Test (expected = IllegalStateException.class)\n+    @Test(expected = IllegalStateException.class)\n     public void registerComplainsOnNoAssignee() {\n-        final Storage storage = new SelfJooq(new H2Database());\n-        final Project project = storage\n-            .projects()\n-            .getProjectById(\n+        final Storage storage = new SelfJooq(\n+    new H2Database());\n+        final Project project = storage.projects().getProjectById(\n                 \"vlad/test\",\n                 Provider.Names.GITHUB\n             );\n@@ -120,14 +122,14 @@ public final class SelfResignationsITCase {\n             project,\n             Matchers.notNullValue()\n         );\n-        final Task task = project\n-            .tasks().getById(\n+        final Task task = project.tasks().getById(\n                 \"124\",\n                 \"vlad/test\",\n                 Provider.Names.GITHUB\n             );\n         MatcherAssert.assertThat(task, Matchers.notNullValue());\n-        storage.resignations().register(task, Resignations.Reason.ASKED);\n+        storage.resignations().register(task, Resignations.Reason.ASKED\n+    );\n     }\n \n     /**\n@@ -135,10 +137,9 @@ public final class SelfResignationsITCase {\n      */\n     @Test\n     public void registerWorks() {\n-        final Storage storage = new SelfJooq(new H2Database());\n-        final Project project = storage\n-            .projects()\n-            .getProjectById(\n+        final Storage storage = new SelfJooq(\n+    new H2Database());\n+        final Project project = storage.projects().getProjectById(\n                 \"amihaiemil/docker-java-api\",\n                 Provider.Names.GITHUB\n             );\n@@ -146,8 +147,7 @@ public final class SelfResignationsITCase {\n             project,\n             Matchers.notNullValue()\n         );\n-        final Task task = project\n-            .tasks().getById(\n+        final Task task = project.tasks().getById(\n                 \"124\",\n                 \"amihaiemil/docker-java-api\",\n                 Provider.Names.GITHUB\n@@ -157,13 +157,14 @@ public final class SelfResignationsITCase {\n             task.resignations(),\n             Matchers.emptyIterable()\n         );\n-        final Resignation res = storage\n-            .resignations()\n-            .register(task, Resignations.Reason.DEADLINE);\n+        final Resignation res = storage.resignations().register(task, Resignations.Reason.DEADLINE\n+    );\n         final Resignations resignations = task.resignations();\n         MatcherAssert.assertThat(\n             resignations,\n-            Matchers.iterableWithSize(1)\n+            Matchers.iterableWithSize(\n+    1\n+    )\n         );\n         MatcherAssert.assertThat(\n             res.task(),\n@@ -171,15 +172,18 @@ public final class SelfResignationsITCase {\n         );\n         MatcherAssert.assertThat(\n             res.contributor().username(),\n-            Matchers.equalTo(\"alexandra\")\n+            Matchers.equalTo(\n+    \"alexandra\"\n+    )\n         );\n         MatcherAssert.assertThat(\n             res.reason(),\n-            Matchers.equalTo(Resignations.Reason.DEADLINE)\n+            Matchers.equalTo(Resignations.Reason.DEADLINE\n+    )\n         );\n         MatcherAssert.assertThat(\n             res.timestamp(),\n             Matchers.notNullValue()\n         );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 50, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 53, expected level should be 50.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "column": "55",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 41, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 44, expected level should be 41.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "column": "46",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "column": "93",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 62, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "column": "64",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "78",
                    "column": "12",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "78",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 54, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 54, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 82).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 91).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 57, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "column": "59",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "'for' child has incorrect indentation level 60, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 88).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "88",
                    "column": "62",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "90",
                    "column": "81",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 63, expected level should be 60.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "column": "65",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "'for rcurly' has incorrect indentation level 50, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 50, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 53, expected level should be 50.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "column": "55",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 41, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 44, expected level should be 41.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "column": "46",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 90).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 62, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "column": "64",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "136",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 50, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 53, expected level should be 50.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "column": "55",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 41, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 44, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "159",
                    "column": "46",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "162",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 47, expected level should be 44.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "column": "49",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "172",
                    "severity": "error",
                    "message": "'new' has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 83).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "179",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 50, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 53, expected level should be 50.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "182",
                    "column": "55",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "189",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 41, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "192",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 44, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "192",
                    "column": "46",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "195",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 47, expected level should be 44.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "195",
                    "column": "49",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "200",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 86).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "204",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "206",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "206",
                    "column": "93",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 62, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "207",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 90).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "207",
                    "column": "64",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "209",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 87).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "209",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 65, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "210",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 93).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "210",
                    "column": "67",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "211",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "212",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 89).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "213",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 85).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "213",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 68, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "214",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 96).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "214",
                    "column": "70",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "215",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 88).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "216",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "216",
                    "column": "93",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 71, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "217",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 99).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "217",
                    "column": "73",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                },
                {
                    "line": "218",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "219",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "220",
                    "severity": "error",
                    "message": "'method call rparen' has incorrect indentation level 74, expected level should be 71.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "220",
                    "column": "76",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/3/SelfResignationsITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/3/SelfResignationsITCase.java\nindex f024508e195..274b32b2aa1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/3/SelfResignationsITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/codebuff/3/SelfResignationsITCase.java\n@@ -34,152 +34,189 @@ import org.junit.Test;\n  * @version $Id$\n  * @since 0.0.8\n  */\n+\n+\n public final class SelfResignationsITCase {\n \n     /**\n      * SelfResignations can return a Task's resignations.\n      */\n+\n+\n     @Test\n     public void returnsTaskResignations() {\n-        final Storage storage = new SelfJooq(new H2Database());\n-        final Project project = storage\n-            .projects()\n-            .getProjectById(\"vlad/test\", Provider.Names.GITHUB);\n-        MatcherAssert.assertThat(\n-            project,\n-            Matchers.notNullValue()\n-        );\n-        final Task task = project\n-            .tasks().getById(\"999\", \"vlad/test\", Provider.Names.GITHUB);\n-        MatcherAssert.assertThat(task, Matchers.notNullValue());\n-        final Resignations resignations = task.resignations();\n-        MatcherAssert.assertThat(resignations, Matchers.iterableWithSize(2));\n-        for(final Resignation res : resignations) {\n-            MatcherAssert.assertThat(\n-                res.task(),\n-                Matchers.is(task)\n-            );\n-            MatcherAssert.assertThat(\n-                res.contributor().provider(),\n-                Matchers.is(Provider.Names.GITHUB)\n-            );\n-            MatcherAssert.assertThat(\n-                res.timestamp(),\n-                Matchers.notNullValue()\n-            );\n-            MatcherAssert.assertThat(\n-                res.reason(),\n-                Matchers.not(\n-                    Matchers.isEmptyOrNullString()\n-                )\n-            );\n-        }\n+        final Storage storage= new SelfJooq(\n+new H2Database()\n+                               );\n+\n+\n+        final Project project= storage.projects() .getProjectById(\n+                                                      \"vlad/test\",\n+                                                      Provider.Names.GITHUB\n+                                                  ); MatcherAssert.assertThat(\n+                                                         project,\n+                                                         Matchers.notNullValue()\n+                                                     );\n+\n+\n+        final Task task= project.tasks() .getById(\n+                                             \"999\",\n+                                             \"vlad/test\",\n+                                             Provider.Names.GITHUB\n+                                         ); MatcherAssert.assertThat(\n+                                                task,\n+                                                Matchers.notNullValue()\n+                                            );\n+\n+\n+        final Resignations resignations= task.resignations(); MatcherAssert.assertThat(\n+                                                                  resignations,\n+                                                                  Matchers.iterableWithSize( 2)\n+                                                              );\n+\n+\n+        for( final Resignation res: resignations) {\n+                                                      MatcherAssert.assertThat(\n+                                                          res.task(),\n+                                                          Matchers.is( task)\n+                                                      ); MatcherAssert.assertThat(\n+                                                             res.contributor() .provider(),\n+                                                             Matchers.is( Provider.Names.GITHUB)\n+                                                         ); MatcherAssert.assertThat(\n+                                                                res.timestamp(),\n+                                                                Matchers.notNullValue()\n+                                                            ); MatcherAssert.assertThat(\n+                                                                   res.reason(),\n+                                                                   Matchers.not( Matchers.isEmptyOrNullString() )\n+                                                               );\n+                                                  }\n     }\n \n     /**\n      * SelfResignations returns empty if the Task has no registered\n      * resignations.\n      */\n+\n     @Test\n     public void returnsEmptyTaskResignations() {\n-        final Storage storage = new SelfJooq(new H2Database());\n-        final Project project = storage\n-            .projects()\n-            .getProjectById(\n-                \"amihaiemil/docker-java-api\",\n-                Provider.Names.GITHUB\n-            );\n-        MatcherAssert.assertThat(\n-            project,\n-            Matchers.notNullValue()\n-        );\n-        final Task task = project\n-            .tasks().getById(\n-                \"123\",\n-                \"amihaiemil/docker-java-api\",\n-                Provider.Names.GITHUB\n-            );\n-        MatcherAssert.assertThat(task, Matchers.notNullValue());\n-        final Resignations resignations = task.resignations();\n-        MatcherAssert.assertThat(resignations, Matchers.emptyIterable());\n+        final Storage storage= new SelfJooq(\n+new H2Database()\n+                               );\n+\n+\n+        final Project project= storage.projects() .getProjectById(\n+                                                      \"amihaiemil/docker-java-api\",\n+                                                      Provider.Names.GITHUB\n+                                                  ); MatcherAssert.assertThat(\n+                                                         project,\n+                                                         Matchers.notNullValue()\n+                                                     );\n+\n+\n+        final Task task= project.tasks() .getById(\n+                                             \"123\",\n+                                             \"amihaiemil/docker-java-api\",\n+                                             Provider.Names.GITHUB\n+                                         ); MatcherAssert.assertThat(\n+                                                task,\n+                                                Matchers.notNullValue()\n+                                            );\n+\n+\n+        final Resignations resignations= task.resignations(); MatcherAssert.assertThat(\n+                                                                  resignations,\n+                                                                  Matchers.emptyIterable()\n+                                                              );\n     }\n \n     /**\n      * SelfResignations.register(...) throws ISE if the Task has no assignee.\n      */\n-    @Test (expected = IllegalStateException.class)\n+\n+    @Test( expected= IllegalStateException.class)\n     public void registerComplainsOnNoAssignee() {\n-        final Storage storage = new SelfJooq(new H2Database());\n-        final Project project = storage\n-            .projects()\n-            .getProjectById(\n-                \"vlad/test\",\n-                Provider.Names.GITHUB\n-            );\n-        MatcherAssert.assertThat(\n-            project,\n-            Matchers.notNullValue()\n-        );\n-        final Task task = project\n-            .tasks().getById(\n-                \"124\",\n-                \"vlad/test\",\n-                Provider.Names.GITHUB\n-            );\n-        MatcherAssert.assertThat(task, Matchers.notNullValue());\n-        storage.resignations().register(task, Resignations.Reason.ASKED);\n+        final Storage storage= new SelfJooq(\n+new H2Database()\n+                               );\n+\n+\n+        final Project project= storage.projects() .getProjectById(\n+                                                      \"vlad/test\",\n+                                                      Provider.Names.GITHUB\n+                                                  ); MatcherAssert.assertThat(\n+                                                         project,\n+                                                         Matchers.notNullValue()\n+                                                     );\n+\n+\n+        final Task task= project.tasks() .getById(\n+                                             \"124\",\n+                                             \"vlad/test\",\n+                                             Provider.Names.GITHUB\n+                                         ); MatcherAssert.assertThat(\n+                                                task,\n+                                                Matchers.notNullValue()\n+                                            ); storage.resignations().register(\n+                                                   task,\n+                                                   Resignations.Reason.ASKED\n+                                               );\n     }\n \n     /**\n      * SelfResignations.register(...) works.\n      */\n+\n     @Test\n     public void registerWorks() {\n-        final Storage storage = new SelfJooq(new H2Database());\n-        final Project project = storage\n-            .projects()\n-            .getProjectById(\n-                \"amihaiemil/docker-java-api\",\n-                Provider.Names.GITHUB\n-            );\n-        MatcherAssert.assertThat(\n-            project,\n-            Matchers.notNullValue()\n-        );\n-        final Task task = project\n-            .tasks().getById(\n-                \"124\",\n-                \"amihaiemil/docker-java-api\",\n-                Provider.Names.GITHUB\n-            );\n-        MatcherAssert.assertThat(task, Matchers.notNullValue());\n-        MatcherAssert.assertThat(\n-            task.resignations(),\n-            Matchers.emptyIterable()\n-        );\n-        final Resignation res = storage\n-            .resignations()\n-            .register(task, Resignations.Reason.DEADLINE);\n-        final Resignations resignations = task.resignations();\n-        MatcherAssert.assertThat(\n-            resignations,\n-            Matchers.iterableWithSize(1)\n-        );\n-        MatcherAssert.assertThat(\n-            res.task(),\n-            Matchers.is(task)\n-        );\n-        MatcherAssert.assertThat(\n-            res.contributor().username(),\n-            Matchers.equalTo(\"alexandra\")\n-        );\n-        MatcherAssert.assertThat(\n-            res.reason(),\n-            Matchers.equalTo(Resignations.Reason.DEADLINE)\n-        );\n-        MatcherAssert.assertThat(\n-            res.timestamp(),\n-            Matchers.notNullValue()\n-        );\n+        final Storage storage= new SelfJooq(\n+new H2Database()\n+                               );\n+\n+\n+        final Project project= storage.projects() .getProjectById(\n+                                                      \"amihaiemil/docker-java-api\",\n+                                                      Provider.Names.GITHUB\n+                                                  ); MatcherAssert.assertThat(\n+                                                         project,\n+                                                         Matchers.notNullValue()\n+                                                     );\n+\n+\n+        final Task task= project.tasks() .getById(\n+                                             \"124\",\n+                                             \"amihaiemil/docker-java-api\",\n+                                             Provider.Names.GITHUB\n+                                         ); MatcherAssert.assertThat(\n+                                                task,\n+                                                Matchers.notNullValue()\n+                                            ); MatcherAssert.assertThat(\n+                                                   task.resignations(),\n+                                                   Matchers.emptyIterable()\n+                                               );\n+\n+\n+        final Resignation res= storage.resignations() .register(\n+                                                          task,\n+                                                          Resignations.Reason.DEADLINE\n+                                                      );\n+\n+\n+        final Resignations resignations= task.resignations(); MatcherAssert.assertThat(\n+                                                                  resignations,\n+                                                                  Matchers.iterableWithSize( 1)\n+                                                              ); MatcherAssert.assertThat(\n+                                                                     res.task(),\n+                                                                     Matchers.is( task)\n+                                                                 ); MatcherAssert.assertThat(\n+                                                                        res.contributor() .username(),\n+                                                                        Matchers.equalTo(\n+                                                                        \"alexandra\" )\n+                                                                    ); MatcherAssert.assertThat(\n+                                                                           res.reason(),\n+                                                                           Matchers.equalTo( Resignations.Reason.DEADLINE)\n+                                                                       ); MatcherAssert.assertThat(\n+                                                                              res.timestamp(),\n+                                                                              Matchers.notNullValue()\n+                                                                          );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 157
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/3/SelfResignationsITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_random/3/SelfResignationsITCase.java\nindex f024508e195..46d5855e42d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/3/SelfResignationsITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_random/3/SelfResignationsITCase.java\n@@ -54,7 +54,7 @@ public final class SelfResignationsITCase {\n         MatcherAssert.assertThat(task, Matchers.notNullValue());\n         final Resignations resignations = task.resignations();\n         MatcherAssert.assertThat(resignations, Matchers.iterableWithSize(2));\n-        for(final Resignation res : resignations) {\n+        for (final Resignation res : resignations) {\n             MatcherAssert.assertThat(\n                 res.task(),\n                 Matchers.is(task)\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/3/SelfResignationsITCase.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_three_grams/3/SelfResignationsITCase.java\nindex f024508e195..46d5855e42d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/errored/1/3/SelfResignationsITCase.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/self-xdsd-self-storage/styler_three_grams/3/SelfResignationsITCase.java\n@@ -54,7 +54,7 @@ public final class SelfResignationsITCase {\n         MatcherAssert.assertThat(task, Matchers.notNullValue());\n         final Resignations resignations = task.resignations();\n         MatcherAssert.assertThat(resignations, Matchers.iterableWithSize(2));\n-        for(final Resignation res : resignations) {\n+        for (final Resignation res : resignations) {\n             MatcherAssert.assertThat(\n                 res.task(),\n                 Matchers.is(task)\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "146",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/146/BufferedBitSetReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/146/BufferedBitSetReader.java\nindex 1f6a9fc3199..9f762fcc216 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/146/BufferedBitSetReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/146/BufferedBitSetReader.java\n@@ -71,4 +71,4 @@ public class BufferedBitSetReader {\n     //return bytes.get(index);\n     return bytes[index];\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/146/BufferedBitSetReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/146/BufferedBitSetReader.java\nindex 1f6a9fc3199..0c4c35c34f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/146/BufferedBitSetReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/146/BufferedBitSetReader.java\n@@ -17,9 +17,12 @@\n \n package com.tencent.angel.spark.ml.tree.util;\n \n+\n+\n public class BufferedBitSetReader {\n \n   //private final ByteBuffer bytes;\n+\n   private final byte[] bytes;\n   private int readIndexH;\n   private int readMaskH;\n@@ -33,6 +36,7 @@ public class BufferedBitSetReader {\n     this.bytes = bytes;\n     //int capacity = bytes.capacity() * 8;\n     //readIndexT = bytes.capacity() - 1;\n+\n     int capacity = bytes.length * 8;\n     this.readIndexT = bytes.length - 1;\n     for (int i = numBits; i < capacity; i++) {\n@@ -45,6 +49,7 @@ public class BufferedBitSetReader {\n       readBufferH = readFromBuffer(readIndexH++);\n       readMaskH = 0b10000000;\n     }\n+\n     boolean bit = (readBufferH & readMaskH) > 0;\n     readMaskH >>= 1;\n     return bit;\n@@ -55,6 +60,7 @@ public class BufferedBitSetReader {\n       readBufferT = readFromBuffer(readIndexT--);\n       readMaskT = 0b00000001;\n     }\n+\n     boolean bit = (readBufferT & readMaskT) > 0;\n     readMaskT = (readMaskT << 1) & 0b11111111;\n     return bit;\n@@ -71,4 +77,4 @@ public class BufferedBitSetReader {\n     //return bytes.get(index);\n     return bytes[index];\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
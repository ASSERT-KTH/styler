{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1903",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "76",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "99",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "110",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "120",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "128",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1903/SpatialIndexReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1903/SpatialIndexReader.java\nindex 031c858979e..c9309a30908 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1903/SpatialIndexReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1903/SpatialIndexReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import org.neo4j.collection.primitive.PrimitiveLongResourceIterator;\n@@ -40,134 +41,129 @@ import static org.neo4j.kernel.impl.index.schema.fusion.FusionIndexBase.forAll;\n \n class SpatialIndexReader extends SpatialIndexCache<SpatialIndexPartReader<NativeSchemaValue>> implements IndexReader\n {\n-    private final SchemaIndexDescriptor descriptor;\n+  private final SchemaIndexDescriptor descriptor;\n \n-    SpatialIndexReader( SchemaIndexDescriptor descriptor, SpatialIndexAccessor accessor )\n-    {\n-        super( new PartFactory( accessor ) );\n-        this.descriptor = descriptor;\n-    }\n+  SpatialIndexReader(SchemaIndexDescriptor descriptor, SpatialIndexAccessor accessor)\n+  {\n+    super(new PartFactory(accessor));\n+    this.descriptor = descriptor;\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        forAll( Resource::close, this );\n-    }\n+  @Override\n+  public void close()\n+  {\n+    forAll(Resource::close, this);\n+  }\n \n-    @Override\n-    public long countIndexedNodes( long nodeId, Value... propertyValues )\n-    {\n-        NativeSchemaIndexReader<SpatialSchemaKey,NativeSchemaValue> partReader =\n-                uncheckedSelect( ((PointValue) propertyValues[0]).getCoordinateReferenceSystem() );\n-        return partReader == null ? 0L : partReader.countIndexedNodes( nodeId, propertyValues );\n-    }\n+  @Override\n+  public long countIndexedNodes(long nodeId, Value... propertyValues)\n+  {\n+    NativeSchemaIndexReader<SpatialSchemaKey, NativeSchemaValue> partReader =\n+        uncheckedSelect(((PointValue) propertyValues[0]).getCoordinateReferenceSystem());\n+    return partReader == null ? 0L : partReader.countIndexedNodes(nodeId, propertyValues);\n+  }\n \n-    @Override\n-    public IndexSampler createSampler()\n-    {\n-        return new FusionIndexSampler( Iterators.stream( iterator() ).map( IndexReader::createSampler ).toArray( IndexSampler[]::new ) );\n-    }\n+  @Override\n+  public IndexSampler createSampler()\n+  {\n+    return new FusionIndexSampler(Iterators.stream(iterator()).map(IndexReader::createSampler).toArray(IndexSampler[]::new));\n+  }\n \n-    @Override\n-    public PrimitiveLongResourceIterator query( IndexQuery... predicates )\n+  @Override\n+  public PrimitiveLongResourceIterator query(IndexQuery... predicates)\n+  {\n+    NodeValueIterator nodeValueIterator = new NodeValueIterator();\n+    query(nodeValueIterator, IndexOrder.NONE, predicates);\n+    return nodeValueIterator;\n+  }\n+\n+  @Override\n+  public void query(IndexProgressor.NodeValueClient cursor, IndexOrder indexOrder, IndexQuery... predicates)\n+  {\n+    if (predicates.length != 1)\n     {\n-        NodeValueIterator nodeValueIterator = new NodeValueIterator();\n-        query( nodeValueIterator, IndexOrder.NONE, predicates );\n-        return nodeValueIterator;\n+      throw new IllegalArgumentException(\"Only single property spatial indexes are supported.\");\n     }\n-\n-    @Override\n-    public void query( IndexProgressor.NodeValueClient cursor, IndexOrder indexOrder, IndexQuery... predicates )\n+    IndexQuery predicate = predicates[0];\n+    if (predicate instanceof ExistsPredicate)\n     {\n-        if ( predicates.length != 1 )\n+      loadAll();\n+      BridgingIndexProgressor multiProgressor = new BridgingIndexProgressor(cursor, descriptor.schema().getPropertyIds());\n+      cursor.initialize(descriptor, multiProgressor, predicates);\n+      for (NativeSchemaIndexReader<SpatialSchemaKey, NativeSchemaValue> reader : this)\n+      {\n+        reader.query(multiProgressor, indexOrder, predicates);\n+      }\n+    } else\n+    {\n+      if (validPredicate(predicate))\n+      {\n+        CoordinateReferenceSystem crs;\n+        if (predicate instanceof IndexQuery.ExactPredicate)\n         {\n-            throw new IllegalArgumentException( \"Only single property spatial indexes are supported.\" );\n-        }\n-        IndexQuery predicate = predicates[0];\n-        if ( predicate instanceof ExistsPredicate )\n+          crs = ((PointValue) ((IndexQuery.ExactPredicate) predicate).value()).getCoordinateReferenceSystem();\n+        } else if (predicate instanceof IndexQuery.GeometryRangePredicate)\n         {\n-            loadAll();\n-            BridgingIndexProgressor multiProgressor = new BridgingIndexProgressor( cursor, descriptor.schema().getPropertyIds() );\n-            cursor.initialize( descriptor, multiProgressor, predicates );\n-            for ( NativeSchemaIndexReader<SpatialSchemaKey,NativeSchemaValue> reader : this )\n-            {\n-                reader.query( multiProgressor, indexOrder, predicates );\n-            }\n+          crs = ((IndexQuery.GeometryRangePredicate) predicate).crs();\n+        } else\n+        {\n+          throw new IllegalArgumentException(\"Wrong type of predicate, couldn't get CoordinateReferenceSystem\");\n         }\n-        else\n+        SpatialIndexPartReader<NativeSchemaValue> part = uncheckedSelect(crs);\n+        if (part != null)\n+        {\n+          part.query(cursor, indexOrder, predicates);\n+        } else\n         {\n-            if ( validPredicate( predicate ) )\n-            {\n-                CoordinateReferenceSystem crs;\n-                if ( predicate instanceof IndexQuery.ExactPredicate )\n-                {\n-                    crs = ((PointValue) ((IndexQuery.ExactPredicate) predicate).value()).getCoordinateReferenceSystem();\n-                }\n-                else if ( predicate instanceof IndexQuery.GeometryRangePredicate )\n-                {\n-                    crs = ((IndexQuery.GeometryRangePredicate) predicate).crs();\n-                }\n-                else\n-                {\n-                    throw new IllegalArgumentException( \"Wrong type of predicate, couldn't get CoordinateReferenceSystem\" );\n-                }\n-                SpatialIndexPartReader<NativeSchemaValue> part = uncheckedSelect( crs );\n-                if ( part != null )\n-                {\n-                    part.query( cursor, indexOrder, predicates );\n-                }\n-                else\n-                {\n-                    cursor.initialize( descriptor, IndexProgressor.EMPTY, predicates );\n-                }\n-            }\n-            else\n-            {\n-                cursor.initialize( descriptor, IndexProgressor.EMPTY, predicates );\n-            }\n+          cursor.initialize(descriptor, IndexProgressor.EMPTY, predicates);\n         }\n+      } else\n+      {\n+        cursor.initialize(descriptor, IndexProgressor.EMPTY, predicates);\n+      }\n     }\n+  }\n \n-    @Override\n-    public boolean hasFullValuePrecision( IndexQuery... predicates )\n-    {\n-        return false;\n-    }\n+  @Override\n+  public boolean hasFullValuePrecision(IndexQuery... predicates)\n+  {\n+    return false;\n+  }\n \n-    @Override\n-    public void distinctValues( IndexProgressor.NodeValueClient cursor, PropertyAccessor propertyAccessor )\n+  @Override\n+  public void distinctValues(IndexProgressor.NodeValueClient cursor, PropertyAccessor propertyAccessor)\n+  {\n+    loadAll();\n+    BridgingIndexProgressor multiProgressor = new BridgingIndexProgressor(cursor, descriptor.schema().getPropertyIds());\n+    cursor.initialize(descriptor, multiProgressor, new IndexQuery[0]);\n+    for (NativeSchemaIndexReader<?, NativeSchemaValue> reader : this)\n     {\n-        loadAll();\n-        BridgingIndexProgressor multiProgressor = new BridgingIndexProgressor( cursor, descriptor.schema().getPropertyIds() );\n-        cursor.initialize( descriptor, multiProgressor, new IndexQuery[0] );\n-        for ( NativeSchemaIndexReader<?,NativeSchemaValue> reader : this )\n-        {\n-            reader.distinctValues( multiProgressor, propertyAccessor );\n-        }\n+      reader.distinctValues(multiProgressor, propertyAccessor);\n     }\n+  }\n+\n+  private boolean validPredicate(IndexQuery predicate)\n+  {\n+    return predicate instanceof IndexQuery.ExactPredicate || predicate instanceof IndexQuery.RangePredicate;\n+  }\n \n-    private boolean validPredicate( IndexQuery predicate )\n+  /**\n+   * To create TemporalIndexPartReaders on demand, the PartFactory maintains a reference to the parent TemporalIndexAccessor.\n+   * The creation of a part reader can then be delegated to the correct PartAccessor.\n+   */\n+  static class PartFactory implements Factory<SpatialIndexPartReader<NativeSchemaValue>>\n+  {\n+    private final SpatialIndexAccessor accessor;\n+\n+    PartFactory(SpatialIndexAccessor accessor)\n     {\n-        return predicate instanceof IndexQuery.ExactPredicate || predicate instanceof IndexQuery.RangePredicate;\n+      this.accessor = accessor;\n     }\n \n-    /**\n-     * To create TemporalIndexPartReaders on demand, the PartFactory maintains a reference to the parent TemporalIndexAccessor.\n-     * The creation of a part reader can then be delegated to the correct PartAccessor.\n-     */\n-    static class PartFactory implements Factory<SpatialIndexPartReader<NativeSchemaValue>>\n+    @Override\n+    public SpatialIndexPartReader<NativeSchemaValue> newSpatial(CoordinateReferenceSystem crs)\n     {\n-        private final SpatialIndexAccessor accessor;\n-\n-        PartFactory( SpatialIndexAccessor accessor )\n-        {\n-            this.accessor = accessor;\n-        }\n-\n-        @Override\n-        public SpatialIndexPartReader<NativeSchemaValue> newSpatial( CoordinateReferenceSystem crs )\n-        {\n-            return accessor.selectOrElse( crs, SpatialIndexAccessor.PartAccessor::newReader, null );\n-        }\n+      return accessor.selectOrElse(crs, SpatialIndexAccessor.PartAccessor::newReader, null);\n     }\n+  }\n }\n",
            "diff_size": 158
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
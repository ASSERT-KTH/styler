{
    "project_name": "decorators-squad-versioneye-api",
    "error_id": "41",
    "information": {
        "errors": [
            {
                "line": "64",
                "column": "11",
                "severity": "error",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "        this.entry = new JdkRequest(\"https://www.versioneye.com/api/v2\")\n            .header(\"Accept\", \"application/json\");\n        if(!token.isEmpty()) {\n            this.entry = this.entry.header(\"Cookie\", \"api_key=\" + token);\n        }\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "64",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/41/RtVersionEye.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/intellij/41/RtVersionEye.java\nindex cbeb04c0ef2..7604ddd3b38 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/41/RtVersionEye.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/intellij/41/RtVersionEye.java\n@@ -1,17 +1,17 @@\n /**\n  * Copyright (c) 2017, Mihai Emil Andronache\n  * All rights reserved.\n- *\n+ * <p>\n  * Redistribution and use in source and binary forms, with or without\n- *  modification, are permitted provided that the following conditions are met:\n+ * modification, are permitted provided that the following conditions are met:\n  * Redistributions of source code must retain the above copyright notice, this\n- *  list of conditions and the following disclaimer.\n- *  Redistributions in binary form must reproduce the above copyright notice,\n- *  this list of conditions and the following disclaimer in the documentation\n- *  and/or other materials provided with the distribution.\n+ * list of conditions and the following disclaimer.\n+ * Redistributions in binary form must reproduce the above copyright notice,\n+ * this list of conditions and the following disclaimer in the documentation\n+ * and/or other materials provided with the distribution.\n  * Neither the name of the copyright holder nor the names of its\n- *  contributors may be used to endorse or promote products derived from\n- *  this software without specific prior written permission.\n+ * contributors may be used to endorse or promote products derived from\n+ * this software without specific prior written permission.\n  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n@@ -25,6 +25,7 @@\n  * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n  * SUCH DAMAGE.\n  */\n+\n package com.amihaiemil.versioneye;\n \n import com.jcabi.http.Request;\n@@ -61,7 +62,7 @@ public final class RtVersionEye implements VersionEye {\n     public RtVersionEye(final String token) {\n         this.entry = new JdkRequest(\"https://www.versioneye.com/api/v2\")\n             .header(\"Accept\", \"application/json\");\n-        if(!token.isEmpty()) {\n+        if (!token.isEmpty()) {\n             this.entry = this.entry.header(\"Cookie\", \"api_key=\" + token);\n         }\n     }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "64",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/41/RtVersionEye.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/naturalize/41/RtVersionEye.java\nindex cbeb04c0ef2..9b5f8cac757 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/41/RtVersionEye.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/naturalize/41/RtVersionEye.java\n@@ -64,6 +64,7 @@ public final class RtVersionEye implements VersionEye {\n         if(!token.isEmpty()) {\n             this.entry = this.entry.header(\"Cookie\", \"api_key=\" + token);\n         }\n+\n     }\n \n     @Override\n@@ -71,4 +72,4 @@ public final class RtVersionEye implements VersionEye {\n         return new RtServices(this.entry);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 4, expected is 8, indentation should be the same level as line 66.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 71, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 113).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'if' has incorrect indentation level 107, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "column": "110",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "71",
                    "column": "112",
                    "severity": "error",
                    "message": "'!' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'if' child has incorrect indentation level 0, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'if rcurly' has incorrect indentation level 129, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Line is longer than 80 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "'ctor def rcurly' has incorrect indentation level 67, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/41/RtVersionEye.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/codebuff/41/RtVersionEye.java\nindex cbeb04c0ef2..f42313eb552 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/41/RtVersionEye.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/codebuff/41/RtVersionEye.java\n@@ -40,16 +40,22 @@ import com.jcabi.http.request.JdkRequest;\n  *  Request object (so we can pass Fake requests when unit testing). Also, the\n  *  user might want to configure the original HTTP request.\n  */\n+\n+\n public final class RtVersionEye implements VersionEye {\n \n     /**\n      * HTTP request.\n      */\n+\n+\n     private Request entry;\n \n     /**\n      * Ctor.\n      */\n+\n+\n     public RtVersionEye() {\n         this(\"\");\n     }\n@@ -57,18 +63,19 @@ public final class RtVersionEye implements VersionEye {\n     /**\n      * Ctor.\n      * @param token Api token.\n-     */\n-    public RtVersionEye(final String token) {\n-        this.entry = new JdkRequest(\"https://www.versioneye.com/api/v2\")\n-            .header(\"Accept\", \"application/json\");\n-        if(!token.isEmpty()) {\n-            this.entry = this.entry.header(\"Cookie\", \"api_key=\" + token);\n-        }\n-    }\n+     */ public RtVersionEye(final String token) {\n+                                                                       this.entry = new JdkRequest(\"https://www.versioneye.com/api/v2\")\n+                                                                           .header(\"Accept\", \"application/json\");\n+\n+\n+                                                                                                           if(! token.isEmpty()) {\n+this.entry = this.entry.header(\"Cookie\", \"api_key=\"+ token);\n+                                                                                                                                 }\n+                                                                   }\n \n     @Override\n     public Services services() {\n         return new RtServices(this.entry);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "64",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'if lparen' has incorrect indentation level 12, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/41/RtVersionEye.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/styler_three_grams/41/RtVersionEye.java\nindex cbeb04c0ef2..ce576b1712c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/errored/1/41/RtVersionEye.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/decorators-squad-versioneye-api/styler_three_grams/41/RtVersionEye.java\n@@ -61,7 +61,8 @@ public final class RtVersionEye implements VersionEye {\n     public RtVersionEye(final String token) {\n         this.entry = new JdkRequest(\"https://www.versioneye.com/api/v2\")\n             .header(\"Accept\", \"application/json\");\n-        if(!token.isEmpty()) {\n+        if\n+            (!token.isEmpty()) {\n             this.entry = this.entry.header(\"Cookie\", \"api_key=\" + token);\n         }\n     }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
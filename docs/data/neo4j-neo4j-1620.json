{
    "project_name": "neo4j-neo4j",
    "error_id": "1620",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1620/StringWrappingStringValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1620/StringWrappingStringValue.java\nindex 5718a5f8d5f..0b350e27593 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1620/StringWrappingStringValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1620/StringWrappingStringValue.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import java.util.regex.Matcher;\n@@ -34,11 +35,11 @@ import static org.neo4j.values.utils.ValueMath.HASH_CONSTANT;\n  */\n final class StringWrappingStringValue extends StringValue\n {\n-    private static final long SHALLOW_SIZE = shallowSizeOfInstance( StringWrappingStringValue.class );\n+    private static final long SHALLOW_SIZE = shallowSizeOfInstance(StringWrappingStringValue.class);\n \n     private final String value;\n \n-    StringWrappingStringValue( String value )\n+    StringWrappingStringValue(String value)\n     {\n         assert value != null;\n         this.value = value;\n@@ -53,7 +54,7 @@ final class StringWrappingStringValue extends StringValue\n     @Override\n     public int length()\n     {\n-        return value.codePointCount( 0, value.length() );\n+        return value.codePointCount(0, value.length());\n     }\n \n     @Override\n@@ -66,146 +67,146 @@ final class StringWrappingStringValue extends StringValue\n     protected int computeHashToMemoize()\n     {\n         //NOTE that we are basing the hash code on code points instead of char[] values.\n-        if ( value.isEmpty() )\n+        if (value.isEmpty())\n         {\n             return 0;\n         }\n         int h = 1, length = value.length();\n-        for ( int offset = 0, codePoint; offset < length; offset += Character.charCount( codePoint ) )\n+        for (int offset = 0, codePoint; offset < length; offset += Character.charCount(codePoint))\n         {\n-            codePoint = value.codePointAt( offset );\n+            codePoint = value.codePointAt(offset);\n             h = HASH_CONSTANT * h + codePoint;\n         }\n         return h;\n     }\n \n     @Override\n-    public long updateHash( HashFunction hashFunction, long hash )\n+    public long updateHash(HashFunction hashFunction, long hash)\n     {\n-        return updateHash( hashFunction, hash, value );\n+        return updateHash(hashFunction, hash, value);\n     }\n \n-    public static long updateHash( HashFunction hashFunction, long hash, String value )\n+    public static long updateHash(HashFunction hashFunction, long hash, String value)\n     {\n         //NOTE that we are basing the hash code on code points instead of char[] values.\n         int length = value.length();\n         int codePointCount = 0;\n-        for ( int offset = 0; offset < length; )\n+        for (int offset = 0; offset < length; )\n         {\n-            int codePointA = value.codePointAt( offset );\n+            int codePointA = value.codePointAt(offset);\n             int codePointB = 0;\n-            offset += Character.charCount( codePointA );\n+            offset += Character.charCount(codePointA);\n             codePointCount++;\n-            if ( offset < length )\n+            if (offset < length)\n             {\n-                codePointB = value.codePointAt( offset );\n-                offset += Character.charCount( codePointB );\n+                codePointB = value.codePointAt(offset);\n+                offset += Character.charCount(codePointB);\n                 codePointCount++;\n             }\n-            hash = hashFunction.update( hash, ((long) codePointA << 32) + codePointB );\n+            hash = hashFunction.update(hash, ((long) codePointA << 32) + codePointB);\n         }\n-        return hashFunction.update( hash, codePointCount );\n+        return hashFunction.update(hash, codePointCount);\n     }\n \n     @Override\n-    public TextValue substring( int start, int length )\n+    public TextValue substring(int start, int length)\n     {\n-        int s = Math.min( start, length() );\n-        int e = Math.min( s + length, length() );\n-        int codePointStart = value.offsetByCodePoints( 0, s );\n-        int codePointEnd = value.offsetByCodePoints( 0, e );\n+        int s = Math.min(start, length());\n+        int e = Math.min(s + length, length());\n+        int codePointStart = value.offsetByCodePoints(0, s);\n+        int codePointEnd = value.offsetByCodePoints(0, e);\n \n-        return Values.stringValue( value.substring( codePointStart, codePointEnd ) );\n+        return Values.stringValue(value.substring(codePointStart, codePointEnd));\n     }\n \n     @Override\n     public TextValue trim()\n     {\n-        int start = ltrimIndex( value );\n-        int end = rtrimIndex( value );\n-        return Values.stringValue( value.substring( start, Math.max( end, start ) ) );\n+        int start = ltrimIndex(value);\n+        int end = rtrimIndex(value);\n+        return Values.stringValue(value.substring(start, Math.max(end, start)));\n     }\n \n     @Override\n     public TextValue ltrim()\n     {\n-        int start = ltrimIndex( value );\n-        return Values.stringValue( value.substring( start ) );\n+        int start = ltrimIndex(value);\n+        return Values.stringValue(value.substring(start));\n     }\n \n     @Override\n     public TextValue rtrim()\n     {\n-        int end = rtrimIndex( value );\n-        return Values.stringValue( value.substring( 0, end ) );\n+        int end = rtrimIndex(value);\n+        return Values.stringValue(value.substring(0, end));\n     }\n \n     @Override\n     public TextValue reverse()\n     {\n-        StringBuilder stringBuilder = new StringBuilder( value() );\n-        return Values.stringValue( stringBuilder.reverse().toString() );\n+        StringBuilder stringBuilder = new StringBuilder(value());\n+        return Values.stringValue(stringBuilder.reverse().toString());\n     }\n \n     @Override\n-    public TextValue plus( TextValue other )\n+    public TextValue plus(TextValue other)\n     {\n-        return new StringWrappingStringValue( value + other.stringValue() );\n+        return new StringWrappingStringValue(value + other.stringValue());\n     }\n \n     @Override\n-    public boolean startsWith( TextValue other )\n+    public boolean startsWith(TextValue other)\n     {\n-        return value.startsWith( other.stringValue() );\n+        return value.startsWith(other.stringValue());\n     }\n \n     @Override\n-    public boolean endsWith( TextValue other )\n+    public boolean endsWith(TextValue other)\n     {\n-        return value.endsWith( other.stringValue() );\n+        return value.endsWith(other.stringValue());\n     }\n \n     @Override\n-    public boolean contains( TextValue other )\n+    public boolean contains(TextValue other)\n     {\n-        return value.contains( other.stringValue() );\n+        return value.contains(other.stringValue());\n     }\n \n     @Override\n-    Matcher matcher( Pattern pattern )\n+    Matcher matcher(Pattern pattern)\n     {\n-        return pattern.matcher( value );\n+        return pattern.matcher(value);\n     }\n \n     @Override\n     public long estimatedHeapUsage()\n     {\n-        return SHALLOW_SIZE + sizeOf( value );\n+        return SHALLOW_SIZE + sizeOf(value);\n     }\n \n-    private int ltrimIndex( String value )\n+    private int ltrimIndex(String value)\n     {\n         int start = 0, length = value.length();\n-        while ( start < length )\n+        while (start < length)\n         {\n-            int codePoint = value.codePointAt( start );\n-            if ( !Character.isWhitespace( codePoint ) )\n+            int codePoint = value.codePointAt(start);\n+            if (!Character.isWhitespace(codePoint))\n             {\n                 break;\n             }\n-            start += Character.charCount( codePoint );\n+            start += Character.charCount(codePoint);\n         }\n \n         return start;\n     }\n \n-    private int rtrimIndex( String value )\n+    private int rtrimIndex(String value)\n     {\n         int end = value.length();\n-        while ( end > 0 )\n+        while (end > 0)\n         {\n-            int codePoint = value.codePointBefore( end );\n-            if ( !Character.isWhitespace( codePoint ) )\n+            int codePoint = value.codePointBefore(end);\n+            if (!Character.isWhitespace(codePoint))\n             {\n                 break;\n             }\n",
            "diff_size": 53
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
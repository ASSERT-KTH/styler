{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3560",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "78",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "64",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "67",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "92",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "92",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "122",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "153",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "81",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3560/ReplicatedTransactionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3560/ReplicatedTransactionFactory.java\nindex 71744219757..b0f035a979f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3560/ReplicatedTransactionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3560/ReplicatedTransactionFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.tx;\n \n import io.netty.buffer.ByteBuf;\n@@ -45,123 +46,118 @@ import static org.neo4j.io.ByteUnit.gibiBytes;\n \n public class ReplicatedTransactionFactory\n {\n-    private static final long MAX_SERIALIZED_TX_SIZE = gibiBytes( 1 );\n+  private static final long MAX_SERIALIZED_TX_SIZE = gibiBytes(1);\n+\n+  private ReplicatedTransactionFactory()\n+  {\n+    throw new AssertionError(\"Should not be instantiated\");\n+  }\n \n-    private ReplicatedTransactionFactory()\n+  public static ReplicatedTransaction createImmutableReplicatedTransaction(TransactionRepresentation tx)\n+  {\n+    ByteBuf transactionBuffer = Unpooled.buffer();\n+\n+    NetworkFlushableChannelNetty4 channel = new NetworkFlushableChannelNetty4(transactionBuffer, MAX_SERIALIZED_TX_SIZE);\n+    try\n+    {\n+      TransactionSerializer.write(tx, channel);\n+    } catch (MessageTooBigException e)\n     {\n-        throw new AssertionError( \"Should not be instantiated\" );\n+      throw new IllegalStateException(\"Transaction size was too large to replicate across the cluster.\", e);\n+    } catch (IOException e)\n+    {\n+      // TODO: This should not happen. All operations are in memory, no IOException should be thrown\n+      // Easier said than done though, we use the LogEntry handling routines which throw IOException\n+      throw new RuntimeException(e);\n     }\n \n-    public static ReplicatedTransaction createImmutableReplicatedTransaction( TransactionRepresentation tx  )\n+    /*\n+     * This trims down the array to send up to the actual index it was written. Not doing this would send additional\n+     * zeroes which not only wasteful, but also not handled by the LogEntryReader receiving this.\n+     */\n+    byte[] txBytes = Arrays.copyOf(transactionBuffer.array(), transactionBuffer.writerIndex());\n+    transactionBuffer.release();\n+\n+    return new ReplicatedTransaction(txBytes);\n+  }\n+\n+  public static TransactionRepresentation extractTransactionRepresentation(ReplicatedTransaction transactionCommand, byte[] extraHeader)\n+  {\n+    ByteBuf txBuffer = Unpooled.wrappedBuffer(transactionCommand.getTxBytes());\n+    NetworkReadableClosableChannelNetty4 channel = new NetworkReadableClosableChannelNetty4(txBuffer);\n+\n+    try\n     {\n-        ByteBuf transactionBuffer = Unpooled.buffer();\n-\n-        NetworkFlushableChannelNetty4 channel = new NetworkFlushableChannelNetty4( transactionBuffer, MAX_SERIALIZED_TX_SIZE );\n-        try\n-        {\n-            TransactionSerializer.write( tx, channel );\n-        }\n-        catch ( MessageTooBigException e )\n-        {\n-            throw new IllegalStateException( \"Transaction size was too large to replicate across the cluster.\", e );\n-        }\n-        catch ( IOException e )\n-        {\n-            // TODO: This should not happen. All operations are in memory, no IOException should be thrown\n-            // Easier said than done though, we use the LogEntry handling routines which throw IOException\n-            throw new RuntimeException( e );\n-        }\n-\n-        /*\n-         * This trims down the array to send up to the actual index it was written. Not doing this would send additional\n-         * zeroes which not only wasteful, but also not handled by the LogEntryReader receiving this.\n-         */\n-        byte[] txBytes = Arrays.copyOf( transactionBuffer.array(), transactionBuffer.writerIndex() );\n-        transactionBuffer.release();\n-\n-        return new ReplicatedTransaction( txBytes );\n+      return read(channel, extraHeader);\n+    } catch (IOException e)\n+    {\n+      // TODO: This should not happen. All operations are in memory, no IOException should be thrown\n+      // Easier said than done though, we use the LogEntry handling routines which throw IOException\n+      throw new RuntimeException(e);\n     }\n+  }\n \n-    public static TransactionRepresentation extractTransactionRepresentation( ReplicatedTransaction transactionCommand, byte[] extraHeader )\n+  private static class TransactionSerializer\n+  {\n+    public static void write(TransactionRepresentation tx, NetworkFlushableChannelNetty4 channel) throws\n+        IOException\n     {\n-        ByteBuf txBuffer = Unpooled.wrappedBuffer( transactionCommand.getTxBytes() );\n-        NetworkReadableClosableChannelNetty4 channel = new NetworkReadableClosableChannelNetty4( txBuffer );\n-\n-        try\n-        {\n-            return read( channel, extraHeader );\n-        }\n-        catch ( IOException e )\n-        {\n-            // TODO: This should not happen. All operations are in memory, no IOException should be thrown\n-            // Easier said than done though, we use the LogEntry handling routines which throw IOException\n-            throw new RuntimeException( e );\n-        }\n+      channel.putInt(tx.getAuthorId());\n+      channel.putInt(tx.getMasterId());\n+      channel.putLong(tx.getLatestCommittedTxWhenStarted());\n+      channel.putLong(tx.getTimeStarted());\n+      channel.putLong(tx.getTimeCommitted());\n+      channel.putInt(tx.getLockSessionId());\n+\n+      byte[] additionalHeader = tx.additionalHeader();\n+      if (additionalHeader != null)\n+      {\n+        channel.putInt(additionalHeader.length);\n+        channel.put(additionalHeader, additionalHeader.length);\n+      } else\n+      {\n+        channel.putInt(0);\n+      }\n+\n+      new LogEntryWriter(channel).serialize(tx);\n     }\n-\n-    private static class TransactionSerializer\n+  }\n+\n+  public static TransactionRepresentation read(NetworkReadableClosableChannelNetty4 channel, byte[] extraHeader) throws IOException\n+  {\n+    LogEntryReader<ReadableClosablePositionAwareChannel> reader = new VersionAwareLogEntryReader<>(\n+        new RecordStorageCommandReaderFactory(), InvalidLogEntryHandler.STRICT);\n+\n+    int authorId = channel.getInt();\n+    int masterId = channel.getInt();\n+    long latestCommittedTxWhenStarted = channel.getLong();\n+    long timeStarted = channel.getLong();\n+    long timeCommitted = channel.getLong();\n+    int lockSessionId = channel.getInt();\n+\n+    int headerLength = channel.getInt();\n+    byte[] header;\n+    if (headerLength == 0)\n     {\n-        public static void write( TransactionRepresentation tx, NetworkFlushableChannelNetty4 channel ) throws\n-                IOException\n-        {\n-            channel.putInt( tx.getAuthorId() );\n-            channel.putInt( tx.getMasterId() );\n-            channel.putLong( tx.getLatestCommittedTxWhenStarted() );\n-            channel.putLong( tx.getTimeStarted() );\n-            channel.putLong( tx.getTimeCommitted() );\n-            channel.putInt( tx.getLockSessionId() );\n-\n-            byte[] additionalHeader = tx.additionalHeader();\n-            if ( additionalHeader != null )\n-            {\n-                channel.putInt( additionalHeader.length );\n-                channel.put( additionalHeader, additionalHeader.length );\n-            }\n-            else\n-            {\n-                channel.putInt( 0 );\n-            }\n-\n-            new LogEntryWriter( channel ).serialize( tx );\n-        }\n+      header = extraHeader;\n+    } else\n+    {\n+      header = new byte[headerLength];\n     }\n \n-    public static TransactionRepresentation read( NetworkReadableClosableChannelNetty4 channel, byte[] extraHeader ) throws IOException\n+    channel.get(header, headerLength);\n+\n+    LogEntryCommand entryRead;\n+    List<StorageCommand> commands = new LinkedList<>();\n+\n+    while ((entryRead = (LogEntryCommand) reader.readLogEntry(channel)) != null)\n     {\n-        LogEntryReader<ReadableClosablePositionAwareChannel> reader = new VersionAwareLogEntryReader<>(\n-                new RecordStorageCommandReaderFactory(), InvalidLogEntryHandler.STRICT );\n-\n-        int authorId = channel.getInt();\n-        int masterId = channel.getInt();\n-        long latestCommittedTxWhenStarted = channel.getLong();\n-        long timeStarted = channel.getLong();\n-        long timeCommitted = channel.getLong();\n-        int lockSessionId = channel.getInt();\n-\n-        int headerLength = channel.getInt();\n-        byte[] header;\n-        if ( headerLength == 0 )\n-        {\n-            header = extraHeader;\n-        }\n-        else\n-        {\n-            header = new byte[headerLength];\n-        }\n-\n-        channel.get( header, headerLength );\n-\n-        LogEntryCommand entryRead;\n-        List<StorageCommand> commands = new LinkedList<>();\n-\n-        while ( (entryRead = (LogEntryCommand) reader.readLogEntry( channel )) != null )\n-        {\n-            commands.add( entryRead.getCommand() );\n-        }\n-\n-        PhysicalTransactionRepresentation tx = new PhysicalTransactionRepresentation( commands );\n-        tx.setHeader( header, masterId, authorId, timeStarted, latestCommittedTxWhenStarted, timeCommitted, lockSessionId );\n-\n-        return tx;\n+      commands.add(entryRead.getCommand());\n     }\n+\n+    PhysicalTransactionRepresentation tx = new PhysicalTransactionRepresentation(commands);\n+    tx.setHeader(header, masterId, authorId, timeStarted, latestCommittedTxWhenStarted, timeCommitted, lockSessionId);\n+\n+    return tx;\n+  }\n }\n",
            "diff_size": 174
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
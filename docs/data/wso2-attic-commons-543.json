{
    "project_name": "wso2-attic-commons",
    "error_id": "543",
    "information": {
        "errors": [
            {
                "line": "88",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 125).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n        if (partitionTypeList != null ? !partitionTypeList.equals(that.partitionTypeList) : that.partitionTypeList != null) {\n            return false;\n        }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/543/PartitionDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/543/PartitionDefinition.java\nindex 24ec4c4c2c2..484eff844f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/543/PartitionDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/543/PartitionDefinition.java\n@@ -85,8 +85,9 @@ public class PartitionDefinition implements ExecutionPlan {\n         if (partitionId != null ? !partitionId.equals(that.partitionId) : that.partitionId != null) {\n             return false;\n         }\n-        if (partitionTypeList != null ? !partitionTypeList.equals(that.partitionTypeList) : that.partitionTypeList != null) {\n-            return false;\n+        if (partitionTypeList\n+            != null ? !partitionTypeList.equals(that.partitionTypeList) : that.partitionTypeList != null) {\n+             return false;\n         }\n \n         return true;\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/543/PartitionDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/543/PartitionDefinition.java\nindex 24ec4c4c2c2..86aa73532e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/543/PartitionDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/543/PartitionDefinition.java\n@@ -1,13 +1,13 @@\n /*\n  * Copyright (c) 2005-2013, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n- * \n+ *\n  * WSO2 Inc. licenses this file to you under the Apache License,\n  * Version 2.0 (the \"License\"); you may not use this file except\n  * in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  * http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing,\n  * software distributed under the License is distributed on an\n  * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n@@ -33,69 +33,70 @@ import java.util.List;\n  */\n public class PartitionDefinition implements ExecutionPlan {\n \n-    private String partitionId;\n-    private List<PartitionType> partitionTypeList = new ArrayList<PartitionType>();\n-\n-    public PartitionDefinition name(String name) {\n-        this.partitionId = name;\n-        return this;\n-    }\n-\n-    public PartitionDefinition partitionBy(Variable variable) {\n-        this.partitionTypeList.add(new VariablePartitionType(variable));\n-        return this;\n-    }\n-\n-    public PartitionDefinition partitionBy(Condition condition, String label) {\n-        this.partitionTypeList.add(new RangePartitionType(condition, label));\n-        return this;\n+  private String partitionId;\n+  private List<PartitionType> partitionTypeList = new ArrayList<PartitionType>();\n+\n+  public PartitionDefinition name(String name) {\n+    this.partitionId = name;\n+    return this;\n+  }\n+\n+  public PartitionDefinition partitionBy(Variable variable) {\n+    this.partitionTypeList.add(new VariablePartitionType(variable));\n+    return this;\n+  }\n+\n+  public PartitionDefinition partitionBy(Condition condition, String label) {\n+    this.partitionTypeList.add(new RangePartitionType(condition, label));\n+    return this;\n+  }\n+\n+  public String getPartitionId() {\n+    return partitionId;\n+  }\n+\n+  public void addPartitionType(PartitionType partitionType) {\n+    this.partitionTypeList.add(partitionType);\n+  }\n+\n+  public List<PartitionType> getPartitionTypeList() {\n+    return partitionTypeList;\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"PartitionDefinition{\" +\n+      \"partitionId='\" + partitionId + '\\'' +\n+      \", partitionTypeList=\" + partitionTypeList +\n+      '}';\n+  }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n     }\n-\n-    public String getPartitionId() {\n-        return partitionId;\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n     }\n \n-    public void addPartitionType(PartitionType partitionType) {\n-        this.partitionTypeList.add(partitionType);\n-    }\n+    PartitionDefinition that = (PartitionDefinition) o;\n \n-    public List<PartitionType> getPartitionTypeList() {\n-        return partitionTypeList;\n+    if (partitionId != null ? !partitionId.equals(that.partitionId) : that.partitionId != null) {\n+      return false;\n     }\n-\n-    @Override\n-    public String toString() {\n-        return \"PartitionDefinition{\" +\n-               \"partitionId='\" + partitionId + '\\'' +\n-               \", partitionTypeList=\" + partitionTypeList +\n-               '}';\n+    if (partitionTypeList != null ? !partitionTypeList.equals(that.partitionTypeList) :\n+      that.partitionTypeList != null) {\n+      return false;\n     }\n \n-    @Override\n-    public boolean equals(Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-\n-        PartitionDefinition that = (PartitionDefinition) o;\n-\n-        if (partitionId != null ? !partitionId.equals(that.partitionId) : that.partitionId != null) {\n-            return false;\n-        }\n-        if (partitionTypeList != null ? !partitionTypeList.equals(that.partitionTypeList) : that.partitionTypeList != null) {\n-            return false;\n-        }\n-\n-        return true;\n-    }\n+    return true;\n+  }\n \n-    @Override\n-    public int hashCode() {\n-        int result = partitionId != null ? partitionId.hashCode() : 0;\n-        result = 31 * result + (partitionTypeList != null ? partitionTypeList.hashCode() : 0);\n-        return result;\n-    }\n+  @Override\n+  public int hashCode() {\n+    int result = partitionId != null ? partitionId.hashCode() : 0;\n+    result = 31 * result + (partitionTypeList != null ? partitionTypeList.hashCode() : 0);\n+    return result;\n+  }\n }\n",
            "diff_size": 86
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/543/PartitionDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/543/PartitionDefinition.java\nindex 24ec4c4c2c2..e985c517a45 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/543/PartitionDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/543/PartitionDefinition.java\n@@ -98,4 +98,4 @@ public class PartitionDefinition implements ExecutionPlan {\n         result = 31 * result + (partitionTypeList != null ? partitionTypeList.hashCode() : 0);\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/543/PartitionDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/543/PartitionDefinition.java\nindex 24ec4c4c2c2..484eff844f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/543/PartitionDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/543/PartitionDefinition.java\n@@ -85,8 +85,9 @@ public class PartitionDefinition implements ExecutionPlan {\n         if (partitionId != null ? !partitionId.equals(that.partitionId) : that.partitionId != null) {\n             return false;\n         }\n-        if (partitionTypeList != null ? !partitionTypeList.equals(that.partitionTypeList) : that.partitionTypeList != null) {\n-            return false;\n+        if (partitionTypeList\n+            != null ? !partitionTypeList.equals(that.partitionTypeList) : that.partitionTypeList != null) {\n+             return false;\n         }\n \n         return true;\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/543/PartitionDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/543/PartitionDefinition.java\nindex 24ec4c4c2c2..520e5f028c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/543/PartitionDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/543/PartitionDefinition.java\n@@ -85,8 +85,9 @@ public class PartitionDefinition implements ExecutionPlan {\n         if (partitionId != null ? !partitionId.equals(that.partitionId) : that.partitionId != null) {\n             return false;\n         }\n-        if (partitionTypeList != null ? !partitionTypeList.equals(that.partitionTypeList) : that.partitionTypeList != null) {\n-            return false;\n+        if (partitionTypeList != null\n+                ? !partitionTypeList.equals(that.partitionTypeList) : that.partitionTypeList != null) {\n+             return false;\n         }\n \n         return true;\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1712",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "63",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "68",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "188",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "190",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "224",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "233",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1712/LinuxNativeAccess.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1712/LinuxNativeAccess.java\nindex 42108f7950f..094f628e0c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1712/LinuxNativeAccess.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1712/LinuxNativeAccess.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.nativeimpl;\n \n import com.sun.jna.LastErrorException;\n@@ -59,13 +60,12 @@ public class LinuxNativeAccess implements NativeAccess\n         boolean available = false;\n         try\n         {\n-            if ( Platform.isLinux() )\n+            if (Platform.isLinux())\n             {\n-                Native.register( Platform.C_LIBRARY_NAME );\n+                Native.register(Platform.C_LIBRARY_NAME);\n                 available = true;\n             }\n-        }\n-        catch ( Throwable t )\n+        } catch (Throwable t)\n         {\n             initFailure = t;\n         }\n@@ -78,33 +78,36 @@ public class LinuxNativeAccess implements NativeAccess\n      * thus allowing the kernel to perform appropriate optimizations.\n      * The advice applies to a region starting at offset and extending for len bytes (or until the end of the file if len is 0)\n      * within the file referred to by fd. The advice is not binding; it merely constitutes an expectation on behalf of the application.\n-     * @param fd file descriptor\n+     *\n+     * @param fd     file descriptor\n      * @param offset offset in the file\n-     * @param len advise len in bytes\n-     * @param flag advise options\n+     * @param len    advise len in bytes\n+     * @param flag   advise options\n      * @return 0 on success. On error, an error number is returned\n      */\n-    private static native int posix_fadvise( int fd, long offset, long len, int flag ) throws LastErrorException;\n+    private static native int posix_fadvise(int fd, long offset, long len, int flag) throws LastErrorException;\n \n     /**\n-     *  Ensures that disk space is allocated for the file referred to by the file descriptor fd for the bytes in the range starting at offset\n-     *  and continuing for len bytes.\n-     *  After a successful call to posix_fallocate, subsequent writes to bytes in the specified range are guaranteed not to fail because of lack of disk space.\n-     *  If the size of the file is less than offset+len, then the file is increased to this size; otherwise the file size is left unchanged.\n-     * @param fd file descriptor\n+     * Ensures that disk space is allocated for the file referred to by the file descriptor fd for the bytes in the range starting at offset\n+     * and continuing for len bytes.\n+     * After a successful call to posix_fallocate, subsequent writes to bytes in the specified range are guaranteed not to fail because of lack of disk space.\n+     * If the size of the file is less than offset+len, then the file is increased to this size; otherwise the file size is left unchanged.\n+     *\n+     * @param fd     file descriptor\n      * @param offset offset in the file\n-     * @param len len in bytes\n+     * @param len    len in bytes\n      * @return returns zero on success, or an error number on failure\n      */\n-    private static native int posix_fallocate( int fd, long offset, long len ) throws LastErrorException;\n+    private static native int posix_fallocate(int fd, long offset, long len) throws LastErrorException;\n \n     /**\n      * Return pointer to a string describing error number, possibly using the LC_MESSAGES part of the current locale to select the appropriate language.\n-     * @param errnum error number to describe\n-     * @param buffPtr pointer to error message buffer\n+     *\n+     * @param errnum     error number to describe\n+     * @param buffPtr    pointer to error message buffer\n      * @param buffLength length of error message buffer\n      */\n-    public static native long strerror_r( int errnum, long buffPtr, int buffLength );\n+    public static native long strerror_r(int errnum, long buffPtr, int buffLength);\n \n     @Override\n     public boolean isAvailable()\n@@ -113,92 +116,90 @@ public class LinuxNativeAccess implements NativeAccess\n     }\n \n     @Override\n-    public NativeCallResult tryEvictFromCache( int fd )\n+    public NativeCallResult tryEvictFromCache(int fd)\n     {\n-        if ( fd <= 0 )\n+        if (fd <= 0)\n         {\n-            return new NativeCallResult( ERROR, \"Incorrect file descriptor.\" );\n+            return new NativeCallResult(ERROR, \"Incorrect file descriptor.\");\n         }\n-        return wrapResult( () -> posix_fadvise( fd, 0, 0, POSIX_FADV_DONTNEED ) );\n+        return wrapResult(() -> posix_fadvise(fd, 0, 0, POSIX_FADV_DONTNEED));\n     }\n \n     @Override\n-    public NativeCallResult tryAdviseSequentialAccess( int fd )\n+    public NativeCallResult tryAdviseSequentialAccess(int fd)\n     {\n-        if ( fd <= 0 )\n+        if (fd <= 0)\n         {\n-            return new NativeCallResult( ERROR, \"Incorrect file descriptor.\" );\n+            return new NativeCallResult(ERROR, \"Incorrect file descriptor.\");\n         }\n-        return wrapResult( () -> posix_fadvise( fd, 0, 0, POSIX_FADV_SEQUENTIAL ) );\n+        return wrapResult(() -> posix_fadvise(fd, 0, 0, POSIX_FADV_SEQUENTIAL));\n     }\n \n     @Override\n-    public NativeCallResult tryAdviseToKeepInCache( int fd )\n+    public NativeCallResult tryAdviseToKeepInCache(int fd)\n     {\n-        if ( fd <= 0 )\n+        if (fd <= 0)\n         {\n-            return new NativeCallResult( ERROR, \"Incorrect file descriptor.\" );\n+            return new NativeCallResult(ERROR, \"Incorrect file descriptor.\");\n         }\n-        return wrapResult( () -> posix_fadvise( fd, 0, 0, POSIX_FADV_WILLNEED ) );\n+        return wrapResult(() -> posix_fadvise(fd, 0, 0, POSIX_FADV_WILLNEED));\n     }\n \n     @Override\n-    public NativeCallResult tryPreallocateSpace( int fd, long bytes )\n+    public NativeCallResult tryPreallocateSpace(int fd, long bytes)\n     {\n-        if ( fd <= 0 )\n+        if (fd <= 0)\n         {\n-            return new NativeCallResult( ERROR, \"Incorrect file descriptor.\" );\n+            return new NativeCallResult(ERROR, \"Incorrect file descriptor.\");\n         }\n-        if ( bytes <= 0 )\n+        if (bytes <= 0)\n         {\n-            return new NativeCallResult( ERROR, \"Number of bytes to preallocate should be positive. Requested: \" + bytes );\n+            return new NativeCallResult(ERROR, \"Number of bytes to preallocate should be positive. Requested: \" + bytes);\n         }\n-        return wrapResult( () -> posix_fallocate( fd, 0, bytes ) );\n+        return wrapResult(() -> posix_fallocate(fd, 0, bytes));\n     }\n \n     @Override\n     public String describe()\n     {\n-        if ( NATIVE_ACCESS_AVAILABLE )\n+        if (NATIVE_ACCESS_AVAILABLE)\n         {\n             return \"Linux native access is available.\";\n         }\n-        StringBuilder descriptionBuilder = new StringBuilder( \"Linux native access is not available.\" );\n-        if ( INITIALIZATION_FAILURE != null )\n+        StringBuilder descriptionBuilder = new StringBuilder(\"Linux native access is not available.\");\n+        if (INITIALIZATION_FAILURE != null)\n         {\n-            String exception = getStackTrace( INITIALIZATION_FAILURE );\n-            descriptionBuilder.append( \" Details: \" ).append( exception );\n+            String exception = getStackTrace(INITIALIZATION_FAILURE);\n+            descriptionBuilder.append(\" Details: \").append(exception);\n         }\n         return descriptionBuilder.toString();\n     }\n \n-    private static NativeCallResult wrapResult( NativeCall call )\n+    private static NativeCallResult wrapResult(NativeCall call)\n     {\n         try\n         {\n             int result = call.call();\n-            if ( result == SUCCESS )\n+            if (result == SUCCESS)\n             {\n                 return NativeCallResult.SUCCESS;\n-            }\n-            else\n+            } else\n             {\n-                return new NativeCallResult( result, tryExtractError( result ) );\n+                return new NativeCallResult(result, tryExtractError(result));\n             }\n-        }\n-        catch ( LastErrorException e )\n+        } catch (LastErrorException e)\n         {\n-            return new NativeCallResult( e.getErrorCode(), e.getMessage() );\n+            return new NativeCallResult(e.getErrorCode(), e.getMessage());\n         }\n     }\n \n-    private static String tryExtractError( int errorCode )\n+    private static String tryExtractError(int errorCode)\n     {\n         // The GNU C Library uses a buffer of 1024 characters for strerror().\n         // This buffer size therefore should be sufficient to avoid an ERANGE error when calling strerror_r() and strerror_l().\n         final int bufferLength = 1024;\n-        final long bufferPointer = Native.malloc( bufferLength );\n-        if ( bufferPointer > 0 )\n+        final long bufferPointer = Native.malloc(bufferLength);\n+        if (bufferPointer > 0)\n         {\n             try\n             {\n@@ -208,7 +209,7 @@ public class LinuxNativeAccess implements NativeAccess\n //                The XSI-compliant version is provided with the feature test\n //                macros  settings  shown in the SYNOPSIS; otherwise the GNU-specific version is provided.\n //                The XSI-compliant strerror_r() is preferred for portable applications.\n-                long result = strerror_r( errorCode, bufferPointer, bufferLength );\n+                long result = strerror_r(errorCode, bufferPointer, bufferLength);\n \n //                The GNU-specific strerror_r() returns a pointer to a string containing the error message.\n //                This may be either a pointer to a string that the function stores in buf, or a  pointer\n@@ -220,23 +221,21 @@ public class LinuxNativeAccess implements NativeAccess\n //                The XSI-compliant strerror_r() function returns 0 on success.\n //                On error, a (positive) error number is returned (since glibc 2.13), or -1 is returned and errno is set to  indicate\n //                the error (glibc versions before 2.13).\n-                if ( result == SUCCESS )\n+                if (result == SUCCESS)\n                 {\n-                    return new Pointer( bufferPointer ).getString( 0 );\n+                    return new Pointer(bufferPointer).getString(0);\n                 }\n                 // not error, not EINVAL and not ERANGE\n-                if ( result != ERROR && result != EINVAL && result != ERANGE )\n+                if (result != ERROR && result != EINVAL && result != ERANGE)\n                 {\n-                    return new Pointer( result ).getString( 0 );\n+                    return new Pointer(result).getString(0);\n                 }\n-            }\n-            catch ( Throwable t )\n+            } catch (Throwable t)\n             {\n                 // ignore and use generic error message instead.\n-            }\n-            finally\n+            } finally\n             {\n-                Native.free( bufferPointer );\n+                Native.free(bufferPointer);\n             }\n         }\n         return \"Error occurred calling native function. Please check error code.\";\n",
            "diff_size": 66
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
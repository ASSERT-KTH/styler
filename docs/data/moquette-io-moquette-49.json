{
    "project_name": "moquette-io-moquette",
    "error_id": "49",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "warning",
                "message": "missing copyright header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "package io.moquette.broker;\n\nimport io.moquette.spi.impl.subscriptions.Topic;\nimport io.netty.handler.codec.mqtt.MqttPublishMessage;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "missing copyright header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "missing copyright header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/49/IRetainedRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/intellij/49/IRetainedRepository.java\nindex 499f67a51e5..0f6221e8f43 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/49/IRetainedRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/intellij/49/IRetainedRepository.java\n@@ -4,11 +4,11 @@ import io.moquette.spi.impl.subscriptions.Topic;\n import io.netty.handler.codec.mqtt.MqttPublishMessage;\n \n public interface IRetainedRepository {\n-    void cleanRetained(Topic topic);\n+  void cleanRetained(Topic topic);\n \n-    void retain(Topic topic, MqttPublishMessage msg);\n+  void retain(Topic topic, MqttPublishMessage msg);\n \n-    boolean isEmtpy();\n+  boolean isEmtpy();\n \n-    MqttPublishMessage retainedOnTopic(String topic);\n+  MqttPublishMessage retainedOnTopic(String topic);\n }\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "missing copyright header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/49/IRetainedRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/naturalize/49/IRetainedRepository.java\nindex 499f67a51e5..d7a2252bd34 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/49/IRetainedRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/naturalize/49/IRetainedRepository.java\n@@ -4,6 +4,7 @@ import io.moquette.spi.impl.subscriptions.Topic;\n import io.netty.handler.codec.mqtt.MqttPublishMessage;\n \n public interface IRetainedRepository {\n+\n     void cleanRetained(Topic topic);\n \n     void retain(Topic topic, MqttPublishMessage msg);\n@@ -11,4 +12,4 @@ public interface IRetainedRepository {\n     boolean isEmtpy();\n \n     MqttPublishMessage retainedOnTopic(String topic);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "missing copyright header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "10",
                    "severity": "warning",
                    "message": "two or more consecutive empty lines",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpMultilineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/49/IRetainedRepository.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/codebuff/49/IRetainedRepository.java\nindex 499f67a51e5..2a3497f5951 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/errored/1/49/IRetainedRepository.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/moquette-io-moquette/codebuff/49/IRetainedRepository.java\n@@ -3,12 +3,16 @@ package io.moquette.broker;\n import io.moquette.spi.impl.subscriptions.Topic;\n import io.netty.handler.codec.mqtt.MqttPublishMessage;\n \n+\n public interface IRetainedRepository {\n+\n     void cleanRetained(Topic topic);\n \n     void retain(Topic topic, MqttPublishMessage msg);\n \n+\n     boolean isEmtpy();\n \n+\n     MqttPublishMessage retainedOnTopic(String topic);\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "missing copyright header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
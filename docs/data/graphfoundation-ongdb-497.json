{
    "project_name": "graphfoundation-ongdb",
    "error_id": "497",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/497/BoltChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/497/BoltChannel.java\nindex 9e344b6b211..b55fa512ddb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/497/BoltChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/497/BoltChannel.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt;\n \n import io.netty.channel.Channel;\n@@ -30,68 +31,68 @@ import org.neo4j.bolt.logging.BoltMessageLogger;\n  */\n public class BoltChannel implements AutoCloseable, BoltConnectionDescriptor\n {\n-    private final String connector;\n-    private final Channel rawChannel;\n-    private final BoltMessageLogger messageLogger;\n+  private final String connector;\n+  private final Channel rawChannel;\n+  private final BoltMessageLogger messageLogger;\n \n-    public static BoltChannel open( String connector, Channel rawChannel,\n-                                    BoltMessageLogger messageLogger )\n-    {\n-        return new BoltChannel( connector, rawChannel, messageLogger );\n-    }\n+  public static BoltChannel open(String connector, Channel rawChannel,\n+                                 BoltMessageLogger messageLogger)\n+  {\n+    return new BoltChannel(connector, rawChannel, messageLogger);\n+  }\n \n-    private BoltChannel( String connector, Channel rawChannel,\n-                         BoltMessageLogger messageLogger )\n-    {\n-        this.connector = connector;\n-        this.rawChannel = rawChannel;\n-        this.messageLogger = messageLogger;\n-        messageLogger.serverEvent( \"OPEN\" );\n-    }\n+  private BoltChannel(String connector, Channel rawChannel,\n+                      BoltMessageLogger messageLogger)\n+  {\n+    this.connector = connector;\n+    this.rawChannel = rawChannel;\n+    this.messageLogger = messageLogger;\n+    messageLogger.serverEvent(\"OPEN\");\n+  }\n \n-    public Channel rawChannel()\n-    {\n-        return rawChannel;\n-    }\n+  public Channel rawChannel()\n+  {\n+    return rawChannel;\n+  }\n \n-    public BoltMessageLogger log()\n-    {\n-        return messageLogger;\n-    }\n+  public BoltMessageLogger log()\n+  {\n+    return messageLogger;\n+  }\n \n-    @Override\n-    public void close()\n+  @Override\n+  public void close()\n+  {\n+    Channel rawChannel = rawChannel();\n+    if (rawChannel.isOpen())\n     {\n-        Channel rawChannel = rawChannel();\n-        if ( rawChannel.isOpen() )\n-        {\n-            messageLogger.serverEvent( \"CLOSE\" );\n-            rawChannel.close().syncUninterruptibly();\n-        }\n+      messageLogger.serverEvent(\"CLOSE\");\n+      rawChannel.close().syncUninterruptibly();\n     }\n+  }\n \n-    @Override\n-    public String id()\n-    {\n-        return rawChannel().id().asLongText();\n-    }\n+  @Override\n+  public String id()\n+  {\n+    return rawChannel().id().asLongText();\n+  }\n \n-    @Override\n-    public String connector()\n-    {\n-        return connector;\n-    }\n+  @Override\n+  public String connector()\n+  {\n+    return connector;\n+  }\n \n-    @Override\n-    public SocketAddress clientAddress()\n-    {\n-        return rawChannel.remoteAddress();\n-    }\n+  @Override\n+  public SocketAddress clientAddress()\n+  {\n+    return rawChannel.remoteAddress();\n+  }\n \n-    @Override\n-    public SocketAddress serverAddress()\n-    {\n-        return rawChannel.localAddress();\n-    }\n+  @Override\n+  public SocketAddress serverAddress()\n+  {\n+    return rawChannel.localAddress();\n+  }\n \n }\n",
            "diff_size": 57
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/497/BoltChannel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/497/BoltChannel.java\nindex 9e344b6b211..69318c6bb39 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/497/BoltChannel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/497/BoltChannel.java\n@@ -34,15 +34,13 @@ public class BoltChannel implements AutoCloseable, BoltConnectionDescriptor\n     private final Channel rawChannel;\n     private final BoltMessageLogger messageLogger;\n \n-    public static BoltChannel open( String connector, Channel rawChannel,\n-                                    BoltMessageLogger messageLogger )\n-    {\n+    public static BoltChannel open( String connector, Channel rawChannel, BoltMessageLogger messageLogger )\n+{\n         return new BoltChannel( connector, rawChannel, messageLogger );\n     }\n \n-    private BoltChannel( String connector, Channel rawChannel,\n-                         BoltMessageLogger messageLogger )\n-    {\n+    private BoltChannel( String connector, Channel rawChannel, BoltMessageLogger messageLogger )\n+{\n         this.connector = connector;\n         this.rawChannel = rawChannel;\n         this.messageLogger = messageLogger;\n@@ -93,5 +91,4 @@ public class BoltChannel implements AutoCloseable, BoltConnectionDescriptor\n     {\n         return rawChannel.localAddress();\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Stratio-bdt",
    "error_id": "175",
    "information": {
        "errors": [
            {
                "line": "115",
                "column": "56",
                "severity": "error",
                "message": "'...' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": "    }\n\n    public void modify(String dn, AttributeModification ... modifications) throws LdapException {\n        Connection conn = null;\n        try {\n            conn = this.connFactory.getConnection();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/175/LdapUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/175/LdapUtils.java\nindex 238efa93516..fc1e7dfd0b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/175/LdapUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/175/LdapUtils.java\n@@ -112,7 +112,7 @@ public class LdapUtils {\n         }\n     }\n \n-    public void modify(String dn, AttributeModification ... modifications) throws LdapException {\n+    public void modify(String dn, AttributeModification... modifications) throws LdapException {\n         Connection conn = null;\n         try {\n             conn = this.connFactory.getConnection();\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/175/LdapUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/175/LdapUtils.java\nindex 238efa93516..8a9bb55d9f7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/175/LdapUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/175/LdapUtils.java\n@@ -53,15 +53,20 @@ public class LdapUtils {\n \n     public LdapUtils() {\n         if (System.getProperty(\"LDAP_BASE\") != null) {\n-            this.queryUser = \"cn=\" + System.getProperty(\"LDAP_USER\") + \",\" + System.getProperty(\"LDAP_BASE\");\n+            this.queryUser =\n+                \"cn=\" + System.getProperty(\"LDAP_USER\") + \",\" + System.getProperty(\"LDAP_BASE\");\n         } else {\n-            this.queryUser = \"cn=\" + System.getProperty(\"LDAP_USER\") + \",\" + ThreadProperty.get(\"LDAP_BASE\");\n+            this.queryUser =\n+                \"cn=\" + System.getProperty(\"LDAP_USER\") + \",\" + ThreadProperty.get(\"LDAP_BASE\");\n         }\n \n         this.password = System.getProperty(\"LDAP_PASSWORD\");\n         this.ssl = (System.getProperty(\"LDAP_SSL\", \"true\")).equals(\"true\") ? true : false;\n-        String ldapUrl = System.getProperty(\"LDAP_URL\") != null ? System.getProperty(\"LDAP_URL\") : ThreadProperty.get(\"LDAP_URL\") != null ? ThreadProperty.get(\"LDAP_URL\") : \"\";\n-        String ldapPort = System.getProperty(\"LDAP_PORT\") != null ? System.getProperty(\"LDAP_PORT\") : ThreadProperty.get(\"LDAP_PORT\") != null ? ThreadProperty.get(\"LDAP_PORT\") : \"\";\n+        String ldapUrl = System.getProperty(\"LDAP_URL\") != null ? System.getProperty(\"LDAP_URL\") :\n+            ThreadProperty.get(\"LDAP_URL\") != null ? ThreadProperty.get(\"LDAP_URL\") : \"\";\n+        String ldapPort =\n+            System.getProperty(\"LDAP_PORT\") != null ? System.getProperty(\"LDAP_PORT\") :\n+                ThreadProperty.get(\"LDAP_PORT\") != null ? ThreadProperty.get(\"LDAP_PORT\") : \"\";\n         this.url = (this.ssl == true ? \"ldaps://\" : \"ldap://\") + ldapUrl + \":\" + ldapPort;\n     }\n \n@@ -76,7 +81,8 @@ public class LdapUtils {\n         sslCfg.setCredentialConfig(crdCfg);\n         this.config.setSslConfig(sslCfg);\n \n-        this.config.setConnectionInitializer(new BindConnectionInitializer(queryUser, new Credential(password)));\n+        this.config.setConnectionInitializer(\n+            new BindConnectionInitializer(queryUser, new Credential(password)));\n         this.pool = new BlockingConnectionPool(new DefaultConnectionFactory(this.config));\n         if (!this.pool.isInitialized()) {\n             this.pool.initialize();\n@@ -112,7 +118,7 @@ public class LdapUtils {\n         }\n     }\n \n-    public void modify(String dn, AttributeModification ... modifications) throws LdapException {\n+    public void modify(String dn, AttributeModification... modifications) throws LdapException {\n         Connection conn = null;\n         try {\n             conn = this.connFactory.getConnection();\n@@ -154,8 +160,8 @@ public class LdapUtils {\n         System.arraycopy(salt, 0, hashPlusSalt, hash.length, salt.length);\n \n         return new StringBuilder().append(\"{SSHA}\")\n-                .append(Base64.getEncoder().encodeToString(hashPlusSalt))\n-                .toString();\n+            .append(Base64.getEncoder().encodeToString(hashPlusSalt))\n+            .toString();\n     }\n \n     public int getLDAPMaxUidNumber() throws LdapException {\n@@ -184,7 +190,8 @@ public class LdapUtils {\n                 break;\n         }\n \n-        Matcher matcher = this.getSearchResult(base, \"cn=*\", attr, \".*?\" + attr + \"\\\\[(\\\\d+)\\\\].*?\");\n+        Matcher matcher =\n+            this.getSearchResult(base, \"cn=*\", attr, \".*?\" + attr + \"\\\\[(\\\\d+)\\\\].*?\");\n         int actualId;\n         while (matcher.find()) {\n             actualId = Integer.parseInt(matcher.group(1));\n@@ -198,17 +205,22 @@ public class LdapUtils {\n     public int getLDAPgidNumber(String groupCn) throws LdapException {\n         int gid = 0;\n \n-        Matcher matcher = this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"), \"cn=\" + groupCn, \"gidNumber\", \".*gidNumber\\\\[(\\\\d+)\\\\].*\");\n+        Matcher matcher =\n+            this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"), \"cn=\" + groupCn, \"gidNumber\",\n+                \".*gidNumber\\\\[(\\\\d+)\\\\].*\");\n         if (matcher.matches()) {\n             gid = Integer.parseInt(matcher.group(1));\n         }\n         return gid;\n     }\n \n-    public ArrayList<String> getLDAPgroupsContainingUserAsAttribute(String userUid, String attr) throws LdapException {\n+    public ArrayList<String> getLDAPgroupsContainingUserAsAttribute(String userUid, String attr)\n+        throws LdapException {\n         ArrayList<String> groupsList = new ArrayList<>();\n \n-        Matcher matcher = this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"), attr + \"=uid=\" + userUid + \",\" + ThreadProperty.get(\"LDAP_USER_DN\"), \"cn\", \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n+        Matcher matcher = this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"),\n+            attr + \"=uid=\" + userUid + \",\" + ThreadProperty.get(\"LDAP_USER_DN\"), \"cn\",\n+            \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n         while (matcher.find()) {\n             groupsList.add(matcher.group(1));\n         }\n@@ -216,7 +228,8 @@ public class LdapUtils {\n         return groupsList;\n     }\n \n-    public void deleteLDAPuserFromAllGroupsAttribute(String userUid, String attr) throws LdapException {\n+    public void deleteLDAPuserFromAllGroupsAttribute(String userUid, String attr)\n+        throws LdapException {\n         ArrayList<String> groupsList = this.getLDAPgroupsContainingUserAsAttribute(userUid, attr);\n \n         Iterator<String> iter = groupsList.iterator();\n@@ -225,18 +238,22 @@ public class LdapUtils {\n         }\n     }\n \n-    public void deleteLDAPuserFromGroupAttribute(String userUid, String groupCn, String attr) throws LdapException {\n+    public void deleteLDAPuserFromGroupAttribute(String userUid, String groupCn, String attr)\n+        throws LdapException {\n         String groupDn = \"cn=\" + groupCn + \",\" + ThreadProperty.get(\"LDAP_GROUP_DN\");\n         String userDn = \"uid=\" + userUid + \",\" + ThreadProperty.get(\"LDAP_USER_DN\");\n \n-        AttributeModification newAttr = new AttributeModification(AttributeModificationType.REMOVE, new LdapAttribute(attr, userDn));\n+        AttributeModification newAttr = new AttributeModification(AttributeModificationType.REMOVE,\n+            new LdapAttribute(attr, userDn));\n         this.modify(groupDn, newAttr);\n     }\n \n     public boolean isLDAPuserInGroup(String userUid, String groupCn) throws LdapException {\n         boolean userBelongsToGroup = false;\n \n-        Matcher matcher = this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"), \"(&(cn=\" + groupCn + \")(member=uid=\" + userUid + \",\" + ThreadProperty.get(\"LDAP_USER_DN\") + \"))\", \"cn\", \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n+        Matcher matcher = this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"),\n+            \"(&(cn=\" + groupCn + \")(member=uid=\" + userUid + \",\" +\n+                ThreadProperty.get(\"LDAP_USER_DN\") + \"))\", \"cn\", \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n         if (matcher.matches()) {\n             userBelongsToGroup = true;\n         }\n@@ -247,7 +264,9 @@ public class LdapUtils {\n     public boolean userLDAPexists(String userUid) throws LdapException {\n         boolean userExists = false;\n \n-        Matcher matcher = this.getSearchResult(ThreadProperty.get(\"LDAP_USER_DN\"), \"uid=\" + userUid, \"cn\", \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n+        Matcher matcher =\n+            this.getSearchResult(ThreadProperty.get(\"LDAP_USER_DN\"), \"uid=\" + userUid, \"cn\",\n+                \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n         if (matcher.matches()) {\n             userExists = true;\n         }\n@@ -258,7 +277,9 @@ public class LdapUtils {\n     public boolean groupLDAPexists(String groupCn) throws LdapException {\n         boolean groupExists = false;\n \n-        Matcher matcher = this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"), \"cn=\" + groupCn, \"cn\", \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n+        Matcher matcher =\n+            this.getSearchResult(ThreadProperty.get(\"LDAP_GROUP_DN\"), \"cn=\" + groupCn, \"cn\",\n+                \".*?cn\\\\[([^\\\\[\\\\]]*)\\\\].*?\");\n         if (matcher.matches()) {\n             groupExists = true;\n         }\n@@ -266,7 +287,8 @@ public class LdapUtils {\n         return groupExists;\n     }\n \n-    private Matcher getSearchResult(String baseDn, String searchFilter, String attribute, String REGEX) throws LdapException {\n+    private Matcher getSearchResult(String baseDn, String searchFilter, String attribute,\n+                                    String REGEX) throws LdapException {\n         SearchResult search = this.search(new SearchRequest(baseDn, searchFilter, attribute));\n         String INPUT = search.toString();\n         Pattern pattern = Pattern.compile(REGEX);\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'ctor def' child has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/175/LdapUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/175/LdapUtils.java\nindex 238efa93516..b4b6d7c5783 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/175/LdapUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/175/LdapUtils.java\n@@ -57,8 +57,7 @@ public class LdapUtils {\n         } else {\n             this.queryUser = \"cn=\" + System.getProperty(\"LDAP_USER\") + \",\" + ThreadProperty.get(\"LDAP_BASE\");\n         }\n-\n-        this.password = System.getProperty(\"LDAP_PASSWORD\");\n+this.password = System.getProperty(\"LDAP_PASSWORD\");\n         this.ssl = (System.getProperty(\"LDAP_SSL\", \"true\")).equals(\"true\") ? true : false;\n         String ldapUrl = System.getProperty(\"LDAP_URL\") != null ? System.getProperty(\"LDAP_URL\") : ThreadProperty.get(\"LDAP_URL\") != null ? ThreadProperty.get(\"LDAP_URL\") : \"\";\n         String ldapPort = System.getProperty(\"LDAP_PORT\") != null ? System.getProperty(\"LDAP_PORT\") : ThreadProperty.get(\"LDAP_PORT\") != null ? ThreadProperty.get(\"LDAP_PORT\") : \"\";\n@@ -112,7 +111,7 @@ public class LdapUtils {\n         }\n     }\n \n-    public void modify(String dn, AttributeModification ... modifications) throws LdapException {\n+    public void modify(String dn, AttributeModification... modifications) throws LdapException {\n         Connection conn = null;\n         try {\n             conn = this.connFactory.getConnection();\n@@ -274,4 +273,4 @@ public class LdapUtils {\n         return pattern.matcher(INPUT);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/175/LdapUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/175/LdapUtils.java\nindex 238efa93516..fc1e7dfd0b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/175/LdapUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/175/LdapUtils.java\n@@ -112,7 +112,7 @@ public class LdapUtils {\n         }\n     }\n \n-    public void modify(String dn, AttributeModification ... modifications) throws LdapException {\n+    public void modify(String dn, AttributeModification... modifications) throws LdapException {\n         Connection conn = null;\n         try {\n             conn = this.connFactory.getConnection();\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/175/LdapUtils.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_three_grams/175/LdapUtils.java\nindex 238efa93516..fc1e7dfd0b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/175/LdapUtils.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_three_grams/175/LdapUtils.java\n@@ -112,7 +112,7 @@ public class LdapUtils {\n         }\n     }\n \n-    public void modify(String dn, AttributeModification ... modifications) throws LdapException {\n+    public void modify(String dn, AttributeModification... modifications) throws LdapException {\n         Connection conn = null;\n         try {\n             conn = this.connFactory.getConnection();\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
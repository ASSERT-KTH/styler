{
    "project_name": "intuit-Tank",
    "error_id": "58",
    "information": {
        "errors": [
            {
                "line": "41",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "\n    /**\n\t * \n\t */\n    public String execute() {\n        TimerStep testStep = (TimerStep) tsc.getTestStep();",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "41",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/58/TimerRunner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/58/TimerRunner.java\nindex fbe0ea3798e..22fa7b61c65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/58/TimerRunner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/58/TimerRunner.java\n@@ -22,37 +22,34 @@ import com.intuit.tank.runner.TestStepContext;\n import com.intuit.tank.vm.common.TankConstants;\n \n /**\n- * \n  * @author dangleton\n- * \n  */\n class TimerRunner implements Runner {\n-    private TestStepContext tsc;\n+  private TestStepContext tsc;\n \n-    /**\n-     * \n-     * @param tsc\n-     */\n-    TimerRunner(TestStepContext tsc) {\n-        this.tsc = tsc;\n-    }\n+  /**\n+   * @param tsc\n+   */\n+  TimerRunner(TestStepContext tsc) {\n+    this.tsc = tsc;\n+  }\n \n-    /**\n-\t * \n-\t */\n-    public String execute() {\n-        TimerStep testStep = (TimerStep) tsc.getTestStep();\n-        if (testStep.isStart()) {\n-            tsc.getTimerMap().start(testStep.getValue());\n-        } else {\n-            TankResult tankResult = tsc.getTimerMap().end(\n-                    testStep.getValue());\n-            if (tankResult != null\n-                    && NumberUtils.isDigits(APITestHarness.getInstance().getAgentRunData().getJobId())) {\n-                APITestHarness.getInstance().queueTimingResult(tankResult);\n-            }\n-        }\n-        return TankConstants.HTTP_CASE_PASS;\n+  /**\n+   *\n+   */\n+  public String execute() {\n+    TimerStep testStep = (TimerStep) tsc.getTestStep();\n+    if (testStep.isStart()) {\n+      tsc.getTimerMap().start(testStep.getValue());\n+    } else {\n+      TankResult tankResult = tsc.getTimerMap().end(\n+        testStep.getValue());\n+      if (tankResult != null\n+        && NumberUtils.isDigits(APITestHarness.getInstance().getAgentRunData().getJobId())) {\n+        APITestHarness.getInstance().queueTimingResult(tankResult);\n+      }\n     }\n+    return TankConstants.HTTP_CASE_PASS;\n+  }\n \n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "41",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/58/TimerRunner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/58/TimerRunner.java\nindex fbe0ea3798e..25c8523d4e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/58/TimerRunner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/58/TimerRunner.java\n@@ -55,4 +55,4 @@ class TimerRunner implements Runner {\n         return TankConstants.HTTP_CASE_PASS;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/58/TimerRunner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/58/TimerRunner.java\nindex fbe0ea3798e..e9cca91256a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/58/TimerRunner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/58/TimerRunner.java\n@@ -13,8 +13,9 @@ package com.intuit.tank.runner.method;\n  * #L%\n  */\n \n-import org.apache.commons.lang.math.NumberUtils;\n \n+\n+import org.apache.commons.lang.math.NumberUtils;\n import com.intuit.tank.harness.APITestHarness;\n import com.intuit.tank.harness.data.TimerStep;\n import com.intuit.tank.results.TankResult;\n@@ -26,33 +27,36 @@ import com.intuit.tank.vm.common.TankConstants;\n  * @author dangleton\n  * \n  */\n+\n+\n class TimerRunner implements Runner {\n+\n     private TestStepContext tsc;\n \n     /**\n      * \n      * @param tsc\n      */\n+\n     TimerRunner(TestStepContext tsc) {\n         this.tsc = tsc;\n     }\n \n     /**\n-\t * \n-\t */\n+     * \n+     */\n+\n+\n     public String execute() {\n         TimerStep testStep = (TimerStep) tsc.getTestStep();\n         if (testStep.isStart()) {\n             tsc.getTimerMap().start(testStep.getValue());\n         } else {\n-            TankResult tankResult = tsc.getTimerMap().end(\n-                    testStep.getValue());\n-            if (tankResult != null\n-                    && NumberUtils.isDigits(APITestHarness.getInstance().getAgentRunData().getJobId())) {\n+            TankResult tankResult = tsc.getTimerMap().end(testStep.getValue());\n+            if (tankResult != null && NumberUtils.isDigits(APITestHarness.getInstance().getAgentRunData().getJobId())) {\n                 APITestHarness.getInstance().queueTimingResult(tankResult);\n             }\n         }\n         return TankConstants.HTTP_CASE_PASS;\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "41",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
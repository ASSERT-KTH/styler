{
    "project_name": "intuit-Tank",
    "error_id": "107",
    "information": {
        "errors": [
            {
                "line": "97",
                "column": "9",
                "severity": "warning",
                "message": "'if' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "    @Override\n    public String getUsers() {\n        if(StringUtils.isEmpty(users)) {\n            return \"0\";\n        }\n        return users;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/107/JobRegion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/107/JobRegion.java\nindex 495b1febf41..68b0b118c98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/107/JobRegion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler/107/JobRegion.java\n@@ -94,7 +94,7 @@ public class JobRegion extends BaseEntity implements RegionRequest, Comparable<J\n      */\n     @Override\n     public String getUsers() {\n-        if(StringUtils.isEmpty(users)) {\n+        if (StringUtils.isEmpty(users)) {\n             return \"0\";\n         }\n         return users;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/107/JobRegion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/107/JobRegion.java\nindex 495b1febf41..343ed56c42e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/107/JobRegion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/intellij/107/JobRegion.java\n@@ -1,6 +1,7 @@\n /**\n  * Copyright 2011 Intuit Inc. All Rights Reserved\n  */\n+\n package com.intuit.tank.project;\n \n /*\n@@ -36,112 +37,109 @@ import com.intuit.tank.vm.vmManager.RegionRequest;\n \n /**\n  * JobRegionDescription describes a setting for the number of users to run on a specific AWS region.\n- * \n+ *\n  * @author dangleton\n- * \n  */\n @Entity\n @Audited\n @Table(name = \"job_region\")\n public class JobRegion extends BaseEntity implements RegionRequest, Comparable<JobRegion> {\n \n-    @SuppressWarnings(\"unused\")\n-    private static final Logger LOG = LogManager.getLogger(JobRegion.class);\n-    private static final long serialVersionUID = 1L;\n-\n-    @Column(name = \"region\")\n-    @Enumerated(EnumType.STRING)\n-    private VMRegion region = VMRegion.US_WEST_2;\n-\n-    @NotNull\n-    @Column(name = \"users\", nullable = false)\n-    private String users;\n-\n-    /**\n-     * \n-     */\n-    public JobRegion() {\n-\n+  @SuppressWarnings(\"unused\")\n+  private static final Logger LOG = LogManager.getLogger(JobRegion.class);\n+  private static final long serialVersionUID = 1L;\n+\n+  @Column(name = \"region\")\n+  @Enumerated(EnumType.STRING)\n+  private VMRegion region = VMRegion.US_WEST_2;\n+\n+  @NotNull\n+  @Column(name = \"users\", nullable = false)\n+  private String users;\n+\n+  /**\n+   *\n+   */\n+  public JobRegion() {\n+\n+  }\n+\n+  /**\n+   * @param region\n+   * @param users\n+   */\n+  public JobRegion(VMRegion region, String users) {\n+    this.region = region;\n+    this.users = users;\n+  }\n+\n+  /**\n+   * @inheritDoc\n+   */\n+  @Override\n+  public VMRegion getRegion() {\n+    return region;\n+  }\n+\n+  /**\n+   * @param region the region to set\n+   */\n+  public void setRegion(VMRegion region) {\n+    this.region = region;\n+  }\n+\n+  /**\n+   * @inheritDoc\n+   */\n+  @Override\n+  public String getUsers() {\n+    if (StringUtils.isEmpty(users)) {\n+      return \"0\";\n     }\n-\n-    /**\n-     * @param region\n-     * @param users\n-     */\n-    public JobRegion(VMRegion region, String users) {\n-        this.region = region;\n-        this.users = users;\n+    return users;\n+  }\n+\n+  /**\n+   * @param users the users to set\n+   */\n+  public void setUsers(String users) {\n+    this.users = users;\n+  }\n+\n+  /**\n+   * @inheritDoc\n+   */\n+  @Override\n+  public boolean equals(Object obj) {\n+    if (!(obj instanceof JobRegion)) {\n+      return false;\n     }\n-\n-    /**\n-     * @inheritDoc\n-     */\n-    @Override\n-    public VMRegion getRegion() {\n-        return region;\n-    }\n-\n-    /**\n-     * @param region\n-     *            the region to set\n-     */\n-    public void setRegion(VMRegion region) {\n-        this.region = region;\n-    }\n-\n-    /**\n-     * @inheritDoc\n-     */\n-    @Override\n-    public String getUsers() {\n-        if(StringUtils.isEmpty(users)) {\n-            return \"0\";\n-        }\n-        return users;\n-    }\n-\n-    /**\n-     * @param users\n-     *            the users to set\n-     */\n-    public void setUsers(String users) {\n-        this.users = users;\n-    }\n-\n-    /**\n-     * @inheritDoc\n-     */\n-    @Override\n-    public boolean equals(Object obj) {\n-        if (!(obj instanceof JobRegion)) {\n-            return false;\n-        }\n-        JobRegion o = (JobRegion) obj;\n-        if (getId() == 0) {\n-            return new EqualsBuilder().append(o.getRegion(), getRegion()).append(o.getUsers(), getUsers()).isEquals();\n-        }\n-        return new EqualsBuilder().append(getId(), o.getId()).isEquals();\n-    }\n-\n-    /**\n-     * @inheritDoc\n-     */\n-    @Override\n-    public int hashCode() {\n-        return new HashCodeBuilder(29, 41).append(getRegion()).append(getUsers()).toHashCode();\n-    }\n-\n-    /**\n-     * @inheritDoc\n-     */\n-    @Override\n-    public String toString() {\n-        return ToStringBuilder.reflectionToString(this);\n-    }\n-\n-    @Override\n-    public int compareTo(JobRegion o) {\n-        return this.region.compareTo(o.region);\n+    JobRegion o = (JobRegion) obj;\n+    if (getId() == 0) {\n+      return new EqualsBuilder().append(o.getRegion(), getRegion()).append(o.getUsers(), getUsers()).isEquals();\n     }\n+    return new EqualsBuilder().append(getId(), o.getId()).isEquals();\n+  }\n+\n+  /**\n+   * @inheritDoc\n+   */\n+  @Override\n+  public int hashCode() {\n+    return new HashCodeBuilder(29, 41).append(getRegion()).append(getUsers()).toHashCode();\n+  }\n+\n+  /**\n+   * @inheritDoc\n+   */\n+  @Override\n+  public String toString() {\n+    return ToStringBuilder.reflectionToString(this);\n+  }\n+\n+  @Override\n+  public int compareTo(JobRegion o) {\n+    return this.region.compareTo(o.region);\n+  }\n \n }\n",
            "diff_size": 163
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/107/JobRegion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/107/JobRegion.java\nindex 495b1febf41..2530f0f64da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/107/JobRegion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/naturalize/107/JobRegion.java\n@@ -94,7 +94,7 @@ public class JobRegion extends BaseEntity implements RegionRequest, Comparable<J\n      */\n     @Override\n     public String getUsers() {\n-        if(StringUtils.isEmpty(users)) {\n+        if (StringUtils.isEmpty(users)) {\n             return \"0\";\n         }\n         return users;\n@@ -144,4 +144,4 @@ public class JobRegion extends BaseEntity implements RegionRequest, Comparable<J\n         return this.region.compareTo(o.region);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/107/JobRegion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/107/JobRegion.java\nindex 495b1febf41..005a9246994 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/107/JobRegion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/codebuff/107/JobRegion.java\n@@ -16,13 +16,14 @@ package com.intuit.tank.project;\n  * #L%\n  */\n \n+\n+\n import javax.persistence.Column;\n import javax.persistence.Entity;\n import javax.persistence.EnumType;\n import javax.persistence.Enumerated;\n import javax.persistence.Table;\n import javax.validation.constraints.NotNull;\n-\n import org.apache.commons.lang3.StringUtils;\n import org.apache.commons.lang3.builder.EqualsBuilder;\n import org.apache.commons.lang3.builder.HashCodeBuilder;\n@@ -30,7 +31,6 @@ import org.apache.commons.lang3.builder.ToStringBuilder;\n import org.apache.logging.log4j.LogManager;\n import org.apache.logging.log4j.Logger;\n import org.hibernate.envers.Audited;\n-\n import com.intuit.tank.vm.api.enumerated.VMRegion;\n import com.intuit.tank.vm.vmManager.RegionRequest;\n \n@@ -40,11 +40,11 @@ import com.intuit.tank.vm.vmManager.RegionRequest;\n  * @author dangleton\n  * \n  */\n+\n @Entity\n @Audited\n @Table(name = \"job_region\")\n public class JobRegion extends BaseEntity implements RegionRequest, Comparable<JobRegion> {\n-\n     @SuppressWarnings(\"unused\")\n     private static final Logger LOG = LogManager.getLogger(JobRegion.class);\n     private static final long serialVersionUID = 1L;\n@@ -60,14 +60,16 @@ public class JobRegion extends BaseEntity implements RegionRequest, Comparable<J\n     /**\n      * \n      */\n-    public JobRegion() {\n \n+    public JobRegion() {\n     }\n \n     /**\n      * @param region\n      * @param users\n      */\n+\n+\n     public JobRegion(VMRegion region, String users) {\n         this.region = region;\n         this.users = users;\n@@ -76,6 +78,7 @@ public class JobRegion extends BaseEntity implements RegionRequest, Comparable<J\n     /**\n      * @inheritDoc\n      */\n+\n     @Override\n     public VMRegion getRegion() {\n         return region;\n@@ -85,6 +88,8 @@ public class JobRegion extends BaseEntity implements RegionRequest, Comparable<J\n      * @param region\n      *            the region to set\n      */\n+\n+\n     public void setRegion(VMRegion region) {\n         this.region = region;\n     }\n@@ -92,9 +97,10 @@ public class JobRegion extends BaseEntity implements RegionRequest, Comparable<J\n     /**\n      * @inheritDoc\n      */\n+\n     @Override\n     public String getUsers() {\n-        if(StringUtils.isEmpty(users)) {\n+        if (StringUtils.isEmpty(users)) {\n             return \"0\";\n         }\n         return users;\n@@ -104,6 +110,8 @@ public class JobRegion extends BaseEntity implements RegionRequest, Comparable<J\n      * @param users\n      *            the users to set\n      */\n+\n+\n     public void setUsers(String users) {\n         this.users = users;\n     }\n@@ -111,6 +119,7 @@ public class JobRegion extends BaseEntity implements RegionRequest, Comparable<J\n     /**\n      * @inheritDoc\n      */\n+\n     @Override\n     public boolean equals(Object obj) {\n         if (!(obj instanceof JobRegion)) {\n@@ -126,6 +135,7 @@ public class JobRegion extends BaseEntity implements RegionRequest, Comparable<J\n     /**\n      * @inheritDoc\n      */\n+\n     @Override\n     public int hashCode() {\n         return new HashCodeBuilder(29, 41).append(getRegion()).append(getUsers()).toHashCode();\n@@ -134,6 +144,7 @@ public class JobRegion extends BaseEntity implements RegionRequest, Comparable<J\n     /**\n      * @inheritDoc\n      */\n+\n     @Override\n     public String toString() {\n         return ToStringBuilder.reflectionToString(this);\n@@ -144,4 +155,4 @@ public class JobRegion extends BaseEntity implements RegionRequest, Comparable<J\n         return this.region.compareTo(o.region);\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/107/JobRegion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/107/JobRegion.java\nindex 495b1febf41..68b0b118c98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/107/JobRegion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_random/107/JobRegion.java\n@@ -94,7 +94,7 @@ public class JobRegion extends BaseEntity implements RegionRequest, Comparable<J\n      */\n     @Override\n     public String getUsers() {\n-        if(StringUtils.isEmpty(users)) {\n+        if (StringUtils.isEmpty(users)) {\n             return \"0\";\n         }\n         return users;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/107/JobRegion.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/107/JobRegion.java\nindex 495b1febf41..68b0b118c98 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/errored/1/107/JobRegion.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/intuit-Tank/styler_three_grams/107/JobRegion.java\n@@ -94,7 +94,7 @@ public class JobRegion extends BaseEntity implements RegionRequest, Comparable<J\n      */\n     @Override\n     public String getUsers() {\n-        if(StringUtils.isEmpty(users)) {\n+        if (StringUtils.isEmpty(users)) {\n             return \"0\";\n         }\n         return users;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
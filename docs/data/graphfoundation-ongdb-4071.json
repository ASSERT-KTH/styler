{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4071",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4071/PrimitiveLongReadableDiffSets.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4071/PrimitiveLongReadableDiffSets.java\nindex 0df7e6c92b0..e202b57287d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4071/PrimitiveLongReadableDiffSets.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4071/PrimitiveLongReadableDiffSets.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.api.txstate;\n \n import org.neo4j.collection.primitive.PrimitiveLongIterator;\n@@ -33,121 +34,129 @@ import static org.neo4j.collection.primitive.PrimitiveLongCollections.emptySet;\n  */\n public interface PrimitiveLongReadableDiffSets\n {\n-    PrimitiveLongReadableDiffSets EMPTY = new PrimitiveLongReadableDiffSets()\n+  PrimitiveLongReadableDiffSets EMPTY = new PrimitiveLongReadableDiffSets()\n+  {\n+    @Override\n+    public boolean isAdded(long element)\n+    {\n+      return false;\n+    }\n+\n+    @Override\n+    public boolean isRemoved(long element)\n+    {\n+      return false;\n+    }\n+\n+    @Override\n+    public PrimitiveLongSet getAdded()\n+    {\n+      return emptySet();\n+    }\n+\n+    @Override\n+    public PrimitiveLongSet getAddedSnapshot()\n+    {\n+      return emptySet();\n+    }\n+\n+    @Override\n+    public PrimitiveLongSet getRemoved()\n+    {\n+      return emptySet();\n+    }\n+\n+    @Override\n+    public boolean isEmpty()\n+    {\n+      return true;\n+    }\n+\n+    @Override\n+    public int delta()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public PrimitiveLongIterator augment(PrimitiveLongIterator elements)\n+    {\n+      return elements;\n+    }\n+\n+    @Override\n+    public PrimitiveLongResourceIterator augment(PrimitiveLongResourceIterator elements)\n     {\n-        @Override\n-        public boolean isAdded( long element )\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public boolean isRemoved( long element )\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public PrimitiveLongSet getAdded()\n-        {\n-            return emptySet();\n-        }\n-\n-        @Override\n-        public PrimitiveLongSet getAddedSnapshot()\n-        {\n-            return emptySet();\n-        }\n-\n-        @Override\n-        public PrimitiveLongSet getRemoved()\n-        {\n-            return emptySet();\n-        }\n-\n-        @Override\n-        public boolean isEmpty()\n-        {\n-            return true;\n-        }\n-\n-        @Override\n-        public int delta()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public PrimitiveLongIterator augment( PrimitiveLongIterator elements )\n-        {\n-            return elements;\n-        }\n-\n-        @Override\n-        public PrimitiveLongResourceIterator augment( PrimitiveLongResourceIterator elements )\n-        {\n-            return elements;\n-        }\n-    };\n-\n-    /**\n-     * Check if provided element added in this collection\n-     * @param element element to check\n-     * @return true if added, false otherwise\n-     */\n-    boolean isAdded( long element );\n-\n-    /**\n-     * Check if provided element is removed in this collection\n-     * @param element element to check\n-     * @return true if removed, false otherwise\n-     */\n-    boolean isRemoved( long element );\n-\n-    /**\n-     * All elements that added into this collection\n-     * @return all added elements\n-     */\n-    PrimitiveLongSet getAdded();\n-\n-    /**\n-     * Snapshot of added elements infot this collection on the moment of invocation\n-     * @return snapshot of added elements\n-     */\n-    PrimitiveLongSet getAddedSnapshot();\n-\n-    /**\n-     * All elements that are removed according to underlying collection\n-     * @return all removed elements\n-     */\n-    PrimitiveLongSet getRemoved();\n-\n-    /**\n-     * Check if underlying diff set is empty\n-     * @return true if there is no added and removed elements, false otherwise\n-     */\n-    boolean isEmpty();\n-\n-    /**\n-     * Difference between number of added and removed elements\n-     * @return difference between number of added and removed elements\n-     */\n-    int delta();\n-\n-    /**\n-     * Augment current diff sets with elements. Provided element will be augmented if diffset\n-     * does not remove and add that specific element.\n-     * @param elements elements to augment with\n-     * @return iterator that will iterate over augmented elements as well as over diff set\n-     */\n-    PrimitiveLongIterator augment( PrimitiveLongIterator elements );\n-\n-    /**\n-     * Augment current diff sets with elements. Provided element will be augmented if diffset\n-     * does not remove and add that specific element.\n-     *\n-     * @param elements elements to augment with\n-     * @return iterator that will iterate over augmented elements as well as over diff set\n-     */\n-    PrimitiveLongResourceIterator augment( PrimitiveLongResourceIterator elements );\n+      return elements;\n+    }\n+  };\n+\n+  /**\n+   * Check if provided element added in this collection\n+   *\n+   * @param element element to check\n+   * @return true if added, false otherwise\n+   */\n+  boolean isAdded(long element);\n+\n+  /**\n+   * Check if provided element is removed in this collection\n+   *\n+   * @param element element to check\n+   * @return true if removed, false otherwise\n+   */\n+  boolean isRemoved(long element);\n+\n+  /**\n+   * All elements that added into this collection\n+   *\n+   * @return all added elements\n+   */\n+  PrimitiveLongSet getAdded();\n+\n+  /**\n+   * Snapshot of added elements infot this collection on the moment of invocation\n+   *\n+   * @return snapshot of added elements\n+   */\n+  PrimitiveLongSet getAddedSnapshot();\n+\n+  /**\n+   * All elements that are removed according to underlying collection\n+   *\n+   * @return all removed elements\n+   */\n+  PrimitiveLongSet getRemoved();\n+\n+  /**\n+   * Check if underlying diff set is empty\n+   *\n+   * @return true if there is no added and removed elements, false otherwise\n+   */\n+  boolean isEmpty();\n+\n+  /**\n+   * Difference between number of added and removed elements\n+   *\n+   * @return difference between number of added and removed elements\n+   */\n+  int delta();\n+\n+  /**\n+   * Augment current diff sets with elements. Provided element will be augmented if diffset\n+   * does not remove and add that specific element.\n+   *\n+   * @param elements elements to augment with\n+   * @return iterator that will iterate over augmented elements as well as over diff set\n+   */\n+  PrimitiveLongIterator augment(PrimitiveLongIterator elements);\n+\n+  /**\n+   * Augment current diff sets with elements. Provided element will be augmented if diffset\n+   * does not remove and add that specific element.\n+   *\n+   * @param elements elements to augment with\n+   * @return iterator that will iterate over augmented elements as well as over diff set\n+   */\n+  PrimitiveLongResourceIterator augment(PrimitiveLongResourceIterator elements);\n }\n",
            "diff_size": 168
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4071/PrimitiveLongReadableDiffSets.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4071/PrimitiveLongReadableDiffSets.java\nindex 0df7e6c92b0..00177aad06e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4071/PrimitiveLongReadableDiffSets.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4071/PrimitiveLongReadableDiffSets.java\n@@ -150,4 +150,4 @@ public interface PrimitiveLongReadableDiffSets\n      * @return iterator that will iterate over augmented elements as well as over diff set\n      */\n     PrimitiveLongResourceIterator augment( PrimitiveLongResourceIterator elements );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "8",
    "information": {
        "errors": [
            {
                "line": "75",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 94).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        serializer.<Float>getValueSerializer(null).getValueSchemaDescriptor();\n    assertTrue(descriptor.isPrimitiveType());\n    assertEquals(AttributeValueType.FLOAT, descriptor.getPrimitiveTypeDescriptor().getType());\n  }\n}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/8/FloatSerializerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/8/FloatSerializerTest.java\nindex 44789b45bd4..e286855e36c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/8/FloatSerializerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/8/FloatSerializerTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.scheme;\n \n import static org.junit.Assert.assertEquals;\n@@ -72,6 +73,7 @@ public class FloatSerializerTest {\n     SchemaTypeDescriptor<Float> descriptor =\n         serializer.<Float>getValueSerializer(null).getValueSchemaDescriptor();\n     assertTrue(descriptor.isPrimitiveType());\n-    assertEquals(AttributeValueType.FLOAT, descriptor.getPrimitiveTypeDescriptor().getType());\n+    assertEquals(AttributeValueType.FLOAT,\n+        descriptor.getPrimitiveTypeDescriptor().getType());\n   }\n }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "72",
                    "column": "64",
                    "severity": "error",
                    "message": "GenericWhitespace '>' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/8/FloatSerializerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/8/FloatSerializerTest.java\nindex 44789b45bd4..ee395f36959 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/8/FloatSerializerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/8/FloatSerializerTest.java\n@@ -69,9 +69,8 @@ public class FloatSerializerTest {\n \n   @Test\n   public void testValueDescriptor() {\n-    SchemaTypeDescriptor<Float> descriptor =\n-        serializer.<Float>getValueSerializer(null).getValueSchemaDescriptor();\n+    SchemaTypeDescriptor<Float> descriptor = serializer.<Float> getValueSerializer(null).getValueSchemaDescriptor();\n     assertTrue(descriptor.isPrimitiveType());\n     assertEquals(AttributeValueType.FLOAT, descriptor.getPrimitiveTypeDescriptor().getType());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'array initialization' child has incorrect indentation level 28, expected level should be one of the following: 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'array initialization rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/8/FloatSerializerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/8/FloatSerializerTest.java\nindex 44789b45bd4..efb70172061 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/8/FloatSerializerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/8/FloatSerializerTest.java\n@@ -18,11 +18,12 @@ package cz.o2.proxima.scheme;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertFalse;\n import static org.junit.Assert.assertTrue;\n-\n import cz.o2.proxima.scheme.SchemaDescriptors.SchemaTypeDescriptor;\n import org.junit.Test;\n \n /** Test {@link FloatSerializer}. */\n+\n+\n public class FloatSerializerTest {\n \n   private final FloatSerializer serializer = new FloatSerializer();\n@@ -52,7 +53,9 @@ public class FloatSerializerTest {\n   @Test\n   public void testInvalid() {\n     ValueSerializer<Float> s = serializer.getValueSerializer(null);\n-    assertFalse(s.isValid(new byte[] {0}));\n+    assertFalse(s.isValid(new byte[] {\n+                            0\n+}));\n   }\n \n   @Test\n@@ -69,9 +72,8 @@ public class FloatSerializerTest {\n \n   @Test\n   public void testValueDescriptor() {\n-    SchemaTypeDescriptor<Float> descriptor =\n-        serializer.<Float>getValueSerializer(null).getValueSchemaDescriptor();\n+    SchemaTypeDescriptor<Float> descriptor = serializer.<Float>getValueSerializer(null).getValueSchemaDescriptor();\n     assertTrue(descriptor.isPrimitiveType());\n     assertEquals(AttributeValueType.FLOAT, descriptor.getPrimitiveTypeDescriptor().getType());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 94).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 95).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "column": "95",
                    "severity": "error",
                    "message": "'}' at column 95 should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "75",
                    "column": "95",
                    "severity": "error",
                    "message": "WhitespaceAround: '}' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'class def rcurly' has incorrect indentation level 4, expected level should be 0.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/8/FloatSerializerTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/8/FloatSerializerTest.java\nindex 44789b45bd4..49388d63775 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/8/FloatSerializerTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/8/FloatSerializerTest.java\n@@ -72,6 +72,5 @@ public class FloatSerializerTest {\n     SchemaTypeDescriptor<Float> descriptor =\n         serializer.<Float>getValueSerializer(null).getValueSchemaDescriptor();\n     assertTrue(descriptor.isPrimitiveType());\n-    assertEquals(AttributeValueType.FLOAT, descriptor.getPrimitiveTypeDescriptor().getType());\n-  }\n-}\n+    assertEquals(AttributeValueType.FLOAT, descriptor.getPrimitiveTypeDescriptor().getType());}\n+    }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
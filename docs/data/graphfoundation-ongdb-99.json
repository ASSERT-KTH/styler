{
    "project_name": "graphfoundation-ongdb",
    "error_id": "99",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/99/ServerMetrics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/99/ServerMetrics.java\nindex 8f3142f0531..b49e77d7b46 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/99/ServerMetrics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/99/ServerMetrics.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.metrics.source.server;\n \n import com.codahale.metrics.Gauge;\n@@ -30,58 +31,58 @@ import org.neo4j.logging.Log;\n \n import static com.codahale.metrics.MetricRegistry.name;\n \n-@Documented( \".Server Metrics\" )\n+@Documented(\".Server Metrics\")\n public class ServerMetrics extends LifecycleAdapter\n {\n-    private static final String NAME_PREFIX = \"neo4j.server\";\n+  private static final String NAME_PREFIX = \"neo4j.server\";\n \n-    @Documented( \"The total number of idle threads in the jetty pool\" )\n-    public static final String THREAD_JETTY_IDLE = name( NAME_PREFIX, \"threads.jetty.idle\" );\n-    @Documented( \"The total number of threads (both idle and busy) in the jetty pool\" )\n-    public static final String THREAD_JETTY_ALL = name( NAME_PREFIX, \"threads.jetty.all\" );\n+  @Documented(\"The total number of idle threads in the jetty pool\")\n+  public static final String THREAD_JETTY_IDLE = name(NAME_PREFIX, \"threads.jetty.idle\");\n+  @Documented(\"The total number of threads (both idle and busy) in the jetty pool\")\n+  public static final String THREAD_JETTY_ALL = name(NAME_PREFIX, \"threads.jetty.all\");\n \n-    private final MetricRegistry registry;\n-    private volatile ServerThreadView serverThreadView;\n+  private final MetricRegistry registry;\n+  private volatile ServerThreadView serverThreadView;\n \n-    public ServerMetrics( MetricRegistry registry, LogService logService, DependencySatisfier satisfier )\n+  public ServerMetrics(MetricRegistry registry, LogService logService, DependencySatisfier satisfier)\n+  {\n+    Log userLog = logService.getUserLog(getClass());\n+    this.registry = registry;\n+    this.serverThreadView = new ServerThreadView()\n     {\n-        Log userLog = logService.getUserLog( getClass() );\n-        this.registry = registry;\n-        this.serverThreadView = new ServerThreadView()\n-        {\n-            @Override\n-            public int idleThreads()\n-            {\n-                userLog.warn( \"Server thread metrics not available (missing \" + THREAD_JETTY_IDLE + \")\" );\n-                return -1;\n-            }\n-\n-            @Override\n-            public int allThreads()\n-            {\n-                userLog.warn( \"Server thread metrics not available (missing \" + THREAD_JETTY_ALL + \")\" );\n-                return -1;\n-            }\n-        };\n-        satisfier.satisfyDependency( (ServerThreadViewSetter) serverThreadView ->\n-        {\n-            assert ServerMetrics.this.serverThreadView != null;\n-            ServerMetrics.this.serverThreadView = serverThreadView;\n-            userLog.info( \"Server thread metrics has been registered successfully\" );\n-        } );\n-    }\n+      @Override\n+      public int idleThreads()\n+      {\n+        userLog.warn(\"Server thread metrics not available (missing \" + THREAD_JETTY_IDLE + \")\");\n+        return -1;\n+      }\n \n-    @Override\n-    public void start()\n+      @Override\n+      public int allThreads()\n+      {\n+        userLog.warn(\"Server thread metrics not available (missing \" + THREAD_JETTY_ALL + \")\");\n+        return -1;\n+      }\n+    };\n+    satisfier.satisfyDependency((ServerThreadViewSetter) serverThreadView ->\n     {\n-        registry.register( THREAD_JETTY_IDLE, (Gauge<Integer>) () -> serverThreadView.idleThreads() );\n-        registry.register( THREAD_JETTY_ALL, (Gauge<Integer>) () -> serverThreadView.allThreads() );\n-    }\n+      assert ServerMetrics.this.serverThreadView != null;\n+      ServerMetrics.this.serverThreadView = serverThreadView;\n+      userLog.info(\"Server thread metrics has been registered successfully\");\n+    });\n+  }\n \n-    @Override\n-    public void stop()\n-    {\n-        registry.remove( THREAD_JETTY_IDLE );\n-        registry.remove( THREAD_JETTY_ALL );\n-    }\n+  @Override\n+  public void start()\n+  {\n+    registry.register(THREAD_JETTY_IDLE, (Gauge<Integer>) () -> serverThreadView.idleThreads());\n+    registry.register(THREAD_JETTY_ALL, (Gauge<Integer>) () -> serverThreadView.allThreads());\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+    registry.remove(THREAD_JETTY_IDLE);\n+    registry.remove(THREAD_JETTY_ALL);\n+  }\n }\n",
            "diff_size": 65
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/99/ServerMetrics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/99/ServerMetrics.java\nindex 8f3142f0531..c4a4db1f0b8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/99/ServerMetrics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/99/ServerMetrics.java\n@@ -84,4 +84,4 @@ public class ServerMetrics extends LifecycleAdapter\n         registry.remove( THREAD_JETTY_IDLE );\n         registry.remove( THREAD_JETTY_ALL );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
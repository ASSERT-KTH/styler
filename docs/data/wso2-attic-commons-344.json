{
    "project_name": "wso2-attic-commons",
    "error_id": "344",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 128).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "/**\n * @hibernate.class table=\"BPEL_XML_DATA\"\n * @hibernate.query name=\"SELECT_XMLDATA_IDS_BY_INSTANCES\" query=\"select id from HXmlData as x where x.instance in (:instances)\"\n */\npublic class HXmlData extends HObject {\n    public static final String SELECT_XMLDATA_IDS_BY_INSTANCES = \"SELECT_XMLDATA_IDS_BY_INSTANCES\";",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/344/HXmlData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/344/HXmlData.java\nindex 88c67e3958a..f3708c4a4a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/344/HXmlData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/344/HXmlData.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.ode.daohib.bpel.hobj;\n \n \n@@ -27,117 +28,112 @@ import java.util.HashSet;\n  * @hibernate.query name=\"SELECT_XMLDATA_IDS_BY_INSTANCES\" query=\"select id from HXmlData as x where x.instance in (:instances)\"\n  */\n public class HXmlData extends HObject {\n-    public static final String SELECT_XMLDATA_IDS_BY_INSTANCES = \"SELECT_XMLDATA_IDS_BY_INSTANCES\";\n-\n-    private boolean _simpleType;\n-    private byte[] _data;\n-    private Collection<HVariableProperty> _properties = new HashSet<HVariableProperty>();\n-    private String _name;\n-    private String _simpleValue;\n-    private HScope _scope;\n-    private HProcessInstance _instance;\n-\n-    /** Constructor. */\n-    public HXmlData() {\n-        super();\n-    }\n-\n-    /**\n-     * @hibernate.property type=\"org.apache.ode.daohib.bpel.hobj.GZipDataType\"\n-     *\n-     * @hibernate.column name=\"DATA\" sql-type=\"blob(2G)\"\n-     */\n-    public byte[] getData() {\n-        return _data;\n-    }\n-\n-    public void setData(byte[] data) {\n-        _data = data;\n-    }\n-\n-    /**\n-     * @hibernate.property\n-     *    column=\"NAME\"\n-     *    type=\"string\"\n-     *    length=\"255\"\n-     *    not-null=\"true\"\n-     */\n-    public String getName() {\n-        return _name;\n-    }\n-\n-    public void setName(String name) {\n-        _name = name;\n-    }\n-\n-    /**\n-     * @hibernate.property\n-     *    column=\"SIMPLE_VALUE\"\n-     *    type=\"string\"\n-     *    length=\"255\"\n-     *    not-null=\"false\"\n-     */\n-    public String getSimpleValue() {\n-        return _simpleValue;\n-    }\n-\n-    public void setSimpleValue(String simpleValue) {\n-        _simpleValue = simpleValue;\n-    }\n-\n-    /**\n-     * @hibernate.bag\n-     *    lazy=\"true\"\n-     *    inverse=\"true\"\n-     *    cascade=\"delete\"\n-     * @hibernate.collection-key column=\"XML_DATA_ID\" foreign-key=\"none\"\n-     * @hibernate.collection-one-to-many\n-     *    class=\"org.apache.ode.daohib.bpel.hobj.HVariableProperty\"\n-     */\n-    public Collection<HVariableProperty> getProperties() {\n-        return _properties;\n-    }\n-\n-    public void setProperties(Collection<HVariableProperty> properties) {\n-        _properties = properties;\n-    }\n-\n-    /**\n-     * @hibernate.many-to-one column=\"SCOPE_ID\" foreign-key=\"none\"\n-     */\n-    public HScope getScope() {\n-        return _scope;\n-    }\n-\n-    public void setScope(HScope scope) {\n-        _scope = scope;\n-\n-        if(scope != null) {\n-            setInstance(scope.getInstance());\n-        }\n-    }\n-\n-    /**\n-     * @hibernate.many-to-one\n-     *    column=\"PIID\" foreign-key=\"none\"\n-     */\n-    public HProcessInstance getInstance() {\n-        return _instance;\n-    }\n-\n-    public void setInstance(HProcessInstance instance) {\n-        _instance = instance;\n-    }\n-\n-    /**\n-     * @hibernate.property\n-     *    column=\"IS_SIMPLE_TYPE\"\n-     */\n-    public boolean isSimpleType() {\n-        return _simpleType;\n-    }\n-\n-    public void setSimpleType(boolean simpleType) {\n-        _simpleType = simpleType;\n+  public static final String SELECT_XMLDATA_IDS_BY_INSTANCES = \"SELECT_XMLDATA_IDS_BY_INSTANCES\";\n+\n+  private boolean _simpleType;\n+  private byte[] _data;\n+  private Collection<HVariableProperty> _properties = new HashSet<HVariableProperty>();\n+  private String _name;\n+  private String _simpleValue;\n+  private HScope _scope;\n+  private HProcessInstance _instance;\n+\n+  /**\n+   * Constructor.\n+   */\n+  public HXmlData() {\n+    super();\n+  }\n+\n+  /**\n+   * @hibernate.property type=\"org.apache.ode.daohib.bpel.hobj.GZipDataType\"\n+   * @hibernate.column name=\"DATA\" sql-type=\"blob(2G)\"\n+   */\n+  public byte[] getData() {\n+    return _data;\n+  }\n+\n+  public void setData(byte[] data) {\n+    _data = data;\n+  }\n+\n+  /**\n+   * @hibernate.property column=\"NAME\"\n+   * type=\"string\"\n+   * length=\"255\"\n+   * not-null=\"true\"\n+   */\n+  public String getName() {\n+    return _name;\n+  }\n+\n+  public void setName(String name) {\n+    _name = name;\n+  }\n+\n+  /**\n+   * @hibernate.property column=\"SIMPLE_VALUE\"\n+   * type=\"string\"\n+   * length=\"255\"\n+   * not-null=\"false\"\n+   */\n+  public String getSimpleValue() {\n+    return _simpleValue;\n+  }\n+\n+  public void setSimpleValue(String simpleValue) {\n+    _simpleValue = simpleValue;\n+  }\n+\n+  /**\n+   * @hibernate.bag lazy=\"true\"\n+   * inverse=\"true\"\n+   * cascade=\"delete\"\n+   * @hibernate.collection-key column=\"XML_DATA_ID\" foreign-key=\"none\"\n+   * @hibernate.collection-one-to-many class=\"org.apache.ode.daohib.bpel.hobj.HVariableProperty\"\n+   */\n+  public Collection<HVariableProperty> getProperties() {\n+    return _properties;\n+  }\n+\n+  public void setProperties(Collection<HVariableProperty> properties) {\n+    _properties = properties;\n+  }\n+\n+  /**\n+   * @hibernate.many-to-one column=\"SCOPE_ID\" foreign-key=\"none\"\n+   */\n+  public HScope getScope() {\n+    return _scope;\n+  }\n+\n+  public void setScope(HScope scope) {\n+    _scope = scope;\n+\n+    if (scope != null) {\n+      setInstance(scope.getInstance());\n     }\n+  }\n+\n+  /**\n+   * @hibernate.many-to-one column=\"PIID\" foreign-key=\"none\"\n+   */\n+  public HProcessInstance getInstance() {\n+    return _instance;\n+  }\n+\n+  public void setInstance(HProcessInstance instance) {\n+    _instance = instance;\n+  }\n+\n+  /**\n+   * @hibernate.property column=\"IS_SIMPLE_TYPE\"\n+   */\n+  public boolean isSimpleType() {\n+    return _simpleType;\n+  }\n+\n+  public void setSimpleType(boolean simpleType) {\n+    _simpleType = simpleType;\n+  }\n }\n",
            "diff_size": 136
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/344/HXmlData.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/344/HXmlData.java\nindex 88c67e3958a..1462aa67aea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/344/HXmlData.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/344/HXmlData.java\n@@ -140,4 +140,4 @@ public class HXmlData extends HObject {\n     public void setSimpleType(boolean simpleType) {\n         _simpleType = simpleType;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "griddynamics-jagger",
    "error_id": "205",
    "information": {
        "errors": [
            {
                "line": "12",
                "severity": "warning",
                "message": "Line is longer than 150 characters (found 185).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * @n\n * @par Details:\n * @details Parallel test group is a step in the JLoadScenario execution sequence. It can contain one ore multiple JLoadTest. All JLoadTest inside group will be executed in parallel. @n\n * See @ref section_writing_test_load_scenario for more details @n\n * @n\n * More information on the parameter of the test definition, you can find in the Builder documentation @n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "12",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "13",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/205/JParallelTestsGroup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/205/JParallelTestsGroup.java\nindex a00b4857a6d..72860f30f9d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/205/JParallelTestsGroup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/205/JParallelTestsGroup.java\n@@ -6,48 +6,51 @@ import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n \n-/** @brief  Describes step in the JLoadScenario execution sequence\n+/**\n+ * @brief Describes step in the JLoadScenario execution sequence\n  * @n\n  * @par Details:\n  * @details Parallel test group is a step in the JLoadScenario execution sequence. It can contain one ore multiple JLoadTest. All JLoadTest inside group will be executed in parallel. @n\n  * See @ref section_writing_test_load_scenario for more details @n\n- * @n\n- * More information on the parameter of the test definition, you can find in the Builder documentation @n\n- * @n\n- * Code example:\n- * @dontinclude  ExampleSimpleJLoadScenarioProvider.java\n- * @skip  begin: following section is used for docu generation - Load test scenario configuration\n+ * @n More information on the parameter of the test definition, you can find in the Builder documentation @n\n+ * @n Code example:\n+ * @dontinclude ExampleSimpleJLoadScenarioProvider.java\n+ * @skip begin: following section is used for docu generation - Load test scenario configuration\n  * @until end: following section is used for docu generation - Load test scenario configuration\n  */\n public class JParallelTestsGroup {\n     private final String id;\n     private final List<JLoadTest> tests;\n \n-    /** Builder of the JParallelTestsGroup\n+    /**\n+     * Builder of the JParallelTestsGroup\n+     *\n+     * @param id    - Unique id of the parallel test group\n+     * @param tests - List of JLoadTest that should run in parallel. Can contain single or multiple elements\n      * @n\n      * @details Constructor parameters are mandatory for the JParallelTestsGroup. All parameters, set by setters are optional\n      * @n\n-     * @param id - Unique id of the parallel test group\n-     * @param tests - List of JLoadTest that should run in parallel. Can contain single or multiple elements\n      */\n     public static Builder builder(Id id, List<JLoadTest> tests) {\n         return new Builder(id, tests);\n     }\n \n-    /** Builder of the JParallelTestsGroup\n+    /**\n+     * Builder of the JParallelTestsGroup\n+     *\n+     * @param id    - Unique id of the parallel test group\n+     * @param test  - Test group should contain at least on JLoadTest\n+     * @param tests - List of JLoadTest that should run in parallel. Can contain single or multiple elements\n      * @n\n      * @details Constructor parameters are mandatory for the JParallelTestsGroup. All parameters, set by setters are optional\n      * @n\n-     * @param id - Unique id of the parallel test group\n-     * @param test - Test group should contain at least on JLoadTest\n-     * @param tests - List of JLoadTest that should run in parallel. Can contain single or multiple elements\n      */\n     public static Builder builder(Id id, JLoadTest test, JLoadTest... tests) {\n-        \n+\n         List<JLoadTest> testList = new ArrayList<>();\n         testList.add(test);\n         Collections.addAll(testList, tests);\n-        \n+\n         return new Builder(id, testList);\n     }\n \n@@ -60,7 +63,7 @@ public class JParallelTestsGroup {\n         private final Id id;\n \n         private final List<JLoadTest> tests;\n-    \n+\n         public Builder(Id id, List<JLoadTest> tests) {\n             this.id = id;\n             this.tests = tests;\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "12",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/205/JParallelTestsGroup.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/205/JParallelTestsGroup.java\nindex a00b4857a6d..7706815a1a9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/205/JParallelTestsGroup.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/205/JParallelTestsGroup.java\n@@ -84,4 +84,4 @@ public class JParallelTestsGroup {\n     public String getId() {\n         return id;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "12",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "12",
                    "severity": "warning",
                    "message": "Line is longer than 150 characters (found 185).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2516",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "61",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2516/FabricTransactionMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2516/FabricTransactionMonitor.java\nindex a1c97a25863..269dad3f35f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2516/FabricTransactionMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2516/FabricTransactionMonitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.fabric.transaction;\n \n import java.util.HashSet;\n@@ -33,43 +34,42 @@ import org.neo4j.time.SystemNanoClock;\n \n public class FabricTransactionMonitor extends TransactionMonitor\n {\n-    private final Map<FabricTransactionImpl,MonitoredTransaction> transactions = new ConcurrentHashMap<>();\n+    private final Map<FabricTransactionImpl, MonitoredTransaction> transactions = new ConcurrentHashMap<>();\n     private final SystemNanoClock clock;\n     private final FabricConfig fabricConfig;\n \n-    public FabricTransactionMonitor( SystemNanoClock clock, LogService logService, FabricConfig fabricConfig )\n+    public FabricTransactionMonitor(SystemNanoClock clock, LogService logService, FabricConfig fabricConfig)\n     {\n-        super( clock, logService );\n+        super(clock, logService);\n \n         this.clock = clock;\n         this.fabricConfig = fabricConfig;\n     }\n \n-    public void startMonitoringTransaction( FabricTransactionImpl transaction, FabricTransactionInfo transactionInfo )\n+    public void startMonitoringTransaction(FabricTransactionImpl transaction, FabricTransactionInfo transactionInfo)\n     {\n         long startTimeNanos = clock.nanos();\n         long timeoutNanos;\n-        if ( transactionInfo.getTxTimeout() != null )\n+        if (transactionInfo.getTxTimeout() != null)\n         {\n             timeoutNanos = transactionInfo.getTxTimeout().toNanos();\n-        }\n-        else\n+        } else\n         {\n             timeoutNanos = fabricConfig.getTransactionTimeout().toNanos();\n         }\n \n-        transactions.put( transaction, new FabricMonitoredTransaction( transaction, startTimeNanos, timeoutNanos ) );\n+        transactions.put(transaction, new FabricMonitoredTransaction(transaction, startTimeNanos, timeoutNanos));\n     }\n \n-    public void stopMonitoringTransaction( FabricTransactionImpl transaction )\n+    public void stopMonitoringTransaction(FabricTransactionImpl transaction)\n     {\n-        transactions.remove( transaction );\n+        transactions.remove(transaction);\n     }\n \n     @Override\n     protected Set<MonitoredTransaction> getActiveTransactions()\n     {\n-        return new HashSet<>( transactions.values() );\n+        return new HashSet<>(transactions.values());\n     }\n \n     private static class FabricMonitoredTransaction implements MonitoredTransaction\n@@ -78,7 +78,7 @@ public class FabricTransactionMonitor extends TransactionMonitor\n         private final long startTimeNanos;\n         private final long timeoutNanos;\n \n-        FabricMonitoredTransaction( FabricTransactionImpl fabricTransaction, long startTimeNanos, long timeoutNanos )\n+        FabricMonitoredTransaction(FabricTransactionImpl fabricTransaction, long startTimeNanos, long timeoutNanos)\n         {\n             this.fabricTransaction = fabricTransaction;\n             this.startTimeNanos = startTimeNanos;\n@@ -104,9 +104,9 @@ public class FabricTransactionMonitor extends TransactionMonitor\n         }\n \n         @Override\n-        public boolean markForTermination( Status reason )\n+        public boolean markForTermination(Status reason)\n         {\n-            fabricTransaction.markForTermination( reason );\n+            fabricTransaction.markForTermination(reason);\n             return true;\n         }\n \n@@ -114,19 +114,19 @@ public class FabricTransactionMonitor extends TransactionMonitor\n         public String getIdentifyingDescription()\n         {\n             StringBuilder sb = new StringBuilder();\n-            sb.append( \"QueryRouterTransaction[\" );\n-            sb.append( \"id=\" ).append( fabricTransaction.getId() ).append( \",\" );\n+            sb.append(\"QueryRouterTransaction[\");\n+            sb.append(\"id=\").append(fabricTransaction.getId()).append(\",\");\n \n             var rawAddress = fabricTransaction.getTransactionInfo().getClientConnectionInfo().clientAddress();\n             var address = rawAddress == null ? \"embedded\" : rawAddress;\n-            sb.append( \"clientAddress=\" ).append( address );\n+            sb.append(\"clientAddress=\").append(address);\n             var authSubject = fabricTransaction.getTransactionInfo().getLoginContext().subject();\n-            if ( authSubject != AuthSubject.ANONYMOUS && authSubject != AuthSubject.AUTH_DISABLED )\n+            if (authSubject != AuthSubject.ANONYMOUS && authSubject != AuthSubject.AUTH_DISABLED)\n             {\n-                sb.append( \",\" ).append( \"username=\" ).append( authSubject.username() );\n+                sb.append(\",\").append(\"username=\").append(authSubject.username());\n             }\n \n-            sb.append( \"]\" );\n+            sb.append(\"]\");\n             return sb.toString();\n         }\n     }\n",
            "diff_size": 21
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3350",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3350/SupportedProtocols.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3350/SupportedProtocols.java\nindex 41553cfba09..ca583ff82d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3350/SupportedProtocols.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3350/SupportedProtocols.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.protocol.handshake;\n \n import java.util.Collections;\n@@ -33,43 +34,42 @@ import org.neo4j.causalclustering.protocol.Protocol;\n  * @param <U> Comparable version type.\n  * @param <T> Protocol type.\n  */\n-public abstract class SupportedProtocols<U extends Comparable<U>,T extends Protocol<U>>\n+public abstract class SupportedProtocols<U extends Comparable<U>, T extends Protocol<U>>\n {\n-    private final Protocol.Category<T> category;\n-    private final List<U> versions;\n+  private final Protocol.Category<T> category;\n+  private final List<U> versions;\n \n-    /**\n-     * @param category The protocol category.\n-     * @param versions List of supported versions. An empty list means that every version is supported.\n-     */\n-    SupportedProtocols( Protocol.Category<T> category, List<U> versions )\n-    {\n-        this.category = category;\n-        this.versions = Collections.unmodifiableList( versions );\n-    }\n+  /**\n+   * @param category The protocol category.\n+   * @param versions List of supported versions. An empty list means that every version is supported.\n+   */\n+  SupportedProtocols(Protocol.Category<T> category, List<U> versions)\n+  {\n+    this.category = category;\n+    this.versions = Collections.unmodifiableList(versions);\n+  }\n \n-    public Set<U> mutuallySupportedVersionsFor( Set<U> requestedVersions )\n+  public Set<U> mutuallySupportedVersionsFor(Set<U> requestedVersions)\n+  {\n+    if (versions().isEmpty())\n     {\n-        if ( versions().isEmpty() )\n-        {\n-            return requestedVersions;\n-        }\n-        else\n-        {\n-            return requestedVersions.stream().filter( versions()::contains ).collect( Collectors.toSet() );\n-        }\n-    }\n-\n-    public Protocol.Category<T> identifier()\n+      return requestedVersions;\n+    } else\n     {\n-        return category;\n+      return requestedVersions.stream().filter(versions()::contains).collect(Collectors.toSet());\n     }\n+  }\n \n-    /**\n-     * @return If an empty list then all versions of a matching protocol will be supported\n-     */\n-    public List<U> versions()\n-    {\n-        return versions;\n-    }\n+  public Protocol.Category<T> identifier()\n+  {\n+    return category;\n+  }\n+\n+  /**\n+   * @return If an empty list then all versions of a matching protocol will be supported\n+   */\n+  public List<U> versions()\n+  {\n+    return versions;\n+  }\n }\n",
            "diff_size": 41
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3350/SupportedProtocols.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3350/SupportedProtocols.java\nindex 41553cfba09..d71149762bc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3350/SupportedProtocols.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3350/SupportedProtocols.java\n@@ -33,7 +33,7 @@ import org.neo4j.causalclustering.protocol.Protocol;\n  * @param <U> Comparable version type.\n  * @param <T> Protocol type.\n  */\n-public abstract class SupportedProtocols<U extends Comparable<U>,T extends Protocol<U>>\n+public abstract class SupportedProtocols<U extends Comparable<U>, T extends Protocol<U>>\n {\n     private final Protocol.Category<T> category;\n     private final List<U> versions;\n@@ -72,4 +72,4 @@ public abstract class SupportedProtocols<U extends Comparable<U>,T extends Proto\n     {\n         return versions;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "125",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/125/ReplicatedIdAllocationRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/125/ReplicatedIdAllocationRequest.java\nindex fb8557fa226..983ea629083 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/125/ReplicatedIdAllocationRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/125/ReplicatedIdAllocationRequest.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.state.machines.id;\n \n import java.util.function.Consumer;\n@@ -30,91 +31,92 @@ import org.neo4j.kernel.impl.store.id.IdType;\n import static java.lang.String.format;\n \n /**\n- * This type is handled by the ReplicatedIdAllocationStateMachine. */\n+ * This type is handled by the ReplicatedIdAllocationStateMachine.\n+ */\n public class ReplicatedIdAllocationRequest implements CoreReplicatedContent\n {\n-    private final MemberId owner;\n-    private final IdType idType;\n-    private final long idRangeStart;\n-    private final int idRangeLength;\n+  private final MemberId owner;\n+  private final IdType idType;\n+  private final long idRangeStart;\n+  private final int idRangeLength;\n \n-    public ReplicatedIdAllocationRequest( MemberId owner, IdType idType, long idRangeStart, int idRangeLength )\n-    {\n-        this.owner = owner;\n-        this.idType = idType;\n-        this.idRangeStart = idRangeStart;\n-        this.idRangeLength = idRangeLength;\n-    }\n+  public ReplicatedIdAllocationRequest(MemberId owner, IdType idType, long idRangeStart, int idRangeLength)\n+  {\n+    this.owner = owner;\n+    this.idType = idType;\n+    this.idRangeStart = idRangeStart;\n+    this.idRangeLength = idRangeLength;\n+  }\n \n-    @Override\n-    public boolean equals( Object o )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        ReplicatedIdAllocationRequest that = (ReplicatedIdAllocationRequest) o;\n-\n-        if ( idRangeStart != that.idRangeStart )\n-        {\n-            return false;\n-        }\n-        if ( idRangeLength != that.idRangeLength )\n-        {\n-            return false;\n-        }\n-        if ( !owner.equals( that.owner ) )\n-        {\n-            return false;\n-        }\n-        return idType == that.idType;\n+      return true;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (o == null || getClass() != o.getClass())\n     {\n-        int result = owner.hashCode();\n-        result = 31 * result + idType.hashCode();\n-        result = 31 * result + (int) (idRangeStart ^ (idRangeStart >>> 32));\n-        result = 31 * result + idRangeLength;\n-        return result;\n+      return false;\n     }\n \n-    public MemberId owner()\n-    {\n-        return owner;\n-    }\n+    ReplicatedIdAllocationRequest that = (ReplicatedIdAllocationRequest) o;\n \n-    public IdType idType()\n+    if (idRangeStart != that.idRangeStart)\n     {\n-        return idType;\n+      return false;\n     }\n-\n-    long idRangeStart()\n+    if (idRangeLength != that.idRangeLength)\n     {\n-        return idRangeStart;\n+      return false;\n     }\n-\n-    int idRangeLength()\n+    if (!owner.equals(that.owner))\n     {\n-        return idRangeLength;\n+      return false;\n     }\n+    return idType == that.idType;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return format( \"ReplicatedIdAllocationRequest{owner=%s, idType=%s, idRangeStart=%d, idRangeLength=%d}\", owner,\n-                idType, idRangeStart, idRangeLength );\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = owner.hashCode();\n+    result = 31 * result + idType.hashCode();\n+    result = 31 * result + (int) (idRangeStart ^ (idRangeStart >>> 32));\n+    result = 31 * result + idRangeLength;\n+    return result;\n+  }\n \n-    @Override\n-    public void dispatch( CommandDispatcher commandDispatcher, long commandIndex, Consumer<Result> callback )\n-    {\n-        commandDispatcher.dispatch( this, commandIndex, callback );\n-    }\n+  public MemberId owner()\n+  {\n+    return owner;\n+  }\n+\n+  public IdType idType()\n+  {\n+    return idType;\n+  }\n+\n+  long idRangeStart()\n+  {\n+    return idRangeStart;\n+  }\n+\n+  int idRangeLength()\n+  {\n+    return idRangeLength;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return format(\"ReplicatedIdAllocationRequest{owner=%s, idType=%s, idRangeStart=%d, idRangeLength=%d}\", owner,\n+        idType, idRangeStart, idRangeLength);\n+  }\n+\n+  @Override\n+  public void dispatch(CommandDispatcher commandDispatcher, long commandIndex, Consumer<Result> callback)\n+  {\n+    commandDispatcher.dispatch(this, commandIndex, callback);\n+  }\n }\n",
            "diff_size": 105
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "87",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/125/ReplicatedIdAllocationRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/125/ReplicatedIdAllocationRequest.java\nindex fb8557fa226..1c5aad24afc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/125/ReplicatedIdAllocationRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/125/ReplicatedIdAllocationRequest.java\n@@ -53,7 +53,8 @@ public class ReplicatedIdAllocationRequest implements CoreReplicatedContent\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -64,15 +65,18 @@ public class ReplicatedIdAllocationRequest implements CoreReplicatedContent\n         {\n             return false;\n         }\n-        if ( idRangeLength != that.idRangeLength )\n+\n+if ( idRangeLength != that.idRangeLength )\n         {\n             return false;\n         }\n-        if ( !owner.equals( that.owner ) )\n+\n+if ( !owner.equals( that.owner ) )\n         {\n             return false;\n         }\n-        return idType == that.idType;\n+\n+return idType == that.idType;\n     }\n \n     @Override\n@@ -80,7 +84,7 @@ public class ReplicatedIdAllocationRequest implements CoreReplicatedContent\n     {\n         int result = owner.hashCode();\n         result = 31 * result + idType.hashCode();\n-        result = 31 * result + (int) (idRangeStart ^ (idRangeStart >>> 32));\n+        result = 31 * result + ( int) ( idRangeStart ^ ( idRangeStart >>> 32 ));\n         result = 31 * result + idRangeLength;\n         return result;\n     }\n@@ -117,4 +121,4 @@ public class ReplicatedIdAllocationRequest implements CoreReplicatedContent\n     {\n         commandDispatcher.dispatch( this, commandIndex, callback );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
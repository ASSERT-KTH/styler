{
    "project_name": "Angel-ML-angel",
    "error_id": "214",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/214/PSMatrixSaveContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/214/PSMatrixSaveContext.java\nindex 59950a6c3a5..bb37c29aba6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/214/PSMatrixSaveContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/214/PSMatrixSaveContext.java\n@@ -68,12 +68,13 @@ public class PSMatrixSaveContext {\n   /**\n    * Create a new PSMatrixSaveContext\n    *\n-   * @param matrixId matrix id\n-   * @param partIds need save matrix partitions\n+   * @param matrixId   matrix id\n+   * @param partIds    need save matrix partitions\n    * @param rowIndexes need save matrix rows\n    */\n   public PSMatrixSaveContext(int matrixId, List<Integer> partIds, List<Integer> rowIndexes,\n-      String formatClassName, String savePath, boolean cloneFirst, boolean sortFirst) {\n+                             String formatClassName, String savePath, boolean cloneFirst,\n+                             boolean sortFirst) {\n     this.matrixId = matrixId;\n     this.partIds = partIds;\n     this.rowIndexes = rowIndexes;\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/214/PSMatrixSaveContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/214/PSMatrixSaveContext.java\nindex 59950a6c3a5..81b9d96a8c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/214/PSMatrixSaveContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/214/PSMatrixSaveContext.java\n@@ -173,4 +173,4 @@ public class PSMatrixSaveContext {\n     return sortFirst;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/214/PSMatrixSaveContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/214/PSMatrixSaveContext.java\nindex 59950a6c3a5..86026b756a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/214/PSMatrixSaveContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/214/PSMatrixSaveContext.java\n@@ -23,11 +23,13 @@ import java.util.List;\n /**\n  * PS matrix save context\n  */\n+\n public class PSMatrixSaveContext {\n \n   /**\n    * Matrix id\n    */\n+\n   private final int matrixId;\n \n   /**\n@@ -72,8 +74,13 @@ public class PSMatrixSaveContext {\n    * @param partIds need save matrix partitions\n    * @param rowIndexes need save matrix rows\n    */\n-  public PSMatrixSaveContext(int matrixId, List<Integer> partIds, List<Integer> rowIndexes,\n-      String formatClassName, String savePath, boolean cloneFirst, boolean sortFirst) {\n+\n+  public PSMatrixSaveContext(int matrixId,\n+                             List<Integer> partIds,\n+                             List<Integer> rowIndexes,\n+                             String formatClassName,\n+                             String savePath,\n+                             boolean cloneFirst, boolean sortFirst) {\n     this.matrixId = matrixId;\n     this.partIds = partIds;\n     this.rowIndexes = rowIndexes;\n@@ -88,6 +95,7 @@ public class PSMatrixSaveContext {\n    *\n    * @return matrix id\n    */\n+\n   public int getMatrixId() {\n     return matrixId;\n   }\n@@ -97,6 +105,7 @@ public class PSMatrixSaveContext {\n    *\n    * @return need save matrix partitions\n    */\n+\n   public List<Integer> getPartIds() {\n     return partIds;\n   }\n@@ -106,6 +115,7 @@ public class PSMatrixSaveContext {\n    *\n    * @return need save matrix rows\n    */\n+\n   public List<Integer> getRowIndexes() {\n     return rowIndexes;\n   }\n@@ -115,6 +125,7 @@ public class PSMatrixSaveContext {\n    *\n    * @return matrix output format class name\n    */\n+\n   public String getFormatClassName() {\n     return formatClassName;\n   }\n@@ -124,6 +135,7 @@ public class PSMatrixSaveContext {\n    *\n    * @return matrix output files save path\n    */\n+\n   public String getSavePath() {\n     return savePath;\n   }\n@@ -133,6 +145,7 @@ public class PSMatrixSaveContext {\n    *\n    * @param savePath matrix output files save path\n    */\n+\n   public void setSavePath(String savePath) {\n     this.savePath = savePath;\n   }\n@@ -142,6 +155,7 @@ public class PSMatrixSaveContext {\n    *\n    * @return save workers\n    */\n+\n   public IOExecutors getWorkers() {\n     return workers;\n   }\n@@ -151,6 +165,7 @@ public class PSMatrixSaveContext {\n    *\n    * @param workers save workers\n    */\n+\n   public void setWorkers(IOExecutors workers) {\n     this.workers = workers;\n   }\n@@ -160,6 +175,7 @@ public class PSMatrixSaveContext {\n    *\n    * @return true means need clone first\n    */\n+\n   public boolean cloneFirst() {\n     return cloneFirst;\n   }\n@@ -169,8 +185,9 @@ public class PSMatrixSaveContext {\n    *\n    * @return true means sort first\n    */\n+\n   public boolean sortFirst() {\n     return sortFirst;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
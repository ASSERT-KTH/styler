{
    "project_name": "neo4j-neo4j",
    "error_id": "818",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "81",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "154",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/818/DataGeneratorInput.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/818/DataGeneratorInput.java\nindex 76d8b0c5a60..e5277fa2839 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/818/DataGeneratorInput.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/818/DataGeneratorInput.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport.input;\n \n import java.io.IOException;\n@@ -77,9 +78,9 @@ public class DataGeneratorInput implements Input\n     private final Groups groups = new Groups();\n     private int maxStringLength = 20;\n \n-    public DataGeneratorInput( long nodes, long relationships, IdType idType, long seed, long startId,\n-            Header nodeHeader, Header relationshipHeader, int labelCount, int relationshipTypeCount,\n-            float factorBadNodeData, float factorBadRelationshipData )\n+    public DataGeneratorInput(long nodes, long relationships, IdType idType, long seed, long startId,\n+                              Header nodeHeader, Header relationshipHeader, int labelCount, int relationshipTypeCount,\n+                              float factorBadNodeData, float factorBadRelationshipData)\n     {\n         this.nodes = nodes;\n         this.relationships = relationships;\n@@ -90,22 +91,22 @@ public class DataGeneratorInput implements Input\n         this.relationshipHeader = relationshipHeader;\n         this.factorBadNodeData = factorBadNodeData;\n         this.factorBadRelationshipData = factorBadRelationshipData;\n-        this.labels = new Distribution<>( tokens( \"Label\", labelCount ) );\n-        this.relationshipTypes = new Distribution<>( tokens( \"TYPE\", relationshipTypeCount ) );\n+        this.labels = new Distribution<>(tokens(\"Label\", labelCount));\n+        this.relationshipTypes = new Distribution<>(tokens(\"TYPE\", relationshipTypeCount));\n     }\n \n     @Override\n-    public InputIterable nodes( Collector badCollector )\n+    public InputIterable nodes(Collector badCollector)\n     {\n-        return () -> new RandomEntityDataGenerator( nodes, nodes, 10_000, seed, startId, nodeHeader, labels, relationshipTypes,\n-                factorBadNodeData, factorBadRelationshipData, maxStringLength );\n+        return () -> new RandomEntityDataGenerator(nodes, nodes, 10_000, seed, startId, nodeHeader, labels, relationshipTypes,\n+          factorBadNodeData, factorBadRelationshipData, maxStringLength);\n     }\n \n     @Override\n-    public InputIterable relationships( Collector badCollector )\n+    public InputIterable relationships(Collector badCollector)\n     {\n-        return () -> new RandomEntityDataGenerator( nodes, relationships, 10_000, seed, startId, relationshipHeader,\n-                labels, relationshipTypes, factorBadNodeData, factorBadRelationshipData, maxStringLength );\n+        return () -> new RandomEntityDataGenerator(nodes, relationships, 10_000, seed, startId, relationshipHeader,\n+          labels, relationshipTypes, factorBadNodeData, factorBadRelationshipData, maxStringLength);\n     }\n \n     @Override\n@@ -121,48 +122,47 @@ public class DataGeneratorInput implements Input\n     }\n \n     @Override\n-    public Estimates calculateEstimates( PropertySizeCalculator valueSizeCalculator )\n+    public Estimates calculateEstimates(PropertySizeCalculator valueSizeCalculator)\n     {\n         int sampleSize = 100;\n-        InputEntity[] nodeSample = sample( nodes( Collector.EMPTY ), sampleSize );\n-        double labelsPerNodeEstimate = sampleLabels( nodeSample );\n-        double[] nodePropertyEstimate = sampleProperties( nodeSample, valueSizeCalculator );\n-        double[] relationshipPropertyEstimate = sampleProperties( sample( relationships( Collector.EMPTY ), sampleSize ), valueSizeCalculator );\n+        InputEntity[] nodeSample = sample(nodes(Collector.EMPTY), sampleSize);\n+        double labelsPerNodeEstimate = sampleLabels(nodeSample);\n+        double[] nodePropertyEstimate = sampleProperties(nodeSample, valueSizeCalculator);\n+        double[] relationshipPropertyEstimate = sampleProperties(sample(relationships(Collector.EMPTY), sampleSize), valueSizeCalculator);\n         return Input.knownEstimates(\n-                nodes, relationships,\n-                (long) (nodes * nodePropertyEstimate[0]), (long) (relationships * relationshipPropertyEstimate[0]),\n-                (long) (nodes * nodePropertyEstimate[1]), (long) (relationships * relationshipPropertyEstimate[1]),\n-                (long) (nodes * labelsPerNodeEstimate) );\n+          nodes, relationships,\n+          (long) (nodes * nodePropertyEstimate[0]), (long) (relationships * relationshipPropertyEstimate[0]),\n+          (long) (nodes * nodePropertyEstimate[1]), (long) (relationships * relationshipPropertyEstimate[1]),\n+          (long) (nodes * labelsPerNodeEstimate));\n     }\n \n-    private InputEntity[] sample( InputIterable source, int size )\n+    private InputEntity[] sample(InputIterable source, int size)\n     {\n-        try ( InputIterator iterator = source.iterator();\n-              InputChunk chunk = iterator.newChunk() )\n+        try (InputIterator iterator = source.iterator();\n+             InputChunk chunk = iterator.newChunk())\n         {\n             InputEntity[] sample = new InputEntity[size];\n             int cursor = 0;\n-            while ( cursor < size && iterator.next( chunk ) )\n+            while (cursor < size && iterator.next(chunk))\n             {\n-                while ( cursor < size && chunk.next( sample[cursor++] = new InputEntity() ) )\n+                while (cursor < size && chunk.next(sample[cursor++] = new InputEntity()))\n                 {\n                     // just loop\n                 }\n             }\n             return sample;\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n-            throw new UncheckedIOException( e );\n+            throw new UncheckedIOException(e);\n         }\n     }\n \n-    private static double sampleLabels( InputEntity[] nodes )\n+    private static double sampleLabels(InputEntity[] nodes)\n     {\n         int labels = 0;\n-        for ( InputEntity node : nodes )\n+        for (InputEntity node : nodes)\n         {\n-            if ( node != null )\n+            if (node != null)\n             {\n                 labels += node.labels().length;\n             }\n@@ -170,49 +170,49 @@ public class DataGeneratorInput implements Input\n         return (double) labels / nodes.length;\n     }\n \n-    private static double[] sampleProperties( InputEntity[] sample, PropertySizeCalculator valueSizeCalculator )\n+    private static double[] sampleProperties(InputEntity[] sample, PropertySizeCalculator valueSizeCalculator)\n     {\n         int propertiesPerEntity = sample[0].propertyCount();\n         long propertiesSize = 0;\n-        for ( InputEntity entity : sample )\n+        for (InputEntity entity : sample)\n         {\n-            if ( entity != null )\n+            if (entity != null)\n             {\n-                propertiesSize += Inputs.calculatePropertySize( entity, valueSizeCalculator, NULL, INSTANCE );\n+                propertiesSize += Inputs.calculatePropertySize(entity, valueSizeCalculator, NULL, INSTANCE);\n             }\n         }\n         double propertySizePerEntity = (double) propertiesSize / sample.length;\n         return new double[] {propertiesPerEntity, propertySizePerEntity};\n     }\n \n-    public static Header bareboneNodeHeader( IdType idType, Extractors extractors )\n+    public static Header bareboneNodeHeader(IdType idType, Extractors extractors)\n     {\n-        return bareboneNodeHeader( null, idType, extractors );\n+        return bareboneNodeHeader(null, idType, extractors);\n     }\n \n-    public static Header bareboneNodeHeader( String idKey, IdType idType, Extractors extractors, Entry... additionalEntries )\n+    public static Header bareboneNodeHeader(String idKey, IdType idType, Extractors extractors, Entry... additionalEntries)\n     {\n         List<Entry> entries = new ArrayList<>();\n-        entries.add( new Entry( idKey, Type.ID, null, idExtractor( idType, extractors ) ) );\n-        entries.add( new Entry( null, Type.LABEL, null, extractors.stringArray() ) );\n-        entries.addAll( asList( additionalEntries ) );\n-        return new Header( entries.toArray( new Entry[0] ) );\n+        entries.add(new Entry(idKey, Type.ID, null, idExtractor(idType, extractors)));\n+        entries.add(new Entry(null, Type.LABEL, null, extractors.stringArray()));\n+        entries.addAll(asList(additionalEntries));\n+        return new Header(entries.toArray(new Entry[0]));\n     }\n \n-    public static Header bareboneRelationshipHeader( IdType idType, Extractors extractors, Entry... additionalEntries )\n+    public static Header bareboneRelationshipHeader(IdType idType, Extractors extractors, Entry... additionalEntries)\n     {\n         List<Entry> entries = new ArrayList<>();\n-        entries.add( new Entry( null, Type.START_ID, null, idExtractor( idType, extractors ) ) );\n-        entries.add( new Entry( null, Type.END_ID, null, idExtractor( idType, extractors ) ) );\n-        entries.add( new Entry( null, Type.TYPE, null, extractors.string() ) );\n-        entries.addAll( asList( additionalEntries ) );\n-        return new Header( entries.toArray( new Entry[0] ) );\n+        entries.add(new Entry(null, Type.START_ID, null, idExtractor(idType, extractors)));\n+        entries.add(new Entry(null, Type.END_ID, null, idExtractor(idType, extractors)));\n+        entries.add(new Entry(null, Type.TYPE, null, extractors.string()));\n+        entries.addAll(asList(additionalEntries));\n+        return new Header(entries.toArray(new Entry[0]));\n     }\n \n-    private static String[] tokens( String prefix, int count )\n+    private static String[] tokens(String prefix, int count)\n     {\n         String[] result = new String[count];\n-        for ( int i = 0; i < count; i++ )\n+        for (int i = 0; i < count; i++)\n         {\n             result[i] = prefix + (i + 1);\n         }\n",
            "diff_size": 51
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
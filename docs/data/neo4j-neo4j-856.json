{
    "project_name": "neo4j-neo4j",
    "error_id": "856",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/856/Write.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/856/Write.java\nindex 6a4dd2dd3c9..9164f787908 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/856/Write.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/856/Write.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api;\n \n import org.neo4j.exceptions.KernelException;\n@@ -46,7 +47,7 @@ public interface Write\n      * @param labels The labels to assign to the newly created node.\n      * @return The internal id of the created node.\n      */\n-    long nodeCreateWithLabels( int[] labels ) throws ConstraintValidationException;\n+    long nodeCreateWithLabels(int[] labels) throws ConstraintValidationException;\n \n     /**\n      * Delete a node.\n@@ -54,7 +55,7 @@ public interface Write\n      * @param node the internal id of the node to delete\n      * @return returns true if it deleted a node or false if no node was found for this id\n      */\n-    boolean nodeDelete( long node );\n+    boolean nodeDelete(long node);\n \n     /**\n      * Deletes the node and all relationships connecting the node\n@@ -62,80 +63,80 @@ public interface Write\n      * @param node the node to delete\n      * @return the number of deleted relationships\n      */\n-    int nodeDetachDelete( long node ) throws KernelException;\n+    int nodeDetachDelete(long node) throws KernelException;\n \n     /**\n      * Create a relationship between two nodes.\n      *\n-     * @param sourceNode the source internal node id\n+     * @param sourceNode       the source internal node id\n      * @param relationshipType the type of the relationship to create\n-     * @param targetNode the target internal node id\n+     * @param targetNode       the target internal node id\n      * @return the internal id of the created relationship\n      */\n-    long relationshipCreate( long sourceNode, int relationshipType, long targetNode ) throws EntityNotFoundException;\n+    long relationshipCreate(long sourceNode, int relationshipType, long targetNode) throws EntityNotFoundException;\n \n     /**\n      * Delete a relationship\n      *\n      * @param relationship the internal id of the relationship to delete\n      */\n-    boolean relationshipDelete( long relationship );\n+    boolean relationshipDelete(long relationship);\n \n     /**\n      * Add a label to a node\n      *\n-     * @param node the internal node id\n+     * @param node      the internal node id\n      * @param nodeLabel the internal id of the label to add\n      * @return {@code true} if a label was added otherwise {@code false}\n      * @throws ConstraintValidationException if adding the label to node breaks a constraint\n      */\n-    boolean nodeAddLabel( long node, int nodeLabel ) throws KernelException;\n+    boolean nodeAddLabel(long node, int nodeLabel) throws KernelException;\n \n     /**\n      * Remove a label from a node\n      *\n-     * @param node the internal node id\n+     * @param node      the internal node id\n      * @param nodeLabel the internal id of the label to remove\n      * @return {@code true} if node was removed otherwise {@code false}\n      */\n-    boolean nodeRemoveLabel( long node, int nodeLabel ) throws EntityNotFoundException;\n+    boolean nodeRemoveLabel(long node, int nodeLabel) throws EntityNotFoundException;\n \n     /**\n      * Set a property on a node\n      *\n-     * @param node the internal node id\n+     * @param node        the internal node id\n      * @param propertyKey the property key id\n-     * @param value the value to set\n+     * @param value       the value to set\n      * @return The replaced value, or Values.NO_VALUE if the node did not have the property before\n      */\n-    Value nodeSetProperty( long node, int propertyKey, Value value )\n-            throws KernelException;\n+    Value nodeSetProperty(long node, int propertyKey, Value value)\n+      throws KernelException;\n \n     /**\n      * Remove a property from a node\n      *\n-     * @param node the internal node id\n+     * @param node        the internal node id\n      * @param propertyKey the property key id\n      * @return The removed value, or Values.NO_VALUE if the node did not have the property before\n      */\n-    Value nodeRemoveProperty( long node, int propertyKey ) throws EntityNotFoundException;\n+    Value nodeRemoveProperty(long node, int propertyKey) throws EntityNotFoundException;\n \n     /**\n      * Set a property on a relationship\n      *\n      * @param relationship the internal relationship id\n-     * @param propertyKey the property key id\n-     * @param value the value to set\n+     * @param propertyKey  the property key id\n+     * @param value        the value to set\n      * @return The replaced value, or Values.NO_VALUE if the relationship did not have the property before\n      */\n-    Value relationshipSetProperty( long relationship, int propertyKey, Value value ) throws EntityNotFoundException;\n+    Value relationshipSetProperty(long relationship, int propertyKey, Value value) throws EntityNotFoundException;\n \n     /**\n      * Remove a property from a relationship\n      *\n      * @param relationship the internal relationship id\n-     * @param propertyKey the property key id\n+     * @param propertyKey  the property key id\n      * @return The removed value, or Values.NO_VALUE if the relationship did not have the property before\n      */\n-    Value relationshipRemoveProperty( long relationship, int propertyKey ) throws EntityNotFoundException;\n+    Value relationshipRemoveProperty(long relationship, int propertyKey) throws EntityNotFoundException;\n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
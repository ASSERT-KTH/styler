{
    "project_name": "HuygensING-timbuctoo",
    "error_id": "34",
    "information": {
        "errors": [
            {
                "line": "98",
                "column": "27",
                "severity": "error",
                "message": "WhitespaceAround: '->' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "        .flatMap(RdfResource::asLiteral)\n        .map(RdfLiteral::getValue)\n        .orElseThrow(() ->InvalidRdfResourceException.noValue(node));\n  }\n\n  private void buildSubjectMap(RdfResource object, SubjectMapBuilder builder) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/34/JenaBasedReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler/34/JenaBasedReader.java\nindex 27652d4c6cd..dd90def60f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/34/JenaBasedReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler/34/JenaBasedReader.java\n@@ -95,7 +95,7 @@ public class JenaBasedReader {\n         .findAny()\n         .flatMap(RdfResource::asLiteral)\n         .map(RdfLiteral::getValue)\n-        .orElseThrow(() ->InvalidRdfResourceException.noValue(node));\n+        .orElseThrow(() -> InvalidRdfResourceException.noValue(node));\n   }\n \n   private void buildSubjectMap(RdfResource object, SubjectMapBuilder builder) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/34/JenaBasedReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/intellij/34/JenaBasedReader.java\nindex 27652d4c6cd..c871c0bdc51 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/34/JenaBasedReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/intellij/34/JenaBasedReader.java\n@@ -92,10 +92,10 @@ public class JenaBasedReader {\n \n   private String getJoinConditionProp(RdfResource node, String propName) {\n     return node.out(NS_RR + propName).stream()\n-        .findAny()\n-        .flatMap(RdfResource::asLiteral)\n-        .map(RdfLiteral::getValue)\n-        .orElseThrow(() ->InvalidRdfResourceException.noValue(node));\n+      .findAny()\n+      .flatMap(RdfResource::asLiteral)\n+      .map(RdfLiteral::getValue)\n+      .orElseThrow(() -> InvalidRdfResourceException.noValue(node));\n   }\n \n   private void buildSubjectMap(RdfResource object, SubjectMapBuilder builder) {\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/34/JenaBasedReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/naturalize/34/JenaBasedReader.java\nindex 27652d4c6cd..44caa2a3ce5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/34/JenaBasedReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/naturalize/34/JenaBasedReader.java\n@@ -95,7 +95,7 @@ public class JenaBasedReader {\n         .findAny()\n         .flatMap(RdfResource::asLiteral)\n         .map(RdfLiteral::getValue)\n-        .orElseThrow(() ->InvalidRdfResourceException.noValue(node));\n+        .orElseThrow(() -> InvalidRdfResourceException.noValue(node));\n   }\n \n   private void buildSubjectMap(RdfResource object, SubjectMapBuilder builder) {\n@@ -136,4 +136,4 @@ public class JenaBasedReader {\n     }\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 139).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 163).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 130).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/34/JenaBasedReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/codebuff/34/JenaBasedReader.java\nindex 27652d4c6cd..8408fc4cc4b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/34/JenaBasedReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/codebuff/34/JenaBasedReader.java\n@@ -13,7 +13,6 @@ import nl.knaw.huygens.timbuctoo.rml.rmldata.builders.TriplesMapBuilder;\n import org.apache.jena.rdf.model.Model;\n import org.apache.jena.rdf.model.ResIterator;\n import org.apache.jena.rdf.model.Resource;\n-\n import java.util.Optional;\n import java.util.Set;\n import java.util.function.Function;\n@@ -22,8 +21,8 @@ import static nl.knaw.huygens.timbuctoo.rml.rmldata.RmlMappingDocument.rmlMappin\n \n //This class reads an RDF graph and calls the appropriate builder methods. It does not do any validation, delegating\n // that to the builder itself\n-public class JenaBasedReader {\n \n+public class JenaBasedReader {\n   private static final String NS_RR = \"http://www.w3.org/ns/r2rml#\";\n   private static final String NS_RML = \"http://semweb.mmlab.be/ns/rml#\";\n \n@@ -42,32 +41,17 @@ public class JenaBasedReader {\n   }\n \n   private void buildTripleMap(RdfResource resource, TriplesMapBuilder mapBuilder) {\n-\n     resource.out(NS_RML + \"logicalSource\").forEach(mapBuilder::withLogicalSource);\n     resource.out(NS_RR + \"logicalTable\").forEach(mapBuilder::withLogicalSource);\n-\n     resource.out(NS_RR + \"subjectMap\").forEach(subjectMap -> {\n-      buildSubjectMap(\n-        subjectMap,\n-        mapBuilder.withSubjectMap()\n-      );\n+      buildSubjectMap(subjectMap, mapBuilder.withSubjectMap());\n     });\n-    resource.out(NS_RR + \"predicateObjectMap\").forEach(property ->\n-      buildPredicateObjectMap(\n-        property,\n-        mapBuilder.withPredicateObjectMap()\n-      )\n-    );\n+    resource.out(NS_RR + \"predicateObjectMap\").forEach(property -> buildPredicateObjectMap(property, mapBuilder.withPredicateObjectMap()));\n   }\n \n   private void buildPredicateObjectMap(RdfResource object, PredicateObjectMapBuilder builder) {\n-    object.out(NS_RR + \"predicate\").forEach(predicate ->\n-      builder.withPredicate(predicate.asIri().orElseThrow(() -> InvalidRdfResourceException.notAnIri(predicate)))\n-    );\n-    object.out(NS_RR + \"predicateMap\").forEach(templateValue ->\n-      buildTermMap(templateValue, builder.withPredicateMap())\n-    );\n-\n+    object.out(NS_RR + \"predicate\").forEach(predicate -> builder.withPredicate(predicate.asIri().orElseThrow(() -> InvalidRdfResourceException.notAnIri(predicate))));\n+    object.out(NS_RR + \"predicateMap\").forEach(templateValue -> buildTermMap(templateValue, builder.withPredicateMap()));\n     object.out(NS_RR + \"object\").forEach(builder::withObject);\n     object.out(NS_RR + \"objectMap\").forEach(templateValue -> {\n       Set<RdfResource> parentTriplesMapDefinitions = templateValue.out(NS_RR + \"parentTriplesMap\");\n@@ -80,27 +64,20 @@ public class JenaBasedReader {\n   }\n \n   private void buildReferencingObjectMap(RdfResource templateValue, ReferencingObjectMapBuilder builder) {\n-\n-    templateValue.out(NS_RR + \"parentTriplesMap\").forEach(x ->\n-      builder.withParentTriplesMap(x.asIri().orElseThrow(() -> InvalidRdfResourceException.notAnIri(x)))\n-    );\n-\n-    templateValue.out(NS_RR + \"joinCondition\").forEach(x ->\n-      builder.withJoinCondition(getJoinConditionProp(x, \"child\"), getJoinConditionProp(x, \"parent\"))\n-    );\n+    templateValue.out(NS_RR + \"parentTriplesMap\").forEach(x -> builder.withParentTriplesMap(x.asIri().orElseThrow(() -> InvalidRdfResourceException.notAnIri(x))));\n+    templateValue.out(NS_RR + \"joinCondition\").forEach(x -> builder.withJoinCondition(getJoinConditionProp(x, \"child\"), getJoinConditionProp(x, \"parent\")));\n   }\n \n   private String getJoinConditionProp(RdfResource node, String propName) {\n     return node.out(NS_RR + propName).stream()\n-        .findAny()\n-        .flatMap(RdfResource::asLiteral)\n-        .map(RdfLiteral::getValue)\n-        .orElseThrow(() ->InvalidRdfResourceException.noValue(node));\n+                                     .findAny()\n+                                     .flatMap(RdfResource::asLiteral)\n+                                     .map(RdfLiteral::getValue)\n+                                     .orElseThrow(() -> InvalidRdfResourceException.noValue(node));\n   }\n \n   private void buildSubjectMap(RdfResource object, SubjectMapBuilder builder) {\n     object.out(NS_RR + \"class\").forEach(builder::withClass);\n-\n     buildTermMap(object, builder.withTermMap());\n   }\n \n@@ -109,17 +86,11 @@ public class JenaBasedReader {\n     Set<RdfResource> language = object.out(NS_RR + \"language\");\n     //check if language is only literals and the rest is only Resource\n     Set<RdfResource> datatype = object.out(NS_RR + \"datatype\");\n-\n-    object.out(NS_RR + \"column\").forEach(columnValue ->\n-      termMapBuilder.withColumnTerm(columnValue, termType, language, datatype)\n-    );\n-    object.out(NS_RR + \"template\").forEach(templateValue ->\n-      termMapBuilder.withTemplateTerm(templateValue, termType, language, datatype)\n-    );\n+    object.out(NS_RR + \"column\").forEach(columnValue -> termMapBuilder.withColumnTerm(columnValue, termType, language, datatype));\n+    object.out(NS_RR + \"template\").forEach(templateValue -> termMapBuilder.withTemplateTerm(templateValue, termType, language, datatype));\n     object.out(NS_RR + \"constant\").forEach(templateValue -> {\n       termMapBuilder.withConstantTerm(templateValue, termType, language, datatype);\n     });\n-\n   }\n \n   private static class InvalidRdfResourceException extends RuntimeException {\n@@ -135,5 +106,4 @@ public class JenaBasedReader {\n       return new InvalidRdfResourceException(\"\\\"\" + rdfResource + \"\\\" has no value\");\n     }\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 45
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/34/JenaBasedReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_random/34/JenaBasedReader.java\nindex 27652d4c6cd..dd90def60f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/34/JenaBasedReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_random/34/JenaBasedReader.java\n@@ -95,7 +95,7 @@ public class JenaBasedReader {\n         .findAny()\n         .flatMap(RdfResource::asLiteral)\n         .map(RdfLiteral::getValue)\n-        .orElseThrow(() ->InvalidRdfResourceException.noValue(node));\n+        .orElseThrow(() -> InvalidRdfResourceException.noValue(node));\n   }\n \n   private void buildSubjectMap(RdfResource object, SubjectMapBuilder builder) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/34/JenaBasedReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_three_grams/34/JenaBasedReader.java\nindex 27652d4c6cd..dd90def60f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/errored/1/34/JenaBasedReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/HuygensING-timbuctoo/styler_three_grams/34/JenaBasedReader.java\n@@ -95,7 +95,7 @@ public class JenaBasedReader {\n         .findAny()\n         .flatMap(RdfResource::asLiteral)\n         .map(RdfLiteral::getValue)\n-        .orElseThrow(() ->InvalidRdfResourceException.noValue(node));\n+        .orElseThrow(() -> InvalidRdfResourceException.noValue(node));\n   }\n \n   private void buildSubjectMap(RdfResource object, SubjectMapBuilder builder) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4241",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4241/OperationsFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4241/OperationsFacade.java\nindex 7e81eb8c471..ccbcdc2061c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4241/OperationsFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4241/OperationsFacade.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n import java.util.Map;\n@@ -30,66 +31,66 @@ import org.neo4j.values.virtual.MapValue;\n \n public class OperationsFacade implements QueryRegistryOperations\n {\n-    private final KernelStatement statement;\n-    private StatementOperationParts operations;\n+  private final KernelStatement statement;\n+  private StatementOperationParts operations;\n \n-    OperationsFacade( KernelStatement statement,\n-            StatementOperationParts operationParts )\n-    {\n-        this.statement = statement;\n-        this.operations = operationParts;\n-    }\n+  OperationsFacade(KernelStatement statement,\n+                   StatementOperationParts operationParts)\n+  {\n+    this.statement = statement;\n+    this.operations = operationParts;\n+  }\n \n-    final QueryRegistrationOperations queryRegistrationOperations()\n-    {\n-        return operations.queryRegistrationOperations();\n-    }\n+  final QueryRegistrationOperations queryRegistrationOperations()\n+  {\n+    return operations.queryRegistrationOperations();\n+  }\n \n-    // query monitoring\n+  // query monitoring\n \n-    @Override\n-    public void setMetaData( Map<String,Object> data )\n-    {\n-        statement.assertOpen();\n-        statement.getTransaction().setMetaData( data );\n-    }\n+  @Override\n+  public void setMetaData(Map<String, Object> data)\n+  {\n+    statement.assertOpen();\n+    statement.getTransaction().setMetaData(data);\n+  }\n \n-    @Override\n-    public Map<String,Object> getMetaData()\n-    {\n-        statement.assertOpen();\n-        return statement.getTransaction().getMetaData();\n-    }\n+  @Override\n+  public Map<String, Object> getMetaData()\n+  {\n+    statement.assertOpen();\n+    return statement.getTransaction().getMetaData();\n+  }\n \n-    @Override\n-    public Stream<ExecutingQuery> executingQueries()\n-    {\n-        statement.assertOpen();\n-        return queryRegistrationOperations().executingQueries( statement );\n-    }\n+  @Override\n+  public Stream<ExecutingQuery> executingQueries()\n+  {\n+    statement.assertOpen();\n+    return queryRegistrationOperations().executingQueries(statement);\n+  }\n \n-    @Override\n-    public ExecutingQuery startQueryExecution(\n-        ClientConnectionInfo descriptor,\n-        String queryText,\n-        MapValue queryParameters )\n-    {\n-        statement.assertOpen();\n-        return queryRegistrationOperations().startQueryExecution( statement, descriptor, queryText, queryParameters );\n-    }\n+  @Override\n+  public ExecutingQuery startQueryExecution(\n+      ClientConnectionInfo descriptor,\n+      String queryText,\n+      MapValue queryParameters)\n+  {\n+    statement.assertOpen();\n+    return queryRegistrationOperations().startQueryExecution(statement, descriptor, queryText, queryParameters);\n+  }\n \n-    @Override\n-    public void registerExecutingQuery( ExecutingQuery executingQuery )\n-    {\n-        statement.assertOpen();\n-        queryRegistrationOperations().registerExecutingQuery( statement, executingQuery );\n-    }\n+  @Override\n+  public void registerExecutingQuery(ExecutingQuery executingQuery)\n+  {\n+    statement.assertOpen();\n+    queryRegistrationOperations().registerExecutingQuery(statement, executingQuery);\n+  }\n \n-    @Override\n-    public void unregisterExecutingQuery( ExecutingQuery executingQuery )\n-    {\n-        queryRegistrationOperations().unregisterExecutingQuery( statement, executingQuery );\n-    }\n+  @Override\n+  public void unregisterExecutingQuery(ExecutingQuery executingQuery)\n+  {\n+    queryRegistrationOperations().unregisterExecutingQuery(statement, executingQuery);\n+  }\n \n-    // query monitoring\n+  // query monitoring\n }\n",
            "diff_size": 53
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4241/OperationsFacade.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4241/OperationsFacade.java\nindex 7e81eb8c471..cc078fc739e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4241/OperationsFacade.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4241/OperationsFacade.java\n@@ -69,11 +69,10 @@ public class OperationsFacade implements QueryRegistryOperations\n     }\n \n     @Override\n-    public ExecutingQuery startQueryExecution(\n-        ClientConnectionInfo descriptor,\n+    public ExecutingQuery startQueryExecution( ClientConnectionInfo descriptor,\n         String queryText,\n         MapValue queryParameters )\n-    {\n+{\n         statement.assertOpen();\n         return queryRegistrationOperations().startQueryExecution( statement, descriptor, queryText, queryParameters );\n     }\n@@ -92,4 +91,4 @@ public class OperationsFacade implements QueryRegistryOperations\n     }\n \n     // query monitoring\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "133",
    "information": {
        "errors": [
            {
                "line": "35",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "import java.util.concurrent.Callable;\n\nfinal class StorageServiceImpl extends BaseService<StorageServiceOptions> implements StorageService {\n\n  private static final Interceptor EXCEPTION_HANDLER_INTERCEPTOR =\n      new Interceptor() {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/133/StorageServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/133/StorageServiceImpl.java\nindex 7d653a7fb25..17ccbe5710a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/133/StorageServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/133/StorageServiceImpl.java\n@@ -32,7 +32,8 @@ import java.util.Iterator;\n import java.util.List;\n import java.util.concurrent.Callable;\n \n-final class StorageServiceImpl extends BaseService<StorageServiceOptions> implements StorageService {\n+final class StorageServiceImpl extends BaseService<StorageServiceOptions>\n+    implements StorageService {\n \n   private static final Interceptor EXCEPTION_HANDLER_INTERCEPTOR =\n       new Interceptor() {\n@@ -72,7 +73,8 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n     return Bucket.fromPb(runWithRetries(\n         new Callable<com.google.api.services.storage.model.Bucket>() {\n-          @Override public com.google.api.services.storage.model.Bucket call() {\n+          @Override\n+          public com.google.api.services.storage.model.Bucket call() {\n             return storageRpc.create(bucketPb, options);\n           }\n         }, retryParams, EXCEPTION_HANDLER));\n@@ -82,10 +84,11 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   public Blob create(Blob blob, final byte[] content, final BlobTargetOption... options) {\n     final StorageObject blobPb = blob.toPb();\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-          @Override public StorageObject call() {\n-            return storageRpc.create(blobPb, content, options);\n-          }\n-        }, retryParams, EXCEPTION_HANDLER));\n+      @Override\n+      public StorageObject call() {\n+        return storageRpc.create(blobPb, content, options);\n+      }\n+    }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n@@ -93,7 +96,8 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n     return Bucket.fromPb(runWithRetries(\n         new Callable<com.google.api.services.storage.model.Bucket>() {\n-          @Override public com.google.api.services.storage.model.Bucket call() {\n+          @Override\n+          public com.google.api.services.storage.model.Bucket call() {\n             return storageRpc.get(bucketPb, options);\n           }\n         }, retryParams, EXCEPTION_HANDLER));\n@@ -103,7 +107,8 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   public Blob get(Blob blob, final BlobSourceOption... options) {\n     final StorageObject storedObject = blob.toPb();\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override public StorageObject call() {\n+      @Override\n+      public StorageObject call() {\n         return storageRpc.get(storedObject, options);\n       }\n     }, retryParams, EXCEPTION_HANDLER));\n@@ -113,7 +118,8 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   public Iterator<Bucket> list() {\n     return Iterators.transform(runWithRetries(\n         new Callable<Iterator<com.google.api.services.storage.model.Bucket>>() {\n-          @Override public Iterator<com.google.api.services.storage.model.Bucket> call() {\n+          @Override\n+          public Iterator<com.google.api.services.storage.model.Bucket> call() {\n             return storageRpc.list();\n           }\n         }, retryParams, EXCEPTION_HANDLER),\n@@ -135,7 +141,8 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n     return Bucket.fromPb(runWithRetries(\n         new Callable<com.google.api.services.storage.model.Bucket>() {\n-          @Override public com.google.api.services.storage.model.Bucket call() {\n+          @Override\n+          public com.google.api.services.storage.model.Bucket call() {\n             return storageRpc.patch(bucketPb, options);\n           }\n         }, retryParams, EXCEPTION_HANDLER));\n@@ -145,7 +152,8 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   public Blob update(Blob blob, final BlobTargetOption... options) {\n     final StorageObject storageObject = blob.toPb();\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override public StorageObject call() {\n+      @Override\n+      public StorageObject call() {\n         return storageRpc.patch(storageObject, options);\n       }\n     }, retryParams, EXCEPTION_HANDLER));\n@@ -155,7 +163,8 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   public void delete(Bucket bucket, final BucketSourceOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n     runWithRetries(new Callable<Void>() {\n-      @Override public Void call() {\n+      @Override\n+      public Void call() {\n         storageRpc.delete(bucketPb, options);\n         return null;\n       }\n@@ -166,7 +175,8 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   public void delete(Blob blob, final BlobSourceOption... options) {\n     final StorageObject storageObject = blob.toPb();\n     runWithRetries(new Callable<Void>() {\n-      @Override public Void call() {\n+      @Override\n+      public Void call() {\n         storageRpc.delete(storageObject, options);\n         return null;\n       }\n@@ -185,7 +195,8 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     }\n     final StorageObject target = composeRequest.target().toPb();\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override public StorageObject call() {\n+      @Override\n+      public StorageObject call() {\n         return storageRpc.compose(sources, target, composeRequest.targetOptions());\n       }\n     }, retryParams, EXCEPTION_HANDLER));\n@@ -196,7 +207,8 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     final StorageObject source = copyRequest.source().toPb();\n     final StorageObject target = copyRequest.target().toPb();\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override public StorageObject call() {\n+      @Override\n+      public StorageObject call() {\n         return storageRpc.copy(source, copyRequest.sourceOptions(), target,\n             copyRequest.targetOptions());\n       }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/133/StorageServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/133/StorageServiceImpl.java\nindex 7d653a7fb25..400a17400df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/133/StorageServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/133/StorageServiceImpl.java\n@@ -48,7 +48,8 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n         public RetryResult beforeEval(Exception exception) {\n           if (exception instanceof StorageServiceException) {\n             boolean retriable = ((StorageServiceException) exception).retryable();\n-            return retriable ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.ABORT;\n+            return retriable\n+    ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.ABORT;\n           }\n           return null;\n         }\n@@ -70,8 +71,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   @Override\n   public Bucket create(Bucket bucket, final BucketTargetOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n           @Override public com.google.api.services.storage.model.Bucket call() {\n             return storageRpc.create(bucketPb, options);\n           }\n@@ -82,7 +82,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   public Blob create(Blob blob, final byte[] content, final BlobTargetOption... options) {\n     final StorageObject blobPb = blob.toPb();\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-          @Override public StorageObject call() {\n+  @Override public StorageObject call() {\n             return storageRpc.create(blobPb, content, options);\n           }\n         }, retryParams, EXCEPTION_HANDLER));\n@@ -91,8 +91,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   @Override\n   public Bucket get(Bucket bucket, final BucketSourceOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n           @Override public com.google.api.services.storage.model.Bucket call() {\n             return storageRpc.get(bucketPb, options);\n           }\n@@ -111,8 +110,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n \n   @Override\n   public Iterator<Bucket> list() {\n-    return Iterators.transform(runWithRetries(\n-        new Callable<Iterator<com.google.api.services.storage.model.Bucket>>() {\n+    return Iterators.transform(runWithRetries(new Callable<Iterator<com.google.api.services.storage.model.Bucket>>() {\n           @Override public Iterator<com.google.api.services.storage.model.Bucket> call() {\n             return storageRpc.list();\n           }\n@@ -126,15 +124,13 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     String delimiter = settings.recursive() ? options().pathDelimiter() : null;\n     return Iterators.transform(\n         storageRpc.list(bucket, settings.prefix(), delimiter, settings.cursor(),\n-            settings.includeOlderVersions(), settings.maxResults()),\n-        Blob.FROM_PB_FUNCTION);\n+            settings.includeOlderVersions(), settings.maxResults()), Blob.FROM_PB_FUNCTION);\n   }\n \n   @Override\n   public Bucket update(Bucket bucket, final BucketTargetOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n           @Override public com.google.api.services.storage.model.Bucket call() {\n             return storageRpc.patch(bucketPb, options);\n           }\n@@ -180,8 +176,7 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     for (ComposeRequest.SourceBlob sourceBlob : composeRequest.sourceBlobs()) {\n       sources.add(Blob.builder(composeRequest.sourceBucket(), sourceBlob.blob)\n           .generation(sourceBlob.generation)\n-          .build()\n-          .toPb());\n+          .build().toPb());\n     }\n     final StorageObject target = composeRequest.target().toPb();\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n@@ -214,4 +209,4 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     // todo: Use retry helper on retriable failures\n     return storageRpc.writer(blob.toPb(), options);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'object def' child has incorrect indentation level 69, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 69, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 145).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 71, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 69, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 69, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 71, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 73, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 73, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 71, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 71, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 69, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 67, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 170).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 29, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 25, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "91",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "92",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 29, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 25, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "105",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "113",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 33, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 35, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 33, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 31, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "136",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "138",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 29, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 27, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "140",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 25, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "147",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "149",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "150",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "151",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "158",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "160",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "161",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "162",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "163",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "164",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "165",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "172",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "174",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "175",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "176",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "177",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "178",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "179",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "184",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "186",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "190",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "192",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "192",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "193",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "194",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "202",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "204",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 27, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "204",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "205",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 25, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "206",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 23, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/133/StorageServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/133/StorageServiceImpl.java\nindex 7d653a7fb25..fd667ec9fe2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/133/StorageServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/133/StorageServiceImpl.java\n@@ -27,36 +27,32 @@ import com.google.gcloud.ExceptionHandler;\n import com.google.gcloud.ExceptionHandler.Interceptor;\n import com.google.gcloud.RetryParams;\n import com.google.gcloud.spi.StorageRpc;\n-\n import java.util.Iterator;\n import java.util.List;\n import java.util.concurrent.Callable;\n \n-final class StorageServiceImpl extends BaseService<StorageServiceOptions> implements StorageService {\n \n-  private static final Interceptor EXCEPTION_HANDLER_INTERCEPTOR =\n-      new Interceptor() {\n-\n-        private static final long serialVersionUID = -7758580330857881124L;\n-\n-        @Override\n-        public RetryResult afterEval(Exception exception, RetryResult retryResult) {\n-          return null;\n-        }\n-\n-        @Override\n-        public RetryResult beforeEval(Exception exception) {\n-          if (exception instanceof StorageServiceException) {\n-            boolean retriable = ((StorageServiceException) exception).retryable();\n-            return retriable ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.ABORT;\n-          }\n-          return null;\n-        }\n-      };\n-  private static final ExceptionHandler EXCEPTION_HANDLER = ExceptionHandler.builder()\n-      .abortOn(RuntimeException.class)\n-      .interceptor(EXCEPTION_HANDLER_INTERCEPTOR).build();\n+final class StorageServiceImpl extends BaseService<StorageServiceOptions> implements StorageService {\n \n+  private static final Interceptor EXCEPTION_HANDLER_INTERCEPTOR = new Interceptor() {\n+\n+                                                                     private static final long serialVersionUID = -7758580330857881124L;\n+\n+                                                                     @Override\n+                                                                     public RetryResult afterEval(Exception exception, RetryResult retryResult) {\n+                                                                       return null;\n+                                                                     }\n+\n+                                                                     @Override\n+                                                                     public RetryResult beforeEval(Exception exception) {\n+                                                                       if (exception instanceof StorageServiceException) {\n+                                                                         boolean retriable = ((StorageServiceException) exception).retryable();\n+                                                                         return retriable ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.ABORT;\n+                                                                       }\n+                                                                       return null;\n+                                                                     }\n+                                                                   };\n+  private static final ExceptionHandler EXCEPTION_HANDLER = ExceptionHandler.builder().abortOn(RuntimeException.class).interceptor(EXCEPTION_HANDLER_INTERCEPTOR).build();\n   private final StorageRpc storageRpc;\n   private final RetryParams retryParams;\n \n@@ -70,125 +66,132 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n   @Override\n   public Bucket create(Bucket bucket, final BucketTargetOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n-          @Override public com.google.api.services.storage.model.Bucket call() {\n-            return storageRpc.create(bucketPb, options);\n-          }\n-        }, retryParams, EXCEPTION_HANDLER));\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n+                           @Override\n+                           public com.google.api.services.storage.model.Bucket call() {\n+                             return storageRpc.create(bucketPb, options);\n+                           }\n+                         }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n   public Blob create(Blob blob, final byte[] content, final BlobTargetOption... options) {\n     final StorageObject blobPb = blob.toPb();\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-          @Override public StorageObject call() {\n-            return storageRpc.create(blobPb, content, options);\n-          }\n-        }, retryParams, EXCEPTION_HANDLER));\n+                         @Override\n+                         public StorageObject call() {\n+                           return storageRpc.create(blobPb, content, options);\n+                         }\n+                       }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n   public Bucket get(Bucket bucket, final BucketSourceOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n-          @Override public com.google.api.services.storage.model.Bucket call() {\n-            return storageRpc.get(bucketPb, options);\n-          }\n-        }, retryParams, EXCEPTION_HANDLER));\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n+                           @Override\n+                           public com.google.api.services.storage.model.Bucket call() {\n+                             return storageRpc.get(bucketPb, options);\n+                           }\n+                         }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n   public Blob get(Blob blob, final BlobSourceOption... options) {\n     final StorageObject storedObject = blob.toPb();\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override public StorageObject call() {\n-        return storageRpc.get(storedObject, options);\n-      }\n-    }, retryParams, EXCEPTION_HANDLER));\n+                         @Override\n+                         public StorageObject call() {\n+                           return storageRpc.get(storedObject, options);\n+                         }\n+                       }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n   public Iterator<Bucket> list() {\n-    return Iterators.transform(runWithRetries(\n-        new Callable<Iterator<com.google.api.services.storage.model.Bucket>>() {\n-          @Override public Iterator<com.google.api.services.storage.model.Bucket> call() {\n-            return storageRpc.list();\n-          }\n-        }, retryParams, EXCEPTION_HANDLER),\n-        Bucket.FROM_PB_FUNCTION);\n+    return Iterators.transform(runWithRetries(new Callable<Iterator<com.google.api.services.storage.model.Bucket>>() {\n+                                 @Override\n+                                 public Iterator<com.google.api.services.storage.model.Bucket> call() {\n+                                   return storageRpc.list();\n+                                 }\n+                               }, retryParams, EXCEPTION_HANDLER), Bucket.FROM_PB_FUNCTION);\n   }\n \n   @Override\n   public Iterator<Blob> list(String bucket, ListOptions settings) {\n     // todo implement paging (with retries) with if limit is not given or > X\n     String delimiter = settings.recursive() ? options().pathDelimiter() : null;\n-    return Iterators.transform(\n-        storageRpc.list(bucket, settings.prefix(), delimiter, settings.cursor(),\n-            settings.includeOlderVersions(), settings.maxResults()),\n-        Blob.FROM_PB_FUNCTION);\n+    return Iterators.transform(storageRpc.list(bucket,\n+      settings.prefix(),\n+        delimiter,\n+          settings.cursor(),\n+            settings.includeOlderVersions(),\n+              settings.maxResults()), Blob.FROM_PB_FUNCTION);\n   }\n \n   @Override\n   public Bucket update(Bucket bucket, final BucketTargetOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n-    return Bucket.fromPb(runWithRetries(\n-        new Callable<com.google.api.services.storage.model.Bucket>() {\n-          @Override public com.google.api.services.storage.model.Bucket call() {\n-            return storageRpc.patch(bucketPb, options);\n-          }\n-        }, retryParams, EXCEPTION_HANDLER));\n+    return Bucket.fromPb(runWithRetries(new Callable<com.google.api.services.storage.model.Bucket>() {\n+                           @Override\n+                           public com.google.api.services.storage.model.Bucket call() {\n+                             return storageRpc.patch(bucketPb, options);\n+                           }\n+                         }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n   public Blob update(Blob blob, final BlobTargetOption... options) {\n     final StorageObject storageObject = blob.toPb();\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override public StorageObject call() {\n-        return storageRpc.patch(storageObject, options);\n-      }\n-    }, retryParams, EXCEPTION_HANDLER));\n+                         @Override\n+                         public StorageObject call() {\n+                           return storageRpc.patch(storageObject, options);\n+                         }\n+                       }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n   public void delete(Bucket bucket, final BucketSourceOption... options) {\n     final com.google.api.services.storage.model.Bucket bucketPb = bucket.toPb();\n     runWithRetries(new Callable<Void>() {\n-      @Override public Void call() {\n-        storageRpc.delete(bucketPb, options);\n-        return null;\n-      }\n-    }, retryParams, EXCEPTION_HANDLER);\n+@Override\n+public Void call() {\n+  storageRpc.delete(bucketPb, options);\n+  return null;\n+}\n+},\n+retryParams,\n+EXCEPTION_HANDLER);\n   }\n \n   @Override\n   public void delete(Blob blob, final BlobSourceOption... options) {\n     final StorageObject storageObject = blob.toPb();\n     runWithRetries(new Callable<Void>() {\n-      @Override public Void call() {\n-        storageRpc.delete(storageObject, options);\n-        return null;\n-      }\n-    }, retryParams, EXCEPTION_HANDLER);\n+@Override\n+public Void call() {\n+  storageRpc.delete(storageObject, options);\n+  return null;\n+}\n+},\n+retryParams,\n+EXCEPTION_HANDLER);\n   }\n \n   @Override\n   public Blob compose(final ComposeRequest composeRequest) {\n-    final List<StorageObject> sources =\n-        Lists.newArrayListWithCapacity(composeRequest.sourceBlobs().size());\n+    final List<StorageObject> sources = Lists.newArrayListWithCapacity(composeRequest.sourceBlobs().size());\n     for (ComposeRequest.SourceBlob sourceBlob : composeRequest.sourceBlobs()) {\n-      sources.add(Blob.builder(composeRequest.sourceBucket(), sourceBlob.blob)\n-          .generation(sourceBlob.generation)\n-          .build()\n-          .toPb());\n+      sources.add(Blob.builder(composeRequest.sourceBucket(), sourceBlob.blob).generation(sourceBlob.generation).build().toPb());\n     }\n     final StorageObject target = composeRequest.target().toPb();\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override public StorageObject call() {\n-        return storageRpc.compose(sources, target, composeRequest.targetOptions());\n-      }\n-    }, retryParams, EXCEPTION_HANDLER));\n+                         @Override\n+                         public StorageObject call() {\n+                           return storageRpc.compose(sources, target, composeRequest.targetOptions());\n+                         }\n+                       }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n@@ -196,11 +199,11 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     final StorageObject source = copyRequest.source().toPb();\n     final StorageObject target = copyRequest.target().toPb();\n     return Blob.fromPb(runWithRetries(new Callable<StorageObject>() {\n-      @Override public StorageObject call() {\n-        return storageRpc.copy(source, copyRequest.sourceOptions(), target,\n-            copyRequest.targetOptions());\n-      }\n-    }, retryParams, EXCEPTION_HANDLER));\n+                         @Override\n+                         public StorageObject call() {\n+                           return storageRpc.copy(source, copyRequest.sourceOptions(), target, copyRequest.targetOptions());\n+                         }\n+                       }, retryParams, EXCEPTION_HANDLER));\n   }\n \n   @Override\n@@ -214,4 +217,4 @@ final class StorageServiceImpl extends BaseService<StorageServiceOptions> implem\n     // todo: Use retry helper on retriable failures\n     return storageRpc.writer(blob.toPb(), options);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 122
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
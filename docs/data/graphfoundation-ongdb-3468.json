{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3468",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3468/HighLimitV3_1_0.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3468/HighLimitV3_1_0.java\nindex 841d2ffd547..3b191e4fb90 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3468/HighLimitV3_1_0.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3468/HighLimitV3_1_0.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.format.highlimit.v310;\n \n import org.neo4j.kernel.impl.store.format.BaseRecordFormats;\n@@ -46,79 +47,79 @@ import org.neo4j.kernel.impl.store.record.RelationshipTypeTokenRecord;\n  */\n public class HighLimitV3_1_0 extends BaseRecordFormats\n {\n-    /**\n-     * Default maximum number of bits that can be used to represent id\n-     */\n-    static final int DEFAULT_MAXIMUM_BITS_PER_ID = 50;\n-\n-    public static final String STORE_VERSION = StoreVersion.HIGH_LIMIT_V3_1_0.versionString();\n-\n-    public static final RecordFormats RECORD_FORMATS = new HighLimitV3_1_0();\n-    public static final String NAME = \"high_limitV3_1_0\";\n-\n-    public HighLimitV3_1_0()\n-    {\n-        super( STORE_VERSION, StoreVersion.HIGH_LIMIT_V3_1_0.introductionVersion(), 3, Capability.DENSE_NODES,\n-                Capability.RELATIONSHIP_TYPE_3BYTES, Capability.SCHEMA, Capability.LUCENE_5, Capability.SECONDARY_RECORD_UNITS );\n-    }\n-\n-    @Override\n-    public RecordFormat<NodeRecord> node()\n-    {\n-        return new NodeRecordFormatV3_1_0();\n-    }\n-\n-    @Override\n-    public RecordFormat<RelationshipRecord> relationship()\n-    {\n-        return new RelationshipRecordFormatV3_1_0();\n-    }\n-\n-    @Override\n-    public RecordFormat<RelationshipGroupRecord> relationshipGroup()\n-    {\n-        return new RelationshipGroupRecordFormatV3_1_0();\n-    }\n-\n-    @Override\n-    public RecordFormat<PropertyRecord> property()\n-    {\n-        return new PropertyRecordFormatV3_1_0();\n-    }\n-\n-    @Override\n-    public RecordFormat<LabelTokenRecord> labelToken()\n-    {\n-        return new LabelTokenRecordFormat();\n-    }\n-\n-    @Override\n-    public RecordFormat<PropertyKeyTokenRecord> propertyKeyToken()\n-    {\n-        return new PropertyKeyTokenRecordFormat();\n-    }\n-\n-    @Override\n-    public RecordFormat<RelationshipTypeTokenRecord> relationshipTypeToken()\n-    {\n-        return new RelationshipTypeTokenRecordFormat();\n-    }\n-\n-    @Override\n-    public RecordFormat<DynamicRecord> dynamic()\n-    {\n-        return new DynamicRecordFormat();\n-    }\n-\n-    @Override\n-    public FormatFamily getFormatFamily()\n-    {\n-        return HighLimitFormatFamily.INSTANCE;\n-    }\n-\n-    @Override\n-    public String name()\n-    {\n-        return NAME;\n-    }\n+  /**\n+   * Default maximum number of bits that can be used to represent id\n+   */\n+  static final int DEFAULT_MAXIMUM_BITS_PER_ID = 50;\n+\n+  public static final String STORE_VERSION = StoreVersion.HIGH_LIMIT_V3_1_0.versionString();\n+\n+  public static final RecordFormats RECORD_FORMATS = new HighLimitV3_1_0();\n+  public static final String NAME = \"high_limitV3_1_0\";\n+\n+  public HighLimitV3_1_0()\n+  {\n+    super(STORE_VERSION, StoreVersion.HIGH_LIMIT_V3_1_0.introductionVersion(), 3, Capability.DENSE_NODES,\n+        Capability.RELATIONSHIP_TYPE_3BYTES, Capability.SCHEMA, Capability.LUCENE_5, Capability.SECONDARY_RECORD_UNITS);\n+  }\n+\n+  @Override\n+  public RecordFormat<NodeRecord> node()\n+  {\n+    return new NodeRecordFormatV3_1_0();\n+  }\n+\n+  @Override\n+  public RecordFormat<RelationshipRecord> relationship()\n+  {\n+    return new RelationshipRecordFormatV3_1_0();\n+  }\n+\n+  @Override\n+  public RecordFormat<RelationshipGroupRecord> relationshipGroup()\n+  {\n+    return new RelationshipGroupRecordFormatV3_1_0();\n+  }\n+\n+  @Override\n+  public RecordFormat<PropertyRecord> property()\n+  {\n+    return new PropertyRecordFormatV3_1_0();\n+  }\n+\n+  @Override\n+  public RecordFormat<LabelTokenRecord> labelToken()\n+  {\n+    return new LabelTokenRecordFormat();\n+  }\n+\n+  @Override\n+  public RecordFormat<PropertyKeyTokenRecord> propertyKeyToken()\n+  {\n+    return new PropertyKeyTokenRecordFormat();\n+  }\n+\n+  @Override\n+  public RecordFormat<RelationshipTypeTokenRecord> relationshipTypeToken()\n+  {\n+    return new RelationshipTypeTokenRecordFormat();\n+  }\n+\n+  @Override\n+  public RecordFormat<DynamicRecord> dynamic()\n+  {\n+    return new DynamicRecordFormat();\n+  }\n+\n+  @Override\n+  public FormatFamily getFormatFamily()\n+  {\n+    return HighLimitFormatFamily.INSTANCE;\n+  }\n+\n+  @Override\n+  public String name()\n+  {\n+    return NAME;\n+  }\n }\n",
            "diff_size": 76
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3468/HighLimitV3_1_0.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3468/HighLimitV3_1_0.java\nindex 841d2ffd547..0014eab5f7f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3468/HighLimitV3_1_0.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3468/HighLimitV3_1_0.java\n@@ -121,4 +121,4 @@ public class HighLimitV3_1_0 extends BaseRecordFormats\n     {\n         return NAME;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
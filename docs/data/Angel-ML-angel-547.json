{
    "project_name": "Angel-ML-angel",
    "error_id": "547",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/547/Node.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/547/Node.java\nindex 0c242850913..76ad5b17285 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/547/Node.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/547/Node.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.node2vec.data;\n \n import com.tencent.angel.graph.data.NodeUtils;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/547/Node.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/547/Node.java\nindex 0c242850913..283977f9a3d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/547/Node.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/547/Node.java\n@@ -96,8 +96,7 @@ public class Node implements IElement {\n   @Override\n   public com.tencent.angel.graph.data.Node deepClone() {\n     IntFloatVector cloneFeats = feats.clone();\n-\n-    long[] cloneNeighbors = new long[neighbors.length];\n+long[] cloneNeighbors = new long[neighbors.length];\n     System.arraycopy(neighbors, 0, cloneNeighbors, 0, neighbors.length);\n \n     if (types == null) {\n@@ -195,4 +194,4 @@ public class Node implements IElement {\n   public int dataLen() {\n     return bufferLen();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/547/Node.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/547/Node.java\nindex 0c242850913..3ab1bab681b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/547/Node.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/547/Node.java\n@@ -96,10 +96,8 @@ public class Node implements IElement {\n   @Override\n   public com.tencent.angel.graph.data.Node deepClone() {\n     IntFloatVector cloneFeats = feats.clone();\n-\n     long[] cloneNeighbors = new long[neighbors.length];\n     System.arraycopy(neighbors, 0, cloneNeighbors, 0, neighbors.length);\n-\n     if (types == null) {\n       return new com.tencent.angel.graph.data.Node(cloneFeats, cloneNeighbors);\n     } else {\n@@ -112,7 +110,6 @@ public class Node implements IElement {\n   @Override\n   public void serialize(ByteBuf output) {\n     NodeUtils.serialize(feats, output);\n-\n     output.writeInt(neighbors.length);\n     for (int i = 0; i < neighbors.length; i++) {\n       output.writeLong(neighbors[i]);\n@@ -158,7 +155,6 @@ public class Node implements IElement {\n   @Override\n   public void serialize(DataOutputStream output) throws IOException {\n     NodeUtils.serialize(feats, output);\n-\n     output.writeInt(neighbors.length);\n     for (int i = 0; i < neighbors.length; i++) {\n       output.writeLong(neighbors[i]);\n@@ -195,4 +191,5 @@ public class Node implements IElement {\n   public int dataLen() {\n     return bufferLen();\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "3205",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3205/TokenRead.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3205/TokenRead.java\nindex d55d01ec142..81135b06305 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3205/TokenRead.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3205/TokenRead.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api;\n \n import java.util.Iterator;\n@@ -51,7 +52,7 @@ public interface TokenRead extends TokenNameLookup\n      * @param name The label name.\n      * @return the label id, or NO_TOKEN\n      */\n-    int nodeLabel( String name );\n+    int nodeLabel(String name);\n \n     /**\n      * Returns the name of a label given its label id\n@@ -60,7 +61,7 @@ public interface TokenRead extends TokenNameLookup\n      * @return The name of the label\n      * @throws LabelNotFoundKernelException if no label is associates with this id\n      */\n-    String nodeLabelName( int labelId ) throws LabelNotFoundKernelException;\n+    String nodeLabelName(int labelId) throws LabelNotFoundKernelException;\n \n     /**\n      * Return the id of the provided relationship type, or NO_TOKEN if the type isn't known to the graph.\n@@ -68,7 +69,7 @@ public interface TokenRead extends TokenNameLookup\n      * @param name The relationship type name.\n      * @return the relationship type id, or NO_TOKEN\n      */\n-    int relationshipType( String name );\n+    int relationshipType(String name);\n \n     /**\n      * Returns the name of a relationship type given its id\n@@ -76,7 +77,7 @@ public interface TokenRead extends TokenNameLookup\n      * @param relationshipTypeId The id of the relationship type\n      * @return The name of the relationship type\n      */\n-    String relationshipTypeName( int relationshipTypeId ) throws KernelException;\n+    String relationshipTypeName(int relationshipTypeId) throws KernelException;\n \n     /**\n      * Return the id of the provided property key, or NO_TOKEN if the property isn't known to the graph.\n@@ -84,7 +85,7 @@ public interface TokenRead extends TokenNameLookup\n      * @param name The property key name.\n      * @return the property key id, or NO_TOKEN\n      */\n-    int propertyKey( String name );\n+    int propertyKey(String name);\n \n     /**\n      * Returns the name of a property given its property key id\n@@ -93,40 +94,46 @@ public interface TokenRead extends TokenNameLookup\n      * @return The name of the key\n      * @throws PropertyKeyIdNotFoundKernelException if no key is associated with the id\n      */\n-    String propertyKeyName( int propertyKeyId ) throws PropertyKeyIdNotFoundKernelException;\n+    String propertyKeyName(int propertyKeyId) throws PropertyKeyIdNotFoundKernelException;\n \n     /**\n      * Returns all label tokens\n+     *\n      * @return an iterator over all label tokens in the database\n      */\n     Iterator<NamedToken> labelsGetAllTokens();\n \n     /**\n      * Returns all property tokens\n+     *\n      * @return an iterator over all property tokens in the database\n      */\n     Iterator<NamedToken> propertyKeyGetAllTokens();\n \n     /**\n      * Returns all relationship type tokens\n+     *\n      * @return an iterator over all relationship type tokens in the database\n      */\n     Iterator<NamedToken> relationshipTypesGetAllTokens();\n \n     /**\n      * Returns the number of labels in the database\n+     *\n      * @return the number of labels in the database\n      */\n     int labelCount();\n \n     /**\n      * Returns the number of properties in the database\n+     *\n      * @return the number of properties in the database\n      */\n     int propertyKeyCount();\n \n     /**\n      * Returns the number of relationship types in the database\n+     *\n      * @return the number of relationship types in the database\n      */\n     int relationshipTypeCount();\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
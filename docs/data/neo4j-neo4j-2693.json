{
    "project_name": "neo4j-neo4j",
    "error_id": "2693",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2693/IndexStatisticsLayout.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2693/IndexStatisticsLayout.java\nindex e69d67fdf74..b273eab0555 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2693/IndexStatisticsLayout.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2693/IndexStatisticsLayout.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index.stats;\n \n import org.neo4j.index.internal.gbptree.GBPTree;\n@@ -26,11 +27,11 @@ import org.neo4j.io.pagecache.PageCursor;\n /**\n  * {@link GBPTree} layout in {@link IndexStatisticsStore}, using {@link IndexStatisticsKey} and {@link IndexStatisticsValue}.\n  */\n-public class IndexStatisticsLayout extends Layout.Adapter<IndexStatisticsKey,IndexStatisticsValue>\n+public class IndexStatisticsLayout extends Layout.Adapter<IndexStatisticsKey, IndexStatisticsValue>\n {\n     public IndexStatisticsLayout()\n     {\n-        super( true, 556_677, 0, 2 );\n+        super(true, 556_677, 0, 2);\n     }\n \n     @Override\n@@ -40,9 +41,9 @@ public class IndexStatisticsLayout extends Layout.Adapter<IndexStatisticsKey,Ind\n     }\n \n     @Override\n-    public IndexStatisticsKey copyKey( IndexStatisticsKey key, IndexStatisticsKey into )\n+    public IndexStatisticsKey copyKey(IndexStatisticsKey key, IndexStatisticsKey into)\n     {\n-        into.setIndexId( key.getIndexId() );\n+        into.setIndexId(key.getIndexId());\n         return into;\n     }\n \n@@ -53,62 +54,62 @@ public class IndexStatisticsLayout extends Layout.Adapter<IndexStatisticsKey,Ind\n     }\n \n     @Override\n-    public int keySize( IndexStatisticsKey key )\n+    public int keySize(IndexStatisticsKey key)\n     {\n         return IndexStatisticsKey.SIZE;\n     }\n \n     @Override\n-    public int valueSize( IndexStatisticsValue value )\n+    public int valueSize(IndexStatisticsValue value)\n     {\n         return IndexStatisticsValue.SIZE;\n     }\n \n     @Override\n-    public void writeKey( PageCursor cursor, IndexStatisticsKey key )\n+    public void writeKey(PageCursor cursor, IndexStatisticsKey key)\n     {\n-        cursor.putLong( key.getIndexId() );\n+        cursor.putLong(key.getIndexId());\n     }\n \n     @Override\n-    public void writeValue( PageCursor cursor, IndexStatisticsValue value )\n+    public void writeValue(PageCursor cursor, IndexStatisticsValue value)\n     {\n-        cursor.putLong( value.getSampleUniqueValues() );\n-        cursor.putLong( value.getSampleSize() );\n-        cursor.putLong( value.getUpdatesCount() );\n-        cursor.putLong( value.getIndexSize() );\n+        cursor.putLong(value.getSampleUniqueValues());\n+        cursor.putLong(value.getSampleSize());\n+        cursor.putLong(value.getUpdatesCount());\n+        cursor.putLong(value.getIndexSize());\n     }\n \n     @Override\n-    public void readKey( PageCursor cursor, IndexStatisticsKey into, int keySize )\n+    public void readKey(PageCursor cursor, IndexStatisticsKey into, int keySize)\n     {\n-        into.setIndexId( cursor.getLong() );\n+        into.setIndexId(cursor.getLong());\n     }\n \n     @Override\n-    public void readValue( PageCursor cursor, IndexStatisticsValue into, int valueSize )\n+    public void readValue(PageCursor cursor, IndexStatisticsValue into, int valueSize)\n     {\n-        into.setSampleUniqueValues( cursor.getLong() );\n-        into.setSampleSize( cursor.getLong() );\n-        into.setUpdatesCount( cursor.getLong() );\n-        into.setIndexSize( cursor.getLong() );\n+        into.setSampleUniqueValues(cursor.getLong());\n+        into.setSampleSize(cursor.getLong());\n+        into.setUpdatesCount(cursor.getLong());\n+        into.setIndexSize(cursor.getLong());\n     }\n \n     @Override\n-    public int compare( IndexStatisticsKey o1, IndexStatisticsKey o2 )\n+    public int compare(IndexStatisticsKey o1, IndexStatisticsKey o2)\n     {\n-        return Long.compare( o1.getIndexId(), o2.getIndexId() );\n+        return Long.compare(o1.getIndexId(), o2.getIndexId());\n     }\n \n     @Override\n-    public void initializeAsLowest( IndexStatisticsKey key )\n+    public void initializeAsLowest(IndexStatisticsKey key)\n     {\n-        key.setIndexId( Long.MIN_VALUE );\n+        key.setIndexId(Long.MIN_VALUE);\n     }\n \n     @Override\n-    public void initializeAsHighest( IndexStatisticsKey key )\n+    public void initializeAsHighest(IndexStatisticsKey key)\n     {\n-        key.setIndexId( Long.MAX_VALUE );\n+        key.setIndexId(Long.MAX_VALUE);\n     }\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "140",
    "information": {
        "errors": [
            {
                "line": "34",
                "column": "45",
                "severity": "error",
                "message": "'}' at column 45 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\n\n  public OAuth2AuthenticationAccessToken() {}\n\n  /**\n   * Construct an access token.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "34",
                    "column": "45",
                    "severity": "error",
                    "message": "'}' at column 45 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/140/OAuth2AuthenticationAccessToken.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/140/OAuth2AuthenticationAccessToken.java\nindex 8b43a760047..06b225b86cf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/140/OAuth2AuthenticationAccessToken.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/140/OAuth2AuthenticationAccessToken.java\n@@ -12,7 +12,7 @@ import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n  * The OAuth2 AccessToken.\n  */\n @Document(collection = \"oauth2_authentication_access_tokens\")\n-@SuppressFBWarnings(value = { \"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\" })\n+@SuppressFBWarnings(value = {\"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\"})\n public class OAuth2AuthenticationAccessToken {\n \n   @Id\n@@ -31,15 +31,17 @@ public class OAuth2AuthenticationAccessToken {\n   private String refreshToken;\n \n \n-  public OAuth2AuthenticationAccessToken() {}\n+  public OAuth2AuthenticationAccessToken() {\n+  }\n \n   /**\n    * Construct an access token.\n    */\n   @PersistenceConstructor\n   public OAuth2AuthenticationAccessToken(final String tokenId, final byte[] token,\n-      final String authenticationId, final String username, final String clientId,\n-      final byte[] authentication, final String refreshToken) {\n+                                         final String authenticationId, final String username,\n+                                         final String clientId,\n+                                         final byte[] authentication, final String refreshToken) {\n     this.tokenId = tokenId;\n     this.token = token;\n     this.authenticationId = authenticationId;\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "33",
                    "column": "45",
                    "severity": "error",
                    "message": "'}' at column 45 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "'final' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 275).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/140/OAuth2AuthenticationAccessToken.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/140/OAuth2AuthenticationAccessToken.java\nindex 8b43a760047..bfb0de1774c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/140/OAuth2AuthenticationAccessToken.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/140/OAuth2AuthenticationAccessToken.java\n@@ -12,7 +12,7 @@ import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n  * The OAuth2 AccessToken.\n  */\n @Document(collection = \"oauth2_authentication_access_tokens\")\n-@SuppressFBWarnings(value = { \"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\" })\n+@SuppressFBWarnings(value = {\"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\"})\n public class OAuth2AuthenticationAccessToken {\n \n   @Id\n@@ -30,14 +30,14 @@ public class OAuth2AuthenticationAccessToken {\n \n   private String refreshToken;\n \n-\n   public OAuth2AuthenticationAccessToken() {}\n \n   /**\n    * Construct an access token.\n    */\n   @PersistenceConstructor\n-  public OAuth2AuthenticationAccessToken(final String tokenId, final byte[] token,\n+  public OAuth2AuthenticationAccessToken(final String tokenId,\n+final byte[] token,\n       final String authenticationId, final String username, final String clientId,\n       final byte[] authentication, final String refreshToken) {\n     this.tokenId = tokenId;\n@@ -92,10 +92,6 @@ public class OAuth2AuthenticationAccessToken {\n     }\n     final OAuth2AuthenticationAccessToken other = (OAuth2AuthenticationAccessToken) obj;\n     return this.token == other.token\n-        && Objects.equals(this.authenticationId, other.authenticationId)\n-        && Objects.equals(this.username, other.username)\n-        && Objects.equals(this.clientId, other.clientId)\n-        && this.authentication == other.authentication\n-        && Objects.equals(this.refreshToken, other.refreshToken);\n+        && Objects.equals(this.authenticationId, other.authenticationId) && Objects.equals(this.username, other.username) && Objects.equals(this.clientId, other.clientId) && this.authentication == other.authentication && Objects.equals(this.refreshToken, other.refreshToken);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "43",
                    "severity": "error",
                    "message": "'final' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "'final' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'final' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'final' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "'final' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "'final' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 304).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/140/OAuth2AuthenticationAccessToken.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/140/OAuth2AuthenticationAccessToken.java\nindex 8b43a760047..4396860ffa4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/140/OAuth2AuthenticationAccessToken.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/140/OAuth2AuthenticationAccessToken.java\n@@ -1,18 +1,18 @@\n package eu.dzhw.fdz.metadatamanagement.usermanagement.domain;\n \n import java.util.Objects;\n-\n import org.springframework.data.annotation.Id;\n import org.springframework.data.annotation.PersistenceConstructor;\n import org.springframework.data.mongodb.core.mapping.Document;\n-\n import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;\n \n /**\n  * The OAuth2 AccessToken.\n  */\n+\n+\n @Document(collection = \"oauth2_authentication_access_tokens\")\n-@SuppressFBWarnings(value = { \"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\" })\n+@SuppressFBWarnings(value = {\"EI_EXPOSE_REP\", \"EI_EXPOSE_REP2\"})\n public class OAuth2AuthenticationAccessToken {\n \n   @Id\n@@ -30,16 +30,22 @@ public class OAuth2AuthenticationAccessToken {\n \n   private String refreshToken;\n \n-\n-  public OAuth2AuthenticationAccessToken() {}\n+  public OAuth2AuthenticationAccessToken() {\n+  }\n \n   /**\n    * Construct an access token.\n    */\n+\n+\n   @PersistenceConstructor\n-  public OAuth2AuthenticationAccessToken(final String tokenId, final byte[] token,\n-      final String authenticationId, final String username, final String clientId,\n-      final byte[] authentication, final String refreshToken) {\n+  public OAuth2AuthenticationAccessToken(final String tokenId,\n+final byte[] token,\n+final String authenticationId,\n+final String username,\n+final String clientId,\n+final byte[] authentication,\n+final String refreshToken) {\n     this.tokenId = tokenId;\n     this.token = token;\n     this.authenticationId = authenticationId;\n@@ -77,25 +83,23 @@ public class OAuth2AuthenticationAccessToken {\n     return refreshToken;\n   }\n \n+\n   @Override\n   public int hashCode() {\n     return Objects.hash(token, authenticationId, username, clientId, authentication, refreshToken);\n   }\n \n+\n   @Override\n   public boolean equals(Object obj) {\n     if (this == obj) {\n       return true;\n     }\n-    if (obj == null || getClass() != obj.getClass()) {\n+    if (obj == null\n+        || getClass() != obj.getClass()) {\n       return false;\n     }\n     final OAuth2AuthenticationAccessToken other = (OAuth2AuthenticationAccessToken) obj;\n-    return this.token == other.token\n-        && Objects.equals(this.authenticationId, other.authenticationId)\n-        && Objects.equals(this.username, other.username)\n-        && Objects.equals(this.clientId, other.clientId)\n-        && this.authentication == other.authentication\n-        && Objects.equals(this.refreshToken, other.refreshToken);\n+    return this.token == other.token && Objects.equals(this.authenticationId, other.authenticationId) && Objects.equals(this.username, other.username) && Objects.equals(this.clientId, other.clientId) && this.authentication == other.authentication && Objects.equals(this.refreshToken, other.refreshToken);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "34",
                    "column": "45",
                    "severity": "error",
                    "message": "'}' at column 45 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/140/OAuth2AuthenticationAccessToken.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/140/OAuth2AuthenticationAccessToken.java\nindex 8b43a760047..4bd79fcdc96 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/140/OAuth2AuthenticationAccessToken.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/140/OAuth2AuthenticationAccessToken.java\n@@ -31,9 +31,8 @@ public class OAuth2AuthenticationAccessToken {\n   private String refreshToken;\n \n \n-  public OAuth2AuthenticationAccessToken() {}\n-\n-  /**\n+  public OAuth2AuthenticationAccessToken() {\n+  }/**\n    * Construct an access token.\n    */\n   @PersistenceConstructor\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2990",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2990/TableKeyIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2990/TableKeyIterator.java\nindex 7f8de53ac2f..b30bbed2973 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2990/TableKeyIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2990/TableKeyIterator.java\n@@ -17,45 +17,46 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.collection.primitive.hopscotch;\n \n import org.neo4j.collection.primitive.PrimitiveLongCollections.PrimitiveLongBaseIterator;\n \n public class TableKeyIterator<VALUE> extends PrimitiveLongBaseIterator\n {\n-    protected final Table<VALUE> stable;\n-    protected final AbstractHopScotchCollection<VALUE> collection;\n-    protected final long nullKey;\n-    protected final int version;\n-    private final int max;\n-    private int i;\n+  protected final Table<VALUE> stable;\n+  protected final AbstractHopScotchCollection<VALUE> collection;\n+  protected final long nullKey;\n+  protected final int version;\n+  private final int max;\n+  private int i;\n \n-    TableKeyIterator( Table<VALUE> table, AbstractHopScotchCollection<VALUE> collection )\n-    {\n-        this.stable = table;\n-        this.collection = collection;\n-        this.nullKey = stable.nullKey();\n-        this.max = stable.capacity();\n-        this.version = stable.version();\n-    }\n+  TableKeyIterator(Table<VALUE> table, AbstractHopScotchCollection<VALUE> collection)\n+  {\n+    this.stable = table;\n+    this.collection = collection;\n+    this.nullKey = stable.nullKey();\n+    this.max = stable.capacity();\n+    this.version = stable.version();\n+  }\n \n-    protected boolean isVisible( int index, long key )\n-    {\n-        return key != nullKey;\n-    }\n+  protected boolean isVisible(int index, long key)\n+  {\n+    return key != nullKey;\n+  }\n \n-    @Override\n-    protected boolean fetchNext()\n+  @Override\n+  protected boolean fetchNext()\n+  {\n+    while (i < max)\n     {\n-        while ( i < max )\n-        {\n-            int index = i++;\n-            long key = stable.key( index );\n-            if ( isVisible( index, key ) )\n-            {\n-                return next( key );\n-            }\n-        }\n-        return false;\n+      int index = i++;\n+      long key = stable.key(index);\n+      if (isVisible(index, key))\n+      {\n+        return next(key);\n+      }\n     }\n+    return false;\n+  }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2990/TableKeyIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2990/TableKeyIterator.java\nindex 7f8de53ac2f..b8cc2379cdc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2990/TableKeyIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2990/TableKeyIterator.java\n@@ -58,4 +58,4 @@ public class TableKeyIterator<VALUE> extends PrimitiveLongBaseIterator\n         }\n         return false;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "24",
                    "column": "31",
                    "severity": "error",
                    "message": "'<' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
                },
                {
                    "line": "50",
                    "column": "9",
                    "severity": "error",
                    "message": "'while' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "50",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2990/TableKeyIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2990/TableKeyIterator.java\nindex 7f8de53ac2f..825aaa6fda6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2990/TableKeyIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/2990/TableKeyIterator.java\n@@ -21,7 +21,7 @@ package org.neo4j.collection.primitive.hopscotch;\n \n import org.neo4j.collection.primitive.PrimitiveLongCollections.PrimitiveLongBaseIterator;\n \n-public class TableKeyIterator<VALUE> extends PrimitiveLongBaseIterator\n+public class TableKeyIterator <VALUE> extends PrimitiveLongBaseIterator\n {\n     protected final Table<VALUE> stable;\n     protected final AbstractHopScotchCollection<VALUE> collection;\n@@ -47,15 +47,16 @@ public class TableKeyIterator<VALUE> extends PrimitiveLongBaseIterator\n     @Override\n     protected boolean fetchNext()\n     {\n-        while ( i < max )\n+        while( i < max)\n         {\n-            int index = i++;\n+            int index = i ++;\n             long key = stable.key( index );\n             if ( isVisible( index, key ) )\n             {\n                 return next( key );\n             }\n         }\n+\n         return false;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
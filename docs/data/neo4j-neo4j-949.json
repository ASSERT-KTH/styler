{
    "project_name": "neo4j-neo4j",
    "error_id": "949",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "159",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "78",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/949/LuceneIndexPopulatingUpdater.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/949/LuceneIndexPopulatingUpdater.java\nindex 7cb5a5e5a5d..2ced550979f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/949/LuceneIndexPopulatingUpdater.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/949/LuceneIndexPopulatingUpdater.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.schema.populator;\n \n import org.apache.lucene.document.Document;\n@@ -42,42 +43,41 @@ public abstract class LuceneIndexPopulatingUpdater implements IndexUpdater\n {\n     private final LuceneIndexWriter writer;\n \n-    public LuceneIndexPopulatingUpdater( LuceneIndexWriter writer )\n+    public LuceneIndexPopulatingUpdater(LuceneIndexWriter writer)\n     {\n         this.writer = writer;\n     }\n \n     @Override\n-    public void process( IndexEntryUpdate<?> update )\n+    public void process(IndexEntryUpdate<?> update)\n     {\n-        ValueIndexEntryUpdate<?> valueUpdate = asValueUpdate( update );\n+        ValueIndexEntryUpdate<?> valueUpdate = asValueUpdate(update);\n         long nodeId = valueUpdate.getEntityId();\n \n         try\n         {\n-            switch ( valueUpdate.updateMode() )\n+            switch (valueUpdate.updateMode())\n             {\n-            case ADDED:\n-                added( valueUpdate );\n-                writer.updateDocument( LuceneDocumentStructure.newTermForChangeOrRemove( nodeId ),\n-                        LuceneDocumentStructure.documentRepresentingProperties( nodeId, valueUpdate.values() ) );\n-                break;\n-            case CHANGED:\n-                changed( valueUpdate );\n-                writer.updateDocument( LuceneDocumentStructure.newTermForChangeOrRemove( nodeId ),\n-                        LuceneDocumentStructure.documentRepresentingProperties( nodeId, valueUpdate.values() ) );\n-                break;\n-            case REMOVED:\n-                removed( valueUpdate );\n-                writer.deleteDocuments( LuceneDocumentStructure.newTermForChangeOrRemove( nodeId ) );\n-                break;\n-            default:\n-                throw new IllegalStateException( \"Unknown update mode \" + valueUpdate.updateMode() + \" for values \" + Arrays.toString( valueUpdate.values() ) );\n+                case ADDED:\n+                    added(valueUpdate);\n+                    writer.updateDocument(LuceneDocumentStructure.newTermForChangeOrRemove(nodeId),\n+                      LuceneDocumentStructure.documentRepresentingProperties(nodeId, valueUpdate.values()));\n+                    break;\n+                case CHANGED:\n+                    changed(valueUpdate);\n+                    writer.updateDocument(LuceneDocumentStructure.newTermForChangeOrRemove(nodeId),\n+                      LuceneDocumentStructure.documentRepresentingProperties(nodeId, valueUpdate.values()));\n+                    break;\n+                case REMOVED:\n+                    removed(valueUpdate);\n+                    writer.deleteDocuments(LuceneDocumentStructure.newTermForChangeOrRemove(nodeId));\n+                    break;\n+                default:\n+                    throw new IllegalStateException(\"Unknown update mode \" + valueUpdate.updateMode() + \" for values \" + Arrays.toString(valueUpdate.values()));\n             }\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n-            throw new UncheckedIOException( e );\n+            throw new UncheckedIOException(e);\n         }\n     }\n \n@@ -86,19 +86,19 @@ public abstract class LuceneIndexPopulatingUpdater implements IndexUpdater\n      *\n      * @param update the update being processed.\n      */\n-    protected abstract void added( ValueIndexEntryUpdate<?> update );\n+    protected abstract void added(ValueIndexEntryUpdate<?> update);\n \n     /**\n      * Method is invoked when {@link ValueIndexEntryUpdate} with {@link UpdateMode#CHANGED} is processed.\n      *\n      * @param update the update being processed.\n      */\n-    protected abstract void changed( ValueIndexEntryUpdate<?> update );\n+    protected abstract void changed(ValueIndexEntryUpdate<?> update);\n \n     /**\n      * Method is invoked when {@link ValueIndexEntryUpdate} with {@link UpdateMode#REMOVED} is processed.\n      *\n      * @param update the update being processed.\n      */\n-    protected abstract void removed( ValueIndexEntryUpdate<?> update );\n+    protected abstract void removed(ValueIndexEntryUpdate<?> update);\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
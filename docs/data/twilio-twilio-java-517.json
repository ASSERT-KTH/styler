{
    "project_name": "twilio-twilio-java",
    "error_id": "517",
    "information": {
        "errors": [
            {
                "line": "139",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/517/SubscribedTrackReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/517/SubscribedTrackReader.java\nindex 2cf5760af55..fb8eb196387 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/517/SubscribedTrackReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/517/SubscribedTrackReader.java\n@@ -136,7 +136,7 @@ public class SubscribedTrackReader extends Reader<SubscribedTrack> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/517/SubscribedTrackReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/517/SubscribedTrackReader.java\nindex 2cf5760af55..05e2078ce6d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/517/SubscribedTrackReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/517/SubscribedTrackReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.video.v1.room.participant;\n@@ -136,7 +136,7 @@ public class SubscribedTrackReader extends Reader<SubscribedTrack> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/517/SubscribedTrackReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/517/SubscribedTrackReader.java\nindex 2cf5760af55..28b22328479 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/517/SubscribedTrackReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/517/SubscribedTrackReader.java\n@@ -31,6 +31,8 @@ public class SubscribedTrackReader extends Reader<SubscribedTrack> {\n      * @param pathParticipantSid The SID of the participant that subscribes to the\n      *                           Track resources to read\n      */\n+\n+\n     public SubscribedTrackReader(final String pathRoomSid,\n                                  final String pathParticipantSid) {\n         this.pathRoomSid = pathRoomSid;\n@@ -43,6 +45,8 @@ public class SubscribedTrackReader extends Reader<SubscribedTrack> {\n      * @param client TwilioRestClient with which to make the request\n      * @return SubscribedTrack ResourceSet\n      */\n+\n+\n     @Override\n     public ResourceSet<SubscribedTrack> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -54,13 +58,14 @@ public class SubscribedTrackReader extends Reader<SubscribedTrack> {\n      * @param client TwilioRestClient with which to make the request\n      * @return SubscribedTrack ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<SubscribedTrack> firstPage(final TwilioRestClient client) {\n         Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.VIDEO.toString(),\n-            \"/v1/Rooms/\" + this.pathRoomSid + \"/Participants/\" + this.pathParticipantSid + \"/SubscribedTracks\"\n+                              HttpMethod.GET,\n+                              Domains.VIDEO.toString(),\n+                              \"/v1/Rooms/\" + this.pathRoomSid + \"/Participants/\" + this.pathParticipantSid + \"/SubscribedTracks\"\n         );\n \n         addQueryParams(request);\n@@ -74,14 +79,12 @@ public class SubscribedTrackReader extends Reader<SubscribedTrack> {\n      * @param client TwilioRestClient with which to make the request\n      * @return SubscribedTrack ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<SubscribedTrack> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<SubscribedTrack> getPage(final String targetUrl,\n+                                         final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -92,13 +95,11 @@ public class SubscribedTrackReader extends Reader<SubscribedTrack> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<SubscribedTrack> nextPage(final Page<SubscribedTrack> page,\n                                           final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.VIDEO.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.VIDEO.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -109,13 +110,11 @@ public class SubscribedTrackReader extends Reader<SubscribedTrack> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<SubscribedTrack> previousPage(final Page<SubscribedTrack> page,\n                                               final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.VIDEO.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.VIDEO.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -126,9 +125,11 @@ public class SubscribedTrackReader extends Reader<SubscribedTrack> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<SubscribedTrack> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<SubscribedTrack> pageForRequest(final TwilioRestClient client,\n+                                                 final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"SubscribedTrack read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.apply(response.getStatusCode())) {\n@@ -136,7 +137,8 @@ public class SubscribedTrackReader extends Reader<SubscribedTrack> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n@@ -144,7 +146,7 @@ public class SubscribedTrackReader extends Reader<SubscribedTrack> {\n             response.getContent(),\n             SubscribedTrack.class,\n             client.getObjectMapper()\n-        );\n+               );\n     }\n \n     /**\n@@ -152,6 +154,8 @@ public class SubscribedTrackReader extends Reader<SubscribedTrack> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (getPageSize() != null) {\n             request.addQueryParam(\"PageSize\", Integer.toString(getPageSize()));\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/517/SubscribedTrackReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/517/SubscribedTrackReader.java\nindex 2cf5760af55..fb8eb196387 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/517/SubscribedTrackReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/517/SubscribedTrackReader.java\n@@ -136,7 +136,7 @@ public class SubscribedTrackReader extends Reader<SubscribedTrack> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/517/SubscribedTrackReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/517/SubscribedTrackReader.java\nindex 2cf5760af55..2ca7b91b321 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/517/SubscribedTrackReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/517/SubscribedTrackReader.java\n@@ -136,7 +136,8 @@ public class SubscribedTrackReader extends Reader<SubscribedTrack> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
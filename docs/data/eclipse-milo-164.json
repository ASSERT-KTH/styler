{
    "project_name": "eclipse-milo",
    "error_id": "164",
    "information": {
        "errors": [
            {
                "line": "28",
                "column": "15",
                "severity": "error",
                "message": "'}' at column 15 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "public class OfType implements Operator<Boolean> {\n\n    OfType() {}\n\n    @Override\n    public void validate(FilterContext context, FilterOperand[] operands) throws ValidationException {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/164/OfType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/164/OfType.java\nindex fac163160d1..e388994a587 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/164/OfType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/164/OfType.java\n@@ -25,7 +25,8 @@ import static org.eclipse.milo.opcua.sdk.server.events.EventContentFilter.subtyp\n \n public class OfType implements Operator<Boolean> {\n \n-    OfType() {}\n+    OfType() {\n+    }\n \n     @Override\n     public void validate(FilterContext context, FilterOperand[] operands) throws ValidationException {\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/164/OfType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/164/OfType.java\nindex fac163160d1..9779cd7e171 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/164/OfType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/164/OfType.java\n@@ -59,4 +59,4 @@ public class OfType implements Operator<Boolean> {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/164/OfType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/164/OfType.java\nindex fac163160d1..096eb9d0f73 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/164/OfType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/164/OfType.java\n@@ -11,7 +11,6 @@\n package org.eclipse.milo.opcua.sdk.server.events.operators;\n \n import javax.annotation.Nullable;\n-\n import org.eclipse.milo.opcua.sdk.server.events.FilterContext;\n import org.eclipse.milo.opcua.sdk.server.events.OperatorContext;\n import org.eclipse.milo.opcua.sdk.server.events.ValidationException;\n@@ -24,8 +23,8 @@ import org.eclipse.milo.opcua.stack.core.types.structured.FilterOperand;\n import static org.eclipse.milo.opcua.sdk.server.events.EventContentFilter.subtypeOf;\n \n public class OfType implements Operator<Boolean> {\n-\n-    OfType() {}\n+    OfType() {\n+    }\n \n     @Override\n     public void validate(FilterContext context, FilterOperand[] operands) throws ValidationException {\n@@ -36,27 +35,18 @@ public class OfType implements Operator<Boolean> {\n \n     @Nullable\n     @Override\n-    public Boolean apply(\n-        OperatorContext context,\n-        BaseEventTypeNode eventNode,\n-        FilterOperand[] operands\n-    ) throws UaException {\n-\n+    public Boolean apply(OperatorContext context, BaseEventTypeNode eventNode, FilterOperand[] operands) throws UaException {\n         validate(context, operands);\n \n         Object value = context.resolve(operands[0], eventNode);\n \n         if (value instanceof NodeId) {\n-            NodeId eventTypeDefinitionId =\n-                eventNode.getTypeDefinitionNode().getNodeId();\n+            NodeId eventTypeDefinitionId = eventNode.getTypeDefinitionNode().getNodeId();\n \n             NodeId targetTypeDefinitionId = (NodeId) value;\n-\n-            return eventTypeDefinitionId.equals(targetTypeDefinitionId) ||\n-                subtypeOf(eventTypeDefinitionId, targetTypeDefinitionId, context.getServer());\n+            return eventTypeDefinitionId.equals(targetTypeDefinitionId) || subtypeOf(eventTypeDefinitionId, targetTypeDefinitionId, context.getServer());\n         } else {\n             return false;\n         }\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "30",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "30",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/164/OfType.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/164/OfType.java\nindex fac163160d1..8ac776b63e8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/164/OfType.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/164/OfType.java\n@@ -25,9 +25,9 @@ import static org.eclipse.milo.opcua.sdk.server.events.EventContentFilter.subtyp\n \n public class OfType implements Operator<Boolean> {\n \n-    OfType() {}\n+    OfType() {\n \n-    @Override\n+    } @Override\n     public void validate(FilterContext context, FilterOperand[] operands) throws ValidationException {\n         if (operands.length < 1) {\n             throw new ValidationException(StatusCodes.Bad_FilterOperandCountMismatch);\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "912",
    "information": {
        "errors": [
            {
                "line": "150",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "     * If true, the extra values are ignored. If false, records with extra columns are treated as\n     * bad records, and if there are too many bad records, an invalid error is returned in the job\n     * result. The default value is false. The value set with {@link #setFormatOptions(FormatOptions)}\n     * property determines what BigQuery treats as an extra value.\n     *\n     * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.ignoreUnknownValues\">",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "150",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "150",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "319",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "320",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "338",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "355",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 110).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "356",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "374",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/912/ExternalTableDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/912/ExternalTableDefinition.java\nindex d83914d4076..a8811b32d38 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/912/ExternalTableDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/912/ExternalTableDefinition.java\n@@ -33,7 +33,7 @@ import java.util.Objects;\n  * experimental and might be subject to change or removed.\n  *\n  * @see <a href=\"https://cloud.google.com/bigquery/federated-data-sources\">Federated Data Sources\n- *     </a>\n+ * </a>\n  */\n public class ExternalTableDefinition extends TableDefinition {\n \n@@ -124,7 +124,7 @@ public class ExternalTableDefinition extends TableDefinition {\n      * formats are {@code CSV} and {@code NEWLINE_DELIMITED_JSON}.\n      *\n      * <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.sourceFormat\">\n-     *     Source Format</a>\n+     * Source Format</a>\n      */\n     public Builder setFormatOptions(FormatOptions formatOptions) {\n       this.formatOptions = checkNotNull(formatOptions);\n@@ -151,7 +151,7 @@ public class ExternalTableDefinition extends TableDefinition {\n      * property determines what BigQuery treats as an extra value.\n      *\n      * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.ignoreUnknownValues\">\n-     *     Ignore Unknown Values</a>\n+     * Ignore Unknown Values</a>\n      */\n     public Builder setIgnoreUnknownValues(Boolean ignoreUnknownValues) {\n       this.ignoreUnknownValues = ignoreUnknownValues;\n@@ -163,7 +163,7 @@ public class ExternalTableDefinition extends TableDefinition {\n      * Sets compression type of the data source. By default no compression is assumed.\n      *\n      * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.compression\">\n-     *     Compression</a>\n+     * Compression</a>\n      */\n     public Builder setCompression(String compression) {\n       this.compression = compression;\n@@ -193,7 +193,7 @@ public class ExternalTableDefinition extends TableDefinition {\n    * Returns the compression type of the data source.\n    *\n    * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.compression\">\n-   *     Compression</a>\n+   * Compression</a>\n    */\n   public String getCompression() {\n     return compression;\n@@ -207,7 +207,7 @@ public class ExternalTableDefinition extends TableDefinition {\n    * BigQuery treats as an extra value.\n    *\n    * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.ignoreUnknownValues\">\n-   *     Ignore Unknown Values</a>\n+   * Ignore Unknown Values</a>\n    */\n   public Boolean ignoreUnknownValues() {\n     return ignoreUnknownValues;\n@@ -316,16 +316,15 @@ public class ExternalTableDefinition extends TableDefinition {\n    * Creates a builder for an ExternalTableDefinition object.\n    *\n    * @param sourceUris the fully-qualified URIs that point to your data in Google Cloud Storage.\n-   *     Each URI can contain one '*' wildcard character that must come after the bucket's name.\n-   *     Size limits related to load jobs apply to external data sources, plus an additional limit\n-   *     of 10 GB maximum size across all URIs.\n-   * @param schema the schema for the external data\n-   * @param format the source format of the external data\n+   *                   Each URI can contain one '*' wildcard character that must come after the bucket's name.\n+   *                   Size limits related to load jobs apply to external data sources, plus an additional limit\n+   *                   of 10 GB maximum size across all URIs.\n+   * @param schema     the schema for the external data\n+   * @param format     the source format of the external data\n    * @return a builder for an ExternalTableDefinition object given source URIs, schema and format\n-   *\n    * @see <a href=\"https://cloud.google.com/bigquery/loading-data-into-bigquery#quota\">Quota</a>\n    * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.sourceFormat\">\n-   *     Source Format</a>\n+   * Source Format</a>\n    */\n   public static Builder newBuilder(List<String> sourceUris, Schema schema, FormatOptions format) {\n     return new Builder().setSourceUris(sourceUris).setSchema(schema).setFormatOptions(format);\n@@ -336,15 +335,14 @@ public class ExternalTableDefinition extends TableDefinition {\n    * Creates a builder for an ExternalTableDefinition object.\n    *\n    * @param sourceUri a fully-qualified URI that points to your data in Google Cloud Storage. The\n-   *     URI can contain one '*' wildcard character that must come after the bucket's name. Size\n-   *     limits related to load jobs apply to external data sources.\n-   * @param schema the schema for the external data\n-   * @param format the source format of the external data\n+   *                  URI can contain one '*' wildcard character that must come after the bucket's name. Size\n+   *                  limits related to load jobs apply to external data sources.\n+   * @param schema    the schema for the external data\n+   * @param format    the source format of the external data\n    * @return a builder for an ExternalTableDefinition object given source URI, schema and format\n-   *\n    * @see <a href=\"https://cloud.google.com/bigquery/loading-data-into-bigquery#quota\">Quota</a>\n    * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.sourceFormat\">\n-   *     Source Format</a>\n+   * Source Format</a>\n    */\n   public static Builder newBuilder(String sourceUri, Schema schema, FormatOptions format) {\n     return newBuilder(ImmutableList.of(sourceUri), schema, format);\n@@ -354,19 +352,18 @@ public class ExternalTableDefinition extends TableDefinition {\n    * Creates an ExternalTableDefinition object.\n    *\n    * @param sourceUris the fully-qualified URIs that point to your data in Google Cloud Storage.\n-   *     Each URI can contain one '*' wildcard character that must come after the bucket's name.\n-   *     Size limits related to load jobs apply to external data sources, plus an additional limit\n-   *     of 10 GB maximum size across all URIs.\n-   * @param schema the schema for the external data\n-   * @param format the source format of the external data\n+   *                   Each URI can contain one '*' wildcard character that must come after the bucket's name.\n+   *                   Size limits related to load jobs apply to external data sources, plus an additional limit\n+   *                   of 10 GB maximum size across all URIs.\n+   * @param schema     the schema for the external data\n+   * @param format     the source format of the external data\n    * @return an ExternalTableDefinition object given source URIs, schema and format\n-   *\n    * @see <a href=\"https://cloud.google.com/bigquery/loading-data-into-bigquery#quota\">Quota</a>\n    * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.sourceFormat\">\n-   *     Source Format</a>\n+   * Source Format</a>\n    */\n   public static ExternalTableDefinition of(List<String> sourceUris, Schema schema,\n-      FormatOptions format) {\n+                                           FormatOptions format) {\n     return newBuilder(sourceUris, schema, format).build();\n   }\n \n@@ -374,15 +371,14 @@ public class ExternalTableDefinition extends TableDefinition {\n    * Creates an ExternalTableDefinition object.\n    *\n    * @param sourceUri a fully-qualified URI that points to your data in Google Cloud Storage. The\n-   *     URI can contain one '*' wildcard character that must come after the bucket's name. Size\n-   *     limits related to load jobs apply to external data sources.\n-   * @param schema the schema for the external data\n-   * @param format the source format of the external data\n+   *                  URI can contain one '*' wildcard character that must come after the bucket's name. Size\n+   *                  limits related to load jobs apply to external data sources.\n+   * @param schema    the schema for the external data\n+   * @param format    the source format of the external data\n    * @return an ExternalTableDefinition object given source URIs, schema and format\n-   *\n    * @see <a href=\"https://cloud.google.com/bigquery/loading-data-into-bigquery#quota\">Quota</a>\n    * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.sourceFormat\">\n-   *     Source Format</a>\n+   * Source Format</a>\n    */\n   public static ExternalTableDefinition of(String sourceUri, Schema schema, FormatOptions format) {\n     return newBuilder(sourceUri, schema, format).build();\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "146",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/912/ExternalTableDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/912/ExternalTableDefinition.java\nindex d83914d4076..6f6f0ffe9c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/912/ExternalTableDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/912/ExternalTableDefinition.java\n@@ -37,17 +37,14 @@ import java.util.Objects;\n  */\n public class ExternalTableDefinition extends TableDefinition {\n \n-  static final Function<ExternalDataConfiguration, ExternalTableDefinition>\n-      FROM_EXTERNAL_DATA_FUNCTION =\n-      new Function<ExternalDataConfiguration, ExternalTableDefinition>() {\n+  static final Function<ExternalDataConfiguration, ExternalTableDefinition> FROM_EXTERNAL_DATA_FUNCTION = new Function<ExternalDataConfiguration, ExternalTableDefinition>() {\n         @Override\n         public ExternalTableDefinition apply(ExternalDataConfiguration pb) {\n           return ExternalTableDefinition.fromExternalDataConfiguration(pb);\n         }\n       };\n-  static final Function<ExternalTableDefinition, ExternalDataConfiguration>\n-      TO_EXTERNAL_DATA_FUNCTION =\n-      new Function<ExternalTableDefinition, ExternalDataConfiguration>() {\n+\n+    static final Function<ExternalTableDefinition, ExternalDataConfiguration> TO_EXTERNAL_DATA_FUNCTION = new Function<ExternalTableDefinition, ExternalDataConfiguration>() {\n         @Override\n         public ExternalDataConfiguration apply(ExternalTableDefinition tableInfo) {\n           return tableInfo.toExternalDataConfigurationPb();\n@@ -104,8 +101,7 @@ public class ExternalTableDefinition extends TableDefinition {\n       }\n     }\n \n-\n-    /**\n+/**\n      * Sets the fully-qualified URIs that point to your data in Google Cloud Storage (e.g.\n      * gs://bucket/path). Each URI can contain one '*' wildcard character that must come after the\n      * bucket's name. Size limits related to load jobs apply to external data sources, plus an\n@@ -265,9 +261,7 @@ public class ExternalTableDefinition extends TableDefinition {\n \n   @Override\n   public final boolean equals(Object obj) {\n-    return obj == this\n-        || obj != null\n-        && obj.getClass().equals(ExternalTableDefinition.class)\n+    return obj == this || obj != null && obj.getClass().equals(ExternalTableDefinition.class)\n         && baseEquals((ExternalTableDefinition) obj);\n   }\n \n@@ -419,4 +413,4 @@ public class ExternalTableDefinition extends TableDefinition {\n     }\n     return builder.build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "84",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "147",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "264",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 216).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "270",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "271",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "276",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "287",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "369",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 106).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "397",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 117).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/912/ExternalTableDefinition.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/912/ExternalTableDefinition.java\nindex d83914d4076..4bdc6217404 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/912/ExternalTableDefinition.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/912/ExternalTableDefinition.java\n@@ -23,7 +23,6 @@ import com.google.api.services.bigquery.model.Table;\n import com.google.common.base.Function;\n import com.google.common.base.MoreObjects.ToStringHelper;\n import com.google.common.collect.ImmutableList;\n-\n import java.util.List;\n import java.util.Objects;\n \n@@ -35,35 +34,31 @@ import java.util.Objects;\n  * @see <a href=\"https://cloud.google.com/bigquery/federated-data-sources\">Federated Data Sources\n  *     </a>\n  */\n+\n+\n public class ExternalTableDefinition extends TableDefinition {\n \n-  static final Function<ExternalDataConfiguration, ExternalTableDefinition>\n-      FROM_EXTERNAL_DATA_FUNCTION =\n-      new Function<ExternalDataConfiguration, ExternalTableDefinition>() {\n-        @Override\n-        public ExternalTableDefinition apply(ExternalDataConfiguration pb) {\n-          return ExternalTableDefinition.fromExternalDataConfiguration(pb);\n-        }\n-      };\n-  static final Function<ExternalTableDefinition, ExternalDataConfiguration>\n-      TO_EXTERNAL_DATA_FUNCTION =\n-      new Function<ExternalTableDefinition, ExternalDataConfiguration>() {\n-        @Override\n-        public ExternalDataConfiguration apply(ExternalTableDefinition tableInfo) {\n-          return tableInfo.toExternalDataConfigurationPb();\n-        }\n-      };\n+  static final Function<ExternalDataConfiguration, ExternalTableDefinition> FROM_EXTERNAL_DATA_FUNCTION = new Function<ExternalDataConfiguration, ExternalTableDefinition>() {\n+@Override\n+public ExternalTableDefinition apply(ExternalDataConfiguration pb) {\n+  return ExternalTableDefinition.fromExternalDataConfiguration(pb);\n+}\n+};\n \n+  static final Function<ExternalTableDefinition, ExternalDataConfiguration> TO_EXTERNAL_DATA_FUNCTION = new Function<ExternalTableDefinition, ExternalDataConfiguration>() {\n+@Override\n+public ExternalDataConfiguration apply(ExternalTableDefinition tableInfo) {\n+  return tableInfo.toExternalDataConfigurationPb();\n+}\n+};\n   private static final long serialVersionUID = -5951580238459622025L;\n-\n   private final List<String> sourceUris;\n   private final FormatOptions formatOptions;\n   private final Integer maxBadRecords;\n   private final Boolean ignoreUnknownValues;\n   private final String compression;\n \n-  public static final class Builder\n-      extends TableDefinition.Builder<ExternalTableDefinition, Builder> {\n+  public static final class Builder extends TableDefinition.Builder<ExternalTableDefinition, Builder> {\n \n     private List<String> sourceUris;\n     private FormatOptions formatOptions;\n@@ -86,8 +81,7 @@ public class ExternalTableDefinition extends TableDefinition {\n \n     private Builder(Table tablePb) {\n       super(tablePb);\n-      com.google.api.services.bigquery.model.ExternalDataConfiguration externalDataConfiguration =\n-          tablePb.getExternalDataConfiguration();\n+      com.google.api.services.bigquery.model.ExternalDataConfiguration externalDataConfiguration = tablePb.getExternalDataConfiguration();\n       if (externalDataConfiguration != null) {\n         if (externalDataConfiguration.getSourceUris() != null) {\n           this.sourceUris = ImmutableList.copyOf(externalDataConfiguration.getSourceUris());\n@@ -113,6 +107,7 @@ public class ExternalTableDefinition extends TableDefinition {\n      *\n      * @see <a href=\"https://cloud.google.com/bigquery/loading-data-into-bigquery#quota\">Quota</a>\n      */\n+\n     public Builder setSourceUris(List<String> sourceUris) {\n       this.sourceUris = ImmutableList.copyOf(checkNotNull(sourceUris));\n       return this;\n@@ -126,6 +121,7 @@ public class ExternalTableDefinition extends TableDefinition {\n      * <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.sourceFormat\">\n      *     Source Format</a>\n      */\n+\n     public Builder setFormatOptions(FormatOptions formatOptions) {\n       this.formatOptions = checkNotNull(formatOptions);\n       return this;\n@@ -137,6 +133,7 @@ public class ExternalTableDefinition extends TableDefinition {\n      * number of bad records exceeds this value, an invalid error is returned in the job result.\n      * The default value is 0, which requires that all records are valid.\n      */\n+\n     public Builder setMaxBadRecords(Integer maxBadRecords) {\n       this.maxBadRecords = maxBadRecords;\n       return this;\n@@ -153,6 +150,7 @@ public class ExternalTableDefinition extends TableDefinition {\n      * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.ignoreUnknownValues\">\n      *     Ignore Unknown Values</a>\n      */\n+\n     public Builder setIgnoreUnknownValues(Boolean ignoreUnknownValues) {\n       this.ignoreUnknownValues = ignoreUnknownValues;\n       return this;\n@@ -165,6 +163,7 @@ public class ExternalTableDefinition extends TableDefinition {\n      * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.compression\">\n      *     Compression</a>\n      */\n+\n     public Builder setCompression(String compression) {\n       this.compression = compression;\n       return this;\n@@ -173,6 +172,7 @@ public class ExternalTableDefinition extends TableDefinition {\n     /**\n      * Creates an {@code ExternalTableDefinition} object.\n      */\n+\n     @Override\n     public ExternalTableDefinition build() {\n       return new ExternalTableDefinition(this);\n@@ -195,6 +195,7 @@ public class ExternalTableDefinition extends TableDefinition {\n    * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.compression\">\n    *     Compression</a>\n    */\n+\n   public String getCompression() {\n     return compression;\n   }\n@@ -209,6 +210,7 @@ public class ExternalTableDefinition extends TableDefinition {\n    * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.ignoreUnknownValues\">\n    *     Ignore Unknown Values</a>\n    */\n+\n   public Boolean ignoreUnknownValues() {\n     return ignoreUnknownValues;\n   }\n@@ -218,6 +220,7 @@ public class ExternalTableDefinition extends TableDefinition {\n    * Returns the maximum number of bad records that BigQuery can ignore when reading data. If the\n    * number of bad records exceeds this value, an invalid error is returned in the job result.\n    */\n+\n   public Integer getMaxBadRecords() {\n     return maxBadRecords;\n   }\n@@ -231,6 +234,7 @@ public class ExternalTableDefinition extends TableDefinition {\n    *\n    * @see <a href=\"https://cloud.google.com/bigquery/loading-data-into-bigquery#quota\">Quota</a>\n    */\n+\n   public List<String> getSourceUris() {\n     return sourceUris;\n   }\n@@ -240,6 +244,7 @@ public class ExternalTableDefinition extends TableDefinition {\n    * Returns the source format, and possibly some parsing options, of the external data. Supported\n    * formats are {@code CSV} and {@code NEWLINE_DELIMITED_JSON}.\n    */\n+\n   @SuppressWarnings(\"unchecked\")\n   public <F extends FormatOptions> F getFormatOptions() {\n     return (F) formatOptions;\n@@ -248,6 +253,7 @@ public class ExternalTableDefinition extends TableDefinition {\n   /**\n    * Returns a builder for the {@code ExternalTableDefinition} object.\n    */\n+\n   @Override\n   public Builder toBuilder() {\n     return new Builder(this);\n@@ -255,26 +261,19 @@ public class ExternalTableDefinition extends TableDefinition {\n \n   @Override\n   ToStringHelper toStringHelper() {\n-    return super.toStringHelper()\n-        .add(\"sourceUris\", sourceUris)\n-        .add(\"formatOptions\", formatOptions)\n-        .add(\"compression\", compression)\n-        .add(\"ignoreUnknownValues\", ignoreUnknownValues)\n-        .add(\"maxBadRecords\", maxBadRecords);\n+    return super.toStringHelper().add(\"sourceUris\", sourceUris).add(\"formatOptions\", formatOptions).add(\"compression\", compression).add(\"ignoreUnknownValues\", ignoreUnknownValues).add(\"maxBadRecords\", maxBadRecords);\n   }\n \n   @Override\n   public final boolean equals(Object obj) {\n-    return obj == this\n-        || obj != null\n-        && obj.getClass().equals(ExternalTableDefinition.class)\n-        && baseEquals((ExternalTableDefinition) obj);\n+    return obj == this || obj != null\n+    && obj.getClass().equals(ExternalTableDefinition.class)\n+    && baseEquals((ExternalTableDefinition) obj);\n   }\n \n   @Override\n   public final int hashCode() {\n-    return Objects.hash(baseHashCode(), compression, ignoreUnknownValues, maxBadRecords,\n-        formatOptions, sourceUris);\n+    return Objects.hash(baseHashCode(), compression, ignoreUnknownValues, maxBadRecords, formatOptions, sourceUris);\n   }\n \n   @Override\n@@ -285,8 +284,7 @@ public class ExternalTableDefinition extends TableDefinition {\n   }\n \n   com.google.api.services.bigquery.model.ExternalDataConfiguration toExternalDataConfigurationPb() {\n-    com.google.api.services.bigquery.model.ExternalDataConfiguration externalConfigurationPb =\n-        new com.google.api.services.bigquery.model.ExternalDataConfiguration();\n+    com.google.api.services.bigquery.model.ExternalDataConfiguration externalConfigurationPb = new com.google.api.services.bigquery.model.ExternalDataConfiguration();\n     if (compression != null) {\n       externalConfigurationPb.setCompression(compression);\n     }\n@@ -327,6 +325,7 @@ public class ExternalTableDefinition extends TableDefinition {\n    * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.sourceFormat\">\n    *     Source Format</a>\n    */\n+\n   public static Builder newBuilder(List<String> sourceUris, Schema schema, FormatOptions format) {\n     return new Builder().setSourceUris(sourceUris).setSchema(schema).setFormatOptions(format);\n   }\n@@ -346,6 +345,7 @@ public class ExternalTableDefinition extends TableDefinition {\n    * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.sourceFormat\">\n    *     Source Format</a>\n    */\n+\n   public static Builder newBuilder(String sourceUri, Schema schema, FormatOptions format) {\n     return newBuilder(ImmutableList.of(sourceUri), schema, format);\n   }\n@@ -365,8 +365,8 @@ public class ExternalTableDefinition extends TableDefinition {\n    * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.sourceFormat\">\n    *     Source Format</a>\n    */\n-  public static ExternalTableDefinition of(List<String> sourceUris, Schema schema,\n-      FormatOptions format) {\n+\n+  public static ExternalTableDefinition of(List<String> sourceUris, Schema schema, FormatOptions format) {\n     return newBuilder(sourceUris, schema, format).build();\n   }\n \n@@ -384,6 +384,7 @@ public class ExternalTableDefinition extends TableDefinition {\n    * @see <a href=\"https://cloud.google.com/bigquery/docs/reference/v2/tables#externalDataConfiguration.sourceFormat\">\n    *     Source Format</a>\n    */\n+\n   public static ExternalTableDefinition of(String sourceUri, Schema schema, FormatOptions format) {\n     return newBuilder(sourceUri, schema, format).build();\n   }\n@@ -393,8 +394,7 @@ public class ExternalTableDefinition extends TableDefinition {\n     return new Builder(tablePb).build();\n   }\n \n-  static ExternalTableDefinition fromExternalDataConfiguration(\n-      ExternalDataConfiguration externalDataConfiguration) {\n+  static ExternalTableDefinition fromExternalDataConfiguration(ExternalDataConfiguration externalDataConfiguration) {\n     Builder builder = new Builder();\n     if (externalDataConfiguration.getSourceUris() != null) {\n       builder.setSourceUris(externalDataConfiguration.getSourceUris());\n@@ -419,4 +419,4 @@ public class ExternalTableDefinition extends TableDefinition {\n     }\n     return builder.build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 64
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "150",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "150",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
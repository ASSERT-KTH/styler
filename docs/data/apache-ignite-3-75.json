{
    "project_name": "apache-ignite-3",
    "error_id": "75",
    "information": {
        "errors": [
            {
                "line": "28",
                "column": "5",
                "severity": "error",
                "message": "'VARIABLE_DEF' should be separated from previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "{\n    private final BytecodeExpression instance;\n    private final Class<?> type;\n\n    InstanceOfBytecodeExpression(BytecodeExpression instance, Class<?> type)\n    {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/75/InstanceOfBytecodeExpression.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/75/InstanceOfBytecodeExpression.java\nindex 39ed17cd59c..1c45a2a5c80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/75/InstanceOfBytecodeExpression.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/75/InstanceOfBytecodeExpression.java\n@@ -25,6 +25,7 @@ class InstanceOfBytecodeExpression\n         extends BytecodeExpression\n {\n     private final BytecodeExpression instance;\n+\n     private final Class<?> type;\n \n     InstanceOfBytecodeExpression(BytecodeExpression instance, Class<?> type)\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/75/InstanceOfBytecodeExpression.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/75/InstanceOfBytecodeExpression.java\nindex 39ed17cd59c..30dd7550ce5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/75/InstanceOfBytecodeExpression.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/75/InstanceOfBytecodeExpression.java\n@@ -11,6 +11,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.facebook.presto.bytecode.expression;\n \n import com.facebook.presto.bytecode.BytecodeBlock;\n@@ -22,41 +23,36 @@ import static com.facebook.presto.bytecode.ParameterizedType.type;\n import static java.util.Objects.requireNonNull;\n \n class InstanceOfBytecodeExpression\n-        extends BytecodeExpression\n-{\n-    private final BytecodeExpression instance;\n-    private final Class<?> type;\n-\n-    InstanceOfBytecodeExpression(BytecodeExpression instance, Class<?> type)\n-    {\n-        super(type(boolean.class));\n-\n-        this.instance = requireNonNull(instance, \"instance is null\");\n-        this.type = requireNonNull(type, \"type is null\");\n-    }\n-\n-    public static BytecodeExpression instanceOf(BytecodeExpression instance, Class<?> type)\n-    {\n-        return new InstanceOfBytecodeExpression(instance, type);\n-    }\n-\n-    @Override\n-    public BytecodeNode getBytecode(MethodGenerationContext generationContext)\n-    {\n-        return new BytecodeBlock()\n-                .append(instance)\n-                .isInstanceOf(type);\n-    }\n-\n-    @Override\n-    protected String formatOneLine()\n-    {\n-        return instance + \" instanceof \" + type;\n-    }\n-\n-    @Override\n-    public List<BytecodeNode> getChildNodes()\n-    {\n-        return List.of();\n-    }\n+    extends BytecodeExpression {\n+  private final BytecodeExpression instance;\n+\n+  private final Class<?> type;\n+\n+  InstanceOfBytecodeExpression(BytecodeExpression instance, Class<?> type) {\n+    super(type(boolean.class));\n+\n+    this.instance = requireNonNull(instance, \"instance is null\");\n+    this.type = requireNonNull(type, \"type is null\");\n+  }\n+\n+  public static BytecodeExpression instanceOf(BytecodeExpression instance, Class<?> type) {\n+    return new InstanceOfBytecodeExpression(instance, type);\n+  }\n+\n+  @Override\n+  public BytecodeNode getBytecode(MethodGenerationContext generationContext) {\n+    return new BytecodeBlock()\n+        .append(instance)\n+        .isInstanceOf(type);\n+  }\n+\n+  @Override\n+  protected String formatOneLine() {\n+    return instance + \" instanceof \" + type;\n+  }\n+\n+  @Override\n+  public List<BytecodeNode> getChildNodes() {\n+    return List.of();\n+  }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "28",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' should be separated from previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/75/InstanceOfBytecodeExpression.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/naturalize/75/InstanceOfBytecodeExpression.java\nindex 39ed17cd59c..2f5e9bc4f3f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/75/InstanceOfBytecodeExpression.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/naturalize/75/InstanceOfBytecodeExpression.java\n@@ -59,4 +59,4 @@ class InstanceOfBytecodeExpression\n     {\n         return List.of();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "29",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "32",
                    "column": "5",
                    "severity": "error",
                    "message": "'CTOR_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "40",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "45",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "51",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "56",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/75/InstanceOfBytecodeExpression.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/75/InstanceOfBytecodeExpression.java\nindex 39ed17cd59c..79f9159ac8f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/75/InstanceOfBytecodeExpression.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/75/InstanceOfBytecodeExpression.java\n@@ -21,42 +21,39 @@ import java.util.List;\n import static com.facebook.presto.bytecode.ParameterizedType.type;\n import static java.util.Objects.requireNonNull;\n \n-class InstanceOfBytecodeExpression\n-        extends BytecodeExpression\n-{\n+class InstanceOfBytecodeExpression extends BytecodeExpression {\n+\n     private final BytecodeExpression instance;\n+\n+\n     private final Class<?> type;\n \n-    InstanceOfBytecodeExpression(BytecodeExpression instance, Class<?> type)\n-    {\n-        super(type(boolean.class));\n \n-        this.instance = requireNonNull(instance, \"instance is null\");\n-        this.type = requireNonNull(type, \"type is null\");\n-    }\n+    InstanceOfBytecodeExpression(BytecodeExpression instance, Class<?> type) {\n+                                                                                 super(type(boolean.class));\n+\n+                                                                                 this.instance = requireNonNull(instance, \"instance is null\");\n+                                                                                 this.type = requireNonNull(type, \"type is null\");\n+                                                                             }\n \n-    public static BytecodeExpression instanceOf(BytecodeExpression instance, Class<?> type)\n-    {\n+\n+    public static BytecodeExpression instanceOf(BytecodeExpression instance, Class<?> type) {\n         return new InstanceOfBytecodeExpression(instance, type);\n     }\n \n-    @Override\n-    public BytecodeNode getBytecode(MethodGenerationContext generationContext)\n-    {\n-        return new BytecodeBlock()\n-                .append(instance)\n-                .isInstanceOf(type);\n+\n+    @Override public BytecodeNode getBytecode(MethodGenerationContext generationContext) {\n+        return new BytecodeBlock().append(instance)\n+                                  .isInstanceOf(type);\n     }\n \n-    @Override\n-    protected String formatOneLine()\n-    {\n+\n+    @Override protected String formatOneLine() {\n         return instance + \" instanceof \" + type;\n     }\n \n-    @Override\n-    public List<BytecodeNode> getChildNodes()\n-    {\n+\n+    @Override public List<BytecodeNode> getChildNodes() {\n         return List.of();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/75/InstanceOfBytecodeExpression.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/75/InstanceOfBytecodeExpression.java\nindex 39ed17cd59c..1c45a2a5c80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/75/InstanceOfBytecodeExpression.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/75/InstanceOfBytecodeExpression.java\n@@ -25,6 +25,7 @@ class InstanceOfBytecodeExpression\n         extends BytecodeExpression\n {\n     private final BytecodeExpression instance;\n+\n     private final Class<?> type;\n \n     InstanceOfBytecodeExpression(BytecodeExpression instance, Class<?> type)\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/75/InstanceOfBytecodeExpression.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/75/InstanceOfBytecodeExpression.java\nindex 39ed17cd59c..1c45a2a5c80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/75/InstanceOfBytecodeExpression.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/75/InstanceOfBytecodeExpression.java\n@@ -25,6 +25,7 @@ class InstanceOfBytecodeExpression\n         extends BytecodeExpression\n {\n     private final BytecodeExpression instance;\n+\n     private final Class<?> type;\n \n     InstanceOfBytecodeExpression(BytecodeExpression instance, Class<?> type)\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
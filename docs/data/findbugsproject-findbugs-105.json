{
    "project_name": "findbugsproject-findbugs",
    "error_id": "105",
    "information": {
        "errors": [
            {
                "line": "13",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    RegularMenuBuilder menu;\n    BlueJ bluej;\n\t\n    public FindBugsCompileListener(BlueJ bluej, int numClasses, RegularMenuBuilder menu){\n        this.numClasses = numClasses;\n        this.menu = menu;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "13",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/105/FindBugsCompileListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/105/FindBugsCompileListener.java\nindex 499628d1274..3bcccb16a78 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/105/FindBugsCompileListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/intellij/105/FindBugsCompileListener.java\n@@ -1,6 +1,7 @@\n package edu.umd.cs.findbugs.bluej;\n \n //\n+\n import bluej.extensions.BlueJ;\n import bluej.extensions.event.CompileEvent;\n import bluej.extensions.event.CompileListener;\n@@ -10,15 +11,15 @@ public class FindBugsCompileListener implements CompileListener {\n     private int numClasses;\n     RegularMenuBuilder menu;\n     BlueJ bluej;\n-\t\n-    public FindBugsCompileListener(BlueJ bluej, int numClasses, RegularMenuBuilder menu){\n+\n+    public FindBugsCompileListener(BlueJ bluej, int numClasses, RegularMenuBuilder menu) {\n         this.numClasses = numClasses;\n         this.menu = menu;\n-\t\tthis.bluej = bluej;\n+        this.bluej = bluej;\n     }\n \n     public void compileStarted(CompileEvent evt) {\n-\t}\n+    }\n \n     public void compileError(CompileEvent arg0) {\n \n@@ -31,15 +32,15 @@ public class FindBugsCompileListener implements CompileListener {\n     public void compileSucceeded(CompileEvent arg0) {\n         numClasses--;\n \n-\t\tif(numClasses <= 0){\n+        if (numClasses <= 0) {\n             try {\n                 menu.getAllClassesAndRun();\n             } catch (Exception e) {\n-\t\t\t\tLog.recordBug(e);\n+                Log.recordBug(e);\n             }\n             bluej.removeCompileListener(this);\n         }\n-\t}\n+    }\n \n     public void compileFailed(CompileEvent arg0) {\n         bluej.removeCompileListener(this);\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/105/FindBugsCompileListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/105/FindBugsCompileListener.java\nindex 499628d1274..58b9af5751e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/105/FindBugsCompileListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/naturalize/105/FindBugsCompileListener.java\n@@ -10,17 +10,17 @@ public class FindBugsCompileListener implements CompileListener {\n     private int numClasses;\n     RegularMenuBuilder menu;\n     BlueJ bluej;\n-\t\n-    public FindBugsCompileListener(BlueJ bluej, int numClasses, RegularMenuBuilder menu){\n-        this.numClasses = numClasses;\n+\n+public FindBugsCompileListener(BlueJ bluej, int numClasses, RegularMenuBuilder menu) {\n+    this.numClasses = numClasses;\n         this.menu = menu;\n-\t\tthis.bluej = bluej;\n+this.bluej = bluej;\n     }\n \n     public void compileStarted(CompileEvent evt) {\n-\t}\n+}\n \n-    public void compileError(CompileEvent arg0) {\n+public void compileError(CompileEvent arg0) {\n \n     }\n \n@@ -30,18 +30,17 @@ public class FindBugsCompileListener implements CompileListener {\n \n     public void compileSucceeded(CompileEvent arg0) {\n         numClasses--;\n-\n-\t\tif(numClasses <= 0){\n-            try {\n+    if (numClasses <= 0) {\n+    try {\n                 menu.getAllClassesAndRun();\n             } catch (Exception e) {\n-\t\t\t\tLog.recordBug(e);\n-            }\n+    Log.recordBug(e);\n+    }\n             bluej.removeCompileListener(this);\n         }\n-\t}\n+    }\n \n-    public void compileFailed(CompileEvent arg0) {\n+public void compileFailed(CompileEvent arg0) {\n         bluej.removeCompileListener(this);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/105/FindBugsCompileListener.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/105/FindBugsCompileListener.java\nindex 499628d1274..06ed4aca8e7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/errored/1/105/FindBugsCompileListener.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/findbugsproject-findbugs/codebuff/105/FindBugsCompileListener.java\n@@ -1,47 +1,48 @@\n package edu.umd.cs.findbugs.bluej;\n \n //\n+\n import bluej.extensions.BlueJ;\n import bluej.extensions.event.CompileEvent;\n import bluej.extensions.event.CompileListener;\n \n public class FindBugsCompileListener implements CompileListener {\n-\n     private int numClasses;\n+\n     RegularMenuBuilder menu;\n+\n     BlueJ bluej;\n-\t\n-    public FindBugsCompileListener(BlueJ bluej, int numClasses, RegularMenuBuilder menu){\n+\n+\n+    public FindBugsCompileListener(BlueJ bluej, int numClasses, RegularMenuBuilder menu) {\n         this.numClasses = numClasses;\n         this.menu = menu;\n-\t\tthis.bluej = bluej;\n+        this.bluej = bluej;\n     }\n \n+\n     public void compileStarted(CompileEvent evt) {\n-\t}\n+    }\n \n     public void compileError(CompileEvent arg0) {\n-\n     }\n \n     public void compileWarning(CompileEvent arg0) {\n-\n     }\n \n     public void compileSucceeded(CompileEvent arg0) {\n         numClasses--;\n-\n-\t\tif(numClasses <= 0){\n+        if (numClasses <= 0) {\n             try {\n                 menu.getAllClassesAndRun();\n             } catch (Exception e) {\n-\t\t\t\tLog.recordBug(e);\n+                Log.recordBug(e);\n             }\n             bluej.removeCompileListener(this);\n         }\n-\t}\n+    }\n \n     public void compileFailed(CompileEvent arg0) {\n         bluej.removeCompileListener(this);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 17
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "13",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4227",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4227/NodeCountsProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4227/NodeCountsProcessor.java\nindex dc30c134e1d..8afc5b8589d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4227/NodeCountsProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4227/NodeCountsProcessor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport;\n \n import org.neo4j.kernel.api.StatementConstants;\n@@ -33,55 +34,55 @@ import org.neo4j.unsafe.impl.batchimport.cache.NodeLabelsCache;\n  */\n public class NodeCountsProcessor implements RecordProcessor<NodeRecord>\n {\n-    private final NodeStore nodeStore;\n-    private final long[] labelCounts;\n-    private ProgressReporter progressReporter;\n-    private final NodeLabelsCache cache;\n-    private final CountsAccessor.Updater counts;\n-    private final int anyLabel;\n+  private final NodeStore nodeStore;\n+  private final long[] labelCounts;\n+  private ProgressReporter progressReporter;\n+  private final NodeLabelsCache cache;\n+  private final CountsAccessor.Updater counts;\n+  private final int anyLabel;\n \n-    NodeCountsProcessor( NodeStore nodeStore, NodeLabelsCache cache, int highLabelId,\n-            CountsAccessor.Updater counts, ProgressReporter progressReporter )\n-    {\n-        this.nodeStore = nodeStore;\n-        this.cache = cache;\n-        this.anyLabel = highLabelId;\n-        this.counts = counts;\n-        // Instantiate with high id + 1 since we need that extra slot for the ANY count\n-        this.labelCounts = new long[highLabelId + 1];\n-        this.progressReporter = progressReporter;\n-    }\n+  NodeCountsProcessor(NodeStore nodeStore, NodeLabelsCache cache, int highLabelId,\n+                      CountsAccessor.Updater counts, ProgressReporter progressReporter)\n+  {\n+    this.nodeStore = nodeStore;\n+    this.cache = cache;\n+    this.anyLabel = highLabelId;\n+    this.counts = counts;\n+    // Instantiate with high id + 1 since we need that extra slot for the ANY count\n+    this.labelCounts = new long[highLabelId + 1];\n+    this.progressReporter = progressReporter;\n+  }\n \n-    @Override\n-    public boolean process( NodeRecord node )\n+  @Override\n+  public boolean process(NodeRecord node)\n+  {\n+    long[] labels = NodeLabelsField.get(node, nodeStore);\n+    if (labels.length > 0)\n     {\n-        long[] labels = NodeLabelsField.get( node, nodeStore );\n-        if ( labels.length > 0 )\n-        {\n-            for ( long labelId : labels )\n-            {\n-                labelCounts[(int) labelId]++;\n-            }\n-            cache.put( node.getId(), labels );\n-        }\n-        labelCounts[anyLabel]++;\n-        progressReporter.progress( 1 );\n-\n-        // No need to update the store, we're just reading things here\n-        return false;\n+      for (long labelId : labels)\n+      {\n+        labelCounts[(int) labelId]++;\n+      }\n+      cache.put(node.getId(), labels);\n     }\n+    labelCounts[anyLabel]++;\n+    progressReporter.progress(1);\n \n-    @Override\n-    public void done()\n-    {\n-        for ( int i = 0; i < labelCounts.length; i++ )\n-        {\n-            counts.incrementNodeCount( i == anyLabel ? StatementConstants.ANY_LABEL : i, labelCounts[i] );\n-        }\n-    }\n+    // No need to update the store, we're just reading things here\n+    return false;\n+  }\n \n-    @Override\n-    public void close()\n+  @Override\n+  public void done()\n+  {\n+    for (int i = 0; i < labelCounts.length; i++)\n     {\n+      counts.incrementNodeCount(i == anyLabel ? StatementConstants.ANY_LABEL : i, labelCounts[i]);\n     }\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+  }\n }\n",
            "diff_size": 58
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "27",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4227/NodeCountsProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4227/NodeCountsProcessor.java\nindex dc30c134e1d..8848a26f5d2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4227/NodeCountsProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4227/NodeCountsProcessor.java\n@@ -56,7 +56,7 @@ public class NodeCountsProcessor implements RecordProcessor<NodeRecord>\n     public boolean process( NodeRecord node )\n     {\n         long[] labels = NodeLabelsField.get( node, nodeStore );\n-        if ( labels.length > 0 )\n+        if ( labels.length> 0 )\n         {\n             for ( long labelId : labels )\n             {\n@@ -64,7 +64,8 @@ public class NodeCountsProcessor implements RecordProcessor<NodeRecord>\n             }\n             cache.put( node.getId(), labels );\n         }\n-        labelCounts[anyLabel]++;\n+\n+labelCounts[anyLabel]++;\n         progressReporter.progress( 1 );\n \n         // No need to update the store, we're just reading things here\n@@ -84,4 +85,4 @@ public class NodeCountsProcessor implements RecordProcessor<NodeRecord>\n     public void close()\n     {\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
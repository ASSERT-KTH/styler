{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1000",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "63",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1000/RelationshipGroupDefragmenter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1000/RelationshipGroupDefragmenter.java\nindex c7c384ff94c..82118ecc3fa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1000/RelationshipGroupDefragmenter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1000/RelationshipGroupDefragmenter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport;\n \n import org.neo4j.kernel.impl.store.RecordStore;\n@@ -45,80 +46,80 @@ import static org.neo4j.unsafe.impl.batchimport.staging.ExecutionSupervisors.sup\n public class RelationshipGroupDefragmenter\n {\n \n-    private final Configuration config;\n-    private final ExecutionMonitor executionMonitor;\n-    private final Monitor monitor;\n-    private final NumberArrayFactory numberArrayFactory;\n-\n-    public interface Monitor\n-    {\n-        /**\n-         * When defragmenting the relationship group store it may happen in chunks, selected by node range.\n-         * Every time a chunk is selected this method is called.\n-         *\n-         * @param fromNodeId low node id in the range to process (inclusive).\n-         * @param toNodeId high node id in the range to process (exclusive).\n-         */\n-        default void defragmentingNodeRange( long fromNodeId, long toNodeId )\n-        {   // empty\n-        }\n+  private final Configuration config;\n+  private final ExecutionMonitor executionMonitor;\n+  private final Monitor monitor;\n+  private final NumberArrayFactory numberArrayFactory;\n \n-        Monitor EMPTY = new Monitor()\n-        {   // empty\n-        };\n+  public interface Monitor\n+  {\n+    /**\n+     * When defragmenting the relationship group store it may happen in chunks, selected by node range.\n+     * Every time a chunk is selected this method is called.\n+     *\n+     * @param fromNodeId low node id in the range to process (inclusive).\n+     * @param toNodeId   high node id in the range to process (exclusive).\n+     */\n+    default void defragmentingNodeRange(long fromNodeId, long toNodeId)\n+    {   // empty\n     }\n \n-    public RelationshipGroupDefragmenter( Configuration config, ExecutionMonitor executionMonitor, Monitor monitor,\n-            NumberArrayFactory numberArrayFactory )\n-    {\n-        this.config = config;\n-        this.executionMonitor = executionMonitor;\n-        this.monitor = monitor;\n-        this.numberArrayFactory = numberArrayFactory;\n-    }\n+    Monitor EMPTY = new Monitor()\n+    {   // empty\n+    };\n+  }\n+\n+  public RelationshipGroupDefragmenter(Configuration config, ExecutionMonitor executionMonitor, Monitor monitor,\n+                                       NumberArrayFactory numberArrayFactory)\n+  {\n+    this.config = config;\n+    this.executionMonitor = executionMonitor;\n+    this.monitor = monitor;\n+    this.numberArrayFactory = numberArrayFactory;\n+  }\n \n-    public void run( long memoryWeCanHoldForCertain, BatchingNeoStores neoStore, long highNodeId )\n+  public void run(long memoryWeCanHoldForCertain, BatchingNeoStores neoStore, long highNodeId)\n+  {\n+    try (RelationshipGroupCache groupCache =\n+             new RelationshipGroupCache(numberArrayFactory, memoryWeCanHoldForCertain, highNodeId))\n     {\n-        try ( RelationshipGroupCache groupCache =\n-                new RelationshipGroupCache( numberArrayFactory, memoryWeCanHoldForCertain, highNodeId ) )\n-        {\n-            // Read from the temporary relationship group store...\n-            RecordStore<RelationshipGroupRecord> fromStore = neoStore.getTemporaryRelationshipGroupStore();\n-            // and write into the main relationship group store\n-            RecordStore<RelationshipGroupRecord> toStore = neoStore.getRelationshipGroupStore();\n+      // Read from the temporary relationship group store...\n+      RecordStore<RelationshipGroupRecord> fromStore = neoStore.getTemporaryRelationshipGroupStore();\n+      // and write into the main relationship group store\n+      RecordStore<RelationshipGroupRecord> toStore = neoStore.getRelationshipGroupStore();\n \n-            // Count all nodes, how many groups each node has each\n-            Configuration groupConfig =\n-                    withBatchSize( config, neoStore.getRelationshipGroupStore().getRecordsPerPage() );\n-            StatsProvider memoryUsage = new MemoryUsageStatsProvider( neoStore, groupCache );\n-            executeStage( new CountGroupsStage( groupConfig, fromStore, groupCache, memoryUsage ) );\n-            long fromNodeId = 0;\n-            long toNodeId = 0;\n-            while ( fromNodeId < highNodeId )\n-            {\n-                // See how many nodes' groups we can fit into the cache this iteration of the loop.\n-                // Groups that doesn't fit in this round will be included in consecutive rounds.\n-                toNodeId = groupCache.prepare( fromNodeId );\n-                monitor.defragmentingNodeRange( fromNodeId, toNodeId );\n-                // Cache those groups\n-                executeStage( new ScanAndCacheGroupsStage( groupConfig, fromStore, groupCache, memoryUsage ) );\n-                // And write them in sequential order in the store\n-                executeStage( new WriteGroupsStage( groupConfig, groupCache, toStore ) );\n+      // Count all nodes, how many groups each node has each\n+      Configuration groupConfig =\n+          withBatchSize(config, neoStore.getRelationshipGroupStore().getRecordsPerPage());\n+      StatsProvider memoryUsage = new MemoryUsageStatsProvider(neoStore, groupCache);\n+      executeStage(new CountGroupsStage(groupConfig, fromStore, groupCache, memoryUsage));\n+      long fromNodeId = 0;\n+      long toNodeId = 0;\n+      while (fromNodeId < highNodeId)\n+      {\n+        // See how many nodes' groups we can fit into the cache this iteration of the loop.\n+        // Groups that doesn't fit in this round will be included in consecutive rounds.\n+        toNodeId = groupCache.prepare(fromNodeId);\n+        monitor.defragmentingNodeRange(fromNodeId, toNodeId);\n+        // Cache those groups\n+        executeStage(new ScanAndCacheGroupsStage(groupConfig, fromStore, groupCache, memoryUsage));\n+        // And write them in sequential order in the store\n+        executeStage(new WriteGroupsStage(groupConfig, groupCache, toStore));\n \n-                // Make adjustments for the next iteration\n-                fromNodeId = toNodeId;\n-            }\n+        // Make adjustments for the next iteration\n+        fromNodeId = toNodeId;\n+      }\n \n-            // Now update nodes to point to the new groups\n-            ByteArray groupCountCache = groupCache.getGroupCountCache();\n-            groupCountCache.clear();\n-            Configuration nodeConfig = withBatchSize( config, neoStore.getNodeStore().getRecordsPerPage() );\n-            executeStage( new NodeFirstGroupStage( nodeConfig, toStore, neoStore.getNodeStore(), groupCountCache ) );\n-        }\n+      // Now update nodes to point to the new groups\n+      ByteArray groupCountCache = groupCache.getGroupCountCache();\n+      groupCountCache.clear();\n+      Configuration nodeConfig = withBatchSize(config, neoStore.getNodeStore().getRecordsPerPage());\n+      executeStage(new NodeFirstGroupStage(nodeConfig, toStore, neoStore.getNodeStore(), groupCountCache));\n     }\n+  }\n \n-    private void executeStage( Stage stage )\n-    {\n-        superviseExecution( executionMonitor, config, stage );\n-    }\n+  private void executeStage(Stage stage)\n+  {\n+    superviseExecution(executionMonitor, config, stage);\n+  }\n }\n",
            "diff_size": 84
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1000/RelationshipGroupDefragmenter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1000/RelationshipGroupDefragmenter.java\nindex c7c384ff94c..a250d330f6a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1000/RelationshipGroupDefragmenter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1000/RelationshipGroupDefragmenter.java\n@@ -44,7 +44,6 @@ import static org.neo4j.unsafe.impl.batchimport.staging.ExecutionSupervisors.sup\n  */\n public class RelationshipGroupDefragmenter\n {\n-\n     private final Configuration config;\n     private final ExecutionMonitor executionMonitor;\n     private final Monitor monitor;\n@@ -60,11 +59,13 @@ public class RelationshipGroupDefragmenter\n          * @param toNodeId high node id in the range to process (exclusive).\n          */\n         default void defragmentingNodeRange( long fromNodeId, long toNodeId )\n-        {   // empty\n+        {\n+    // empty\n         }\n \n         Monitor EMPTY = new Monitor()\n-        {   // empty\n+        {\n+    // empty\n         };\n     }\n \n@@ -79,8 +80,7 @@ public class RelationshipGroupDefragmenter\n \n     public void run( long memoryWeCanHoldForCertain, BatchingNeoStores neoStore, long highNodeId )\n     {\n-        try ( RelationshipGroupCache groupCache =\n-                new RelationshipGroupCache( numberArrayFactory, memoryWeCanHoldForCertain, highNodeId ) )\n+        try ( RelationshipGroupCache groupCache = new RelationshipGroupCache( numberArrayFactory, memoryWeCanHoldForCertain, highNodeId ) )\n         {\n             // Read from the temporary relationship group store...\n             RecordStore<RelationshipGroupRecord> fromStore = neoStore.getTemporaryRelationshipGroupStore();\n@@ -88,9 +88,8 @@ public class RelationshipGroupDefragmenter\n             RecordStore<RelationshipGroupRecord> toStore = neoStore.getRelationshipGroupStore();\n \n             // Count all nodes, how many groups each node has each\n-            Configuration groupConfig =\n-                    withBatchSize( config, neoStore.getRelationshipGroupStore().getRecordsPerPage() );\n-            StatsProvider memoryUsage = new MemoryUsageStatsProvider( neoStore, groupCache );\n+            Configuration groupConfig = withBatchSize( config, neoStore.getRelationshipGroupStore().getRecordsPerPage() );\n+StatsProvider memoryUsage = new MemoryUsageStatsProvider( neoStore, groupCache );\n             executeStage( new CountGroupsStage( groupConfig, fromStore, groupCache, memoryUsage ) );\n             long fromNodeId = 0;\n             long toNodeId = 0;\n@@ -121,4 +120,4 @@ public class RelationshipGroupDefragmenter\n     {\n         superviseExecution( executionMonitor, config, stage );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
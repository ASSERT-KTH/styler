{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3100",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3100/RenewableBatchIdSequence.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3100/RenewableBatchIdSequence.java\nindex d79c1c65d46..d463402c3e4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3100/RenewableBatchIdSequence.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3100/RenewableBatchIdSequence.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.id;\n \n import java.util.function.LongConsumer;\n@@ -31,54 +32,54 @@ import static org.neo4j.kernel.impl.store.id.IdRangeIterator.VALUE_REPRESENTING_\n  */\n public class RenewableBatchIdSequence implements IdSequence, Resource\n {\n-    private final IdSequence source;\n-    private final int batchSize;\n-    private final LongConsumer excessIdConsumer;\n-    private IdSequence currentBatch;\n-    private boolean closed;\n+  private final IdSequence source;\n+  private final int batchSize;\n+  private final LongConsumer excessIdConsumer;\n+  private IdSequence currentBatch;\n+  private boolean closed;\n \n-    RenewableBatchIdSequence( IdSequence source, int batchSize, LongConsumer excessIdConsumer )\n-    {\n-        this.source = source;\n-        this.batchSize = batchSize;\n-        this.excessIdConsumer = excessIdConsumer;\n-    }\n+  RenewableBatchIdSequence(IdSequence source, int batchSize, LongConsumer excessIdConsumer)\n+  {\n+    this.source = source;\n+    this.batchSize = batchSize;\n+    this.excessIdConsumer = excessIdConsumer;\n+  }\n \n-    /**\n-     * Even if instances are meant to be accessed by a single thread at a time, lifecycle calls\n-     * can guard for it nonetheless. Only the first call to close will perform close.\n-     */\n-    @Override\n-    public synchronized void close()\n+  /**\n+   * Even if instances are meant to be accessed by a single thread at a time, lifecycle calls\n+   * can guard for it nonetheless. Only the first call to close will perform close.\n+   */\n+  @Override\n+  public synchronized void close()\n+  {\n+    if (!closed && currentBatch != null)\n     {\n-        if ( !closed && currentBatch != null )\n-        {\n-            long id;\n-            while ( (id = currentBatch.nextId()) != VALUE_REPRESENTING_NULL )\n-            {\n-                excessIdConsumer.accept( id );\n-            }\n-            currentBatch = null;\n-        }\n-        closed = true;\n+      long id;\n+      while ((id = currentBatch.nextId()) != VALUE_REPRESENTING_NULL)\n+      {\n+        excessIdConsumer.accept(id);\n+      }\n+      currentBatch = null;\n     }\n+    closed = true;\n+  }\n \n-    @Override\n-    public long nextId()\n-    {\n-        assert !closed;\n+  @Override\n+  public long nextId()\n+  {\n+    assert !closed;\n \n-        long id;\n-        while ( currentBatch == null || (id = currentBatch.nextId()) == VALUE_REPRESENTING_NULL )\n-        {\n-            currentBatch = source.nextIdBatch( batchSize ).iterator();\n-        }\n-        return id;\n-    }\n-\n-    @Override\n-    public IdRange nextIdBatch( int size )\n+    long id;\n+    while (currentBatch == null || (id = currentBatch.nextId()) == VALUE_REPRESENTING_NULL)\n     {\n-        throw new UnsupportedOperationException( \"Haven't been needed so far\" );\n+      currentBatch = source.nextIdBatch(batchSize).iterator();\n     }\n+    return id;\n+  }\n+\n+  @Override\n+  public IdRange nextIdBatch(int size)\n+  {\n+    throw new UnsupportedOperationException(\"Haven't been needed so far\");\n+  }\n }\n",
            "diff_size": 55
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3100/RenewableBatchIdSequence.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3100/RenewableBatchIdSequence.java\nindex d79c1c65d46..a05a36f2bca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3100/RenewableBatchIdSequence.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3100/RenewableBatchIdSequence.java\n@@ -58,9 +58,11 @@ public class RenewableBatchIdSequence implements IdSequence, Resource\n             {\n                 excessIdConsumer.accept( id );\n             }\n-            currentBatch = null;\n+\n+currentBatch = null;\n         }\n-        closed = true;\n+\n+closed = true;\n     }\n \n     @Override\n@@ -73,7 +75,8 @@ public class RenewableBatchIdSequence implements IdSequence, Resource\n         {\n             currentBatch = source.nextIdBatch( batchSize ).iterator();\n         }\n-        return id;\n+\n+return id;\n     }\n \n     @Override\n@@ -81,4 +84,4 @@ public class RenewableBatchIdSequence implements IdSequence, Resource\n     {\n         throw new UnsupportedOperationException( \"Haven't been needed so far\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "22",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "57",
                    "column": "13",
                    "severity": "error",
                    "message": "'while' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "57",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "9",
                    "severity": "error",
                    "message": "'while' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "73",
                    "column": "36",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "73",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3100/RenewableBatchIdSequence.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3100/RenewableBatchIdSequence.java\nindex d79c1c65d46..219f565a721 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3100/RenewableBatchIdSequence.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3100/RenewableBatchIdSequence.java\n@@ -20,15 +20,14 @@\n package org.neo4j.kernel.impl.store.id;\n \n import java.util.function.LongConsumer;\n-\n import org.neo4j.graphdb.Resource;\n-\n import static org.neo4j.kernel.impl.store.id.IdRangeIterator.VALUE_REPRESENTING_NULL;\n \n /**\n  * An {@link IdSequence} which does internal batching by using another {@link IdSequence} as source of batches.\n  * Meant to be used by a single thread at a time.\n  */\n+\n public class RenewableBatchIdSequence implements IdSequence, Resource\n {\n     private final IdSequence source;\n@@ -48,31 +47,34 @@ public class RenewableBatchIdSequence implements IdSequence, Resource\n      * Even if instances are meant to be accessed by a single thread at a time, lifecycle calls\n      * can guard for it nonetheless. Only the first call to close will perform close.\n      */\n+\n     @Override\n     public synchronized void close()\n     {\n-        if ( !closed && currentBatch != null )\n+        if ( ! closed&& currentBatch != null )\n         {\n             long id;\n-            while ( (id = currentBatch.nextId()) != VALUE_REPRESENTING_NULL )\n+            while( ( id = currentBatch.nextId()) != VALUE_REPRESENTING_NULL)\n             {\n                 excessIdConsumer.accept( id );\n             }\n+\n             currentBatch = null;\n         }\n+\n         closed = true;\n     }\n \n     @Override\n     public long nextId()\n     {\n-        assert !closed;\n-\n+        assert ! closed;\n         long id;\n-        while ( currentBatch == null || (id = currentBatch.nextId()) == VALUE_REPRESENTING_NULL )\n+        while( currentBatch == null|| ( id = currentBatch.nextId()) == VALUE_REPRESENTING_NULL)\n         {\n             currentBatch = source.nextIdBatch( batchSize ).iterator();\n         }\n+\n         return id;\n     }\n \n@@ -81,4 +83,4 @@ public class RenewableBatchIdSequence implements IdSequence, Resource\n     {\n         throw new UnsupportedOperationException( \"Haven't been needed so far\" );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
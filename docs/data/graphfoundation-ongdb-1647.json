{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1647",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "117",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1647/SessionFactoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1647/SessionFactoryImpl.java\nindex f1caf29de21..5c5faa6a524 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1647/SessionFactoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1647/SessionFactoryImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.management.console;\n \n import java.util.Collection;\n@@ -34,64 +35,64 @@ import org.neo4j.server.database.Database;\n \n public class SessionFactoryImpl implements ConsoleSessionFactory\n {\n-    private static final Collection<ConsoleSessionCreator> creators =\n-            Iterables.asCollection( ServiceLoader.load( ConsoleSessionCreator.class ) );\n+  private static final Collection<ConsoleSessionCreator> creators =\n+      Iterables.asCollection(ServiceLoader.load(ConsoleSessionCreator.class));\n \n-    private final HttpSession httpSession;\n-    private final CypherExecutor cypherExecutor;\n-    private final Map<String, ConsoleSessionCreator> engineCreators = new HashMap<>();\n-    private final HttpServletRequest request;\n+  private final HttpSession httpSession;\n+  private final CypherExecutor cypherExecutor;\n+  private final Map<String, ConsoleSessionCreator> engineCreators = new HashMap<>();\n+  private final HttpServletRequest request;\n \n-    public SessionFactoryImpl( HttpServletRequest request, List<String> supportedEngines, CypherExecutor cypherExecutor )\n-    {\n-        this.request = request;\n-        this.httpSession = request.getSession(true);\n-        this.cypherExecutor = cypherExecutor;\n+  public SessionFactoryImpl(HttpServletRequest request, List<String> supportedEngines, CypherExecutor cypherExecutor)\n+  {\n+    this.request = request;\n+    this.httpSession = request.getSession(true);\n+    this.cypherExecutor = cypherExecutor;\n \n-        enableEngines( supportedEngines );\n-    }\n+    enableEngines(supportedEngines);\n+  }\n \n-    @Override\n-    public ScriptSession createSession( String engineName, Database database, LogProvider logProvider )\n+  @Override\n+  public ScriptSession createSession(String engineName, Database database, LogProvider logProvider)\n+  {\n+    engineName = engineName.toLowerCase();\n+    if (engineCreators.containsKey(engineName))\n     {\n-        engineName = engineName.toLowerCase();\n-        if ( engineCreators.containsKey( engineName ) )\n-        {\n-            return getOrInstantiateSession( database, engineName + \"-console-session\", engineCreators.get( engineName ), logProvider );\n-        }\n-\n-        throw new IllegalArgumentException( \"Unknown console engine '\" + engineName + \"'.\" );\n+      return getOrInstantiateSession(database, engineName + \"-console-session\", engineCreators.get(engineName), logProvider);\n     }\n \n-    @Override\n-    public Iterable<String> supportedEngines()\n-    {\n-        return engineCreators.keySet();\n-    }\n+    throw new IllegalArgumentException(\"Unknown console engine '\" + engineName + \"'.\");\n+  }\n+\n+  @Override\n+  public Iterable<String> supportedEngines()\n+  {\n+    return engineCreators.keySet();\n+  }\n \n-    private ScriptSession getOrInstantiateSession( Database database, String key, ConsoleSessionCreator creator, LogProvider logProvider )\n+  private ScriptSession getOrInstantiateSession(Database database, String key, ConsoleSessionCreator creator, LogProvider logProvider)\n+  {\n+    Object session = httpSession.getAttribute(key);\n+    if (session == null)\n     {\n-        Object session = httpSession.getAttribute( key );\n-        if ( session == null )\n-        {\n-            session = creator.newSession( database, cypherExecutor, request, logProvider );\n-            httpSession.setAttribute( key, session );\n-        }\n-        return (ScriptSession) session;\n+      session = creator.newSession(database, cypherExecutor, request, logProvider);\n+      httpSession.setAttribute(key, session);\n     }\n+    return (ScriptSession) session;\n+  }\n \n-    private void enableEngines( List<String> supportedEngines )\n+  private void enableEngines(List<String> supportedEngines)\n+  {\n+    for (ConsoleSessionCreator creator : creators)\n     {\n-        for ( ConsoleSessionCreator creator : creators )\n+      for (String engineName : supportedEngines)\n+      {\n+        if (creator.name().equalsIgnoreCase(engineName))\n         {\n-            for ( String engineName : supportedEngines )\n-            {\n-                if ( creator.name().equalsIgnoreCase( engineName ) )\n-                {\n-                    engineCreators.put( engineName.toLowerCase(), creator );\n-                }\n-            }\n+          engineCreators.put(engineName.toLowerCase(), creator);\n         }\n+      }\n     }\n+  }\n \n }\n",
            "diff_size": 62
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1647/SessionFactoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1647/SessionFactoryImpl.java\nindex f1caf29de21..80a232aa93d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1647/SessionFactoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1647/SessionFactoryImpl.java\n@@ -34,12 +34,10 @@ import org.neo4j.server.database.Database;\n \n public class SessionFactoryImpl implements ConsoleSessionFactory\n {\n-    private static final Collection<ConsoleSessionCreator> creators =\n-            Iterables.asCollection( ServiceLoader.load( ConsoleSessionCreator.class ) );\n-\n-    private final HttpSession httpSession;\n+    private static final Collection<ConsoleSessionCreator> creators = Iterables.asCollection( ServiceLoader.load( ConsoleSessionCreator.class ) );\n+private final HttpSession httpSession;\n     private final CypherExecutor cypherExecutor;\n-    private final Map<String, ConsoleSessionCreator> engineCreators = new HashMap<>();\n+    private final Map<String,ConsoleSessionCreator> engineCreators = new HashMap<>();\n     private final HttpServletRequest request;\n \n     public SessionFactoryImpl( HttpServletRequest request, List<String> supportedEngines, CypherExecutor cypherExecutor )\n@@ -93,5 +91,4 @@ public class SessionFactoryImpl implements ConsoleSessionFactory\n             }\n         }\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1716",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1716/StoreFileBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1716/StoreFileBean.java\nindex 28c24b7bed4..ae16c96ac94 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1716/StoreFileBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1716/StoreFileBean.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.jmx.impl;\n \n import java.io.File;\n@@ -39,203 +40,203 @@ import static org.neo4j.kernel.impl.store.StoreFactory.PROPERTY_STORE_NAME;\n import static org.neo4j.kernel.impl.store.StoreFactory.PROPERTY_STRINGS_STORE_NAME;\n import static org.neo4j.kernel.impl.store.StoreFactory.RELATIONSHIP_STORE_NAME;\n \n-@Service.Implementation( ManagementBeanProvider.class )\n+@Service.Implementation(ManagementBeanProvider.class)\n public final class StoreFileBean extends ManagementBeanProvider\n {\n-    private static final long UPDATE_INTERVAL = 60000;\n-    private static final StoreFile NO_STORE_FILE = new StoreFile()\n-    {\n-        @Override\n-        public long getLogicalLogSize()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long getTotalStoreSize()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long getNodeStoreSize()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long getRelationshipStoreSize()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long getPropertyStoreSize()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long getStringStoreSize()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public long getArrayStoreSize()\n-        {\n-            return 0;\n-        }\n-    };\n-\n-    public StoreFileBean()\n-    {\n-        super( StoreFile.class );\n-    }\n-\n-    @Override\n-    protected Neo4jMBean createMBean( ManagementData management )\n-    {\n-        final StoreFileMBean bean = new StoreFileMBean( management );\n-        final DataSourceManager dataSourceManager = management.resolveDependency( DataSourceManager.class );\n-        dataSourceManager.addListener( bean );\n-        return bean;\n-    }\n-\n-    static class StoreFileMBean extends Neo4jMBean implements StoreFile, DataSourceManager.Listener\n-    {\n-        private final FileSystemAbstraction fs;\n-        private final File storePath;\n-        private volatile StoreFile delegate = NO_STORE_FILE;\n-\n-        StoreFileMBean( ManagementData management )\n-        {\n-            super( management, false );\n-            this.fs = management.getKernelData().getFilesystemAbstraction();\n-            this.storePath = resolveStorePath( management );\n-        }\n-\n-        @Override\n-        public void registered( NeoStoreDataSource ds )\n-        {\n-            final LogFiles logFiles = ds.getDependencyResolver().resolveDependency( LogFiles.class );\n-            final StoreFileImpl dataProvider = new StoreFileImpl( fs, storePath, logFiles );\n-            this.delegate = newThrottlingBeanSnapshotProxy( StoreFile.class, dataProvider, UPDATE_INTERVAL, Clock.systemUTC() );\n-        }\n-\n-        @Override\n-        public void unregistered( NeoStoreDataSource ds )\n-        {\n-            this.delegate = NO_STORE_FILE;\n-        }\n-\n-        @Override\n-        public long getLogicalLogSize()\n-        {\n-            return delegate.getLogicalLogSize();\n-        }\n-\n-        @Override\n-        public long getTotalStoreSize()\n-        {\n-            return delegate.getTotalStoreSize();\n-        }\n-\n-        @Override\n-        public long getNodeStoreSize()\n-        {\n-            return delegate.getNodeStoreSize();\n-        }\n-\n-        @Override\n-        public long getRelationshipStoreSize()\n-        {\n-            return delegate.getRelationshipStoreSize();\n-        }\n-\n-        @Override\n-        public long getPropertyStoreSize()\n-        {\n-            return delegate.getPropertyStoreSize();\n-        }\n-\n-        @Override\n-        public long getStringStoreSize()\n-        {\n-            return delegate.getStringStoreSize();\n-        }\n-\n-        @Override\n-        public long getArrayStoreSize()\n-        {\n-            return delegate.getArrayStoreSize();\n-        }\n-    }\n-\n-    static class StoreFileImpl implements StoreFile\n-    {\n-        private static final String NODE_STORE = MetaDataStore.DEFAULT_NAME + NODE_STORE_NAME;\n-        private static final String RELATIONSHIP_STORE = MetaDataStore.DEFAULT_NAME +  RELATIONSHIP_STORE_NAME;\n-        private static final String PROPERTY_STORE = MetaDataStore.DEFAULT_NAME + PROPERTY_STORE_NAME;\n-        private static final String ARRAY_STORE = MetaDataStore.DEFAULT_NAME + PROPERTY_ARRAYS_STORE_NAME;\n-        private static final String STRING_STORE = MetaDataStore.DEFAULT_NAME + PROPERTY_STRINGS_STORE_NAME;\n-\n-        private final File storePath;\n-        private final LogFiles logFiles;\n-        private final FileSystemAbstraction fs;\n-\n-        StoreFileImpl( FileSystemAbstraction fs, File storePath, LogFiles logFiles )\n-        {\n-            this.fs = fs;\n-            this.storePath = storePath;\n-            this.logFiles = logFiles;\n-        }\n-\n-        @Override\n-        public long getTotalStoreSize()\n-        {\n-            return storePath == null ? 0 : FileUtils.size( fs, storePath );\n-        }\n-\n-        @Override\n-        public long getLogicalLogSize()\n-        {\n-            return logFiles == null ? 0 : FileUtils.size( fs, logFiles.getHighestLogFile() );\n-        }\n-\n-        @Override\n-        public long getArrayStoreSize()\n-        {\n-            return sizeOf( ARRAY_STORE );\n-        }\n-\n-        @Override\n-        public long getNodeStoreSize()\n-        {\n-            return sizeOf( NODE_STORE );\n-        }\n-\n-        @Override\n-        public long getPropertyStoreSize()\n-        {\n-            return sizeOf( PROPERTY_STORE );\n-        }\n-\n-        @Override\n-        public long getRelationshipStoreSize()\n-        {\n-            return sizeOf( RELATIONSHIP_STORE );\n-        }\n-\n-        @Override\n-        public long getStringStoreSize()\n-        {\n-            return sizeOf( STRING_STORE );\n-        }\n-\n-        private long sizeOf( String name )\n-        {\n-            return storePath == null ? 0 : FileUtils.size( fs, new File( storePath, name ) );\n-        }\n+  private static final long UPDATE_INTERVAL = 60000;\n+  private static final StoreFile NO_STORE_FILE = new StoreFile()\n+  {\n+    @Override\n+    public long getLogicalLogSize()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public long getTotalStoreSize()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public long getNodeStoreSize()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public long getRelationshipStoreSize()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public long getPropertyStoreSize()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public long getStringStoreSize()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public long getArrayStoreSize()\n+    {\n+      return 0;\n+    }\n+  };\n+\n+  public StoreFileBean()\n+  {\n+    super(StoreFile.class);\n+  }\n+\n+  @Override\n+  protected Neo4jMBean createMBean(ManagementData management)\n+  {\n+    final StoreFileMBean bean = new StoreFileMBean(management);\n+    final DataSourceManager dataSourceManager = management.resolveDependency(DataSourceManager.class);\n+    dataSourceManager.addListener(bean);\n+    return bean;\n+  }\n+\n+  static class StoreFileMBean extends Neo4jMBean implements StoreFile, DataSourceManager.Listener\n+  {\n+    private final FileSystemAbstraction fs;\n+    private final File storePath;\n+    private volatile StoreFile delegate = NO_STORE_FILE;\n+\n+    StoreFileMBean(ManagementData management)\n+    {\n+      super(management, false);\n+      this.fs = management.getKernelData().getFilesystemAbstraction();\n+      this.storePath = resolveStorePath(management);\n+    }\n+\n+    @Override\n+    public void registered(NeoStoreDataSource ds)\n+    {\n+      final LogFiles logFiles = ds.getDependencyResolver().resolveDependency(LogFiles.class);\n+      final StoreFileImpl dataProvider = new StoreFileImpl(fs, storePath, logFiles);\n+      this.delegate = newThrottlingBeanSnapshotProxy(StoreFile.class, dataProvider, UPDATE_INTERVAL, Clock.systemUTC());\n+    }\n+\n+    @Override\n+    public void unregistered(NeoStoreDataSource ds)\n+    {\n+      this.delegate = NO_STORE_FILE;\n+    }\n+\n+    @Override\n+    public long getLogicalLogSize()\n+    {\n+      return delegate.getLogicalLogSize();\n+    }\n+\n+    @Override\n+    public long getTotalStoreSize()\n+    {\n+      return delegate.getTotalStoreSize();\n+    }\n+\n+    @Override\n+    public long getNodeStoreSize()\n+    {\n+      return delegate.getNodeStoreSize();\n+    }\n+\n+    @Override\n+    public long getRelationshipStoreSize()\n+    {\n+      return delegate.getRelationshipStoreSize();\n+    }\n+\n+    @Override\n+    public long getPropertyStoreSize()\n+    {\n+      return delegate.getPropertyStoreSize();\n+    }\n+\n+    @Override\n+    public long getStringStoreSize()\n+    {\n+      return delegate.getStringStoreSize();\n+    }\n+\n+    @Override\n+    public long getArrayStoreSize()\n+    {\n+      return delegate.getArrayStoreSize();\n+    }\n+  }\n+\n+  static class StoreFileImpl implements StoreFile\n+  {\n+    private static final String NODE_STORE = MetaDataStore.DEFAULT_NAME + NODE_STORE_NAME;\n+    private static final String RELATIONSHIP_STORE = MetaDataStore.DEFAULT_NAME + RELATIONSHIP_STORE_NAME;\n+    private static final String PROPERTY_STORE = MetaDataStore.DEFAULT_NAME + PROPERTY_STORE_NAME;\n+    private static final String ARRAY_STORE = MetaDataStore.DEFAULT_NAME + PROPERTY_ARRAYS_STORE_NAME;\n+    private static final String STRING_STORE = MetaDataStore.DEFAULT_NAME + PROPERTY_STRINGS_STORE_NAME;\n+\n+    private final File storePath;\n+    private final LogFiles logFiles;\n+    private final FileSystemAbstraction fs;\n+\n+    StoreFileImpl(FileSystemAbstraction fs, File storePath, LogFiles logFiles)\n+    {\n+      this.fs = fs;\n+      this.storePath = storePath;\n+      this.logFiles = logFiles;\n+    }\n+\n+    @Override\n+    public long getTotalStoreSize()\n+    {\n+      return storePath == null ? 0 : FileUtils.size(fs, storePath);\n+    }\n+\n+    @Override\n+    public long getLogicalLogSize()\n+    {\n+      return logFiles == null ? 0 : FileUtils.size(fs, logFiles.getHighestLogFile());\n+    }\n+\n+    @Override\n+    public long getArrayStoreSize()\n+    {\n+      return sizeOf(ARRAY_STORE);\n+    }\n+\n+    @Override\n+    public long getNodeStoreSize()\n+    {\n+      return sizeOf(NODE_STORE);\n+    }\n+\n+    @Override\n+    public long getPropertyStoreSize()\n+    {\n+      return sizeOf(PROPERTY_STORE);\n+    }\n+\n+    @Override\n+    public long getRelationshipStoreSize()\n+    {\n+      return sizeOf(RELATIONSHIP_STORE);\n+    }\n+\n+    @Override\n+    public long getStringStoreSize()\n+    {\n+      return sizeOf(STRING_STORE);\n+    }\n+\n+    private long sizeOf(String name)\n+    {\n+      return storePath == null ? 0 : FileUtils.size(fs, new File(storePath, name));\n     }\n+  }\n }\n",
            "diff_size": 198
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1716/StoreFileBean.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1716/StoreFileBean.java\nindex 28c24b7bed4..331e2078ee3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1716/StoreFileBean.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1716/StoreFileBean.java\n@@ -175,7 +175,7 @@ public final class StoreFileBean extends ManagementBeanProvider\n     static class StoreFileImpl implements StoreFile\n     {\n         private static final String NODE_STORE = MetaDataStore.DEFAULT_NAME + NODE_STORE_NAME;\n-        private static final String RELATIONSHIP_STORE = MetaDataStore.DEFAULT_NAME +  RELATIONSHIP_STORE_NAME;\n+        private static final String RELATIONSHIP_STORE = MetaDataStore.DEFAULT_NAME + RELATIONSHIP_STORE_NAME;\n         private static final String PROPERTY_STORE = MetaDataStore.DEFAULT_NAME + PROPERTY_STORE_NAME;\n         private static final String ARRAY_STORE = MetaDataStore.DEFAULT_NAME + PROPERTY_ARRAYS_STORE_NAME;\n         private static final String STRING_STORE = MetaDataStore.DEFAULT_NAME + PROPERTY_STRINGS_STORE_NAME;\n@@ -238,4 +238,4 @@ public final class StoreFileBean extends ManagementBeanProvider\n             return storePath == null ? 0 : FileUtils.size( fs, new File( storePath, name ) );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
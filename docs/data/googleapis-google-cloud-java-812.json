{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "812",
    "information": {
        "errors": [
            {
                "line": "42",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "      if (exception instanceof BaseServiceException) {\n        boolean retriable = ((BaseServiceException) exception).isRetryable();\n        return retriable ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.CONTINUE_EVALUATION;\n      }\n      return Interceptor.RetryResult.CONTINUE_EVALUATION;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/812/BaseService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/812/BaseService.java\nindex a907bed1321..108c8b8b0fd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/812/BaseService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/812/BaseService.java\n@@ -39,7 +39,8 @@ public abstract class BaseService<OptionsT extends ServiceOptions<?, OptionsT>>\n     public RetryResult beforeEval(Exception exception) {\n       if (exception instanceof BaseServiceException) {\n         boolean retriable = ((BaseServiceException) exception).isRetryable();\n-        return retriable ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.CONTINUE_EVALUATION;\n+        return retriable ? Interceptor.RetryResult.RETRY :\n+            Interceptor.RetryResult.CONTINUE_EVALUATION;\n       }\n       return Interceptor.RetryResult.CONTINUE_EVALUATION;\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be one of the following: 10, 12, 14.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'.' has incorrect indentation level 6, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/812/BaseService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/812/BaseService.java\nindex a907bed1321..544fb55af87 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/812/BaseService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/812/BaseService.java\n@@ -39,12 +39,14 @@ public abstract class BaseService<OptionsT extends ServiceOptions<?, OptionsT>>\n     public RetryResult beforeEval(Exception exception) {\n       if (exception instanceof BaseServiceException) {\n         boolean retriable = ((BaseServiceException) exception).isRetryable();\n-        return retriable ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.CONTINUE_EVALUATION;\n+        return retriable\n+    ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.CONTINUE_EVALUATION;\n       }\n       return Interceptor.RetryResult.CONTINUE_EVALUATION;\n     }\n   };\n-  public static final ExceptionHandler EXCEPTION_HANDLER = ExceptionHandler.newBuilder()\n+\n+    public static final ExceptionHandler EXCEPTION_HANDLER = ExceptionHandler.newBuilder()\n       .abortOn(RuntimeException.class)\n       .addInterceptors(EXCEPTION_HANDLER_INTERCEPTOR)\n       .build();\n@@ -55,9 +57,8 @@ public abstract class BaseService<OptionsT extends ServiceOptions<?, OptionsT>>\n     this.options = options;\n   }\n \n-\n-  @Override\n+@Override\n   public OptionsT getOptions() {\n     return options;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "'implements' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "'object def' child has incorrect indentation level 68, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 68, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 144).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 70, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "38",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 68, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 68, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 120).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 70, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 118).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 72, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 141).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 72, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 70, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 70, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 68, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "48",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 66, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/812/BaseService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/812/BaseService.java\nindex a907bed1321..9270e04f77d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/812/BaseService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/812/BaseService.java\n@@ -23,41 +23,39 @@ import com.google.cloud.ExceptionHandler.Interceptor;\n  *\n  * @param <OptionsT> the {@code ServiceOptions} subclass corresponding to the service\n  */\n+\n+\n public abstract class BaseService<OptionsT extends ServiceOptions<?, OptionsT>>\n-    implements Service<OptionsT> {\n+implements Service<OptionsT> {\n \n   public static final Interceptor EXCEPTION_HANDLER_INTERCEPTOR = new Interceptor() {\n \n-    private static final long serialVersionUID = -8429573486870467828L;\n-\n-    @Override\n-    public RetryResult afterEval(Exception exception, RetryResult retryResult) {\n-      return Interceptor.RetryResult.CONTINUE_EVALUATION;\n-    }\n-\n-    @Override\n-    public RetryResult beforeEval(Exception exception) {\n-      if (exception instanceof BaseServiceException) {\n-        boolean retriable = ((BaseServiceException) exception).isRetryable();\n-        return retriable ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.CONTINUE_EVALUATION;\n-      }\n-      return Interceptor.RetryResult.CONTINUE_EVALUATION;\n-    }\n-  };\n-  public static final ExceptionHandler EXCEPTION_HANDLER = ExceptionHandler.newBuilder()\n-      .abortOn(RuntimeException.class)\n-      .addInterceptors(EXCEPTION_HANDLER_INTERCEPTOR)\n-      .build();\n+                                                                    private static final long serialVersionUID = -8429573486870467828L;\n+\n+                                                                    @Override\n+                                                                    public RetryResult afterEval(Exception exception, RetryResult retryResult) {\n+                                                                      return Interceptor.RetryResult.CONTINUE_EVALUATION;\n+                                                                    }\n \n+                                                                    @Override\n+                                                                    public RetryResult beforeEval(Exception exception) {\n+                                                                      if (exception instanceof BaseServiceException) {\n+                                                                        boolean retriable = ((BaseServiceException) exception).isRetryable();\n+                                                                        return retriable ? Interceptor.RetryResult.RETRY : Interceptor.RetryResult.CONTINUE_EVALUATION;\n+                                                                      }\n+                                                                      return Interceptor.RetryResult.CONTINUE_EVALUATION;\n+                                                                    }\n+                                                                  };\n+\n+  public static final ExceptionHandler EXCEPTION_HANDLER = ExceptionHandler.newBuilder().abortOn(RuntimeException.class).addInterceptors(EXCEPTION_HANDLER_INTERCEPTOR).build();\n   private final OptionsT options;\n \n   protected BaseService(OptionsT options) {\n     this.options = options;\n   }\n \n-\n   @Override\n   public OptionsT getOptions() {\n     return options;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 36
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
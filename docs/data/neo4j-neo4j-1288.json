{
    "project_name": "neo4j-neo4j",
    "error_id": "1288",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "55",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1288/SingleSourceShortestPathDijkstra.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1288/SingleSourceShortestPathDijkstra.java\nindex cf8f7e902ed..4f39d43254d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1288/SingleSourceShortestPathDijkstra.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1288/SingleSourceShortestPathDijkstra.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphalgo.impl.shortestpath;\n \n import java.util.Comparator;\n@@ -36,75 +37,76 @@ import org.neo4j.graphdb.RelationshipType;\n /**\n  * Dijkstra implementation to solve the single source shortest path problem for\n  * weighted networks.\n+ *\n+ * @param <CostType> The datatype the edge weights are represented by.\n  * @complexity The {@link CostEvaluator}, the {@link CostAccumulator} and the\n- *             cost comparator will all be called once for every relationship\n- *             traversed. Assuming they run in constant time, the time\n- *             complexity for this algorithm is O(m + n * log(n)).\n- * @param <CostType>\n- *            The datatype the edge weights are represented by.\n+ * cost comparator will all be called once for every relationship\n+ * traversed. Assuming they run in constant time, the time\n+ * complexity for this algorithm is O(m + n * log(n)).\n  */\n public class SingleSourceShortestPathDijkstra<CostType> extends\n-    Dijkstra<CostType> implements SingleSourceShortestPath<CostType>\n+  Dijkstra<CostType> implements SingleSourceShortestPath<CostType>\n {\n     DijkstraIterator dijkstraIterator;\n \n     /**\n      * @see Dijkstra\n      */\n-    public SingleSourceShortestPathDijkstra( CostType startCost,\n-        Node startNode, CostEvaluator<CostType> costEvaluator,\n-        CostAccumulator<CostType> costAccumulator,\n-        Comparator<CostType> costComparator, Direction relationDirection,\n-        RelationshipType... costRelationTypes )\n+    public SingleSourceShortestPathDijkstra(CostType startCost,\n+                                            Node startNode, CostEvaluator<CostType> costEvaluator,\n+                                            CostAccumulator<CostType> costAccumulator,\n+                                            Comparator<CostType> costComparator, Direction relationDirection,\n+                                            RelationshipType... costRelationTypes)\n     {\n-        super( startCost, startNode, null, costEvaluator, costAccumulator,\n-            costComparator, relationDirection, costRelationTypes );\n+        super(startCost, startNode, null, costEvaluator, costAccumulator,\n+          costComparator, relationDirection, costRelationTypes);\n         reset();\n     }\n \n-    protected Map<Node,CostType> distances = new HashMap<>();\n+    protected Map<Node, CostType> distances = new HashMap<>();\n \n     @Override\n     public void reset()\n     {\n         super.reset();\n         distances = new HashMap<>();\n-        Map<Node,CostType> seen1 = new HashMap<>();\n-        Map<Node,CostType> seen2 = new HashMap<>();\n-        Map<Node,CostType> dists2 = new HashMap<>();\n-        dijkstraIterator = new DijkstraIterator( startNode, predecessors1, seen1,\n-            seen2, distances, dists2, false );\n+        Map<Node, CostType> seen1 = new HashMap<>();\n+        Map<Node, CostType> seen2 = new HashMap<>();\n+        Map<Node, CostType> dists2 = new HashMap<>();\n+        dijkstraIterator = new DijkstraIterator(startNode, predecessors1, seen1,\n+          seen2, distances, dists2, false);\n     }\n \n     /**\n      * Same as calculate(), but will set the flag to calculate all shortest\n      * paths. It sets the flag and then calls calculate.\n+     *\n      * @return\n      */\n-    public boolean calculateMultiple( Node targetNode )\n+    public boolean calculateMultiple(Node targetNode)\n     {\n-        if ( !calculateAllShortestPaths )\n+        if (!calculateAllShortestPaths)\n         {\n             reset();\n             calculateAllShortestPaths = true;\n         }\n-        return calculate( targetNode );\n+        return calculate(targetNode);\n     }\n \n     @Override\n     public boolean calculate()\n     {\n-        return calculate( null );\n+        return calculate(null);\n     }\n \n     /**\n      * Internal calculate method that will run the calculation until either the\n      * limit is reached or a result has been generated for a given node.\n      */\n-    public boolean calculate( Node targetNode )\n+    public boolean calculate(Node targetNode)\n     {\n-        while ( (targetNode == null || !distances.containsKey( targetNode ))\n-            && dijkstraIterator.hasNext() && !limitReached() )\n+        while ((targetNode == null || !distances.containsKey(targetNode))\n+          && dijkstraIterator.hasNext() && !limitReached())\n         {\n             dijkstraIterator.next();\n         }\n@@ -113,7 +115,7 @@ public class SingleSourceShortestPathDijkstra<CostType> extends\n \n     // We dont need to reset the calculation, so we just override this.\n     @Override\n-    public void setEndNode( Node endNode )\n+    public void setEndNode(Node endNode)\n     {\n         this.endNode = endNode;\n     }\n@@ -122,168 +124,168 @@ public class SingleSourceShortestPathDijkstra<CostType> extends\n      * @see Dijkstra\n      */\n     @Override\n-    public CostType getCost( Node targetNode )\n+    public CostType getCost(Node targetNode)\n     {\n-        if ( targetNode == null )\n+        if (targetNode == null)\n         {\n-            throw new RuntimeException( \"No end node defined\" );\n+            throw new RuntimeException(\"No end node defined\");\n         }\n-        calculate( targetNode );\n-        return distances.get( targetNode );\n+        calculate(targetNode);\n+        return distances.get(targetNode);\n     }\n \n     @Override\n-    public List<List<Entity>> getPaths( Node targetNode )\n+    public List<List<Entity>> getPaths(Node targetNode)\n     {\n-        if ( targetNode == null )\n+        if (targetNode == null)\n         {\n-            throw new RuntimeException( \"No end node defined\" );\n+            throw new RuntimeException(\"No end node defined\");\n         }\n-        calculateMultiple( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n+        calculateMultiple(targetNode);\n+        if (!distances.containsKey(targetNode))\n         {\n             return null;\n         }\n-        return new LinkedList<>( Util.constructAllPathsToNode( targetNode, predecessors1, true, false ) );\n+        return new LinkedList<>(Util.constructAllPathsToNode(targetNode, predecessors1, true, false));\n     }\n \n     @Override\n-    public List<List<Node>> getPathsAsNodes( Node targetNode )\n+    public List<List<Node>> getPathsAsNodes(Node targetNode)\n     {\n-        if ( targetNode == null )\n+        if (targetNode == null)\n         {\n-            throw new RuntimeException( \"No end node defined\" );\n+            throw new RuntimeException(\"No end node defined\");\n         }\n-        calculateMultiple( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n+        calculateMultiple(targetNode);\n+        if (!distances.containsKey(targetNode))\n         {\n             return null;\n         }\n-        return new LinkedList<>( Util.constructAllPathsToNodeAsNodes( targetNode, predecessors1, true, false ) );\n+        return new LinkedList<>(Util.constructAllPathsToNodeAsNodes(targetNode, predecessors1, true, false));\n     }\n \n     @Override\n-    public List<List<Relationship>> getPathsAsRelationships( Node targetNode )\n+    public List<List<Relationship>> getPathsAsRelationships(Node targetNode)\n     {\n-        if ( targetNode == null )\n+        if (targetNode == null)\n         {\n-            throw new RuntimeException( \"No end node defined\" );\n+            throw new RuntimeException(\"No end node defined\");\n         }\n-        calculateMultiple( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n+        calculateMultiple(targetNode);\n+        if (!distances.containsKey(targetNode))\n         {\n             return null;\n         }\n-        return new LinkedList<>( Util.constructAllPathsToNodeAsRelationships( targetNode, predecessors1, false ) );\n+        return new LinkedList<>(Util.constructAllPathsToNodeAsRelationships(targetNode, predecessors1, false));\n     }\n \n     @Override\n-    public List<Entity> getPath( Node targetNode )\n+    public List<Entity> getPath(Node targetNode)\n     {\n-        if ( targetNode == null )\n+        if (targetNode == null)\n         {\n-            throw new RuntimeException( \"No end node defined\" );\n+            throw new RuntimeException(\"No end node defined\");\n         }\n-        calculate( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n+        calculate(targetNode);\n+        if (!distances.containsKey(targetNode))\n         {\n             return null;\n         }\n-        return Util.constructSinglePathToNode( targetNode, predecessors1, true,\n-            false );\n+        return Util.constructSinglePathToNode(targetNode, predecessors1, true,\n+          false);\n     }\n \n     @Override\n-    public List<Node> getPathAsNodes( Node targetNode )\n+    public List<Node> getPathAsNodes(Node targetNode)\n     {\n-        if ( targetNode == null )\n+        if (targetNode == null)\n         {\n-            throw new RuntimeException( \"No end node defined\" );\n+            throw new RuntimeException(\"No end node defined\");\n         }\n-        calculate( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n+        calculate(targetNode);\n+        if (!distances.containsKey(targetNode))\n         {\n             return null;\n         }\n-        return Util.constructSinglePathToNodeAsNodes( targetNode,\n-            predecessors1, true, false );\n+        return Util.constructSinglePathToNodeAsNodes(targetNode,\n+          predecessors1, true, false);\n     }\n \n     @Override\n-    public List<Relationship> getPathAsRelationships( Node targetNode )\n+    public List<Relationship> getPathAsRelationships(Node targetNode)\n     {\n-        if ( targetNode == null )\n+        if (targetNode == null)\n         {\n-            throw new RuntimeException( \"No end node defined\" );\n+            throw new RuntimeException(\"No end node defined\");\n         }\n-        calculate( targetNode );\n-        if ( !distances.containsKey( targetNode ) )\n+        calculate(targetNode);\n+        if (!distances.containsKey(targetNode))\n         {\n             return null;\n         }\n-        return Util.constructSinglePathToNodeAsRelationships( targetNode,\n-            predecessors1, false );\n+        return Util.constructSinglePathToNodeAsRelationships(targetNode,\n+          predecessors1, false);\n     }\n \n     // Override all the result-getters\n     @Override\n     public CostType getCost()\n     {\n-        return getCost( endNode );\n+        return getCost(endNode);\n     }\n \n     @Override\n     public List<Entity> getPath()\n     {\n-        return getPath( endNode );\n+        return getPath(endNode);\n     }\n \n     @Override\n     public List<Node> getPathAsNodes()\n     {\n-        return getPathAsNodes( endNode );\n+        return getPathAsNodes(endNode);\n     }\n \n     @Override\n     public List<Relationship> getPathAsRelationships()\n     {\n-        return getPathAsRelationships( endNode );\n+        return getPathAsRelationships(endNode);\n     }\n \n     @Override\n     public List<List<Entity>> getPaths()\n     {\n-        return getPaths( endNode );\n+        return getPaths(endNode);\n     }\n \n     @Override\n     public List<List<Node>> getPathsAsNodes()\n     {\n-        return getPathsAsNodes( endNode );\n+        return getPathsAsNodes(endNode);\n     }\n \n     @Override\n     public List<List<Relationship>> getPathsAsRelationships()\n     {\n-        return getPathsAsRelationships( endNode );\n+        return getPathsAsRelationships(endNode);\n     }\n \n     /**\n      * @see SingleSourceShortestPath\n      */\n     @Override\n-    public List<Node> getPredecessorNodes( Node node )\n+    public List<Node> getPredecessorNodes(Node node)\n     {\n         List<Node> result = new LinkedList<>();\n-        List<Relationship> predecessorRelationShips = predecessors1.get( node );\n-        if ( predecessorRelationShips == null\n-            || predecessorRelationShips.isEmpty() )\n+        List<Relationship> predecessorRelationShips = predecessors1.get(node);\n+        if (predecessorRelationShips == null\n+          || predecessorRelationShips.isEmpty())\n         {\n             return null;\n         }\n-        for ( Relationship relationship : predecessorRelationShips )\n+        for (Relationship relationship : predecessorRelationShips)\n         {\n-            result.add( relationship.getOtherNode( node ) );\n+            result.add(relationship.getOtherNode(node));\n         }\n         return result;\n     }\n@@ -292,7 +294,7 @@ public class SingleSourceShortestPathDijkstra<CostType> extends\n      * @see SingleSourceShortestPath\n      */\n     @Override\n-    public Map<Node,List<Relationship>> getPredecessors()\n+    public Map<Node, List<Relationship>> getPredecessors()\n     {\n         calculateMultiple();\n         return predecessors1;\n",
            "diff_size": 89
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
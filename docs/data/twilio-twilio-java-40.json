{
    "project_name": "twilio-twilio-java",
    "error_id": "40",
    "information": {
        "errors": [
            {
                "line": "170",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/40/SmsCommandReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/40/SmsCommandReader.java\nindex 24f8c53d34e..f69527489de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/40/SmsCommandReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/40/SmsCommandReader.java\n@@ -167,7 +167,7 @@ public class SmsCommandReader extends Reader<SmsCommand> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/40/SmsCommandReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/40/SmsCommandReader.java\nindex 24f8c53d34e..2811f623579 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/40/SmsCommandReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/40/SmsCommandReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.supersim.v1;\n@@ -167,7 +167,7 @@ public class SmsCommandReader extends Reader<SmsCommand> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/40/SmsCommandReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/40/SmsCommandReader.java\nindex 24f8c53d34e..a6531e0e0c6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/40/SmsCommandReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/40/SmsCommandReader.java\n@@ -23,6 +23,7 @@ import com.twilio.rest.Domains;\n  * PLEASE NOTE that this class contains beta products that are subject to\n  * change. Use them with caution.\n  */\n+\n public class SmsCommandReader extends Reader<SmsCommand> {\n     private String sim;\n     private SmsCommand.Status status;\n@@ -36,6 +37,7 @@ public class SmsCommandReader extends Reader<SmsCommand> {\n      *            sent to or from.\n      * @return this\n      */\n+\n     public SmsCommandReader setSim(final String sim) {\n         this.sim = sim;\n         return this;\n@@ -50,6 +52,8 @@ public class SmsCommandReader extends Reader<SmsCommand> {\n      * @param status The status of the SMS Command\n      * @return this\n      */\n+\n+\n     public SmsCommandReader setStatus(final SmsCommand.Status status) {\n         this.status = status;\n         return this;\n@@ -63,6 +67,8 @@ public class SmsCommandReader extends Reader<SmsCommand> {\n      * @param direction The direction of the SMS Command\n      * @return this\n      */\n+\n+\n     public SmsCommandReader setDirection(final SmsCommand.Direction direction) {\n         this.direction = direction;\n         return this;\n@@ -74,6 +80,7 @@ public class SmsCommandReader extends Reader<SmsCommand> {\n      * @param client TwilioRestClient with which to make the request\n      * @return SmsCommand ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<SmsCommand> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -85,14 +92,11 @@ public class SmsCommandReader extends Reader<SmsCommand> {\n      * @param client TwilioRestClient with which to make the request\n      * @return SmsCommand ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<SmsCommand> firstPage(final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.SUPERSIM.toString(),\n-            \"/v1/SmsCommands\"\n-        );\n+        Request request = new Request(HttpMethod.GET, Domains.SUPERSIM.toString(), \"/v1/SmsCommands\");\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -105,14 +109,12 @@ public class SmsCommandReader extends Reader<SmsCommand> {\n      * @param client TwilioRestClient with which to make the request\n      * @return SmsCommand ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<SmsCommand> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<SmsCommand> getPage(final String targetUrl,\n+                                    final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -123,13 +125,11 @@ public class SmsCommandReader extends Reader<SmsCommand> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<SmsCommand> nextPage(final Page<SmsCommand> page,\n                                      final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.SUPERSIM.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.SUPERSIM.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -140,13 +140,11 @@ public class SmsCommandReader extends Reader<SmsCommand> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<SmsCommand> previousPage(final Page<SmsCommand> page,\n                                          final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.SUPERSIM.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.SUPERSIM.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -157,9 +155,11 @@ public class SmsCommandReader extends Reader<SmsCommand> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<SmsCommand> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<SmsCommand> pageForRequest(final TwilioRestClient client,\n+                                            final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"SmsCommand read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.test(response.getStatusCode())) {\n@@ -167,7 +167,8 @@ public class SmsCommandReader extends Reader<SmsCommand> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n@@ -175,7 +176,7 @@ public class SmsCommandReader extends Reader<SmsCommand> {\n             response.getContent(),\n             SmsCommand.class,\n             client.getObjectMapper()\n-        );\n+               );\n     }\n \n     /**\n@@ -183,6 +184,8 @@ public class SmsCommandReader extends Reader<SmsCommand> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (sim != null) {\n             request.addQueryParam(\"Sim\", sim.toString());\n",
            "diff_size": 41
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/40/SmsCommandReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/40/SmsCommandReader.java\nindex 24f8c53d34e..f69527489de 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/40/SmsCommandReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/40/SmsCommandReader.java\n@@ -167,7 +167,7 @@ public class SmsCommandReader extends Reader<SmsCommand> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/40/SmsCommandReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/40/SmsCommandReader.java\nindex 24f8c53d34e..ab807ff907e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/40/SmsCommandReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/40/SmsCommandReader.java\n@@ -167,7 +167,8 @@ public class SmsCommandReader extends Reader<SmsCommand> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
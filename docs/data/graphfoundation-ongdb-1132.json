{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1132",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "106",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "126",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "150",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "173",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "225",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1132/GraphDatabaseBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1132/GraphDatabaseBuilder.java\nindex cc8feb808a6..f238b3b849e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1132/GraphDatabaseBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1132/GraphDatabaseBuilder.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.factory;\n \n import java.io.File;\n@@ -41,222 +42,218 @@ import static org.neo4j.helpers.collection.MapUtil.stringMap;\n  */\n public class GraphDatabaseBuilder\n {\n-    public interface DatabaseCreator\n-    {\n-        /**\n-         * @param config initial configuration for the database.\n-         * @return an instance of {@link GraphDatabaseService}.\n-         * @deprecated this method will go away in 4.0. See {@link #newDatabase(Config)} instead.\n-         */\n-        @Deprecated\n-        GraphDatabaseService newDatabase( Map<String,String> config );\n+  public interface DatabaseCreator\n+  {\n+    /**\n+     * @param config initial configuration for the database.\n+     * @return an instance of {@link GraphDatabaseService}.\n+     * @deprecated this method will go away in 4.0. See {@link #newDatabase(Config)} instead.\n+     */\n+    @Deprecated\n+    GraphDatabaseService newDatabase(Map<String, String> config);\n \n-        /**\n-         * @param config initial configuration for the database.\n-         * @return an instance of {@link GraphDatabaseService}.\n-         */\n-        default GraphDatabaseService newDatabase( @Nonnull Config config )\n-        {\n-            return newDatabase( config.getRaw() );\n-        }\n+    /**\n+     * @param config initial configuration for the database.\n+     * @return an instance of {@link GraphDatabaseService}.\n+     */\n+    default GraphDatabaseService newDatabase(@Nonnull Config config)\n+    {\n+      return newDatabase(config.getRaw());\n     }\n+  }\n \n-    protected DatabaseCreator creator;\n-    protected Map<String,String> config = new HashMap<>();\n+  protected DatabaseCreator creator;\n+  protected Map<String, String> config = new HashMap<>();\n \n-    public GraphDatabaseBuilder( DatabaseCreator creator )\n-    {\n-        this.creator = creator;\n-    }\n+  public GraphDatabaseBuilder(DatabaseCreator creator)\n+  {\n+    this.creator = creator;\n+  }\n \n-    /**\n-     * Set a database setting to a particular value.\n-     *\n-     * @param setting Database setting to set\n-     * @param value New value of the setting\n-     * @return the builder\n-     */\n-    public GraphDatabaseBuilder setConfig( Setting<?> setting, String value )\n+  /**\n+   * Set a database setting to a particular value.\n+   *\n+   * @param setting Database setting to set\n+   * @param value   New value of the setting\n+   * @return the builder\n+   */\n+  public GraphDatabaseBuilder setConfig(Setting<?> setting, String value)\n+  {\n+    if (value == null)\n+    {\n+      config.remove(setting.name());\n+    } else\n     {\n-        if ( value == null )\n-        {\n-            config.remove( setting.name() );\n-        }\n-        else\n-        {\n-            // Test if we can get this setting with an updated config\n-            Map<String,String> testValue = stringMap( setting.name(), value );\n-            setting.apply( key -> testValue.containsKey( key ) ? testValue.get( key ) : config.get( key ) );\n+      // Test if we can get this setting with an updated config\n+      Map<String, String> testValue = stringMap(setting.name(), value);\n+      setting.apply(key -> testValue.containsKey(key) ? testValue.get(key) : config.get(key));\n \n-            // No exception thrown, add it to existing config\n-            config.put( setting.name(), value );\n-        }\n-        return this;\n+      // No exception thrown, add it to existing config\n+      config.put(setting.name(), value);\n     }\n+    return this;\n+  }\n \n-    /**\n-     * Set an unvalidated configuration option.\n-     *\n-     * @param name Name of the setting\n-     * @param value New value of the setting\n-     * @return the builder\n-     * @deprecated Use setConfig with explicit {@link Setting} instead.\n-     */\n-    @Deprecated\n-    public GraphDatabaseBuilder setConfig( String name, String value )\n+  /**\n+   * Set an unvalidated configuration option.\n+   *\n+   * @param name  Name of the setting\n+   * @param value New value of the setting\n+   * @return the builder\n+   * @deprecated Use setConfig with explicit {@link Setting} instead.\n+   */\n+  @Deprecated\n+  public GraphDatabaseBuilder setConfig(String name, String value)\n+  {\n+    if (value == null)\n     {\n-        if ( value == null )\n-        {\n-            config.remove( name );\n-        }\n-        else\n-        {\n-            config.put( name, value );\n-        }\n-        return this;\n+      config.remove(name);\n+    } else\n+    {\n+      config.put(name, value);\n     }\n+    return this;\n+  }\n \n-    /**\n-     * Set a map of configuration settings into the builder. Overwrites any existing values.\n-     *\n-     * @param config Map of configuration settings\n-     * @return the builder\n-     * @deprecated Use setConfig with explicit {@link Setting} instead\n-     */\n-    @Deprecated\n-    @SuppressWarnings( \"deprecation\" )\n-    public GraphDatabaseBuilder setConfig( Map<String,String> config )\n+  /**\n+   * Set a map of configuration settings into the builder. Overwrites any existing values.\n+   *\n+   * @param config Map of configuration settings\n+   * @return the builder\n+   * @deprecated Use setConfig with explicit {@link Setting} instead\n+   */\n+  @Deprecated\n+  @SuppressWarnings(\"deprecation\")\n+  public GraphDatabaseBuilder setConfig(Map<String, String> config)\n+  {\n+    for (Map.Entry<String, String> stringStringEntry : config.entrySet())\n     {\n-        for ( Map.Entry<String,String> stringStringEntry : config.entrySet() )\n-        {\n-            setConfig( stringStringEntry.getKey(), stringStringEntry.getValue() );\n-        }\n-        return this;\n+      setConfig(stringStringEntry.getKey(), stringStringEntry.getValue());\n     }\n+    return this;\n+  }\n \n-    /**\n-     * Load a Properties file from a given file, and add the settings to\n-     * the builder.\n-     *\n-     * @param fileName Filename of properties file to use\n-     * @return the builder\n-     * @throws IllegalArgumentException if the builder was unable to load from the given filename\n-     */\n-    public GraphDatabaseBuilder loadPropertiesFromFile( String fileName )\n-            throws IllegalArgumentException\n+  /**\n+   * Load a Properties file from a given file, and add the settings to\n+   * the builder.\n+   *\n+   * @param fileName Filename of properties file to use\n+   * @return the builder\n+   * @throws IllegalArgumentException if the builder was unable to load from the given filename\n+   */\n+  public GraphDatabaseBuilder loadPropertiesFromFile(String fileName)\n+      throws IllegalArgumentException\n+  {\n+    try\n     {\n-        try\n-        {\n-            return loadPropertiesFromURL( new File( fileName ).toURI().toURL() );\n-        }\n-        catch ( MalformedURLException e )\n-        {\n-            throw new IllegalArgumentException( \"Illegal filename:\" + fileName, e );\n-        }\n+      return loadPropertiesFromURL(new File(fileName).toURI().toURL());\n+    } catch (MalformedURLException e)\n+    {\n+      throw new IllegalArgumentException(\"Illegal filename:\" + fileName, e);\n     }\n+  }\n \n-    /**\n-     * Load Properties file from a given URL, and add the settings to\n-     * the builder.\n-     *\n-     * @param url URL of properties file to use\n-     * @return the builder\n-     */\n-    public GraphDatabaseBuilder loadPropertiesFromURL( URL url )\n-            throws IllegalArgumentException\n+  /**\n+   * Load Properties file from a given URL, and add the settings to\n+   * the builder.\n+   *\n+   * @param url URL of properties file to use\n+   * @return the builder\n+   */\n+  public GraphDatabaseBuilder loadPropertiesFromURL(URL url)\n+      throws IllegalArgumentException\n+  {\n+    Properties props = new Properties();\n+    try\n     {\n-        Properties props = new Properties();\n-        try\n-        {\n-            try ( InputStream stream = url.openStream() )\n-            {\n-                props.load( stream );\n-            }\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new IllegalArgumentException( \"Unable to load \" + url, e );\n-        }\n-        Set<Map.Entry<Object,Object>> entries = props.entrySet();\n-        for ( Map.Entry<Object,Object> entry : entries )\n-        {\n-            String key = (String) entry.getKey();\n-            String value = (String) entry.getValue();\n-            setConfig( key, value );\n-        }\n-\n-        return this;\n+      try (InputStream stream = url.openStream())\n+      {\n+        props.load(stream);\n+      }\n+    } catch (Exception e)\n+    {\n+      throw new IllegalArgumentException(\"Unable to load \" + url, e);\n     }\n-\n-    /**\n-     * Create a new database with the configuration registered\n-     * through the builder.\n-     *\n-     * @return an instance of GraphDatabaseService\n-     */\n-    public GraphDatabaseService newGraphDatabase()\n+    Set<Map.Entry<Object, Object>> entries = props.entrySet();\n+    for (Map.Entry<Object, Object> entry : entries)\n     {\n-        return creator.newDatabase( Config.defaults( config ) );\n+      String key = (String) entry.getKey();\n+      String value = (String) entry.getValue();\n+      setConfig(key, value);\n     }\n \n-    /**\n-     * Used by tests via GraphDatabaseBuilderTestTools.\n-     */\n-    Map<String,String> getRawConfig()\n+    return this;\n+  }\n+\n+  /**\n+   * Create a new database with the configuration registered\n+   * through the builder.\n+   *\n+   * @return an instance of GraphDatabaseService\n+   */\n+  public GraphDatabaseService newGraphDatabase()\n+  {\n+    return creator.newDatabase(Config.defaults(config));\n+  }\n+\n+  /**\n+   * Used by tests via GraphDatabaseBuilderTestTools.\n+   */\n+  Map<String, String> getRawConfig()\n+  {\n+    return config;\n+  }\n+\n+  public static class Delegator extends GraphDatabaseBuilder\n+  {\n+    private final GraphDatabaseBuilder actual;\n+\n+    public Delegator(GraphDatabaseBuilder actual)\n     {\n-        return config;\n+      super(null);\n+      this.actual = actual;\n     }\n \n-    public static class Delegator extends GraphDatabaseBuilder\n+    @Override\n+    public GraphDatabaseBuilder setConfig(Setting<?> setting, String value)\n     {\n-        private final GraphDatabaseBuilder actual;\n-\n-        public Delegator( GraphDatabaseBuilder actual )\n-        {\n-            super( null );\n-            this.actual = actual;\n-        }\n-\n-        @Override\n-        public GraphDatabaseBuilder setConfig( Setting<?> setting, String value )\n-        {\n-            actual.setConfig( setting, value );\n-            return this;\n-        }\n+      actual.setConfig(setting, value);\n+      return this;\n+    }\n \n-        @Override\n-        @SuppressWarnings( \"deprecation\" )\n-        public GraphDatabaseBuilder setConfig( String name, String value )\n-        {\n-            actual.setConfig( name, value );\n-            return this;\n-        }\n+    @Override\n+    @SuppressWarnings(\"deprecation\")\n+    public GraphDatabaseBuilder setConfig(String name, String value)\n+    {\n+      actual.setConfig(name, value);\n+      return this;\n+    }\n \n-        @Override\n-        public GraphDatabaseBuilder setConfig( Map<String,String> config )\n-        {\n-            actual.setConfig( config );\n-            return this;\n-        }\n+    @Override\n+    public GraphDatabaseBuilder setConfig(Map<String, String> config)\n+    {\n+      actual.setConfig(config);\n+      return this;\n+    }\n \n-        @Override\n-        public GraphDatabaseBuilder loadPropertiesFromFile( String fileName ) throws IllegalArgumentException\n-        {\n-            actual.loadPropertiesFromFile( fileName );\n-            return this;\n-        }\n+    @Override\n+    public GraphDatabaseBuilder loadPropertiesFromFile(String fileName) throws IllegalArgumentException\n+    {\n+      actual.loadPropertiesFromFile(fileName);\n+      return this;\n+    }\n \n-        @Override\n-        public GraphDatabaseBuilder loadPropertiesFromURL( URL url ) throws IllegalArgumentException\n-        {\n-            actual.loadPropertiesFromURL( url );\n-            return this;\n-        }\n+    @Override\n+    public GraphDatabaseBuilder loadPropertiesFromURL(URL url) throws IllegalArgumentException\n+    {\n+      actual.loadPropertiesFromURL(url);\n+      return this;\n+    }\n \n-        @Override\n-        public GraphDatabaseService newGraphDatabase()\n-        {\n-            return actual.newGraphDatabase();\n-        }\n+    @Override\n+    public GraphDatabaseService newGraphDatabase()\n+    {\n+      return actual.newGraphDatabase();\n     }\n+  }\n }\n",
            "diff_size": 236
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1132/GraphDatabaseBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1132/GraphDatabaseBuilder.java\nindex cc8feb808a6..b4bfd55077b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1132/GraphDatabaseBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1132/GraphDatabaseBuilder.java\n@@ -142,9 +142,8 @@ public class GraphDatabaseBuilder\n      * @return the builder\n      * @throws IllegalArgumentException if the builder was unable to load from the given filename\n      */\n-    public GraphDatabaseBuilder loadPropertiesFromFile( String fileName )\n-            throws IllegalArgumentException\n-    {\n+    public GraphDatabaseBuilder loadPropertiesFromFile( String fileName ) throws IllegalArgumentException\n+{\n         try\n         {\n             return loadPropertiesFromURL( new File( fileName ).toURI().toURL() );\n@@ -162,9 +161,8 @@ public class GraphDatabaseBuilder\n      * @param url URL of properties file to use\n      * @return the builder\n      */\n-    public GraphDatabaseBuilder loadPropertiesFromURL( URL url )\n-            throws IllegalArgumentException\n-    {\n+    public GraphDatabaseBuilder loadPropertiesFromURL( URL url ) throws IllegalArgumentException\n+{\n         Properties props = new Properties();\n         try\n         {\n@@ -259,4 +257,4 @@ public class GraphDatabaseBuilder\n             return actual.newGraphDatabase();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
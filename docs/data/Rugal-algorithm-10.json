{
    "project_name": "Rugal-algorithm",
    "error_id": "10",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage ga.rugal.leetcode.clonegraph;\n\nimport java.util.ArrayList;\nimport java.util.HashMap;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/10/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler/10/Solution.java\nindex 80e29af577d..d7bb84b66a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/10/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler/10/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.leetcode.clonegraph;\r\n \r\n import java.util.ArrayList;\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/10/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/intellij/10/Solution.java\nindex 80e29af577d..d7bb84b66a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/10/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/intellij/10/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.leetcode.clonegraph;\r\n \r\n import java.util.ArrayList;\r\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 0, expected is 3, indentation should be the same level as line 15.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "15",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'while' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/10/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/naturalize/10/Solution.java\nindex 80e29af577d..94d679b6a9e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/10/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/naturalize/10/Solution.java\n@@ -12,8 +12,7 @@\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n- */\r\n-package ga.rugal.leetcode.clonegraph;\r\n+ */package ga.rugal.leetcode.clonegraph;\r\n \r\n import java.util.ArrayList;\r\n import java.util.HashMap;\r\n@@ -39,9 +38,8 @@ public class Solution {\n     final Queue<Node> queue = new LinkedList<>();\r\n \r\n     relationship.put(node, new Node(node.val, new ArrayList<>()));\r\n-    queue.add(node);\r\n-\r\n-    while (!queue.isEmpty()) {\r\n+    queue.add(node);\n+while (!queue.isEmpty()) {\r\n       final Node current = queue.remove();\r\n       for (final Node neighbor : current.neighbors) {\r\n         //if not created yet\r\n@@ -57,4 +55,4 @@ public class Solution {\n     }\r\n     return relationship.get(node);\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/10/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/codebuff/10/Solution.java\nindex 80e29af577d..584eeefd683 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/10/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/codebuff/10/Solution.java\n@@ -13,48 +13,46 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n-package ga.rugal.leetcode.clonegraph;\r\n-\r\n-import java.util.ArrayList;\r\n-import java.util.HashMap;\r\n-import java.util.LinkedList;\r\n-import java.util.Map;\r\n-import java.util.Queue;\r\n-\r\n+package ga.rugal.leetcode.clonegraph;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.LinkedList;\n+import java.util.Map;\n+import java.util.Queue;\n import ga.rugal.leetcode.Node;\r\n \r\n /**\r\n  * https://leetcode.com/problems/clone-graph\r\n  *\r\n  * @author rugal\r\n- */\r\n-public class Solution {\r\n-\r\n-  public Node cloneGraph(final Node node) {\r\n-\r\n-    if (node == null) {\r\n-      return null;\r\n-    }\r\n-    final Map<Node, Node> relationship = new HashMap<>();\r\n-    final Queue<Node> queue = new LinkedList<>();\r\n-\r\n-    relationship.put(node, new Node(node.val, new ArrayList<>()));\r\n-    queue.add(node);\r\n-\r\n-    while (!queue.isEmpty()) {\r\n-      final Node current = queue.remove();\r\n+ */\n+\n+\n+public class Solution {\n+\n+  public Node cloneGraph(final Node node) {\n+    if (node == null) {\n+      return null;\n+    }\n+    final Map<Node, Node> relationship = new HashMap<>();\n+    final Queue<Node> queue = new LinkedList<>();\n+    relationship.put(node, new Node(node.val, new ArrayList<>()));\n+    queue.add(node);\n+    while (!queue.isEmpty()) {\n+      final Node current = queue.remove();\n       for (final Node neighbor : current.neighbors) {\r\n-        //if not created yet\r\n+        //if not created yet\n         if (!relationship.containsKey(neighbor)) {\r\n-          //then first add to relationship cache\r\n+          //then first add to relationship cache\n           relationship.put(neighbor, new Node(neighbor.val, new ArrayList<>()));\r\n-          //then need to queue the newly created node\r\n-          queue.add(neighbor);\r\n+          //then need to queue the newly created node\n+          queue.add(neighbor);\n         }\r\n-        //add newly created to neighbour of current node\r\n-        relationship.get(current).neighbors.add(relationship.get(neighbor));\r\n-      }\r\n-    }\r\n-    return relationship.get(node);\r\n-  }\r\n-}\r\n+        //add newly created to neighbour of current node\n+        relationship.get(current).neighbors.add(relationship.get(neighbor));\n+      }\n+    }\n+    return relationship.get(node);\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/10/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_random/10/Solution.java\nindex 80e29af577d..d7bb84b66a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/10/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_random/10/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.leetcode.clonegraph;\r\n \r\n import java.util.ArrayList;\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/10/Solution.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_three_grams/10/Solution.java\nindex 80e29af577d..d7bb84b66a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/errored/1/10/Solution.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Rugal-algorithm/styler_three_grams/10/Solution.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package ga.rugal.leetcode.clonegraph;\r\n \r\n import java.util.ArrayList;\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
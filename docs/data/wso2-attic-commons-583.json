{
    "project_name": "wso2-attic-commons",
    "error_id": "583",
    "information": {
        "errors": [
            {
                "line": "47",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 134).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    public String persist() {\n        PersistenceManagementEvent persistEvent = new PersistenceManagementEvent(System.currentTimeMillis(), executionPlanIdentifier);\n\n        for (Persister persister : persisterList) {\n            persister.save(persistEvent);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/583/PersistenceService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/583/PersistenceService.java\nindex 979df98b1e9..c4684ad30d0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/583/PersistenceService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/583/PersistenceService.java\n@@ -44,7 +44,8 @@ public class PersistenceService {\n     }\n \n     public String persist() {\n-        PersistenceManagementEvent persistEvent = new PersistenceManagementEvent(System.currentTimeMillis(), executionPlanIdentifier);\n+        PersistenceManagementEvent persistEvent = new PersistenceManagementEvent(\n+                System.currentTimeMillis(), executionPlanIdentifier);\n \n         for (Persister persister : persisterList) {\n             persister.save(persistEvent);\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/583/PersistenceService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/583/PersistenceService.java\nindex 979df98b1e9..d2b7dfa1e76 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/583/PersistenceService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/583/PersistenceService.java\n@@ -1,20 +1,21 @@\n /*\n-*  Copyright (c) 2005-2012, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n-*\n-*  WSO2 Inc. licenses this file to you under the Apache License,\n-*  Version 2.0 (the \"License\"); you may not use this file except\n-*  in compliance with the License.\n-*  You may obtain a copy of the License at\n-*\n-*    http://www.apache.org/licenses/LICENSE-2.0\n-*\n-* Unless required by applicable law or agreed to in writing,\n-* software distributed under the License is distributed on an\n-* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n-* KIND, either express or implied.  See the License for the\n-* specific language governing permissions and limitations\n-* under the License.\n-*/\n+ *  Copyright (c) 2005-2012, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n+ *\n+ *  WSO2 Inc. licenses this file to you under the Apache License,\n+ *  Version 2.0 (the \"License\"); you may not use this file except\n+ *  in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n package org.wso2.siddhi.core.persistence;\n \n import org.wso2.siddhi.core.config.SiddhiContext;\n@@ -25,54 +26,55 @@ import java.util.List;\n \n public class PersistenceService {\n \n-    long nodeCounter = 0;\n-    String executionPlanIdentifier;\n-    List<Persister> persisterList = new ArrayList<Persister>();\n-    PersistenceStore persistenceStore;\n-    PersistenceManagementEvent lastPersistEvent;\n+  long nodeCounter = 0;\n+  String executionPlanIdentifier;\n+  List<Persister> persisterList = new ArrayList<Persister>();\n+  PersistenceStore persistenceStore;\n+  PersistenceManagementEvent lastPersistEvent;\n \n-    public PersistenceService(\n-            SiddhiContext siddhiContext) {\n-        executionPlanIdentifier = siddhiContext.getExecutionPlanIdentifier();\n-    }\n+  public PersistenceService(\n+    SiddhiContext siddhiContext) {\n+    executionPlanIdentifier = siddhiContext.getExecutionPlanIdentifier();\n+  }\n \n-    public void addPersister(Persister persister) {\n-        persister.setNodeId(nodeCounter + \"\");\n-        nodeCounter++;\n-        persister.setPersistenceStore(persistenceStore);\n-        persisterList.add(persister);\n-    }\n+  public void addPersister(Persister persister) {\n+    persister.setNodeId(nodeCounter + \"\");\n+    nodeCounter++;\n+    persister.setPersistenceStore(persistenceStore);\n+    persisterList.add(persister);\n+  }\n \n-    public String persist() {\n-        PersistenceManagementEvent persistEvent = new PersistenceManagementEvent(System.currentTimeMillis(), executionPlanIdentifier);\n+  public String persist() {\n+    PersistenceManagementEvent persistEvent =\n+      new PersistenceManagementEvent(System.currentTimeMillis(), executionPlanIdentifier);\n \n-        for (Persister persister : persisterList) {\n-            persister.save(persistEvent);\n-        }\n-        lastPersistEvent = persistEvent;\n-        return persistEvent.getRevision();\n+    for (Persister persister : persisterList) {\n+      persister.save(persistEvent);\n     }\n+    lastPersistEvent = persistEvent;\n+    return persistEvent.getRevision();\n+  }\n \n-    public void restoreRevision(String revision) {\n-        PersistenceManagementEvent persistEvent = new PersistenceManagementEvent(revision);\n-        for (Persister persister : persisterList) {\n-            persister.load(persistEvent);\n-        }\n+  public void restoreRevision(String revision) {\n+    PersistenceManagementEvent persistEvent = new PersistenceManagementEvent(revision);\n+    for (Persister persister : persisterList) {\n+      persister.load(persistEvent);\n     }\n+  }\n \n-    public PersistenceStore getPersistenceStore() {\n-        return persistenceStore;\n-    }\n+  public PersistenceStore getPersistenceStore() {\n+    return persistenceStore;\n+  }\n \n-    public void setPersistenceStore(PersistenceStore persistenceStore) {\n-        this.persistenceStore = persistenceStore;\n-    }\n+  public void setPersistenceStore(PersistenceStore persistenceStore) {\n+    this.persistenceStore = persistenceStore;\n+  }\n \n \n-    public void restoreLastRevision() {\n-        String revision = persistenceStore.getLastRevision();\n-        if (revision != null) {\n-            restoreRevision(revision);\n-        }\n+  public void restoreLastRevision() {\n+    String revision = persistenceStore.getLastRevision();\n+    if (revision != null) {\n+      restoreRevision(revision);\n     }\n+  }\n }\n",
            "diff_size": 61
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/583/PersistenceService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/583/PersistenceService.java\nindex 979df98b1e9..8d724df0b92 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/583/PersistenceService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/naturalize/583/PersistenceService.java\n@@ -31,8 +31,7 @@ public class PersistenceService {\n     PersistenceStore persistenceStore;\n     PersistenceManagementEvent lastPersistEvent;\n \n-    public PersistenceService(\n-            SiddhiContext siddhiContext) {\n+    public PersistenceService(SiddhiContext siddhiContext) {\n         executionPlanIdentifier = siddhiContext.getExecutionPlanIdentifier();\n     }\n \n@@ -75,4 +74,4 @@ public class PersistenceService {\n             restoreRevision(revision);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/583/PersistenceService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/583/PersistenceService.java\nindex 979df98b1e9..c4684ad30d0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/583/PersistenceService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/583/PersistenceService.java\n@@ -44,7 +44,8 @@ public class PersistenceService {\n     }\n \n     public String persist() {\n-        PersistenceManagementEvent persistEvent = new PersistenceManagementEvent(System.currentTimeMillis(), executionPlanIdentifier);\n+        PersistenceManagementEvent persistEvent = new PersistenceManagementEvent(\n+                System.currentTimeMillis(), executionPlanIdentifier);\n \n         for (Persister persister : persisterList) {\n             persister.save(persistEvent);\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "couchbase-couchbase-jvm-core",
    "error_id": "96",
    "information": {
        "errors": [
            {
                "line": "41",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 123).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    protected AbstractPoolingService(String hostname, String bucket, String username, String password, int port,\n        CoreContext ctx, int minEndpoints, int maxEndpoints, SelectionStrategy strategy, EndpointFactory endpointFactory) {\n        super(hostname, bucket, username, password, port, ctx, minEndpoints, endpointFactory);\n        this.maxEndpoints = maxEndpoints;\n        this.responseBuffer = ctx.responseRingBuffer();",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/96/AbstractPoolingService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/96/AbstractPoolingService.java\nindex 2bb1c177af6..2e0567dd8ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/96/AbstractPoolingService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/96/AbstractPoolingService.java\n@@ -38,8 +38,9 @@ public abstract class AbstractPoolingService extends AbstractDynamicService {\n     private final CoreEnvironment env;\n \n     protected AbstractPoolingService(String hostname, String bucket, String username, String password, int port,\n-        CoreContext ctx, int minEndpoints, int maxEndpoints, SelectionStrategy strategy, EndpointFactory endpointFactory) {\n-        super(hostname, bucket, username, password, port, ctx, minEndpoints, endpointFactory);\n+        CoreContext ctx, int\n+            minEndpoints, int maxEndpoints, SelectionStrategy strategy, EndpointFactory endpointFactory) {\n+         super(hostname, bucket, username, password, port, ctx, minEndpoints, endpointFactory);\n         this.maxEndpoints = maxEndpoints;\n         this.responseBuffer = ctx.responseRingBuffer();\n         this.strategy = strategy;\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/96/AbstractPoolingService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/96/AbstractPoolingService.java\nindex 2bb1c177af6..c23dab6df07 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/96/AbstractPoolingService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/96/AbstractPoolingService.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.couchbase.client.core.service;\n \n import com.couchbase.client.core.CoreContext;\n@@ -38,7 +39,8 @@ public abstract class AbstractPoolingService extends AbstractDynamicService {\n     private final CoreEnvironment env;\n \n     protected AbstractPoolingService(String hostname, String bucket, String username, String password, int port,\n-        CoreContext ctx, int minEndpoints, int maxEndpoints, SelectionStrategy strategy, EndpointFactory endpointFactory) {\n+                                     CoreContext ctx, int minEndpoints, int maxEndpoints, SelectionStrategy strategy,\n+                                     EndpointFactory endpointFactory) {\n         super(hostname, bucket, username, password, port, ctx, minEndpoints, endpointFactory);\n         this.maxEndpoints = maxEndpoints;\n         this.responseBuffer = ctx.responseRingBuffer();\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/96/AbstractPoolingService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/96/AbstractPoolingService.java\nindex 2bb1c177af6..b2e03a8e384 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/96/AbstractPoolingService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/96/AbstractPoolingService.java\n@@ -52,8 +52,7 @@ public abstract class AbstractPoolingService extends AbstractDynamicService {\n             Endpoint endpoint = strategy.select(request, endpoints());\n             if (endpoint == null) {\n                 RetryHelper.retryOrCancel(env, request, responseBuffer);\n-\n-            } else {\n+    } else {\n                 endpoint.send(request);\n             }\n         } else {\n@@ -61,4 +60,4 @@ public abstract class AbstractPoolingService extends AbstractDynamicService {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 228).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/96/AbstractPoolingService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/96/AbstractPoolingService.java\nindex 2bb1c177af6..4ee8365f1dd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/96/AbstractPoolingService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/96/AbstractPoolingService.java\n@@ -30,6 +30,7 @@ import com.lmax.disruptor.RingBuffer;\n  * @author Michael Nitschinger\n  * @since 1.1.0\n  */\n+\n public abstract class AbstractPoolingService extends AbstractDynamicService {\n \n     private final int maxEndpoints;\n@@ -37,8 +38,8 @@ public abstract class AbstractPoolingService extends AbstractDynamicService {\n     private final SelectionStrategy strategy;\n     private final CoreEnvironment env;\n \n-    protected AbstractPoolingService(String hostname, String bucket, String username, String password, int port,\n-        CoreContext ctx, int minEndpoints, int maxEndpoints, SelectionStrategy strategy, EndpointFactory endpointFactory) {\n+\n+    protected AbstractPoolingService(String hostname, String bucket, String username, String password, int port, CoreContext ctx, int minEndpoints, int maxEndpoints, SelectionStrategy strategy, EndpointFactory endpointFactory) {\n         super(hostname, bucket, username, password, port, ctx, minEndpoints, endpointFactory);\n         this.maxEndpoints = maxEndpoints;\n         this.responseBuffer = ctx.responseRingBuffer();\n@@ -52,7 +53,6 @@ public abstract class AbstractPoolingService extends AbstractDynamicService {\n             Endpoint endpoint = strategy.select(request, endpoints());\n             if (endpoint == null) {\n                 RetryHelper.retryOrCancel(env, request, responseBuffer);\n-\n             } else {\n                 endpoint.send(request);\n             }\n@@ -60,5 +60,4 @@ public abstract class AbstractPoolingService extends AbstractDynamicService {\n             throw new UnsupportedOperationException(\"Dynamic endpoint scaling is currently not supported.\");\n         }\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/96/AbstractPoolingService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/96/AbstractPoolingService.java\nindex 2bb1c177af6..2e0567dd8ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/96/AbstractPoolingService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/96/AbstractPoolingService.java\n@@ -38,8 +38,9 @@ public abstract class AbstractPoolingService extends AbstractDynamicService {\n     private final CoreEnvironment env;\n \n     protected AbstractPoolingService(String hostname, String bucket, String username, String password, int port,\n-        CoreContext ctx, int minEndpoints, int maxEndpoints, SelectionStrategy strategy, EndpointFactory endpointFactory) {\n-        super(hostname, bucket, username, password, port, ctx, minEndpoints, endpointFactory);\n+        CoreContext ctx, int\n+            minEndpoints, int maxEndpoints, SelectionStrategy strategy, EndpointFactory endpointFactory) {\n+         super(hostname, bucket, username, password, port, ctx, minEndpoints, endpointFactory);\n         this.maxEndpoints = maxEndpoints;\n         this.responseBuffer = ctx.responseRingBuffer();\n         this.strategy = strategy;\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
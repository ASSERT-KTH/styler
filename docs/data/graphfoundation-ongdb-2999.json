{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2999",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2999/TaskExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2999/TaskExecutor.java\nindex af459749885..ea70ab0f5db 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2999/TaskExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2999/TaskExecutor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.executor;\n \n import java.util.concurrent.ExecutorService;\n@@ -29,35 +30,35 @@ import org.neo4j.unsafe.impl.batchimport.staging.Panicable;\n  * i.e. the number of threads executing the tasks in parallel.\n  *\n  * @param <LOCAL> object/state local to each thread, that submitted {@link Task tasks} can get access to\n- * when {@link Task#run(Object) running}.\n+ *                when {@link Task#run(Object) running}.\n  */\n public interface TaskExecutor<LOCAL> extends Parallelizable, AutoCloseable, Panicable\n {\n-    /**\n-     * Submits a task to be executed by one of the processors in this {@link TaskExecutor}. Tasks will be\n-     * executed in the order of which they arrive.\n-     *\n-     * @param task a {@link Runnable} defining the task to be executed.\n-     */\n-    void submit( Task<LOCAL> task );\n+  /**\n+   * Submits a task to be executed by one of the processors in this {@link TaskExecutor}. Tasks will be\n+   * executed in the order of which they arrive.\n+   *\n+   * @param task a {@link Runnable} defining the task to be executed.\n+   */\n+  void submit(Task<LOCAL> task);\n \n-    /**\n-     * Closes this {@link TaskExecutor}, disallowing new tasks to be {@link #submit(Task) submitted}.\n-     */\n-    @Override\n-    void close();\n+  /**\n+   * Closes this {@link TaskExecutor}, disallowing new tasks to be {@link #submit(Task) submitted}.\n+   */\n+  @Override\n+  void close();\n \n-    /**\n-     * @return {@code true} if {@link #close()} has been called, otherwise {@code false}.\n-     */\n-    boolean isClosed();\n+  /**\n+   * @return {@code true} if {@link #close()} has been called, otherwise {@code false}.\n+   */\n+  boolean isClosed();\n \n-    /**\n-     * Asserts that this {@link TaskExecutor} is healthy. Useful to call when deciding to wait on a condition\n-     * this executor is expected to fulfill.\n-     *\n-     * @throws RuntimeException of some sort if this executor is in a bad stage, the original error that\n-     * made this executor fail.\n-     */\n-    void assertHealthy();\n+  /**\n+   * Asserts that this {@link TaskExecutor} is healthy. Useful to call when deciding to wait on a condition\n+   * this executor is expected to fulfill.\n+   *\n+   * @throws RuntimeException of some sort if this executor is in a bad stage, the original error that\n+   *                          made this executor fail.\n+   */\n+  void assertHealthy();\n }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2999/TaskExecutor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2999/TaskExecutor.java\nindex af459749885..a7c289e3c10 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2999/TaskExecutor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2999/TaskExecutor.java\n@@ -60,4 +60,4 @@ public interface TaskExecutor<LOCAL> extends Parallelizable, AutoCloseable, Pani\n      * made this executor fail.\n      */\n     void assertHealthy();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
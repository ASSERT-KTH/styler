{
    "project_name": "Angel-ML-angel",
    "error_id": "1015",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1015/LabeledUpdateIndexBaseTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1015/LabeledUpdateIndexBaseTask.java\nindex c4cd417af48..66e92602985 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1015/LabeledUpdateIndexBaseTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1015/LabeledUpdateIndexBaseTask.java\n@@ -28,9 +28,9 @@ import java.io.IOException;\n \n /**\n  * The type Labeled update index base task.\n- *<p>\n- *   Support update index\n- *</p>\n+ * <p>\n+ * Support update index\n+ * </p>\n  */\n public abstract class LabeledUpdateIndexBaseTask<KEYIN, VALUEIN> extends\n     BaseTask<KEYIN, VALUEIN, LabeledData> {\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1015/LabeledUpdateIndexBaseTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1015/LabeledUpdateIndexBaseTask.java\nindex c4cd417af48..a5d304518bc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1015/LabeledUpdateIndexBaseTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1015/LabeledUpdateIndexBaseTask.java\n@@ -32,8 +32,7 @@ import java.io.IOException;\n  *   Support update index\n  *</p>\n  */\n-public abstract class LabeledUpdateIndexBaseTask<KEYIN, VALUEIN> extends\n-    BaseTask<KEYIN, VALUEIN, LabeledData> {\n+public abstract class LabeledUpdateIndexBaseTask<KEYIN, VALUEIN> extends BaseTask<KEYIN, VALUEIN, LabeledData> {\n   private final boolean updateIndexEnable;\n   private volatile IntOpenHashSet indexSet;\n   private final MatrixMeta matrixMeta;\n@@ -107,4 +106,4 @@ public abstract class LabeledUpdateIndexBaseTask<KEYIN, VALUEIN> extends\n   public MatrixMeta getMatrixMeta() {\n     return matrixMeta;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1015/LabeledUpdateIndexBaseTask.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1015/LabeledUpdateIndexBaseTask.java\nindex c4cd417af48..17033fa8891 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1015/LabeledUpdateIndexBaseTask.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1015/LabeledUpdateIndexBaseTask.java\n@@ -23,7 +23,6 @@ import com.tencent.angel.ml.math.vector.SparseDummyVector;\n import com.tencent.angel.ml.matrix.MatrixMeta;\n import com.tencent.angel.worker.storage.Reader;\n import it.unimi.dsi.fastutil.ints.IntOpenHashSet;\n-\n import java.io.IOException;\n \n /**\n@@ -32,14 +31,15 @@ import java.io.IOException;\n  *   Support update index\n  *</p>\n  */\n-public abstract class LabeledUpdateIndexBaseTask<KEYIN, VALUEIN> extends\n-    BaseTask<KEYIN, VALUEIN, LabeledData> {\n+\n+public abstract class LabeledUpdateIndexBaseTask<KEYIN, VALUEIN> extends BaseTask<KEYIN, VALUEIN, LabeledData> {\n+\n   private final boolean updateIndexEnable;\n   private volatile IntOpenHashSet indexSet;\n   private final MatrixMeta matrixMeta;\n \n   public LabeledUpdateIndexBaseTask(TaskContext taskContext, MatrixMeta matrixMeta)\n-      throws IOException {\n+  throws IOException {\n     super(taskContext);\n     this.matrixMeta = matrixMeta;\n     updateIndexEnable = true;\n@@ -65,7 +65,6 @@ public abstract class LabeledUpdateIndexBaseTask<KEYIN, VALUEIN> extends\n           }\n         }\n       }\n-\n       dataBlock.flush();\n     } catch (Exception e) {\n       throw new AngelException(\"Pre-Process Error.\", e);\n@@ -77,6 +76,7 @@ public abstract class LabeledUpdateIndexBaseTask<KEYIN, VALUEIN> extends\n    *\n    * @return true if supported else false\n    */\n+\n   public boolean isUpdateIndexEnable() {\n     return updateIndexEnable;\n   }\n@@ -86,6 +86,7 @@ public abstract class LabeledUpdateIndexBaseTask<KEYIN, VALUEIN> extends\n    *\n    * @return the index set\n    */\n+\n   public IntOpenHashSet getIndexSet() {\n     return indexSet;\n   }\n@@ -95,6 +96,7 @@ public abstract class LabeledUpdateIndexBaseTask<KEYIN, VALUEIN> extends\n    *\n    * @param indexSet the index set\n    */\n+\n   public void setIndexSet(IntOpenHashSet indexSet) {\n     this.indexSet = indexSet;\n   }\n@@ -104,7 +106,8 @@ public abstract class LabeledUpdateIndexBaseTask<KEYIN, VALUEIN> extends\n    *\n    * @return the matrix meta\n    */\n+\n   public MatrixMeta getMatrixMeta() {\n     return matrixMeta;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
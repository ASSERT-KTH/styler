{
    "project_name": "Angel-ML-angel",
    "error_id": "1104",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1104/PartitionGetRowParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1104/PartitionGetRowParam.java\nindex c9ba200f523..706c9ab6344 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1104/PartitionGetRowParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1104/PartitionGetRowParam.java\n@@ -40,7 +40,7 @@ public class PartitionGetRowParam implements Serialize {\n    * @param bypassMode the bypass mode\n    */\n   public PartitionGetRowParam(int matrixId, PartitionKey partKey, int rowIndex, int clock,\n-      boolean bypassMode) {\n+                              boolean bypassMode) {\n     this.matrixId = matrixId;\n     this.partKey = partKey;\n     this.rowIndex = rowIndex;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1104/PartitionGetRowParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1104/PartitionGetRowParam.java\nindex c9ba200f523..fd977217c6f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1104/PartitionGetRowParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1104/PartitionGetRowParam.java\n@@ -39,8 +39,7 @@ public class PartitionGetRowParam implements Serialize {\n    * @param clock      the clock\n    * @param bypassMode the bypass mode\n    */\n-  public PartitionGetRowParam(int matrixId, PartitionKey partKey, int rowIndex, int clock,\n-      boolean bypassMode) {\n+  public PartitionGetRowParam(int matrixId, PartitionKey partKey, int rowIndex, int clock, boolean bypassMode) {\n     this.matrixId = matrixId;\n     this.partKey = partKey;\n     this.rowIndex = rowIndex;\n@@ -176,4 +175,4 @@ public class PartitionGetRowParam implements Serialize {\n   public void setRowIndex(int rowIndex) {\n     this.rowIndex = rowIndex;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 112).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1104/PartitionGetRowParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1104/PartitionGetRowParam.java\nindex c9ba200f523..c700d44be09 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1104/PartitionGetRowParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1104/PartitionGetRowParam.java\n@@ -23,7 +23,9 @@ import io.netty.buffer.ByteBuf;\n /**\n  * The parameter of partition get row.\n  */\n+\n public class PartitionGetRowParam implements Serialize {\n+\n   private int matrixId;\n   private PartitionKey partKey;\n   private int rowIndex;\n@@ -39,8 +41,8 @@ public class PartitionGetRowParam implements Serialize {\n    * @param clock      the clock\n    * @param bypassMode the bypass mode\n    */\n-  public PartitionGetRowParam(int matrixId, PartitionKey partKey, int rowIndex, int clock,\n-      boolean bypassMode) {\n+\n+  public PartitionGetRowParam(int matrixId, PartitionKey partKey, int rowIndex, int clock, boolean bypassMode) {\n     this.matrixId = matrixId;\n     this.partKey = partKey;\n     this.rowIndex = rowIndex;\n@@ -51,6 +53,7 @@ public class PartitionGetRowParam implements Serialize {\n   /**\n    * Creates a new partition parameter by default\n    */\n+\n   public PartitionGetRowParam() {\n     this(0, null, 0, -1, false);\n   }\n@@ -72,12 +75,10 @@ public class PartitionGetRowParam implements Serialize {\n     rowIndex = buf.readInt();\n     clock = buf.readInt();\n     bypassMode = buf.readBoolean();\n-\n     if (buf.isReadable()) {\n       if (partKey == null) {\n         partKey = new PartitionKey();\n       }\n-\n       partKey.deserialize(buf);\n     }\n   }\n@@ -92,6 +93,7 @@ public class PartitionGetRowParam implements Serialize {\n    *\n    * @return the matrix id\n    */\n+\n   public int getMatrixId() {\n     return matrixId;\n   }\n@@ -101,6 +103,7 @@ public class PartitionGetRowParam implements Serialize {\n    *\n    * @return the part key\n    */\n+\n   public PartitionKey getPartKey() {\n     return partKey;\n   }\n@@ -110,6 +113,7 @@ public class PartitionGetRowParam implements Serialize {\n    *\n    * @param matrixId the matrix id\n    */\n+\n   public void setMatrixId(int matrixId) {\n     this.matrixId = matrixId;\n   }\n@@ -119,6 +123,7 @@ public class PartitionGetRowParam implements Serialize {\n    *\n    * @param partKey the part key\n    */\n+\n   public void setPartKey(PartitionKey partKey) {\n     this.partKey = partKey;\n   }\n@@ -128,6 +133,7 @@ public class PartitionGetRowParam implements Serialize {\n    *\n    * @return the clock\n    */\n+\n   public int getClock() {\n     return clock;\n   }\n@@ -137,6 +143,7 @@ public class PartitionGetRowParam implements Serialize {\n    *\n    * @return the boolean\n    */\n+\n   public boolean isBypassMode() {\n     return bypassMode;\n   }\n@@ -146,6 +153,7 @@ public class PartitionGetRowParam implements Serialize {\n    *\n    * @param clock the clock\n    */\n+\n   public void setClock(int clock) {\n     this.clock = clock;\n   }\n@@ -155,6 +163,7 @@ public class PartitionGetRowParam implements Serialize {\n    *\n    * @param bypassMode the bypass mode\n    */\n+\n   public void setBypassMode(boolean bypassMode) {\n     this.bypassMode = bypassMode;\n   }\n@@ -164,6 +173,7 @@ public class PartitionGetRowParam implements Serialize {\n    *\n    * @return the row index\n    */\n+\n   public int getRowIndex() {\n     return rowIndex;\n   }\n@@ -173,7 +183,9 @@ public class PartitionGetRowParam implements Serialize {\n    *\n    * @param rowIndex the row index\n    */\n+\n   public void setRowIndex(int rowIndex) {\n     this.rowIndex = rowIndex;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
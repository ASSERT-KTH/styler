{
    "project_name": "java110-MicroCommunity",
    "error_id": "570",
    "information": {
        "errors": [
            {
                "line": "33",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 181).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        Assert.hasLength(pd.getUserId(), \"\u7528\u6237\u672a\u767b\u5f55\u8bf7\u5148\u767b\u5f55\");\n        ResponseEntity<String> responseEntity = null;\n        responseEntity = CallApiServiceFactory.callCenterService(restTemplate, pd, \"\", ServiceConstant.SERVICE_API_URL + \"/api/query.store.byuser?userId=\" + userId, HttpMethod.GET);\n        if (responseEntity.getStatusCode() != HttpStatus.OK) {\n            throw new IllegalArgumentException(responseEntity.getBody());\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "33",
                    "column": "24",
                    "severity": "error",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "33",
                    "column": "78",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "33",
                    "column": "78",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "33",
                    "column": "81",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "33",
                    "column": "84",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/570/GetCommunityStoreInfoSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/570/GetCommunityStoreInfoSMOImpl.java\nindex 85e30bef081..9ec354c71a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/570/GetCommunityStoreInfoSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/570/GetCommunityStoreInfoSMOImpl.java\n@@ -30,8 +30,9 @@ public class GetCommunityStoreInfoSMOImpl implements IGetCommunityStoreInfoSMO {\n \n         Assert.hasLength(pd.getUserId(), \"\u7528\u6237\u672a\u767b\u5f55\u8bf7\u5148\u767b\u5f55\");\n         ResponseEntity<String> responseEntity = null;\n-        responseEntity = CallApiServiceFactory.callCenterService(restTemplate, pd, \"\", ServiceConstant.SERVICE_API_URL + \"/api/query.store.byuser?userId=\" + userId, HttpMethod.GET);\n-        if (responseEntity.getStatusCode() != HttpStatus.OK) {\n+        responseEntity =CallApiServiceFactory.callCenterService(restTemplate ,pd,\"\",ServiceConstant.SERVICE_API_URL\n+        + \"/api/query.store.byuser?userId=\" + userId, HttpMethod.GET);\n+         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             throw new IllegalArgumentException(responseEntity.getBody());\n         }\n         return new ResultVo(responseEntity.getStatusCode() == HttpStatus.OK ? ResultVo.CODE_OK : ResultVo.CODE_ERROR, responseEntity.getBody());\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/570/GetCommunityStoreInfoSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/570/GetCommunityStoreInfoSMOImpl.java\nindex 85e30bef081..eeec37f5793 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/570/GetCommunityStoreInfoSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/570/GetCommunityStoreInfoSMOImpl.java\n@@ -30,7 +30,8 @@ public class GetCommunityStoreInfoSMOImpl implements IGetCommunityStoreInfoSMO {\n \n         Assert.hasLength(pd.getUserId(), \"\u7528\u6237\u672a\u767b\u5f55\u8bf7\u5148\u767b\u5f55\");\n         ResponseEntity<String> responseEntity = null;\n-        responseEntity = CallApiServiceFactory.callCenterService(restTemplate, pd, \"\", ServiceConstant.SERVICE_API_URL + \"/api/query.store.byuser?userId=\" + userId, HttpMethod.GET);\n+        responseEntity = CallApiServiceFactory\n+            .callCenterService(restTemplate, pd, \"\", ServiceConstant.SERVICE_API_URL + \"/api/query.store.byuser?userId=\" + userId, HttpMethod.GET);\n         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             throw new IllegalArgumentException(responseEntity.getBody());\n         }\n@@ -46,8 +47,8 @@ public class GetCommunityStoreInfoSMOImpl implements IGetCommunityStoreInfoSMO {\n //                        + MappingCache.getValue(MappingConstant.DOMAIN_STORE_TYPE_2_COMMUNITY_MEMBER_TYPE, storeTypeCd), HttpMethod.GET);\n \n         responseEntity = CallApiServiceFactory.callCenterService(restTemplate, pd, \"\",\n-                ServiceConstant.SERVICE_API_URL + \"/api/communitys/queryStoreCommunitys?memberId=\" + storeId + \"&memberTypeCd=\"\n-                        + MappingCache.getValue(MappingConstant.DOMAIN_STORE_TYPE_2_COMMUNITY_MEMBER_TYPE, storeTypeCd), HttpMethod.GET);\n+            ServiceConstant.SERVICE_API_URL + \"/api/communitys/queryStoreCommunitys?memberId=\" + storeId + \"&memberTypeCd=\"\n+                + MappingCache.getValue(MappingConstant.DOMAIN_STORE_TYPE_2_COMMUNITY_MEMBER_TYPE, storeTypeCd), HttpMethod.GET);\n \n         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             throw new IllegalArgumentException(responseEntity.getBody());\n@@ -60,7 +61,7 @@ public class GetCommunityStoreInfoSMOImpl implements IGetCommunityStoreInfoSMO {\n     public ResultVo getUserPrivileges(IPageData pd, String staffId, String storeTypeCd, RestTemplate restTemplate) {\n \n         ResponseEntity<String> privilegeGroup = CallApiServiceFactory.callCenterService(restTemplate, pd, \"\",\n-                ServiceConstant.SERVICE_API_URL + \"/api/query.user.privilege?userId=\" + staffId + \"&domain=\" + storeTypeCd, HttpMethod.GET);\n+            ServiceConstant.SERVICE_API_URL + \"/api/query.user.privilege?userId=\" + staffId + \"&domain=\" + storeTypeCd, HttpMethod.GET);\n         if (privilegeGroup.getStatusCode() != HttpStatus.OK) {\n             throw new IllegalArgumentException(privilegeGroup.getBody());\n         }\n@@ -72,8 +73,8 @@ public class GetCommunityStoreInfoSMOImpl implements IGetCommunityStoreInfoSMO {\n     public ResultVo checkUserHasResourceListener(RestTemplate restTemplate, IPageData pd, JSONObject paramIn, String cacheKey) {\n         ResponseEntity<String> responseEntity = null;\n         responseEntity = CallApiServiceFactory.callCenterService(restTemplate, pd, paramIn.toJSONString(),\n-                ServiceConstant.SERVICE_API_URL + \"/api/basePrivilege.CheckUserHasResourceListener\",\n-                HttpMethod.POST);\n+            ServiceConstant.SERVICE_API_URL + \"/api/basePrivilege.CheckUserHasResourceListener\",\n+            HttpMethod.POST);\n \n         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             throw new IllegalArgumentException(responseEntity.getBody());\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/570/GetCommunityStoreInfoSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/570/GetCommunityStoreInfoSMOImpl.java\nindex 85e30bef081..90469976103 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/570/GetCommunityStoreInfoSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/570/GetCommunityStoreInfoSMOImpl.java\n@@ -26,9 +26,7 @@ public class GetCommunityStoreInfoSMOImpl implements IGetCommunityStoreInfoSMO {\n     @Override\n     @Cacheable(value = \"getStoreInfo\" + Java110RedisConfig.GET_STORE_INFO_EXPIRE_TIME_KEY, key = \"#userId\")\n     public ResultVo getStoreInfo(IPageData pd, RestTemplate restTemplate, String userId) {\n-\n-\n-        Assert.hasLength(pd.getUserId(), \"\u7528\u6237\u672a\u767b\u5f55\u8bf7\u5148\u767b\u5f55\");\n+    Assert.hasLength(pd.getUserId(), \"\u7528\u6237\u672a\u767b\u5f55\u8bf7\u5148\u767b\u5f55\");\n         ResponseEntity<String> responseEntity = null;\n         responseEntity = CallApiServiceFactory.callCenterService(restTemplate, pd, \"\", ServiceConstant.SERVICE_API_URL + \"/api/query.store.byuser?userId=\" + userId, HttpMethod.GET);\n         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n@@ -41,15 +39,12 @@ public class GetCommunityStoreInfoSMOImpl implements IGetCommunityStoreInfoSMO {\n     @Cacheable(value = \"getStoreEnterCommunitys\" + Java110RedisConfig.GET_STORE_ENTER_COMMUNITYS_EXPIRE_TIME_KEY, key = \"#storeId\")\n     public ResultVo getStoreEnterCommunitys(IPageData pd, String storeId, String storeTypeCd, RestTemplate restTemplate) {\n         ResponseEntity<String> responseEntity = null;\n-//        responseEntity = CallApiServiceFactory.callCenterService(restTemplate, pd, \"\",\n-//                ServiceConstant.SERVICE_API_URL + \"/api/query.myCommunity.byMember?memberId=\" + storeId + \"&memberTypeCd=\"\n-//                        + MappingCache.getValue(MappingConstant.DOMAIN_STORE_TYPE_2_COMMUNITY_MEMBER_TYPE, storeTypeCd), HttpMethod.GET);\n+//   \n \n-        responseEntity = CallApiServiceFactory.callCenterService(restTemplate, pd, \"\",\n+responseEntity = CallApiServiceFactory.callCenterService(restTemplate, pd, \"\",\n                 ServiceConstant.SERVICE_API_URL + \"/api/communitys/queryStoreCommunitys?memberId=\" + storeId + \"&memberTypeCd=\"\n                         + MappingCache.getValue(MappingConstant.DOMAIN_STORE_TYPE_2_COMMUNITY_MEMBER_TYPE, storeTypeCd), HttpMethod.GET);\n-\n-        if (responseEntity.getStatusCode() != HttpStatus.OK) {\n+if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             throw new IllegalArgumentException(responseEntity.getBody());\n         }\n         return new ResultVo(responseEntity.getStatusCode() == HttpStatus.OK ? ResultVo.CODE_OK : ResultVo.CODE_ERROR, responseEntity.getBody());\n@@ -86,4 +81,4 @@ public class GetCommunityStoreInfoSMOImpl implements IGetCommunityStoreInfoSMO {\n         return new ResultVo(responseEntity.getStatusCode() == HttpStatus.OK ? ResultVo.CODE_OK : ResultVo.CODE_ERROR, privileges.toJSONString());\n \n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 181).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 209).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/570/GetCommunityStoreInfoSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/570/GetCommunityStoreInfoSMOImpl.java\nindex 85e30bef081..e86bad2f513 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/570/GetCommunityStoreInfoSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/570/GetCommunityStoreInfoSMOImpl.java\n@@ -18,6 +18,7 @@ import org.springframework.http.ResponseEntity;\n import org.springframework.stereotype.Service;\n import org.springframework.web.client.RestTemplate;\n \n+\n @Service\n public class GetCommunityStoreInfoSMOImpl implements IGetCommunityStoreInfoSMO {\n \n@@ -26,11 +27,10 @@ public class GetCommunityStoreInfoSMOImpl implements IGetCommunityStoreInfoSMO {\n     @Override\n     @Cacheable(value = \"getStoreInfo\" + Java110RedisConfig.GET_STORE_INFO_EXPIRE_TIME_KEY, key = \"#userId\")\n     public ResultVo getStoreInfo(IPageData pd, RestTemplate restTemplate, String userId) {\n-\n-\n         Assert.hasLength(pd.getUserId(), \"\u7528\u6237\u672a\u767b\u5f55\u8bf7\u5148\u767b\u5f55\");\n         ResponseEntity<String> responseEntity = null;\n         responseEntity = CallApiServiceFactory.callCenterService(restTemplate, pd, \"\", ServiceConstant.SERVICE_API_URL + \"/api/query.store.byuser?userId=\" + userId, HttpMethod.GET);\n+\n         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             throw new IllegalArgumentException(responseEntity.getBody());\n         }\n@@ -38,16 +38,15 @@ public class GetCommunityStoreInfoSMOImpl implements IGetCommunityStoreInfoSMO {\n     }\n \n     @Override\n-    @Cacheable(value = \"getStoreEnterCommunitys\" + Java110RedisConfig.GET_STORE_ENTER_COMMUNITYS_EXPIRE_TIME_KEY, key = \"#storeId\")\n+    @Cacheable(value = \"getStoreEnterCommunitys\" + Java110RedisConfig.GET_STORE_ENTER_COMMUNITYS_EXPIRE_TIME_KEY,\n+        key = \"#storeId\")\n     public ResultVo getStoreEnterCommunitys(IPageData pd, String storeId, String storeTypeCd, RestTemplate restTemplate) {\n         ResponseEntity<String> responseEntity = null;\n //        responseEntity = CallApiServiceFactory.callCenterService(restTemplate, pd, \"\",\n //                ServiceConstant.SERVICE_API_URL + \"/api/query.myCommunity.byMember?memberId=\" + storeId + \"&memberTypeCd=\"\n //                        + MappingCache.getValue(MappingConstant.DOMAIN_STORE_TYPE_2_COMMUNITY_MEMBER_TYPE, storeTypeCd), HttpMethod.GET);\n-\n-        responseEntity = CallApiServiceFactory.callCenterService(restTemplate, pd, \"\",\n-                ServiceConstant.SERVICE_API_URL + \"/api/communitys/queryStoreCommunitys?memberId=\" + storeId + \"&memberTypeCd=\"\n-                        + MappingCache.getValue(MappingConstant.DOMAIN_STORE_TYPE_2_COMMUNITY_MEMBER_TYPE, storeTypeCd), HttpMethod.GET);\n+        responseEntity = CallApiServiceFactory.callCenterService(restTemplate, pd, \"\", ServiceConstant.SERVICE_API_URL + \"/api/communitys/queryStoreCommunitys?memberId=\"\n+        + storeId + \"&memberTypeCd=\" + MappingCache.getValue(MappingConstant.DOMAIN_STORE_TYPE_2_COMMUNITY_MEMBER_TYPE, storeTypeCd), HttpMethod.GET);\n \n         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             throw new IllegalArgumentException(responseEntity.getBody());\n@@ -58,32 +57,27 @@ public class GetCommunityStoreInfoSMOImpl implements IGetCommunityStoreInfoSMO {\n     @Override\n     @Cacheable(value = \"getUserPrivileges\" + Java110RedisConfig.DEFAULT_EXPIRE_TIME_KEY, key = \"#staffId\")\n     public ResultVo getUserPrivileges(IPageData pd, String staffId, String storeTypeCd, RestTemplate restTemplate) {\n-\n-        ResponseEntity<String> privilegeGroup = CallApiServiceFactory.callCenterService(restTemplate, pd, \"\",\n-                ServiceConstant.SERVICE_API_URL + \"/api/query.user.privilege?userId=\" + staffId + \"&domain=\" + storeTypeCd, HttpMethod.GET);\n+        ResponseEntity<String> privilegeGroup = CallApiServiceFactory.callCenterService(restTemplate, pd, \"\", ServiceConstant.SERVICE_API_URL + \"/api/query.user.privilege?userId=\"\n+        + staffId + \"&domain=\" + storeTypeCd, HttpMethod.GET);\n         if (privilegeGroup.getStatusCode() != HttpStatus.OK) {\n             throw new IllegalArgumentException(privilegeGroup.getBody());\n         }\n         return new ResultVo(privilegeGroup.getStatusCode() == HttpStatus.OK ? ResultVo.CODE_OK : ResultVo.CODE_ERROR, privilegeGroup.getBody());\n-\n     }\n \n     @Cacheable(value = \"checkUserHasResourceListener\" + Java110RedisConfig.DEFAULT_EXPIRE_TIME_KEY, key = \"#cacheKey\")\n-    public ResultVo checkUserHasResourceListener(RestTemplate restTemplate, IPageData pd, JSONObject paramIn, String cacheKey) {\n+    public ResultVo checkUserHasResourceListener(RestTemplate restTemplate,\n+                                                 IPageData pd,\n+                                                 JSONObject paramIn, String cacheKey) {\n         ResponseEntity<String> responseEntity = null;\n-        responseEntity = CallApiServiceFactory.callCenterService(restTemplate, pd, paramIn.toJSONString(),\n-                ServiceConstant.SERVICE_API_URL + \"/api/basePrivilege.CheckUserHasResourceListener\",\n-                HttpMethod.POST);\n+        responseEntity = CallApiServiceFactory.callCenterService(restTemplate, pd, paramIn.toJSONString(), ServiceConstant.SERVICE_API_URL + \"/api/basePrivilege.CheckUserHasResourceListener\", HttpMethod.POST);\n \n         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             throw new IllegalArgumentException(responseEntity.getBody());\n         }\n \n         JSONObject data = JSONObject.parseObject(responseEntity.getBody());\n-\n         JSONArray privileges = data.getJSONArray(\"privileges\");\n-\n         return new ResultVo(responseEntity.getStatusCode() == HttpStatus.OK ? ResultVo.CODE_OK : ResultVo.CODE_ERROR, privileges.toJSONString());\n-\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 244).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "33",
                    "column": "79",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "33",
                    "column": "105",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "33",
                    "column": "168",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "33",
                    "column": "181",
                    "severity": "error",
                    "message": "'.' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
                },
                {
                    "line": "33",
                    "column": "187",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "189",
                    "severity": "error",
                    "message": "';' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/570/GetCommunityStoreInfoSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/570/GetCommunityStoreInfoSMOImpl.java\nindex 85e30bef081..2b6413a4bb6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/570/GetCommunityStoreInfoSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/570/GetCommunityStoreInfoSMOImpl.java\n@@ -30,8 +30,7 @@ public class GetCommunityStoreInfoSMOImpl implements IGetCommunityStoreInfoSMO {\n \n         Assert.hasLength(pd.getUserId(), \"\u7528\u6237\u672a\u767b\u5f55\u8bf7\u5148\u767b\u5f55\");\n         ResponseEntity<String> responseEntity = null;\n-        responseEntity = CallApiServiceFactory.callCenterService(restTemplate, pd, \"\", ServiceConstant.SERVICE_API_URL + \"/api/query.store.byuser?userId=\" + userId, HttpMethod.GET);\n-        if (responseEntity.getStatusCode() != HttpStatus.OK) {\n+        responseEntity = CallApiServiceFactory.callCenterService(restTemplate , pd, \"\", ServiceConstant . SERVICE_API_URL + \"/api/query.store.byuser?userId=\" + userId , HttpMethod . GET ) ; if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             throw new IllegalArgumentException(responseEntity.getBody());\n         }\n         return new ResultVo(responseEntity.getStatusCode() == HttpStatus.OK ? ResultVo.CODE_OK : ResultVo.CODE_ERROR, responseEntity.getBody());\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "33",
                    "column": "24",
                    "severity": "error",
                    "message": "'=' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "33",
                    "column": "78",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "33",
                    "column": "78",
                    "severity": "error",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                },
                {
                    "line": "33",
                    "column": "81",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                },
                {
                    "line": "33",
                    "column": "84",
                    "severity": "error",
                    "message": "',' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/570/GetCommunityStoreInfoSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/570/GetCommunityStoreInfoSMOImpl.java\nindex 85e30bef081..9ec354c71a3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/570/GetCommunityStoreInfoSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/570/GetCommunityStoreInfoSMOImpl.java\n@@ -30,8 +30,9 @@ public class GetCommunityStoreInfoSMOImpl implements IGetCommunityStoreInfoSMO {\n \n         Assert.hasLength(pd.getUserId(), \"\u7528\u6237\u672a\u767b\u5f55\u8bf7\u5148\u767b\u5f55\");\n         ResponseEntity<String> responseEntity = null;\n-        responseEntity = CallApiServiceFactory.callCenterService(restTemplate, pd, \"\", ServiceConstant.SERVICE_API_URL + \"/api/query.store.byuser?userId=\" + userId, HttpMethod.GET);\n-        if (responseEntity.getStatusCode() != HttpStatus.OK) {\n+        responseEntity =CallApiServiceFactory.callCenterService(restTemplate ,pd,\"\",ServiceConstant.SERVICE_API_URL\n+        + \"/api/query.store.byuser?userId=\" + userId, HttpMethod.GET);\n+         if (responseEntity.getStatusCode() != HttpStatus.OK) {\n             throw new IllegalArgumentException(responseEntity.getBody());\n         }\n         return new ResultVo(responseEntity.getStatusCode() == HttpStatus.OK ? ResultVo.CODE_OK : ResultVo.CODE_ERROR, responseEntity.getBody());\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
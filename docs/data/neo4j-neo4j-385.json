{
    "project_name": "neo4j-neo4j",
    "error_id": "385",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "111",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "82",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "209",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "216",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "221",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "122",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "263",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "274",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "137",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "154",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "128",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "133",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "318",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "327",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "334",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/385/DatabaseManagementServiceFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/385/DatabaseManagementServiceFactory.java\nindex 077ce571e4d..2108743787d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/385/DatabaseManagementServiceFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/385/DatabaseManagementServiceFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.facade;\n \n import java.nio.file.Path;\n@@ -105,9 +106,9 @@ import static org.neo4j.kernel.database.DatabaseIdRepository.NAMED_SYSTEM_DATABA\n public class DatabaseManagementServiceFactory\n {\n     protected final DbmsInfo dbmsInfo;\n-    private final Function<GlobalModule,AbstractEditionModule> editionFactory;\n+    private final Function<GlobalModule, AbstractEditionModule> editionFactory;\n \n-    public DatabaseManagementServiceFactory( DbmsInfo dbmsInfo, Function<GlobalModule,AbstractEditionModule> editionFactory )\n+    public DatabaseManagementServiceFactory(DbmsInfo dbmsInfo, Function<GlobalModule, AbstractEditionModule> editionFactory)\n     {\n         this.dbmsInfo = dbmsInfo;\n         this.editionFactory = editionFactory;\n@@ -117,83 +118,83 @@ public class DatabaseManagementServiceFactory\n      * Instantiate a graph database given configuration, dependencies, and a custom implementation of {@link org\n      * .neo4j.kernel.impl.factory.GraphDatabaseFacade}.\n      *\n-     * @param config configuration\n+     * @param config       configuration\n      * @param dependencies the dependencies required to construct the {@link GraphDatabaseFacade}\n      * @return the initialised {@link GraphDatabaseFacade}\n      */\n-    public DatabaseManagementService build( Config config, final ExternalDependencies dependencies )\n+    public DatabaseManagementService build(Config config, final ExternalDependencies dependencies)\n     {\n-        GlobalModule globalModule = createGlobalModule( config, dependencies );\n-        AbstractEditionModule edition = editionFactory.apply( globalModule );\n+        GlobalModule globalModule = createGlobalModule(config, dependencies);\n+        AbstractEditionModule edition = editionFactory.apply(globalModule);\n         Dependencies globalDependencies = globalModule.getGlobalDependencies();\n         LifeSupport globalLife = globalModule.getGlobalLife();\n \n         LogService logService = globalModule.getLogService();\n-        Log internalLog = logService.getInternalLog( getClass() );\n-        DatabaseManager<?> databaseManager = edition.createDatabaseManager( globalModule );\n-        DatabaseManagementService managementService = createManagementService( globalModule, globalLife, internalLog, databaseManager );\n-        globalDependencies.satisfyDependencies( managementService );\n+        Log internalLog = logService.getInternalLog(getClass());\n+        DatabaseManager<?> databaseManager = edition.createDatabaseManager(globalModule);\n+        DatabaseManagementService managementService = createManagementService(globalModule, globalLife, internalLog, databaseManager);\n+        globalDependencies.satisfyDependencies(managementService);\n \n         edition.bootstrapFabricServices();\n \n-        setupProcedures( globalModule, edition, databaseManager );\n+        setupProcedures(globalModule, edition, databaseManager);\n \n-        edition.registerSystemGraphComponents( globalModule.getSystemGraphComponents(), globalModule );\n-        globalLife.add( edition.createSystemGraphInitializer( globalModule ) );\n+        edition.registerSystemGraphComponents(globalModule.getSystemGraphComponents(), globalModule);\n+        globalLife.add(edition.createSystemGraphInitializer(globalModule));\n \n-        var dbmsRuntimeSystemGraphComponent = new DbmsRuntimeSystemGraphComponent( globalModule.getGlobalConfig() );\n-        globalModule.getSystemGraphComponents().register( dbmsRuntimeSystemGraphComponent );\n+        var dbmsRuntimeSystemGraphComponent = new DbmsRuntimeSystemGraphComponent(globalModule.getGlobalConfig());\n+        globalModule.getSystemGraphComponents().register(dbmsRuntimeSystemGraphComponent);\n \n-        edition.createDefaultDatabaseResolver( globalModule );\n-        globalDependencies.satisfyDependency( edition.getDefaultDatabaseResolver() );\n+        edition.createDefaultDatabaseResolver(globalModule);\n+        globalDependencies.satisfyDependency(edition.getDefaultDatabaseResolver());\n \n-        edition.createSecurityModule( globalModule );\n+        edition.createSecurityModule(globalModule);\n         SecurityProvider securityProvider = edition.getSecurityProvider();\n-        globalDependencies.satisfyDependencies( securityProvider.authManager() );\n+        globalDependencies.satisfyDependencies(securityProvider.authManager());\n \n         var dbmsRuntimeRepository =\n-                edition.createAndRegisterDbmsRuntimeRepository( globalModule, databaseManager, globalDependencies, dbmsRuntimeSystemGraphComponent );\n-        globalDependencies.satisfyDependency( dbmsRuntimeRepository );\n+          edition.createAndRegisterDbmsRuntimeRepository(globalModule, databaseManager, globalDependencies, dbmsRuntimeSystemGraphComponent);\n+        globalDependencies.satisfyDependency(dbmsRuntimeRepository);\n \n-        globalLife.add( new DefaultDatabaseInitializer( databaseManager ) );\n+        globalLife.add(new DefaultDatabaseInitializer(databaseManager));\n \n-        globalLife.add( globalModule.getGlobalExtensions() );\n-        BoltGraphDatabaseManagementServiceSPI boltGraphDatabaseManagementServiceSPI = edition.createBoltDatabaseManagementServiceProvider( globalDependencies,\n-                managementService, globalModule.getGlobalMonitors(), globalModule.getGlobalClock(), logService );\n-        globalLife.add( createBoltServer( globalModule, edition, boltGraphDatabaseManagementServiceSPI, databaseManager.databaseIdRepository() ) );\n-        var webServer = createWebServer( edition, managementService, globalDependencies, config, globalModule.getLogService().getUserLogProvider() );\n-        globalDependencies.satisfyDependency( webServer );\n-        globalLife.add( webServer );\n+        globalLife.add(globalModule.getGlobalExtensions());\n+        BoltGraphDatabaseManagementServiceSPI boltGraphDatabaseManagementServiceSPI = edition.createBoltDatabaseManagementServiceProvider(globalDependencies,\n+          managementService, globalModule.getGlobalMonitors(), globalModule.getGlobalClock(), logService);\n+        globalLife.add(createBoltServer(globalModule, edition, boltGraphDatabaseManagementServiceSPI, databaseManager.databaseIdRepository()));\n+        var webServer = createWebServer(edition, managementService, globalDependencies, config, globalModule.getLogService().getUserLogProvider());\n+        globalDependencies.satisfyDependency(webServer);\n+        globalLife.add(webServer);\n \n-        startDatabaseServer( globalModule, globalLife, internalLog, databaseManager, managementService );\n+        startDatabaseServer(globalModule, globalLife, internalLog, databaseManager, managementService);\n \n         return managementService;\n     }\n \n-    protected DatabaseManagementService createManagementService( GlobalModule globalModule, LifeSupport globalLife, Log internalLog,\n-            DatabaseManager<?> databaseManager )\n+    protected DatabaseManagementService createManagementService(GlobalModule globalModule, LifeSupport globalLife, Log internalLog,\n+                                                                DatabaseManager<?> databaseManager)\n     {\n-        return new DatabaseManagementServiceImpl( databaseManager, globalModule.getGlobalAvailabilityGuard(),\n-                globalLife, globalModule.getDatabaseEventListeners(), globalModule.getTransactionEventListeners(), internalLog );\n+        return new DatabaseManagementServiceImpl(databaseManager, globalModule.getGlobalAvailabilityGuard(),\n+          globalLife, globalModule.getDatabaseEventListeners(), globalModule.getTransactionEventListeners(), internalLog);\n     }\n \n-    private Lifecycle createWebServer( AbstractEditionModule edition, DatabaseManagementService managementService,\n-                                       Dependencies globalDependencies, Config config, LogProvider userLogProvider )\n+    private Lifecycle createWebServer(AbstractEditionModule edition, DatabaseManagementService managementService,\n+                                      Dependencies globalDependencies, Config config, LogProvider userLogProvider)\n     {\n-        if ( shouldEnableWebServer( config ) )\n+        if (shouldEnableWebServer(config))\n         {\n-            return edition.createWebServer( managementService, globalDependencies, config, userLogProvider, dbmsInfo );\n+            return edition.createWebServer(managementService, globalDependencies, config, userLogProvider, dbmsInfo);\n         }\n         return new DisabledNeoWebServer();\n     }\n \n-    private boolean shouldEnableWebServer( Config config )\n+    private boolean shouldEnableWebServer(Config config)\n     {\n-        return (config.get( HttpConnector.enabled ) || config.get( HttpsConnector.enabled )) && !config.get( ServerSettings.http_enabled_modules ).isEmpty();\n+        return (config.get(HttpConnector.enabled) || config.get(HttpsConnector.enabled)) && !config.get(ServerSettings.http_enabled_modules).isEmpty();\n     }\n \n-    private static void startDatabaseServer( GlobalModule globalModule, LifeSupport globalLife, Log internalLog, DatabaseManager<?> databaseManager,\n-            DatabaseManagementService managementService )\n+    private static void startDatabaseServer(GlobalModule globalModule, LifeSupport globalLife, Log internalLog, DatabaseManager<?> databaseManager,\n+                                            DatabaseManagementService managementService)\n     {\n \n         RuntimeException startupException = null;\n@@ -202,59 +203,56 @@ public class DatabaseManagementServiceFactory\n             databaseManager.initialiseSystemDatabase();\n             globalLife.start();\n \n-            DatabaseStateService databaseStateService = globalModule.getGlobalDependencies().resolveDependency( DatabaseStateService.class );\n+            DatabaseStateService databaseStateService = globalModule.getGlobalDependencies().resolveDependency(DatabaseStateService.class);\n \n-            verifySystemDatabaseStart( databaseManager, databaseStateService );\n-        }\n-        catch ( Throwable throwable )\n+            verifySystemDatabaseStart(databaseManager, databaseStateService);\n+        } catch (Throwable throwable)\n         {\n             String message = \"Error starting Neo4j database server at \" + globalModule.getNeo4jLayout().databasesDirectory();\n-            startupException = new RuntimeException( message, throwable );\n-            internalLog.error( message, throwable );\n-        }\n-        finally\n+            startupException = new RuntimeException(message, throwable);\n+            internalLog.error(message, throwable);\n+        } finally\n         {\n-            if ( startupException != null )\n+            if (startupException != null)\n             {\n                 try\n                 {\n                     managementService.shutdown();\n-                }\n-                catch ( Throwable shutdownError )\n+                } catch (Throwable shutdownError)\n                 {\n-                    startupException.addSuppressed( shutdownError );\n+                    startupException.addSuppressed(shutdownError);\n                 }\n             }\n         }\n \n-        if ( startupException != null )\n+        if (startupException != null)\n         {\n-            internalLog.error( \"Failed to start database server.\", startupException );\n+            internalLog.error(\"Failed to start database server.\", startupException);\n             throw startupException;\n         }\n     }\n \n-    private static void verifySystemDatabaseStart( DatabaseManager<?> databaseManager, DatabaseStateService dbStateService )\n+    private static void verifySystemDatabaseStart(DatabaseManager<?> databaseManager, DatabaseStateService dbStateService)\n     {\n-        Optional<? extends DatabaseContext> databaseContext = databaseManager.getDatabaseContext( NAMED_SYSTEM_DATABASE_ID );\n-        if ( databaseContext.isEmpty() )\n+        Optional<? extends DatabaseContext> databaseContext = databaseManager.getDatabaseContext(NAMED_SYSTEM_DATABASE_ID);\n+        if (databaseContext.isEmpty())\n         {\n-            throw new UnableToStartDatabaseException( SYSTEM_DATABASE_NAME + \" not found.\" );\n+            throw new UnableToStartDatabaseException(SYSTEM_DATABASE_NAME + \" not found.\");\n         }\n \n-        Optional<Throwable> failure = dbStateService.causeOfFailure( NAMED_SYSTEM_DATABASE_ID );\n-        if ( failure.isPresent() )\n+        Optional<Throwable> failure = dbStateService.causeOfFailure(NAMED_SYSTEM_DATABASE_ID);\n+        if (failure.isPresent())\n         {\n-            throw new UnableToStartDatabaseException( SYSTEM_DATABASE_NAME + \" failed to start.\", failure.get() );\n+            throw new UnableToStartDatabaseException(SYSTEM_DATABASE_NAME + \" failed to start.\", failure.get());\n         }\n     }\n \n     /**\n      * Create the platform module. Override to replace with custom module.\n      */\n-    protected GlobalModule createGlobalModule( Config config, final ExternalDependencies dependencies )\n+    protected GlobalModule createGlobalModule(Config config, final ExternalDependencies dependencies)\n     {\n-        return new GlobalModule( config, dbmsInfo, dependencies );\n+        return new GlobalModule(config, dbmsInfo, dependencies);\n     }\n \n     /**\n@@ -262,31 +260,31 @@ public class DatabaseManagementServiceFactory\n      * N.B. This method takes a {@link DatabaseManager} as an unused parameter *intentionally*, in\n      * order to enforce that the databaseManager must be constructed first.\n      */\n-    @SuppressWarnings( \"unused\" )\n-    private static void setupProcedures( GlobalModule globalModule, AbstractEditionModule editionModule, DatabaseManager<?> databaseManager )\n+    @SuppressWarnings(\"unused\")\n+    private static void setupProcedures(GlobalModule globalModule, AbstractEditionModule editionModule, DatabaseManager<?> databaseManager)\n     {\n         Supplier<GlobalProcedures> procedureInitializer = () ->\n         {\n             Config globalConfig = globalModule.getGlobalConfig();\n-            Path proceduresDirectory = globalConfig.get( GraphDatabaseSettings.plugin_dir );\n+            Path proceduresDirectory = globalConfig.get(GraphDatabaseSettings.plugin_dir);\n             LogService logService = globalModule.getLogService();\n-            Log internalLog = logService.getInternalLog( GlobalProcedures.class );\n-            Log proceduresLog = logService.getUserLog( GlobalProcedures.class );\n+            Log internalLog = logService.getInternalLog(GlobalProcedures.class);\n+            Log proceduresLog = logService.getUserLog(GlobalProcedures.class);\n \n-            ProcedureConfig procedureConfig = new ProcedureConfig( globalConfig );\n+            ProcedureConfig procedureConfig = new ProcedureConfig(globalConfig);\n             Edition neo4jEdition = globalModule.getDbmsInfo().edition;\n-            SpecialBuiltInProcedures builtInProcedures = new SpecialBuiltInProcedures( Version.getNeo4jVersion(), neo4jEdition.toString() );\n-            GlobalProceduresRegistry globalProcedures = new GlobalProceduresRegistry( builtInProcedures, proceduresDirectory, internalLog, procedureConfig );\n-\n-            globalProcedures.registerType( Node.class, NTNode );\n-            globalProcedures.registerType( NodeValue.class, NTNode );\n-            globalProcedures.registerType( Relationship.class, NTRelationship );\n-            globalProcedures.registerType( RelationshipValue.class, NTRelationship );\n-            globalProcedures.registerType( org.neo4j.graphdb.Path.class, NTPath );\n-            globalProcedures.registerType( PathValue.class, NTPath );\n-            globalProcedures.registerType( Geometry.class, NTGeometry );\n-            globalProcedures.registerType( Point.class, NTPoint );\n-            globalProcedures.registerType( PointValue.class, NTPoint );\n+            SpecialBuiltInProcedures builtInProcedures = new SpecialBuiltInProcedures(Version.getNeo4jVersion(), neo4jEdition.toString());\n+            GlobalProceduresRegistry globalProcedures = new GlobalProceduresRegistry(builtInProcedures, proceduresDirectory, internalLog, procedureConfig);\n+\n+            globalProcedures.registerType(Node.class, NTNode);\n+            globalProcedures.registerType(NodeValue.class, NTNode);\n+            globalProcedures.registerType(Relationship.class, NTRelationship);\n+            globalProcedures.registerType(RelationshipValue.class, NTRelationship);\n+            globalProcedures.registerType(org.neo4j.graphdb.Path.class, NTPath);\n+            globalProcedures.registerType(PathValue.class, NTPath);\n+            globalProcedures.registerType(Geometry.class, NTGeometry);\n+            globalProcedures.registerType(Point.class, NTPoint);\n+            globalProcedures.registerType(PointValue.class, NTPoint);\n \n             // Below components are not public API, but are made available for internal\n             // procedures to call, and to provide temporary workarounds for the following\n@@ -295,52 +293,52 @@ public class DatabaseManagementServiceFactory\n             //  - Group-transaction writes (same pattern as above, but rather than splitting large transactions,\n             //                              combine lots of small ones)\n             //  - Bleeding-edge performance (KernelTransaction, to bypass overhead of working with Core API)\n-            globalProcedures.registerComponent( DependencyResolver.class, Context::dependencyResolver, false );\n-            globalProcedures.registerComponent( KernelTransaction.class, ctx -> ctx.internalTransaction().kernelTransaction(), false );\n-            globalProcedures.registerComponent( GraphDatabaseAPI.class, Context::graphDatabaseAPI, false );\n-            globalProcedures.registerComponent( SystemGraphComponents.class, ctx -> globalModule.getSystemGraphComponents(), false );\n-            globalProcedures.registerComponent( ValueMapper.class, Context::valueMapper, true );\n+            globalProcedures.registerComponent(DependencyResolver.class, Context::dependencyResolver, false);\n+            globalProcedures.registerComponent(KernelTransaction.class, ctx -> ctx.internalTransaction().kernelTransaction(), false);\n+            globalProcedures.registerComponent(GraphDatabaseAPI.class, Context::graphDatabaseAPI, false);\n+            globalProcedures.registerComponent(SystemGraphComponents.class, ctx -> globalModule.getSystemGraphComponents(), false);\n+            globalProcedures.registerComponent(ValueMapper.class, Context::valueMapper, true);\n \n             // Register injected public API components\n-            globalProcedures.registerComponent( Log.class, ctx -> proceduresLog, true );\n-            globalProcedures.registerComponent( Transaction.class, new ProcedureTransactionProvider(), true );\n-            globalProcedures.registerComponent( org.neo4j.procedure.TerminationGuard.class, new TerminationGuardProvider(), true );\n-            globalProcedures.registerComponent( SecurityContext.class, Context::securityContext, true );\n-            globalProcedures.registerComponent( ProcedureCallContext.class, Context::procedureCallContext, true );\n-            globalProcedures.registerComponent( FulltextAdapter.class, ctx -> ctx.dependencyResolver().resolveDependency( FulltextAdapter.class ), true );\n-            globalProcedures.registerComponent( GraphDatabaseService.class,\n-                    ctx -> new GraphDatabaseFacade( (GraphDatabaseFacade) ctx.graphDatabaseAPI(), new ProcedureLoginContextTransformer( ctx ) ), true );\n+            globalProcedures.registerComponent(Log.class, ctx -> proceduresLog, true);\n+            globalProcedures.registerComponent(Transaction.class, new ProcedureTransactionProvider(), true);\n+            globalProcedures.registerComponent(org.neo4j.procedure.TerminationGuard.class, new TerminationGuardProvider(), true);\n+            globalProcedures.registerComponent(SecurityContext.class, Context::securityContext, true);\n+            globalProcedures.registerComponent(ProcedureCallContext.class, Context::procedureCallContext, true);\n+            globalProcedures.registerComponent(FulltextAdapter.class, ctx -> ctx.dependencyResolver().resolveDependency(FulltextAdapter.class), true);\n+            globalProcedures.registerComponent(GraphDatabaseService.class,\n+              ctx -> new GraphDatabaseFacade((GraphDatabaseFacade) ctx.graphDatabaseAPI(), new ProcedureLoginContextTransformer(ctx)), true);\n \n-            globalProcedures.registerComponent( DataCollector.class, ctx -> ctx.dependencyResolver().resolveDependency( DataCollector.class ), false );\n+            globalProcedures.registerComponent(DataCollector.class, ctx -> ctx.dependencyResolver().resolveDependency(DataCollector.class), false);\n \n             // Edition procedures\n             try\n             {\n-                editionModule.registerProcedures( globalProcedures, procedureConfig, globalModule, databaseManager );\n-            }\n-            catch ( KernelException e )\n+                editionModule.registerProcedures(globalProcedures, procedureConfig, globalModule, databaseManager);\n+            } catch (KernelException e)\n             {\n-                internalLog.error( \"Failed to register built-in edition procedures at start up: \" + e.getMessage() );\n+                internalLog.error(\"Failed to register built-in edition procedures at start up: \" + e.getMessage());\n             }\n-            globalModule.getGlobalLife().add( globalProcedures );\n+            globalModule.getGlobalLife().add(globalProcedures);\n \n             return globalProcedures;\n         };\n-        GlobalProcedures procedures = tryResolveOrCreate( GlobalProcedures.class, globalModule.getExternalDependencyResolver(), procedureInitializer );\n-        if ( procedures instanceof Consumer )\n+        GlobalProcedures procedures = tryResolveOrCreate(GlobalProcedures.class, globalModule.getExternalDependencyResolver(), procedureInitializer);\n+        if (procedures instanceof Consumer)\n         {\n-            ((Consumer) procedures).accept( procedureInitializer );\n+            ((Consumer) procedures).accept(procedureInitializer);\n         }\n-        globalModule.getGlobalDependencies().satisfyDependency( procedures );\n+        globalModule.getGlobalDependencies().satisfyDependency(procedures);\n     }\n \n-    private static BoltServer createBoltServer( GlobalModule globalModule, AbstractEditionModule edition,\n-            BoltGraphDatabaseManagementServiceSPI boltGraphDatabaseManagementServiceSPI, DatabaseIdRepository databaseIdRepository )\n+    private static BoltServer createBoltServer(GlobalModule globalModule, AbstractEditionModule edition,\n+                                               BoltGraphDatabaseManagementServiceSPI boltGraphDatabaseManagementServiceSPI,\n+                                               DatabaseIdRepository databaseIdRepository)\n     {\n-        return new BoltServer( boltGraphDatabaseManagementServiceSPI, globalModule.getJobScheduler(), globalModule.getConnectorPortRegister(),\n-                               edition.getConnectionTracker(), databaseIdRepository, globalModule.getGlobalConfig(), globalModule.getGlobalClock(),\n-                               globalModule.getGlobalMonitors(), globalModule.getLogService(), globalModule.getGlobalDependencies(),\n-                               edition.getBoltAuthManager( globalModule.getGlobalDependencies() ), edition.getBoltInClusterAuthManager(),\n-                               globalModule.getMemoryPools(), edition.getDefaultDatabaseResolver() );\n+        return new BoltServer(boltGraphDatabaseManagementServiceSPI, globalModule.getJobScheduler(), globalModule.getConnectorPortRegister(),\n+          edition.getConnectionTracker(), databaseIdRepository, globalModule.getGlobalConfig(), globalModule.getGlobalClock(),\n+          globalModule.getGlobalMonitors(), globalModule.getLogService(), globalModule.getGlobalDependencies(),\n+          edition.getBoltAuthManager(globalModule.getGlobalDependencies()), edition.getBoltInClusterAuthManager(),\n+          globalModule.getMemoryPools(), edition.getDefaultDatabaseResolver());\n     }\n }\n",
            "diff_size": 115
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
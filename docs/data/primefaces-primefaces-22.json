{
    "project_name": "primefaces-primefaces",
    "error_id": "22",
    "information": {
        "errors": [
            {
                "line": "38",
                "column": "9",
                "severity": "error",
                "message": "'}' at column 9 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "        if (this.path.equals(File.separator)) {\n            this.name = this.path;\n        } else {\n            String[] parts = path.split(File.separator.equals(\"\\\\\") ? \"\\\\\\\\\" : File.separator);\n            this.name = parts[parts.length - 1];\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/22/FileInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/styler/22/FileInfo.java\nindex eb56d5caaed..d6a7708d7be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/22/FileInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/styler/22/FileInfo.java\n@@ -35,7 +35,8 @@ public class FileInfo implements Serializable {\n         this.path = path;\n         if (this.path.equals(File.separator)) {\n             this.name = this.path;\n-        } else {\n+        }\n+        else {\n             String[] parts = path.split(File.separator.equals(\"\\\\\") ? \"\\\\\\\\\" : File.separator);\n             this.name = parts[parts.length - 1];\n         }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "39",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/22/FileInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/intellij/22/FileInfo.java\nindex eb56d5caaed..9af997871da 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/22/FileInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/intellij/22/FileInfo.java\n@@ -21,6 +21,7 @@\n  * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n  * THE SOFTWARE.\n  */\n+\n package org.primefaces.showcase.view.data.tree;\n \n import java.io.File;\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "38",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/22/FileInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/naturalize/22/FileInfo.java\nindex eb56d5caaed..77d65cb2c3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/22/FileInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/naturalize/22/FileInfo.java\n@@ -53,4 +53,4 @@ public class FileInfo implements Serializable {\n     public String toString() {\n         return path + \" / \" + name;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/22/FileInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/codebuff/22/FileInfo.java\nindex eb56d5caaed..c8099c3d528 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/22/FileInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/codebuff/22/FileInfo.java\n@@ -29,13 +29,16 @@ import java.io.Serializable;\n public class FileInfo implements Serializable {\n \n     private String path;\n+\n     private String name;\n \n     public FileInfo(String path) {\n         this.path = path;\n+\n         if (this.path.equals(File.separator)) {\n             this.name = this.path;\n-        } else {\n+        }\n+        else {\n             String[] parts = path.split(File.separator.equals(\"\\\\\") ? \"\\\\\\\\\" : File.separator);\n             this.name = parts[parts.length - 1];\n         }\n@@ -53,4 +56,4 @@ public class FileInfo implements Serializable {\n     public String toString() {\n         return path + \" / \" + name;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/22/FileInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/styler_random/22/FileInfo.java\nindex eb56d5caaed..d6a7708d7be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/22/FileInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/styler_random/22/FileInfo.java\n@@ -35,7 +35,8 @@ public class FileInfo implements Serializable {\n         this.path = path;\n         if (this.path.equals(File.separator)) {\n             this.name = this.path;\n-        } else {\n+        }\n+        else {\n             String[] parts = path.split(File.separator.equals(\"\\\\\") ? \"\\\\\\\\\" : File.separator);\n             this.name = parts[parts.length - 1];\n         }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/22/FileInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/styler_three_grams/22/FileInfo.java\nindex eb56d5caaed..d6a7708d7be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/errored/1/22/FileInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/primefaces-primefaces/styler_three_grams/22/FileInfo.java\n@@ -35,7 +35,8 @@ public class FileInfo implements Serializable {\n         this.path = path;\n         if (this.path.equals(File.separator)) {\n             this.name = this.path;\n-        } else {\n+        }\n+        else {\n             String[] parts = path.split(File.separator.equals(\"\\\\\") ? \"\\\\\\\\\" : File.separator);\n             this.name = parts[parts.length - 1];\n         }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize"
    ]
}
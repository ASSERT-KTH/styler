{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "36",
    "information": {
        "errors": [
            {
                "line": "64",
                "column": "68",
                "severity": "warning",
                "message": "'&&' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "    Message requestMessage = mapper.getRequestMessage(operationMeta.getOperationId());\n\n    if (operationMeta.getExtData(Const.PRODUCER_OPERATION) != null &&\n        ((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod() != null) {\n      // producer invocation\n      requestDeserializer = mapper",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/36/OperationProtobuf.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/36/OperationProtobuf.java\nindex e525ebbcfe2..a661ab9e299 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/36/OperationProtobuf.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/36/OperationProtobuf.java\n@@ -61,8 +61,8 @@ public class OperationProtobuf {\n     ProtoMapper mapper = scopedProtobufSchemaManager.getOrCreateProtoMapper(operationMeta.getSchemaMeta());\n     Message requestMessage = mapper.getRequestMessage(operationMeta.getOperationId());\n \n-    if (operationMeta.getExtData(Const.PRODUCER_OPERATION) != null &&\n-        ((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod() != null) {\n+    if (operationMeta.getExtData(Const.PRODUCER_OPERATION) != null\n+    && ((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod() != null) {\n       // producer invocation\n       requestDeserializer = mapper\n           .createRequestRootDeserializer(requestMessage, getMethodParameterTypesMap(\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "64",
                    "column": "68",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/36/OperationProtobuf.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/36/OperationProtobuf.java\nindex e525ebbcfe2..a18b3bd0465 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/36/OperationProtobuf.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/36/OperationProtobuf.java\n@@ -61,8 +61,7 @@ public class OperationProtobuf {\n     ProtoMapper mapper = scopedProtobufSchemaManager.getOrCreateProtoMapper(operationMeta.getSchemaMeta());\n     Message requestMessage = mapper.getRequestMessage(operationMeta.getOperationId());\n \n-    if (operationMeta.getExtData(Const.PRODUCER_OPERATION) != null &&\n-        ((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod() != null) {\n+    if (operationMeta.getExtData(Const.PRODUCER_OPERATION) != null && ((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod() != null) {\n       // producer invocation\n       requestDeserializer = mapper\n           .createRequestRootDeserializer(requestMessage, getMethodParameterTypesMap(\n@@ -71,9 +70,8 @@ public class OperationProtobuf {\n           .createRequestRootSerializer(requestMessage, getMethodParameterTypesMap(\n               ((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod()),\n               false);\n-    } else if (operationMeta.getExtData(Const.CONSUMER_OPERATION) != null\n-        && ((SwaggerConsumerOperation) operationMeta.getExtData(Const.CONSUMER_OPERATION)).getConsumerMethod()\n-        != null) {\n+  } else if (operationMeta.getExtData(Const.CONSUMER_OPERATION) != null\n+        && ((SwaggerConsumerOperation) operationMeta.getExtData(Const.CONSUMER_OPERATION)).getConsumerMethod() != null) {\n       // consumer pojo invocation\n       requestDeserializer = mapper\n           .createRequestRootDeserializer(requestMessage, getMethodParameterTypesMap(\n@@ -82,7 +80,7 @@ public class OperationProtobuf {\n           .createRequestRootSerializer(requestMessage, getMethodParameterTypesMap(\n               ((SwaggerConsumerOperation) operationMeta.getExtData(Const.CONSUMER_OPERATION)).getConsumerMethod()),\n               false);\n-    } else {\n+  } else {\n       // consumer RestTemplate invocation\n       requestSerializer = mapper.createRequestRootSerializer(requestMessage, (Map<String, Type>) null, true);\n       requestDeserializer = mapper.createRequestRootDeserializer(requestMessage, Object.class);\n@@ -133,4 +131,4 @@ public class OperationProtobuf {\n     // TODO : WEAK handles only one response type.\n     throw new IllegalStateException(\"not implemented now, statusCode = \" + statusCode);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 213).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 213).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/36/OperationProtobuf.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/codebuff/36/OperationProtobuf.java\nindex e525ebbcfe2..8358946a625 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/36/OperationProtobuf.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/codebuff/36/OperationProtobuf.java\n@@ -22,10 +22,8 @@ import java.lang.reflect.Parameter;\n import java.lang.reflect.Type;\n import java.util.HashMap;\n import java.util.Map;\n-\n import javax.ws.rs.core.Response.Status;\n import javax.ws.rs.core.Response.Status.Family;\n-\n import org.apache.servicecomb.codec.protobuf.utils.ScopedProtobufSchemaManager;\n import org.apache.servicecomb.core.Const;\n import org.apache.servicecomb.core.definition.OperationMeta;\n@@ -36,7 +34,6 @@ import org.apache.servicecomb.foundation.protobuf.ResponseRootDeserializer;\n import org.apache.servicecomb.foundation.protobuf.RootSerializer;\n import org.apache.servicecomb.swagger.engine.SwaggerConsumerOperation;\n import org.apache.servicecomb.swagger.engine.SwaggerProducerOperation;\n-\n import io.protostuff.compiler.model.Message;\n \n @SuppressWarnings(\"rawtypes\")\n@@ -48,6 +45,7 @@ public class OperationProtobuf {\n   private RequestRootSerializer requestSerializer;\n \n   // For wrapped parameters, this is a Map. While for POJO body, this is an Object.\n+\n   private RequestRootDeserializer<Object> requestDeserializer;\n \n   private RootSerializer responseSerializer;\n@@ -60,41 +58,27 @@ public class OperationProtobuf {\n \n     ProtoMapper mapper = scopedProtobufSchemaManager.getOrCreateProtoMapper(operationMeta.getSchemaMeta());\n     Message requestMessage = mapper.getRequestMessage(operationMeta.getOperationId());\n-\n-    if (operationMeta.getExtData(Const.PRODUCER_OPERATION) != null &&\n-        ((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod() != null) {\n+    if (operationMeta.getExtData(Const.PRODUCER_OPERATION) != null && ((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod() != null) {\n       // producer invocation\n-      requestDeserializer = mapper\n-          .createRequestRootDeserializer(requestMessage, getMethodParameterTypesMap(\n-              ((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod()));\n-      requestSerializer = mapper\n-          .createRequestRootSerializer(requestMessage, getMethodParameterTypesMap(\n-              ((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod()),\n-              false);\n-    } else if (operationMeta.getExtData(Const.CONSUMER_OPERATION) != null\n-        && ((SwaggerConsumerOperation) operationMeta.getExtData(Const.CONSUMER_OPERATION)).getConsumerMethod()\n-        != null) {\n+      requestDeserializer = mapper.createRequestRootDeserializer(requestMessage,\n+getMethodParameterTypesMap(((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod()));\n+      requestSerializer = mapper.createRequestRootSerializer(requestMessage, getMethodParameterTypesMap(((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod()), false);\n+    } else if (operationMeta.getExtData(Const.CONSUMER_OPERATION) != null && ((SwaggerConsumerOperation) operationMeta.getExtData(Const.CONSUMER_OPERATION)).getConsumerMethod() != null) {\n       // consumer pojo invocation\n-      requestDeserializer = mapper\n-          .createRequestRootDeserializer(requestMessage, getMethodParameterTypesMap(\n-              ((SwaggerConsumerOperation) operationMeta.getExtData(Const.CONSUMER_OPERATION)).getConsumerMethod()));\n-      requestSerializer = mapper\n-          .createRequestRootSerializer(requestMessage, getMethodParameterTypesMap(\n-              ((SwaggerConsumerOperation) operationMeta.getExtData(Const.CONSUMER_OPERATION)).getConsumerMethod()),\n-              false);\n+      requestDeserializer = mapper.createRequestRootDeserializer(requestMessage,\n+getMethodParameterTypesMap(((SwaggerConsumerOperation) operationMeta.getExtData(Const.CONSUMER_OPERATION)).getConsumerMethod()));\n+      requestSerializer = mapper.createRequestRootSerializer(requestMessage, getMethodParameterTypesMap(((SwaggerConsumerOperation) operationMeta.getExtData(Const.CONSUMER_OPERATION)).getConsumerMethod()), false);\n     } else {\n       // consumer RestTemplate invocation\n-      requestSerializer = mapper.createRequestRootSerializer(requestMessage, (Map<String, Type>) null, true);\n-      requestDeserializer = mapper.createRequestRootDeserializer(requestMessage, Object.class);\n+             requestSerializer = mapper.createRequestRootSerializer(requestMessage, (Map<String, Type>) null, true);\n+             requestDeserializer = mapper.createRequestRootDeserializer(requestMessage, Object.class);\n     }\n \n     Message responseMessage = mapper.getResponseMessage(operationMeta.getOperationId());\n-    responseSerializer = mapper\n-        .createRootSerializer(responseMessage,\n-            operationMeta.getResponsesMeta().findResponseType(Status.OK.getStatusCode()));\n-    responseDeserializer = mapper\n-        .createResponseRootDeserializer(responseMessage,\n-            operationMeta.getResponsesMeta().findResponseType(Status.OK.getStatusCode()));\n+    responseSerializer = mapper.createRootSerializer(responseMessage,\n+operationMeta.getResponsesMeta().findResponseType(Status.OK.getStatusCode()));\n+    responseDeserializer = mapper.createResponseRootDeserializer(responseMessage,\n+operationMeta.getResponsesMeta().findResponseType(Status.OK.getStatusCode()));\n   }\n \n   private Map<String, Type> getMethodParameterTypesMap(Method method) {\n@@ -131,6 +115,7 @@ public class OperationProtobuf {\n       return responseDeserializer;\n     }\n     // TODO : WEAK handles only one response type.\n+\n     throw new IllegalStateException(\"not implemented now, statusCode = \" + statusCode);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 34
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "64",
                    "column": "68",
                    "severity": "warning",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/36/OperationProtobuf.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/36/OperationProtobuf.java\nindex e525ebbcfe2..a661ab9e299 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/36/OperationProtobuf.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/36/OperationProtobuf.java\n@@ -61,8 +61,8 @@ public class OperationProtobuf {\n     ProtoMapper mapper = scopedProtobufSchemaManager.getOrCreateProtoMapper(operationMeta.getSchemaMeta());\n     Message requestMessage = mapper.getRequestMessage(operationMeta.getOperationId());\n \n-    if (operationMeta.getExtData(Const.PRODUCER_OPERATION) != null &&\n-        ((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod() != null) {\n+    if (operationMeta.getExtData(Const.PRODUCER_OPERATION) != null\n+    && ((SwaggerProducerOperation) operationMeta.getExtData(Const.PRODUCER_OPERATION)).getProducerMethod() != null) {\n       // producer invocation\n       requestDeserializer = mapper\n           .createRequestRootDeserializer(requestMessage, getMethodParameterTypesMap(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
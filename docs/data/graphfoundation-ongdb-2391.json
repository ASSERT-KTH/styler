{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2391",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "76",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2391/Pinger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2391/Pinger.java\nindex f7b0e670c6a..d9d9221f119 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2391/Pinger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2391/Pinger.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.ext.udc.impl;\n \n import java.io.IOException;\n@@ -32,60 +33,59 @@ import static org.neo4j.ext.udc.UdcConstants.PING;\n \n public class Pinger\n {\n-    private final HostnamePort address;\n-    private final UdcInformationCollector collector;\n-    private int pingCount;\n+  private final HostnamePort address;\n+  private final UdcInformationCollector collector;\n+  private int pingCount;\n \n-    public Pinger( HostnamePort address, UdcInformationCollector collector )\n+  public Pinger(HostnamePort address, UdcInformationCollector collector)\n+  {\n+    this.address = address;\n+    this.collector = collector;\n+    if (collector.getCrashPing())\n     {\n-        this.address = address;\n-        this.collector = collector;\n-        if ( collector.getCrashPing() )\n-        {\n-            pingCount = -1;\n-        }\n+      pingCount = -1;\n     }\n+  }\n \n-    public void ping() throws IOException\n-    {\n-        pingCount++;\n+  public void ping() throws IOException\n+  {\n+    pingCount++;\n \n-        Map<String, String> usageDataMap = collector.getUdcParams();\n+    Map<String, String> usageDataMap = collector.getUdcParams();\n \n-        StringBuilder uri = new StringBuilder( \"http://\" + address + \"/\" + \"?\" );\n+    StringBuilder uri = new StringBuilder(\"http://\" + address + \"/\" + \"?\");\n \n-        for ( String key : usageDataMap.keySet() )\n-        {\n-            uri.append( key );\n-            uri.append( \"=\" );\n-            uri.append( URLEncoder.encode( usageDataMap.get( key ), StandardCharsets.UTF_8.name() ) );\n-            uri.append( \"+\" );\n-        }\n+    for (String key : usageDataMap.keySet())\n+    {\n+      uri.append(key);\n+      uri.append(\"=\");\n+      uri.append(URLEncoder.encode(usageDataMap.get(key), StandardCharsets.UTF_8.name()));\n+      uri.append(\"+\");\n+    }\n \n-        // append counts\n-        if ( pingCount == 0 )\n-        {\n-            uri.append( PING + \"=-1\" );\n-            pingCount++;\n-        }\n-        else\n-        {\n-            uri.append( PING + \"=\" ).append( pingCount );\n-        }\n+    // append counts\n+    if (pingCount == 0)\n+    {\n+      uri.append(PING + \"=-1\");\n+      pingCount++;\n+    } else\n+    {\n+      uri.append(PING + \"=\").append(pingCount);\n+    }\n \n-        URL url = new URL( uri.toString() );\n-        URLConnection con = url.openConnection();\n+    URL url = new URL(uri.toString());\n+    URLConnection con = url.openConnection();\n \n-        con.setDoInput( true );\n-        con.setDoOutput( false );\n-        con.setUseCaches( false );\n-        con.connect();\n+    con.setDoInput(true);\n+    con.setDoOutput(false);\n+    con.setUseCaches(false);\n+    con.connect();\n \n-        con.getInputStream().close();\n-    }\n+    con.getInputStream().close();\n+  }\n \n-    public Integer getPingCount()\n-    {\n-        return pingCount;\n-    }\n+  public Integer getPingCount()\n+  {\n+    return pingCount;\n+  }\n }\n",
            "diff_size": 50
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2391/Pinger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2391/Pinger.java\nindex f7b0e670c6a..6f7345abac8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2391/Pinger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2391/Pinger.java\n@@ -50,11 +50,9 @@ public class Pinger\n     {\n         pingCount++;\n \n-        Map<String, String> usageDataMap = collector.getUdcParams();\n-\n-        StringBuilder uri = new StringBuilder( \"http://\" + address + \"/\" + \"?\" );\n-\n-        for ( String key : usageDataMap.keySet() )\n+        Map<String,String> usageDataMap = collector.getUdcParams();\n+StringBuilder uri = new StringBuilder( \"http://\" + address + \"/\" + \"?\" );\n+for ( String key : usageDataMap.keySet() )\n         {\n             uri.append( key );\n             uri.append( \"=\" );\n@@ -75,17 +73,15 @@ public class Pinger\n \n         URL url = new URL( uri.toString() );\n         URLConnection con = url.openConnection();\n-\n-        con.setDoInput( true );\n+con.setDoInput( true );\n         con.setDoOutput( false );\n         con.setUseCaches( false );\n         con.connect();\n-\n-        con.getInputStream().close();\n+con.getInputStream().close();\n     }\n \n     public Integer getPingCount()\n     {\n         return pingCount;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "3100",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "90",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "144",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "148",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "152",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "181",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "248",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "257",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "264",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "277",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "308",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "324",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3100/InteractiveShellRunner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3100/InteractiveShellRunner.java\nindex 3710cb609df..b8a3c66ea57 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3100/InteractiveShellRunner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3100/InteractiveShellRunner.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.cli;\n \n import jline.console.ConsoleReader;\n@@ -86,39 +87,39 @@ public class InteractiveShellRunner implements ShellRunner, SignalHandler\n \n     private AnsiFormattedText continuationPrompt;\n \n-    public InteractiveShellRunner( @Nonnull StatementExecuter executer,\n-                                   @Nonnull TransactionHandler txHandler,\n-                                   @Nonnull DatabaseManager databaseManager,\n-                                   @Nonnull Logger logger,\n-                                   @Nonnull StatementParser statementParser,\n-                                   @Nonnull InputStream inputStream,\n-                                   @Nonnull File historyFile,\n-                                   @Nonnull UserMessagesHandler userMessagesHandler,\n-                                   @Nonnull ConnectionConfig connectionConfig ) throws IOException\n+    public InteractiveShellRunner(@Nonnull StatementExecuter executer,\n+                                  @Nonnull TransactionHandler txHandler,\n+                                  @Nonnull DatabaseManager databaseManager,\n+                                  @Nonnull Logger logger,\n+                                  @Nonnull StatementParser statementParser,\n+                                  @Nonnull InputStream inputStream,\n+                                  @Nonnull File historyFile,\n+                                  @Nonnull UserMessagesHandler userMessagesHandler,\n+                                  @Nonnull ConnectionConfig connectionConfig) throws IOException\n     {\n         this.userMessagesHandler = userMessagesHandler;\n-        this.currentlyExecuting = new AtomicBoolean( false );\n+        this.currentlyExecuting = new AtomicBoolean(false);\n         this.executer = executer;\n         this.txHandler = txHandler;\n         this.databaseManager = databaseManager;\n         this.logger = logger;\n         this.statementParser = statementParser;\n-        this.reader = setupConsoleReader( logger, inputStream );\n-        this.historian = FileHistorian.setupHistory( reader, logger, historyFile );\n+        this.reader = setupConsoleReader(logger, inputStream);\n+        this.historian = FileHistorian.setupHistory(reader, logger, historyFile);\n         this.connectionConfig = connectionConfig;\n \n         // Catch ctrl-c\n-        Signal.handle( new Signal( INTERRUPT_SIGNAL ), this );\n+        Signal.handle(new Signal(INTERRUPT_SIGNAL), this);\n     }\n \n-    private ConsoleReader setupConsoleReader( @Nonnull Logger logger,\n-                                              @Nonnull InputStream inputStream ) throws IOException\n+    private ConsoleReader setupConsoleReader(@Nonnull Logger logger,\n+                                             @Nonnull InputStream inputStream) throws IOException\n     {\n-        ConsoleReader reader = new ConsoleReader( inputStream, logger.getOutputStream() );\n+        ConsoleReader reader = new ConsoleReader(inputStream, logger.getOutputStream());\n         // Disable expansion of bangs: !\n-        reader.setExpandEvents( false );\n+        reader.setExpandEvents(false);\n         // Ensure Reader does not handle user input for ctrl+C behaviour\n-        reader.setHandleUserInterrupt( false );\n+        reader.setHandleUserInterrupt(false);\n         return reader;\n     }\n \n@@ -128,39 +129,35 @@ public class InteractiveShellRunner implements ShellRunner, SignalHandler\n         int exitCode = Main.EXIT_SUCCESS;\n         boolean running = true;\n \n-        logger.printIfVerbose( userMessagesHandler.getWelcomeMessage() );\n+        logger.printIfVerbose(userMessagesHandler.getWelcomeMessage());\n \n-        while ( running )\n+        while (running)\n         {\n             try\n             {\n-                for ( String statement : readUntilStatement() )\n+                for (String statement : readUntilStatement())\n                 {\n-                    currentlyExecuting.set( true );\n-                    executer.execute( statement );\n-                    currentlyExecuting.set( false );\n+                    currentlyExecuting.set(true);\n+                    executer.execute(statement);\n+                    currentlyExecuting.set(false);\n                 }\n-            }\n-            catch ( ExitException e )\n+            } catch (ExitException e)\n             {\n                 exitCode = e.getCode();\n                 running = false;\n-            }\n-            catch ( NoMoreInputException e )\n+            } catch (NoMoreInputException e)\n             {\n                 // User pressed Ctrl-D and wants to exit\n                 running = false;\n-            }\n-            catch ( Throwable e )\n+            } catch (Throwable e)\n             {\n-                logger.printError( e );\n-            }\n-            finally\n+                logger.printError(e);\n+            } finally\n             {\n-                currentlyExecuting.set( false );\n+                currentlyExecuting.set(false);\n             }\n         }\n-        logger.printIfVerbose( userMessagesHandler.getExitMessage() );\n+        logger.printIfVerbose(userMessagesHandler.getExitMessage());\n         return exitCode;\n     }\n \n@@ -181,24 +178,24 @@ public class InteractiveShellRunner implements ShellRunner, SignalHandler\n     @Nonnull\n     public List<String> readUntilStatement() throws IOException, NoMoreInputException\n     {\n-        while ( true )\n+        while (true)\n         {\n-            String line = reader.readLine( updateAndGetPrompt().renderedString() );\n-            if ( line == null )\n+            String line = reader.readLine(updateAndGetPrompt().renderedString());\n+            if (line == null)\n             {\n                 // User hit CTRL-D, or file ended\n                 throw new NoMoreInputException();\n             }\n \n             // Empty lines are ignored if nothing has been read yet\n-            if ( line.trim().isEmpty() && !statementParser.containsText() )\n+            if (line.trim().isEmpty() && !statementParser.containsText())\n             {\n                 continue;\n             }\n \n-            statementParser.parseMoreText( line + \"\\n\" );\n+            statementParser.parseMoreText(line + \"\\n\");\n \n-            if ( statementParser.hasStatements() )\n+            if (statementParser.hasStatements())\n             {\n                 return statementParser.consumeStatements();\n             }\n@@ -210,63 +207,61 @@ public class InteractiveShellRunner implements ShellRunner, SignalHandler\n      */\n     AnsiFormattedText updateAndGetPrompt()\n     {\n-        if ( statementParser.containsText() )\n+        if (statementParser.containsText())\n         {\n             return continuationPrompt;\n         }\n \n         String databaseName = databaseManager.getActualDatabaseAsReportedByServer();\n-        if ( databaseName == null || ABSENT_DB_NAME.equals( databaseName ) )\n+        if (databaseName == null || ABSENT_DB_NAME.equals(databaseName))\n         {\n             // We have failed to get a successful response from the connection ping query\n             // Build the prompt from the db name as set by the user + a suffix indicating that we are in a disconnected state\n             String dbNameSetByUser = databaseManager.getActiveDatabaseAsSetByUser();\n-            databaseName = ABSENT_DB_NAME.equals( dbNameSetByUser ) ? UNRESOLVED_DEFAULT_DB_PROPMPT_TEXT : dbNameSetByUser;\n+            databaseName = ABSENT_DB_NAME.equals(dbNameSetByUser) ? UNRESOLVED_DEFAULT_DB_PROPMPT_TEXT : dbNameSetByUser;\n         }\n \n-        String errorSuffix = getErrorPrompt( executer.lastNeo4jErrorCode() );\n+        String errorSuffix = getErrorPrompt(executer.lastNeo4jErrorCode());\n \n         int promptIndent = connectionConfig.username().length() +\n-                           USERNAME_DB_DELIMITER.length() +\n-                           databaseName.length() +\n-                           errorSuffix.length() +\n-                           FRESH_PROMPT.length();\n+          USERNAME_DB_DELIMITER.length() +\n+          databaseName.length() +\n+          errorSuffix.length() +\n+          FRESH_PROMPT.length();\n \n         AnsiFormattedText prePrompt = AnsiFormattedText.s().bold()\n-                                                       .append( connectionConfig.username() )\n-                                                       .append( \"@\" )\n-                                                       .append( databaseName );\n+          .append(connectionConfig.username())\n+          .append(\"@\")\n+          .append(databaseName);\n \n         // If we encountered an error with the connection ping query we display it in the prompt in RED\n-        if ( !errorSuffix.isEmpty() )\n+        if (!errorSuffix.isEmpty())\n         {\n-            prePrompt.colorRed().append( errorSuffix ).colorDefault();\n+            prePrompt.colorRed().append(errorSuffix).colorDefault();\n         }\n \n-        if ( promptIndent <= ONELINE_PROMPT_MAX_LENGTH )\n+        if (promptIndent <= ONELINE_PROMPT_MAX_LENGTH)\n         {\n-            continuationPrompt = AnsiFormattedText.s().bold().append( OutputFormatter.repeat( ' ', promptIndent ) );\n+            continuationPrompt = AnsiFormattedText.s().bold().append(OutputFormatter.repeat(' ', promptIndent));\n             return prePrompt\n-                    .append( txHandler.isTransactionOpen() ? TRANSACTION_PROMPT : FRESH_PROMPT );\n-        }\n-        else\n+              .append(txHandler.isTransactionOpen() ? TRANSACTION_PROMPT : FRESH_PROMPT);\n+        } else\n         {\n             continuationPrompt = AnsiFormattedText.s().bold();\n             return prePrompt\n-                    .appendNewLine()\n-                    .append( txHandler.isTransactionOpen() ? TRANSACTION_PROMPT : FRESH_PROMPT );\n+              .appendNewLine()\n+              .append(txHandler.isTransactionOpen() ? TRANSACTION_PROMPT : FRESH_PROMPT);\n         }\n     }\n \n-    private String getErrorPrompt( String errorCode )\n+    private String getErrorPrompt(String errorCode)\n     {\n         // NOTE: errorCode can be null\n         String errorPromptSuffix;\n-        if ( DATABASE_UNAVAILABLE_ERROR_CODE.equals( errorCode ) )\n+        if (DATABASE_UNAVAILABLE_ERROR_CODE.equals(errorCode))\n         {\n             errorPromptSuffix = DATABASE_UNAVAILABLE_ERROR_PROMPT_TEXT;\n-        }\n-        else\n+        } else\n         {\n             errorPromptSuffix = \"\";\n         }\n@@ -279,24 +274,23 @@ public class InteractiveShellRunner implements ShellRunner, SignalHandler\n      * @param signal to handle\n      */\n     @Override\n-    public void handle( final Signal signal )\n+    public void handle(final Signal signal)\n     {\n         // Stop any running cypher statements\n-        if ( currentlyExecuting.get() )\n+        if (currentlyExecuting.get())\n         {\n             executer.reset();\n-        }\n-        else\n+        } else\n         {\n             // Print a literal newline here to get around us being in the middle of the prompt\n             logger.printError(\n-                    AnsiFormattedText.s().colorRed()\n-                                     .append( \"\\nInterrupted (Note that Cypher queries must end with a \" )\n-                                     .bold().append( \"semicolon. \" ).boldOff()\n-                                     .append( \"Type \" )\n-                                     .bold().append( Exit.COMMAND_NAME ).append( \" \" ).boldOff()\n-                                     .append( \"to exit the shell.)\" )\n-                                     .formattedString() );\n+              AnsiFormattedText.s().colorRed()\n+                .append(\"\\nInterrupted (Note that Cypher queries must end with a \")\n+                .bold().append(\"semicolon. \").boldOff()\n+                .append(\"Type \")\n+                .bold().append(Exit.COMMAND_NAME).append(\" \").boldOff()\n+                .append(\"to exit the shell.)\")\n+                .formattedString());\n             // Clear any text which has been inputted\n             resetPrompt();\n         }\n@@ -311,12 +305,12 @@ public class InteractiveShellRunner implements ShellRunner, SignalHandler\n         {\n             // Clear whatever text has currently been inputted\n             boolean more = true;\n-            while ( more )\n+            while (more)\n             {\n                 more = reader.delete();\n             }\n             more = true;\n-            while ( more )\n+            while (more)\n             {\n                 more = reader.backspace();\n             }\n@@ -324,13 +318,12 @@ public class InteractiveShellRunner implements ShellRunner, SignalHandler\n             statementParser.reset();\n \n             // Redraw the prompt now because the error message has changed the terminal text\n-            reader.setPrompt( updateAndGetPrompt().renderedString() );\n+            reader.setPrompt(updateAndGetPrompt().renderedString());\n             reader.redrawLine();\n             reader.flush();\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n-            logger.printError( e );\n+            logger.printError(e);\n         }\n     }\n }\n",
            "diff_size": 83
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3100/InteractiveShellRunner.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3100/InteractiveShellRunner.java\nindex 3710cb609df..ddf24be3ca9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3100/InteractiveShellRunner.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/3100/InteractiveShellRunner.java\n@@ -232,12 +232,11 @@ public class InteractiveShellRunner implements ShellRunner, SignalHandler\n                            errorSuffix.length() +\n                            FRESH_PROMPT.length();\n \n-        AnsiFormattedText prePrompt = AnsiFormattedText.s().bold()\n-                                                       .append( connectionConfig.username() )\n+        AnsiFormattedText prePrompt = AnsiFormattedText.s().bold().append( connectionConfig.username() )\n                                                        .append( \"@\" )\n                                                        .append( databaseName );\n \n-        // If we encountered an error with the connection ping query we display it in the prompt in RED\n+// If we encountered an error with the connection ping query we display it in the prompt in RED\n         if ( !errorSuffix.isEmpty() )\n         {\n             prePrompt.colorRed().append( errorSuffix ).colorDefault();\n@@ -333,4 +332,4 @@ public class InteractiveShellRunner implements ShellRunner, SignalHandler\n             logger.printError( e );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
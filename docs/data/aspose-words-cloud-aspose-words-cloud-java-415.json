{
    "project_name": "aspose-words-cloud-aspose-words-cloud-java",
    "error_id": "415",
    "information": {
        "errors": [
            {
                "line": "500",
                "column": "55",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    TableCellFormat tableCellFormat = (TableCellFormat)o;\n    return\n        Objects.equals(this.bottomPadding, tableCellFormat.bottomPadding) &&\n        Objects.equals(this.fitText, tableCellFormat.fitText) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/415/TableCellFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/415/TableCellFormat.java\nindex 2b29d328453..7b8aa1c6c06 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/415/TableCellFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/415/TableCellFormat.java\n@@ -497,7 +497,7 @@ public class TableCellFormat extends LinkElement {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    TableCellFormat tableCellFormat = (TableCellFormat)o;\n+    TableCellFormat tableCellFormat = (TableCellFormat) o;\n     return\n         Objects.equals(this.bottomPadding, tableCellFormat.bottomPadding) &&\n         Objects.equals(this.fitText, tableCellFormat.fitText) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/415/TableCellFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/415/TableCellFormat.java\nindex 2b29d328453..384a3a51df0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/415/TableCellFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/415/TableCellFormat.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -80,7 +83,7 @@ public class TableCellFormat extends LinkElement {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< HorizontalMergeEnum > {\n+        public static class Adapter extends TypeAdapter<HorizontalMergeEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final HorizontalMergeEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -130,7 +133,7 @@ public class TableCellFormat extends LinkElement {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< OrientationEnum > {\n+        public static class Adapter extends TypeAdapter<OrientationEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final OrientationEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -177,7 +180,7 @@ public class TableCellFormat extends LinkElement {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< VerticalAlignmentEnum > {\n+        public static class Adapter extends TypeAdapter<VerticalAlignmentEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final VerticalAlignmentEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -224,7 +227,7 @@ public class TableCellFormat extends LinkElement {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< VerticalMergeEnum > {\n+        public static class Adapter extends TypeAdapter<VerticalMergeEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final VerticalMergeEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -273,6 +276,7 @@ public class TableCellFormat extends LinkElement {\n \n     @SerializedName(\"WrapText\")\n     private Boolean wrapText = null;\n+\n     public TableCellFormat bottomPadding(Double bottomPadding) {\n         this.bottomPadding = bottomPadding;\n         return this;\n@@ -280,8 +284,9 @@ public class TableCellFormat extends LinkElement {\n \n     /**\n      * Gets or sets returns or sets the amount of space (in points) to add below the contents of cell.\n-    * @return bottomPadding\n-    **/\n+     *\n+     * @return bottomPadding\n+     **/\n     @ApiModelProperty(value = \"Gets or sets returns or sets the amount of space (in points) to add below the contents of cell.\")\n     public Double getBottomPadding() {\n         return bottomPadding;\n@@ -298,8 +303,9 @@ public class TableCellFormat extends LinkElement {\n \n     /**\n      * Gets or sets if true, fits text in the cell, compressing each paragraph to the width of the cell.\n-    * @return fitText\n-    **/\n+     *\n+     * @return fitText\n+     **/\n     @ApiModelProperty(value = \"Gets or sets if true, fits text in the cell, compressing each paragraph to the width of the cell.\")\n     public Boolean getFitText() {\n         return fitText;\n@@ -316,8 +322,9 @@ public class TableCellFormat extends LinkElement {\n \n     /**\n      * Gets or sets specifies how the cell is merged horizontally with other cells in the row.\n-    * @return horizontalMerge\n-    **/\n+     *\n+     * @return horizontalMerge\n+     **/\n     @ApiModelProperty(value = \"Gets or sets specifies how the cell is merged horizontally with other cells in the row.\")\n     public HorizontalMergeEnum getHorizontalMerge() {\n         return horizontalMerge;\n@@ -334,8 +341,9 @@ public class TableCellFormat extends LinkElement {\n \n     /**\n      * Gets or sets returns or sets the amount of space (in points) to add to the left of the contents of cell.\n-    * @return leftPadding\n-    **/\n+     *\n+     * @return leftPadding\n+     **/\n     @ApiModelProperty(value = \"Gets or sets returns or sets the amount of space (in points) to add to the left of the contents of cell.\")\n     public Double getLeftPadding() {\n         return leftPadding;\n@@ -352,8 +360,9 @@ public class TableCellFormat extends LinkElement {\n \n     /**\n      * Gets or sets returns or sets the orientation of text in a table cell.\n-    * @return orientation\n-    **/\n+     *\n+     * @return orientation\n+     **/\n     @ApiModelProperty(value = \"Gets or sets returns or sets the orientation of text in a table cell.\")\n     public OrientationEnum getOrientation() {\n         return orientation;\n@@ -370,8 +379,9 @@ public class TableCellFormat extends LinkElement {\n \n     /**\n      * Gets or sets returns or sets the preferred width of the cell.\n-    * @return preferredWidth\n-    **/\n+     *\n+     * @return preferredWidth\n+     **/\n     @ApiModelProperty(value = \"Gets or sets returns or sets the preferred width of the cell.\")\n     public PreferredWidth getPreferredWidth() {\n         return preferredWidth;\n@@ -388,8 +398,9 @@ public class TableCellFormat extends LinkElement {\n \n     /**\n      * Gets or sets returns or sets the amount of space (in points) to add to the right of the contents of cell.\n-    * @return rightPadding\n-    **/\n+     *\n+     * @return rightPadding\n+     **/\n     @ApiModelProperty(value = \"Gets or sets returns or sets the amount of space (in points) to add to the right of the contents of cell.\")\n     public Double getRightPadding() {\n         return rightPadding;\n@@ -406,8 +417,9 @@ public class TableCellFormat extends LinkElement {\n \n     /**\n      * Gets or sets returns or sets the amount of space (in points) to add above the contents of cell.\n-    * @return topPadding\n-    **/\n+     *\n+     * @return topPadding\n+     **/\n     @ApiModelProperty(value = \"Gets or sets returns or sets the amount of space (in points) to add above the contents of cell.\")\n     public Double getTopPadding() {\n         return topPadding;\n@@ -424,8 +436,9 @@ public class TableCellFormat extends LinkElement {\n \n     /**\n      * Gets or sets returns or sets the vertical alignment of text in the cell.\n-    * @return verticalAlignment\n-    **/\n+     *\n+     * @return verticalAlignment\n+     **/\n     @ApiModelProperty(value = \"Gets or sets returns or sets the vertical alignment of text in the cell.\")\n     public VerticalAlignmentEnum getVerticalAlignment() {\n         return verticalAlignment;\n@@ -442,8 +455,9 @@ public class TableCellFormat extends LinkElement {\n \n     /**\n      * Gets or sets specifies how the cell is merged with other cells vertically.\n-    * @return verticalMerge\n-    **/\n+     *\n+     * @return verticalMerge\n+     **/\n     @ApiModelProperty(value = \"Gets or sets specifies how the cell is merged with other cells vertically.\")\n     public VerticalMergeEnum getVerticalMerge() {\n         return verticalMerge;\n@@ -460,8 +474,9 @@ public class TableCellFormat extends LinkElement {\n \n     /**\n      * Gets or sets the width of the cell in points.\n-    * @return width\n-    **/\n+     *\n+     * @return width\n+     **/\n     @ApiModelProperty(value = \"Gets or sets the width of the cell in points.\")\n     public Double getWidth() {\n         return width;\n@@ -478,8 +493,9 @@ public class TableCellFormat extends LinkElement {\n \n     /**\n      * Gets or sets if true, wrap text for the cell.\n-    * @return wrapText\n-    **/\n+     *\n+     * @return wrapText\n+     **/\n     @ApiModelProperty(value = \"Gets or sets if true, wrap text for the cell.\")\n     public Boolean getWrapText() {\n         return wrapText;\n@@ -497,57 +513,57 @@ public class TableCellFormat extends LinkElement {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    TableCellFormat tableCellFormat = (TableCellFormat)o;\n-    return\n-        Objects.equals(this.bottomPadding, tableCellFormat.bottomPadding) &&\n-        Objects.equals(this.fitText, tableCellFormat.fitText) &&\n-        Objects.equals(this.horizontalMerge, tableCellFormat.horizontalMerge) &&\n-        Objects.equals(this.leftPadding, tableCellFormat.leftPadding) &&\n-        Objects.equals(this.orientation, tableCellFormat.orientation) &&\n-        Objects.equals(this.preferredWidth, tableCellFormat.preferredWidth) &&\n-        Objects.equals(this.rightPadding, tableCellFormat.rightPadding) &&\n-        Objects.equals(this.topPadding, tableCellFormat.topPadding) &&\n-        Objects.equals(this.verticalAlignment, tableCellFormat.verticalAlignment) &&\n-        Objects.equals(this.verticalMerge, tableCellFormat.verticalMerge) &&\n-        Objects.equals(this.width, tableCellFormat.width) &&\n-        Objects.equals(this.wrapText, tableCellFormat.wrapText) &&\n-        super.equals(o);\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    return Objects.hash(bottomPadding, fitText, horizontalMerge, leftPadding, orientation, preferredWidth, rightPadding, topPadding, verticalAlignment, verticalMerge, width, wrapText, super.hashCode());\n-  }\n-\n-  @Override\n-  public String toString() {\n-    StringBuilder sb = new StringBuilder();\n-    sb.append(\"class TableCellFormat {\\n\");\n-    sb.append(\"    \").append(toIndentedString(super.toString())).append(\"\\n\");\n-    sb.append(\"    bottomPadding: \").append(toIndentedString(bottomPadding)).append(\"\\n\");\n-    sb.append(\"    fitText: \").append(toIndentedString(fitText)).append(\"\\n\");\n-    sb.append(\"    horizontalMerge: \").append(toIndentedString(horizontalMerge)).append(\"\\n\");\n-    sb.append(\"    leftPadding: \").append(toIndentedString(leftPadding)).append(\"\\n\");\n-    sb.append(\"    orientation: \").append(toIndentedString(orientation)).append(\"\\n\");\n-    sb.append(\"    preferredWidth: \").append(toIndentedString(preferredWidth)).append(\"\\n\");\n-    sb.append(\"    rightPadding: \").append(toIndentedString(rightPadding)).append(\"\\n\");\n-    sb.append(\"    topPadding: \").append(toIndentedString(topPadding)).append(\"\\n\");\n-    sb.append(\"    verticalAlignment: \").append(toIndentedString(verticalAlignment)).append(\"\\n\");\n-    sb.append(\"    verticalMerge: \").append(toIndentedString(verticalMerge)).append(\"\\n\");\n-    sb.append(\"    width: \").append(toIndentedString(width)).append(\"\\n\");\n-    sb.append(\"    wrapText: \").append(toIndentedString(wrapText)).append(\"\\n\");\n-    sb.append(\"}\");\n-    return sb.toString();\n-  }\n-\n-  /**\n-   * Convert the given object to string with each line indented by 4 spaces\n-   * (except the first line).\n-   */\n-  private String toIndentedString(java.lang.Object o) {\n-    if (o == null) {\n-      return \"null\";\n-    }\n-    return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n+        TableCellFormat tableCellFormat = (TableCellFormat) o;\n+        return\n+            Objects.equals(this.bottomPadding, tableCellFormat.bottomPadding) &&\n+                Objects.equals(this.fitText, tableCellFormat.fitText) &&\n+                Objects.equals(this.horizontalMerge, tableCellFormat.horizontalMerge) &&\n+                Objects.equals(this.leftPadding, tableCellFormat.leftPadding) &&\n+                Objects.equals(this.orientation, tableCellFormat.orientation) &&\n+                Objects.equals(this.preferredWidth, tableCellFormat.preferredWidth) &&\n+                Objects.equals(this.rightPadding, tableCellFormat.rightPadding) &&\n+                Objects.equals(this.topPadding, tableCellFormat.topPadding) &&\n+                Objects.equals(this.verticalAlignment, tableCellFormat.verticalAlignment) &&\n+                Objects.equals(this.verticalMerge, tableCellFormat.verticalMerge) &&\n+                Objects.equals(this.width, tableCellFormat.width) &&\n+                Objects.equals(this.wrapText, tableCellFormat.wrapText) &&\n+                super.equals(o);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(bottomPadding, fitText, horizontalMerge, leftPadding, orientation, preferredWidth, rightPadding, topPadding, verticalAlignment, verticalMerge, width, wrapText, super.hashCode());\n+    }\n+\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"class TableCellFormat {\\n\");\n+        sb.append(\"    \").append(toIndentedString(super.toString())).append(\"\\n\");\n+        sb.append(\"    bottomPadding: \").append(toIndentedString(bottomPadding)).append(\"\\n\");\n+        sb.append(\"    fitText: \").append(toIndentedString(fitText)).append(\"\\n\");\n+        sb.append(\"    horizontalMerge: \").append(toIndentedString(horizontalMerge)).append(\"\\n\");\n+        sb.append(\"    leftPadding: \").append(toIndentedString(leftPadding)).append(\"\\n\");\n+        sb.append(\"    orientation: \").append(toIndentedString(orientation)).append(\"\\n\");\n+        sb.append(\"    preferredWidth: \").append(toIndentedString(preferredWidth)).append(\"\\n\");\n+        sb.append(\"    rightPadding: \").append(toIndentedString(rightPadding)).append(\"\\n\");\n+        sb.append(\"    topPadding: \").append(toIndentedString(topPadding)).append(\"\\n\");\n+        sb.append(\"    verticalAlignment: \").append(toIndentedString(verticalAlignment)).append(\"\\n\");\n+        sb.append(\"    verticalMerge: \").append(toIndentedString(verticalMerge)).append(\"\\n\");\n+        sb.append(\"    width: \").append(toIndentedString(width)).append(\"\\n\");\n+        sb.append(\"    wrapText: \").append(toIndentedString(wrapText)).append(\"\\n\");\n+        sb.append(\"}\");\n+        return sb.toString();\n+    }\n+\n+    /**\n+     * Convert the given object to string with each line indented by 4 spaces\n+     * (except the first line).\n+     */\n+    private String toIndentedString(java.lang.Object o) {\n+        if (o == null) {\n+            return \"null\";\n+        }\n+        return o.toString().replace(\"\\n\", \"\\n    \");\n+    }\n }\n",
            "diff_size": 99
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "513",
                    "column": "51",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/415/TableCellFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/naturalize/415/TableCellFormat.java\nindex 2b29d328453..27acae404d5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/415/TableCellFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/naturalize/415/TableCellFormat.java\n@@ -53,8 +53,10 @@ public class TableCellFormat extends LinkElement {\n     @JsonAdapter(HorizontalMergeEnum.Adapter.class)\n     public enum HorizontalMergeEnum {\n         NONE(\"None\"),\n-        FIRST(\"First\"),\n-        PREVIOUS(\"Previous\");\n+\n+FIRST(\"First\"),\n+\n+PREVIOUS(\"Previous\");\n \n         private String value;\n \n@@ -80,7 +82,7 @@ public class TableCellFormat extends LinkElement {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< HorizontalMergeEnum > {\n+        public static class Adapter extends TypeAdapter<HorizontalMergeEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final HorizontalMergeEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -100,11 +102,16 @@ public class TableCellFormat extends LinkElement {\n     @JsonAdapter(OrientationEnum.Adapter.class)\n     public enum OrientationEnum {\n         HORIZONTAL(\"Horizontal\"),\n-        DOWNWARD(\"Downward\"),\n-        UPWARD(\"Upward\"),\n-        HORIZONTALROTATEDFAREAST(\"HorizontalRotatedFarEast\"),\n-        VERTICALFAREAST(\"VerticalFarEast\"),\n-        VERTICALROTATEDFAREAST(\"VerticalRotatedFarEast\");\n+\n+DOWNWARD(\"Downward\"),\n+\n+UPWARD(\"Upward\"),\n+\n+HORIZONTALROTATEDFAREAST(\"HorizontalRotatedFarEast\"),\n+\n+VERTICALFAREAST(\"VerticalFarEast\"),\n+\n+VERTICALROTATEDFAREAST(\"VerticalRotatedFarEast\");\n \n         private String value;\n \n@@ -130,7 +137,7 @@ public class TableCellFormat extends LinkElement {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< OrientationEnum > {\n+        public static class Adapter extends TypeAdapter<OrientationEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final OrientationEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -150,8 +157,10 @@ public class TableCellFormat extends LinkElement {\n     @JsonAdapter(VerticalAlignmentEnum.Adapter.class)\n     public enum VerticalAlignmentEnum {\n         TOP(\"Top\"),\n-        CENTER(\"Center\"),\n-        BOTTOM(\"Bottom\");\n+\n+CENTER(\"Center\"),\n+\n+BOTTOM(\"Bottom\");\n \n         private String value;\n \n@@ -177,7 +186,7 @@ public class TableCellFormat extends LinkElement {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< VerticalAlignmentEnum > {\n+        public static class Adapter extends TypeAdapter<VerticalAlignmentEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final VerticalAlignmentEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -197,8 +206,10 @@ public class TableCellFormat extends LinkElement {\n     @JsonAdapter(VerticalMergeEnum.Adapter.class)\n     public enum VerticalMergeEnum {\n         NONE(\"None\"),\n-        FIRST(\"First\"),\n-        PREVIOUS(\"Previous\");\n+\n+FIRST(\"First\"),\n+\n+PREVIOUS(\"Previous\");\n \n         private String value;\n \n@@ -224,7 +235,7 @@ public class TableCellFormat extends LinkElement {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< VerticalMergeEnum > {\n+        public static class Adapter extends TypeAdapter<VerticalMergeEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final VerticalMergeEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -273,7 +284,8 @@ public class TableCellFormat extends LinkElement {\n \n     @SerializedName(\"WrapText\")\n     private Boolean wrapText = null;\n-    public TableCellFormat bottomPadding(Double bottomPadding) {\n+\n+public TableCellFormat bottomPadding(Double bottomPadding) {\n         this.bottomPadding = bottomPadding;\n         return this;\n     }\n@@ -493,13 +505,13 @@ public class TableCellFormat extends LinkElement {\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n             return true;\n-        }\n+  }\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    TableCellFormat tableCellFormat = (TableCellFormat)o;\n-    return\n-        Objects.equals(this.bottomPadding, tableCellFormat.bottomPadding) &&\n+\n+TableCellFormat tableCellFormat = (TableCellFormat)o;\n+    return Objects.equals(this.bottomPadding, tableCellFormat.bottomPadding) &&\n         Objects.equals(this.fitText, tableCellFormat.fitText) &&\n         Objects.equals(this.horizontalMerge, tableCellFormat.horizontalMerge) &&\n         Objects.equals(this.leftPadding, tableCellFormat.leftPadding) &&\n@@ -550,4 +562,4 @@ public class TableCellFormat extends LinkElement {\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 33
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/415/TableCellFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/415/TableCellFormat.java\nindex 2b29d328453..a1fc180e087 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/415/TableCellFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/415/TableCellFormat.java\n@@ -45,480 +45,533 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * Represents all formatting for a table row.\n  */\n+\n+\n @ApiModel(description = \"Represents all formatting for a table row.\")\n+\n public class TableCellFormat extends LinkElement {\n     /**\n      * Gets or sets specifies how the cell is merged horizontally with other cells in the row.\n      */\n-    @JsonAdapter(HorizontalMergeEnum.Adapter.class)\n-    public enum HorizontalMergeEnum {\n-        NONE(\"None\"),\n-        FIRST(\"First\"),\n-        PREVIOUS(\"Previous\");\n+  @JsonAdapter(HorizontalMergeEnum.Adapter.class)\n+  public enum HorizontalMergeEnum {\n+    NONE(\"None\"),\n \n-        private String value;\n+    FIRST(\"First\"),\n \n-        HorizontalMergeEnum(String value) {\n-            this.value = value;\n-        }\n+    PREVIOUS(\"Previous\");\n \n-        public String getValue() {\n-            return value;\n-        }\n+    private String value;\n \n-        @Override\n-        public String toString() {\n-            return String.valueOf(value);\n-        }\n+    HorizontalMergeEnum(String value) {\n+      this.value = value;\n+    }\n \n-        public static HorizontalMergeEnum fromValue(String text) {\n-            for (HorizontalMergeEnum b : HorizontalMergeEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n-        }\n+    public String getValue() {\n+      return value;\n+    }\n+\n+    @Override\n+    public String toString() {\n+      return String.valueOf(value);\n+    }\n \n-        public static class Adapter extends TypeAdapter< HorizontalMergeEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final HorizontalMergeEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public HorizontalMergeEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return HorizontalMergeEnum.fromValue(String.valueOf(value));\n-            }\n+    public static HorizontalMergeEnum fromValue(String text) {\n+      for (HorizontalMergeEnum b : HorizontalMergeEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+          return b;\n         }\n+      }\n+      return null;\n     }\n \n+    public static class Adapter extends TypeAdapter<HorizontalMergeEnum> {\n+      @Override\n+      public void write(final JsonWriter jsonWriter, final HorizontalMergeEnum enumeration) throws IOException {\n+        jsonWriter.value(enumeration.getValue());\n+      }\n+\n+\n+      @Override\n+      public HorizontalMergeEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return HorizontalMergeEnum.fromValue(String.valueOf(value));\n+      }\n+    }\n+  }\n+\n     /**\n      * Gets or sets returns or sets the orientation of text in a table cell.\n      */\n-    @JsonAdapter(OrientationEnum.Adapter.class)\n-    public enum OrientationEnum {\n-        HORIZONTAL(\"Horizontal\"),\n-        DOWNWARD(\"Downward\"),\n-        UPWARD(\"Upward\"),\n-        HORIZONTALROTATEDFAREAST(\"HorizontalRotatedFarEast\"),\n-        VERTICALFAREAST(\"VerticalFarEast\"),\n-        VERTICALROTATEDFAREAST(\"VerticalRotatedFarEast\");\n-\n-        private String value;\n-\n-        OrientationEnum(String value) {\n-            this.value = value;\n-        }\n \n-        public String getValue() {\n-            return value;\n-        }\n \n-        @Override\n-        public String toString() {\n-            return String.valueOf(value);\n-        }\n+  @JsonAdapter(OrientationEnum.Adapter.class)\n+  public enum OrientationEnum {\n+    HORIZONTAL(\"Horizontal\"),\n \n-        public static OrientationEnum fromValue(String text) {\n-            for (OrientationEnum b : OrientationEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n-        }\n+    DOWNWARD(\"Downward\"),\n+\n+    UPWARD(\"Upward\"),\n+\n+    HORIZONTALROTATEDFAREAST(\"HorizontalRotatedFarEast\"),\n \n-        public static class Adapter extends TypeAdapter< OrientationEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final OrientationEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public OrientationEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return OrientationEnum.fromValue(String.valueOf(value));\n-            }\n+    VERTICALFAREAST(\"VerticalFarEast\"),\n+\n+    VERTICALROTATEDFAREAST(\"VerticalRotatedFarEast\");\n+\n+    private String value;\n+\n+    OrientationEnum(String value) {\n+      this.value = value;\n+    }\n+\n+    public String getValue() {\n+      return value;\n+    }\n+\n+    @Override\n+    public String toString() {\n+      return String.valueOf(value);\n+    }\n+\n+    public static OrientationEnum fromValue(String text) {\n+      for (OrientationEnum b : OrientationEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+          return b;\n         }\n+      }\n+      return null;\n+    }\n+\n+    public static class Adapter extends TypeAdapter<OrientationEnum> {\n+      @Override\n+      public void write(final JsonWriter jsonWriter, final OrientationEnum enumeration) throws IOException {\n+        jsonWriter.value(enumeration.getValue());\n+      }\n+\n+\n+      @Override\n+      public OrientationEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return OrientationEnum.fromValue(String.valueOf(value));\n+      }\n     }\n+  }\n \n     /**\n      * Gets or sets returns or sets the vertical alignment of text in the cell.\n      */\n-    @JsonAdapter(VerticalAlignmentEnum.Adapter.class)\n-    public enum VerticalAlignmentEnum {\n-        TOP(\"Top\"),\n-        CENTER(\"Center\"),\n-        BOTTOM(\"Bottom\");\n \n-        private String value;\n \n-        VerticalAlignmentEnum(String value) {\n-            this.value = value;\n-        }\n+  @JsonAdapter(VerticalAlignmentEnum.Adapter.class)\n+  public enum VerticalAlignmentEnum {\n+    TOP(\"Top\"),\n \n-        public String getValue() {\n-            return value;\n-        }\n+    CENTER(\"Center\"),\n \n-        @Override\n-        public String toString() {\n-            return String.valueOf(value);\n-        }\n+    BOTTOM(\"Bottom\");\n \n-        public static VerticalAlignmentEnum fromValue(String text) {\n-            for (VerticalAlignmentEnum b : VerticalAlignmentEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n-        }\n+    private String value;\n \n-        public static class Adapter extends TypeAdapter< VerticalAlignmentEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final VerticalAlignmentEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public VerticalAlignmentEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return VerticalAlignmentEnum.fromValue(String.valueOf(value));\n-            }\n+    VerticalAlignmentEnum(String value) {\n+      this.value = value;\n+    }\n+\n+    public String getValue() {\n+      return value;\n+    }\n+\n+    @Override\n+    public String toString() {\n+      return String.valueOf(value);\n+    }\n+\n+    public static VerticalAlignmentEnum fromValue(String text) {\n+      for (VerticalAlignmentEnum b : VerticalAlignmentEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+          return b;\n         }\n+      }\n+      return null;\n     }\n \n+    public static class Adapter extends TypeAdapter<VerticalAlignmentEnum> {\n+      @Override\n+      public void write(final JsonWriter jsonWriter, final VerticalAlignmentEnum enumeration) throws IOException {\n+        jsonWriter.value(enumeration.getValue());\n+      }\n+\n+\n+      @Override\n+      public VerticalAlignmentEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return VerticalAlignmentEnum.fromValue(String.valueOf(value));\n+      }\n+    }\n+  }\n+\n     /**\n      * Gets or sets specifies how the cell is merged with other cells vertically.\n      */\n-    @JsonAdapter(VerticalMergeEnum.Adapter.class)\n-    public enum VerticalMergeEnum {\n-        NONE(\"None\"),\n-        FIRST(\"First\"),\n-        PREVIOUS(\"Previous\");\n \n-        private String value;\n \n-        VerticalMergeEnum(String value) {\n-            this.value = value;\n-        }\n+  @JsonAdapter(VerticalMergeEnum.Adapter.class)\n+  public enum VerticalMergeEnum {\n+    NONE(\"None\"),\n \n-        public String getValue() {\n-            return value;\n-        }\n+    FIRST(\"First\"),\n \n-        @Override\n-        public String toString() {\n-            return String.valueOf(value);\n-        }\n+    PREVIOUS(\"Previous\");\n \n-        public static VerticalMergeEnum fromValue(String text) {\n-            for (VerticalMergeEnum b : VerticalMergeEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n-        }\n+    private String value;\n+\n+    VerticalMergeEnum(String value) {\n+      this.value = value;\n+    }\n+\n+    public String getValue() {\n+      return value;\n+    }\n \n-        public static class Adapter extends TypeAdapter< VerticalMergeEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final VerticalMergeEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public VerticalMergeEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return VerticalMergeEnum.fromValue(String.valueOf(value));\n-            }\n+    @Override\n+    public String toString() {\n+      return String.valueOf(value);\n+    }\n+\n+    public static VerticalMergeEnum fromValue(String text) {\n+      for (VerticalMergeEnum b : VerticalMergeEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+          return b;\n         }\n+      }\n+      return null;\n+    }\n+\n+    public static class Adapter extends TypeAdapter<VerticalMergeEnum> {\n+      @Override\n+      public void write(final JsonWriter jsonWriter, final VerticalMergeEnum enumeration) throws IOException {\n+        jsonWriter.value(enumeration.getValue());\n+      }\n+\n+\n+      @Override\n+      public VerticalMergeEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return VerticalMergeEnum.fromValue(String.valueOf(value));\n+      }\n     }\n+  }\n \n-    @SerializedName(\"BottomPadding\")\n-    private Double bottomPadding = null;\n \n-    @SerializedName(\"FitText\")\n-    private Boolean fitText = null;\n+  @SerializedName(\"BottomPadding\")\n+  private Double bottomPadding = null;\n \n-    @SerializedName(\"HorizontalMerge\")\n-    private HorizontalMergeEnum horizontalMerge = null;\n+  @SerializedName(\"FitText\")\n+  private Boolean fitText = null;\n \n-    @SerializedName(\"LeftPadding\")\n-    private Double leftPadding = null;\n+  @SerializedName(\"HorizontalMerge\")\n+  private HorizontalMergeEnum horizontalMerge = null;\n \n-    @SerializedName(\"Orientation\")\n-    private OrientationEnum orientation = null;\n+  @SerializedName(\"LeftPadding\")\n+  private Double leftPadding = null;\n \n-    @SerializedName(\"PreferredWidth\")\n-    private PreferredWidth preferredWidth = null;\n+  @SerializedName(\"Orientation\")\n+  private OrientationEnum orientation = null;\n \n-    @SerializedName(\"RightPadding\")\n-    private Double rightPadding = null;\n+  @SerializedName(\"PreferredWidth\")\n+  private PreferredWidth preferredWidth = null;\n \n-    @SerializedName(\"TopPadding\")\n-    private Double topPadding = null;\n+  @SerializedName(\"RightPadding\")\n+  private Double rightPadding = null;\n \n-    @SerializedName(\"VerticalAlignment\")\n-    private VerticalAlignmentEnum verticalAlignment = null;\n+  @SerializedName(\"TopPadding\")\n+  private Double topPadding = null;\n \n-    @SerializedName(\"VerticalMerge\")\n-    private VerticalMergeEnum verticalMerge = null;\n+  @SerializedName(\"VerticalAlignment\")\n+  private VerticalAlignmentEnum verticalAlignment = null;\n \n-    @SerializedName(\"Width\")\n-    private Double width = null;\n+  @SerializedName(\"VerticalMerge\")\n+  private VerticalMergeEnum verticalMerge = null;\n \n-    @SerializedName(\"WrapText\")\n-    private Boolean wrapText = null;\n-    public TableCellFormat bottomPadding(Double bottomPadding) {\n-        this.bottomPadding = bottomPadding;\n-        return this;\n-    }\n+  @SerializedName(\"Width\")\n+  private Double width = null;\n+\n+  @SerializedName(\"WrapText\")\n+  private Boolean wrapText = null;\n+\n+  public TableCellFormat bottomPadding(Double bottomPadding) {\n+    this.bottomPadding = bottomPadding;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets returns or sets the amount of space (in points) to add below the contents of cell.\n     * @return bottomPadding\n     **/\n-    @ApiModelProperty(value = \"Gets or sets returns or sets the amount of space (in points) to add below the contents of cell.\")\n-    public Double getBottomPadding() {\n-        return bottomPadding;\n-    }\n \n-    public void setBottomPadding(Double bottomPadding) {\n-        this.bottomPadding = bottomPadding;\n-    }\n \n-    public TableCellFormat fitText(Boolean fitText) {\n-        this.fitText = fitText;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets returns or sets the amount of space (in points) to add below the contents of cell.\")\n+  public Double getBottomPadding() {\n+    return bottomPadding;\n+  }\n+\n+  public void setBottomPadding(Double bottomPadding) {\n+    this.bottomPadding = bottomPadding;\n+  }\n+\n+  public TableCellFormat fitText(Boolean fitText) {\n+    this.fitText = fitText;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets if true, fits text in the cell, compressing each paragraph to the width of the cell.\n     * @return fitText\n     **/\n-    @ApiModelProperty(value = \"Gets or sets if true, fits text in the cell, compressing each paragraph to the width of the cell.\")\n-    public Boolean getFitText() {\n-        return fitText;\n-    }\n \n-    public void setFitText(Boolean fitText) {\n-        this.fitText = fitText;\n-    }\n \n-    public TableCellFormat horizontalMerge(HorizontalMergeEnum horizontalMerge) {\n-        this.horizontalMerge = horizontalMerge;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets if true, fits text in the cell, compressing each paragraph to the width of the cell.\")\n+  public Boolean getFitText() {\n+    return fitText;\n+  }\n+\n+  public void setFitText(Boolean fitText) {\n+    this.fitText = fitText;\n+  }\n+\n+  public TableCellFormat horizontalMerge(HorizontalMergeEnum horizontalMerge) {\n+    this.horizontalMerge = horizontalMerge;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets specifies how the cell is merged horizontally with other cells in the row.\n     * @return horizontalMerge\n     **/\n-    @ApiModelProperty(value = \"Gets or sets specifies how the cell is merged horizontally with other cells in the row.\")\n-    public HorizontalMergeEnum getHorizontalMerge() {\n-        return horizontalMerge;\n-    }\n \n-    public void setHorizontalMerge(HorizontalMergeEnum horizontalMerge) {\n-        this.horizontalMerge = horizontalMerge;\n-    }\n \n-    public TableCellFormat leftPadding(Double leftPadding) {\n-        this.leftPadding = leftPadding;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets specifies how the cell is merged horizontally with other cells in the row.\")\n+  public HorizontalMergeEnum getHorizontalMerge() {\n+    return horizontalMerge;\n+  }\n+\n+  public void setHorizontalMerge(HorizontalMergeEnum horizontalMerge) {\n+    this.horizontalMerge = horizontalMerge;\n+  }\n+\n+  public TableCellFormat leftPadding(Double leftPadding) {\n+    this.leftPadding = leftPadding;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets returns or sets the amount of space (in points) to add to the left of the contents of cell.\n     * @return leftPadding\n     **/\n-    @ApiModelProperty(value = \"Gets or sets returns or sets the amount of space (in points) to add to the left of the contents of cell.\")\n-    public Double getLeftPadding() {\n-        return leftPadding;\n-    }\n \n-    public void setLeftPadding(Double leftPadding) {\n-        this.leftPadding = leftPadding;\n-    }\n \n-    public TableCellFormat orientation(OrientationEnum orientation) {\n-        this.orientation = orientation;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets returns or sets the amount of space (in points) to add to the left of the contents of cell.\")\n+  public Double getLeftPadding() {\n+    return leftPadding;\n+  }\n+\n+  public void setLeftPadding(Double leftPadding) {\n+    this.leftPadding = leftPadding;\n+  }\n+\n+  public TableCellFormat orientation(OrientationEnum orientation) {\n+    this.orientation = orientation;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets returns or sets the orientation of text in a table cell.\n     * @return orientation\n     **/\n-    @ApiModelProperty(value = \"Gets or sets returns or sets the orientation of text in a table cell.\")\n-    public OrientationEnum getOrientation() {\n-        return orientation;\n-    }\n \n-    public void setOrientation(OrientationEnum orientation) {\n-        this.orientation = orientation;\n-    }\n \n-    public TableCellFormat preferredWidth(PreferredWidth preferredWidth) {\n-        this.preferredWidth = preferredWidth;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets returns or sets the orientation of text in a table cell.\")\n+  public OrientationEnum getOrientation() {\n+    return orientation;\n+  }\n+\n+  public void setOrientation(OrientationEnum orientation) {\n+    this.orientation = orientation;\n+  }\n+\n+  public TableCellFormat preferredWidth(PreferredWidth preferredWidth) {\n+    this.preferredWidth = preferredWidth;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets returns or sets the preferred width of the cell.\n     * @return preferredWidth\n     **/\n-    @ApiModelProperty(value = \"Gets or sets returns or sets the preferred width of the cell.\")\n-    public PreferredWidth getPreferredWidth() {\n-        return preferredWidth;\n-    }\n \n-    public void setPreferredWidth(PreferredWidth preferredWidth) {\n-        this.preferredWidth = preferredWidth;\n-    }\n \n-    public TableCellFormat rightPadding(Double rightPadding) {\n-        this.rightPadding = rightPadding;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets returns or sets the preferred width of the cell.\")\n+  public PreferredWidth getPreferredWidth() {\n+    return preferredWidth;\n+  }\n+\n+  public void setPreferredWidth(PreferredWidth preferredWidth) {\n+    this.preferredWidth = preferredWidth;\n+  }\n+\n+  public TableCellFormat rightPadding(Double rightPadding) {\n+    this.rightPadding = rightPadding;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets returns or sets the amount of space (in points) to add to the right of the contents of cell.\n     * @return rightPadding\n     **/\n-    @ApiModelProperty(value = \"Gets or sets returns or sets the amount of space (in points) to add to the right of the contents of cell.\")\n-    public Double getRightPadding() {\n-        return rightPadding;\n-    }\n \n-    public void setRightPadding(Double rightPadding) {\n-        this.rightPadding = rightPadding;\n-    }\n \n-    public TableCellFormat topPadding(Double topPadding) {\n-        this.topPadding = topPadding;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets returns or sets the amount of space (in points) to add to the right of the contents of cell.\")\n+  public Double getRightPadding() {\n+    return rightPadding;\n+  }\n+\n+  public void setRightPadding(Double rightPadding) {\n+    this.rightPadding = rightPadding;\n+  }\n+\n+  public TableCellFormat topPadding(Double topPadding) {\n+    this.topPadding = topPadding;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets returns or sets the amount of space (in points) to add above the contents of cell.\n     * @return topPadding\n     **/\n-    @ApiModelProperty(value = \"Gets or sets returns or sets the amount of space (in points) to add above the contents of cell.\")\n-    public Double getTopPadding() {\n-        return topPadding;\n-    }\n \n-    public void setTopPadding(Double topPadding) {\n-        this.topPadding = topPadding;\n-    }\n \n-    public TableCellFormat verticalAlignment(VerticalAlignmentEnum verticalAlignment) {\n-        this.verticalAlignment = verticalAlignment;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets returns or sets the amount of space (in points) to add above the contents of cell.\")\n+  public Double getTopPadding() {\n+    return topPadding;\n+  }\n+\n+  public void setTopPadding(Double topPadding) {\n+    this.topPadding = topPadding;\n+  }\n+\n+  public TableCellFormat verticalAlignment(VerticalAlignmentEnum verticalAlignment) {\n+    this.verticalAlignment = verticalAlignment;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets returns or sets the vertical alignment of text in the cell.\n     * @return verticalAlignment\n     **/\n-    @ApiModelProperty(value = \"Gets or sets returns or sets the vertical alignment of text in the cell.\")\n-    public VerticalAlignmentEnum getVerticalAlignment() {\n-        return verticalAlignment;\n-    }\n \n-    public void setVerticalAlignment(VerticalAlignmentEnum verticalAlignment) {\n-        this.verticalAlignment = verticalAlignment;\n-    }\n \n-    public TableCellFormat verticalMerge(VerticalMergeEnum verticalMerge) {\n-        this.verticalMerge = verticalMerge;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets returns or sets the vertical alignment of text in the cell.\")\n+  public VerticalAlignmentEnum getVerticalAlignment() {\n+    return verticalAlignment;\n+  }\n+\n+  public void setVerticalAlignment(VerticalAlignmentEnum verticalAlignment) {\n+    this.verticalAlignment = verticalAlignment;\n+  }\n+\n+  public TableCellFormat verticalMerge(VerticalMergeEnum verticalMerge) {\n+    this.verticalMerge = verticalMerge;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets specifies how the cell is merged with other cells vertically.\n     * @return verticalMerge\n     **/\n-    @ApiModelProperty(value = \"Gets or sets specifies how the cell is merged with other cells vertically.\")\n-    public VerticalMergeEnum getVerticalMerge() {\n-        return verticalMerge;\n-    }\n \n-    public void setVerticalMerge(VerticalMergeEnum verticalMerge) {\n-        this.verticalMerge = verticalMerge;\n-    }\n \n-    public TableCellFormat width(Double width) {\n-        this.width = width;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets specifies how the cell is merged with other cells vertically.\")\n+  public VerticalMergeEnum getVerticalMerge() {\n+    return verticalMerge;\n+  }\n+\n+  public void setVerticalMerge(VerticalMergeEnum verticalMerge) {\n+    this.verticalMerge = verticalMerge;\n+  }\n+\n+  public TableCellFormat width(Double width) {\n+    this.width = width;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets the width of the cell in points.\n     * @return width\n     **/\n-    @ApiModelProperty(value = \"Gets or sets the width of the cell in points.\")\n-    public Double getWidth() {\n-        return width;\n-    }\n \n-    public void setWidth(Double width) {\n-        this.width = width;\n-    }\n \n-    public TableCellFormat wrapText(Boolean wrapText) {\n-        this.wrapText = wrapText;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets the width of the cell in points.\")\n+  public Double getWidth() {\n+    return width;\n+  }\n+\n+  public void setWidth(Double width) {\n+    this.width = width;\n+  }\n+\n+  public TableCellFormat wrapText(Boolean wrapText) {\n+    this.wrapText = wrapText;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets if true, wrap text for the cell.\n     * @return wrapText\n     **/\n-    @ApiModelProperty(value = \"Gets or sets if true, wrap text for the cell.\")\n-    public Boolean getWrapText() {\n-        return wrapText;\n-    }\n \n-    public void setWrapText(Boolean wrapText) {\n-        this.wrapText = wrapText;\n-    }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    TableCellFormat tableCellFormat = (TableCellFormat)o;\n-    return\n-        Objects.equals(this.bottomPadding, tableCellFormat.bottomPadding) &&\n-        Objects.equals(this.fitText, tableCellFormat.fitText) &&\n-        Objects.equals(this.horizontalMerge, tableCellFormat.horizontalMerge) &&\n-        Objects.equals(this.leftPadding, tableCellFormat.leftPadding) &&\n-        Objects.equals(this.orientation, tableCellFormat.orientation) &&\n-        Objects.equals(this.preferredWidth, tableCellFormat.preferredWidth) &&\n-        Objects.equals(this.rightPadding, tableCellFormat.rightPadding) &&\n-        Objects.equals(this.topPadding, tableCellFormat.topPadding) &&\n-        Objects.equals(this.verticalAlignment, tableCellFormat.verticalAlignment) &&\n-        Objects.equals(this.verticalMerge, tableCellFormat.verticalMerge) &&\n-        Objects.equals(this.width, tableCellFormat.width) &&\n-        Objects.equals(this.wrapText, tableCellFormat.wrapText) &&\n-        super.equals(o);\n+  @ApiModelProperty(value = \"Gets or sets if true, wrap text for the cell.\")\n+  public Boolean getWrapText() {\n+    return wrapText;\n+  }\n+\n+  public void setWrapText(Boolean wrapText) {\n+    this.wrapText = wrapText;\n   }\n \n+\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+\n+    TableCellFormat tableCellFormat = (TableCellFormat) o;\n+    return Objects.equals(this.bottomPadding, tableCellFormat.bottomPadding) &&\n+    Objects.equals(this.fitText, tableCellFormat.fitText) &&\n+    Objects.equals(this.horizontalMerge, tableCellFormat.horizontalMerge) &&\n+    Objects.equals(this.leftPadding, tableCellFormat.leftPadding) &&\n+    Objects.equals(this.orientation, tableCellFormat.orientation) &&\n+    Objects.equals(this.preferredWidth, tableCellFormat.preferredWidth) &&\n+    Objects.equals(this.rightPadding, tableCellFormat.rightPadding) &&\n+    Objects.equals(this.topPadding, tableCellFormat.topPadding) &&\n+    Objects.equals(this.verticalAlignment, tableCellFormat.verticalAlignment) &&\n+    Objects.equals(this.verticalMerge, tableCellFormat.verticalMerge) &&\n+    Objects.equals(this.width, tableCellFormat.width) &&\n+    Objects.equals(this.wrapText, tableCellFormat.wrapText) &&\n+    super.equals(o);\n+  }\n+\n+\n   @Override\n   public int hashCode() {\n     return Objects.hash(bottomPadding, fitText, horizontalMerge, leftPadding, orientation, preferredWidth, rightPadding, topPadding, verticalAlignment, verticalMerge, width, wrapText, super.hashCode());\n   }\n \n+\n   @Override\n   public String toString() {\n     StringBuilder sb = new StringBuilder();\n@@ -544,10 +597,12 @@ public class TableCellFormat extends LinkElement {\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n+\n   private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n       return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 548
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/415/TableCellFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/415/TableCellFormat.java\nindex 2b29d328453..7b8aa1c6c06 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/415/TableCellFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/415/TableCellFormat.java\n@@ -497,7 +497,7 @@ public class TableCellFormat extends LinkElement {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    TableCellFormat tableCellFormat = (TableCellFormat)o;\n+    TableCellFormat tableCellFormat = (TableCellFormat) o;\n     return\n         Objects.equals(this.bottomPadding, tableCellFormat.bottomPadding) &&\n         Objects.equals(this.fitText, tableCellFormat.fitText) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/415/TableCellFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/415/TableCellFormat.java\nindex 2b29d328453..7b8aa1c6c06 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/415/TableCellFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/415/TableCellFormat.java\n@@ -497,7 +497,7 @@ public class TableCellFormat extends LinkElement {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    TableCellFormat tableCellFormat = (TableCellFormat)o;\n+    TableCellFormat tableCellFormat = (TableCellFormat) o;\n     return\n         Objects.equals(this.bottomPadding, tableCellFormat.bottomPadding) &&\n         Objects.equals(this.fitText, tableCellFormat.fitText) &&\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4152",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "31",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "31",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "59",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4152/RelationshipDataExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4152/RelationshipDataExtractor.java\nindex 80364f92352..b24a5011dbb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4152/RelationshipDataExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4152/RelationshipDataExtractor.java\n@@ -17,58 +17,57 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n public class RelationshipDataExtractor implements RelationshipVisitor<RuntimeException>\n {\n-    private int type;\n-    private long startNode;\n-    private long endNode;\n-    private long relId;\n+  private int type;\n+  private long startNode;\n+  private long endNode;\n+  private long relId;\n \n-    @Override\n-    public void visit( long relId, int type, long startNode, long endNode )\n-    {\n-        this.relId = relId;\n-        this.type = type;\n-        this.startNode = startNode;\n-        this.endNode = endNode;\n-    }\n+  @Override\n+  public void visit(long relId, int type, long startNode, long endNode)\n+  {\n+    this.relId = relId;\n+    this.type = type;\n+    this.startNode = startNode;\n+    this.endNode = endNode;\n+  }\n \n-    public int type()\n-    {\n-        return type;\n-    }\n+  public int type()\n+  {\n+    return type;\n+  }\n \n-    public long startNode()\n-    {\n-        return startNode;\n-    }\n+  public long startNode()\n+  {\n+    return startNode;\n+  }\n \n-    public long endNode()\n-    {\n-        return endNode;\n-    }\n+  public long endNode()\n+  {\n+    return endNode;\n+  }\n \n-    public long otherNode( long node )\n+  public long otherNode(long node)\n+  {\n+    if (node == startNode)\n     {\n-        if ( node == startNode )\n-        {\n-            return endNode;\n-        }\n-        else if ( node == endNode )\n-        {\n-            return startNode;\n-        }\n-        else\n-        {\n-            throw new IllegalArgumentException(\n-                    \"Node[\" + node + \"] is neither start nor end node of relationship[\" + relId + \"]\" );\n-        }\n-    }\n-\n-    public long relationship()\n+      return endNode;\n+    } else if (node == endNode)\n+    {\n+      return startNode;\n+    } else\n     {\n-        return relId;\n+      throw new IllegalArgumentException(\n+          \"Node[\" + node + \"] is neither start nor end node of relationship[\" + relId + \"]\");\n     }\n+  }\n+\n+  public long relationship()\n+  {\n+    return relId;\n+  }\n }\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4152/RelationshipDataExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4152/RelationshipDataExtractor.java\nindex 80364f92352..99bd179b11a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4152/RelationshipDataExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4152/RelationshipDataExtractor.java\n@@ -62,13 +62,12 @@ public class RelationshipDataExtractor implements RelationshipVisitor<RuntimeExc\n         }\n         else\n         {\n-            throw new IllegalArgumentException(\n-                    \"Node[\" + node + \"] is neither start nor end node of relationship[\" + relId + \"]\" );\n-        }\n+            throw new IllegalArgumentException( \"Node[\" + node + \"] is neither start nor end node of relationship[\" + relId + \"]\" );\n+    }\n     }\n \n     public long relationship()\n     {\n         return relId;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "720",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "84",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "95",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "142",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "67",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "237",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "135",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/720/BoltKernelExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/720/BoltKernelExtension.java\nindex 166712cc16a..c30d4344f6a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/720/BoltKernelExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/720/BoltKernelExtension.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt;\n \n import io.netty.handler.ssl.SslContext;\n@@ -80,174 +81,174 @@ import static org.neo4j.scheduler.JobScheduler.Groups.boltNetworkIO;\n /**\n  * Wraps Bolt and exposes it as a Kernel Extension.\n  */\n-@Service.Implementation( KernelExtensionFactory.class )\n+@Service.Implementation(KernelExtensionFactory.class)\n public class BoltKernelExtension extends KernelExtensionFactory<BoltKernelExtension.Dependencies>\n {\n-    public static class Settings implements LoadableConfig\n-    {\n-        @Description( \"Specify the SSL policy to use\" )\n-        public static final Setting<String> ssl_policy = setting( \"bolt.ssl_policy\", STRING, LEGACY_POLICY_NAME );\n-    }\n-\n-    public interface Dependencies\n-    {\n-        LogService logService();\n+  public static class Settings implements LoadableConfig\n+  {\n+    @Description(\"Specify the SSL policy to use\")\n+    public static final Setting<String> ssl_policy = setting(\"bolt.ssl_policy\", STRING, LEGACY_POLICY_NAME);\n+  }\n \n-        Config config();\n+  public interface Dependencies\n+  {\n+    LogService logService();\n \n-        GraphDatabaseService db();\n+    Config config();\n \n-        JobScheduler scheduler();\n+    GraphDatabaseService db();\n \n-        UsageData usageData();\n+    JobScheduler scheduler();\n \n-        Monitors monitors();\n+    UsageData usageData();\n \n-        ThreadToStatementContextBridge txBridge();\n+    Monitors monitors();\n \n-        BoltConnectionTracker sessionTracker();\n+    ThreadToStatementContextBridge txBridge();\n \n-        ConnectorPortRegister connectionRegister();\n+    BoltConnectionTracker sessionTracker();\n \n-        Clock clock();\n+    ConnectorPortRegister connectionRegister();\n \n-        AuthManager authManager();\n+    Clock clock();\n \n-        UserManagerSupplier userManagerSupplier();\n+    AuthManager authManager();\n \n-        SslPolicyLoader sslPolicyFactory();\n+    UserManagerSupplier userManagerSupplier();\n \n-        FileSystemAbstraction fileSystem();\n-    }\n+    SslPolicyLoader sslPolicyFactory();\n \n-    public BoltKernelExtension()\n-    {\n-        super( \"bolt-server\" );\n-    }\n-\n-    @Override\n-    public Lifecycle newInstance( KernelContext context, Dependencies dependencies )\n-    {\n-        Config config = dependencies.config();\n-        GraphDatabaseService gdb = dependencies.db();\n-        GraphDatabaseAPI api = (GraphDatabaseAPI) gdb;\n-        LogService logService = dependencies.logService();\n-        Clock clock = dependencies.clock();\n-        SslPolicyLoader sslPolicyFactory = dependencies.sslPolicyFactory();\n-        Log log = logService.getInternalLog( BoltKernelExtension.class );\n-        Log userLog = logService.getUserLog( BoltKernelExtension.class );\n+    FileSystemAbstraction fileSystem();\n+  }\n \n-        LifeSupport life = new LifeSupport();\n+  public BoltKernelExtension()\n+  {\n+    super(\"bolt-server\");\n+  }\n \n-        JobScheduler scheduler = dependencies.scheduler();\n+  @Override\n+  public Lifecycle newInstance(KernelContext context, Dependencies dependencies)\n+  {\n+    Config config = dependencies.config();\n+    GraphDatabaseService gdb = dependencies.db();\n+    GraphDatabaseAPI api = (GraphDatabaseAPI) gdb;\n+    LogService logService = dependencies.logService();\n+    Clock clock = dependencies.clock();\n+    SslPolicyLoader sslPolicyFactory = dependencies.sslPolicyFactory();\n+    Log log = logService.getInternalLog(BoltKernelExtension.class);\n+    Log userLog = logService.getUserLog(BoltKernelExtension.class);\n \n-        InternalLoggerFactory.setDefaultFactory( new Netty4LoggerFactory( logService.getInternalLogProvider() ) );\n-        BoltMessageLogging boltLogging = BoltMessageLogging.create( dependencies.fileSystem(), scheduler, config, log );\n+    LifeSupport life = new LifeSupport();\n \n-        Authentication authentication = authentication( dependencies.authManager(), dependencies.userManagerSupplier() );\n+    JobScheduler scheduler = dependencies.scheduler();\n \n-        TransportThrottleGroup throttleGroup = new TransportThrottleGroup( config, clock );\n+    InternalLoggerFactory.setDefaultFactory(new Netty4LoggerFactory(logService.getInternalLogProvider()));\n+    BoltMessageLogging boltLogging = BoltMessageLogging.create(dependencies.fileSystem(), scheduler, config, log);\n \n-        BoltFactory boltFactory = life.add( new BoltFactoryImpl( api, dependencies.usageData(),\n-                logService, dependencies.txBridge(), authentication, dependencies.sessionTracker(), config ) );\n-        BoltSchedulerProvider boltSchedulerProvider =\n-                life.add( new ExecutorBoltSchedulerProvider( config, new CachedThreadPoolExecutorFactory( log ), scheduler, logService ) );\n-        BoltConnectionFactory boltConnectionFactory =\n-                createConnectionFactory( config, boltFactory, boltSchedulerProvider, throttleGroup, dependencies, logService, clock );\n-        ConnectorPortRegister connectionRegister = dependencies.connectionRegister();\n+    Authentication authentication = authentication(dependencies.authManager(), dependencies.userManagerSupplier());\n \n-        BoltProtocolPipelineInstallerFactory handlerFactory = createHandlerFactory( boltConnectionFactory, throttleGroup, logService );\n+    TransportThrottleGroup throttleGroup = new TransportThrottleGroup(config, clock);\n \n-        if ( !config.enabledBoltConnectors().isEmpty() && !config.get( GraphDatabaseSettings.disconnected ) )\n-        {\n-            NettyServer server = new NettyServer( scheduler.threadFactory( boltNetworkIO ),\n-                    createConnectors( config, sslPolicyFactory, logService, log, boltLogging, throttleGroup, handlerFactory ), connectionRegister,\n-                    userLog );\n-            life.add( server );\n-            log.info( \"Bolt Server extension loaded.\" );\n-        }\n-\n-        return life;\n-    }\n+    BoltFactory boltFactory = life.add(new BoltFactoryImpl(api, dependencies.usageData(),\n+        logService, dependencies.txBridge(), authentication, dependencies.sessionTracker(), config));\n+    BoltSchedulerProvider boltSchedulerProvider =\n+        life.add(new ExecutorBoltSchedulerProvider(config, new CachedThreadPoolExecutorFactory(log), scheduler, logService));\n+    BoltConnectionFactory boltConnectionFactory =\n+        createConnectionFactory(config, boltFactory, boltSchedulerProvider, throttleGroup, dependencies, logService, clock);\n+    ConnectorPortRegister connectionRegister = dependencies.connectionRegister();\n \n-    private BoltConnectionFactory createConnectionFactory( Config config, BoltFactory boltFactory, BoltSchedulerProvider schedulerProvider,\n-            TransportThrottleGroup throttleGroup,\n-            Dependencies dependencies, LogService logService, Clock clock )\n-    {\n-        return new DefaultBoltConnectionFactory( boltFactory, schedulerProvider, throttleGroup, config, logService, clock, dependencies.monitors() );\n-    }\n+    BoltProtocolPipelineInstallerFactory handlerFactory = createHandlerFactory(boltConnectionFactory, throttleGroup, logService);\n \n-    private Map<BoltConnector,ProtocolInitializer> createConnectors( Config config, SslPolicyLoader sslPolicyFactory, LogService logService, Log log,\n-            BoltMessageLogging boltLogging, TransportThrottleGroup throttleGroup, BoltProtocolPipelineInstallerFactory handlerFactory )\n+    if (!config.enabledBoltConnectors().isEmpty() && !config.get(GraphDatabaseSettings.disconnected))\n     {\n-        Map<BoltConnector,ProtocolInitializer> connectors =\n-                config.enabledBoltConnectors().stream().collect( Collectors.toMap( Function.identity(), connConfig ->\n-                {\n-                    ListenSocketAddress listenAddress = config.get( connConfig.listen_address );\n-                    SslContext sslCtx;\n-                    boolean requireEncryption;\n-                    final BoltConnector.EncryptionLevel encryptionLevel = config.get( connConfig.encryption_level );\n-                    switch ( encryptionLevel )\n-                    {\n-                    case REQUIRED:\n-                        // Encrypted connections are mandatory, a self-signed certificate may be generated.\n-                        requireEncryption = true;\n-                        sslCtx = createSslContext( sslPolicyFactory, config );\n-                        break;\n-                    case OPTIONAL:\n-                        // Encrypted connections are optional, a self-signed certificate may be generated.\n-                        requireEncryption = false;\n-                        sslCtx = createSslContext( sslPolicyFactory, config );\n-                        break;\n-                    case DISABLED:\n-                        // Encryption is turned off, no self-signed certificate will be generated.\n-                        requireEncryption = false;\n-                        sslCtx = null;\n-                        break;\n-                    default:\n-                        // In the unlikely event that we happen to fall through to the default option here,\n-                        // there is a mismatch between the BoltConnector.EncryptionLevel enum and the options\n-                        // handled in this switch statement. In this case, we'll log a warning and default to\n-                        // disabling encryption, since this mirrors the functionality introduced in 3.0.\n-                        log.warn( format( \"Unhandled encryption level %s - assuming DISABLED.\", encryptionLevel.name() ) );\n-                        requireEncryption = false;\n-                        sslCtx = null;\n-                        break;\n-                    }\n-\n-                    return new SocketTransport( connConfig.key(), listenAddress, sslCtx, requireEncryption, logService.getInternalLogProvider(), boltLogging,\n-                            throttleGroup, handlerFactory );\n-                } ) );\n-\n-        return connectors;\n+      NettyServer server = new NettyServer(scheduler.threadFactory(boltNetworkIO),\n+          createConnectors(config, sslPolicyFactory, logService, log, boltLogging, throttleGroup, handlerFactory), connectionRegister,\n+          userLog);\n+      life.add(server);\n+      log.info(\"Bolt Server extension loaded.\");\n     }\n \n-    private SslContext createSslContext( SslPolicyLoader sslPolicyFactory, Config config )\n-    {\n-        try\n+    return life;\n+  }\n+\n+  private BoltConnectionFactory createConnectionFactory(Config config, BoltFactory boltFactory, BoltSchedulerProvider schedulerProvider,\n+                                                        TransportThrottleGroup throttleGroup,\n+                                                        Dependencies dependencies, LogService logService, Clock clock)\n+  {\n+    return new DefaultBoltConnectionFactory(boltFactory, schedulerProvider, throttleGroup, config, logService, clock, dependencies.monitors());\n+  }\n+\n+  private Map<BoltConnector, ProtocolInitializer> createConnectors(Config config, SslPolicyLoader sslPolicyFactory, LogService logService, Log log,\n+                                                                   BoltMessageLogging boltLogging, TransportThrottleGroup throttleGroup,\n+                                                                   BoltProtocolPipelineInstallerFactory handlerFactory)\n+  {\n+    Map<BoltConnector, ProtocolInitializer> connectors =\n+        config.enabledBoltConnectors().stream().collect(Collectors.toMap(Function.identity(), connConfig ->\n         {\n-            String policyName = config.get( Settings.ssl_policy );\n-            if ( policyName == null )\n-            {\n-                throw new IllegalArgumentException( \"No SSL policy has been configured for bolt\" );\n-            }\n-            return sslPolicyFactory.getPolicy( policyName ).nettyServerContext();\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new RuntimeException( \"Failed to initialize SSL encryption support, which is required to start \" +\n-                    \"this connector. Error was: \" + e.getMessage(), e );\n-        }\n-    }\n-\n-    private Authentication authentication( AuthManager authManager, UserManagerSupplier userManagerSupplier )\n+          ListenSocketAddress listenAddress = config.get(connConfig.listen_address);\n+          SslContext sslCtx;\n+          boolean requireEncryption;\n+          final BoltConnector.EncryptionLevel encryptionLevel = config.get(connConfig.encryption_level);\n+          switch (encryptionLevel)\n+          {\n+            case REQUIRED:\n+              // Encrypted connections are mandatory, a self-signed certificate may be generated.\n+              requireEncryption = true;\n+              sslCtx = createSslContext(sslPolicyFactory, config);\n+              break;\n+            case OPTIONAL:\n+              // Encrypted connections are optional, a self-signed certificate may be generated.\n+              requireEncryption = false;\n+              sslCtx = createSslContext(sslPolicyFactory, config);\n+              break;\n+            case DISABLED:\n+              // Encryption is turned off, no self-signed certificate will be generated.\n+              requireEncryption = false;\n+              sslCtx = null;\n+              break;\n+            default:\n+              // In the unlikely event that we happen to fall through to the default option here,\n+              // there is a mismatch between the BoltConnector.EncryptionLevel enum and the options\n+              // handled in this switch statement. In this case, we'll log a warning and default to\n+              // disabling encryption, since this mirrors the functionality introduced in 3.0.\n+              log.warn(format(\"Unhandled encryption level %s - assuming DISABLED.\", encryptionLevel.name()));\n+              requireEncryption = false;\n+              sslCtx = null;\n+              break;\n+          }\n+\n+          return new SocketTransport(connConfig.key(), listenAddress, sslCtx, requireEncryption, logService.getInternalLogProvider(), boltLogging,\n+              throttleGroup, handlerFactory);\n+        }));\n+\n+    return connectors;\n+  }\n+\n+  private SslContext createSslContext(SslPolicyLoader sslPolicyFactory, Config config)\n+  {\n+    try\n     {\n-        return new BasicAuthentication( authManager, userManagerSupplier );\n-    }\n-\n-    private static BoltProtocolPipelineInstallerFactory createHandlerFactory( BoltConnectionFactory connectionFactory,\n-            TransportThrottleGroup throttleGroup, LogService logService )\n+      String policyName = config.get(Settings.ssl_policy);\n+      if (policyName == null)\n+      {\n+        throw new IllegalArgumentException(\"No SSL policy has been configured for bolt\");\n+      }\n+      return sslPolicyFactory.getPolicy(policyName).nettyServerContext();\n+    } catch (Exception e)\n     {\n-        return new DefaultBoltProtocolPipelineInstallerFactory( connectionFactory, throttleGroup, logService );\n+      throw new RuntimeException(\"Failed to initialize SSL encryption support, which is required to start \" +\n+          \"this connector. Error was: \" + e.getMessage(), e);\n     }\n+  }\n+\n+  private Authentication authentication(AuthManager authManager, UserManagerSupplier userManagerSupplier)\n+  {\n+    return new BasicAuthentication(authManager, userManagerSupplier);\n+  }\n+\n+  private static BoltProtocolPipelineInstallerFactory createHandlerFactory(BoltConnectionFactory connectionFactory,\n+                                                                           TransportThrottleGroup throttleGroup, LogService logService)\n+  {\n+    return new DefaultBoltProtocolPipelineInstallerFactory(connectionFactory, throttleGroup, logService);\n+  }\n }\n",
            "diff_size": 209
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 229).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "171",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "225",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/720/BoltKernelExtension.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/720/BoltKernelExtension.java\nindex 166712cc16a..22cb7bb6de2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/720/BoltKernelExtension.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/720/BoltKernelExtension.java\n@@ -136,34 +136,22 @@ public class BoltKernelExtension extends KernelExtensionFactory<BoltKernelExtens\n         SslPolicyLoader sslPolicyFactory = dependencies.sslPolicyFactory();\n         Log log = logService.getInternalLog( BoltKernelExtension.class );\n         Log userLog = logService.getUserLog( BoltKernelExtension.class );\n-\n-        LifeSupport life = new LifeSupport();\n-\n-        JobScheduler scheduler = dependencies.scheduler();\n-\n-        InternalLoggerFactory.setDefaultFactory( new Netty4LoggerFactory( logService.getInternalLogProvider() ) );\n+LifeSupport life = new LifeSupport();\n+JobScheduler scheduler = dependencies.scheduler();\n+InternalLoggerFactory.setDefaultFactory( new Netty4LoggerFactory( logService.getInternalLogProvider() ) );\n         BoltMessageLogging boltLogging = BoltMessageLogging.create( dependencies.fileSystem(), scheduler, config, log );\n-\n-        Authentication authentication = authentication( dependencies.authManager(), dependencies.userManagerSupplier() );\n-\n-        TransportThrottleGroup throttleGroup = new TransportThrottleGroup( config, clock );\n-\n-        BoltFactory boltFactory = life.add( new BoltFactoryImpl( api, dependencies.usageData(),\n+Authentication authentication = authentication( dependencies.authManager(), dependencies.userManagerSupplier() );\n+TransportThrottleGroup throttleGroup = new TransportThrottleGroup( config, clock );\n+BoltFactory boltFactory = life.add( new BoltFactoryImpl( api, dependencies.usageData(),\n                 logService, dependencies.txBridge(), authentication, dependencies.sessionTracker(), config ) );\n-        BoltSchedulerProvider boltSchedulerProvider =\n-                life.add( new ExecutorBoltSchedulerProvider( config, new CachedThreadPoolExecutorFactory( log ), scheduler, logService ) );\n-        BoltConnectionFactory boltConnectionFactory =\n-                createConnectionFactory( config, boltFactory, boltSchedulerProvider, throttleGroup, dependencies, logService, clock );\n-        ConnectorPortRegister connectionRegister = dependencies.connectionRegister();\n-\n-        BoltProtocolPipelineInstallerFactory handlerFactory = createHandlerFactory( boltConnectionFactory, throttleGroup, logService );\n-\n-        if ( !config.enabledBoltConnectors().isEmpty() && !config.get( GraphDatabaseSettings.disconnected ) )\n+BoltSchedulerProvider boltSchedulerProvider = life.add( new ExecutorBoltSchedulerProvider( config, new CachedThreadPoolExecutorFactory( log ), scheduler, logService ) );\n+BoltConnectionFactory boltConnectionFactory = createConnectionFactory( config, boltFactory, boltSchedulerProvider, throttleGroup, dependencies, logService, clock );\n+ConnectorPortRegister connectionRegister = dependencies.connectionRegister();\n+BoltProtocolPipelineInstallerFactory handlerFactory = createHandlerFactory( boltConnectionFactory, throttleGroup, logService );\n+if ( !config.enabledBoltConnectors().isEmpty() && !config.get( GraphDatabaseSettings.disconnected ) )\n         {\n-            NettyServer server = new NettyServer( scheduler.threadFactory( boltNetworkIO ),\n-                    createConnectors( config, sslPolicyFactory, logService, log, boltLogging, throttleGroup, handlerFactory ), connectionRegister,\n-                    userLog );\n-            life.add( server );\n+            NettyServer server = new NettyServer( scheduler.threadFactory( boltNetworkIO ), createConnectors( config, sslPolicyFactory, logService, log, boltLogging, throttleGroup, handlerFactory ), connectionRegister, userLog );\n+life.add( server );\n             log.info( \"Bolt Server extension loaded.\" );\n         }\n \n@@ -180,8 +168,7 @@ public class BoltKernelExtension extends KernelExtensionFactory<BoltKernelExtens\n     private Map<BoltConnector,ProtocolInitializer> createConnectors( Config config, SslPolicyLoader sslPolicyFactory, LogService logService, Log log,\n             BoltMessageLogging boltLogging, TransportThrottleGroup throttleGroup, BoltProtocolPipelineInstallerFactory handlerFactory )\n     {\n-        Map<BoltConnector,ProtocolInitializer> connectors =\n-                config.enabledBoltConnectors().stream().collect( Collectors.toMap( Function.identity(), connConfig ->\n+        Map<BoltConnector,ProtocolInitializer> connectors = config.enabledBoltConnectors().stream().collect( Collectors.toMap( Function.identity(), connConfig ->\n                 {\n                     ListenSocketAddress listenAddress = config.get( connConfig.listen_address );\n                     SslContext sslCtx;\n@@ -218,8 +205,7 @@ public class BoltKernelExtension extends KernelExtensionFactory<BoltKernelExtens\n                     return new SocketTransport( connConfig.key(), listenAddress, sslCtx, requireEncryption, logService.getInternalLogProvider(), boltLogging,\n                             throttleGroup, handlerFactory );\n                 } ) );\n-\n-        return connectors;\n+return connectors;\n     }\n \n     private SslContext createSslContext( SslPolicyLoader sslPolicyFactory, Config config )\n@@ -231,13 +217,13 @@ public class BoltKernelExtension extends KernelExtensionFactory<BoltKernelExtens\n             {\n                 throw new IllegalArgumentException( \"No SSL policy has been configured for bolt\" );\n             }\n-            return sslPolicyFactory.getPolicy( policyName ).nettyServerContext();\n+\n+return sslPolicyFactory.getPolicy( policyName ).nettyServerContext();\n         }\n         catch ( Exception e )\n         {\n-            throw new RuntimeException( \"Failed to initialize SSL encryption support, which is required to start \" +\n-                    \"this connector. Error was: \" + e.getMessage(), e );\n-        }\n+            throw new RuntimeException( \"Failed to initialize SSL encryption support, which is required to start \" + \"this connector. Error was: \" + e.getMessage(), e );\n+    }\n     }\n \n     private Authentication authentication( AuthManager authManager, UserManagerSupplier userManagerSupplier )\n@@ -250,4 +236,4 @@ public class BoltKernelExtension extends KernelExtensionFactory<BoltKernelExtens\n     {\n         return new DefaultBoltProtocolPipelineInstallerFactory( connectionFactory, throttleGroup, logService );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
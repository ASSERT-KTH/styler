{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1829",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "52",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1829/NonUniqueLuceneIndexSampler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1829/NonUniqueLuceneIndexSampler.java\nindex f49087d904c..17c68e52718 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1829/NonUniqueLuceneIndexSampler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1829/NonUniqueLuceneIndexSampler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.schema.sampler;\n \n import org.apache.lucene.index.Fields;\n@@ -45,62 +46,61 @@ import org.neo4j.storageengine.api.schema.IndexSample;\n  */\n public class NonUniqueLuceneIndexSampler extends LuceneIndexSampler\n {\n-    private final IndexSearcher indexSearcher;\n-    private final IndexSamplingConfig indexSamplingConfig;\n+  private final IndexSearcher indexSearcher;\n+  private final IndexSamplingConfig indexSamplingConfig;\n \n-    public NonUniqueLuceneIndexSampler( IndexSearcher indexSearcher, TaskControl taskControl,\n-            IndexSamplingConfig indexSamplingConfig )\n-    {\n-        super( taskControl );\n-        this.indexSearcher = indexSearcher;\n-        this.indexSamplingConfig = indexSamplingConfig;\n-    }\n+  public NonUniqueLuceneIndexSampler(IndexSearcher indexSearcher, TaskControl taskControl,\n+                                     IndexSamplingConfig indexSamplingConfig)\n+  {\n+    super(taskControl);\n+    this.indexSearcher = indexSearcher;\n+    this.indexSamplingConfig = indexSamplingConfig;\n+  }\n \n-    @Override\n-    public IndexSample sampleIndex() throws IndexNotFoundKernelException\n+  @Override\n+  public IndexSample sampleIndex() throws IndexNotFoundKernelException\n+  {\n+    NonUniqueIndexSampler sampler = new DefaultNonUniqueIndexSampler(indexSamplingConfig.sampleSizeLimit());\n+    IndexReader indexReader = indexSearcher.getIndexReader();\n+    for (LeafReaderContext readerContext : indexReader.leaves())\n     {\n-        NonUniqueIndexSampler sampler = new DefaultNonUniqueIndexSampler( indexSamplingConfig.sampleSizeLimit() );\n-        IndexReader indexReader = indexSearcher.getIndexReader();\n-        for ( LeafReaderContext readerContext : indexReader.leaves() )\n+      try\n+      {\n+        Set<String> fieldNames = getFieldNamesToSample(readerContext);\n+        for (String fieldName : fieldNames)\n         {\n-            try\n+          Terms terms = readerContext.reader().terms(fieldName);\n+          if (terms != null)\n+          {\n+            TermsEnum termsEnum = LuceneDocumentStructure.originalTerms(terms, fieldName);\n+            BytesRef termsRef;\n+            while ((termsRef = termsEnum.next()) != null)\n             {\n-                Set<String> fieldNames = getFieldNamesToSample( readerContext );\n-                for ( String fieldName : fieldNames )\n-                {\n-                    Terms terms = readerContext.reader().terms( fieldName );\n-                    if ( terms != null )\n-                    {\n-                        TermsEnum termsEnum = LuceneDocumentStructure.originalTerms( terms, fieldName );\n-                        BytesRef termsRef;\n-                        while ( (termsRef = termsEnum.next()) != null )\n-                        {\n-                            sampler.include( termsRef.utf8ToString(), termsEnum.docFreq() );\n-                            checkCancellation();\n-                        }\n-                    }\n-                }\n-            }\n-            catch ( IOException e )\n-            {\n-                throw new RuntimeException( e );\n+              sampler.include(termsRef.utf8ToString(), termsEnum.docFreq());\n+              checkCancellation();\n             }\n+          }\n         }\n-\n-        return sampler.result( indexReader.numDocs() );\n+      } catch (IOException e)\n+      {\n+        throw new RuntimeException(e);\n+      }\n     }\n \n-    private static Set<String> getFieldNamesToSample( LeafReaderContext readerContext ) throws IOException\n+    return sampler.result(indexReader.numDocs());\n+  }\n+\n+  private static Set<String> getFieldNamesToSample(LeafReaderContext readerContext) throws IOException\n+  {\n+    Fields fields = readerContext.reader().fields();\n+    Set<String> fieldNames = new HashSet<>();\n+    for (String field : fields)\n     {\n-        Fields fields = readerContext.reader().fields();\n-        Set<String> fieldNames = new HashSet<>();\n-        for ( String field : fields )\n-        {\n-            if ( !LuceneDocumentStructure.NODE_ID_KEY.equals( field ) )\n-            {\n-                fieldNames.add( field );\n-            }\n-        }\n-        return fieldNames;\n+      if (!LuceneDocumentStructure.NODE_ID_KEY.equals(field))\n+      {\n+        fieldNames.add(field);\n+      }\n     }\n+    return fieldNames;\n+  }\n }\n",
            "diff_size": 70
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1829/NonUniqueLuceneIndexSampler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1829/NonUniqueLuceneIndexSampler.java\nindex f49087d904c..d5f64c98227 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1829/NonUniqueLuceneIndexSampler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1829/NonUniqueLuceneIndexSampler.java\n@@ -103,4 +103,4 @@ public class NonUniqueLuceneIndexSampler extends LuceneIndexSampler\n         }\n         return fieldNames;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
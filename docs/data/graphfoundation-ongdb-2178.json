{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2178",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2178/LongBitsManipulator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2178/LongBitsManipulator.java\nindex 94769c17889..46c485bd425 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2178/LongBitsManipulator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2178/LongBitsManipulator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.cache;\n \n import java.util.Arrays;\n@@ -32,123 +33,123 @@ import org.neo4j.kernel.impl.util.Bits;\n  */\n public class LongBitsManipulator\n {\n-    private static class Slot\n-    {\n-        private final long mask;\n-        private final long maxValue;\n-        private final int bitOffset;\n-\n-        Slot( int bits, long mask, int bitOffset )\n-        {\n-            this.mask = mask;\n-            this.bitOffset = bitOffset;\n-            this.maxValue = (1L << bits) - 1;\n-        }\n-\n-        public long get( long field )\n-        {\n-            long raw = field & mask;\n-            return raw == mask ? -1 : raw >>> bitOffset;\n-        }\n-\n-        public long set( long field, long value )\n-        {\n-            if ( value < -1 || value > maxValue )\n-            {\n-                throw new IllegalStateException( \"Invalid value \" + value + \", max is \" + maxValue );\n-            }\n-\n-            long otherBits = field & ~mask;\n-            return ((value << bitOffset) & mask) | otherBits;\n-        }\n-\n-        public long clear( long field, boolean trueForAllOnes )\n-        {\n-            long otherBits = field & ~mask;\n-            return trueForAllOnes ?\n-                    // all bits in this slot as 1\n-                    otherBits | mask :\n-\n-                    // all bits in this slot as 0\n-                    otherBits;\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return getClass().getSimpleName() + \"[\" + Bits.numbersToBitString( new long[] {maxValue << bitOffset} ) + \"]\";\n-        }\n-    }\n-\n-    private final Slot[] slots;\n+  private static class Slot\n+  {\n+    private final long mask;\n+    private final long maxValue;\n+    private final int bitOffset;\n \n-    public LongBitsManipulator( int... slotsAndTheirBitCounts )\n+    Slot(int bits, long mask, int bitOffset)\n     {\n-        slots = intoSlots( slotsAndTheirBitCounts );\n+      this.mask = mask;\n+      this.bitOffset = bitOffset;\n+      this.maxValue = (1L << bits) - 1;\n     }\n \n-    private Slot[] intoSlots( int[] slotsAndTheirSizes )\n+    public long get(long field)\n     {\n-        Slot[] slots = new Slot[slotsAndTheirSizes.length];\n-        int bitCursor = 0;\n-        for ( int i = 0; i < slotsAndTheirSizes.length; i++ )\n-        {\n-            int bits = slotsAndTheirSizes[i];\n-            long mask = (1L << bits) - 1;\n-            mask <<= bitCursor;\n-            slots[i] = new Slot( bits, mask, bitCursor );\n-            bitCursor += bits;\n-        }\n-        return slots;\n+      long raw = field & mask;\n+      return raw == mask ? -1 : raw >>> bitOffset;\n     }\n \n-    public int slots()\n+    public long set(long field, long value)\n     {\n-        return slots.length;\n+      if (value < -1 || value > maxValue)\n+      {\n+        throw new IllegalStateException(\"Invalid value \" + value + \", max is \" + maxValue);\n+      }\n+\n+      long otherBits = field & ~mask;\n+      return ((value << bitOffset) & mask) | otherBits;\n     }\n \n-    public long set( long field, int slotIndex, long value )\n+    public long clear(long field, boolean trueForAllOnes)\n     {\n-        return slot( slotIndex ).set( field, value );\n+      long otherBits = field & ~mask;\n+      return trueForAllOnes ?\n+          // all bits in this slot as 1\n+          otherBits | mask :\n+\n+          // all bits in this slot as 0\n+          otherBits;\n     }\n \n-    public long get( long field, int slotIndex )\n+    @Override\n+    public String toString()\n     {\n-        return slot( slotIndex ).get( field );\n+      return getClass().getSimpleName() + \"[\" + Bits.numbersToBitString(new long[] {maxValue << bitOffset}) + \"]\";\n     }\n+  }\n+\n+  private final Slot[] slots;\n+\n+  public LongBitsManipulator(int... slotsAndTheirBitCounts)\n+  {\n+    slots = intoSlots(slotsAndTheirBitCounts);\n+  }\n \n-    public long clear( long field, int slotIndex, boolean trueForAllOnes )\n+  private Slot[] intoSlots(int[] slotsAndTheirSizes)\n+  {\n+    Slot[] slots = new Slot[slotsAndTheirSizes.length];\n+    int bitCursor = 0;\n+    for (int i = 0; i < slotsAndTheirSizes.length; i++)\n     {\n-        return slot( slotIndex ).clear( field, trueForAllOnes );\n+      int bits = slotsAndTheirSizes[i];\n+      long mask = (1L << bits) - 1;\n+      mask <<= bitCursor;\n+      slots[i] = new Slot(bits, mask, bitCursor);\n+      bitCursor += bits;\n     }\n-\n-    public long template( boolean... trueForOnes )\n+    return slots;\n+  }\n+\n+  public int slots()\n+  {\n+    return slots.length;\n+  }\n+\n+  public long set(long field, int slotIndex, long value)\n+  {\n+    return slot(slotIndex).set(field, value);\n+  }\n+\n+  public long get(long field, int slotIndex)\n+  {\n+    return slot(slotIndex).get(field);\n+  }\n+\n+  public long clear(long field, int slotIndex, boolean trueForAllOnes)\n+  {\n+    return slot(slotIndex).clear(field, trueForAllOnes);\n+  }\n+\n+  public long template(boolean... trueForOnes)\n+  {\n+    if (trueForOnes.length != slots.length)\n     {\n-        if ( trueForOnes.length != slots.length )\n-        {\n-            throw new IllegalArgumentException( \"Invalid boolean arguments, expected \" + slots.length );\n-        }\n-\n-        long field = 0;\n-        for ( int i = 0; i < trueForOnes.length; i++ )\n-        {\n-            field = slots[i].clear( field, trueForOnes[i] );\n-        }\n-        return field;\n+      throw new IllegalArgumentException(\"Invalid boolean arguments, expected \" + slots.length);\n     }\n \n-    private Slot slot( int slotIndex )\n+    long field = 0;\n+    for (int i = 0; i < trueForOnes.length; i++)\n     {\n-        if ( slotIndex < 0 || slotIndex >= slots.length )\n-        {\n-            throw new IllegalArgumentException( \"Invalid slot \" + slotIndex + \", I've got \" + this );\n-        }\n-        return slots[slotIndex];\n+      field = slots[i].clear(field, trueForOnes[i]);\n     }\n+    return field;\n+  }\n \n-    @Override\n-    public String toString()\n+  private Slot slot(int slotIndex)\n+  {\n+    if (slotIndex < 0 || slotIndex >= slots.length)\n     {\n-        return Arrays.toString( slots );\n+      throw new IllegalArgumentException(\"Invalid slot \" + slotIndex + \", I've got \" + this);\n     }\n+    return slots[slotIndex];\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return Arrays.toString(slots);\n+  }\n }\n",
            "diff_size": 161
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "56",
                    "column": "37",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2178/LongBitsManipulator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2178/LongBitsManipulator.java\nindex 94769c17889..33859033fd2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2178/LongBitsManipulator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2178/LongBitsManipulator.java\n@@ -42,7 +42,7 @@ public class LongBitsManipulator\n         {\n             this.mask = mask;\n             this.bitOffset = bitOffset;\n-            this.maxValue = (1L << bits) - 1;\n+            this.maxValue = ( 1L << bits) - 1;\n         }\n \n         public long get( long field )\n@@ -53,7 +53,7 @@ public class LongBitsManipulator\n \n         public long set( long field, long value )\n         {\n-            if ( value < -1 || value > maxValue )\n+            if ( value < -1 || value> maxValue )\n             {\n                 throw new IllegalStateException( \"Invalid value \" + value + \", max is \" + maxValue );\n             }\n@@ -65,8 +65,7 @@ public class LongBitsManipulator\n         public long clear( long field, boolean trueForAllOnes )\n         {\n             long otherBits = field & ~mask;\n-            return trueForAllOnes ?\n-                    // all bits in this slot as 1\n+            return trueForAllOnes ? // all bits in this slot as 1\n                     otherBits | mask :\n \n                     // all bits in this slot as 0\n@@ -76,7 +75,8 @@ public class LongBitsManipulator\n         @Override\n         public String toString()\n         {\n-            return getClass().getSimpleName() + \"[\" + Bits.numbersToBitString( new long[] {maxValue << bitOffset} ) + \"]\";\n+            return getClass().getSimpleName() + \"[\" + Bits.numbersToBitString( new long[]{\n+    maxValue << bitOffset} ) + \"]\";\n         }\n     }\n \n@@ -94,12 +94,13 @@ public class LongBitsManipulator\n         for ( int i = 0; i < slotsAndTheirSizes.length; i++ )\n         {\n             int bits = slotsAndTheirSizes[i];\n-            long mask = (1L << bits) - 1;\n+            long mask = ( 1L << bits) - 1;\n             mask <<= bitCursor;\n             slots[i] = new Slot( bits, mask, bitCursor );\n             bitCursor += bits;\n         }\n-        return slots;\n+\n+return slots;\n     }\n \n     public int slots()\n@@ -134,7 +135,8 @@ public class LongBitsManipulator\n         {\n             field = slots[i].clear( field, trueForOnes[i] );\n         }\n-        return field;\n+\n+return field;\n     }\n \n     private Slot slot( int slotIndex )\n@@ -143,7 +145,8 @@ public class LongBitsManipulator\n         {\n             throw new IllegalArgumentException( \"Invalid slot \" + slotIndex + \", I've got \" + this );\n         }\n-        return slots[slotIndex];\n+\n+return slots[slotIndex];\n     }\n \n     @Override\n@@ -151,4 +154,4 @@ public class LongBitsManipulator\n     {\n         return Arrays.toString( slots );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
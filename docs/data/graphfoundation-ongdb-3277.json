{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3277",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "33",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3277/BoltResponseMessage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3277/BoltResponseMessage.java\nindex c92acc00e3d..f4f1d734743 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3277/BoltResponseMessage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3277/BoltResponseMessage.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.v1.messaging;\n \n import static java.lang.String.format;\n@@ -28,47 +29,48 @@ import static java.lang.String.format;\n  */\n public enum BoltResponseMessage\n {\n-    SUCCESS( 0x70 ),\n-    RECORD( 0x71 ),\n-    IGNORED( 0x7E ),\n-    FAILURE( 0x7F );\n+  SUCCESS(0x70),\n+  RECORD(0x71),\n+  IGNORED(0x7E),\n+  FAILURE(0x7F);\n+\n+  private static BoltResponseMessage[] valuesBySignature = new BoltResponseMessage[0x80];\n \n-    private static BoltResponseMessage[] valuesBySignature =  new BoltResponseMessage[0x80];\n-    static\n+  static\n+  {\n+    for (BoltResponseMessage value : values())\n     {\n-        for ( BoltResponseMessage value : values() )\n-        {\n-            valuesBySignature[value.signature()] = value;\n-        }\n+      valuesBySignature[value.signature()] = value;\n     }\n+  }\n \n-    /**\n-     * Obtain a response message by signature.\n-     *\n-     * @param signature the signature byte to look up\n-     * @return the appropriate message instance\n-     * @throws IllegalArgumentException if no such message exists\n-     */\n-    public static BoltResponseMessage withSignature( int signature )\n+  /**\n+   * Obtain a response message by signature.\n+   *\n+   * @param signature the signature byte to look up\n+   * @return the appropriate message instance\n+   * @throws IllegalArgumentException if no such message exists\n+   */\n+  public static BoltResponseMessage withSignature(int signature)\n+  {\n+    BoltResponseMessage message = valuesBySignature[signature];\n+    if (message == null)\n     {\n-        BoltResponseMessage message = valuesBySignature[signature];\n-        if ( message == null )\n-        {\n-            throw new IllegalArgumentException( format( \"No message with signature %d\", signature ) );\n-        }\n-        return message;\n+      throw new IllegalArgumentException(format(\"No message with signature %d\", signature));\n     }\n+    return message;\n+  }\n \n-    private final byte signature;\n+  private final byte signature;\n \n-    BoltResponseMessage( int signature )\n-    {\n-        this.signature = (byte) signature;\n-    }\n+  BoltResponseMessage(int signature)\n+  {\n+    this.signature = (byte) signature;\n+  }\n \n-    public byte signature()\n-    {\n-        return signature;\n-    }\n+  public byte signature()\n+  {\n+    return signature;\n+  }\n \n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3277/BoltResponseMessage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3277/BoltResponseMessage.java\nindex c92acc00e3d..b630f7e4e37 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3277/BoltResponseMessage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3277/BoltResponseMessage.java\n@@ -28,12 +28,9 @@ import static java.lang.String.format;\n  */\n public enum BoltResponseMessage\n {\n-    SUCCESS( 0x70 ),\n-    RECORD( 0x71 ),\n-    IGNORED( 0x7E ),\n-    FAILURE( 0x7F );\n+    SUCCESS( 0x70 ), RECORD( 0x71 ), IGNORED( 0x7E ), FAILURE( 0x7F );\n \n-    private static BoltResponseMessage[] valuesBySignature =  new BoltResponseMessage[0x80];\n+    private static BoltResponseMessage[] valuesBySignature = new BoltResponseMessage[0x80];\n     static\n     {\n         for ( BoltResponseMessage value : values() )\n@@ -56,7 +53,8 @@ public enum BoltResponseMessage\n         {\n             throw new IllegalArgumentException( format( \"No message with signature %d\", signature ) );\n         }\n-        return message;\n+\n+return message;\n     }\n \n     private final byte signature;\n@@ -70,5 +68,4 @@ public enum BoltResponseMessage\n     {\n         return signature;\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3089",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3089/UniquenessFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3089/UniquenessFactory.java\nindex 3b98246e672..46030741ce8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3089/UniquenessFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3089/UniquenessFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphdb.traversal;\n \n /**\n@@ -26,24 +27,24 @@ package org.neo4j.graphdb.traversal;\n  */\n public interface UniquenessFactory\n {\n-    /**\n-     * Creates a new {@link UniquenessFilter} optionally with a parameter\n-     * to it, otherwise null if no parameter should be handed to it.\n-     *\n-     * @param optionalParameter an optional parameter to control the behavior\n-     * of the returned {@link UniquenessFilter}. It's up to each filter implementation\n-     * to decide what values are OK and what they mean and the caller of this\n-     * method need to know that and pass in the correct parameter type.\n-     * @return a new {@link UniquenessFilter} of the type that this factory creates.\n-     */\n-    UniquenessFilter create( Object optionalParameter );\n+  /**\n+   * Creates a new {@link UniquenessFilter} optionally with a parameter\n+   * to it, otherwise null if no parameter should be handed to it.\n+   *\n+   * @param optionalParameter an optional parameter to control the behavior\n+   *                          of the returned {@link UniquenessFilter}. It's up to each filter implementation\n+   *                          to decide what values are OK and what they mean and the caller of this\n+   *                          method need to know that and pass in the correct parameter type.\n+   * @return a new {@link UniquenessFilter} of the type that this factory creates.\n+   */\n+  UniquenessFilter create(Object optionalParameter);\n \n-    /**\n-     * Specifies if the {@link UniquenessFilter} must handle start branches eagerly. Depending on the\n-     * level of uniqueness it is not always necessary to eagerly exhaust start\n-     * branches which can speed up the execution of the traversal.\n-     *\n-     * @return {@code true} if eager start branches must be used, otherwise {@code false}.\n-     */\n-    boolean eagerStartBranches();\n+  /**\n+   * Specifies if the {@link UniquenessFilter} must handle start branches eagerly. Depending on the\n+   * level of uniqueness it is not always necessary to eagerly exhaust start\n+   * branches which can speed up the execution of the traversal.\n+   *\n+   * @return {@code true} if eager start branches must be used, otherwise {@code false}.\n+   */\n+  boolean eagerStartBranches();\n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3089/UniquenessFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3089/UniquenessFactory.java\nindex 3b98246e672..1340db084a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3089/UniquenessFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3089/UniquenessFactory.java\n@@ -46,4 +46,4 @@ public interface UniquenessFactory\n      * @return {@code true} if eager start branches must be used, otherwise {@code false}.\n      */\n     boolean eagerStartBranches();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1676",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1676/ExplicitIndexValueValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1676/ExplicitIndexValueValidator.java\nindex 0d2f9717990..fb5d3275363 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1676/ExplicitIndexValueValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1676/ExplicitIndexValueValidator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n import org.neo4j.kernel.api.ExplicitIndex;\n@@ -27,26 +28,26 @@ import org.neo4j.kernel.impl.util.Validator;\n  */\n public class ExplicitIndexValueValidator implements Validator<Object>\n {\n-    public static final ExplicitIndexValueValidator INSTANCE = new ExplicitIndexValueValidator();\n+  public static final ExplicitIndexValueValidator INSTANCE = new ExplicitIndexValueValidator();\n+\n+  private ExplicitIndexValueValidator()\n+  {\n+  }\n \n-    private ExplicitIndexValueValidator()\n+  @Override\n+  public void validate(Object value)\n+  {\n+    if (value == null)\n     {\n+      throw new IllegalArgumentException(\"Null value\");\n     }\n-\n-    @Override\n-    public void validate( Object value )\n+    if (value instanceof String)\n+    {\n+      LuceneIndexValueValidator.INSTANCE.validate(((String) value).getBytes());\n+    }\n+    if (!(value instanceof Number) && value.toString() == null)\n     {\n-        if ( value == null )\n-        {\n-            throw new IllegalArgumentException( \"Null value\" );\n-        }\n-        if ( value instanceof String )\n-        {\n-            LuceneIndexValueValidator.INSTANCE.validate( ((String)value).getBytes() );\n-        }\n-        if ( !(value instanceof Number) && value.toString() == null )\n-        {\n-            throw new IllegalArgumentException( \"Value of type \" + value.getClass() + \" has null toString\" );\n-        }\n+      throw new IllegalArgumentException(\"Value of type \" + value.getClass() + \" has null toString\");\n     }\n+  }\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1676/ExplicitIndexValueValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1676/ExplicitIndexValueValidator.java\nindex 0d2f9717990..4a5c7088fb1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1676/ExplicitIndexValueValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1676/ExplicitIndexValueValidator.java\n@@ -40,13 +40,15 @@ public class ExplicitIndexValueValidator implements Validator<Object>\n         {\n             throw new IllegalArgumentException( \"Null value\" );\n         }\n-        if ( value instanceof String )\n+\n+if ( value instanceof String )\n         {\n-            LuceneIndexValueValidator.INSTANCE.validate( ((String)value).getBytes() );\n+            LuceneIndexValueValidator.INSTANCE.validate( ((String) value).getBytes() );\n         }\n-        if ( !(value instanceof Number) && value.toString() == null )\n+\n+if ( !( value instanceof Number) && value.toString() == null )\n         {\n             throw new IllegalArgumentException( \"Value of type \" + value.getClass() + \" has null toString\" );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "42",
                    "severity": "error",
                    "message": "'&&' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1676/ExplicitIndexValueValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1676/ExplicitIndexValueValidator.java\nindex 0d2f9717990..db80329fd27 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1676/ExplicitIndexValueValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/1676/ExplicitIndexValueValidator.java\n@@ -25,6 +25,7 @@ import org.neo4j.kernel.impl.util.Validator;\n /**\n  * Validates values added to an {@link ExplicitIndex} before commit.\n  */\n+\n public class ExplicitIndexValueValidator implements Validator<Object>\n {\n     public static final ExplicitIndexValueValidator INSTANCE = new ExplicitIndexValueValidator();\n@@ -40,13 +41,15 @@ public class ExplicitIndexValueValidator implements Validator<Object>\n         {\n             throw new IllegalArgumentException( \"Null value\" );\n         }\n+\n         if ( value instanceof String )\n         {\n-            LuceneIndexValueValidator.INSTANCE.validate( ((String)value).getBytes() );\n+            LuceneIndexValueValidator.INSTANCE.validate( ((String) value).getBytes() );\n         }\n-        if ( !(value instanceof Number) && value.toString() == null )\n+\n+        if ( ! ( value instanceof Number)&& value.toString() == null )\n         {\n             throw new IllegalArgumentException( \"Value of type \" + value.getClass() + \" has null toString\" );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
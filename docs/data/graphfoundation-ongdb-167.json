{
    "project_name": "graphfoundation-ongdb",
    "error_id": "167",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/167/JaxRsServletHolderFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/167/JaxRsServletHolderFactory.java\nindex 06e4a9b3e4b..a7137c90fee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/167/JaxRsServletHolderFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/167/JaxRsServletHolderFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.web;\n \n import com.sun.jersey.api.core.ClassNamesResourceConfig;\n@@ -40,89 +41,89 @@ import org.neo4j.server.plugins.Injectable;\n  */\n public abstract class JaxRsServletHolderFactory\n {\n-    private final List<String> items = new ArrayList<>();\n-    private final List<Injectable<?>> injectables = new ArrayList<>();\n+  private final List<String> items = new ArrayList<>();\n+  private final List<Injectable<?>> injectables = new ArrayList<>();\n \n-    public void add( List<String> items, Collection<Injectable<?>> injectableProviders )\n+  public void add(List<String> items, Collection<Injectable<?>> injectableProviders)\n+  {\n+    this.items.addAll(items);\n+    if (injectableProviders != null)\n     {\n-        this.items.addAll( items );\n-        if ( injectableProviders != null )\n-        {\n-            this.injectables.addAll( injectableProviders );\n-        }\n+      this.injectables.addAll(injectableProviders);\n     }\n+  }\n \n-    public void remove( List<String> items )\n-    {\n-        this.items.removeAll( items );\n-    }\n+  public void remove(List<String> items)\n+  {\n+    this.items.removeAll(items);\n+  }\n \n-    public ServletHolder create( Collection<InjectableProvider<?>> defaultInjectables, boolean wadlEnabled )\n-    {\n-        Collection<InjectableProvider<?>> injectableProviders = mergeInjectables( defaultInjectables, injectables );\n-        ServletContainer container = new NeoServletContainer( injectableProviders );\n-        ServletHolder servletHolder = new ServletHolder( container );\n-        servletHolder.setInitParameter( ResourceConfig.FEATURE_DISABLE_WADL, String.valueOf( !wadlEnabled ) );\n-        configure( servletHolder, toCommaSeparatedList( items ) );\n-        servletHolder.setInitParameter( ResourceConfig.PROPERTY_CONTAINER_REQUEST_FILTERS, getRequestFilterConfig() );\n-        return servletHolder;\n-    }\n+  public ServletHolder create(Collection<InjectableProvider<?>> defaultInjectables, boolean wadlEnabled)\n+  {\n+    Collection<InjectableProvider<?>> injectableProviders = mergeInjectables(defaultInjectables, injectables);\n+    ServletContainer container = new NeoServletContainer(injectableProviders);\n+    ServletHolder servletHolder = new ServletHolder(container);\n+    servletHolder.setInitParameter(ResourceConfig.FEATURE_DISABLE_WADL, String.valueOf(!wadlEnabled));\n+    configure(servletHolder, toCommaSeparatedList(items));\n+    servletHolder.setInitParameter(ResourceConfig.PROPERTY_CONTAINER_REQUEST_FILTERS, getRequestFilterConfig());\n+    return servletHolder;\n+  }\n \n-    private String getRequestFilterConfig()\n-    {\n-        // Ordering of execution of filters goes from left to right\n-        return XForwardFilter.class.getName();\n-    }\n+  private String getRequestFilterConfig()\n+  {\n+    // Ordering of execution of filters goes from left to right\n+    return XForwardFilter.class.getName();\n+  }\n \n-    protected abstract void configure( ServletHolder servletHolder, String commaSeparatedList );\n+  protected abstract void configure(ServletHolder servletHolder, String commaSeparatedList);\n \n-    private Collection<InjectableProvider<?>> mergeInjectables( Collection<InjectableProvider<?>> defaultInjectables,\n-            Collection<Injectable<?>> injectables )\n+  private Collection<InjectableProvider<?>> mergeInjectables(Collection<InjectableProvider<?>> defaultInjectables,\n+                                                             Collection<Injectable<?>> injectables)\n+  {\n+    Collection<InjectableProvider<?>> injectableProviders = new ArrayList<>();\n+    if (defaultInjectables != null)\n     {\n-        Collection<InjectableProvider<?>> injectableProviders = new ArrayList<>();\n-        if ( defaultInjectables != null )\n-        {\n-            injectableProviders.addAll( defaultInjectables );\n-        }\n-        if ( injectables != null )\n-        {\n-            for ( Injectable<?> injectable : injectables )\n-            {\n-                injectableProviders.add( new InjectableWrapper( injectable ) );\n-            }\n-        }\n-        return injectableProviders;\n+      injectableProviders.addAll(defaultInjectables);\n     }\n-\n-    private String toCommaSeparatedList( List<String> packageNames )\n+    if (injectables != null)\n     {\n-        StringBuilder sb = new StringBuilder();\n+      for (Injectable<?> injectable : injectables)\n+      {\n+        injectableProviders.add(new InjectableWrapper(injectable));\n+      }\n+    }\n+    return injectableProviders;\n+  }\n \n-        for ( String str : packageNames )\n-        {\n-            sb.append( str );\n-            sb.append( \", \" );\n-        }\n+  private String toCommaSeparatedList(List<String> packageNames)\n+  {\n+    StringBuilder sb = new StringBuilder();\n \n-        String result = sb.toString();\n-        return result.substring( 0, result.length() - 2 );\n+    for (String str : packageNames)\n+    {\n+      sb.append(str);\n+      sb.append(\", \");\n     }\n \n-    public static class Packages extends JaxRsServletHolderFactory\n+    String result = sb.toString();\n+    return result.substring(0, result.length() - 2);\n+  }\n+\n+  public static class Packages extends JaxRsServletHolderFactory\n+  {\n+    @Override\n+    protected void configure(ServletHolder servletHolder, String packages)\n     {\n-        @Override\n-        protected void configure( ServletHolder servletHolder, String packages )\n-        {\n-            servletHolder.setInitParameter( PackagesResourceConfig.PROPERTY_PACKAGES, packages );\n-        }\n+      servletHolder.setInitParameter(PackagesResourceConfig.PROPERTY_PACKAGES, packages);\n     }\n+  }\n \n-    public static class Classes extends JaxRsServletHolderFactory\n+  public static class Classes extends JaxRsServletHolderFactory\n+  {\n+    @Override\n+    protected void configure(ServletHolder servletHolder, String classes)\n     {\n-        @Override\n-        protected void configure( ServletHolder servletHolder, String classes )\n-        {\n-            servletHolder.setInitParameter( ClassNamesResourceConfig.PROPERTY_CLASSNAMES, classes );\n-        }\n+      servletHolder.setInitParameter(ClassNamesResourceConfig.PROPERTY_CLASSNAMES, classes);\n     }\n+  }\n }\n",
            "diff_size": 93
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/167/JaxRsServletHolderFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/167/JaxRsServletHolderFactory.java\nindex 06e4a9b3e4b..1c618532c62 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/167/JaxRsServletHolderFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/167/JaxRsServletHolderFactory.java\n@@ -76,15 +76,15 @@ public abstract class JaxRsServletHolderFactory\n \n     protected abstract void configure( ServletHolder servletHolder, String commaSeparatedList );\n \n-    private Collection<InjectableProvider<?>> mergeInjectables( Collection<InjectableProvider<?>> defaultInjectables,\n-            Collection<Injectable<?>> injectables )\n+    private Collection<InjectableProvider<?>> mergeInjectables( Collection<InjectableProvider<?>> defaultInjectables, Collection<Injectable<?>> injectables )\n     {\n         Collection<InjectableProvider<?>> injectableProviders = new ArrayList<>();\n         if ( defaultInjectables != null )\n         {\n             injectableProviders.addAll( defaultInjectables );\n         }\n-        if ( injectables != null )\n+\n+if ( injectables != null )\n         {\n             for ( Injectable<?> injectable : injectables )\n             {\n@@ -97,8 +97,7 @@ public abstract class JaxRsServletHolderFactory\n     private String toCommaSeparatedList( List<String> packageNames )\n     {\n         StringBuilder sb = new StringBuilder();\n-\n-        for ( String str : packageNames )\n+for ( String str : packageNames )\n         {\n             sb.append( str );\n             sb.append( \", \" );\n@@ -125,4 +124,4 @@ public abstract class JaxRsServletHolderFactory\n             servletHolder.setInitParameter( ClassNamesResourceConfig.PROPERTY_CLASSNAMES, classes );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
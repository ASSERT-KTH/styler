{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2412",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2412/LockResource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2412/LockResource.java\nindex cc94f0cffe6..268d4e2e997 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2412/LockResource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2412/LockResource.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.locking.community;\n \n import org.neo4j.helpers.MathUtil;\n@@ -24,66 +25,68 @@ import org.neo4j.storageengine.api.lock.ResourceType;\n \n public class LockResource\n {\n-    private final ResourceType resourceType;\n-    private final long resourceId;\n+  private final ResourceType resourceType;\n+  private final long resourceId;\n+\n+  /**\n+   * Local reference count, used for each client to count references to a lock.\n+   */\n+  private int refCount = 1;\n \n-    /** Local reference count, used for each client to count references to a lock. */\n-    private int refCount = 1;\n+  public LockResource(ResourceType resourceType, long resourceId)\n+  {\n+    this.resourceType = resourceType;\n+    this.resourceId = resourceId;\n+  }\n \n-    public LockResource( ResourceType resourceType, long resourceId )\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        this.resourceType = resourceType;\n-        this.resourceId = resourceId;\n+      return true;\n     }\n-\n-    @Override\n-    public boolean equals( Object o )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n+      return false;\n+    }\n \n-        LockResource that = (LockResource) o;\n-        return resourceId == that.resourceId && resourceType.equals( that.resourceType );\n+    LockResource that = (LockResource) o;\n+    return resourceId == that.resourceId && resourceType.equals(that.resourceType);\n \n-    }\n+  }\n \n-    @Override\n-    public int hashCode()\n-    {\n-        int result = resourceType.hashCode();\n-        result = 31 * result + (int) (resourceId ^ (resourceId >>> 32));\n-        return result;\n-    }\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = resourceType.hashCode();\n+    result = 31 * result + (int) (resourceId ^ (resourceId >>> 32));\n+    return result;\n+  }\n \n-    @Override\n-    public String toString()\n-    {\n-        return String.format( \"%s(%d)\", resourceType, resourceId );\n-    }\n+  @Override\n+  public String toString()\n+  {\n+    return String.format(\"%s(%d)\", resourceType, resourceId);\n+  }\n \n-    public void acquireReference()\n-    {\n-        refCount = Math.incrementExact( refCount );\n-    }\n+  public void acquireReference()\n+  {\n+    refCount = Math.incrementExact(refCount);\n+  }\n \n-    public int releaseReference()\n-    {\n-        return refCount = MathUtil.decrementExactNotPastZero( refCount );\n-    }\n+  public int releaseReference()\n+  {\n+    return refCount = MathUtil.decrementExactNotPastZero(refCount);\n+  }\n \n-    public long resourceId()\n-    {\n-        return resourceId;\n-    }\n+  public long resourceId()\n+  {\n+    return resourceId;\n+  }\n \n-    public ResourceType type()\n-    {\n-        return resourceType;\n-    }\n+  public ResourceType type()\n+  {\n+    return resourceType;\n+  }\n }\n",
            "diff_size": 61
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "60",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2412/LockResource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2412/LockResource.java\nindex cc94f0cffe6..fc7af862e76 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2412/LockResource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2412/LockResource.java\n@@ -43,21 +43,21 @@ public class LockResource\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n \n         LockResource that = (LockResource) o;\n         return resourceId == that.resourceId && resourceType.equals( that.resourceType );\n-\n     }\n \n     @Override\n     public int hashCode()\n     {\n         int result = resourceType.hashCode();\n-        result = 31 * result + (int) (resourceId ^ (resourceId >>> 32));\n+        result = 31 * result + ( int) ( resourceId ^ ( resourceId >>> 32 ));\n         return result;\n     }\n \n@@ -86,4 +86,4 @@ public class LockResource\n     {\n         return resourceType;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
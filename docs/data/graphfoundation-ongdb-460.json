{
    "project_name": "graphfoundation-ongdb",
    "error_id": "460",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/460/CatchUpMetrics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/460/CatchUpMetrics.java\nindex 5aa0b3077cd..68f04ded154 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/460/CatchUpMetrics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/460/CatchUpMetrics.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.metrics.source.causalclustering;\n \n import com.codahale.metrics.Gauge;\n@@ -30,35 +31,35 @@ import org.neo4j.kernel.monitoring.Monitors;\n \n import static com.codahale.metrics.MetricRegistry.name;\n \n-@Documented( \".CatchUp Metrics\" )\n+@Documented(\".CatchUp Metrics\")\n public class CatchUpMetrics extends LifecycleAdapter\n {\n-    private static final String CAUSAL_CLUSTERING_PREFIX = \"neo4j.causal_clustering.catchup\";\n+  private static final String CAUSAL_CLUSTERING_PREFIX = \"neo4j.causal_clustering.catchup\";\n \n-    @Documented( \"TX pull requests received from read replicas\" )\n-    public static final String TX_PULL_REQUESTS_RECEIVED = name( CAUSAL_CLUSTERING_PREFIX, \"tx_pull_requests_received\" );\n+  @Documented(\"TX pull requests received from read replicas\")\n+  public static final String TX_PULL_REQUESTS_RECEIVED = name(CAUSAL_CLUSTERING_PREFIX, \"tx_pull_requests_received\");\n \n-    private Monitors monitors;\n-    private MetricRegistry registry;\n-    private final TxPullRequestsMetric txPullRequestsMetric = new TxPullRequestsMetric();\n+  private Monitors monitors;\n+  private MetricRegistry registry;\n+  private final TxPullRequestsMetric txPullRequestsMetric = new TxPullRequestsMetric();\n \n-    public CatchUpMetrics( Monitors monitors, MetricRegistry registry )\n-    {\n-        this.monitors = monitors;\n-        this.registry = registry;\n-    }\n+  public CatchUpMetrics(Monitors monitors, MetricRegistry registry)\n+  {\n+    this.monitors = monitors;\n+    this.registry = registry;\n+  }\n \n-    @Override\n-    public void start()\n-    {\n-        monitors.addMonitorListener( txPullRequestsMetric );\n-        registry.register( TX_PULL_REQUESTS_RECEIVED, (Gauge<Long>) txPullRequestsMetric::txPullRequestsReceived );\n-    }\n+  @Override\n+  public void start()\n+  {\n+    monitors.addMonitorListener(txPullRequestsMetric);\n+    registry.register(TX_PULL_REQUESTS_RECEIVED, (Gauge<Long>) txPullRequestsMetric::txPullRequestsReceived);\n+  }\n \n-    @Override\n-    public void stop()\n-    {\n-        registry.remove( TX_PULL_REQUESTS_RECEIVED );\n-        monitors.removeMonitorListener( txPullRequestsMetric );\n-    }\n+  @Override\n+  public void stop()\n+  {\n+    registry.remove(TX_PULL_REQUESTS_RECEIVED);\n+    monitors.removeMonitorListener(txPullRequestsMetric);\n+  }\n }\n",
            "diff_size": 25
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/460/CatchUpMetrics.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/460/CatchUpMetrics.java\nindex 5aa0b3077cd..4ebf44dd5c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/460/CatchUpMetrics.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/460/CatchUpMetrics.java\n@@ -61,4 +61,4 @@ public class CatchUpMetrics extends LifecycleAdapter\n         registry.remove( TX_PULL_REQUESTS_RECEIVED );\n         monitors.removeMonitorListener( txPullRequestsMetric );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
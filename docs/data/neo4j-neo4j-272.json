{
    "project_name": "neo4j-neo4j",
    "error_id": "272",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "129",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/272/RelationshipDirection.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/272/RelationshipDirection.java\nindex f947627c670..3acf34e7f5d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/272/RelationshipDirection.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/272/RelationshipDirection.java\n@@ -17,25 +17,26 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.api;\n \n /**\n  * Low level representation of relationship direction, used to keep traversal state and query tx-state\n- *\n+ * <p>\n  * Given the graph\n- *      a  -[r1]-> b\n- *      a <-[r2]-  b\n- *      a  -[r3]-> a\n- *\n+ * a  -[r1]-> b\n+ * a <-[r2]-  b\n+ * a  -[r3]-> a\n+ * <p>\n  * Then\n- *  a.getRelationships( OUTGOING ) => r1\n- *  a.getRelationships( INCOMING ) => r2\n- *  a.getRelationships( LOOP ) => r3\n- *\n+ * a.getRelationships( OUTGOING ) => r1\n+ * a.getRelationships( INCOMING ) => r2\n+ * a.getRelationships( LOOP ) => r3\n+ * <p>\n  * Note that this contrasts with /** @see #org.neo4j.graphdb.Direction(long), where\n- *  a.getRelationships( org.neo4j.graphdb.Direction.OUTGOING ) => r1, r3\n- *  a.getRelationships( org.neo4j.graphdb.Direction.INCOMING ) => r2, r3\n- *  a.getRelationships( org.neo4j.graphdb.Direction.BOTH ) => r1, r2, r3\n+ * a.getRelationships( org.neo4j.graphdb.Direction.OUTGOING ) => r1, r3\n+ * a.getRelationships( org.neo4j.graphdb.Direction.INCOMING ) => r2, r3\n+ * a.getRelationships( org.neo4j.graphdb.Direction.BOTH ) => r1, r2, r3\n  */\n public enum RelationshipDirection\n {\n@@ -44,17 +45,17 @@ public enum RelationshipDirection\n     LOOP,\n     ERROR;\n \n-    public static RelationshipDirection directionOfStrict( long nodeReference, long sourceNodeReference, long targetNodeReference )\n+    public static RelationshipDirection directionOfStrict(long nodeReference, long sourceNodeReference, long targetNodeReference)\n     {\n-        if ( sourceNodeReference == nodeReference )\n+        if (sourceNodeReference == nodeReference)\n         {\n             return targetNodeReference == nodeReference ? RelationshipDirection.LOOP : RelationshipDirection.OUTGOING;\n         }\n-        if ( targetNodeReference == nodeReference )\n+        if (targetNodeReference == nodeReference)\n         {\n             return RelationshipDirection.INCOMING;\n         }\n-        throw new IllegalStateException( \"Traversed relationship that wasn't part of the origin node:\" + nodeReference +\n-                \". The encountered relationship has source:\" + sourceNodeReference + \" and target:\" + targetNodeReference );\n+        throw new IllegalStateException(\"Traversed relationship that wasn't part of the origin node:\" + nodeReference +\n+          \". The encountered relationship has source:\" + sourceNodeReference + \" and target:\" + targetNodeReference);\n     }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
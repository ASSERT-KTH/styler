{
    "project_name": "neo4j-neo4j",
    "error_id": "1962",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "138",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "157",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1962/ConstraintValidationException.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1962/ConstraintValidationException.java\nindex d8f8ef35922..c9913354a0b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1962/ConstraintValidationException.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1962/ConstraintValidationException.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.kernel.api.exceptions.schema;\n \n import org.neo4j.common.TokenNameLookup;\n@@ -32,23 +33,23 @@ public abstract class ConstraintValidationException extends KernelException\n {\n     /**\n      * Constraint validation failures can happen during one of two phases of the constraint lifecycle.\n-     *\n+     * <p>\n      * VERIFICATION is the process to control that a constraint holds with respect to all the data in the graph. This\n      * happens before creating a constraint for example, and if the verification fails the constraint is not created.\n      * Verification can also occur during batch import for example.\n-     *\n+     * <p>\n      * VALIDATION is what happens when the graph is modified, and the resulting state is controlled against a\n      * constraint to see that the modified state does not violate the constraint. If validation fails the modifying\n      * transaction is rolled back.\n      */\n     public enum Phase\n     {\n-        VERIFICATION( Status.Statement.ConstraintVerificationFailed ),\n-        VALIDATION( Status.Schema.ConstraintValidationFailed );\n+        VERIFICATION(Status.Statement.ConstraintVerificationFailed),\n+        VALIDATION(Status.Schema.ConstraintValidationFailed);\n \n         private final Status status;\n \n-        Phase( Status status )\n+        Phase(Status status)\n         {\n             this.status = status;\n         }\n@@ -61,22 +62,22 @@ public abstract class ConstraintValidationException extends KernelException\n \n     protected final ConstraintDescriptor constraint;\n \n-    protected ConstraintValidationException( ConstraintDescriptor constraint, Phase phase, String subject, TokenNameLookup tokenNameLookup )\n+    protected ConstraintValidationException(ConstraintDescriptor constraint, Phase phase, String subject, TokenNameLookup tokenNameLookup)\n     {\n-        super( phase.getStatus(), \"%s does not satisfy %s.\",\n-                subject, constraint.userDescription( tokenNameLookup ) );\n+        super(phase.getStatus(), \"%s does not satisfy %s.\",\n+          subject, constraint.userDescription(tokenNameLookup));\n         this.constraint = constraint;\n     }\n \n-    protected ConstraintValidationException( ConstraintDescriptor constraint, Phase phase, String subject, Throwable failure, TokenNameLookup tokenNameLookup )\n+    protected ConstraintValidationException(ConstraintDescriptor constraint, Phase phase, String subject, Throwable failure, TokenNameLookup tokenNameLookup)\n     {\n-        super( phase.getStatus(), failure, \"%s does not satisfy %s: %s\",\n-                subject, constraint.userDescription( tokenNameLookup ), failure.getMessage() );\n+        super(phase.getStatus(), failure, \"%s does not satisfy %s: %s\",\n+          subject, constraint.userDescription(tokenNameLookup), failure.getMessage());\n         this.constraint = constraint;\n     }\n \n     @Override\n-    public abstract String getUserMessage( TokenNameLookup tokenNameLookup );\n+    public abstract String getUserMessage(TokenNameLookup tokenNameLookup);\n \n     public ConstraintDescriptor constraint()\n     {\n",
            "diff_size": 13
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
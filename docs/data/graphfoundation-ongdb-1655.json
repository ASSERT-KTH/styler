{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1655",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "85",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "89",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "86",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1655/Appending.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1655/Appending.java\nindex d8366f8462a..985454bcef5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1655/Appending.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1655/Appending.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus.roles;\n \n import java.io.IOException;\n@@ -37,114 +38,112 @@ import static java.lang.String.format;\n \n class Appending\n {\n-    private Appending()\n-    {\n-    }\n-\n-    static void handleAppendEntriesRequest( ReadableRaftState state, Outcome outcome,\n-            RaftMessages.AppendEntries.Request request, Log log ) throws IOException\n+  private Appending()\n+  {\n+  }\n+\n+  static void handleAppendEntriesRequest(ReadableRaftState state, Outcome outcome,\n+                                         RaftMessages.AppendEntries.Request request, Log log) throws IOException\n+  {\n+    if (request.leaderTerm() < state.term())\n     {\n-        if ( request.leaderTerm() < state.term() )\n-        {\n-            RaftMessages.AppendEntries.Response appendResponse = new RaftMessages.AppendEntries.Response(\n-                    state.myself(), state.term(), false, -1, state.entryLog().appendIndex() );\n+      RaftMessages.AppendEntries.Response appendResponse = new RaftMessages.AppendEntries.Response(\n+          state.myself(), state.term(), false, -1, state.entryLog().appendIndex());\n \n-            outcome.addOutgoingMessage( new RaftMessages.Directed( request.from(), appendResponse ) );\n-            return;\n-        }\n+      outcome.addOutgoingMessage(new RaftMessages.Directed(request.from(), appendResponse));\n+      return;\n+    }\n \n-        outcome.setPreElection( false );\n-        outcome.setNextTerm( request.leaderTerm() );\n-        outcome.setLeader( request.from() );\n-        outcome.setLeaderCommit( request.leaderCommit() );\n+    outcome.setPreElection(false);\n+    outcome.setNextTerm(request.leaderTerm());\n+    outcome.setLeader(request.from());\n+    outcome.setLeaderCommit(request.leaderCommit());\n \n-        if ( !Follower.logHistoryMatches( state, request.prevLogIndex(), request.prevLogTerm() ) )\n-        {\n-            assert request.prevLogIndex() > -1 && request.prevLogTerm() > -1;\n-            RaftMessages.AppendEntries.Response appendResponse = new RaftMessages.AppendEntries.Response(\n-                    state.myself(), request.leaderTerm(), false, -1, state.entryLog().appendIndex() );\n+    if (!Follower.logHistoryMatches(state, request.prevLogIndex(), request.prevLogTerm()))\n+    {\n+      assert request.prevLogIndex() > -1 && request.prevLogTerm() > -1;\n+      RaftMessages.AppendEntries.Response appendResponse = new RaftMessages.AppendEntries.Response(\n+          state.myself(), request.leaderTerm(), false, -1, state.entryLog().appendIndex());\n \n-            outcome.addOutgoingMessage( new RaftMessages.Directed( request.from(), appendResponse ) );\n-            return;\n-        }\n+      outcome.addOutgoingMessage(new RaftMessages.Directed(request.from(), appendResponse));\n+      return;\n+    }\n \n-        long baseIndex = request.prevLogIndex() + 1;\n-        int offset;\n+    long baseIndex = request.prevLogIndex() + 1;\n+    int offset;\n \n-        /* Find possible truncation point. */\n-        for ( offset = 0; offset < request.entries().length; offset++ )\n-        {\n-            long logIndex = baseIndex + offset;\n-            long logTerm = state.entryLog().readEntryTerm( logIndex );\n-\n-            if ( logIndex > state.entryLog().appendIndex() )\n-            {\n-                // entry doesn't exist because it's beyond the current log end, so we can go ahead and append\n-                break;\n-            }\n-            else if ( logIndex < state.entryLog().prevIndex() )\n-            {\n-                // entry doesn't exist because it's before the earliest known entry, so continue with the next one\n-                continue;\n-            }\n-            else if ( logTerm != request.entries()[offset].term() )\n-            {\n-                /*\n-                 * the entry's index falls within our current range and the term doesn't match what we know. We must\n-                 * truncate.\n-                 */\n-                if ( logIndex <= state.commitIndex() ) // first, assert that we haven't committed what we are about to truncate\n-                {\n-                    throw new IllegalStateException(\n-                            format( \"Cannot truncate entry at index %d with term %d when commit index is at %d\",\n-                                    logIndex, logTerm, state.commitIndex() ) );\n-                }\n-                outcome.addLogCommand( new TruncateLogCommand( logIndex ) );\n-                break;\n-            }\n-        }\n-\n-        if ( offset < request.entries().length )\n+    /* Find possible truncation point. */\n+    for (offset = 0; offset < request.entries().length; offset++)\n+    {\n+      long logIndex = baseIndex + offset;\n+      long logTerm = state.entryLog().readEntryTerm(logIndex);\n+\n+      if (logIndex > state.entryLog().appendIndex())\n+      {\n+        // entry doesn't exist because it's beyond the current log end, so we can go ahead and append\n+        break;\n+      } else if (logIndex < state.entryLog().prevIndex())\n+      {\n+        // entry doesn't exist because it's before the earliest known entry, so continue with the next one\n+        continue;\n+      } else if (logTerm != request.entries()[offset].term())\n+      {\n+        /*\n+         * the entry's index falls within our current range and the term doesn't match what we know. We must\n+         * truncate.\n+         */\n+        if (logIndex <= state.commitIndex()) // first, assert that we haven't committed what we are about to truncate\n         {\n-            outcome.addLogCommand( new BatchAppendLogEntries( baseIndex, offset, request.entries() ) );\n+          throw new IllegalStateException(\n+              format(\"Cannot truncate entry at index %d with term %d when commit index is at %d\",\n+                  logIndex, logTerm, state.commitIndex()));\n         }\n-\n-        Follower.commitToLogOnUpdate(\n-                state, request.prevLogIndex() + request.entries().length, request.leaderCommit(), outcome );\n-\n-        long endMatchIndex = request.prevLogIndex() + request.entries().length; // this is the index of the last incoming entry\n-        RaftMessages.AppendEntries.Response appendResponse = new RaftMessages.AppendEntries.Response(\n-                state.myself(), request.leaderTerm(), true, endMatchIndex, endMatchIndex );\n-        outcome.addOutgoingMessage( new RaftMessages.Directed( request.from(), appendResponse ) );\n+        outcome.addLogCommand(new TruncateLogCommand(logIndex));\n+        break;\n+      }\n     }\n \n-    static void appendNewEntry( ReadableRaftState ctx, Outcome outcome, ReplicatedContent content ) throws IOException\n+    if (offset < request.entries().length)\n     {\n-        long prevLogIndex = ctx.entryLog().appendIndex();\n-        long prevLogTerm = prevLogIndex == -1 ? -1 :\n-                prevLogIndex > ctx.lastLogIndexBeforeWeBecameLeader() ?\n-                        ctx.term() :\n-                        ctx.entryLog().readEntryTerm( prevLogIndex );\n-\n-        RaftLogEntry newLogEntry = new RaftLogEntry( ctx.term(), content );\n-\n-        outcome.addShipCommand( new ShipCommand.NewEntries( prevLogIndex, prevLogTerm, new RaftLogEntry[]{ newLogEntry } ) );\n-        outcome.addLogCommand( new AppendLogEntry( prevLogIndex + 1, newLogEntry ) );\n+      outcome.addLogCommand(new BatchAppendLogEntries(baseIndex, offset, request.entries()));\n     }\n \n-    static void appendNewEntries( ReadableRaftState ctx, Outcome outcome,\n-            List<ReplicatedContent> contents ) throws IOException\n-    {\n-        long prevLogIndex = ctx.entryLog().appendIndex();\n-        long prevLogTerm = prevLogIndex == -1 ? -1 :\n-                prevLogIndex > ctx.lastLogIndexBeforeWeBecameLeader() ?\n-                        ctx.term() :\n-                        ctx.entryLog().readEntryTerm( prevLogIndex );\n-\n-        RaftLogEntry[] raftLogEntries = contents.stream().map( content -> new RaftLogEntry( ctx.term(), content ) )\n-                .toArray( RaftLogEntry[]::new );\n-\n-        outcome.addShipCommand( new ShipCommand.NewEntries( prevLogIndex, prevLogTerm, raftLogEntries ) );\n-        outcome.addLogCommand( new BatchAppendLogEntries( prevLogIndex + 1, 0, raftLogEntries ) );\n-    }\n+    Follower.commitToLogOnUpdate(\n+        state, request.prevLogIndex() + request.entries().length, request.leaderCommit(), outcome);\n+\n+    long endMatchIndex = request.prevLogIndex() + request.entries().length; // this is the index of the last incoming entry\n+    RaftMessages.AppendEntries.Response appendResponse = new RaftMessages.AppendEntries.Response(\n+        state.myself(), request.leaderTerm(), true, endMatchIndex, endMatchIndex);\n+    outcome.addOutgoingMessage(new RaftMessages.Directed(request.from(), appendResponse));\n+  }\n+\n+  static void appendNewEntry(ReadableRaftState ctx, Outcome outcome, ReplicatedContent content) throws IOException\n+  {\n+    long prevLogIndex = ctx.entryLog().appendIndex();\n+    long prevLogTerm = prevLogIndex == -1 ? -1 :\n+        prevLogIndex > ctx.lastLogIndexBeforeWeBecameLeader() ?\n+            ctx.term() :\n+            ctx.entryLog().readEntryTerm(prevLogIndex);\n+\n+    RaftLogEntry newLogEntry = new RaftLogEntry(ctx.term(), content);\n+\n+    outcome.addShipCommand(new ShipCommand.NewEntries(prevLogIndex, prevLogTerm, new RaftLogEntry[] {newLogEntry}));\n+    outcome.addLogCommand(new AppendLogEntry(prevLogIndex + 1, newLogEntry));\n+  }\n+\n+  static void appendNewEntries(ReadableRaftState ctx, Outcome outcome,\n+                               List<ReplicatedContent> contents) throws IOException\n+  {\n+    long prevLogIndex = ctx.entryLog().appendIndex();\n+    long prevLogTerm = prevLogIndex == -1 ? -1 :\n+        prevLogIndex > ctx.lastLogIndexBeforeWeBecameLeader() ?\n+            ctx.term() :\n+            ctx.entryLog().readEntryTerm(prevLogIndex);\n+\n+    RaftLogEntry[] raftLogEntries = contents.stream().map(content -> new RaftLogEntry(ctx.term(), content))\n+        .toArray(RaftLogEntry[]::new);\n+\n+    outcome.addShipCommand(new ShipCommand.NewEntries(prevLogIndex, prevLogTerm, raftLogEntries));\n+    outcome.addLogCommand(new BatchAppendLogEntries(prevLogIndex + 1, 0, raftLogEntries));\n+  }\n }\n",
            "diff_size": 124
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3054",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "77",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "121",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3054/MultiSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3054/MultiSet.java\nindex fac7bb15e4e..9ddf77a9e97 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3054/MultiSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3054/MultiSet.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.helpers.collection;\n \n import java.util.HashMap;\n@@ -25,121 +26,119 @@ import java.util.Set;\n \n public class MultiSet<T>\n {\n-    private final Map<T, Long> inner;\n-    private long size;\n-\n-    public MultiSet()\n-    {\n-        inner = new HashMap<>();\n-    }\n-\n-    public MultiSet( int initialCapacity )\n-    {\n-        inner = new HashMap<>( initialCapacity );\n-    }\n-\n-    public boolean contains( T value )\n-    {\n-        return inner.containsKey( value );\n-    }\n-\n-    public long count( T value )\n-    {\n-        return unbox( inner.get( value ) );\n-    }\n-\n-    public long add( T value )\n-    {\n-        return increment( value, +1 );\n-    }\n-\n-    public long remove( T value )\n-    {\n-       return increment( value, -1 );\n-    }\n-\n-    public long replace( T value, long newCount )\n-    {\n-        if ( newCount <= 0 )\n-        {\n-            long previous = unbox( inner.remove( value ) );\n-            size -= previous;\n-            return previous;\n-        }\n-        else\n-        {\n-            long previous = unbox( inner.put( value, newCount ) );\n-            size += newCount - previous;\n-            return previous;\n-        }\n-    }\n-\n-    public long increment( T value, long amount )\n-    {\n-        long previous = count( value );\n-        if ( amount == 0 )\n-        {\n-            return previous;\n-        }\n-\n-        long newCount = previous + amount;\n-        if ( newCount <= 0 )\n-        {\n-            inner.remove( value );\n-            size -= previous;\n-            return 0;\n-        }\n-        else\n-        {\n-            inner.put( value, newCount );\n-            size += amount;\n-            return newCount;\n-        }\n-    }\n-\n-    public boolean isEmpty()\n-    {\n-        return inner.isEmpty();\n-    }\n-\n-    public long size()\n-    {\n-        return size;\n-    }\n-\n-    public int uniqueSize()\n-    {\n-        return inner.size();\n-    }\n-\n-    public void clear()\n-    {\n-        inner.clear();\n-        size = 0;\n-    }\n-\n-    @Override\n-    public boolean equals( Object other )\n-    {\n-        return (this == other) ||\n-                (!(other == null || getClass() != other.getClass()) &&\n-                        inner.equals( ((MultiSet) other).inner ));\n-\n-    }\n-\n-    @Override\n-    public int hashCode()\n-    {\n-        return inner.hashCode();\n-    }\n-\n-    private long unbox( Long value )\n-    {\n-        return value == null ? 0 : value;\n-    }\n-\n-    public Set<Map.Entry<T,Long>> entrySet()\n-    {\n-        return inner.entrySet();\n-    }\n+  private final Map<T, Long> inner;\n+  private long size;\n+\n+  public MultiSet()\n+  {\n+    inner = new HashMap<>();\n+  }\n+\n+  public MultiSet(int initialCapacity)\n+  {\n+    inner = new HashMap<>(initialCapacity);\n+  }\n+\n+  public boolean contains(T value)\n+  {\n+    return inner.containsKey(value);\n+  }\n+\n+  public long count(T value)\n+  {\n+    return unbox(inner.get(value));\n+  }\n+\n+  public long add(T value)\n+  {\n+    return increment(value, +1);\n+  }\n+\n+  public long remove(T value)\n+  {\n+    return increment(value, -1);\n+  }\n+\n+  public long replace(T value, long newCount)\n+  {\n+    if (newCount <= 0)\n+    {\n+      long previous = unbox(inner.remove(value));\n+      size -= previous;\n+      return previous;\n+    } else\n+    {\n+      long previous = unbox(inner.put(value, newCount));\n+      size += newCount - previous;\n+      return previous;\n+    }\n+  }\n+\n+  public long increment(T value, long amount)\n+  {\n+    long previous = count(value);\n+    if (amount == 0)\n+    {\n+      return previous;\n+    }\n+\n+    long newCount = previous + amount;\n+    if (newCount <= 0)\n+    {\n+      inner.remove(value);\n+      size -= previous;\n+      return 0;\n+    } else\n+    {\n+      inner.put(value, newCount);\n+      size += amount;\n+      return newCount;\n+    }\n+  }\n+\n+  public boolean isEmpty()\n+  {\n+    return inner.isEmpty();\n+  }\n+\n+  public long size()\n+  {\n+    return size;\n+  }\n+\n+  public int uniqueSize()\n+  {\n+    return inner.size();\n+  }\n+\n+  public void clear()\n+  {\n+    inner.clear();\n+    size = 0;\n+  }\n+\n+  @Override\n+  public boolean equals(Object other)\n+  {\n+    return (this == other) ||\n+        (!(other == null || getClass() != other.getClass()) &&\n+            inner.equals(((MultiSet) other).inner));\n+\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return inner.hashCode();\n+  }\n+\n+  private long unbox(Long value)\n+  {\n+    return value == null ? 0 : value;\n+  }\n+\n+  public Set<Map.Entry<T, Long>> entrySet()\n+  {\n+    return inner.entrySet();\n+  }\n }\n",
            "diff_size": 118
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "124",
                    "column": "32",
                    "severity": "error",
                    "message": "'||' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "124",
                    "column": "87",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3054/MultiSet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3054/MultiSet.java\nindex fac7bb15e4e..3d7729a4568 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3054/MultiSet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3054/MultiSet.java\n@@ -25,7 +25,7 @@ import java.util.Set;\n \n public class MultiSet<T>\n {\n-    private final Map<T, Long> inner;\n+    private final Map<T,Long> inner;\n     private long size;\n \n     public MultiSet()\n@@ -50,12 +50,12 @@ public class MultiSet<T>\n \n     public long add( T value )\n     {\n-        return increment( value, +1 );\n+        return increment( value, + 1 );\n     }\n \n     public long remove( T value )\n     {\n-       return increment( value, -1 );\n+    return increment( value, -1 );\n     }\n \n     public long replace( T value, long newCount )\n@@ -121,10 +121,7 @@ public class MultiSet<T>\n     @Override\n     public boolean equals( Object other )\n     {\n-        return (this == other) ||\n-                (!(other == null || getClass() != other.getClass()) &&\n-                        inner.equals( ((MultiSet) other).inner ));\n-\n+        return (this == other) ||(!( other == null || getClass() != other.getClass()) &&inner.equals( ((MultiSet) other).inner ));\n     }\n \n     @Override\n@@ -142,4 +139,4 @@ public class MultiSet<T>\n     {\n         return inner.entrySet();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
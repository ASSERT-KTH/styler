{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3046",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3046/IteratingPropertyReceiver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3046/IteratingPropertyReceiver.java\nindex 34c67383c6d..e77d66ca049 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3046/IteratingPropertyReceiver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3046/IteratingPropertyReceiver.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.core;\n \n import java.util.Arrays;\n@@ -30,30 +31,30 @@ import org.neo4j.storageengine.api.StorageProperty;\n  * same object to save garbage.\n  */\n public class IteratingPropertyReceiver<P extends StorageProperty> extends PrefetchingIterator<P>\n-        implements PropertyReceiver<P>\n+    implements PropertyReceiver<P>\n {\n-    private StorageProperty[] properties = new StorageProperty[9];\n-    private int writeCursor;\n-    private int readCursor;\n+  private StorageProperty[] properties = new StorageProperty[9];\n+  private int writeCursor;\n+  private int readCursor;\n \n-    @Override\n-    public void receive( P property, long propertyRecordId )\n+  @Override\n+  public void receive(P property, long propertyRecordId)\n+  {\n+    if (writeCursor >= properties.length)\n     {\n-        if ( writeCursor >= properties.length )\n-        {\n-            properties = Arrays.copyOf( properties, properties.length * 2 );\n-        }\n-        properties[writeCursor++] = property;\n+      properties = Arrays.copyOf(properties, properties.length * 2);\n     }\n+    properties[writeCursor++] = property;\n+  }\n \n-    @SuppressWarnings( \"unchecked\" )\n-    @Override\n-    protected P fetchNextOrNull()\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  protected P fetchNextOrNull()\n+  {\n+    if (readCursor >= properties.length)\n     {\n-        if ( readCursor >= properties.length )\n-        {\n-            return null;\n-        }\n-        return (P) properties[readCursor++];\n+      return null;\n     }\n+    return (P) properties[readCursor++];\n+  }\n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3046/IteratingPropertyReceiver.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3046/IteratingPropertyReceiver.java\nindex 34c67383c6d..bdd86bf9950 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3046/IteratingPropertyReceiver.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3046/IteratingPropertyReceiver.java\n@@ -29,8 +29,7 @@ import org.neo4j.storageengine.api.StorageProperty;\n  * A {@link PropertyReceiver} which can be iterated over once populated. The receiver and iterator is the\n  * same object to save garbage.\n  */\n-public class IteratingPropertyReceiver<P extends StorageProperty> extends PrefetchingIterator<P>\n-        implements PropertyReceiver<P>\n+public class IteratingPropertyReceiver<P extends StorageProperty> extends PrefetchingIterator<P> implements PropertyReceiver<P>\n {\n     private StorageProperty[] properties = new StorageProperty[9];\n     private int writeCursor;\n@@ -43,7 +42,8 @@ public class IteratingPropertyReceiver<P extends StorageProperty> extends Prefet\n         {\n             properties = Arrays.copyOf( properties, properties.length * 2 );\n         }\n-        properties[writeCursor++] = property;\n+\n+properties[writeCursor++] = property;\n     }\n \n     @SuppressWarnings( \"unchecked\" )\n@@ -56,4 +56,4 @@ public class IteratingPropertyReceiver<P extends StorageProperty> extends Prefet\n         }\n         return (P) properties[readCursor++];\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1926",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "128",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1926/PrepareStoreCopyFiles.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1926/PrepareStoreCopyFiles.java\nindex cc4f46405d9..befb37b55cb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1926/PrepareStoreCopyFiles.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1926/PrepareStoreCopyFiles.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup.storecopy;\n \n import java.io.File;\n@@ -38,81 +39,80 @@ import static org.neo4j.io.fs.FileUtils.relativePath;\n \n public class PrepareStoreCopyFiles implements AutoCloseable\n {\n-    private final NeoStoreDataSource neoStoreDataSource;\n-    private final PageCache pageCache;\n-    private final FileSystemAbstraction fileSystemAbstraction;\n-    private final CloseablesListener closeablesListener = new CloseablesListener();\n+  private final NeoStoreDataSource neoStoreDataSource;\n+  private final PageCache pageCache;\n+  private final FileSystemAbstraction fileSystemAbstraction;\n+  private final CloseablesListener closeablesListener = new CloseablesListener();\n \n-    PrepareStoreCopyFiles( NeoStoreDataSource neoStoreDataSource, PageCache pageCache, FileSystemAbstraction fileSystemAbstraction )\n-    {\n-        this.neoStoreDataSource = neoStoreDataSource;\n-        this.pageCache = pageCache;\n-        this.fileSystemAbstraction = fileSystemAbstraction;\n-    }\n+  PrepareStoreCopyFiles(NeoStoreDataSource neoStoreDataSource, PageCache pageCache, FileSystemAbstraction fileSystemAbstraction)\n+  {\n+    this.neoStoreDataSource = neoStoreDataSource;\n+    this.pageCache = pageCache;\n+    this.fileSystemAbstraction = fileSystemAbstraction;\n+  }\n \n-    PrimitiveLongSet getNonAtomicIndexIds()\n-    {\n-        return Primitive.longSet();\n-    }\n+  PrimitiveLongSet getNonAtomicIndexIds()\n+  {\n+    return Primitive.longSet();\n+  }\n \n-    StoreResource[] getAtomicFilesSnapshot() throws IOException\n-    {\n-        ResourceIterator<StoreFileMetadata> neoStoreFilesIterator =\n-                closeablesListener.add( neoStoreDataSource.getNeoStoreFileListing().builder().excludeAll().includeNeoStoreFiles().build() );\n-        ResourceIterator<StoreFileMetadata> indexIterator = closeablesListener.add( neoStoreDataSource\n-                .getNeoStoreFileListing()\n-                .builder()\n-                .excludeAll()\n-                .includeExplicitIndexStoreStoreFiles()\n-                .includeAdditionalProviders()\n-                .includeLabelScanStoreFiles()\n-                .includeSchemaIndexStoreFiles()\n-                .build() );\n+  StoreResource[] getAtomicFilesSnapshot() throws IOException\n+  {\n+    ResourceIterator<StoreFileMetadata> neoStoreFilesIterator =\n+        closeablesListener.add(neoStoreDataSource.getNeoStoreFileListing().builder().excludeAll().includeNeoStoreFiles().build());\n+    ResourceIterator<StoreFileMetadata> indexIterator = closeablesListener.add(neoStoreDataSource\n+        .getNeoStoreFileListing()\n+        .builder()\n+        .excludeAll()\n+        .includeExplicitIndexStoreStoreFiles()\n+        .includeAdditionalProviders()\n+        .includeLabelScanStoreFiles()\n+        .includeSchemaIndexStoreFiles()\n+        .build());\n \n-        return Stream.concat( neoStoreFilesIterator.stream().filter( isCountFile() ), indexIterator.stream() ).map( mapToStoreResource() ).toArray(\n-                StoreResource[]::new );\n-    }\n+    return Stream.concat(neoStoreFilesIterator.stream().filter(isCountFile()), indexIterator.stream()).map(mapToStoreResource()).toArray(\n+        StoreResource[]::new);\n+  }\n \n-    private Function<StoreFileMetadata,StoreResource> mapToStoreResource()\n+  private Function<StoreFileMetadata, StoreResource> mapToStoreResource()\n+  {\n+    return storeFileMetadata ->\n     {\n-        return storeFileMetadata ->\n-        {\n-            try\n-            {\n-                return toStoreResource( storeFileMetadata );\n-            }\n-            catch ( IOException e )\n-            {\n-                throw new IllegalStateException( \"Unable to create store resource\", e );\n-            }\n-        };\n-    }\n+      try\n+      {\n+        return toStoreResource(storeFileMetadata);\n+      } catch (IOException e)\n+      {\n+        throw new IllegalStateException(\"Unable to create store resource\", e);\n+      }\n+    };\n+  }\n \n-    File[] listReplayableFiles() throws IOException\n+  File[] listReplayableFiles() throws IOException\n+  {\n+    try (Stream<StoreFileMetadata> stream = neoStoreDataSource.getNeoStoreFileListing().builder().excludeLogFiles()\n+        .excludeExplicitIndexStoreFiles().excludeSchemaIndexStoreFiles().excludeAdditionalProviders().build().stream())\n     {\n-        try ( Stream<StoreFileMetadata> stream = neoStoreDataSource.getNeoStoreFileListing().builder().excludeLogFiles()\n-                .excludeExplicitIndexStoreFiles().excludeSchemaIndexStoreFiles().excludeAdditionalProviders().build().stream() )\n-        {\n-            return stream.filter( isCountFile().negate() ).map( StoreFileMetadata::file ).toArray( File[]::new );\n-        }\n+      return stream.filter(isCountFile().negate()).map(StoreFileMetadata::file).toArray(File[]::new);\n     }\n+  }\n \n-    private static Predicate<StoreFileMetadata> isCountFile()\n-    {\n-        return storeFileMetadata -> StoreType.typeOf( storeFileMetadata.file().getName() ).filter( f -> f == StoreType.COUNTS ).isPresent();\n-    }\n+  private static Predicate<StoreFileMetadata> isCountFile()\n+  {\n+    return storeFileMetadata -> StoreType.typeOf(storeFileMetadata.file().getName()).filter(f -> f == StoreType.COUNTS).isPresent();\n+  }\n \n-    private StoreResource toStoreResource( StoreFileMetadata storeFileMetadata ) throws IOException\n-    {\n-        File storeDir = neoStoreDataSource.getStoreDir();\n-        File file = storeFileMetadata.file();\n-        String relativePath = relativePath( storeDir, file );\n-        return new StoreResource( file, relativePath, storeFileMetadata.recordSize(), pageCache, fileSystemAbstraction );\n-    }\n+  private StoreResource toStoreResource(StoreFileMetadata storeFileMetadata) throws IOException\n+  {\n+    File storeDir = neoStoreDataSource.getStoreDir();\n+    File file = storeFileMetadata.file();\n+    String relativePath = relativePath(storeDir, file);\n+    return new StoreResource(file, relativePath, storeFileMetadata.recordSize(), pageCache, fileSystemAbstraction);\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        closeablesListener.close();\n-    }\n+  @Override\n+  public void close()\n+  {\n+    closeablesListener.close();\n+  }\n }\n",
            "diff_size": 72
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
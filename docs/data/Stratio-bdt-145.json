{
    "project_name": "Stratio-bdt",
    "error_id": "145",
    "information": {
        "errors": [
            {
                "line": "56",
                "severity": "error",
                "message": "'CTOR_DEF' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "     * @param spec object\n     */\n    public GosecSpec(CommonG spec) {\n        this.commonspec = spec;\n        restSpec = new RestSpec(spec);\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/145/GosecSpec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/145/GosecSpec.java\nindex 97f3f0830b4..829dbaec1c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/145/GosecSpec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler/145/GosecSpec.java\n@@ -53,6 +53,7 @@ public class GosecSpec extends BaseGSpec {\n      *\n      * @param spec object\n      */\n+\n     public GosecSpec(CommonG spec) {\n         this.commonspec = spec;\n         restSpec = new RestSpec(spec);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/145/GosecSpec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/145/GosecSpec.java\nindex 97f3f0830b4..cad282695a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/145/GosecSpec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/intellij/145/GosecSpec.java\n@@ -48,6 +48,7 @@ public class GosecSpec extends BaseGSpec {\n     private final Logger logger = LoggerFactory.getLogger(GosecSpec.class);\n \n     RestSpec restSpec;\n+\n     /**\n      * Generic constructor.\n      *\n@@ -59,14 +60,20 @@ public class GosecSpec extends BaseGSpec {\n     }\n \n     @When(\"^I create '(policy|user|group)' '(.+?)'( using API service path '(.+?)')?( with user and password '(.+:.+?)')? based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n-    public void createResource(String resource, String resourceId, String endPoint, String loginInfo, String baseData, String type, DataTable modifications) throws Exception {\n-        createResourceIfNotExist(resource, resourceId, endPoint, loginInfo, false, baseData, type, modifications);\n+    public void createResource(String resource, String resourceId, String endPoint,\n+                               String loginInfo, String baseData, String type,\n+                               DataTable modifications) throws Exception {\n+        createResourceIfNotExist(resource, resourceId, endPoint, loginInfo, false, baseData, type,\n+            modifications);\n \n     }\n \n     @When(\"^I create '(policy|user|group)' '(.+?)'( using API service path '(.+?)')?( with user and password '(.+:.+?)')? if it does not exist based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n-    public void createResourceIfNotExist(String resource, String resourceId, String endPoint, String loginInfo, String baseData, String type, DataTable modifications) throws Exception {\n-        createResourceIfNotExist(resource, resourceId, endPoint, loginInfo, true, baseData, type, modifications);\n+    public void createResourceIfNotExist(String resource, String resourceId, String endPoint,\n+                                         String loginInfo, String baseData, String type,\n+                                         DataTable modifications) throws Exception {\n+        createResourceIfNotExist(resource, resourceId, endPoint, loginInfo, true, baseData, type,\n+            modifications);\n     }\n \n     /**\n@@ -82,7 +89,9 @@ public class GosecSpec extends BaseGSpec {\n      * @param modifications\n      * @throws Exception\n      */\n-    private void createResourceIfNotExist(String resource, String resourceId, String endPoint, String loginInfo, boolean doesNotExist, String baseData, String type, DataTable modifications) throws Exception {\n+    private void createResourceIfNotExist(String resource, String resourceId, String endPoint,\n+                                          String loginInfo, boolean doesNotExist, String baseData,\n+                                          String type, DataTable modifications) throws Exception {\n         Integer expectedStatusCreate = 201;\n         Integer expectedStatusDelete = 200;\n         String endPointResource = \"\";\n@@ -126,7 +135,8 @@ public class GosecSpec extends BaseGSpec {\n         if (gosecVersion != null) {\n             String[] gosecVersionArray = gosecVersion.split(\"\\\\.\");\n             // Add inputSourceType if Gosec >= 1.4.x\n-            if (Integer.parseInt(gosecVersionArray[0]) >= 1 && Integer.parseInt(gosecVersionArray[1]) >= 4) {\n+            if (Integer.parseInt(gosecVersionArray[0]) >= 1 &&\n+                Integer.parseInt(gosecVersionArray[1]) >= 4) {\n                 addSourceType = true;\n             }\n         }\n@@ -137,13 +147,18 @@ public class GosecSpec extends BaseGSpec {\n             if (resource.equals(\"policy\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo, null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                        \"' | jq '.list[] | select (.name == \\\"\" + resourceId +\n+                        \"\\\").id' | sed s/\\\\\\\"//g\");\n                     String policyId = commonspec.getCommandResult().trim();\n                     if (!policyId.equals(\"\")) {\n                         commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n                         endPointResource = endPointPolicy + policyId;\n                     } else {\n-                        commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                        commonspec.runLocalCommand(\n+                            \"echo '\" + commonspec.getResponse().getResponse() +\n+                                \"' | jq '.[] | select (.name == \\\"\" + resourceId +\n+                                \"\\\").id' | sed s/\\\\\\\"//g\");\n                         policyId = commonspec.getCommandResult().trim();\n                         if (!policyId.equals(\"\")) {\n                             commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n@@ -159,28 +174,35 @@ public class GosecSpec extends BaseGSpec {\n \n             if (commonspec.getResponse().getStatusCode() != 200) {\n                 if (resource.equals(\"user\") && (addSourceType)) {\n-                    commonspec.getLogger().warn(\"Gosec Version:{} -> Adding inputsourceType = CUSTOM\", gosecVersion);\n-                    List<String> newField = Arrays.asList(\"$.inputSourceType\", \"ADD\", \"CUSTOM\", \"string\");\n+                    commonspec.getLogger()\n+                        .warn(\"Gosec Version:{} -> Adding inputsourceType = CUSTOM\", gosecVersion);\n+                    List<String> newField =\n+                        Arrays.asList(\"$.inputSourceType\", \"ADD\", \"CUSTOM\", \"string\");\n                     newModifications.add(newField);\n                 }\n                 // Create datatable with modified data\n                 DataTable gosecModifications = DataTable.create(newModifications);\n                 // Send POST request\n-                restSpec.sendRequest(\"POST\", newEndPoint, loginInfo, baseData, type, gosecModifications);\n+                restSpec.sendRequest(\"POST\", newEndPoint, loginInfo, baseData, type,\n+                    gosecModifications);\n                 try {\n                     if (commonspec.getResponse().getStatusCode() == 409) {\n                         commonspec.getLogger().warn(\"The resource {} already exists\", resourceId);\n                     } else {\n                         try {\n-                            assertThat(commonspec.getResponse().getStatusCode()).isEqualTo(expectedStatusCreate);\n+                            assertThat(commonspec.getResponse().getStatusCode())\n+                                .isEqualTo(expectedStatusCreate);\n                         } catch (AssertionError e) {\n-                            commonspec.getLogger().warn(\"Error creating Resource {}: {}\", resourceId, commonspec.getResponse().getResponse());\n+                            commonspec.getLogger()\n+                                .warn(\"Error creating Resource {}: {}\", resourceId,\n+                                    commonspec.getResponse().getResponse());\n                             throw e;\n                         }\n                         commonspec.getLogger().warn(\"Resource {} created\", resourceId);\n                     }\n                 } catch (Exception e) {\n-                    commonspec.getLogger().warn(\"Error creating user {}: {}\", resourceId, commonspec.getResponse().getResponse());\n+                    commonspec.getLogger().warn(\"Error creating user {}: {}\", resourceId,\n+                        commonspec.getResponse().getResponse());\n                     throw e;\n                 }\n             } else {\n@@ -188,25 +210,32 @@ public class GosecSpec extends BaseGSpec {\n                 if (resource.equals(\"policy\") && commonspec.getResponse().getStatusCode() == 200) {\n                     if (doesNotExist) {\n                         // Policy already exists\n-                        commonspec.getLogger().warn(\"Policy {} already exist - not created\", resourceId);\n+                        commonspec.getLogger()\n+                            .warn(\"Policy {} already exist - not created\", resourceId);\n \n                     } else {\n                         // Delete policy if exists\n-                        restSpec.sendRequest(\"DELETE\", endPointResource, loginInfo, baseData, type, modifications);\n+                        restSpec.sendRequest(\"DELETE\", endPointResource, loginInfo, baseData, type,\n+                            modifications);\n                         commonspec.getLogger().warn(\"Policy {} deleted\", resourceId);\n \n                         try {\n-                            assertThat(commonspec.getResponse().getStatusCode()).isEqualTo(expectedStatusDelete);\n+                            assertThat(commonspec.getResponse().getStatusCode())\n+                                .isEqualTo(expectedStatusDelete);\n                         } catch (AssertionError e) {\n-                            commonspec.getLogger().warn(\"Error deleting Policy {}: {}\", resourceId, commonspec.getResponse().getResponse());\n+                            commonspec.getLogger().warn(\"Error deleting Policy {}: {}\", resourceId,\n+                                commonspec.getResponse().getResponse());\n                             throw e;\n                         }\n-                        createResourceIfNotExist(resource, resourceId, endPoint, loginInfo, doesNotExist, baseData, type, modifications);\n+                        createResourceIfNotExist(resource, resourceId, endPoint, loginInfo,\n+                            doesNotExist, baseData, type, modifications);\n                     }\n                 }\n             }\n         } catch (Exception e) {\n-            commonspec.getLogger().error(\"Rest Host or Rest Port are not initialized {}{}\", commonspec.getRestHost(), commonspec.getRestPort());\n+            commonspec.getLogger()\n+                .error(\"Rest Host or Rest Port are not initialized {}{}\", commonspec.getRestHost(),\n+                    commonspec.getRestPort());\n             throw e;\n         }\n     }\n@@ -221,7 +250,8 @@ public class GosecSpec extends BaseGSpec {\n      * @throws Exception\n      */\n     @When(\"^I delete '(policy|user|group)' '(.+?)'( using API service path '(.+?)')?( with user and password '(.+:.+?)')? if it exists$\")\n-    public void deleteUserIfExists(String resource, String resourceId, String endPoint, String loginInfo) throws Exception {\n+    public void deleteUserIfExists(String resource, String resourceId, String endPoint,\n+                                   String loginInfo) throws Exception {\n         Integer[] expectedStatusDelete = {200, 204};\n         String endPointResource = \"\";\n         String endPointPolicy = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICY\");\n@@ -250,13 +280,18 @@ public class GosecSpec extends BaseGSpec {\n             if (resource.equals(\"policy\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo, null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                        \"' | jq '.list[] | select (.name == \\\"\" + resourceId +\n+                        \"\\\").id' | sed s/\\\\\\\"//g\");\n                     String policyId = commonspec.getCommandResult().trim();\n                     if (!policyId.equals(\"\")) {\n                         commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n                         endPointResource = endPointPolicy + policyId;\n                     } else {\n-                        commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                        commonspec.runLocalCommand(\n+                            \"echo '\" + commonspec.getResponse().getResponse() +\n+                                \"' | jq '.[] | select (.name == \\\"\" + resourceId +\n+                                \"\\\").id' | sed s/\\\\\\\"//g\");\n                         policyId = commonspec.getCommandResult().trim();\n                         if (!policyId.equals(\"\")) {\n                             commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n@@ -280,14 +315,18 @@ public class GosecSpec extends BaseGSpec {\n                 try {\n                     assertThat(commonspec.getResponse().getStatusCode()).isIn(expectedStatusDelete);\n                 } catch (AssertionError e) {\n-                    commonspec.getLogger().warn(\"Error deleting Resource {}: {}\", resourceId, commonspec.getResponse().getResponse());\n+                    commonspec.getLogger().warn(\"Error deleting Resource {}: {}\", resourceId,\n+                        commonspec.getResponse().getResponse());\n                     throw e;\n                 }\n             } else {\n-                commonspec.getLogger().warn(\"Resource {} with id {} not found so it's not deleted\", resource, resourceId);\n+                commonspec.getLogger()\n+                    .warn(\"Resource {} with id {} not found so it's not deleted\", resource,\n+                        resourceId);\n             }\n         } catch (Exception e) {\n-            commonspec.getLogger().error(\"Rest Host or Rest Port are not initialized {}: {}\", commonspec.getRestHost(), commonspec.getRestPort());\n+            commonspec.getLogger().error(\"Rest Host or Rest Port are not initialized {}: {}\",\n+                commonspec.getRestHost(), commonspec.getRestPort());\n             throw e;\n         }\n     }\n@@ -306,24 +345,30 @@ public class GosecSpec extends BaseGSpec {\n         assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n         restSpec.sendRequestNoDataTable(\"GET\", endPoint, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+            commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                \"' | jq '.list[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n             commonspec.runCommandLoggerAndEnvVar(0, envVar, Boolean.TRUE);\n-            if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n-                commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+            if (ThreadProperty.get(envVar) == null ||\n+                ThreadProperty.get(envVar).trim().equals(\"\")) {\n+                commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                    \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n                 commonspec.runCommandLoggerAndEnvVar(0, envVar, Boolean.TRUE);\n-                if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n+                if (ThreadProperty.get(envVar) == null ||\n+                    ThreadProperty.get(envVar).trim().equals(\"\")) {\n                     fail(\"Error obtaining ID from policy \" + policyName);\n                 }\n             }\n         } else {\n             if (commonspec.getResponse().getStatusCode() == 404) {\n-                fail(\"Error obtaining policies from gosecmanagement {} (Response code = \" + commonspec.getResponse().getStatusCode() + \")\", endPoint);\n+                fail(\"Error obtaining policies from gosecmanagement {} (Response code = \" +\n+                    commonspec.getResponse().getStatusCode() + \")\", endPoint);\n             }\n         }\n     }\n \n     @When(\"^I create tenant '(.+?)' if it does not exist based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n-    public void createTenant(String tenantId, String baseData, String type, DataTable modifications) throws Exception {\n+    public void createTenant(String tenantId, String baseData, String type, DataTable modifications)\n+        throws Exception {\n         // Set REST connection\n         commonspec.setCCTConnection();\n \n@@ -339,7 +384,8 @@ public class GosecSpec extends BaseGSpec {\n             try {\n                 assertThat(commonspec.getResponse().getStatusCode()).isEqualTo(expectedStatus);\n             } catch (AssertionError e) {\n-                commonspec.getLogger().warn(\"Error creating Tenant {}: {}\", tenantId, commonspec.getResponse().getResponse());\n+                commonspec.getLogger().warn(\"Error creating Tenant {}: {}\", tenantId,\n+                    commonspec.getResponse().getResponse());\n                 throw e;\n             }\n         }\n@@ -361,7 +407,8 @@ public class GosecSpec extends BaseGSpec {\n             try {\n                 assertThat(commonspec.getResponse().getStatusCode()).isEqualTo(expectedStatus);\n             } catch (AssertionError e) {\n-                commonspec.getLogger().warn(\"Error deleting Tenant {}: {}\", tenantId, commonspec.getResponse().getResponse());\n+                commonspec.getLogger().warn(\"Error deleting Tenant {}: {}\", tenantId,\n+                    commonspec.getResponse().getResponse());\n                 throw e;\n             }\n         } else {\n@@ -370,7 +417,8 @@ public class GosecSpec extends BaseGSpec {\n     }\n \n     @When(\"^I include '(user|group)' '(.+?)' in tenant '(.+?)'$\")\n-    public void includeResourceInTenant(String resource, String resourceId, String tenantId) throws Exception {\n+    public void includeResourceInTenant(String resource, String resourceId, String tenantId)\n+        throws Exception {\n         String endPointGetAllUsers = \"/service/gosec-identities-daas/identities/users\";\n         String endPointGetAllGroups = \"/service/gosec-identities-daas/identities/groups\";\n         String endPointTenant = \"/service/gosec-identities-daas/identities/tenants/\" + tenantId;\n@@ -390,28 +438,41 @@ public class GosecSpec extends BaseGSpec {\n \n         restSpec.sendRequestNoDataTable(\"GET\", endPointGosec, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            if (commonspec.getResponse().getResponse().contains(\"\\\"\" + uidOrGid + \"\\\":\\\"\" + resourceId + \"\\\"\")) {\n+            if (commonspec.getResponse().getResponse()\n+                .contains(\"\\\"\" + uidOrGid + \"\\\":\\\"\" + resourceId + \"\\\"\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointTenant, null, null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    JsonObject jsonTenantInfo = new JsonObject(JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n-                    if (((JsonArray) jsonTenantInfo.get(uidOrGidTenant)).values().contains(JsonValue.valueOf(resourceId))) {\n-                        commonspec.getLogger().debug(\"{} is already included in tenant\", resourceId);\n+                    JsonObject jsonTenantInfo = new JsonObject(\n+                        JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n+                    if (((JsonArray) jsonTenantInfo.get(uidOrGidTenant)).values()\n+                        .contains(JsonValue.valueOf(resourceId))) {\n+                        commonspec.getLogger()\n+                            .debug(\"{} is already included in tenant\", resourceId);\n                     } else {\n                         ((JsonArray) jsonTenantInfo.get(uidOrGidTenant)).add(resourceId);\n-                        Future<Response> response = commonspec.generateRequest(\"PATCH\", false, null, null, endPointTenant, JsonValue.readHjson(jsonTenantInfo.toString()).toString(), \"json\", \"\");\n+                        Future<Response> response = commonspec\n+                            .generateRequest(\"PATCH\", false, null, null, endPointTenant,\n+                                JsonValue.readHjson(jsonTenantInfo.toString()).toString(), \"json\",\n+                                \"\");\n                         commonspec.setResponse(\"PATCH\", response.get());\n                         if (commonspec.getResponse().getStatusCode() != 204) {\n-                            throw new Exception(\"Error adding \" + resource + \" \" + resourceId + \" in tenant \" + tenantId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n+                            throw new Exception(\n+                                \"Error adding \" + resource + \" \" + resourceId + \" in tenant \" +\n+                                    tenantId + \" - Status code: \" +\n+                                    commonspec.getResponse().getStatusCode());\n                         }\n                     }\n                 } else {\n-                    throw new Exception(\"Error obtaining info from tenant \" + tenantId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n+                    throw new Exception(\n+                        \"Error obtaining info from tenant \" + tenantId + \" - Status code: \" +\n+                            commonspec.getResponse().getStatusCode());\n                 }\n             } else {\n                 throw new Exception(resource + \" \" + resourceId + \" doesn't exist in Gosec\");\n             }\n         } else {\n-            throw new Exception(\"Error obtaining \" + resource + \"s - Status code: \" + commonspec.getResponse().getStatusCode());\n+            throw new Exception(\"Error obtaining \" + resource + \"s - Status code: \" +\n+                commonspec.getResponse().getStatusCode());\n         }\n     }\n \n@@ -425,9 +486,11 @@ public class GosecSpec extends BaseGSpec {\n         assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n         restSpec.sendRequestNoDataTable(\"GET\", endPoint, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + profileName + \"\\\").pid' | sed s/\\\\\\\"//g\");\n+            commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                \"' | jq '.list[] | select (.name == \\\"\" + profileName + \"\\\").pid' | sed s/\\\\\\\"//g\");\n             commonspec.runCommandLoggerAndEnvVar(0, envVar, Boolean.TRUE);\n-            if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n+            if (ThreadProperty.get(envVar) == null ||\n+                ThreadProperty.get(envVar).trim().equals(\"\")) {\n                 fail(\"Error obtaining ID from profile \" + profileName);\n             }\n         } else {\n@@ -436,7 +499,8 @@ public class GosecSpec extends BaseGSpec {\n     }\n \n     @When(\"^I get json from( tag)? policy with name '(.+?)' and save it( in environment variable '(.*?)')?( in file '(.*?)')?$\")\n-    public void getPolicyJson(String tag, String policyName, String envVar, String fileName) throws Exception {\n+    public void getPolicyJson(String tag, String policyName, String envVar, String fileName)\n+        throws Exception {\n         String endPoint = \"/service/gosecmanagement/api/policy\";\n         String newEndPoint = \"/service/gosecmanagement/api/policies\";\n         String errorMessage = \"api/policies\";\n@@ -455,31 +519,42 @@ public class GosecSpec extends BaseGSpec {\n         assertThat(commonspec.getRestHost().isEmpty() || commonspec.getRestPort().isEmpty());\n         restSpec.sendRequestNoDataTable(\"GET\", endPoint, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+            commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                \"' | jq '.list[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n             if (commonspec.getCommandResult().trim().equals(\"\")) {\n-                commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                    \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n             }\n-            restSpec.sendRequestNoDataTable(\"GET\", \"/service/gosecmanagement/api/policy/\" + commonspec.getCommandResult(), null, null, null);\n+            restSpec.sendRequestNoDataTable(\"GET\",\n+                \"/service/gosecmanagement/api/policy/\" + commonspec.getCommandResult(), null, null,\n+                null);\n \n             if (envVar != null) {\n                 ThreadProperty.set(envVar, commonspec.getResponse().getResponse());\n \n-                if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n+                if (ThreadProperty.get(envVar) == null ||\n+                    ThreadProperty.get(envVar).trim().equals(\"\")) {\n                     fail(\"Error obtaining JSON from policy \" + policyName);\n                 }\n             }\n \n             if (fileName != null) {\n                 // Create file (temporary) and set path to be accessible within test\n-                File tempDirectory = new File(System.getProperty(\"user.dir\") + \"/target/test-classes/\");\n+                File tempDirectory =\n+                    new File(System.getProperty(\"user.dir\") + \"/target/test-classes/\");\n                 String absolutePathFile = tempDirectory.getAbsolutePath() + \"/\" + fileName;\n-                commonspec.getLogger().debug(\"Creating file {} in 'target/test-classes'\", absolutePathFile);\n+                commonspec.getLogger()\n+                    .debug(\"Creating file {} in 'target/test-classes'\", absolutePathFile);\n                 // Note that this Writer will delete the file if it exists\n-                Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(absolutePathFile), StandardCharsets.UTF_8));\n+                Writer out = new BufferedWriter(\n+                    new OutputStreamWriter(new FileOutputStream(absolutePathFile),\n+                        StandardCharsets.UTF_8));\n                 try {\n                     out.write(commonspec.getResponse().getResponse());\n                 } catch (Exception e) {\n-                    commonspec.getLogger().error(\"Custom file {} hasn't been created:\\n{}\", absolutePathFile, e.toString());\n+                    commonspec.getLogger()\n+                        .error(\"Custom file {} hasn't been created:\\n{}\", absolutePathFile,\n+                            e.toString());\n                 } finally {\n                     out.close();\n                 }\n@@ -489,33 +564,49 @@ public class GosecSpec extends BaseGSpec {\n \n         } else {\n             if (commonspec.getResponse().getStatusCode() == 404) {\n-                commonspec.getLogger().warn(\"Error 404 accessing endpoint {}: checking the new endpoint for Gosec 1.1.1\", endPoint);\n+                commonspec.getLogger().warn(\n+                    \"Error 404 accessing endpoint {}: checking the new endpoint for Gosec 1.1.1\",\n+                    endPoint);\n                 restSpec.sendRequestNoDataTable(\"GET\", newEndPoint, null, null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                        \"' | jq '.list[] | select (.name == \\\"\" + policyName +\n+                        \"\\\").id' | sed s/\\\\\\\"//g\");\n                     if (commonspec.getCommandResult().trim().equals(\"\")) {\n-                        commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + policyName + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                        commonspec.runLocalCommand(\n+                            \"echo '\" + commonspec.getResponse().getResponse() +\n+                                \"' | jq '.[] | select (.name == \\\"\" + policyName +\n+                                \"\\\").id' | sed s/\\\\\\\"//g\");\n                     }\n-                    restSpec.sendRequestNoDataTable(\"GET\", \"/service/gosecmanagement/api/policy?id=\" + commonspec.getCommandResult(), null, null, null);\n+                    restSpec.sendRequestNoDataTable(\"GET\",\n+                        \"/service/gosecmanagement/api/policy?id=\" + commonspec.getCommandResult(),\n+                        null, null, null);\n \n                     if (envVar != null) {\n                         ThreadProperty.set(envVar, commonspec.getResponse().getResponse());\n-                        if (ThreadProperty.get(envVar) == null || ThreadProperty.get(envVar).trim().equals(\"\")) {\n+                        if (ThreadProperty.get(envVar) == null ||\n+                            ThreadProperty.get(envVar).trim().equals(\"\")) {\n                             fail(\"Error obtaining JSON from policy \" + policyName);\n                         }\n                     }\n \n                     if (fileName != null) {\n                         // Create file (temporary) and set path to be accessible within test\n-                        File tempDirectory = new File(System.getProperty(\"user.dir\") + \"/target/test-classes/\");\n+                        File tempDirectory =\n+                            new File(System.getProperty(\"user.dir\") + \"/target/test-classes/\");\n                         String absolutePathFile = tempDirectory.getAbsolutePath() + \"/\" + fileName;\n-                        commonspec.getLogger().debug(\"Creating file {} in 'target/test-classes'\", absolutePathFile);\n+                        commonspec.getLogger()\n+                            .debug(\"Creating file {} in 'target/test-classes'\", absolutePathFile);\n                         // Note that this Writer will delete the file if it exists\n-                        Writer out = new BufferedWriter(new OutputStreamWriter(new FileOutputStream(absolutePathFile), StandardCharsets.UTF_8));\n+                        Writer out = new BufferedWriter(\n+                            new OutputStreamWriter(new FileOutputStream(absolutePathFile),\n+                                StandardCharsets.UTF_8));\n                         try {\n                             out.write(commonspec.getResponse().getResponse());\n                         } catch (Exception e) {\n-                            commonspec.getLogger().error(\"Custom file {} hasn't been created:\\n{}\", absolutePathFile, e.toString());\n+                            commonspec.getLogger()\n+                                .error(\"Custom file {} hasn't been created:\\n{}\", absolutePathFile,\n+                                    e.toString());\n                         } finally {\n                             out.close();\n                         }\n@@ -524,10 +615,12 @@ public class GosecSpec extends BaseGSpec {\n                     }\n \n                 } else {\n-                    fail(\"Error obtaining policies from gosecmanagement {} (Response code = \" + commonspec.getResponse().getStatusCode() + \")\", errorMessage);\n+                    fail(\"Error obtaining policies from gosecmanagement {} (Response code = \" +\n+                        commonspec.getResponse().getStatusCode() + \")\", errorMessage);\n                 }\n             } else {\n-                fail(\"Error obtaining policies from gosecmanagement {} (Response code = \" + commonspec.getResponse().getStatusCode() + \")\", errorMessage2);\n+                fail(\"Error obtaining policies from gosecmanagement {} (Response code = \" +\n+                    commonspec.getResponse().getStatusCode() + \")\", errorMessage2);\n             }\n         }\n     }\n@@ -549,10 +642,12 @@ public class GosecSpec extends BaseGSpec {\n \n         restSpec.sendRequestNoDataTable(\"GET\", endPointGetGroup, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            JsonObject jsonGroupInfo = new JsonObject(JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n+            JsonObject jsonGroupInfo = new JsonObject(\n+                JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n             restSpec.sendRequestNoDataTable(\"GET\", endPointGetProfile, null, null, null);\n             if (commonspec.getResponse().getStatusCode() == 200) {\n-                JsonObject jsonProfileInfo = new JsonObject(JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n+                JsonObject jsonProfileInfo = new JsonObject(\n+                    JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n                 // Get groups from profile\n                 JsonArray jsonGroups = (JsonArray) jsonProfileInfo.get(groups);\n                 // Get size of groups\n@@ -567,7 +662,8 @@ public class GosecSpec extends BaseGSpec {\n                     String jsonIds = ((JsonObject) jsonGroups.get(i)).getString(\"id\", \"\");\n \n                     if (jsonIds.equals(groupId)) {\n-                        commonspec.getLogger().warn(\"{} is already included in the profile {}\", groupId, profileId);\n+                        commonspec.getLogger()\n+                            .warn(\"{} is already included in the profile {}\", groupId, profileId);\n                         content = true;\n                         break;\n                     } else {\n@@ -581,20 +677,27 @@ public class GosecSpec extends BaseGSpec {\n                     // Add gids array to new json for PUT request\n                     putObject.put(\"gids\", stringGroups);\n \n-                    commonspec.getLogger().warn(\"Json for PUT request---> {}\", putObject.toString());\n-                    Future<Response> response = commonspec.generateRequest(\"PUT\", false, null, null, endPointGetProfile, JsonValue.readHjson(putObject.toString()).toString(), \"json\", \"\");\n+                    commonspec.getLogger()\n+                        .warn(\"Json for PUT request---> {}\", putObject.toString());\n+                    Future<Response> response = commonspec\n+                        .generateRequest(\"PUT\", false, null, null, endPointGetProfile,\n+                            JsonValue.readHjson(putObject.toString()).toString(), \"json\", \"\");\n                     commonspec.setResponse(\"PUT\", response.get());\n                     if (commonspec.getResponse().getStatusCode() != 204) {\n-                        throw new Exception(\"Error adding Group: \" + groupId + \" in Profile \" + profileId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n+                        throw new Exception(\n+                            \"Error adding Group: \" + groupId + \" in Profile \" + profileId +\n+                                \" - Status code: \" + commonspec.getResponse().getStatusCode());\n                     }\n                 }\n \n             } else {\n-                throw new Exception(\"Error obtaining Profile: \" + profileId + \"- Status code: \" + commonspec.getResponse().getStatusCode());\n+                throw new Exception(\"Error obtaining Profile: \" + profileId + \"- Status code: \" +\n+                    commonspec.getResponse().getStatusCode());\n             }\n \n         } else {\n-            throw new Exception(\"Error obtaining Group: \" + groupId + \"- Status code: \" + commonspec.getResponse().getStatusCode());\n+            throw new Exception(\"Error obtaining Group: \" + groupId + \"- Status code: \" +\n+                commonspec.getResponse().getStatusCode());\n         }\n     }\n \n@@ -623,7 +726,9 @@ public class GosecSpec extends BaseGSpec {\n      * @throws Exception if the resource does not exists or the request fails\n      */\n     @When(\"^I update '(policy|user|group|tenant)' '(.+?)'( with user and password '(.+:.+?)')? based on '([^:]+?)'( as '(json|string|gov)')? with:$\")\n-    public void updateResource(String resource, String resourceId, String loginInfo, String baseData, String type, DataTable modifications) throws Exception {\n+    public void updateResource(String resource, String resourceId, String loginInfo,\n+                               String baseData, String type, DataTable modifications)\n+        throws Exception {\n         Integer[] expectedStatusUpdate = {200, 201, 204};\n         String endPointPolicy = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICY\");\n         String endPointPolicies = \"/service/gosecmanagement\" + ThreadProperty.get(\"API_POLICIES\");\n@@ -652,13 +757,18 @@ public class GosecSpec extends BaseGSpec {\n             if (resource.equals(\"policy\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointPolicies, loginInfo, null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.list[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                    commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() +\n+                        \"' | jq '.list[] | select (.name == \\\"\" + resourceId +\n+                        \"\\\").id' | sed s/\\\\\\\"//g\");\n                     String policyId = commonspec.getCommandResult().trim();\n                     if (!policyId.equals(\"\")) {\n                         commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n                         endPointResource = endPointPolicy + policyId;\n                     } else {\n-                        commonspec.runLocalCommand(\"echo '\" + commonspec.getResponse().getResponse() + \"' | jq '.[] | select (.name == \\\"\" + resourceId + \"\\\").id' | sed s/\\\\\\\"//g\");\n+                        commonspec.runLocalCommand(\n+                            \"echo '\" + commonspec.getResponse().getResponse() +\n+                                \"' | jq '.[] | select (.name == \\\"\" + resourceId +\n+                                \"\\\").id' | sed s/\\\\\\\"//g\");\n                         policyId = commonspec.getCommandResult().trim();\n                         if (!policyId.equals(\"\")) {\n                             commonspec.getLogger().debug(\"PolicyId obtained: {}\", policyId);\n@@ -676,35 +786,43 @@ public class GosecSpec extends BaseGSpec {\n \n             if (commonspec.getResponse().getStatusCode() == 200) {\n                 if (resource.equals(\"tenant\")) {\n-                    restSpec.sendRequest(\"PATCH\", endPointResource, loginInfo, baseData, type, modifications);\n+                    restSpec.sendRequest(\"PATCH\", endPointResource, loginInfo, baseData, type,\n+                        modifications);\n                 } else {\n-                    restSpec.sendRequest(\"PUT\", endPointResource, loginInfo, baseData, type, modifications);\n+                    restSpec.sendRequest(\"PUT\", endPointResource, loginInfo, baseData, type,\n+                        modifications);\n                 }\n                 commonspec.getLogger().warn(\"Resource {}:{} updated\", resource, resourceId);\n \n                 try {\n                     assertThat(commonspec.getResponse().getStatusCode()).isIn(expectedStatusUpdate);\n                 } catch (AssertionError e) {\n-                    commonspec.getLogger().error(\"Error updating Resource {} {}: {}\", resource, resourceId, commonspec.getResponse().getResponse());\n+                    commonspec.getLogger()\n+                        .error(\"Error updating Resource {} {}: {}\", resource, resourceId,\n+                            commonspec.getResponse().getResponse());\n                     throw e;\n                 }\n             } else {\n-                commonspec.getLogger().error(\"Resource {}:{} not found so it's not updated\", resource, resourceId);\n+                commonspec.getLogger()\n+                    .error(\"Resource {}:{} not found so it's not updated\", resource, resourceId);\n             }\n         } catch (Exception e) {\n-            commonspec.getLogger().error(\"Rest Host or Rest Port are not initialized {}: {}\", commonspec.getRestHost(), commonspec.getRestPort());\n+            commonspec.getLogger().error(\"Rest Host or Rest Port are not initialized {}: {}\",\n+                commonspec.getRestHost(), commonspec.getRestPort());\n             throw e;\n         }\n     }\n \n     /**\n      * Removes user or group from tenant if the resource exists and has been assigned previously\n-     * @param resource      : type of resource (user or group)\n-     * @param resourceId    : userId or groupId\n+     *\n+     * @param resource   : type of resource (user or group)\n+     * @param resourceId : userId or groupId\n      * @throws Exception if the resource does not exists or the request fails\n      */\n     @When(\"^I remove '(user|group)' '(.+?)' from tenant '(.+?)'$\")\n-    public void removeResourceInTenant(String resource, String resourceId, String tenantId) throws Exception {\n+    public void removeResourceInTenant(String resource, String resourceId, String tenantId)\n+        throws Exception {\n         String endPointGetAllUsers = \"/service/gosec-identities-daas/identities/users\";\n         String endPointGetAllGroups = \"/service/gosec-identities-daas/identities/groups\";\n         String endPointTenant = \"/service/gosec-identities-daas/identities/tenants/\" + tenantId;\n@@ -723,50 +841,67 @@ public class GosecSpec extends BaseGSpec {\n \n         restSpec.sendRequestNoDataTable(\"GET\", endPointGosec, null, null, null);\n         if (commonspec.getResponse().getStatusCode() == 200) {\n-            if (commonspec.getResponse().getResponse().contains(\"\\\"\" + uidOrGid + \"\\\":\\\"\" + resourceId + \"\\\"\")) {\n+            if (commonspec.getResponse().getResponse()\n+                .contains(\"\\\"\" + uidOrGid + \"\\\":\\\"\" + resourceId + \"\\\"\")) {\n                 restSpec.sendRequestNoDataTable(\"GET\", endPointTenant, null, null, null);\n                 if (commonspec.getResponse().getStatusCode() == 200) {\n-                    JsonObject jsonTenantInfo = new JsonObject(JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n-                    if (((JsonArray) jsonTenantInfo.get(uidOrGidTenant)).values().contains(JsonValue.valueOf(resourceId))) {\n+                    JsonObject jsonTenantInfo = new JsonObject(\n+                        JsonValue.readHjson(commonspec.getResponse().getResponse()).asObject());\n+                    if (((JsonArray) jsonTenantInfo.get(uidOrGidTenant)).values()\n+                        .contains(JsonValue.valueOf(resourceId))) {\n                         // remove resource from tenant\n                         // Get groups/users from tenant\n                         JsonArray jsonGroups = (JsonArray) jsonTenantInfo.get(uidOrGidTenant);\n                         // Create new string for new data without resource\n                         String[] stringGroups = new String[jsonGroups.size() - 1];\n                         // Create json for put\n-                        JSONObject putObject = new JSONObject(commonspec.getResponse().getResponse());\n+                        JSONObject putObject =\n+                            new JSONObject(commonspec.getResponse().getResponse());\n                         // Remove ids in json\n                         putObject.remove(uidOrGidTenant);\n                         // create new array with values without resourceId\n                         for (int i = 0; i < jsonGroups.size(); i++) {\n                             int j = 0;\n-                            String jsonIds = jsonGroups.get(i).toString().substring(1, jsonGroups.get(i).toString().length() - 1);\n+                            String jsonIds = jsonGroups.get(i).toString()\n+                                .substring(1, jsonGroups.get(i).toString().length() - 1);\n                             if (jsonIds.equals(resourceId)) {\n-                                commonspec.getLogger().warn(\"{} {} removed from tenant {}\", resource, resourceId, tenantId);\n+                                commonspec.getLogger()\n+                                    .warn(\"{} {} removed from tenant {}\", resource, resourceId,\n+                                        tenantId);\n                             } else {\n                                 stringGroups[j] = jsonIds;\n                                 j = j + 1;\n                             }\n                         }\n                         putObject.put(uidOrGidTenant, stringGroups);\n-                        commonspec.getLogger().debug(\"Json for PATCH request---> {}\", putObject.toString());\n-                        Future<Response> response = commonspec.generateRequest(\"PATCH\", false, null, null, endPointTenant, JsonValue.readHjson(putObject.toString()).toString(), \"json\", \"\");\n+                        commonspec.getLogger()\n+                            .debug(\"Json for PATCH request---> {}\", putObject.toString());\n+                        Future<Response> response = commonspec\n+                            .generateRequest(\"PATCH\", false, null, null, endPointTenant,\n+                                JsonValue.readHjson(putObject.toString()).toString(), \"json\", \"\");\n                         commonspec.setResponse(\"PATCH\", response.get());\n                         if (commonspec.getResponse().getStatusCode() != 204) {\n-                            throw new Exception(\"Error removing \" + resource + \" \" + resourceId + \" in tenant \" + tenantId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n+                            throw new Exception(\n+                                \"Error removing \" + resource + \" \" + resourceId + \" in tenant \" +\n+                                    tenantId + \" - Status code: \" +\n+                                    commonspec.getResponse().getStatusCode());\n                         }\n \n                     } else {\n-                        commonspec.getLogger().error(\"{} is not included in tenant -> not removed\", resourceId);\n+                        commonspec.getLogger()\n+                            .error(\"{} is not included in tenant -> not removed\", resourceId);\n                     }\n                 } else {\n-                    throw new Exception(\"Error obtaining info from tenant \" + tenantId + \" - Status code: \" + commonspec.getResponse().getStatusCode());\n+                    throw new Exception(\n+                        \"Error obtaining info from tenant \" + tenantId + \" - Status code: \" +\n+                            commonspec.getResponse().getStatusCode());\n                 }\n             } else {\n                 throw new Exception(resource + \" \" + resourceId + \" doesn't exist in Gosec\");\n             }\n         } else {\n-            throw new Exception(\"Error obtaining \" + resource + \"s - Status code: \" + commonspec.getResponse().getStatusCode());\n+            throw new Exception(\"Error obtaining \" + resource + \"s - Status code: \" +\n+                commonspec.getResponse().getStatusCode());\n         }\n     }\n \n",
            "diff_size": 231
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/145/GosecSpec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/145/GosecSpec.java\nindex 97f3f0830b4..8b138acaaed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/145/GosecSpec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/naturalize/145/GosecSpec.java\n@@ -48,7 +48,8 @@ public class GosecSpec extends BaseGSpec {\n     private final Logger logger = LoggerFactory.getLogger(GosecSpec.class);\n \n     RestSpec restSpec;\n-    /**\n+\n+/**\n      * Generic constructor.\n      *\n      * @param spec object\n@@ -770,4 +771,4 @@ public class GosecSpec extends BaseGSpec {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/145/GosecSpec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/145/GosecSpec.java\nindex 97f3f0830b4..829dbaec1c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/errored/1/145/GosecSpec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Stratio-bdt/styler_random/145/GosecSpec.java\n@@ -53,6 +53,7 @@ public class GosecSpec extends BaseGSpec {\n      *\n      * @param spec object\n      */\n+\n     public GosecSpec(CommonG spec) {\n         this.commonspec = spec;\n         restSpec = new RestSpec(spec);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'CTOR_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_three_grams"
    ]
}
{
    "project_name": "aspose-words-cloud-aspose-words-cloud-java",
    "error_id": "491",
    "information": {
        "errors": [
            {
                "line": "471",
                "column": "55",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    ListLevelUpdate listLevelUpdate = (ListLevelUpdate)o;\n    return\n        Objects.equals(this.alignment, listLevelUpdate.alignment) &&\n        Objects.equals(this.isLegal, listLevelUpdate.isLegal) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/491/ListLevelUpdate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/491/ListLevelUpdate.java\nindex 9cd912b167c..5c84b0c4b77 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/491/ListLevelUpdate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/491/ListLevelUpdate.java\n@@ -468,7 +468,7 @@ public class ListLevelUpdate {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    ListLevelUpdate listLevelUpdate = (ListLevelUpdate)o;\n+    ListLevelUpdate listLevelUpdate = (ListLevelUpdate) o;\n     return\n         Objects.equals(this.alignment, listLevelUpdate.alignment) &&\n         Objects.equals(this.isLegal, listLevelUpdate.isLegal) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/491/ListLevelUpdate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/491/ListLevelUpdate.java\nindex 9cd912b167c..1669e0a7351 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/491/ListLevelUpdate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/491/ListLevelUpdate.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -80,7 +83,7 @@ public class ListLevelUpdate {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< AlignmentEnum > {\n+        public static class Adapter extends TypeAdapter<AlignmentEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final AlignmentEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -186,7 +189,7 @@ public class ListLevelUpdate {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< NumberStyleEnum > {\n+        public static class Adapter extends TypeAdapter<NumberStyleEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final NumberStyleEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -233,7 +236,7 @@ public class ListLevelUpdate {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< TrailingCharacterEnum > {\n+        public static class Adapter extends TypeAdapter<TrailingCharacterEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final TrailingCharacterEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -276,6 +279,7 @@ public class ListLevelUpdate {\n \n     @SerializedName(\"TrailingCharacter\")\n     private TrailingCharacterEnum trailingCharacter = null;\n+\n     public ListLevelUpdate alignment(AlignmentEnum alignment) {\n         this.alignment = alignment;\n         return this;\n@@ -283,8 +287,9 @@ public class ListLevelUpdate {\n \n     /**\n      * Gets or sets the justification of the actual number of the list item.\n-    * @return alignment\n-    **/\n+     *\n+     * @return alignment\n+     **/\n     @ApiModelProperty(value = \"Gets or sets the justification of the actual number of the list item.\")\n     public AlignmentEnum getAlignment() {\n         return alignment;\n@@ -302,8 +307,9 @@ public class ListLevelUpdate {\n     /**\n      * Gets or sets a value indicating whether true if the level turns all inherited numbers to Arabic, false if it preserves\n      * their number style.\n-    * @return isLegal\n-    **/\n+     *\n+     * @return isLegal\n+     **/\n     @ApiModelProperty(value = \"Gets or sets a value indicating whether true if the level turns all inherited numbers to Arabic, false if it preserves their number style.\")\n     public Boolean getIsLegal() {\n         return isLegal;\n@@ -320,8 +326,9 @@ public class ListLevelUpdate {\n \n     /**\n      * Gets or sets returns or sets the number format for the list level.\n-    * @return numberFormat\n-    **/\n+     *\n+     * @return numberFormat\n+     **/\n     @ApiModelProperty(value = \"Gets or sets returns or sets the number format for the list level.\")\n     public String getNumberFormat() {\n         return numberFormat;\n@@ -339,8 +346,9 @@ public class ListLevelUpdate {\n     /**\n      * Gets or sets returns or sets the position (in points) of the number or bullet for the list\n      * level.\n-    * @return numberPosition\n-    **/\n+     *\n+     * @return numberPosition\n+     **/\n     @ApiModelProperty(value = \"Gets or sets returns or sets the position (in points) of the number or bullet for the list level.\")\n     public Double getNumberPosition() {\n         return numberPosition;\n@@ -357,8 +365,9 @@ public class ListLevelUpdate {\n \n     /**\n      * Gets or sets returns or sets the number style for this list level.\n-    * @return numberStyle\n-    **/\n+     *\n+     * @return numberStyle\n+     **/\n     @ApiModelProperty(value = \"Gets or sets returns or sets the number style for this list level.\")\n     public NumberStyleEnum getNumberStyle() {\n         return numberStyle;\n@@ -376,8 +385,9 @@ public class ListLevelUpdate {\n     /**\n      * Gets or sets or returns the list level that must appear before the specified list level\n      * restarts numbering.\n-    * @return restartAfterLevel\n-    **/\n+     *\n+     * @return restartAfterLevel\n+     **/\n     @ApiModelProperty(value = \"Gets or sets or returns the list level that must appear before the specified list level restarts numbering.\")\n     public Integer getRestartAfterLevel() {\n         return restartAfterLevel;\n@@ -394,8 +404,9 @@ public class ListLevelUpdate {\n \n     /**\n      * Gets or sets returns or sets the starting number for this list level.\n-    * @return startAt\n-    **/\n+     *\n+     * @return startAt\n+     **/\n     @ApiModelProperty(value = \"Gets or sets returns or sets the starting number for this list level.\")\n     public Integer getStartAt() {\n         return startAt;\n@@ -412,8 +423,9 @@ public class ListLevelUpdate {\n \n     /**\n      * Gets or sets returns or sets the tab position (in points) for the list level.\n-    * @return tabPosition\n-    **/\n+     *\n+     * @return tabPosition\n+     **/\n     @ApiModelProperty(value = \"Gets or sets returns or sets the tab position (in points) for the list level.\")\n     public Double getTabPosition() {\n         return tabPosition;\n@@ -431,8 +443,9 @@ public class ListLevelUpdate {\n     /**\n      * Gets or sets returns or sets the position (in points) for the second line of wrapping text\n      * for the list level.\n-    * @return textPosition\n-    **/\n+     *\n+     * @return textPosition\n+     **/\n     @ApiModelProperty(value = \"Gets or sets returns or sets the position (in points) for the second line of wrapping text for the list level.\")\n     public Double getTextPosition() {\n         return textPosition;\n@@ -449,8 +462,9 @@ public class ListLevelUpdate {\n \n     /**\n      * Gets or sets returns or sets the character inserted after the number for the list level.\n-    * @return trailingCharacter\n-    **/\n+     *\n+     * @return trailingCharacter\n+     **/\n     @ApiModelProperty(value = \"Gets or sets returns or sets the character inserted after the number for the list level.\")\n     public TrailingCharacterEnum getTrailingCharacter() {\n         return trailingCharacter;\n@@ -468,51 +482,51 @@ public class ListLevelUpdate {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    ListLevelUpdate listLevelUpdate = (ListLevelUpdate)o;\n-    return\n-        Objects.equals(this.alignment, listLevelUpdate.alignment) &&\n-        Objects.equals(this.isLegal, listLevelUpdate.isLegal) &&\n-        Objects.equals(this.numberFormat, listLevelUpdate.numberFormat) &&\n-        Objects.equals(this.numberPosition, listLevelUpdate.numberPosition) &&\n-        Objects.equals(this.numberStyle, listLevelUpdate.numberStyle) &&\n-        Objects.equals(this.restartAfterLevel, listLevelUpdate.restartAfterLevel) &&\n-        Objects.equals(this.startAt, listLevelUpdate.startAt) &&\n-        Objects.equals(this.tabPosition, listLevelUpdate.tabPosition) &&\n-        Objects.equals(this.textPosition, listLevelUpdate.textPosition) &&\n-        Objects.equals(this.trailingCharacter, listLevelUpdate.trailingCharacter);\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    return Objects.hash(alignment, isLegal, numberFormat, numberPosition, numberStyle, restartAfterLevel, startAt, tabPosition, textPosition, trailingCharacter);\n-  }\n-\n-  @Override\n-  public String toString() {\n-    StringBuilder sb = new StringBuilder();\n-    sb.append(\"class ListLevelUpdate {\\n\");\n-    sb.append(\"    alignment: \").append(toIndentedString(alignment)).append(\"\\n\");\n-    sb.append(\"    isLegal: \").append(toIndentedString(isLegal)).append(\"\\n\");\n-    sb.append(\"    numberFormat: \").append(toIndentedString(numberFormat)).append(\"\\n\");\n-    sb.append(\"    numberPosition: \").append(toIndentedString(numberPosition)).append(\"\\n\");\n-    sb.append(\"    numberStyle: \").append(toIndentedString(numberStyle)).append(\"\\n\");\n-    sb.append(\"    restartAfterLevel: \").append(toIndentedString(restartAfterLevel)).append(\"\\n\");\n-    sb.append(\"    startAt: \").append(toIndentedString(startAt)).append(\"\\n\");\n-    sb.append(\"    tabPosition: \").append(toIndentedString(tabPosition)).append(\"\\n\");\n-    sb.append(\"    textPosition: \").append(toIndentedString(textPosition)).append(\"\\n\");\n-    sb.append(\"    trailingCharacter: \").append(toIndentedString(trailingCharacter)).append(\"\\n\");\n-    sb.append(\"}\");\n-    return sb.toString();\n-  }\n-\n-  /**\n-   * Convert the given object to string with each line indented by 4 spaces\n-   * (except the first line).\n-   */\n-  private String toIndentedString(java.lang.Object o) {\n-    if (o == null) {\n-      return \"null\";\n-    }\n-    return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n+        ListLevelUpdate listLevelUpdate = (ListLevelUpdate) o;\n+        return\n+            Objects.equals(this.alignment, listLevelUpdate.alignment) &&\n+                Objects.equals(this.isLegal, listLevelUpdate.isLegal) &&\n+                Objects.equals(this.numberFormat, listLevelUpdate.numberFormat) &&\n+                Objects.equals(this.numberPosition, listLevelUpdate.numberPosition) &&\n+                Objects.equals(this.numberStyle, listLevelUpdate.numberStyle) &&\n+                Objects.equals(this.restartAfterLevel, listLevelUpdate.restartAfterLevel) &&\n+                Objects.equals(this.startAt, listLevelUpdate.startAt) &&\n+                Objects.equals(this.tabPosition, listLevelUpdate.tabPosition) &&\n+                Objects.equals(this.textPosition, listLevelUpdate.textPosition) &&\n+                Objects.equals(this.trailingCharacter, listLevelUpdate.trailingCharacter);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(alignment, isLegal, numberFormat, numberPosition, numberStyle, restartAfterLevel, startAt, tabPosition, textPosition, trailingCharacter);\n+    }\n+\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"class ListLevelUpdate {\\n\");\n+        sb.append(\"    alignment: \").append(toIndentedString(alignment)).append(\"\\n\");\n+        sb.append(\"    isLegal: \").append(toIndentedString(isLegal)).append(\"\\n\");\n+        sb.append(\"    numberFormat: \").append(toIndentedString(numberFormat)).append(\"\\n\");\n+        sb.append(\"    numberPosition: \").append(toIndentedString(numberPosition)).append(\"\\n\");\n+        sb.append(\"    numberStyle: \").append(toIndentedString(numberStyle)).append(\"\\n\");\n+        sb.append(\"    restartAfterLevel: \").append(toIndentedString(restartAfterLevel)).append(\"\\n\");\n+        sb.append(\"    startAt: \").append(toIndentedString(startAt)).append(\"\\n\");\n+        sb.append(\"    tabPosition: \").append(toIndentedString(tabPosition)).append(\"\\n\");\n+        sb.append(\"    textPosition: \").append(toIndentedString(textPosition)).append(\"\\n\");\n+        sb.append(\"    trailingCharacter: \").append(toIndentedString(trailingCharacter)).append(\"\\n\");\n+        sb.append(\"}\");\n+        return sb.toString();\n+    }\n+\n+    /**\n+     * Convert the given object to string with each line indented by 4 spaces\n+     * (except the first line).\n+     */\n+    private String toIndentedString(java.lang.Object o) {\n+        if (o == null) {\n+            return \"null\";\n+        }\n+        return o.toString().replace(\"\\n\", \"\\n    \");\n+    }\n }\n",
            "diff_size": 86
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/491/ListLevelUpdate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/491/ListLevelUpdate.java\nindex 9cd912b167c..3572941da43 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/491/ListLevelUpdate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/491/ListLevelUpdate.java\n@@ -45,448 +45,548 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * Represents a document list levels.\n  */\n+\n+\n @ApiModel(description = \"Represents a document list levels.\")\n+\n public class ListLevelUpdate {\n     /**\n      * Gets or sets the justification of the actual number of the list item.\n      */\n-    @JsonAdapter(AlignmentEnum.Adapter.class)\n-    public enum AlignmentEnum {\n-        LEFT(\"Left\"),\n-        CENTER(\"Center\"),\n-        RIGHT(\"Right\");\n+  @JsonAdapter(AlignmentEnum.Adapter.class)\n+  public enum AlignmentEnum {\n+    LEFT(\"Left\"),\n \n-        private String value;\n+    CENTER(\"Center\"),\n \n-        AlignmentEnum(String value) {\n-            this.value = value;\n-        }\n+    RIGHT(\"Right\");\n \n-        public String getValue() {\n-            return value;\n-        }\n+    private String value;\n \n-        @Override\n-        public String toString() {\n-            return String.valueOf(value);\n-        }\n+    AlignmentEnum(String value) {\n+      this.value = value;\n+    }\n \n-        public static AlignmentEnum fromValue(String text) {\n-            for (AlignmentEnum b : AlignmentEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n-        }\n+    public String getValue() {\n+      return value;\n+    }\n+\n+    @Override\n+    public String toString() {\n+      return String.valueOf(value);\n+    }\n \n-        public static class Adapter extends TypeAdapter< AlignmentEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final AlignmentEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public AlignmentEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return AlignmentEnum.fromValue(String.valueOf(value));\n-            }\n+    public static AlignmentEnum fromValue(String text) {\n+      for (AlignmentEnum b : AlignmentEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+          return b;\n         }\n+      }\n+      return null;\n+    }\n+\n+    public static class Adapter extends TypeAdapter<AlignmentEnum> {\n+      @Override\n+      public void write(final JsonWriter jsonWriter, final AlignmentEnum enumeration) throws IOException {\n+        jsonWriter.value(enumeration.getValue());\n+      }\n+\n+\n+      @Override\n+      public AlignmentEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return AlignmentEnum.fromValue(String.valueOf(value));\n+      }\n     }\n+  }\n \n     /**\n      * Gets or sets returns or sets the number style for this list level.\n      */\n-    @JsonAdapter(NumberStyleEnum.Adapter.class)\n-    public enum NumberStyleEnum {\n-        ARABIC(\"Arabic\"),\n-        UPPERCASEROMAN(\"UppercaseRoman\"),\n-        LOWERCASEROMAN(\"LowercaseRoman\"),\n-        UPPERCASELETTER(\"UppercaseLetter\"),\n-        LOWERCASELETTER(\"LowercaseLetter\"),\n-        ORDINAL(\"Ordinal\"),\n-        NUMBER(\"Number\"),\n-        ORDINALTEXT(\"OrdinalText\"),\n-        HEX(\"Hex\"),\n-        CHICAGOMANUAL(\"ChicagoManual\"),\n-        KANJI(\"Kanji\"),\n-        KANJIDIGIT(\"KanjiDigit\"),\n-        AIUEOHALFWIDTH(\"AiueoHalfWidth\"),\n-        IROHAHALFWIDTH(\"IrohaHalfWidth\"),\n-        ARABICFULLWIDTH(\"ArabicFullWidth\"),\n-        ARABICHALFWIDTH(\"ArabicHalfWidth\"),\n-        KANJITRADITIONAL(\"KanjiTraditional\"),\n-        KANJITRADITIONAL2(\"KanjiTraditional2\"),\n-        NUMBERINCIRCLE(\"NumberInCircle\"),\n-        DECIMALFULLWIDTH(\"DecimalFullWidth\"),\n-        AIUEO(\"Aiueo\"),\n-        IROHA(\"Iroha\"),\n-        LEADINGZERO(\"LeadingZero\"),\n-        BULLET(\"Bullet\"),\n-        GANADA(\"Ganada\"),\n-        CHOSUNG(\"Chosung\"),\n-        GB1(\"GB1\"),\n-        GB2(\"GB2\"),\n-        GB3(\"GB3\"),\n-        GB4(\"GB4\"),\n-        ZODIAC1(\"Zodiac1\"),\n-        ZODIAC2(\"Zodiac2\"),\n-        ZODIAC3(\"Zodiac3\"),\n-        TRADCHINNUM1(\"TradChinNum1\"),\n-        TRADCHINNUM2(\"TradChinNum2\"),\n-        TRADCHINNUM3(\"TradChinNum3\"),\n-        TRADCHINNUM4(\"TradChinNum4\"),\n-        SIMPCHINNUM1(\"SimpChinNum1\"),\n-        SIMPCHINNUM2(\"SimpChinNum2\"),\n-        SIMPCHINNUM3(\"SimpChinNum3\"),\n-        SIMPCHINNUM4(\"SimpChinNum4\"),\n-        HANJAREAD(\"HanjaRead\"),\n-        HANJAREADDIGIT(\"HanjaReadDigit\"),\n-        HANGUL(\"Hangul\"),\n-        HANJA(\"Hanja\"),\n-        HEBREW1(\"Hebrew1\"),\n-        ARABIC1(\"Arabic1\"),\n-        HEBREW2(\"Hebrew2\"),\n-        ARABIC2(\"Arabic2\"),\n-        HINDILETTER1(\"HindiLetter1\"),\n-        HINDILETTER2(\"HindiLetter2\"),\n-        HINDIARABIC(\"HindiArabic\"),\n-        HINDICARDINALTEXT(\"HindiCardinalText\"),\n-        THAILETTER(\"ThaiLetter\"),\n-        THAIARABIC(\"ThaiArabic\"),\n-        THAICARDINALTEXT(\"ThaiCardinalText\"),\n-        VIETCARDINALTEXT(\"VietCardinalText\"),\n-        NUMBERINDASH(\"NumberInDash\"),\n-        LOWERCASERUSSIAN(\"LowercaseRussian\"),\n-        UPPERCASERUSSIAN(\"UppercaseRussian\"),\n-        NONE(\"None\"),\n-        CUSTOM(\"Custom\");\n-\n-        private String value;\n-\n-        NumberStyleEnum(String value) {\n-            this.value = value;\n-        }\n \n-        public String getValue() {\n-            return value;\n-        }\n \n-        @Override\n-        public String toString() {\n-            return String.valueOf(value);\n-        }\n+  @JsonAdapter(NumberStyleEnum.Adapter.class)\n+  public enum NumberStyleEnum {\n+    ARABIC(\"Arabic\"),\n \n-        public static NumberStyleEnum fromValue(String text) {\n-            for (NumberStyleEnum b : NumberStyleEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n-        }\n+    UPPERCASEROMAN(\"UppercaseRoman\"),\n+\n+    LOWERCASEROMAN(\"LowercaseRoman\"),\n+\n+    UPPERCASELETTER(\"UppercaseLetter\"),\n+\n+    LOWERCASELETTER(\"LowercaseLetter\"),\n+\n+    ORDINAL(\"Ordinal\"),\n+\n+    NUMBER(\"Number\"),\n+\n+    ORDINALTEXT(\"OrdinalText\"),\n+\n+    HEX(\"Hex\"),\n+\n+    CHICAGOMANUAL(\"ChicagoManual\"),\n+\n+    KANJI(\"Kanji\"),\n+\n+    KANJIDIGIT(\"KanjiDigit\"),\n+\n+    AIUEOHALFWIDTH(\"AiueoHalfWidth\"),\n+\n+    IROHAHALFWIDTH(\"IrohaHalfWidth\"),\n+\n+    ARABICFULLWIDTH(\"ArabicFullWidth\"),\n+\n+    ARABICHALFWIDTH(\"ArabicHalfWidth\"),\n+\n+    KANJITRADITIONAL(\"KanjiTraditional\"),\n+\n+    KANJITRADITIONAL2(\"KanjiTraditional2\"),\n+\n+    NUMBERINCIRCLE(\"NumberInCircle\"),\n+\n+    DECIMALFULLWIDTH(\"DecimalFullWidth\"),\n+\n+    AIUEO(\"Aiueo\"),\n+\n+    IROHA(\"Iroha\"),\n+\n+    LEADINGZERO(\"LeadingZero\"),\n+\n+    BULLET(\"Bullet\"),\n+\n+    GANADA(\"Ganada\"),\n+\n+    CHOSUNG(\"Chosung\"),\n+\n+    GB1(\"GB1\"),\n+\n+    GB2(\"GB2\"),\n+\n+    GB3(\"GB3\"),\n+\n+    GB4(\"GB4\"),\n+\n+    ZODIAC1(\"Zodiac1\"),\n+\n+    ZODIAC2(\"Zodiac2\"),\n \n-        public static class Adapter extends TypeAdapter< NumberStyleEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final NumberStyleEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public NumberStyleEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return NumberStyleEnum.fromValue(String.valueOf(value));\n-            }\n+    ZODIAC3(\"Zodiac3\"),\n+\n+    TRADCHINNUM1(\"TradChinNum1\"),\n+\n+    TRADCHINNUM2(\"TradChinNum2\"),\n+\n+    TRADCHINNUM3(\"TradChinNum3\"),\n+\n+    TRADCHINNUM4(\"TradChinNum4\"),\n+\n+    SIMPCHINNUM1(\"SimpChinNum1\"),\n+\n+    SIMPCHINNUM2(\"SimpChinNum2\"),\n+\n+    SIMPCHINNUM3(\"SimpChinNum3\"),\n+\n+    SIMPCHINNUM4(\"SimpChinNum4\"),\n+\n+    HANJAREAD(\"HanjaRead\"),\n+\n+    HANJAREADDIGIT(\"HanjaReadDigit\"),\n+\n+    HANGUL(\"Hangul\"),\n+\n+    HANJA(\"Hanja\"),\n+\n+    HEBREW1(\"Hebrew1\"),\n+\n+    ARABIC1(\"Arabic1\"),\n+\n+    HEBREW2(\"Hebrew2\"),\n+\n+    ARABIC2(\"Arabic2\"),\n+\n+    HINDILETTER1(\"HindiLetter1\"),\n+\n+    HINDILETTER2(\"HindiLetter2\"),\n+\n+    HINDIARABIC(\"HindiArabic\"),\n+\n+    HINDICARDINALTEXT(\"HindiCardinalText\"),\n+\n+    THAILETTER(\"ThaiLetter\"),\n+\n+    THAIARABIC(\"ThaiArabic\"),\n+\n+    THAICARDINALTEXT(\"ThaiCardinalText\"),\n+\n+    VIETCARDINALTEXT(\"VietCardinalText\"),\n+\n+    NUMBERINDASH(\"NumberInDash\"),\n+\n+    LOWERCASERUSSIAN(\"LowercaseRussian\"),\n+\n+    UPPERCASERUSSIAN(\"UppercaseRussian\"),\n+\n+    NONE(\"None\"),\n+\n+    CUSTOM(\"Custom\");\n+\n+    private String value;\n+\n+    NumberStyleEnum(String value) {\n+      this.value = value;\n+    }\n+\n+    public String getValue() {\n+      return value;\n+    }\n+\n+    @Override\n+    public String toString() {\n+      return String.valueOf(value);\n+    }\n+\n+    public static NumberStyleEnum fromValue(String text) {\n+      for (NumberStyleEnum b : NumberStyleEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+          return b;\n         }\n+      }\n+      return null;\n     }\n \n+    public static class Adapter extends TypeAdapter<NumberStyleEnum> {\n+      @Override\n+      public void write(final JsonWriter jsonWriter, final NumberStyleEnum enumeration) throws IOException {\n+        jsonWriter.value(enumeration.getValue());\n+      }\n+\n+\n+      @Override\n+      public NumberStyleEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return NumberStyleEnum.fromValue(String.valueOf(value));\n+      }\n+    }\n+  }\n+\n     /**\n      * Gets or sets returns or sets the character inserted after the number for the list level.\n      */\n-    @JsonAdapter(TrailingCharacterEnum.Adapter.class)\n-    public enum TrailingCharacterEnum {\n-        TAB(\"Tab\"),\n-        SPACE(\"Space\"),\n-        NOTHING(\"Nothing\");\n \n-        private String value;\n \n-        TrailingCharacterEnum(String value) {\n-            this.value = value;\n-        }\n+  @JsonAdapter(TrailingCharacterEnum.Adapter.class)\n+  public enum TrailingCharacterEnum {\n+    TAB(\"Tab\"),\n \n-        public String getValue() {\n-            return value;\n-        }\n+    SPACE(\"Space\"),\n \n-        @Override\n-        public String toString() {\n-            return String.valueOf(value);\n-        }\n+    NOTHING(\"Nothing\");\n \n-        public static TrailingCharacterEnum fromValue(String text) {\n-            for (TrailingCharacterEnum b : TrailingCharacterEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n-        }\n+    private String value;\n \n-        public static class Adapter extends TypeAdapter< TrailingCharacterEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final TrailingCharacterEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public TrailingCharacterEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return TrailingCharacterEnum.fromValue(String.valueOf(value));\n-            }\n+    TrailingCharacterEnum(String value) {\n+      this.value = value;\n+    }\n+\n+    public String getValue() {\n+      return value;\n+    }\n+\n+    @Override\n+    public String toString() {\n+      return String.valueOf(value);\n+    }\n+\n+    public static TrailingCharacterEnum fromValue(String text) {\n+      for (TrailingCharacterEnum b : TrailingCharacterEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+          return b;\n         }\n+      }\n+      return null;\n     }\n \n-    @SerializedName(\"Alignment\")\n-    private AlignmentEnum alignment = null;\n+    public static class Adapter extends TypeAdapter<TrailingCharacterEnum> {\n+      @Override\n+      public void write(final JsonWriter jsonWriter, final TrailingCharacterEnum enumeration) throws IOException {\n+        jsonWriter.value(enumeration.getValue());\n+      }\n \n-    @SerializedName(\"IsLegal\")\n-    private Boolean isLegal = null;\n \n-    @SerializedName(\"NumberFormat\")\n-    private String numberFormat = null;\n+      @Override\n+      public TrailingCharacterEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return TrailingCharacterEnum.fromValue(String.valueOf(value));\n+      }\n+    }\n+  }\n \n-    @SerializedName(\"NumberPosition\")\n-    private Double numberPosition = null;\n \n-    @SerializedName(\"NumberStyle\")\n-    private NumberStyleEnum numberStyle = null;\n+  @SerializedName(\"Alignment\")\n+  private AlignmentEnum alignment = null;\n \n-    @SerializedName(\"RestartAfterLevel\")\n-    private Integer restartAfterLevel = null;\n+  @SerializedName(\"IsLegal\")\n+  private Boolean isLegal = null;\n \n-    @SerializedName(\"StartAt\")\n-    private Integer startAt = null;\n+  @SerializedName(\"NumberFormat\")\n+  private String numberFormat = null;\n \n-    @SerializedName(\"TabPosition\")\n-    private Double tabPosition = null;\n+  @SerializedName(\"NumberPosition\")\n+  private Double numberPosition = null;\n \n-    @SerializedName(\"TextPosition\")\n-    private Double textPosition = null;\n+  @SerializedName(\"NumberStyle\")\n+  private NumberStyleEnum numberStyle = null;\n \n-    @SerializedName(\"TrailingCharacter\")\n-    private TrailingCharacterEnum trailingCharacter = null;\n-    public ListLevelUpdate alignment(AlignmentEnum alignment) {\n-        this.alignment = alignment;\n-        return this;\n-    }\n+  @SerializedName(\"RestartAfterLevel\")\n+  private Integer restartAfterLevel = null;\n+\n+  @SerializedName(\"StartAt\")\n+  private Integer startAt = null;\n+\n+  @SerializedName(\"TabPosition\")\n+  private Double tabPosition = null;\n+\n+  @SerializedName(\"TextPosition\")\n+  private Double textPosition = null;\n+\n+  @SerializedName(\"TrailingCharacter\")\n+  private TrailingCharacterEnum trailingCharacter = null;\n+\n+  public ListLevelUpdate alignment(AlignmentEnum alignment) {\n+    this.alignment = alignment;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets the justification of the actual number of the list item.\n     * @return alignment\n     **/\n-    @ApiModelProperty(value = \"Gets or sets the justification of the actual number of the list item.\")\n-    public AlignmentEnum getAlignment() {\n-        return alignment;\n-    }\n \n-    public void setAlignment(AlignmentEnum alignment) {\n-        this.alignment = alignment;\n-    }\n \n-    public ListLevelUpdate isLegal(Boolean isLegal) {\n-        this.isLegal = isLegal;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets the justification of the actual number of the list item.\")\n+  public AlignmentEnum getAlignment() {\n+    return alignment;\n+  }\n+\n+  public void setAlignment(AlignmentEnum alignment) {\n+    this.alignment = alignment;\n+  }\n+\n+  public ListLevelUpdate isLegal(Boolean isLegal) {\n+    this.isLegal = isLegal;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets a value indicating whether true if the level turns all inherited numbers to Arabic, false if it preserves\n      * their number style.\n     * @return isLegal\n     **/\n-    @ApiModelProperty(value = \"Gets or sets a value indicating whether true if the level turns all inherited numbers to Arabic, false if it preserves their number style.\")\n-    public Boolean getIsLegal() {\n-        return isLegal;\n-    }\n \n-    public void setIsLegal(Boolean isLegal) {\n-        this.isLegal = isLegal;\n-    }\n \n-    public ListLevelUpdate numberFormat(String numberFormat) {\n-        this.numberFormat = numberFormat;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets a value indicating whether true if the level turns all inherited numbers to Arabic, false if it preserves their number style.\")\n+  public Boolean getIsLegal() {\n+    return isLegal;\n+  }\n+\n+  public void setIsLegal(Boolean isLegal) {\n+    this.isLegal = isLegal;\n+  }\n+\n+  public ListLevelUpdate numberFormat(String numberFormat) {\n+    this.numberFormat = numberFormat;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets returns or sets the number format for the list level.\n     * @return numberFormat\n     **/\n-    @ApiModelProperty(value = \"Gets or sets returns or sets the number format for the list level.\")\n-    public String getNumberFormat() {\n-        return numberFormat;\n-    }\n \n-    public void setNumberFormat(String numberFormat) {\n-        this.numberFormat = numberFormat;\n-    }\n \n-    public ListLevelUpdate numberPosition(Double numberPosition) {\n-        this.numberPosition = numberPosition;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets returns or sets the number format for the list level.\")\n+  public String getNumberFormat() {\n+    return numberFormat;\n+  }\n+\n+  public void setNumberFormat(String numberFormat) {\n+    this.numberFormat = numberFormat;\n+  }\n+\n+  public ListLevelUpdate numberPosition(Double numberPosition) {\n+    this.numberPosition = numberPosition;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets returns or sets the position (in points) of the number or bullet for the list\n      * level.\n     * @return numberPosition\n     **/\n-    @ApiModelProperty(value = \"Gets or sets returns or sets the position (in points) of the number or bullet for the list level.\")\n-    public Double getNumberPosition() {\n-        return numberPosition;\n-    }\n \n-    public void setNumberPosition(Double numberPosition) {\n-        this.numberPosition = numberPosition;\n-    }\n \n-    public ListLevelUpdate numberStyle(NumberStyleEnum numberStyle) {\n-        this.numberStyle = numberStyle;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets returns or sets the position (in points) of the number or bullet for the list level.\")\n+  public Double getNumberPosition() {\n+    return numberPosition;\n+  }\n+\n+  public void setNumberPosition(Double numberPosition) {\n+    this.numberPosition = numberPosition;\n+  }\n+\n+  public ListLevelUpdate numberStyle(NumberStyleEnum numberStyle) {\n+    this.numberStyle = numberStyle;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets returns or sets the number style for this list level.\n     * @return numberStyle\n     **/\n-    @ApiModelProperty(value = \"Gets or sets returns or sets the number style for this list level.\")\n-    public NumberStyleEnum getNumberStyle() {\n-        return numberStyle;\n-    }\n \n-    public void setNumberStyle(NumberStyleEnum numberStyle) {\n-        this.numberStyle = numberStyle;\n-    }\n \n-    public ListLevelUpdate restartAfterLevel(Integer restartAfterLevel) {\n-        this.restartAfterLevel = restartAfterLevel;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets returns or sets the number style for this list level.\")\n+  public NumberStyleEnum getNumberStyle() {\n+    return numberStyle;\n+  }\n+\n+  public void setNumberStyle(NumberStyleEnum numberStyle) {\n+    this.numberStyle = numberStyle;\n+  }\n+\n+  public ListLevelUpdate restartAfterLevel(Integer restartAfterLevel) {\n+    this.restartAfterLevel = restartAfterLevel;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets or returns the list level that must appear before the specified list level\n      * restarts numbering.\n     * @return restartAfterLevel\n     **/\n-    @ApiModelProperty(value = \"Gets or sets or returns the list level that must appear before the specified list level restarts numbering.\")\n-    public Integer getRestartAfterLevel() {\n-        return restartAfterLevel;\n-    }\n \n-    public void setRestartAfterLevel(Integer restartAfterLevel) {\n-        this.restartAfterLevel = restartAfterLevel;\n-    }\n \n-    public ListLevelUpdate startAt(Integer startAt) {\n-        this.startAt = startAt;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets or returns the list level that must appear before the specified list level restarts numbering.\")\n+  public Integer getRestartAfterLevel() {\n+    return restartAfterLevel;\n+  }\n+\n+  public void setRestartAfterLevel(Integer restartAfterLevel) {\n+    this.restartAfterLevel = restartAfterLevel;\n+  }\n+\n+  public ListLevelUpdate startAt(Integer startAt) {\n+    this.startAt = startAt;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets returns or sets the starting number for this list level.\n     * @return startAt\n     **/\n-    @ApiModelProperty(value = \"Gets or sets returns or sets the starting number for this list level.\")\n-    public Integer getStartAt() {\n-        return startAt;\n-    }\n \n-    public void setStartAt(Integer startAt) {\n-        this.startAt = startAt;\n-    }\n \n-    public ListLevelUpdate tabPosition(Double tabPosition) {\n-        this.tabPosition = tabPosition;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets returns or sets the starting number for this list level.\")\n+  public Integer getStartAt() {\n+    return startAt;\n+  }\n+\n+  public void setStartAt(Integer startAt) {\n+    this.startAt = startAt;\n+  }\n+\n+  public ListLevelUpdate tabPosition(Double tabPosition) {\n+    this.tabPosition = tabPosition;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets returns or sets the tab position (in points) for the list level.\n     * @return tabPosition\n     **/\n-    @ApiModelProperty(value = \"Gets or sets returns or sets the tab position (in points) for the list level.\")\n-    public Double getTabPosition() {\n-        return tabPosition;\n-    }\n \n-    public void setTabPosition(Double tabPosition) {\n-        this.tabPosition = tabPosition;\n-    }\n \n-    public ListLevelUpdate textPosition(Double textPosition) {\n-        this.textPosition = textPosition;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets returns or sets the tab position (in points) for the list level.\")\n+  public Double getTabPosition() {\n+    return tabPosition;\n+  }\n+\n+  public void setTabPosition(Double tabPosition) {\n+    this.tabPosition = tabPosition;\n+  }\n+\n+  public ListLevelUpdate textPosition(Double textPosition) {\n+    this.textPosition = textPosition;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets returns or sets the position (in points) for the second line of wrapping text\n      * for the list level.\n     * @return textPosition\n     **/\n-    @ApiModelProperty(value = \"Gets or sets returns or sets the position (in points) for the second line of wrapping text for the list level.\")\n-    public Double getTextPosition() {\n-        return textPosition;\n-    }\n \n-    public void setTextPosition(Double textPosition) {\n-        this.textPosition = textPosition;\n-    }\n \n-    public ListLevelUpdate trailingCharacter(TrailingCharacterEnum trailingCharacter) {\n-        this.trailingCharacter = trailingCharacter;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets returns or sets the position (in points) for the second line of wrapping text for the list level.\")\n+  public Double getTextPosition() {\n+    return textPosition;\n+  }\n+\n+  public void setTextPosition(Double textPosition) {\n+    this.textPosition = textPosition;\n+  }\n+\n+  public ListLevelUpdate trailingCharacter(TrailingCharacterEnum trailingCharacter) {\n+    this.trailingCharacter = trailingCharacter;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets returns or sets the character inserted after the number for the list level.\n     * @return trailingCharacter\n     **/\n-    @ApiModelProperty(value = \"Gets or sets returns or sets the character inserted after the number for the list level.\")\n-    public TrailingCharacterEnum getTrailingCharacter() {\n-        return trailingCharacter;\n-    }\n \n-    public void setTrailingCharacter(TrailingCharacterEnum trailingCharacter) {\n-        this.trailingCharacter = trailingCharacter;\n-    }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    ListLevelUpdate listLevelUpdate = (ListLevelUpdate)o;\n-    return\n-        Objects.equals(this.alignment, listLevelUpdate.alignment) &&\n-        Objects.equals(this.isLegal, listLevelUpdate.isLegal) &&\n-        Objects.equals(this.numberFormat, listLevelUpdate.numberFormat) &&\n-        Objects.equals(this.numberPosition, listLevelUpdate.numberPosition) &&\n-        Objects.equals(this.numberStyle, listLevelUpdate.numberStyle) &&\n-        Objects.equals(this.restartAfterLevel, listLevelUpdate.restartAfterLevel) &&\n-        Objects.equals(this.startAt, listLevelUpdate.startAt) &&\n-        Objects.equals(this.tabPosition, listLevelUpdate.tabPosition) &&\n-        Objects.equals(this.textPosition, listLevelUpdate.textPosition) &&\n-        Objects.equals(this.trailingCharacter, listLevelUpdate.trailingCharacter);\n+  @ApiModelProperty(value = \"Gets or sets returns or sets the character inserted after the number for the list level.\")\n+  public TrailingCharacterEnum getTrailingCharacter() {\n+    return trailingCharacter;\n+  }\n+\n+  public void setTrailingCharacter(TrailingCharacterEnum trailingCharacter) {\n+    this.trailingCharacter = trailingCharacter;\n+  }\n+\n+\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+\n+    ListLevelUpdate listLevelUpdate = (ListLevelUpdate) o;\n+    return Objects.equals(this.alignment, listLevelUpdate.alignment) &&\n+    Objects.equals(this.isLegal, listLevelUpdate.isLegal) &&\n+    Objects.equals(this.numberFormat, listLevelUpdate.numberFormat) &&\n+    Objects.equals(this.numberPosition, listLevelUpdate.numberPosition) &&\n+    Objects.equals(this.numberStyle, listLevelUpdate.numberStyle) &&\n+    Objects.equals(this.restartAfterLevel, listLevelUpdate.restartAfterLevel) &&\n+    Objects.equals(this.startAt, listLevelUpdate.startAt) &&\n+    Objects.equals(this.tabPosition, listLevelUpdate.tabPosition) &&\n+    Objects.equals(this.textPosition, listLevelUpdate.textPosition) &&\n+    Objects.equals(this.trailingCharacter, listLevelUpdate.trailingCharacter);\n   }\n \n+\n   @Override\n   public int hashCode() {\n     return Objects.hash(alignment, isLegal, numberFormat, numberPosition, numberStyle, restartAfterLevel, startAt, tabPosition, textPosition, trailingCharacter);\n   }\n \n+\n   @Override\n   public String toString() {\n     StringBuilder sb = new StringBuilder();\n@@ -509,10 +609,12 @@ public class ListLevelUpdate {\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n+\n   private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n       return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 599
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/491/ListLevelUpdate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/491/ListLevelUpdate.java\nindex 9cd912b167c..5c84b0c4b77 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/491/ListLevelUpdate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/491/ListLevelUpdate.java\n@@ -468,7 +468,7 @@ public class ListLevelUpdate {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    ListLevelUpdate listLevelUpdate = (ListLevelUpdate)o;\n+    ListLevelUpdate listLevelUpdate = (ListLevelUpdate) o;\n     return\n         Objects.equals(this.alignment, listLevelUpdate.alignment) &&\n         Objects.equals(this.isLegal, listLevelUpdate.isLegal) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/491/ListLevelUpdate.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/491/ListLevelUpdate.java\nindex 9cd912b167c..5c84b0c4b77 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/491/ListLevelUpdate.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/491/ListLevelUpdate.java\n@@ -468,7 +468,7 @@ public class ListLevelUpdate {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    ListLevelUpdate listLevelUpdate = (ListLevelUpdate)o;\n+    ListLevelUpdate listLevelUpdate = (ListLevelUpdate) o;\n     return\n         Objects.equals(this.alignment, listLevelUpdate.alignment) &&\n         Objects.equals(this.isLegal, listLevelUpdate.isLegal) &&\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
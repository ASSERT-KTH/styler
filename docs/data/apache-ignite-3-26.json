{
    "project_name": "apache-ignite-3",
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "34",
                "column": "5",
                "severity": "error",
                "message": "'VARIABLE_DEF' should be separated from previous line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "public class GetLeaderRequestProcessor implements RpcProcessor<GetLeaderRequest> {\n    private final Executor executor;\n    private final RaftClientMessagesFactory factory;\n\n    public GetLeaderRequestProcessor(Executor executor, RaftClientMessagesFactory factory) {\n        this.executor = executor;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/26/GetLeaderRequestProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/26/GetLeaderRequestProcessor.java\nindex 9d4329cefac..b7cce567563 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/26/GetLeaderRequestProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler/26/GetLeaderRequestProcessor.java\n@@ -31,6 +31,7 @@ import org.apache.ignite.raft.jraft.rpc.RpcProcessor;\n  */\n public class GetLeaderRequestProcessor implements RpcProcessor<GetLeaderRequest> {\n     private final Executor executor;\n+\n     private final RaftClientMessagesFactory factory;\n \n     public GetLeaderRequestProcessor(Executor executor, RaftClientMessagesFactory factory) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/26/GetLeaderRequestProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/26/GetLeaderRequestProcessor.java\nindex 9d4329cefac..ceea1f2bf3e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/26/GetLeaderRequestProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/intellij/26/GetLeaderRequestProcessor.java\n@@ -14,6 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.ignite.raft.jraft.rpc.impl.client;\n \n import java.util.concurrent.Executor;\n@@ -30,45 +31,55 @@ import org.apache.ignite.raft.jraft.rpc.RpcProcessor;\n  * Process get leader request.\n  */\n public class GetLeaderRequestProcessor implements RpcProcessor<GetLeaderRequest> {\n-    private final Executor executor;\n-    private final RaftClientMessagesFactory factory;\n-\n-    public GetLeaderRequestProcessor(Executor executor, RaftClientMessagesFactory factory) {\n-        this.executor = executor;\n-        this.factory = factory;\n-    }\n+  private final Executor executor;\n \n-    /** {@inheritDoc} */\n-    @Override public void handleRequest(RpcContext rpcCtx, GetLeaderRequest request) {\n-        Node node = rpcCtx.getNodeManager().get(request.groupId(), PeerId.parsePeer(rpcCtx.getLocalAddress()));\n+  private final RaftClientMessagesFactory factory;\n \n-        if (node == null) {\n-            rpcCtx.sendResponse(factory.raftErrorResponse().errorCode(RaftErrorCode.ILLEGAL_STATE).build());\n+  public GetLeaderRequestProcessor(Executor executor, RaftClientMessagesFactory factory) {\n+    this.executor = executor;\n+    this.factory = factory;\n+  }\n \n-            return;\n-        }\n+  /**\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public void handleRequest(RpcContext rpcCtx, GetLeaderRequest request) {\n+    Node node = rpcCtx.getNodeManager().get(request.groupId(), PeerId.parsePeer(rpcCtx.getLocalAddress()));\n \n-        PeerId leaderId = node.getLeaderId();\n+    if (node == null) {\n+      rpcCtx.sendResponse(factory.raftErrorResponse().errorCode(RaftErrorCode.ILLEGAL_STATE).build());\n \n-        if (leaderId == null) {\n-            rpcCtx.sendResponse(factory.raftErrorResponse().errorCode(RaftErrorCode.NO_LEADER).build());\n+      return;\n+    }\n \n-            return;\n-        }\n+    PeerId leaderId = node.getLeaderId();\n \n-        // Find by host and port.\n-        Peer leader0 = new Peer(leaderId.getEndpoint().toString());\n+    if (leaderId == null) {\n+      rpcCtx.sendResponse(factory.raftErrorResponse().errorCode(RaftErrorCode.NO_LEADER).build());\n \n-        rpcCtx.sendResponse(factory.getLeaderResponse().leader(leader0).build());\n+      return;\n     }\n \n-    /** {@inheritDoc} */\n-    @Override public String interest() {\n-        return GetLeaderRequest.class.getName();\n-    }\n+    // Find by host and port.\n+    Peer leader0 = new Peer(leaderId.getEndpoint().toString());\n \n-    /** {@inheritDoc} */\n-    @Override public Executor executor() {\n-        return executor;\n-    }\n+    rpcCtx.sendResponse(factory.getLeaderResponse().leader(leader0).build());\n+  }\n+\n+  /**\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public String interest() {\n+    return GetLeaderRequest.class.getName();\n+  }\n+\n+  /**\n+   * {@inheritDoc}\n+   */\n+  @Override\n+  public Executor executor() {\n+    return executor;\n+  }\n }\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "34",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' should be separated from previous line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/26/GetLeaderRequestProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/naturalize/26/GetLeaderRequestProcessor.java\nindex 9d4329cefac..97fed124ed7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/26/GetLeaderRequestProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/naturalize/26/GetLeaderRequestProcessor.java\n@@ -71,4 +71,4 @@ public class GetLeaderRequestProcessor implements RpcProcessor<GetLeaderRequest>\n     @Override public Executor executor() {\n         return executor;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "34",
                    "column": "1",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "39",
                    "column": "5",
                    "severity": "error",
                    "message": "'VARIABLE_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "42",
                    "column": "5",
                    "severity": "error",
                    "message": "'CTOR_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "50",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "80",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "87",
                    "column": "5",
                    "severity": "error",
                    "message": "'METHOD_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/26/GetLeaderRequestProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/26/GetLeaderRequestProcessor.java\nindex 9d4329cefac..faa6e07a506 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/26/GetLeaderRequestProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/codebuff/26/GetLeaderRequestProcessor.java\n@@ -29,21 +29,30 @@ import org.apache.ignite.raft.jraft.rpc.RpcProcessor;\n /**\n  * Process get leader request.\n  */\n+\n+\n public class GetLeaderRequestProcessor implements RpcProcessor<GetLeaderRequest> {\n+\n     private final Executor executor;\n+\n+\n     private final RaftClientMessagesFactory factory;\n \n+\n     public GetLeaderRequestProcessor(Executor executor, RaftClientMessagesFactory factory) {\n         this.executor = executor;\n         this.factory = factory;\n     }\n \n     /** {@inheritDoc} */\n+\n+\n     @Override public void handleRequest(RpcContext rpcCtx, GetLeaderRequest request) {\n         Node node = rpcCtx.getNodeManager().get(request.groupId(), PeerId.parsePeer(rpcCtx.getLocalAddress()));\n \n         if (node == null) {\n-            rpcCtx.sendResponse(factory.raftErrorResponse().errorCode(RaftErrorCode.ILLEGAL_STATE).build());\n+            rpcCtx.sendResponse(factory.raftErrorResponse().errorCode(RaftErrorCode.ILLEGAL_STATE)\n+                                                           .build());\n \n             return;\n         }\n@@ -51,24 +60,31 @@ public class GetLeaderRequestProcessor implements RpcProcessor<GetLeaderRequest>\n         PeerId leaderId = node.getLeaderId();\n \n         if (leaderId == null) {\n-            rpcCtx.sendResponse(factory.raftErrorResponse().errorCode(RaftErrorCode.NO_LEADER).build());\n+            rpcCtx.sendResponse(factory.raftErrorResponse().errorCode(RaftErrorCode.NO_LEADER)\n+                                                           .build());\n \n             return;\n         }\n \n         // Find by host and port.\n+\n         Peer leader0 = new Peer(leaderId.getEndpoint().toString());\n \n-        rpcCtx.sendResponse(factory.getLeaderResponse().leader(leader0).build());\n+        rpcCtx.sendResponse(factory.getLeaderResponse().leader(leader0)\n+                                                       .build());\n     }\n \n     /** {@inheritDoc} */\n+\n+\n     @Override public String interest() {\n         return GetLeaderRequest.class.getName();\n     }\n \n     /** {@inheritDoc} */\n+\n+\n     @Override public Executor executor() {\n         return executor;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/26/GetLeaderRequestProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/26/GetLeaderRequestProcessor.java\nindex 9d4329cefac..b7cce567563 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/26/GetLeaderRequestProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_random/26/GetLeaderRequestProcessor.java\n@@ -31,6 +31,7 @@ import org.apache.ignite.raft.jraft.rpc.RpcProcessor;\n  */\n public class GetLeaderRequestProcessor implements RpcProcessor<GetLeaderRequest> {\n     private final Executor executor;\n+\n     private final RaftClientMessagesFactory factory;\n \n     public GetLeaderRequestProcessor(Executor executor, RaftClientMessagesFactory factory) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/26/GetLeaderRequestProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/26/GetLeaderRequestProcessor.java\nindex 9d4329cefac..b7cce567563 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/errored/1/26/GetLeaderRequestProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-ignite-3/styler_three_grams/26/GetLeaderRequestProcessor.java\n@@ -31,6 +31,7 @@ import org.apache.ignite.raft.jraft.rpc.RpcProcessor;\n  */\n public class GetLeaderRequestProcessor implements RpcProcessor<GetLeaderRequest> {\n     private final Executor executor;\n+\n     private final RaftClientMessagesFactory factory;\n \n     public GetLeaderRequestProcessor(Executor executor, RaftClientMessagesFactory factory) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "3107",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "144",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "147",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "159",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3107/PrimitiveLongIntKeyValueArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3107/PrimitiveLongIntKeyValueArray.java\nindex 3df33c7a666..80b70e1a24d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3107/PrimitiveLongIntKeyValueArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3107/PrimitiveLongIntKeyValueArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.messaging.util;\n \n import java.util.Arrays;\n@@ -40,15 +41,15 @@ public class PrimitiveLongIntKeyValueArray\n     private double growthFactor;\n     private int size;\n \n-    private PrimitiveLongIntKeyValueArray( int initialCapacity, double growthFactor )\n+    private PrimitiveLongIntKeyValueArray(int initialCapacity, double growthFactor)\n     {\n-        if ( initialCapacity <= 0 )\n+        if (initialCapacity <= 0)\n         {\n-            throw new IllegalArgumentException( \"Illegal initial capacity: \" + initialCapacity );\n+            throw new IllegalArgumentException(\"Illegal initial capacity: \" + initialCapacity);\n         }\n-        if ( growthFactor <= 1 )\n+        if (growthFactor <= 1)\n         {\n-            throw new IllegalArgumentException( \"Illegal growth factor: \" + growthFactor );\n+            throw new IllegalArgumentException(\"Illegal growth factor: \" + growthFactor);\n         }\n         naturalKeys = new long[DEFAULT_INITIAL_CAPACITY];\n         naturalValues = new int[DEFAULT_INITIAL_CAPACITY];\n@@ -57,14 +58,14 @@ public class PrimitiveLongIntKeyValueArray\n         this.growthFactor = growthFactor;\n     }\n \n-    public PrimitiveLongIntKeyValueArray( int initialCapacity )\n+    public PrimitiveLongIntKeyValueArray(int initialCapacity)\n     {\n-        this( initialCapacity, DEFAULT_GROWTH_FACTOR );\n+        this(initialCapacity, DEFAULT_GROWTH_FACTOR);\n     }\n \n     PrimitiveLongIntKeyValueArray()\n     {\n-        this( DEFAULT_INITIAL_CAPACITY, DEFAULT_GROWTH_FACTOR );\n+        this(DEFAULT_INITIAL_CAPACITY, DEFAULT_GROWTH_FACTOR);\n     }\n \n     /**\n@@ -83,19 +84,19 @@ public class PrimitiveLongIntKeyValueArray\n      *\n      * @param newCapacity the new capacity requirement\n      */\n-    void ensureCapacity( int newCapacity )\n+    void ensureCapacity(int newCapacity)\n     {\n         int capacity = naturalKeys.length;\n-        if ( newCapacity > capacity )\n+        if (newCapacity > capacity)\n         {\n             long[] newNaturalKeys = new long[newCapacity];\n             int[] newNaturalValues = new int[newCapacity];\n             long[] newSortedKeys = new long[newCapacity];\n             int[] newSortedValues = new int[newCapacity];\n-            arraycopy( naturalKeys, 0, newNaturalKeys, 0, capacity );\n-            arraycopy( naturalValues, 0, newNaturalValues, 0, capacity );\n-            arraycopy( sortedKeys, 0, newSortedKeys, 0, capacity );\n-            arraycopy( sortedValues, 0, newSortedValues, 0, capacity );\n+            arraycopy(naturalKeys, 0, newNaturalKeys, 0, capacity);\n+            arraycopy(naturalValues, 0, newNaturalValues, 0, capacity);\n+            arraycopy(sortedKeys, 0, newSortedKeys, 0, capacity);\n+            arraycopy(sortedValues, 0, newSortedValues, 0, capacity);\n             naturalKeys = newNaturalKeys;\n             naturalValues = newNaturalValues;\n             sortedKeys = newSortedKeys;\n@@ -117,18 +118,17 @@ public class PrimitiveLongIntKeyValueArray\n      * Fetch the integer mapped to the given key or defaultValue if\n      * that key does not exist.\n      *\n-     * @param key the handle for the required value\n+     * @param key          the handle for the required value\n      * @param defaultValue value to return if the key is not found\n      * @return the integer value mapped to the key provided\n      */\n-    public int getOrDefault( long key, int defaultValue )\n+    public int getOrDefault(long key, int defaultValue)\n     {\n-        int index = Arrays.binarySearch( sortedKeys, 0, size, key );\n-        if ( index >= 0 )\n+        int index = Arrays.binarySearch(sortedKeys, 0, size, key);\n+        if (index >= 0)\n         {\n             return sortedValues[index];\n-        }\n-        else\n+        } else\n         {\n             return defaultValue;\n         }\n@@ -137,27 +137,26 @@ public class PrimitiveLongIntKeyValueArray\n     /**\n      * Set the value for a given key if that key is not already in use.\n      *\n-     * @param key the key against which to put the value\n+     * @param key   the key against which to put the value\n      * @param value the value to include\n      * @return true if the value was successfully included, false otherwise\n      */\n-    public boolean putIfAbsent( long key, int value )\n+    public boolean putIfAbsent(long key, int value)\n     {\n         int capacity = naturalKeys.length;\n-        if ( size == capacity )\n+        if (size == capacity)\n         {\n-            ensureCapacity( (int) Math.floor( growthFactor * capacity ) );\n+            ensureCapacity((int) Math.floor(growthFactor * capacity));\n         }\n \n-        int index = Arrays.binarySearch( sortedKeys, 0, size, key );\n-        if ( index >= 0 )\n+        int index = Arrays.binarySearch(sortedKeys, 0, size, key);\n+        if (index >= 0)\n         {\n             return false;\n-        }\n-        else\n+        } else\n         {\n             index = -index - 1;\n-            for ( int i = size; i > index; i-- )\n+            for (int i = size; i > index; i--)\n             {\n                 int j = i - 1;\n                 sortedKeys[i] = sortedKeys[j];\n@@ -178,10 +177,10 @@ public class PrimitiveLongIntKeyValueArray\n      *\n      * @param newCapacity the new capacity requirement\n      */\n-    public void reset( int newCapacity )\n+    public void reset(int newCapacity)\n     {\n         size = 0;\n-        ensureCapacity( newCapacity );\n+        ensureCapacity(newCapacity);\n     }\n \n     /**\n@@ -191,6 +190,6 @@ public class PrimitiveLongIntKeyValueArray\n      */\n     public long[] keys()\n     {\n-        return Arrays.copyOfRange( naturalKeys, 0, size );\n+        return Arrays.copyOfRange(naturalKeys, 0, size);\n     }\n }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
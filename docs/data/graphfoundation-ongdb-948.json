{
    "project_name": "graphfoundation-ongdb",
    "error_id": "948",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "218",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "338",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "418",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "434",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "438",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "487",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "487",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "489",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "526",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "526",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "532",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "532",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "534",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "534",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "538",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "538",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "572",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "572",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "614",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "614",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "618",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "618",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "650",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "650",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "652",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "652",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "674",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "674",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "682",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "682",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "686",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "686",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "690",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "690",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "723",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "723",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "725",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "725",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "729",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "729",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "746",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "746",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "748",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "748",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "764",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "764",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "770",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "770",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "772",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "772",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "776",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "776",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "780",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "780",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "811",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "811",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "813",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "813",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "817",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "817",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "831",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "831",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "833",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "833",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "837",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "837",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "856",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "856",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "858",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "858",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "863",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "863",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "875",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "875",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "877",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "877",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "881",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "881",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "907",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "907",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "909",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "909",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "910",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "910",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "913",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "913",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "919",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "919",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "925",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "925",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "927",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "927",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "931",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "931",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "935",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "935",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "981",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "981",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "991",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "991",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "993",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "993",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1001",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1001",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1003",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1003",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1009",
                    "column": "80",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1009",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1011",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1011",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1020",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1020",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1039",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1039",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1041",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1041",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1045",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1045",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1071",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1071",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1091",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1091",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1093",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1093",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1097",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1097",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1124",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1124",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1151",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1151",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1153",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1153",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1157",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1157",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1182",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1182",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1184",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1184",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1194",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1194",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1200",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1200",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1202",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1202",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1206",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1206",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1210",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1210",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1230",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1230",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1249",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1249",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1251",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1251",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1255",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1255",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/948/RaftMessages.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/948/RaftMessages.java\nindex 71c928fb0c4..5d8fdcc7863 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/948/RaftMessages.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/948/RaftMessages.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.consensus;\n \n import java.time.Instant;\n@@ -39,1215 +40,1230 @@ import static org.neo4j.causalclustering.core.consensus.RaftMessages.Type.PRUNE_\n public interface RaftMessages\n {\n \n-    interface Handler<T, E extends Exception>\n+  interface Handler<T, E extends Exception>\n+  {\n+    T handle(Vote.Request request) throws E;\n+\n+    T handle(Vote.Response response) throws E;\n+\n+    T handle(PreVote.Request request) throws E;\n+\n+    T handle(PreVote.Response response) throws E;\n+\n+    T handle(AppendEntries.Request request) throws E;\n+\n+    T handle(AppendEntries.Response response) throws E;\n+\n+    T handle(Heartbeat heartbeat) throws E;\n+\n+    T handle(LogCompactionInfo logCompactionInfo) throws E;\n+\n+    T handle(HeartbeatResponse heartbeatResponse) throws E;\n+\n+    T handle(Timeout.Election election) throws E;\n+\n+    T handle(Timeout.Heartbeat heartbeat) throws E;\n+\n+    T handle(NewEntry.Request request) throws E;\n+\n+    T handle(NewEntry.BatchRequest batchRequest) throws E;\n+\n+    T handle(PruneRequest pruneRequest) throws E;\n+  }\n+\n+  // Position is used to identify messages. Changing order will break upgrade paths.\n+  enum Type\n+  {\n+    VOTE_REQUEST,\n+    VOTE_RESPONSE,\n+\n+    APPEND_ENTRIES_REQUEST,\n+    APPEND_ENTRIES_RESPONSE,\n+\n+    HEARTBEAT,\n+    HEARTBEAT_RESPONSE,\n+    LOG_COMPACTION_INFO,\n+\n+    // Timeouts\n+    ELECTION_TIMEOUT,\n+    HEARTBEAT_TIMEOUT,\n+\n+    // TODO: Refactor, these are client-facing messages / api. Perhaps not public and instantiated through an api\n+    // TODO: method instead?\n+    NEW_ENTRY_REQUEST,\n+    NEW_BATCH_REQUEST,\n+\n+    PRUNE_REQUEST,\n+\n+    PRE_VOTE_REQUEST,\n+    PRE_VOTE_RESPONSE,\n+  }\n+\n+  interface RaftMessage extends Message\n+  {\n+    MemberId from();\n+\n+    Type type();\n+\n+    <T, E extends Exception> T dispatch(Handler<T, E> handler) throws E;\n+  }\n+\n+  class Directed\n+  {\n+    MemberId to;\n+    RaftMessage message;\n+\n+    public Directed(MemberId to, RaftMessage message)\n+    {\n+      this.to = to;\n+      this.message = message;\n+    }\n+\n+    public MemberId to()\n     {\n-        T handle( Vote.Request request ) throws E;\n-        T handle( Vote.Response response ) throws E;\n-        T handle( PreVote.Request request ) throws E;\n-        T handle( PreVote.Response response ) throws E;\n-        T handle( AppendEntries.Request request ) throws E;\n-        T handle( AppendEntries.Response response ) throws E;\n-        T handle( Heartbeat heartbeat ) throws E;\n-        T handle( LogCompactionInfo logCompactionInfo ) throws E;\n-        T handle( HeartbeatResponse heartbeatResponse ) throws E;\n-        T handle( Timeout.Election election ) throws E;\n-        T handle( Timeout.Heartbeat heartbeat ) throws E;\n-        T handle( NewEntry.Request request ) throws E;\n-        T handle( NewEntry.BatchRequest batchRequest ) throws E;\n-        T handle( PruneRequest pruneRequest ) throws E;\n+      return to;\n     }\n \n-    // Position is used to identify messages. Changing order will break upgrade paths.\n-    enum Type\n+    public RaftMessage message()\n     {\n-        VOTE_REQUEST,\n-        VOTE_RESPONSE,\n+      return message;\n+    }\n \n-        APPEND_ENTRIES_REQUEST,\n-        APPEND_ENTRIES_RESPONSE,\n+    @Override\n+    public String toString()\n+    {\n+      return format(\"Directed{to=%s, message=%s}\", to, message);\n+    }\n \n-        HEARTBEAT,\n-        HEARTBEAT_RESPONSE,\n-        LOG_COMPACTION_INFO,\n+    @Override\n+    public boolean equals(Object o)\n+    {\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      Directed directed = (Directed) o;\n+      return Objects.equals(to, directed.to) && Objects.equals(message, directed.message);\n+    }\n \n-        // Timeouts\n-        ELECTION_TIMEOUT,\n-        HEARTBEAT_TIMEOUT,\n+    @Override\n+    public int hashCode()\n+    {\n+      return Objects.hash(to, message);\n+    }\n+  }\n \n-        // TODO: Refactor, these are client-facing messages / api. Perhaps not public and instantiated through an api\n-        // TODO: method instead?\n-        NEW_ENTRY_REQUEST,\n-        NEW_BATCH_REQUEST,\n+  interface AnyVote\n+  {\n+    interface Request\n+    {\n+      long term();\n \n-        PRUNE_REQUEST,\n+      long lastLogTerm();\n \n-        PRE_VOTE_REQUEST,\n-        PRE_VOTE_RESPONSE,\n+      long lastLogIndex();\n+\n+      MemberId candidate();\n     }\n \n-    interface RaftMessage extends Message\n+    interface Response\n     {\n-        MemberId from();\n-        Type type();\n-        <T, E extends Exception> T dispatch( Handler<T, E> handler ) throws E;\n+      long term();\n+\n+      boolean voteGranted();\n     }\n+  }\n \n-    class Directed\n+  interface Vote\n+  {\n+    class Request extends BaseRaftMessage implements AnyVote.Request\n     {\n-        MemberId to;\n-        RaftMessage message;\n+      private long term;\n+      private MemberId candidate;\n+      private long lastLogIndex;\n+      private long lastLogTerm;\n+\n+      public Request(MemberId from, long term, MemberId candidate, long lastLogIndex, long lastLogTerm)\n+      {\n+        super(from, Type.VOTE_REQUEST);\n+        this.term = term;\n+        this.candidate = candidate;\n+        this.lastLogIndex = lastLogIndex;\n+        this.lastLogTerm = lastLogTerm;\n+      }\n+\n+      @Override\n+      public long term()\n+      {\n+        return term;\n+      }\n+\n+      @Override\n+      public <T, E extends Exception> T dispatch(Handler<T, E> handler) throws E\n+      {\n+        return handler.handle(this);\n+      }\n+\n+      @Override\n+      public boolean equals(Object o)\n+      {\n+        if (this == o)\n+        {\n+          return true;\n+        }\n+        if (o == null || getClass() != o.getClass())\n+        {\n+          return false;\n+        }\n+        Request request = (Request) o;\n+        return lastLogIndex == request.lastLogIndex &&\n+            lastLogTerm == request.lastLogTerm &&\n+            term == request.term &&\n+            candidate.equals(request.candidate);\n+      }\n+\n+      @Override\n+      public int hashCode()\n+      {\n+        int result = (int) term;\n+        result = 31 * result + candidate.hashCode();\n+        result = 31 * result + (int) (lastLogIndex ^ (lastLogIndex >>> 32));\n+        result = 31 * result + (int) (lastLogTerm ^ (lastLogTerm >>> 32));\n+        return result;\n+      }\n+\n+      @Override\n+      public String toString()\n+      {\n+        return format(\"Vote.Request from %s {term=%d, candidate=%s, lastAppended=%d, lastLogTerm=%d}\",\n+            from, term, candidate, lastLogIndex, lastLogTerm);\n+      }\n+\n+      @Override\n+      public long lastLogTerm()\n+      {\n+        return lastLogTerm;\n+      }\n+\n+      @Override\n+      public long lastLogIndex()\n+      {\n+        return lastLogIndex;\n+      }\n+\n+      @Override\n+      public MemberId candidate()\n+      {\n+        return candidate;\n+      }\n+    }\n \n-        public Directed( MemberId to, RaftMessage message )\n-        {\n-            this.to = to;\n-            this.message = message;\n-        }\n+    class Response extends BaseRaftMessage implements AnyVote.Response\n+    {\n+      private long term;\n+      private boolean voteGranted;\n \n-        public MemberId to()\n-        {\n-            return to;\n-        }\n+      public Response(MemberId from, long term, boolean voteGranted)\n+      {\n+        super(from, Type.VOTE_RESPONSE);\n+        this.term = term;\n+        this.voteGranted = voteGranted;\n+      }\n \n-        public RaftMessage message()\n-        {\n-            return message;\n-        }\n+      @Override\n+      public <T, E extends Exception> T dispatch(Handler<T, E> handler) throws E\n+      {\n+        return handler.handle(this);\n+      }\n \n-        @Override\n-        public String toString()\n+      @Override\n+      public boolean equals(Object o)\n+      {\n+        if (this == o)\n         {\n-            return format( \"Directed{to=%s, message=%s}\", to, message );\n+          return true;\n         }\n-\n-        @Override\n-        public boolean equals( Object o )\n+        if (o == null || getClass() != o.getClass())\n         {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            Directed directed = (Directed) o;\n-            return Objects.equals( to, directed.to ) && Objects.equals( message, directed.message );\n+          return false;\n         }\n \n-        @Override\n-        public int hashCode()\n-        {\n-            return Objects.hash( to, message );\n-        }\n-    }\n+        Response response = (Response) o;\n \n-    interface AnyVote\n-    {\n-        interface Request\n-        {\n-            long term();\n+        return term == response.term && voteGranted == response.voteGranted;\n \n-            long lastLogTerm();\n+      }\n \n-            long lastLogIndex();\n+      @Override\n+      public int hashCode()\n+      {\n+        int result = (int) term;\n+        result = 31 * result + (voteGranted ? 1 : 0);\n+        return result;\n+      }\n \n-            MemberId candidate();\n-        }\n+      @Override\n+      public String toString()\n+      {\n+        return format(\"Vote.Response from %s {term=%d, voteGranted=%s}\", from, term, voteGranted);\n+      }\n \n-        interface Response\n-        {\n-            long term();\n+      @Override\n+      public long term()\n+      {\n+        return term;\n+      }\n \n-            boolean voteGranted();\n-        }\n+      @Override\n+      public boolean voteGranted()\n+      {\n+        return voteGranted;\n+      }\n     }\n+  }\n \n-    interface Vote\n+  interface PreVote\n+  {\n+    class Request extends BaseRaftMessage implements AnyVote.Request\n     {\n-        class Request extends BaseRaftMessage implements AnyVote.Request\n-        {\n-            private long term;\n-            private MemberId candidate;\n-            private long lastLogIndex;\n-            private long lastLogTerm;\n-\n-            public Request( MemberId from, long term, MemberId candidate, long lastLogIndex, long lastLogTerm )\n-            {\n-                super( from, Type.VOTE_REQUEST );\n-                this.term = term;\n-                this.candidate = candidate;\n-                this.lastLogIndex = lastLogIndex;\n-                this.lastLogTerm = lastLogTerm;\n-            }\n-\n-            @Override\n-            public long term()\n-            {\n-                return term;\n-            }\n-\n-            @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n-            {\n-                return handler.handle( this );\n-            }\n-\n-            @Override\n-            public boolean equals( Object o )\n-            {\n-                if ( this == o )\n-                {\n-                    return true;\n-                }\n-                if ( o == null || getClass() != o.getClass() )\n-                {\n-                    return false;\n-                }\n-                Request request = (Request) o;\n-                return lastLogIndex == request.lastLogIndex &&\n-                        lastLogTerm == request.lastLogTerm &&\n-                        term == request.term &&\n-                        candidate.equals( request.candidate );\n-            }\n-\n-            @Override\n-            public int hashCode()\n-            {\n-                int result = (int) term;\n-                result = 31 * result + candidate.hashCode();\n-                result = 31 * result + (int) (lastLogIndex ^ (lastLogIndex >>> 32));\n-                result = 31 * result + (int) (lastLogTerm ^ (lastLogTerm >>> 32));\n-                return result;\n-            }\n-\n-            @Override\n-            public String toString()\n-            {\n-                return format( \"Vote.Request from %s {term=%d, candidate=%s, lastAppended=%d, lastLogTerm=%d}\",\n-                        from, term, candidate, lastLogIndex, lastLogTerm );\n-            }\n-\n-            @Override\n-            public long lastLogTerm()\n-            {\n-                return lastLogTerm;\n-            }\n-\n-            @Override\n-            public long lastLogIndex()\n-            {\n-                return lastLogIndex;\n-            }\n-\n-            @Override\n-            public MemberId candidate()\n-            {\n-                return candidate;\n-            }\n-        }\n-\n-        class Response extends BaseRaftMessage implements AnyVote.Response\n-        {\n-            private long term;\n-            private boolean voteGranted;\n-\n-            public Response( MemberId from, long term, boolean voteGranted )\n-            {\n-                super( from, Type.VOTE_RESPONSE );\n-                this.term = term;\n-                this.voteGranted = voteGranted;\n-            }\n-\n-            @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n-            {\n-                return handler.handle( this );\n-            }\n-\n-            @Override\n-            public boolean equals( Object o )\n-            {\n-                if ( this == o )\n-                {\n-                    return true;\n-                }\n-                if ( o == null || getClass() != o.getClass() )\n-                {\n-                    return false;\n-                }\n-\n-                Response response = (Response) o;\n-\n-                return term == response.term && voteGranted == response.voteGranted;\n-\n-            }\n-\n-            @Override\n-            public int hashCode()\n-            {\n-                int result = (int) term;\n-                result = 31 * result + (voteGranted ? 1 : 0);\n-                return result;\n-            }\n-\n-            @Override\n-            public String toString()\n-            {\n-                return format( \"Vote.Response from %s {term=%d, voteGranted=%s}\", from, term, voteGranted );\n-            }\n-\n-            @Override\n-            public long term()\n-            {\n-                return term;\n-            }\n-\n-            @Override\n-            public boolean voteGranted()\n-            {\n-                return voteGranted;\n-            }\n-        }\n+      private long term;\n+      private MemberId candidate;\n+      private long lastLogIndex;\n+      private long lastLogTerm;\n+\n+      public Request(MemberId from, long term, MemberId candidate, long lastLogIndex, long lastLogTerm)\n+      {\n+        super(from, Type.PRE_VOTE_REQUEST);\n+        this.term = term;\n+        this.candidate = candidate;\n+        this.lastLogIndex = lastLogIndex;\n+        this.lastLogTerm = lastLogTerm;\n+      }\n+\n+      @Override\n+      public long term()\n+      {\n+        return term;\n+      }\n+\n+      @Override\n+      public <T, E extends Exception> T dispatch(Handler<T, E> handler) throws E\n+      {\n+        return handler.handle(this);\n+      }\n+\n+      @Override\n+      public boolean equals(Object o)\n+      {\n+        if (this == o)\n+        {\n+          return true;\n+        }\n+        if (o == null || getClass() != o.getClass())\n+        {\n+          return false;\n+        }\n+        Request request = (Request) o;\n+        return lastLogIndex == request.lastLogIndex &&\n+            lastLogTerm == request.lastLogTerm &&\n+            term == request.term &&\n+            candidate.equals(request.candidate);\n+      }\n+\n+      @Override\n+      public int hashCode()\n+      {\n+        int result = (int) term;\n+        result = 31 * result + candidate.hashCode();\n+        result = 31 * result + (int) (lastLogIndex ^ (lastLogIndex >>> 32));\n+        result = 31 * result + (int) (lastLogTerm ^ (lastLogTerm >>> 32));\n+        return result;\n+      }\n+\n+      @Override\n+      public String toString()\n+      {\n+        return format(\"PreVote.Request from %s {term=%d, candidate=%s, lastAppended=%d, lastLogTerm=%d}\",\n+            from, term, candidate, lastLogIndex, lastLogTerm);\n+      }\n+\n+      @Override\n+      public long lastLogTerm()\n+      {\n+        return lastLogTerm;\n+      }\n+\n+      @Override\n+      public long lastLogIndex()\n+      {\n+        return lastLogIndex;\n+      }\n+\n+      @Override\n+      public MemberId candidate()\n+      {\n+        return candidate;\n+      }\n     }\n \n-    interface PreVote\n+    class Response extends BaseRaftMessage implements AnyVote.Response\n     {\n-        class Request extends BaseRaftMessage implements AnyVote.Request\n-        {\n-            private long term;\n-            private MemberId candidate;\n-            private long lastLogIndex;\n-            private long lastLogTerm;\n-\n-            public Request( MemberId from, long term, MemberId candidate, long lastLogIndex, long lastLogTerm )\n-            {\n-                super( from, Type.PRE_VOTE_REQUEST );\n-                this.term = term;\n-                this.candidate = candidate;\n-                this.lastLogIndex = lastLogIndex;\n-                this.lastLogTerm = lastLogTerm;\n-            }\n-\n-            @Override\n-            public long term()\n-            {\n-                return term;\n-            }\n-\n-            @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n-            {\n-                return handler.handle( this );\n-            }\n-\n-            @Override\n-            public boolean equals( Object o )\n-            {\n-                if ( this == o )\n-                {\n-                    return true;\n-                }\n-                if ( o == null || getClass() != o.getClass() )\n-                {\n-                    return false;\n-                }\n-                Request request = (Request) o;\n-                return lastLogIndex == request.lastLogIndex &&\n-                        lastLogTerm == request.lastLogTerm &&\n-                        term == request.term &&\n-                        candidate.equals( request.candidate );\n-            }\n-\n-            @Override\n-            public int hashCode()\n-            {\n-                int result = (int) term;\n-                result = 31 * result + candidate.hashCode();\n-                result = 31 * result + (int) (lastLogIndex ^ (lastLogIndex >>> 32));\n-                result = 31 * result + (int) (lastLogTerm ^ (lastLogTerm >>> 32));\n-                return result;\n-            }\n-\n-            @Override\n-            public String toString()\n-            {\n-                return format( \"PreVote.Request from %s {term=%d, candidate=%s, lastAppended=%d, lastLogTerm=%d}\",\n-                        from, term, candidate, lastLogIndex, lastLogTerm );\n-            }\n-\n-            @Override\n-            public long lastLogTerm()\n-            {\n-                return lastLogTerm;\n-            }\n-\n-            @Override\n-            public long lastLogIndex()\n-            {\n-                return lastLogIndex;\n-            }\n-\n-            @Override\n-            public MemberId candidate()\n-            {\n-                return candidate;\n-            }\n-        }\n+      private long term;\n+      private boolean voteGranted;\n \n-        class Response extends BaseRaftMessage implements AnyVote.Response\n-        {\n-            private long term;\n-            private boolean voteGranted;\n-\n-            public Response( MemberId from, long term, boolean voteGranted )\n-            {\n-                super( from, Type.PRE_VOTE_RESPONSE );\n-                this.term = term;\n-                this.voteGranted = voteGranted;\n-            }\n-\n-            @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n-            {\n-                return handler.handle( this );\n-            }\n-\n-            @Override\n-            public boolean equals( Object o )\n-            {\n-                if ( this == o )\n-                {\n-                    return true;\n-                }\n-                if ( o == null || getClass() != o.getClass() )\n-                {\n-                    return false;\n-                }\n-\n-                Response response = (Response) o;\n-\n-                return term == response.term && voteGranted == response.voteGranted;\n-\n-            }\n-\n-            @Override\n-            public int hashCode()\n-            {\n-                int result = (int) term;\n-                result = 31 * result + (voteGranted ? 1 : 0);\n-                return result;\n-            }\n-\n-            @Override\n-            public String toString()\n-            {\n-                return format( \"PreVote.Response from %s {term=%d, voteGranted=%s}\", from, term, voteGranted );\n-            }\n-\n-            @Override\n-            public long term()\n-            {\n-                return term;\n-            }\n-\n-            @Override\n-            public boolean voteGranted()\n-            {\n-                return voteGranted;\n-            }\n-        }\n-    }\n+      public Response(MemberId from, long term, boolean voteGranted)\n+      {\n+        super(from, Type.PRE_VOTE_RESPONSE);\n+        this.term = term;\n+        this.voteGranted = voteGranted;\n+      }\n \n-    interface AppendEntries\n-    {\n-        class Request extends BaseRaftMessage\n+      @Override\n+      public <T, E extends Exception> T dispatch(Handler<T, E> handler) throws E\n+      {\n+        return handler.handle(this);\n+      }\n+\n+      @Override\n+      public boolean equals(Object o)\n+      {\n+        if (this == o)\n         {\n-            private long leaderTerm;\n-            private long prevLogIndex;\n-            private long prevLogTerm;\n-            private RaftLogEntry[] entries;\n-            private long leaderCommit;\n-\n-            public Request( MemberId from, long leaderTerm, long prevLogIndex, long prevLogTerm, RaftLogEntry[] entries, long leaderCommit )\n-            {\n-                super( from, Type.APPEND_ENTRIES_REQUEST );\n-                Objects.requireNonNull( entries );\n-                assert !((prevLogIndex == -1 && prevLogTerm != -1) || (prevLogTerm == -1 && prevLogIndex != -1)) :\n-                        format( \"prevLogIndex was %d and prevLogTerm was %d\", prevLogIndex, prevLogTerm );\n-                this.entries = entries;\n-                this.leaderTerm = leaderTerm;\n-                this.prevLogIndex = prevLogIndex;\n-                this.prevLogTerm = prevLogTerm;\n-                this.leaderCommit = leaderCommit;\n-            }\n-\n-            public long leaderTerm()\n-            {\n-                return leaderTerm;\n-            }\n-\n-            public long prevLogIndex()\n-            {\n-                return prevLogIndex;\n-            }\n-\n-            public long prevLogTerm()\n-            {\n-                return prevLogTerm;\n-            }\n-\n-            public RaftLogEntry[] entries()\n-            {\n-                return entries;\n-            }\n-\n-            public long leaderCommit()\n-            {\n-                return leaderCommit;\n-            }\n-\n-            @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n-            {\n-                return handler.handle( this );\n-            }\n-\n-            @Override\n-            public boolean equals( Object o )\n-            {\n-                if ( this == o )\n-                {\n-                    return true;\n-                }\n-                if ( o == null || getClass() != o.getClass() )\n-                {\n-                    return false;\n-                }\n-                Request request = (Request) o;\n-                return Objects.equals( leaderTerm, request.leaderTerm ) &&\n-                        Objects.equals( prevLogIndex, request.prevLogIndex ) &&\n-                        Objects.equals( prevLogTerm, request.prevLogTerm ) &&\n-                        Objects.equals( leaderCommit, request.leaderCommit ) &&\n-                        Arrays.equals( entries, request.entries );\n-            }\n-\n-            @Override\n-            public int hashCode()\n-            {\n-                return Objects.hash( leaderTerm, prevLogIndex, prevLogTerm, Arrays.hashCode( entries ), leaderCommit );\n-            }\n-\n-            @Override\n-            public String toString()\n-            {\n-                return format( \"AppendEntries.Request from %s {leaderTerm=%d, prevLogIndex=%d, \" +\n-                                \"prevLogTerm=%d, entry=%s, leaderCommit=%d}\",\n-                        from, leaderTerm, prevLogIndex, prevLogTerm, Arrays.toString( entries ), leaderCommit );\n-            }\n+          return true;\n         }\n-\n-        class Response extends BaseRaftMessage\n+        if (o == null || getClass() != o.getClass())\n         {\n-            private long term;\n-            private boolean success;\n-            private long matchIndex;\n-            private long appendIndex;\n-\n-            public Response( MemberId from, long term, boolean success, long matchIndex, long appendIndex )\n-            {\n-                super( from, Type.APPEND_ENTRIES_RESPONSE );\n-                this.term = term;\n-                this.success = success;\n-                this.matchIndex = matchIndex;\n-                this.appendIndex = appendIndex;\n-            }\n-\n-            public long term()\n-            {\n-                return term;\n-            }\n-\n-            public boolean success()\n-            {\n-                return success;\n-            }\n-\n-            public long matchIndex()\n-            {\n-                return matchIndex;\n-            }\n-\n-            public long appendIndex()\n-            {\n-                return appendIndex;\n-            }\n-\n-            @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n-            {\n-                return handler.handle( this );\n-            }\n-\n-            @Override\n-            public boolean equals( Object o )\n-            {\n-                if ( this == o )\n-                {\n-                    return true;\n-                }\n-                if ( o == null || getClass() != o.getClass() )\n-                {\n-                    return false;\n-                }\n-                if ( !super.equals( o ) )\n-                {\n-                    return false;\n-                }\n-                Response response = (Response) o;\n-                return term == response.term &&\n-                        success == response.success &&\n-                        matchIndex == response.matchIndex &&\n-                        appendIndex == response.appendIndex;\n-            }\n-\n-            @Override\n-            public int hashCode()\n-            {\n-                return Objects.hash( super.hashCode(), term, success, matchIndex, appendIndex );\n-            }\n-\n-            @Override\n-            public String toString()\n-            {\n-                return format( \"AppendEntries.Response from %s {term=%d, success=%s, matchIndex=%d, appendIndex=%d}\",\n-                        from, term, success, matchIndex, appendIndex );\n-            }\n+          return false;\n         }\n+\n+        Response response = (Response) o;\n+\n+        return term == response.term && voteGranted == response.voteGranted;\n+\n+      }\n+\n+      @Override\n+      public int hashCode()\n+      {\n+        int result = (int) term;\n+        result = 31 * result + (voteGranted ? 1 : 0);\n+        return result;\n+      }\n+\n+      @Override\n+      public String toString()\n+      {\n+        return format(\"PreVote.Response from %s {term=%d, voteGranted=%s}\", from, term, voteGranted);\n+      }\n+\n+      @Override\n+      public long term()\n+      {\n+        return term;\n+      }\n+\n+      @Override\n+      public boolean voteGranted()\n+      {\n+        return voteGranted;\n+      }\n     }\n+  }\n \n-    class Heartbeat extends BaseRaftMessage\n+  interface AppendEntries\n+  {\n+    class Request extends BaseRaftMessage\n     {\n-        private long leaderTerm;\n-        private long commitIndex;\n-        private long commitIndexTerm;\n+      private long leaderTerm;\n+      private long prevLogIndex;\n+      private long prevLogTerm;\n+      private RaftLogEntry[] entries;\n+      private long leaderCommit;\n+\n+      public Request(MemberId from, long leaderTerm, long prevLogIndex, long prevLogTerm, RaftLogEntry[] entries, long leaderCommit)\n+      {\n+        super(from, Type.APPEND_ENTRIES_REQUEST);\n+        Objects.requireNonNull(entries);\n+        assert !((prevLogIndex == -1 && prevLogTerm != -1) || (prevLogTerm == -1 && prevLogIndex != -1)) :\n+            format(\"prevLogIndex was %d and prevLogTerm was %d\", prevLogIndex, prevLogTerm);\n+        this.entries = entries;\n+        this.leaderTerm = leaderTerm;\n+        this.prevLogIndex = prevLogIndex;\n+        this.prevLogTerm = prevLogTerm;\n+        this.leaderCommit = leaderCommit;\n+      }\n+\n+      public long leaderTerm()\n+      {\n+        return leaderTerm;\n+      }\n+\n+      public long prevLogIndex()\n+      {\n+        return prevLogIndex;\n+      }\n+\n+      public long prevLogTerm()\n+      {\n+        return prevLogTerm;\n+      }\n+\n+      public RaftLogEntry[] entries()\n+      {\n+        return entries;\n+      }\n+\n+      public long leaderCommit()\n+      {\n+        return leaderCommit;\n+      }\n+\n+      @Override\n+      public <T, E extends Exception> T dispatch(Handler<T, E> handler) throws E\n+      {\n+        return handler.handle(this);\n+      }\n+\n+      @Override\n+      public boolean equals(Object o)\n+      {\n+        if (this == o)\n+        {\n+          return true;\n+        }\n+        if (o == null || getClass() != o.getClass())\n+        {\n+          return false;\n+        }\n+        Request request = (Request) o;\n+        return Objects.equals(leaderTerm, request.leaderTerm) &&\n+            Objects.equals(prevLogIndex, request.prevLogIndex) &&\n+            Objects.equals(prevLogTerm, request.prevLogTerm) &&\n+            Objects.equals(leaderCommit, request.leaderCommit) &&\n+            Arrays.equals(entries, request.entries);\n+      }\n+\n+      @Override\n+      public int hashCode()\n+      {\n+        return Objects.hash(leaderTerm, prevLogIndex, prevLogTerm, Arrays.hashCode(entries), leaderCommit);\n+      }\n+\n+      @Override\n+      public String toString()\n+      {\n+        return format(\"AppendEntries.Request from %s {leaderTerm=%d, prevLogIndex=%d, \" +\n+                \"prevLogTerm=%d, entry=%s, leaderCommit=%d}\",\n+            from, leaderTerm, prevLogIndex, prevLogTerm, Arrays.toString(entries), leaderCommit);\n+      }\n+    }\n \n-        public Heartbeat( MemberId from, long leaderTerm, long commitIndex, long commitIndexTerm )\n-        {\n-            super( from, Type.HEARTBEAT );\n-            this.leaderTerm = leaderTerm;\n-            this.commitIndex = commitIndex;\n-            this.commitIndexTerm = commitIndexTerm;\n-        }\n+    class Response extends BaseRaftMessage\n+    {\n+      private long term;\n+      private boolean success;\n+      private long matchIndex;\n+      private long appendIndex;\n+\n+      public Response(MemberId from, long term, boolean success, long matchIndex, long appendIndex)\n+      {\n+        super(from, Type.APPEND_ENTRIES_RESPONSE);\n+        this.term = term;\n+        this.success = success;\n+        this.matchIndex = matchIndex;\n+        this.appendIndex = appendIndex;\n+      }\n+\n+      public long term()\n+      {\n+        return term;\n+      }\n+\n+      public boolean success()\n+      {\n+        return success;\n+      }\n+\n+      public long matchIndex()\n+      {\n+        return matchIndex;\n+      }\n+\n+      public long appendIndex()\n+      {\n+        return appendIndex;\n+      }\n+\n+      @Override\n+      public <T, E extends Exception> T dispatch(Handler<T, E> handler) throws E\n+      {\n+        return handler.handle(this);\n+      }\n+\n+      @Override\n+      public boolean equals(Object o)\n+      {\n+        if (this == o)\n+        {\n+          return true;\n+        }\n+        if (o == null || getClass() != o.getClass())\n+        {\n+          return false;\n+        }\n+        if (!super.equals(o))\n+        {\n+          return false;\n+        }\n+        Response response = (Response) o;\n+        return term == response.term &&\n+            success == response.success &&\n+            matchIndex == response.matchIndex &&\n+            appendIndex == response.appendIndex;\n+      }\n+\n+      @Override\n+      public int hashCode()\n+      {\n+        return Objects.hash(super.hashCode(), term, success, matchIndex, appendIndex);\n+      }\n+\n+      @Override\n+      public String toString()\n+      {\n+        return format(\"AppendEntries.Response from %s {term=%d, success=%s, matchIndex=%d, appendIndex=%d}\",\n+            from, term, success, matchIndex, appendIndex);\n+      }\n+    }\n+  }\n \n-        public long leaderTerm()\n-        {\n-            return leaderTerm;\n-        }\n+  class Heartbeat extends BaseRaftMessage\n+  {\n+    private long leaderTerm;\n+    private long commitIndex;\n+    private long commitIndexTerm;\n \n-        public long commitIndex()\n-        {\n-            return commitIndex;\n-        }\n+    public Heartbeat(MemberId from, long leaderTerm, long commitIndex, long commitIndexTerm)\n+    {\n+      super(from, Type.HEARTBEAT);\n+      this.leaderTerm = leaderTerm;\n+      this.commitIndex = commitIndex;\n+      this.commitIndexTerm = commitIndexTerm;\n+    }\n \n-        public long commitIndexTerm()\n-        {\n-            return commitIndexTerm;\n-        }\n+    public long leaderTerm()\n+    {\n+      return leaderTerm;\n+    }\n \n-        @Override\n-        public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n-        {\n-            return handler.handle( this );\n-        }\n+    public long commitIndex()\n+    {\n+      return commitIndex;\n+    }\n \n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            if ( !super.equals( o ) )\n-            {\n-                return false;\n-            }\n-\n-            Heartbeat heartbeat = (Heartbeat) o;\n-\n-            return leaderTerm == heartbeat.leaderTerm &&\n-                   commitIndex == heartbeat.commitIndex &&\n-                   commitIndexTerm == heartbeat.commitIndexTerm;\n-        }\n+    public long commitIndexTerm()\n+    {\n+      return commitIndexTerm;\n+    }\n \n-        @Override\n-        public int hashCode()\n-        {\n-            int result = super.hashCode();\n-            result = 31 * result + (int) (leaderTerm ^ (leaderTerm >>> 32));\n-            result = 31 * result + (int) (commitIndex ^ (commitIndex >>> 32));\n-            result = 31 * result + (int) (commitIndexTerm ^ (commitIndexTerm >>> 32));\n-            return result;\n-        }\n+    @Override\n+    public <T, E extends Exception> T dispatch(Handler<T, E> handler) throws E\n+    {\n+      return handler.handle(this);\n+    }\n \n-        @Override\n-        public String toString()\n-        {\n-            return format( \"Heartbeat from %s {leaderTerm=%d, commitIndex=%d, commitIndexTerm=%d}\", from, leaderTerm,\n-                    commitIndex, commitIndexTerm );\n-        }\n+    @Override\n+    public boolean equals(Object o)\n+    {\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      if (!super.equals(o))\n+      {\n+        return false;\n+      }\n+\n+      Heartbeat heartbeat = (Heartbeat) o;\n+\n+      return leaderTerm == heartbeat.leaderTerm &&\n+          commitIndex == heartbeat.commitIndex &&\n+          commitIndexTerm == heartbeat.commitIndexTerm;\n     }\n \n-    class HeartbeatResponse extends BaseRaftMessage\n+    @Override\n+    public int hashCode()\n     {\n+      int result = super.hashCode();\n+      result = 31 * result + (int) (leaderTerm ^ (leaderTerm >>> 32));\n+      result = 31 * result + (int) (commitIndex ^ (commitIndex >>> 32));\n+      result = 31 * result + (int) (commitIndexTerm ^ (commitIndexTerm >>> 32));\n+      return result;\n+    }\n \n-        public HeartbeatResponse( MemberId from )\n-        {\n-            super( from, HEARTBEAT_RESPONSE );\n-        }\n+    @Override\n+    public String toString()\n+    {\n+      return format(\"Heartbeat from %s {leaderTerm=%d, commitIndex=%d, commitIndexTerm=%d}\", from, leaderTerm,\n+          commitIndex, commitIndexTerm);\n+    }\n+  }\n \n-        @Override\n-        public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n-        {\n-            return handler.handle( this );\n-        }\n+  class HeartbeatResponse extends BaseRaftMessage\n+  {\n \n-        @Override\n-        public String toString()\n-        {\n-            return \"HeartbeatResponse{from=\" + from + \"}\";\n-        }\n+    public HeartbeatResponse(MemberId from)\n+    {\n+      super(from, HEARTBEAT_RESPONSE);\n     }\n \n-    class LogCompactionInfo extends BaseRaftMessage\n+    @Override\n+    public <T, E extends Exception> T dispatch(Handler<T, E> handler) throws E\n     {\n-        private long leaderTerm;\n-        private long prevIndex;\n+      return handler.handle(this);\n+    }\n \n-        public LogCompactionInfo( MemberId from, long leaderTerm, long prevIndex )\n-        {\n-            super( from, Type.LOG_COMPACTION_INFO );\n-            this.leaderTerm = leaderTerm;\n-            this.prevIndex = prevIndex;\n-        }\n+    @Override\n+    public String toString()\n+    {\n+      return \"HeartbeatResponse{from=\" + from + \"}\";\n+    }\n+  }\n \n-        public long leaderTerm()\n-        {\n-            return leaderTerm;\n-        }\n+  class LogCompactionInfo extends BaseRaftMessage\n+  {\n+    private long leaderTerm;\n+    private long prevIndex;\n \n-        public long prevIndex()\n-        {\n-            return prevIndex;\n-        }\n+    public LogCompactionInfo(MemberId from, long leaderTerm, long prevIndex)\n+    {\n+      super(from, Type.LOG_COMPACTION_INFO);\n+      this.leaderTerm = leaderTerm;\n+      this.prevIndex = prevIndex;\n+    }\n \n-        @Override\n-        public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n-        {\n-            return handler.handle( this );\n-        }\n+    public long leaderTerm()\n+    {\n+      return leaderTerm;\n+    }\n \n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            if ( !super.equals( o ) )\n-            {\n-                return false;\n-            }\n-\n-            LogCompactionInfo other = (LogCompactionInfo) o;\n-\n-            return leaderTerm == other.leaderTerm &&\n-                   prevIndex == other.prevIndex;\n-        }\n+    public long prevIndex()\n+    {\n+      return prevIndex;\n+    }\n \n-        @Override\n-        public int hashCode()\n-        {\n-            int result = super.hashCode();\n-            result = 31 * result + (int) (leaderTerm ^ (leaderTerm >>> 32));\n-            result = 31 * result + (int) (prevIndex ^ (prevIndex >>> 32));\n-            return result;\n-        }\n+    @Override\n+    public <T, E extends Exception> T dispatch(Handler<T, E> handler) throws E\n+    {\n+      return handler.handle(this);\n+    }\n \n-        @Override\n-        public String toString()\n-        {\n-            return format( \"Log compaction from %s {leaderTerm=%d, prevIndex=%d}\", from, leaderTerm, prevIndex );\n-        }\n+    @Override\n+    public boolean equals(Object o)\n+    {\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      if (!super.equals(o))\n+      {\n+        return false;\n+      }\n+\n+      LogCompactionInfo other = (LogCompactionInfo) o;\n+\n+      return leaderTerm == other.leaderTerm &&\n+          prevIndex == other.prevIndex;\n     }\n \n-    interface Timeout\n+    @Override\n+    public int hashCode()\n     {\n-        class Election extends BaseRaftMessage\n-        {\n-            public Election( MemberId from )\n-            {\n-                super( from, Type.ELECTION_TIMEOUT );\n-            }\n-\n-            @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n-            {\n-                return handler.handle( this );\n-            }\n-\n-            @Override\n-            public String toString()\n-            {\n-                return \"Timeout.Election{}\";\n-            }\n-        }\n+      int result = super.hashCode();\n+      result = 31 * result + (int) (leaderTerm ^ (leaderTerm >>> 32));\n+      result = 31 * result + (int) (prevIndex ^ (prevIndex >>> 32));\n+      return result;\n+    }\n \n-        class Heartbeat extends BaseRaftMessage\n-        {\n-            public Heartbeat( MemberId from )\n-            {\n-                super( from, Type.HEARTBEAT_TIMEOUT );\n-            }\n-\n-            @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n-            {\n-                return handler.handle( this );\n-            }\n-\n-            @Override\n-            public String toString()\n-            {\n-                return \"Timeout.Heartbeat{}\";\n-            }\n-        }\n+    @Override\n+    public String toString()\n+    {\n+      return format(\"Log compaction from %s {leaderTerm=%d, prevIndex=%d}\", from, leaderTerm, prevIndex);\n     }\n+  }\n \n-    interface NewEntry\n+  interface Timeout\n+  {\n+    class Election extends BaseRaftMessage\n     {\n-        class Request extends BaseRaftMessage\n-        {\n-            private ReplicatedContent content;\n-\n-            public Request( MemberId from, ReplicatedContent content )\n-            {\n-                super( from, Type.NEW_ENTRY_REQUEST );\n-                this.content = content;\n-            }\n-\n-            @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n-            {\n-                return handler.handle( this );\n-            }\n-\n-            @Override\n-            public String toString()\n-            {\n-                return format( \"NewEntry.Request from %s {content=%s}\", from, content );\n-            }\n-\n-            @Override\n-            public boolean equals( Object o )\n-            {\n-                if ( this == o )\n-                {\n-                    return true;\n-                }\n-                if ( o == null || getClass() != o.getClass() )\n-                {\n-                    return false;\n-                }\n-\n-                Request request = (Request) o;\n-\n-                return !(content != null ? !content.equals( request.content ) : request.content != null);\n-            }\n-\n-            @Override\n-            public int hashCode()\n-            {\n-                return content != null ? content.hashCode() : 0;\n-            }\n-\n-            public ReplicatedContent content()\n-            {\n-                return content;\n-            }\n-        }\n+      public Election(MemberId from)\n+      {\n+        super(from, Type.ELECTION_TIMEOUT);\n+      }\n+\n+      @Override\n+      public <T, E extends Exception> T dispatch(Handler<T, E> handler) throws E\n+      {\n+        return handler.handle(this);\n+      }\n+\n+      @Override\n+      public String toString()\n+      {\n+        return \"Timeout.Election{}\";\n+      }\n+    }\n \n-        class BatchRequest extends BaseRaftMessage\n-        {\n-            private List<ReplicatedContent> list;\n-\n-            public BatchRequest( int batchSize )\n-            {\n-                super( null, Type.NEW_BATCH_REQUEST );\n-                list = new ArrayList<>( batchSize );\n-            }\n-\n-            public void add( ReplicatedContent content )\n-            {\n-                list.add( content );\n-            }\n-\n-            @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n-            {\n-                return handler.handle( this );\n-            }\n-\n-            @Override\n-            public boolean equals( Object o )\n-            {\n-                if ( this == o )\n-                {\n-                    return true;\n-                }\n-                if ( o == null || getClass() != o.getClass() )\n-                {\n-                    return false;\n-                }\n-                if ( !super.equals( o ) )\n-                {\n-                    return false;\n-                }\n-                BatchRequest batchRequest = (BatchRequest) o;\n-                return Objects.equals( list, batchRequest.list );\n-            }\n-\n-            @Override\n-            public int hashCode()\n-            {\n-                return Objects.hash( super.hashCode(), list );\n-            }\n-\n-            @Override\n-            public String toString()\n-            {\n-                return \"BatchRequest{\" +\n-                       \"list=\" + list +\n-                       '}';\n-            }\n-\n-            public List<ReplicatedContent> contents()\n-            {\n-                return Collections.unmodifiableList( list );\n-            }\n-        }\n+    class Heartbeat extends BaseRaftMessage\n+    {\n+      public Heartbeat(MemberId from)\n+      {\n+        super(from, Type.HEARTBEAT_TIMEOUT);\n+      }\n+\n+      @Override\n+      public <T, E extends Exception> T dispatch(Handler<T, E> handler) throws E\n+      {\n+        return handler.handle(this);\n+      }\n+\n+      @Override\n+      public String toString()\n+      {\n+        return \"Timeout.Heartbeat{}\";\n+      }\n     }\n+  }\n \n-    interface EnrichedRaftMessage<RM extends RaftMessage> extends RaftMessage\n+  interface NewEntry\n+  {\n+    class Request extends BaseRaftMessage\n     {\n-        RM message();\n+      private ReplicatedContent content;\n \n-        @Override\n-        default MemberId from()\n-        {\n-            return message().from();\n-        }\n+      public Request(MemberId from, ReplicatedContent content)\n+      {\n+        super(from, Type.NEW_ENTRY_REQUEST);\n+        this.content = content;\n+      }\n+\n+      @Override\n+      public <T, E extends Exception> T dispatch(Handler<T, E> handler) throws E\n+      {\n+        return handler.handle(this);\n+      }\n+\n+      @Override\n+      public String toString()\n+      {\n+        return format(\"NewEntry.Request from %s {content=%s}\", from, content);\n+      }\n \n-        @Override\n-        default Type type()\n+      @Override\n+      public boolean equals(Object o)\n+      {\n+        if (this == o)\n         {\n-            return message().type();\n+          return true;\n         }\n-\n-        @Override\n-        default <T, E extends Exception> T dispatch( Handler<T, E> handler ) throws E\n+        if (o == null || getClass() != o.getClass())\n         {\n-            return message().dispatch( handler );\n+          return false;\n         }\n+\n+        Request request = (Request) o;\n+\n+        return !(content != null ? !content.equals(request.content) : request.content != null);\n+      }\n+\n+      @Override\n+      public int hashCode()\n+      {\n+        return content != null ? content.hashCode() : 0;\n+      }\n+\n+      public ReplicatedContent content()\n+      {\n+        return content;\n+      }\n     }\n \n-    interface ClusterIdAwareMessage<RM extends RaftMessage> extends EnrichedRaftMessage<RM>\n+    class BatchRequest extends BaseRaftMessage\n     {\n-        ClusterId clusterId();\n+      private List<ReplicatedContent> list;\n+\n+      public BatchRequest(int batchSize)\n+      {\n+        super(null, Type.NEW_BATCH_REQUEST);\n+        list = new ArrayList<>(batchSize);\n+      }\n+\n+      public void add(ReplicatedContent content)\n+      {\n+        list.add(content);\n+      }\n+\n+      @Override\n+      public <T, E extends Exception> T dispatch(Handler<T, E> handler) throws E\n+      {\n+        return handler.handle(this);\n+      }\n+\n+      @Override\n+      public boolean equals(Object o)\n+      {\n+        if (this == o)\n+        {\n+          return true;\n+        }\n+        if (o == null || getClass() != o.getClass())\n+        {\n+          return false;\n+        }\n+        if (!super.equals(o))\n+        {\n+          return false;\n+        }\n+        BatchRequest batchRequest = (BatchRequest) o;\n+        return Objects.equals(list, batchRequest.list);\n+      }\n+\n+      @Override\n+      public int hashCode()\n+      {\n+        return Objects.hash(super.hashCode(), list);\n+      }\n+\n+      @Override\n+      public String toString()\n+      {\n+        return \"BatchRequest{\" +\n+            \"list=\" + list +\n+            '}';\n+      }\n+\n+      public List<ReplicatedContent> contents()\n+      {\n+        return Collections.unmodifiableList(list);\n+      }\n+    }\n+  }\n \n-        static <RM extends RaftMessage> ClusterIdAwareMessage<RM> of( ClusterId clusterId, RM message )\n-        {\n-            return new ClusterIdAwareMessageImpl<>( clusterId, message );\n-        }\n+  interface EnrichedRaftMessage<RM extends RaftMessage> extends RaftMessage\n+  {\n+    RM message();\n+\n+    @Override\n+    default MemberId from()\n+    {\n+      return message().from();\n     }\n \n-    interface ReceivedInstantAwareMessage<RM extends RaftMessage> extends EnrichedRaftMessage<RM>\n+    @Override\n+    default Type type()\n     {\n-        Instant receivedAt();\n+      return message().type();\n+    }\n \n-        static <RM extends RaftMessage> ReceivedInstantAwareMessage<RM> of( Instant receivedAt, RM message )\n-        {\n-            return new ReceivedInstantAwareMessageImpl<>( receivedAt, message );\n-        }\n+    @Override\n+    default <T, E extends Exception> T dispatch(Handler<T, E> handler) throws E\n+    {\n+      return message().dispatch(handler);\n     }\n+  }\n+\n+  interface ClusterIdAwareMessage<RM extends RaftMessage> extends EnrichedRaftMessage<RM>\n+  {\n+    ClusterId clusterId();\n \n-    interface ReceivedInstantClusterIdAwareMessage<RM extends RaftMessage> extends ReceivedInstantAwareMessage<RM>, ClusterIdAwareMessage<RM>\n+    static <RM extends RaftMessage> ClusterIdAwareMessage<RM> of(ClusterId clusterId, RM message)\n     {\n-        static <RM extends RaftMessage> ReceivedInstantClusterIdAwareMessage<RM> of( Instant receivedAt, ClusterId clusterId, RM message )\n-        {\n-            return new ReceivedInstantClusterIdAwareMessageImpl<>( receivedAt, clusterId, message );\n-        }\n+      return new ClusterIdAwareMessageImpl<>(clusterId, message);\n     }\n+  }\n+\n+  interface ReceivedInstantAwareMessage<RM extends RaftMessage> extends EnrichedRaftMessage<RM>\n+  {\n+    Instant receivedAt();\n \n-    class ClusterIdAwareMessageImpl<RM extends RaftMessage> implements ClusterIdAwareMessage<RM>\n+    static <RM extends RaftMessage> ReceivedInstantAwareMessage<RM> of(Instant receivedAt, RM message)\n     {\n-        private final ClusterId clusterId;\n-        private final RM message;\n+      return new ReceivedInstantAwareMessageImpl<>(receivedAt, message);\n+    }\n+  }\n \n-        private ClusterIdAwareMessageImpl( ClusterId clusterId, RM message )\n-        {\n-            Objects.requireNonNull( message );\n-            this.clusterId = clusterId;\n-            this.message = message;\n-        }\n+  interface ReceivedInstantClusterIdAwareMessage<RM extends RaftMessage> extends ReceivedInstantAwareMessage<RM>, ClusterIdAwareMessage<RM>\n+  {\n+    static <RM extends RaftMessage> ReceivedInstantClusterIdAwareMessage<RM> of(Instant receivedAt, ClusterId clusterId, RM message)\n+    {\n+      return new ReceivedInstantClusterIdAwareMessageImpl<>(receivedAt, clusterId, message);\n+    }\n+  }\n \n-        public ClusterId clusterId()\n-        {\n-            return clusterId;\n-        }\n+  class ClusterIdAwareMessageImpl<RM extends RaftMessage> implements ClusterIdAwareMessage<RM>\n+  {\n+    private final ClusterId clusterId;\n+    private final RM message;\n \n-        @Override\n-        public RM message()\n-        {\n-            return message;\n-        }\n+    private ClusterIdAwareMessageImpl(ClusterId clusterId, RM message)\n+    {\n+      Objects.requireNonNull(message);\n+      this.clusterId = clusterId;\n+      this.message = message;\n+    }\n \n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            ClusterIdAwareMessageImpl<?> that = (ClusterIdAwareMessageImpl<?>) o;\n-            return Objects.equals( clusterId, that.clusterId ) && Objects.equals( message(), that.message() );\n-        }\n+    public ClusterId clusterId()\n+    {\n+      return clusterId;\n+    }\n \n-        @Override\n-        public int hashCode()\n-        {\n-            return Objects.hash( clusterId, message() );\n-        }\n+    @Override\n+    public RM message()\n+    {\n+      return message;\n+    }\n \n-        @Override\n-        public String toString()\n-        {\n-            return format( \"{clusterId: %s, message: %s}\", clusterId, message() );\n-        }\n+    @Override\n+    public boolean equals(Object o)\n+    {\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      ClusterIdAwareMessageImpl<?> that = (ClusterIdAwareMessageImpl<?>) o;\n+      return Objects.equals(clusterId, that.clusterId) && Objects.equals(message(), that.message());\n     }\n \n-    class ReceivedInstantAwareMessageImpl<RM extends RaftMessage> implements ReceivedInstantAwareMessage<RM>\n+    @Override\n+    public int hashCode()\n     {\n-        private final Instant receivedAt;\n-        private final RM message;\n+      return Objects.hash(clusterId, message());\n+    }\n \n-        private ReceivedInstantAwareMessageImpl( Instant receivedAt, RM message )\n-        {\n-            Objects.requireNonNull( message );\n-            this.receivedAt = receivedAt;\n-            this.message = message;\n-        }\n+    @Override\n+    public String toString()\n+    {\n+      return format(\"{clusterId: %s, message: %s}\", clusterId, message());\n+    }\n+  }\n \n-        @Override\n-        public Instant receivedAt()\n-        {\n-            return receivedAt;\n-        }\n+  class ReceivedInstantAwareMessageImpl<RM extends RaftMessage> implements ReceivedInstantAwareMessage<RM>\n+  {\n+    private final Instant receivedAt;\n+    private final RM message;\n \n-        @Override\n-        public RM message()\n-        {\n-            return message;\n-        }\n+    private ReceivedInstantAwareMessageImpl(Instant receivedAt, RM message)\n+    {\n+      Objects.requireNonNull(message);\n+      this.receivedAt = receivedAt;\n+      this.message = message;\n+    }\n \n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            ReceivedInstantAwareMessageImpl<?> that = (ReceivedInstantAwareMessageImpl<?>) o;\n-            return Objects.equals( receivedAt, that.receivedAt ) && Objects.equals( message(), that.message() );\n-        }\n+    @Override\n+    public Instant receivedAt()\n+    {\n+      return receivedAt;\n+    }\n \n-        @Override\n-        public int hashCode()\n-        {\n-            return Objects.hash( receivedAt, message() );\n-        }\n+    @Override\n+    public RM message()\n+    {\n+      return message;\n+    }\n \n-        @Override\n-        public String toString()\n-        {\n-            return format( \"{receivedAt: %s, message: %s}\", receivedAt, message() );\n-        }\n+    @Override\n+    public boolean equals(Object o)\n+    {\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      ReceivedInstantAwareMessageImpl<?> that = (ReceivedInstantAwareMessageImpl<?>) o;\n+      return Objects.equals(receivedAt, that.receivedAt) && Objects.equals(message(), that.message());\n     }\n \n-    class ReceivedInstantClusterIdAwareMessageImpl<RM extends RaftMessage> implements ReceivedInstantClusterIdAwareMessage<RM>\n+    @Override\n+    public int hashCode()\n     {\n-        private final Instant receivedAt;\n-        private final ClusterId clusterId;\n-        private final RM message;\n+      return Objects.hash(receivedAt, message());\n+    }\n \n-        private ReceivedInstantClusterIdAwareMessageImpl( Instant receivedAt, ClusterId clusterId, RM message )\n-        {\n-            Objects.requireNonNull( message );\n-            this.clusterId = clusterId;\n-            this.receivedAt = receivedAt;\n-            this.message = message;\n-        }\n+    @Override\n+    public String toString()\n+    {\n+      return format(\"{receivedAt: %s, message: %s}\", receivedAt, message());\n+    }\n+  }\n \n-        @Override\n-        public Instant receivedAt()\n-        {\n-            return receivedAt;\n-        }\n+  class ReceivedInstantClusterIdAwareMessageImpl<RM extends RaftMessage> implements ReceivedInstantClusterIdAwareMessage<RM>\n+  {\n+    private final Instant receivedAt;\n+    private final ClusterId clusterId;\n+    private final RM message;\n \n-        @Override\n-        public ClusterId clusterId()\n-        {\n-            return clusterId;\n-        }\n+    private ReceivedInstantClusterIdAwareMessageImpl(Instant receivedAt, ClusterId clusterId, RM message)\n+    {\n+      Objects.requireNonNull(message);\n+      this.clusterId = clusterId;\n+      this.receivedAt = receivedAt;\n+      this.message = message;\n+    }\n \n-        @Override\n-        public RM message()\n-        {\n-            return message;\n-        }\n+    @Override\n+    public Instant receivedAt()\n+    {\n+      return receivedAt;\n+    }\n \n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            ReceivedInstantClusterIdAwareMessageImpl<?> that = (ReceivedInstantClusterIdAwareMessageImpl<?>) o;\n-            return Objects.equals( receivedAt, that.receivedAt ) && Objects.equals( clusterId, that.clusterId ) && Objects.equals( message(), that.message() );\n-        }\n+    @Override\n+    public ClusterId clusterId()\n+    {\n+      return clusterId;\n+    }\n \n-        @Override\n-        public int hashCode()\n-        {\n-            return Objects.hash( receivedAt, clusterId, message() );\n-        }\n+    @Override\n+    public RM message()\n+    {\n+      return message;\n+    }\n \n-        @Override\n-        public String toString()\n-        {\n-            return format( \"{clusterId: %s, receivedAt: %s, message: %s}\", clusterId, receivedAt, message() );\n-        }\n+    @Override\n+    public boolean equals(Object o)\n+    {\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      ReceivedInstantClusterIdAwareMessageImpl<?> that = (ReceivedInstantClusterIdAwareMessageImpl<?>) o;\n+      return Objects.equals(receivedAt, that.receivedAt) && Objects.equals(clusterId, that.clusterId) && Objects.equals(message(), that.message());\n     }\n \n-    class PruneRequest extends BaseRaftMessage\n+    @Override\n+    public int hashCode()\n     {\n-        private final long pruneIndex;\n+      return Objects.hash(receivedAt, clusterId, message());\n+    }\n \n-        public PruneRequest( long pruneIndex )\n-        {\n-            super( null, PRUNE_REQUEST );\n-            this.pruneIndex = pruneIndex;\n-        }\n+    @Override\n+    public String toString()\n+    {\n+      return format(\"{clusterId: %s, receivedAt: %s, message: %s}\", clusterId, receivedAt, message());\n+    }\n+  }\n \n-        public long pruneIndex()\n-        {\n-            return pruneIndex;\n-        }\n+  class PruneRequest extends BaseRaftMessage\n+  {\n+    private final long pruneIndex;\n \n-        @Override\n-        public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n-        {\n-            return handler.handle( this );\n-        }\n+    public PruneRequest(long pruneIndex)\n+    {\n+      super(null, PRUNE_REQUEST);\n+      this.pruneIndex = pruneIndex;\n+    }\n \n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            if ( !super.equals( o ) )\n-            {\n-                return false;\n-            }\n-            PruneRequest that = (PruneRequest) o;\n-            return pruneIndex == that.pruneIndex;\n-        }\n+    public long pruneIndex()\n+    {\n+      return pruneIndex;\n+    }\n \n-        @Override\n-        public int hashCode()\n-        {\n-            return Objects.hash( super.hashCode(), pruneIndex );\n-        }\n+    @Override\n+    public <T, E extends Exception> T dispatch(Handler<T, E> handler) throws E\n+    {\n+      return handler.handle(this);\n     }\n \n-    abstract class BaseRaftMessage implements RaftMessage\n+    @Override\n+    public boolean equals(Object o)\n     {\n-        protected final MemberId from;\n-        private final Type type;\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      if (!super.equals(o))\n+      {\n+        return false;\n+      }\n+      PruneRequest that = (PruneRequest) o;\n+      return pruneIndex == that.pruneIndex;\n+    }\n \n-        BaseRaftMessage( MemberId from, Type type )\n-        {\n-            this.from = from;\n-            this.type = type;\n-        }\n+    @Override\n+    public int hashCode()\n+    {\n+      return Objects.hash(super.hashCode(), pruneIndex);\n+    }\n+  }\n \n-        @Override\n-        public MemberId from()\n-        {\n-            return from;\n-        }\n+  abstract class BaseRaftMessage implements RaftMessage\n+  {\n+    protected final MemberId from;\n+    private final Type type;\n \n-        @Override\n-        public Type type()\n-        {\n-            return type;\n-        }\n+    BaseRaftMessage(MemberId from, Type type)\n+    {\n+      this.from = from;\n+      this.type = type;\n+    }\n \n-        @Override\n-        public boolean equals( Object o )\n-        {\n-            if ( this == o )\n-            {\n-                return true;\n-            }\n-            if ( o == null || getClass() != o.getClass() )\n-            {\n-                return false;\n-            }\n-            BaseRaftMessage that = (BaseRaftMessage) o;\n-            return Objects.equals( from, that.from ) && type == that.type;\n-        }\n+    @Override\n+    public MemberId from()\n+    {\n+      return from;\n+    }\n \n-        @Override\n-        public int hashCode()\n-        {\n-            return Objects.hash( from, type );\n-        }\n+    @Override\n+    public Type type()\n+    {\n+      return type;\n+    }\n+\n+    @Override\n+    public boolean equals(Object o)\n+    {\n+      if (this == o)\n+      {\n+        return true;\n+      }\n+      if (o == null || getClass() != o.getClass())\n+      {\n+        return false;\n+      }\n+      BaseRaftMessage that = (BaseRaftMessage) o;\n+      return Objects.equals(from, that.from) && type == that.type;\n+    }\n+\n+    @Override\n+    public int hashCode()\n+    {\n+      return Objects.hash(from, type);\n     }\n+  }\n }\n",
            "diff_size": 1690
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "204",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "426",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "465",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 199).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "518",
                    "column": "73",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "533",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 233).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "682",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "683",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "684",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "771",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                },
                {
                    "line": "772",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.TypecastParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/948/RaftMessages.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/948/RaftMessages.java\nindex 71c928fb0c4..7813562c70c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/948/RaftMessages.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/948/RaftMessages.java\n@@ -38,7 +38,6 @@ import static org.neo4j.causalclustering.core.consensus.RaftMessages.Type.PRUNE_\n \n public interface RaftMessages\n {\n-\n     interface Handler<T, E extends Exception>\n     {\n         T handle( Vote.Request request ) throws E;\n@@ -60,36 +59,21 @@ public interface RaftMessages\n     // Position is used to identify messages. Changing order will break upgrade paths.\n     enum Type\n     {\n-        VOTE_REQUEST,\n-        VOTE_RESPONSE,\n-\n-        APPEND_ENTRIES_REQUEST,\n-        APPEND_ENTRIES_RESPONSE,\n-\n-        HEARTBEAT,\n-        HEARTBEAT_RESPONSE,\n-        LOG_COMPACTION_INFO,\n+        VOTE_REQUEST, VOTE_RESPONSE, APPEND_ENTRIES_REQUEST, APPEND_ENTRIES_RESPONSE, HEARTBEAT, HEARTBEAT_RESPONSE, LOG_COMPACTION_INFO,\n \n         // Timeouts\n-        ELECTION_TIMEOUT,\n-        HEARTBEAT_TIMEOUT,\n+        ELECTION_TIMEOUT, HEARTBEAT_TIMEOUT,\n \n         // TODO: Refactor, these are client-facing messages / api. Perhaps not public and instantiated through an api\n         // TODO: method instead?\n-        NEW_ENTRY_REQUEST,\n-        NEW_BATCH_REQUEST,\n-\n-        PRUNE_REQUEST,\n-\n-        PRE_VOTE_REQUEST,\n-        PRE_VOTE_RESPONSE,\n+        NEW_ENTRY_REQUEST, NEW_BATCH_REQUEST, PRUNE_REQUEST, PRE_VOTE_REQUEST, PRE_VOTE_RESPONSE,\n     }\n \n     interface RaftMessage extends Message\n     {\n         MemberId from();\n         Type type();\n-        <T, E extends Exception> T dispatch( Handler<T, E> handler ) throws E;\n+        <T, E extends Exception> T dispatch( Handler<T,E> handler ) throws E;\n     }\n \n     class Directed\n@@ -126,11 +110,13 @@ public interface RaftMessages\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n-            Directed directed = (Directed) o;\n+\n+Directed directed = (Directed) o;\n             return Objects.equals( to, directed.to ) && Objects.equals( message, directed.message );\n         }\n \n@@ -187,7 +173,7 @@ public interface RaftMessages\n             }\n \n             @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n+            public <T, E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n             {\n                 return handler.handle( this );\n             }\n@@ -199,11 +185,13 @@ public interface RaftMessages\n                 {\n                     return true;\n                 }\n-                if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n                 {\n                     return false;\n                 }\n-                Request request = (Request) o;\n+\n+Request request = (Request) o;\n                 return lastLogIndex == request.lastLogIndex &&\n                         lastLogTerm == request.lastLogTerm &&\n                         term == request.term &&\n@@ -213,10 +201,10 @@ public interface RaftMessages\n             @Override\n             public int hashCode()\n             {\n-                int result = (int) term;\n+                int result = ( int) term;\n                 result = 31 * result + candidate.hashCode();\n-                result = 31 * result + (int) (lastLogIndex ^ (lastLogIndex >>> 32));\n-                result = 31 * result + (int) (lastLogTerm ^ (lastLogTerm >>> 32));\n+                result = 31 * result + ( int) ( lastLogIndex ^ ( lastLogIndex >>> 32 ));\n+                result = 31 * result + ( int) ( lastLogTerm ^ ( lastLogTerm >>> 32 ));\n                 return result;\n             }\n \n@@ -259,7 +247,7 @@ public interface RaftMessages\n             }\n \n             @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n+            public <T, E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n             {\n                 return handler.handle( this );\n             }\n@@ -271,7 +259,8 @@ public interface RaftMessages\n                 {\n                     return true;\n                 }\n-                if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n                 {\n                     return false;\n                 }\n@@ -279,14 +268,13 @@ public interface RaftMessages\n                 Response response = (Response) o;\n \n                 return term == response.term && voteGranted == response.voteGranted;\n-\n-            }\n+    }\n \n             @Override\n             public int hashCode()\n             {\n-                int result = (int) term;\n-                result = 31 * result + (voteGranted ? 1 : 0);\n+                int result = ( int) term;\n+                result = 31 * result + ( voteGranted ? 1 : 0 );\n                 return result;\n             }\n \n@@ -335,7 +323,7 @@ public interface RaftMessages\n             }\n \n             @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n+            public <T, E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n             {\n                 return handler.handle( this );\n             }\n@@ -347,11 +335,13 @@ public interface RaftMessages\n                 {\n                     return true;\n                 }\n-                if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n                 {\n                     return false;\n                 }\n-                Request request = (Request) o;\n+\n+Request request = (Request) o;\n                 return lastLogIndex == request.lastLogIndex &&\n                         lastLogTerm == request.lastLogTerm &&\n                         term == request.term &&\n@@ -361,10 +351,10 @@ public interface RaftMessages\n             @Override\n             public int hashCode()\n             {\n-                int result = (int) term;\n+                int result = ( int) term;\n                 result = 31 * result + candidate.hashCode();\n-                result = 31 * result + (int) (lastLogIndex ^ (lastLogIndex >>> 32));\n-                result = 31 * result + (int) (lastLogTerm ^ (lastLogTerm >>> 32));\n+                result = 31 * result + ( int) ( lastLogIndex ^ ( lastLogIndex >>> 32 ));\n+                result = 31 * result + ( int) ( lastLogTerm ^ ( lastLogTerm >>> 32 ));\n                 return result;\n             }\n \n@@ -407,7 +397,7 @@ public interface RaftMessages\n             }\n \n             @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n+            public <T, E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n             {\n                 return handler.handle( this );\n             }\n@@ -419,7 +409,8 @@ public interface RaftMessages\n                 {\n                     return true;\n                 }\n-                if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n                 {\n                     return false;\n                 }\n@@ -427,14 +418,13 @@ public interface RaftMessages\n                 Response response = (Response) o;\n \n                 return term == response.term && voteGranted == response.voteGranted;\n-\n-            }\n+    }\n \n             @Override\n             public int hashCode()\n             {\n-                int result = (int) term;\n-                result = 31 * result + (voteGranted ? 1 : 0);\n+                int result = ( int) term;\n+                result = 31 * result + ( voteGranted ? 1 : 0 );\n                 return result;\n             }\n \n@@ -472,9 +462,8 @@ public interface RaftMessages\n             {\n                 super( from, Type.APPEND_ENTRIES_REQUEST );\n                 Objects.requireNonNull( entries );\n-                assert !((prevLogIndex == -1 && prevLogTerm != -1) || (prevLogTerm == -1 && prevLogIndex != -1)) :\n-                        format( \"prevLogIndex was %d and prevLogTerm was %d\", prevLogIndex, prevLogTerm );\n-                this.entries = entries;\n+                assert !((prevLogIndex == -1 && prevLogTerm != -1) || ( prevLogTerm == -1 && prevLogIndex != -1) ) : format( \"prevLogIndex was %d and prevLogTerm was %d\", prevLogIndex, prevLogTerm );\n+this.entries = entries;\n                 this.leaderTerm = leaderTerm;\n                 this.prevLogIndex = prevLogIndex;\n                 this.prevLogTerm = prevLogTerm;\n@@ -507,7 +496,7 @@ public interface RaftMessages\n             }\n \n             @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n+            public <T, E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n             {\n                 return handler.handle( this );\n             }\n@@ -519,13 +508,14 @@ public interface RaftMessages\n                 {\n                     return true;\n                 }\n-                if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n                 {\n                     return false;\n                 }\n-                Request request = (Request) o;\n-                return Objects.equals( leaderTerm, request.leaderTerm ) &&\n-                        Objects.equals( prevLogIndex, request.prevLogIndex ) &&\n+\n+Request request = (Request) o;\n+                return Objects.equals( leaderTerm, request.leaderTerm ) &&Objects.equals( prevLogIndex, request.prevLogIndex ) &&\n                         Objects.equals( prevLogTerm, request.prevLogTerm ) &&\n                         Objects.equals( leaderCommit, request.leaderCommit ) &&\n                         Arrays.equals( entries, request.entries );\n@@ -540,10 +530,8 @@ public interface RaftMessages\n             @Override\n             public String toString()\n             {\n-                return format( \"AppendEntries.Request from %s {leaderTerm=%d, prevLogIndex=%d, \" +\n-                                \"prevLogTerm=%d, entry=%s, leaderCommit=%d}\",\n-                        from, leaderTerm, prevLogIndex, prevLogTerm, Arrays.toString( entries ), leaderCommit );\n-            }\n+                return format( \"AppendEntries.Request from %s {leaderTerm=%d, prevLogIndex=%d, \" + \"prevLogTerm=%d, entry=%s, leaderCommit=%d}\", from, leaderTerm, prevLogIndex, prevLogTerm, Arrays.toString( entries ), leaderCommit );\n+    }\n         }\n \n         class Response extends BaseRaftMessage\n@@ -583,7 +571,7 @@ public interface RaftMessages\n             }\n \n             @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n+            public <T, E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n             {\n                 return handler.handle( this );\n             }\n@@ -595,15 +583,18 @@ public interface RaftMessages\n                 {\n                     return true;\n                 }\n-                if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n                 {\n                     return false;\n                 }\n-                if ( !super.equals( o ) )\n+\n+if ( !super.equals( o ) )\n                 {\n                     return false;\n                 }\n-                Response response = (Response) o;\n+\n+Response response = (Response) o;\n                 return term == response.term &&\n                         success == response.success &&\n                         matchIndex == response.matchIndex &&\n@@ -621,7 +612,7 @@ public interface RaftMessages\n             {\n                 return format( \"AppendEntries.Response from %s {term=%d, success=%s, matchIndex=%d, appendIndex=%d}\",\n                         from, term, success, matchIndex, appendIndex );\n-            }\n+    }\n         }\n     }\n \n@@ -655,7 +646,7 @@ public interface RaftMessages\n         }\n \n         @Override\n-        public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n+        public <T, E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n         {\n             return handler.handle( this );\n         }\n@@ -667,29 +658,30 @@ public interface RaftMessages\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n-            if ( !super.equals( o ) )\n+\n+if ( !super.equals( o ) )\n             {\n                 return false;\n             }\n \n             Heartbeat heartbeat = (Heartbeat) o;\n \n-            return leaderTerm == heartbeat.leaderTerm &&\n-                   commitIndex == heartbeat.commitIndex &&\n+            return leaderTerm == heartbeat.leaderTerm && commitIndex == heartbeat.commitIndex &&\n                    commitIndexTerm == heartbeat.commitIndexTerm;\n-        }\n+    }\n \n         @Override\n         public int hashCode()\n         {\n             int result = super.hashCode();\n-            result = 31 * result + (int) (leaderTerm ^ (leaderTerm >>> 32));\n-            result = 31 * result + (int) (commitIndex ^ (commitIndex >>> 32));\n-            result = 31 * result + (int) (commitIndexTerm ^ (commitIndexTerm >>> 32));\n+            result = 31 * result + ( int) ( leaderTerm ^ ( leaderTerm >>> 32 ));\n+            result = 31 * result + ( int) ( commitIndex ^ ( commitIndex >>> 32 ));\n+            result = 31 * result + ( int) ( commitIndexTerm ^ ( commitIndexTerm >>> 32 ));\n             return result;\n         }\n \n@@ -698,19 +690,18 @@ public interface RaftMessages\n         {\n             return format( \"Heartbeat from %s {leaderTerm=%d, commitIndex=%d, commitIndexTerm=%d}\", from, leaderTerm,\n                     commitIndex, commitIndexTerm );\n-        }\n+    }\n     }\n \n     class HeartbeatResponse extends BaseRaftMessage\n     {\n-\n-        public HeartbeatResponse( MemberId from )\n+    public HeartbeatResponse( MemberId from )\n         {\n             super( from, HEARTBEAT_RESPONSE );\n         }\n \n         @Override\n-        public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n+        public <T, E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n         {\n             return handler.handle( this );\n         }\n@@ -745,7 +736,7 @@ public interface RaftMessages\n         }\n \n         @Override\n-        public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n+        public <T, E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n         {\n             return handler.handle( this );\n         }\n@@ -757,27 +748,28 @@ public interface RaftMessages\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n-            if ( !super.equals( o ) )\n+\n+if ( !super.equals( o ) )\n             {\n                 return false;\n             }\n \n             LogCompactionInfo other = (LogCompactionInfo) o;\n \n-            return leaderTerm == other.leaderTerm &&\n-                   prevIndex == other.prevIndex;\n-        }\n+            return leaderTerm == other.leaderTerm && prevIndex == other.prevIndex;\n+    }\n \n         @Override\n         public int hashCode()\n         {\n             int result = super.hashCode();\n-            result = 31 * result + (int) (leaderTerm ^ (leaderTerm >>> 32));\n-            result = 31 * result + (int) (prevIndex ^ (prevIndex >>> 32));\n+            result = 31 * result + ( int) ( leaderTerm ^ ( leaderTerm >>> 32 ));\n+            result = 31 * result + ( int) ( prevIndex ^ ( prevIndex >>> 32 ));\n             return result;\n         }\n \n@@ -798,7 +790,7 @@ public interface RaftMessages\n             }\n \n             @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n+            public <T, E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n             {\n                 return handler.handle( this );\n             }\n@@ -818,7 +810,7 @@ public interface RaftMessages\n             }\n \n             @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n+            public <T, E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n             {\n                 return handler.handle( this );\n             }\n@@ -844,7 +836,7 @@ public interface RaftMessages\n             }\n \n             @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n+            public <T, E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n             {\n                 return handler.handle( this );\n             }\n@@ -862,14 +854,15 @@ public interface RaftMessages\n                 {\n                     return true;\n                 }\n-                if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n                 {\n                     return false;\n                 }\n \n                 Request request = (Request) o;\n \n-                return !(content != null ? !content.equals( request.content ) : request.content != null);\n+                return !( content != null ? !content.equals( request.content ) : request.content != null );\n             }\n \n             @Override\n@@ -900,7 +893,7 @@ public interface RaftMessages\n             }\n \n             @Override\n-            public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n+            public <T, E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n             {\n                 return handler.handle( this );\n             }\n@@ -912,15 +905,18 @@ public interface RaftMessages\n                 {\n                     return true;\n                 }\n-                if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n                 {\n                     return false;\n                 }\n-                if ( !super.equals( o ) )\n+\n+if ( !super.equals( o ) )\n                 {\n                     return false;\n                 }\n-                BatchRequest batchRequest = (BatchRequest) o;\n+\n+BatchRequest batchRequest = (BatchRequest) o;\n                 return Objects.equals( list, batchRequest.list );\n             }\n \n@@ -933,10 +929,8 @@ public interface RaftMessages\n             @Override\n             public String toString()\n             {\n-                return \"BatchRequest{\" +\n-                       \"list=\" + list +\n-                       '}';\n-            }\n+                return \"BatchRequest{\" + \"list=\" + list + '}';\n+    }\n \n             public List<ReplicatedContent> contents()\n             {\n@@ -962,7 +956,7 @@ public interface RaftMessages\n         }\n \n         @Override\n-        default <T, E extends Exception> T dispatch( Handler<T, E> handler ) throws E\n+        default <T, E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n         {\n             return message().dispatch( handler );\n         }\n@@ -1026,7 +1020,8 @@ public interface RaftMessages\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n@@ -1078,7 +1073,8 @@ public interface RaftMessages\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n@@ -1138,7 +1134,8 @@ public interface RaftMessages\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n@@ -1175,7 +1172,7 @@ public interface RaftMessages\n         }\n \n         @Override\n-        public <T,E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n+        public <T, E extends Exception> T dispatch( Handler<T,E> handler ) throws E\n         {\n             return handler.handle( this );\n         }\n@@ -1187,15 +1184,18 @@ public interface RaftMessages\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n-            if ( !super.equals( o ) )\n+\n+if ( !super.equals( o ) )\n             {\n                 return false;\n             }\n-            PruneRequest that = (PruneRequest) o;\n+\n+PruneRequest that = (PruneRequest) o;\n             return pruneIndex == that.pruneIndex;\n         }\n \n@@ -1236,11 +1236,13 @@ public interface RaftMessages\n             {\n                 return true;\n             }\n-            if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n             {\n                 return false;\n             }\n-            BaseRaftMessage that = (BaseRaftMessage) o;\n+\n+BaseRaftMessage that = (BaseRaftMessage) o;\n             return Objects.equals( from, that.from ) && type == that.type;\n         }\n \n@@ -1250,4 +1252,4 @@ public interface RaftMessages\n             return Objects.hash( from, type );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 136
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
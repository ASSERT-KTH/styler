{
    "project_name": "eclipse-ee4j-glassfish",
    "error_id": "128",
    "information": {
        "errors": [
            {
                "line": "66",
                "column": "43",
                "severity": "warning",
                "message": "Don't use trailing comments.",
                "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
            }
        ]
    },
    "source_code": "\n    private void unregisterService() {\n        if (getBundleContext() != null) { // bundle is still active\n            try {\n                reg.unregister();\n                logger.log(Level.INFO, LogFacade.SERVICE_UNREGISTERED, this);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "66",
                    "column": "43",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "66",
                    "column": "43",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/128/EmbeddedOSGiGlassFishImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/intellij/128/EmbeddedOSGiGlassFishImpl.java\nindex 759b9eedeab..3cb8a120c8b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/128/EmbeddedOSGiGlassFishImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/intellij/128/EmbeddedOSGiGlassFishImpl.java\n@@ -30,7 +30,7 @@ import com.sun.enterprise.glassfish.bootstrap.LogFacade;\n /**\n  * A specialized implementation of GlassFish which takes care of calling\n  * registering & unregistering GlassFish service from service registry when GlassFish is started and stopped.\n- *\n+ * <p>\n  * This object is created by {@link EmbeddedOSGiGlassFishRuntime}\n  *\n  * @author sanjeeb.sahoo@oracle.com\n@@ -59,7 +59,7 @@ public class EmbeddedOSGiGlassFishImpl extends GlassFishDecorator {\n \n     private void registerService() {\n         reg = getBundleContext().registerService(GlassFish.class.getName(), this, null);\n-        logger.log(Level.INFO, LogFacade.SERVICE_REGISTERED, new Object[]{this, reg});\n+        logger.log(Level.INFO, LogFacade.SERVICE_REGISTERED, new Object[] {this, reg});\n     }\n \n     private void unregisterService() {\n@@ -68,7 +68,8 @@ public class EmbeddedOSGiGlassFishImpl extends GlassFishDecorator {\n                 reg.unregister();\n                 logger.log(Level.INFO, LogFacade.SERVICE_UNREGISTERED, this);\n             } catch (IllegalStateException e) {\n-                LogFacade.log(logger, Level.WARNING, LogFacade.SERVICE_UNREGISTRATION_EXCEPTION, e, e);\n+                LogFacade\n+                    .log(logger, Level.WARNING, LogFacade.SERVICE_UNREGISTRATION_EXCEPTION, e, e);\n             }\n         }\n     }\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "66",
                    "column": "43",
                    "severity": "warning",
                    "message": "Don't use trailing comments.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.TrailingCommentCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "68",
                    "column": "9",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/128/EmbeddedOSGiGlassFishImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_three_grams/128/EmbeddedOSGiGlassFishImpl.java\nindex 759b9eedeab..4c4609ab8ec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/errored/1/128/EmbeddedOSGiGlassFishImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-ee4j-glassfish/styler_three_grams/128/EmbeddedOSGiGlassFishImpl.java\n@@ -63,8 +63,9 @@ public class EmbeddedOSGiGlassFishImpl extends GlassFishDecorator {\n     }\n \n     private void unregisterService() {\n-        if (getBundleContext() != null) { // bundle is still active\n-            try {\n+        if (getBundleContext() != null) {\n+            // bundle is still active\n+        try {\n                 reg.unregister();\n                 logger.log(Level.INFO, LogFacade.SERVICE_UNREGISTERED, this);\n             } catch (IllegalStateException e) {\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "158",
    "information": {
        "errors": [
            {
                "line": "120",
                "severity": "error",
                "message": "'@' has incorrect indentation level 3, expected level should be 6.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "      AuthoritiesConstants.PUBLISHER})\n  public ResponseEntity<List<UserDto>> findUserWithRole(@PathVariable String search,\n   @PathVariable String role) {\n    boolean userHasAdvancedPrivileges = SecurityUtils.isUserInRole(AuthoritiesConstants.PUBLISHER)\n        || SecurityUtils.isUserInRole(AuthoritiesConstants.ADMIN);\n    return new ResponseEntity<>(userRepository.findAllByLoginLikeOrEmailLike(search, search)",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/158/UserResource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler/158/UserResource.java\nindex c62250904dd..c80225caf1d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/158/UserResource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler/158/UserResource.java\n@@ -117,7 +117,7 @@ public class UserResource {\n   @Secured({AuthoritiesConstants.ADMIN, AuthoritiesConstants.DATA_PROVIDER,\n       AuthoritiesConstants.PUBLISHER})\n   public ResponseEntity<List<UserDto>> findUserWithRole(@PathVariable String search,\n-   @PathVariable String role) {\n+      @PathVariable String role) {\n     boolean userHasAdvancedPrivileges = SecurityUtils.isUserInRole(AuthoritiesConstants.PUBLISHER)\n         || SecurityUtils.isUserInRole(AuthoritiesConstants.ADMIN);\n     return new ResponseEntity<>(userRepository.findAllByLoginLikeOrEmailLike(search, search)\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/158/UserResource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/158/UserResource.java\nindex c62250904dd..a952a5e8b43 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/158/UserResource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/158/UserResource.java\n@@ -117,7 +117,7 @@ public class UserResource {\n   @Secured({AuthoritiesConstants.ADMIN, AuthoritiesConstants.DATA_PROVIDER,\n       AuthoritiesConstants.PUBLISHER})\n   public ResponseEntity<List<UserDto>> findUserWithRole(@PathVariable String search,\n-   @PathVariable String role) {\n+                                                        @PathVariable String role) {\n     boolean userHasAdvancedPrivileges = SecurityUtils.isUserInRole(AuthoritiesConstants.PUBLISHER)\n         || SecurityUtils.isUserInRole(AuthoritiesConstants.ADMIN);\n     return new ResponseEntity<>(userRepository.findAllByLoginLikeOrEmailLike(search, search)\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "120",
                    "severity": "error",
                    "message": "'@' has incorrect indentation level 3, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 6, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "'||' has incorrect indentation level 8, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/158/UserResource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/158/UserResource.java\nindex c62250904dd..e2923aa7149 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/158/UserResource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/158/UserResource.java\n@@ -118,11 +118,12 @@ public class UserResource {\n       AuthoritiesConstants.PUBLISHER})\n   public ResponseEntity<List<UserDto>> findUserWithRole(@PathVariable String search,\n    @PathVariable String role) {\n-    boolean userHasAdvancedPrivileges = SecurityUtils.isUserInRole(AuthoritiesConstants.PUBLISHER)\n+\n+      boolean userHasAdvancedPrivileges = SecurityUtils.isUserInRole(AuthoritiesConstants.PUBLISHER)\n         || SecurityUtils.isUserInRole(AuthoritiesConstants.ADMIN);\n     return new ResponseEntity<>(userRepository.findAllByLoginLikeOrEmailLike(search, search)\n         .stream().filter(user -> SecurityUtils.isUserInRole(role, user))\n         .map(user -> new UserDto(user)).collect(Collectors.toList()), HttpStatus.OK);\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "61",
                    "severity": "error",
                    "message": "'method' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 60, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 60, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 60, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 60, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 60, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 60, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 60, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 60, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 60, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 60, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 60, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'block' child has incorrect indentation level 60, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 58, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "'method' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 104).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "'method' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "'method' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "'@' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 147).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 138).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/158/UserResource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/158/UserResource.java\nindex c62250904dd..c7a1fcafff8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/158/UserResource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/158/UserResource.java\n@@ -4,7 +4,6 @@ import java.net.URISyntaxException;\n import java.util.List;\n import java.util.Set;\n import java.util.stream.Collectors;\n-\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.data.domain.Page;\n import org.springframework.data.domain.Pageable;\n@@ -19,7 +18,6 @@ import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestMethod;\n import org.springframework.web.bind.annotation.RestController;\n-\n import eu.dzhw.fdz.metadatamanagement.common.rest.util.PaginationUtil;\n import eu.dzhw.fdz.metadatamanagement.usermanagement.domain.Authority;\n import eu.dzhw.fdz.metadatamanagement.usermanagement.domain.User;\n@@ -36,10 +34,13 @@ import lombok.extern.slf4j.Slf4j;\n /**\n  * REST controller for managing users.\n  */\n+\n+\n @RestController\n @RequestMapping(\"/api\")\n @Slf4j\n public class UserResource {\n+\n   @Autowired\n   private UserRepository userRepository;\n \n@@ -55,41 +56,44 @@ public class UserResource {\n   /**\n    * Updates an existing User.\n    */\n-  @RequestMapping(value = \"/users\", method = RequestMethod.PUT,\n+\n+  @RequestMapping(value = \"/users\",\n+    method = RequestMethod.PUT,\n       produces = MediaType.APPLICATION_JSON_VALUE)\n   @Secured(AuthoritiesConstants.ADMIN)\n-  public ResponseEntity<ManagedUserDto> updateUser(@RequestBody ManagedUserDto managedUserDto)\n-      throws URISyntaxException {\n+  public ResponseEntity<ManagedUserDto> updateUser(@RequestBody ManagedUserDto managedUserDto) throws URISyntaxException {\n     log.debug(\"REST request to update User : {}\", managedUserDto);\n     return userRepository.findById(managedUserDto.getId()).map(user -> {\n-      tokenStore.removeTokensByUsername(user.getLogin());\n-      user.setLogin(managedUserDto.getLogin());\n-      user.setFirstName(managedUserDto.getFirstName());\n-      user.setLastName(managedUserDto.getLastName());\n-      user.setEmail(managedUserDto.getEmail());\n-      user.setActivated(managedUserDto.isActivated());\n-      user.setLangKey(managedUserDto.getLangKey());\n-      Set<Authority> authorities = user.getAuthorities();\n-      authorities.clear();\n-      managedUserDto.getAuthorities().stream()\n-          .forEach(authority -> authorities.add(authorityRepository.findById(authority).get()));\n-      userRepository.save(user);\n-      return ResponseEntity.ok()\n-          .body(new ManagedUserDto(userRepository.findById(managedUserDto.getId()).get()));\n-    }).orElseGet(() -> new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR));\n+                                                            tokenStore.removeTokensByUsername(user.getLogin());\n+                                                            user.setLogin(managedUserDto.getLogin());\n+                                                            user.setFirstName(managedUserDto.getFirstName());\n+                                                            user.setLastName(managedUserDto.getLastName());\n+                                                            user.setEmail(managedUserDto.getEmail());\n+                                                            user.setActivated(managedUserDto.isActivated());\n+                                                            user.setLangKey(managedUserDto.getLangKey());\n+                                                            Set<Authority> authorities = user.getAuthorities();\n+                                                            authorities.clear();\n+                                                            managedUserDto.getAuthorities().stream().forEach(authority -> authorities.add(authorityRepository.findById(authority).get()));\n+                                                            userRepository.save(user);\n+                                                            return ResponseEntity.ok().body(new ManagedUserDto(userRepository.findById(managedUserDto.getId()).get()));\n+                                                          })\n+                                                          .orElseGet(() -> new ResponseEntity<>(HttpStatus.INTERNAL_SERVER_ERROR));\n   }\n \n   /**\n    * Get all users.\n    */\n-  @RequestMapping(value = \"/users\", method = RequestMethod.GET,\n+\n+\n+  @RequestMapping(value = \"/users\",\n+    method = RequestMethod.GET,\n       produces = MediaType.APPLICATION_JSON_VALUE)\n   @Secured(AuthoritiesConstants.ADMIN)\n-  public ResponseEntity<List<ManagedUserDto>> getAllUsers(Pageable pageable)\n-      throws URISyntaxException {\n+  public ResponseEntity<List<ManagedUserDto>> getAllUsers(Pageable pageable) throws URISyntaxException {\n     Page<User> page = userRepository.findAll(pageable);\n     List<ManagedUserDto> managedUserDtos = page.getContent().stream()\n-        .map(user -> new ManagedUserDto(user)).collect(Collectors.toList());\n+                                                            .map(user -> new ManagedUserDto(user))\n+                                                            .collect(Collectors.toList());\n     HttpHeaders headers = PaginationUtil.generatePaginationHttpHeaders(page, \"/api/users\");\n     headers.setCacheControl(CacheControl.noStore());\n     return new ResponseEntity<>(managedUserDtos, headers, HttpStatus.OK);\n@@ -98,31 +102,35 @@ public class UserResource {\n   /**\n    * Get the \"login\" user.\n    */\n-  @RequestMapping(value = \"/users/{login}\", method = RequestMethod.GET,\n+\n+\n+  @RequestMapping(value = \"/users/{login}\",\n+    method = RequestMethod.GET,\n       produces = MediaType.APPLICATION_JSON_VALUE)\n   @Secured(AuthoritiesConstants.ADMIN)\n   public ResponseEntity<ManagedUserDto> getUser(@PathVariable String login) {\n     log.debug(\"REST request to get User : {}\", login);\n     return userService.getUserWithAuthoritiesByLogin(login).map(user -> new ManagedUserDto(user))\n-        .map(managedUserDTO -> ResponseEntity.ok().cacheControl(CacheControl.noCache())\n-            .body(managedUserDTO))\n-        .orElse(new ResponseEntity<>(HttpStatus.NOT_FOUND));\n+                                                           .map(managedUserDTO -> ResponseEntity.ok().cacheControl(CacheControl.noCache())\n+                                                                                                     .body(managedUserDTO))\n+                                                           .orElse(new ResponseEntity<>(HttpStatus.NOT_FOUND));\n   }\n \n   /**\n    * Search for privileged users.\n    */\n+\n+\n   @RequestMapping(value = \"/users/findUserWithRole/{search}/{role}\",\n-      method = RequestMethod.GET, produces = MediaType.APPLICATION_JSON_VALUE)\n-  @Secured({AuthoritiesConstants.ADMIN, AuthoritiesConstants.DATA_PROVIDER,\n-      AuthoritiesConstants.PUBLISHER})\n+    method = RequestMethod.GET,\n+      produces = MediaType.APPLICATION_JSON_VALUE)\n+  @Secured({AuthoritiesConstants.ADMIN, AuthoritiesConstants.DATA_PROVIDER, AuthoritiesConstants.PUBLISHER})\n   public ResponseEntity<List<UserDto>> findUserWithRole(@PathVariable String search,\n-   @PathVariable String role) {\n-    boolean userHasAdvancedPrivileges = SecurityUtils.isUserInRole(AuthoritiesConstants.PUBLISHER)\n-        || SecurityUtils.isUserInRole(AuthoritiesConstants.ADMIN);\n-    return new ResponseEntity<>(userRepository.findAllByLoginLikeOrEmailLike(search, search)\n-        .stream().filter(user -> SecurityUtils.isUserInRole(role, user))\n-        .map(user -> new UserDto(user)).collect(Collectors.toList()), HttpStatus.OK);\n+    @PathVariable String role) {\n+    boolean userHasAdvancedPrivileges = SecurityUtils.isUserInRole(AuthoritiesConstants.PUBLISHER) || SecurityUtils.isUserInRole(AuthoritiesConstants.ADMIN);\n+    return new ResponseEntity<>(userRepository.findAllByLoginLikeOrEmailLike(search, search).stream()\n+                                                                                            .filter(user -> SecurityUtils.isUserInRole(role, user))\n+                                                                                            .map(user -> new UserDto(user))\n+                                                                                            .collect(Collectors.toList()), HttpStatus.OK);\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 53
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/158/UserResource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_random/158/UserResource.java\nindex c62250904dd..c80225caf1d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/158/UserResource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_random/158/UserResource.java\n@@ -117,7 +117,7 @@ public class UserResource {\n   @Secured({AuthoritiesConstants.ADMIN, AuthoritiesConstants.DATA_PROVIDER,\n       AuthoritiesConstants.PUBLISHER})\n   public ResponseEntity<List<UserDto>> findUserWithRole(@PathVariable String search,\n-   @PathVariable String role) {\n+      @PathVariable String role) {\n     boolean userHasAdvancedPrivileges = SecurityUtils.isUserInRole(AuthoritiesConstants.PUBLISHER)\n         || SecurityUtils.isUserInRole(AuthoritiesConstants.ADMIN);\n     return new ResponseEntity<>(userRepository.findAllByLoginLikeOrEmailLike(search, search)\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/158/UserResource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/158/UserResource.java\nindex c62250904dd..c80225caf1d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/158/UserResource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/158/UserResource.java\n@@ -117,7 +117,7 @@ public class UserResource {\n   @Secured({AuthoritiesConstants.ADMIN, AuthoritiesConstants.DATA_PROVIDER,\n       AuthoritiesConstants.PUBLISHER})\n   public ResponseEntity<List<UserDto>> findUserWithRole(@PathVariable String search,\n-   @PathVariable String role) {\n+      @PathVariable String role) {\n     boolean userHasAdvancedPrivileges = SecurityUtils.isUserInRole(AuthoritiesConstants.PUBLISHER)\n         || SecurityUtils.isUserInRole(AuthoritiesConstants.ADMIN);\n     return new ResponseEntity<>(userRepository.findAllByLoginLikeOrEmailLike(search, search)\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "199",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/199/RoleRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/199/RoleRecord.java\nindex abc3ca99412..94d4b8a4476 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/199/RoleRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/199/RoleRecord.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.enterprise.auth;\n \n import java.util.Arrays;\n@@ -33,122 +34,128 @@ public class RoleRecord\n       locks. Correctness depends on write-time assertions and this class remaining immutable. Please do not introduce\n       mutable fields here.\n      */\n-    /** Role name */\n-    private final String name;\n-\n-    /** Member users */\n-    private final SortedSet<String> users;\n-\n-    public RoleRecord( String name, SortedSet<String> users )\n+  /**\n+   * Role name\n+   */\n+  private final String name;\n+\n+  /**\n+   * Member users\n+   */\n+  private final SortedSet<String> users;\n+\n+  public RoleRecord(String name, SortedSet<String> users)\n+  {\n+    this.name = name;\n+    this.users = users;\n+  }\n+\n+  public RoleRecord(String name, String... users)\n+  {\n+    this.name = name;\n+    this.users = new TreeSet<>();\n+\n+    this.users.addAll(Arrays.asList(users));\n+  }\n+\n+  public String name()\n+  {\n+    return name;\n+  }\n+\n+  public SortedSet<String> users()\n+  {\n+    return users;\n+  }\n+\n+  /**\n+   * Use this role as a base for a new role object\n+   */\n+  public Builder augment()\n+  {\n+    return new Builder(this);\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        this.name = name;\n-        this.users = users;\n+      return true;\n     }\n-\n-    public RoleRecord( String name, String... users )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        this.name = name;\n-        this.users = new TreeSet<>();\n-\n-        this.users.addAll( Arrays.asList( users ) );\n+      return false;\n     }\n \n-    public String name()\n+    RoleRecord role = (RoleRecord) o;\n+\n+    if (name != null ? !name.equals(role.name) : role.name != null)\n+    {\n+      return false;\n+    }\n+    return users != null ? users.equals(role.users) : role.users == null;\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = name != null ? name.hashCode() : 0;\n+    result = 31 * result + (users != null ? users.hashCode() : 0);\n+    return result;\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"Role{\" +\n+        \"name='\" + name + '\\'' +\n+        \", users='\" + users + '\\'' +\n+        '}';\n+  }\n+\n+  public static class Builder\n+  {\n+    private String name;\n+    private SortedSet<String> users = new TreeSet<>();\n+\n+    public Builder()\n     {\n-        return name;\n     }\n \n-    public SortedSet<String> users()\n+    public Builder(RoleRecord base)\n     {\n-        return users;\n+      name = base.name;\n+      users = new TreeSet<>(base.users);\n     }\n \n-    /** Use this role as a base for a new role object */\n-    public Builder augment()\n+    public Builder withName(String name)\n     {\n-        return new Builder( this );\n+      this.name = name;\n+      return this;\n     }\n \n-    @Override\n-    public boolean equals( Object o )\n+    public Builder withUsers(SortedSet<String> users)\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        RoleRecord role = (RoleRecord) o;\n-\n-        if ( name != null ? !name.equals( role.name ) : role.name != null )\n-        {\n-            return false;\n-        }\n-        return users != null ? users.equals( role.users ) : role.users == null;\n+      this.users = users;\n+      return this;\n     }\n \n-    @Override\n-    public int hashCode()\n+    public Builder withUser(String user)\n     {\n-        int result = name != null ? name.hashCode() : 0;\n-        result = 31 * result + (users != null ? users.hashCode() : 0);\n-        return result;\n+      this.users.add(user);\n+      return this;\n     }\n \n-    @Override\n-    public String toString()\n+    public Builder withoutUser(String user)\n     {\n-        return \"Role{\" +\n-               \"name='\" + name + '\\'' +\n-               \", users='\" + users + '\\'' +\n-               '}';\n+      this.users.remove(user);\n+      return this;\n     }\n \n-    public static class Builder\n+    public RoleRecord build()\n     {\n-        private String name;\n-        private SortedSet<String> users = new TreeSet<>();\n-\n-        public Builder()\n-        {\n-        }\n-\n-        public Builder( RoleRecord base )\n-        {\n-            name = base.name;\n-            users = new TreeSet<>( base.users );\n-        }\n-\n-        public Builder withName( String name )\n-        {\n-            this.name = name;\n-            return this;\n-        }\n-\n-        public Builder withUsers( SortedSet<String> users )\n-        {\n-            this.users = users;\n-            return this;\n-        }\n-\n-        public Builder withUser( String user )\n-        {\n-            this.users.add( user );\n-            return this;\n-        }\n-\n-        public Builder withoutUser( String user )\n-        {\n-            this.users.remove( user );\n-            return this;\n-        }\n-\n-        public RoleRecord build()\n-        {\n-            return new RoleRecord( name, users );\n-        }\n+      return new RoleRecord(name, users);\n     }\n+  }\n }\n",
            "diff_size": 167
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/199/RoleRecord.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/199/RoleRecord.java\nindex abc3ca99412..b93d147cf45 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/199/RoleRecord.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/199/RoleRecord.java\n@@ -49,8 +49,7 @@ public class RoleRecord\n     {\n         this.name = name;\n         this.users = new TreeSet<>();\n-\n-        this.users.addAll( Arrays.asList( users ) );\n+this.users.addAll( Arrays.asList( users ) );\n     }\n \n     public String name()\n@@ -76,7 +75,8 @@ public class RoleRecord\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -87,24 +87,22 @@ public class RoleRecord\n         {\n             return false;\n         }\n-        return users != null ? users.equals( role.users ) : role.users == null;\n+\n+return users != null ? users.equals( role.users ) : role.users == null;\n     }\n \n     @Override\n     public int hashCode()\n     {\n         int result = name != null ? name.hashCode() : 0;\n-        result = 31 * result + (users != null ? users.hashCode() : 0);\n+        result = 31 * result + (users != null ? users.hashCode() : 0 );\n         return result;\n     }\n \n     @Override\n     public String toString()\n     {\n-        return \"Role{\" +\n-               \"name='\" + name + '\\'' +\n-               \", users='\" + users + '\\'' +\n-               '}';\n+        return \"Role{\" + \"name='\" + name + '\\'' + \", users='\" + users + '\\'' + '}';\n     }\n \n     public static class Builder\n@@ -151,4 +149,4 @@ public class RoleRecord\n             return new RoleRecord( name, users );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "bakdata-conquery",
    "error_id": "358",
    "information": {
        "errors": [
            {
                "line": "20",
                "column": "123",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "@Setter\n@CPSType(id = \"WILDCARD_PERMISSION\", base = ConqueryPermission.class)\npublic class WildcardPermission extends org.apache.shiro.authz.permission.WildcardPermission implements ConqueryPermission{\n\t\n\t@JsonCreator\n\tpublic WildcardPermission(List<Set<String>> parts) {",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/358/WildcardPermission.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/358/WildcardPermission.java\nindex dc7c2c67462..f8db4900c53 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/358/WildcardPermission.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/358/WildcardPermission.java\n@@ -17,8 +17,8 @@ import lombok.Setter;\n @Getter\n @Setter\n @CPSType(id = \"WILDCARD_PERMISSION\", base = ConqueryPermission.class)\n-public class WildcardPermission extends org.apache.shiro.authz.permission.WildcardPermission implements ConqueryPermission{\n-\t\n+public class WildcardPermission extends org.apache.shiro.authz.permission.WildcardPermission implements ConqueryPermission {\n+\n \t@JsonCreator\n \tpublic WildcardPermission(List<Set<String>> parts) {\n \t\tthis.setParts(parts);\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/358/WildcardPermission.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/358/WildcardPermission.java\nindex dc7c2c67462..6f27c06c17a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/358/WildcardPermission.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/358/WildcardPermission.java\n@@ -11,24 +11,23 @@ import lombok.Setter;\n \n /**\n  * Needed for (de)serialization with Jackson.\n- *\n  */\n @SuppressWarnings(\"serial\")\n @Getter\n @Setter\n @CPSType(id = \"WILDCARD_PERMISSION\", base = ConqueryPermission.class)\n-public class WildcardPermission extends org.apache.shiro.authz.permission.WildcardPermission implements ConqueryPermission{\n-\t\n-\t@JsonCreator\n-\tpublic WildcardPermission(List<Set<String>> parts) {\n-\t\tthis.setParts(parts);\n-\t}\n+public class WildcardPermission extends org.apache.shiro.authz.permission.WildcardPermission implements ConqueryPermission {\n \n-\tpublic WildcardPermission(String wildcardString){\n-\t\tsuper(wildcardString);\n-\t}\n+    @JsonCreator\n+    public WildcardPermission(List<Set<String>> parts) {\n+        this.setParts(parts);\n+    }\n \n-\tpublic List<Set<String>> getParts() {\n-\t\treturn super.getParts();\n-\t}\n+    public WildcardPermission(String wildcardString) {\n+        super(wildcardString);\n+    }\n+\n+    public List<Set<String>> getParts() {\n+        return super.getParts();\n+    }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/358/WildcardPermission.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/358/WildcardPermission.java\nindex dc7c2c67462..0b7574f2590 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/358/WildcardPermission.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/358/WildcardPermission.java\n@@ -17,18 +17,18 @@ import lombok.Setter;\n @Getter\n @Setter\n @CPSType(id = \"WILDCARD_PERMISSION\", base = ConqueryPermission.class)\n-public class WildcardPermission extends org.apache.shiro.authz.permission.WildcardPermission implements ConqueryPermission{\n+public class WildcardPermission extends org.apache.shiro.authz.permission.WildcardPermission implements ConqueryPermission {\n \t\n \t@JsonCreator\n \tpublic WildcardPermission(List<Set<String>> parts) {\n \t\tthis.setParts(parts);\n \t}\n \n-\tpublic WildcardPermission(String wildcardString){\n+\tpublic WildcardPermission(String wildcardString) {\n \t\tsuper(wildcardString);\n \t}\n \n \tpublic List<Set<String>> getParts() {\n \t\treturn super.getParts();\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "19",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "20",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "22",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "22",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "column": "3",
                    "severity": "warning",
                    "message": "'ctor def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "column": "2",
                    "severity": "warning",
                    "message": "'ctor def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/358/WildcardPermission.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/358/WildcardPermission.java\nindex dc7c2c67462..3e04aba6381 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/358/WildcardPermission.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/358/WildcardPermission.java\n@@ -2,10 +2,8 @@ package com.bakdata.conquery.models.auth.permissions;\n \n import java.util.List;\n import java.util.Set;\n-\n import com.bakdata.conquery.io.cps.CPSType;\n import com.fasterxml.jackson.annotation.JsonCreator;\n-\n import lombok.Getter;\n import lombok.Setter;\n \n@@ -13,22 +11,21 @@ import lombok.Setter;\n  * Needed for (de)serialization with Jackson.\n  *\n  */\n+\n @SuppressWarnings(\"serial\")\n-@Getter\n-@Setter\n-@CPSType(id = \"WILDCARD_PERMISSION\", base = ConqueryPermission.class)\n-public class WildcardPermission extends org.apache.shiro.authz.permission.WildcardPermission implements ConqueryPermission{\n-\t\n-\t@JsonCreator\n-\tpublic WildcardPermission(List<Set<String>> parts) {\n-\t\tthis.setParts(parts);\n-\t}\n+@Getter @Setter @CPSType(id=\"WILDCARD_PERMISSION\", base= ConqueryPermission.class)\n+public class WildcardPermission extends org.apache.shiro.authz.permission.WildcardPermission implements ConqueryPermission {\n+\n+ @JsonCreator\n+ public WildcardPermission(List<Set<String>> parts) {\n+  this.setParts(parts);\n+ }\n \n-\tpublic WildcardPermission(String wildcardString){\n-\t\tsuper(wildcardString);\n-\t}\n+ public WildcardPermission(String wildcardString) {\n+  super(wildcardString);\n+ }\n \n-\tpublic List<Set<String>> getParts() {\n-\t\treturn super.getParts();\n-\t}\n-}\n+ public List<Set<String>> getParts() {\n+  return super.getParts();\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/358/WildcardPermission.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/358/WildcardPermission.java\nindex dc7c2c67462..f8db4900c53 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/358/WildcardPermission.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/358/WildcardPermission.java\n@@ -17,8 +17,8 @@ import lombok.Setter;\n @Getter\n @Setter\n @CPSType(id = \"WILDCARD_PERMISSION\", base = ConqueryPermission.class)\n-public class WildcardPermission extends org.apache.shiro.authz.permission.WildcardPermission implements ConqueryPermission{\n-\t\n+public class WildcardPermission extends org.apache.shiro.authz.permission.WildcardPermission implements ConqueryPermission {\n+\n \t@JsonCreator\n \tpublic WildcardPermission(List<Set<String>> parts) {\n \t\tthis.setParts(parts);\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/358/WildcardPermission.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/358/WildcardPermission.java\nindex dc7c2c67462..c650001f9d6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/358/WildcardPermission.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/358/WildcardPermission.java\n@@ -17,8 +17,7 @@ import lombok.Setter;\n @Getter\n @Setter\n @CPSType(id = \"WILDCARD_PERMISSION\", base = ConqueryPermission.class)\n-public class WildcardPermission extends org.apache.shiro.authz.permission.WildcardPermission implements ConqueryPermission{\n-\t\n+public class WildcardPermission extends org.apache.shiro.authz.permission.WildcardPermission implements ConqueryPermission {\n \t@JsonCreator\n \tpublic WildcardPermission(List<Set<String>> parts) {\n \t\tthis.setParts(parts);\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "codebuff"
    ]
}
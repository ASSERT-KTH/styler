{
    "project_name": "Angel-ML-angel",
    "error_id": "560",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/560/InitNodeFeatsPartParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/560/InitNodeFeatsPartParam.java\nindex bea1c158155..2ef3b8c7605 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/560/InitNodeFeatsPartParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/560/InitNodeFeatsPartParam.java\n@@ -14,6 +14,7 @@\n  * the License.\n  *\n  */\n+\n package com.tencent.angel.graph.client.initnodefeats4;\n \n import com.tencent.angel.PartitionKey;\n@@ -31,8 +32,8 @@ public class InitNodeFeatsPartParam extends PartitionUpdateParam {\n   private int endIndex;\n \n   public InitNodeFeatsPartParam(int matrixId, PartitionKey partKey,\n-      long[] keys, IntFloatVector[] feats,\n-      int[] index, int startIndex, int endIndex) {\n+                                long[] keys, IntFloatVector[] feats,\n+                                int[] index, int startIndex, int endIndex) {\n     super(matrixId, partKey);\n     this.keys = keys;\n     this.feats = feats;\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/560/InitNodeFeatsPartParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/560/InitNodeFeatsPartParam.java\nindex bea1c158155..eae6687c3c1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/560/InitNodeFeatsPartParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/560/InitNodeFeatsPartParam.java\n@@ -31,7 +31,7 @@ public class InitNodeFeatsPartParam extends PartitionUpdateParam {\n   private int endIndex;\n \n   public InitNodeFeatsPartParam(int matrixId, PartitionKey partKey,\n-      long[] keys, IntFloatVector[] feats,\n+long[] keys, IntFloatVector[] feats,\n       int[] index, int startIndex, int endIndex) {\n     super(matrixId, partKey);\n     this.keys = keys;\n@@ -95,4 +95,4 @@ public class InitNodeFeatsPartParam extends PartitionUpdateParam {\n     }\n     return len;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/560/InitNodeFeatsPartParam.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/560/InitNodeFeatsPartParam.java\nindex bea1c158155..0a8a654b063 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/560/InitNodeFeatsPartParam.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/560/InitNodeFeatsPartParam.java\n@@ -30,9 +30,10 @@ public class InitNodeFeatsPartParam extends PartitionUpdateParam {\n   private int startIndex;\n   private int endIndex;\n \n-  public InitNodeFeatsPartParam(int matrixId, PartitionKey partKey,\n-      long[] keys, IntFloatVector[] feats,\n-      int[] index, int startIndex, int endIndex) {\n+  public InitNodeFeatsPartParam(int matrixId,\n+                                PartitionKey partKey,\n+                                long[] keys,\n+                                IntFloatVector[] feats, int[] index, int startIndex, int endIndex) {\n     super(matrixId, partKey);\n     this.keys = keys;\n     this.feats = feats;\n@@ -56,6 +57,7 @@ public class InitNodeFeatsPartParam extends PartitionUpdateParam {\n   @Override\n   public void serialize(ByteBuf buf) {\n     super.serialize(buf);\n+\n     int writeIndex = buf.writerIndex();\n     int writeNum = 0;\n     buf.writeInt(0);\n@@ -73,10 +75,10 @@ public class InitNodeFeatsPartParam extends PartitionUpdateParam {\n   @Override\n   public void deserialize(ByteBuf buf) {\n     super.deserialize(buf);\n+\n     int len = buf.readInt();\n     keys = new long[len];\n     feats = new IntFloatVector[len];\n-\n     for (int i = 0; i < len; i++) {\n       keys[i] = buf.readLong();\n       feats[i] = NodeUtils.deserialize(buf);\n@@ -95,4 +97,4 @@ public class InitNodeFeatsPartParam extends PartitionUpdateParam {\n     }\n     return len;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4543",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4543/DefaultTransactionTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4543/DefaultTransactionTracer.java\nindex 4775146a2ce..55ddfbd7e1e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4543/DefaultTransactionTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4543/DefaultTransactionTracer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api;\n \n import java.util.concurrent.TimeUnit;\n@@ -37,155 +38,155 @@ import org.neo4j.time.SystemNanoClock;\n \n public class DefaultTransactionTracer implements TransactionTracer, LogRotationMonitor\n {\n-    public interface Monitor\n+  public interface Monitor\n+  {\n+    void lastLogRotationEventDuration(long millis);\n+  }\n+\n+  private final SystemNanoClock clock;\n+  private final Monitor monitor;\n+  private final JobScheduler jobScheduler;\n+\n+  private final AtomicLong counter = new AtomicLong();\n+  private final AtomicLong accumulatedTotalTimeNanos = new AtomicLong();\n+\n+  private long startTimeNanos;\n+\n+  private final LogRotateEvent logRotateEvent = this::updateCountersAndNotifyListeners;\n+\n+  private final LogAppendEvent logAppendEvent = new LogAppendEvent()\n+  {\n+    @Override\n+    public void close()\n+    {\n+    }\n+\n+    @Override\n+    public void setLogRotated(boolean logRotated)\n+    {\n+\n+    }\n+\n+    @Override\n+    public LogRotateEvent beginLogRotate()\n+    {\n+      startTimeNanos = clock.nanos();\n+      return logRotateEvent;\n+    }\n+\n+    @Override\n+    public SerializeTransactionEvent beginSerializeTransaction()\n+    {\n+      return SerializeTransactionEvent.NULL;\n+    }\n+\n+    @Override\n+    public LogForceWaitEvent beginLogForceWait()\n+    {\n+      return LogForceWaitEvent.NULL;\n+    }\n+\n+    @Override\n+    public LogForceEvent beginLogForce()\n     {\n-        void lastLogRotationEventDuration( long millis );\n+      return LogForceEvent.NULL;\n     }\n+  };\n \n-    private final SystemNanoClock clock;\n-    private final Monitor monitor;\n-    private final JobScheduler jobScheduler;\n-\n-    private final AtomicLong counter = new AtomicLong();\n-    private final AtomicLong accumulatedTotalTimeNanos = new AtomicLong();\n-\n-    private long startTimeNanos;\n-\n-    private final LogRotateEvent logRotateEvent = this::updateCountersAndNotifyListeners;\n-\n-    private final LogAppendEvent logAppendEvent = new LogAppendEvent()\n-    {\n-        @Override\n-        public void close()\n-        {\n-        }\n-\n-        @Override\n-        public void setLogRotated( boolean logRotated )\n-        {\n-\n-        }\n-\n-        @Override\n-        public LogRotateEvent beginLogRotate()\n-        {\n-            startTimeNanos = clock.nanos();\n-            return logRotateEvent;\n-        }\n-\n-        @Override\n-        public SerializeTransactionEvent beginSerializeTransaction()\n-        {\n-            return SerializeTransactionEvent.NULL;\n-        }\n-\n-        @Override\n-        public LogForceWaitEvent beginLogForceWait()\n-        {\n-            return LogForceWaitEvent.NULL;\n-        }\n-\n-        @Override\n-        public LogForceEvent beginLogForce()\n-        {\n-            return LogForceEvent.NULL;\n-        }\n-    };\n-\n-    private final CommitEvent commitEvent = new CommitEvent()\n-    {\n-        @Override\n-        public void close()\n-        {\n-        }\n-\n-        @Override\n-        public LogAppendEvent beginLogAppend()\n-        {\n-            return logAppendEvent;\n-        }\n-\n-        @Override\n-        public StoreApplyEvent beginStoreApply()\n-        {\n-            return StoreApplyEvent.NULL;\n-        }\n-    };\n-\n-    private final TransactionEvent transactionEvent = new TransactionEvent()\n-    {\n-\n-        @Override\n-        public void setSuccess( boolean success )\n-        {\n-        }\n-\n-        @Override\n-        public void setFailure( boolean failure )\n-        {\n-        }\n-\n-        @Override\n-        public CommitEvent beginCommitEvent()\n-        {\n-            return commitEvent;\n-        }\n-\n-        @Override\n-        public void close()\n-        {\n-        }\n-\n-        @Override\n-        public void setTransactionWriteState( String transactionWriteState )\n-        {\n-        }\n-\n-        @Override\n-        public void setReadOnly( boolean wasReadOnly )\n-        {\n-        }\n-    };\n-\n-    public DefaultTransactionTracer( Monitor monitor, JobScheduler jobScheduler )\n-    {\n-        this( Clocks.nanoClock(), monitor, jobScheduler );\n+  private final CommitEvent commitEvent = new CommitEvent()\n+  {\n+    @Override\n+    public void close()\n+    {\n     }\n \n-    public DefaultTransactionTracer( SystemNanoClock clock, Monitor monitor, JobScheduler jobScheduler )\n+    @Override\n+    public LogAppendEvent beginLogAppend()\n     {\n-        this.clock = clock;\n-        this.monitor = monitor;\n-        this.jobScheduler = jobScheduler;\n+      return logAppendEvent;\n     }\n \n     @Override\n-    public TransactionEvent beginTransaction()\n+    public StoreApplyEvent beginStoreApply()\n     {\n-        return transactionEvent;\n+      return StoreApplyEvent.NULL;\n     }\n+  };\n+\n+  private final TransactionEvent transactionEvent = new TransactionEvent()\n+  {\n \n     @Override\n-    public long numberOfLogRotationEvents()\n+    public void setSuccess(boolean success)\n     {\n-        return counter.get();\n     }\n \n     @Override\n-    public long logRotationAccumulatedTotalTimeMillis()\n+    public void setFailure(boolean failure)\n     {\n-        return TimeUnit.NANOSECONDS.toMillis( accumulatedTotalTimeNanos.get() );\n     }\n \n-    private void updateCountersAndNotifyListeners()\n+    @Override\n+    public CommitEvent beginCommitEvent()\n     {\n-        counter.incrementAndGet();\n-        long lastEventTime = clock.nanos() - startTimeNanos;\n-        accumulatedTotalTimeNanos.addAndGet( lastEventTime );\n-        jobScheduler.schedule( JobScheduler.Groups.metricsEvent, () ->\n-        {\n-            long millis = TimeUnit.NANOSECONDS.toMillis( lastEventTime );\n-            monitor.lastLogRotationEventDuration( millis );\n-        } );\n+      return commitEvent;\n     }\n+\n+    @Override\n+    public void close()\n+    {\n+    }\n+\n+    @Override\n+    public void setTransactionWriteState(String transactionWriteState)\n+    {\n+    }\n+\n+    @Override\n+    public void setReadOnly(boolean wasReadOnly)\n+    {\n+    }\n+  };\n+\n+  public DefaultTransactionTracer(Monitor monitor, JobScheduler jobScheduler)\n+  {\n+    this(Clocks.nanoClock(), monitor, jobScheduler);\n+  }\n+\n+  public DefaultTransactionTracer(SystemNanoClock clock, Monitor monitor, JobScheduler jobScheduler)\n+  {\n+    this.clock = clock;\n+    this.monitor = monitor;\n+    this.jobScheduler = jobScheduler;\n+  }\n+\n+  @Override\n+  public TransactionEvent beginTransaction()\n+  {\n+    return transactionEvent;\n+  }\n+\n+  @Override\n+  public long numberOfLogRotationEvents()\n+  {\n+    return counter.get();\n+  }\n+\n+  @Override\n+  public long logRotationAccumulatedTotalTimeMillis()\n+  {\n+    return TimeUnit.NANOSECONDS.toMillis(accumulatedTotalTimeNanos.get());\n+  }\n+\n+  private void updateCountersAndNotifyListeners()\n+  {\n+    counter.incrementAndGet();\n+    long lastEventTime = clock.nanos() - startTimeNanos;\n+    accumulatedTotalTimeNanos.addAndGet(lastEventTime);\n+    jobScheduler.schedule(JobScheduler.Groups.metricsEvent, () ->\n+    {\n+      long millis = TimeUnit.NANOSECONDS.toMillis(lastEventTime);\n+      monitor.lastLogRotationEventDuration(millis);\n+    });\n+  }\n }\n",
            "diff_size": 244
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4543/DefaultTransactionTracer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4543/DefaultTransactionTracer.java\nindex 4775146a2ce..599c8708900 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4543/DefaultTransactionTracer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4543/DefaultTransactionTracer.java\n@@ -63,8 +63,7 @@ public class DefaultTransactionTracer implements TransactionTracer, LogRotationM\n         @Override\n         public void setLogRotated( boolean logRotated )\n         {\n-\n-        }\n+}\n \n         @Override\n         public LogRotateEvent beginLogRotate()\n@@ -115,7 +114,7 @@ public class DefaultTransactionTracer implements TransactionTracer, LogRotationM\n     private final TransactionEvent transactionEvent = new TransactionEvent()\n     {\n \n-        @Override\n+@Override\n         public void setSuccess( boolean success )\n         {\n         }\n@@ -188,4 +187,4 @@ public class DefaultTransactionTracer implements TransactionTracer, LogRotationM\n             monitor.lastLogRotationEventDuration( millis );\n         } );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
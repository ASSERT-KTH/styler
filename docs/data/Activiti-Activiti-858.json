{
    "project_name": "Activiti-Activiti",
    "error_id": "858",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.common.util;\n\nimport java.text.MessageFormat;\nimport java.time.*;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/858/DateFormatterProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/858/DateFormatterProvider.java\nindex 6ed23c7ab98..e59e8445f61 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/858/DateFormatterProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/858/DateFormatterProvider.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.common.util;\n \n import java.text.MessageFormat;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/858/DateFormatterProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/858/DateFormatterProvider.java\nindex 6ed23c7ab98..d3ac2d4610a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/858/DateFormatterProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/858/DateFormatterProvider.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.common.util;\n \n import java.text.MessageFormat;\n@@ -21,7 +22,7 @@ import java.time.format.DateTimeFormatter;\n import java.time.format.DateTimeFormatterBuilder;\n import java.util.Date;\n \n-public class DateFormatterProvider  {\n+public class DateFormatterProvider {\n \n     private String dateFormatPattern;\n \n@@ -45,17 +46,17 @@ public class DateFormatterProvider  {\n \n     public Date parse(String value) throws DateTimeException {\n         DateTimeFormatter dateTimeFormatter = new DateTimeFormatterBuilder()\n-                                                      .appendPattern(getDateFormatPattern())\n-                                                      .toFormatter()\n-                                                      .withZone(getZoneId());\n+                .appendPattern(getDateFormatPattern())\n+                .toFormatter()\n+                .withZone(getZoneId());\n \n         try {\n             LocalDateTime localDateTime = dateTimeFormatter.parse(value,\n-                                                                  LocalDateTime::from);\n+                    LocalDateTime::from);\n             return Date.from(localDateTime.atZone(getZoneId()).toInstant());\n         } catch (DateTimeException e) {\n             LocalDate localDate = dateTimeFormatter.parse(String.valueOf(value),\n-                                                          LocalDate::from);\n+                    LocalDate::from);\n             return Date.from(localDate.atStartOfDay().atZone(getZoneId()).toInstant());\n         }\n     }\n@@ -66,11 +67,11 @@ public class DateFormatterProvider  {\n         }\n \n         if (value instanceof Date) {\n-            return (Date)value;\n+            return (Date) value;\n         }\n \n         if (value instanceof Long) {\n-            return new Date((long)value);\n+            return new Date((long) value);\n         }\n \n         throw new DateTimeException(MessageFormat.format(\"Error while parsing date. Type: {0}, value: {1}\", value.getClass().getName(), value));\n",
            "diff_size": 9
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/858/DateFormatterProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/858/DateFormatterProvider.java\nindex 6ed23c7ab98..58b3b774f31 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/858/DateFormatterProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/858/DateFormatterProvider.java\n@@ -21,58 +21,50 @@ import java.time.format.DateTimeFormatter;\n import java.time.format.DateTimeFormatterBuilder;\n import java.util.Date;\n \n-public class DateFormatterProvider  {\n \n-    private String dateFormatPattern;\n+public class DateFormatterProvider {\n \n-    private ZoneId zoneId = ZoneOffset.UTC;\n+  private String dateFormatPattern;\n \n-    public DateFormatterProvider(String dateFormatPattern) {\n-        this.dateFormatPattern = dateFormatPattern;\n-    }\n+  private ZoneId zoneId = ZoneOffset.UTC;\n \n-    public ZoneId getZoneId() {\n-        return zoneId;\n-    }\n+  public DateFormatterProvider(String dateFormatPattern) {\n+    this.dateFormatPattern = dateFormatPattern;\n+  }\n \n-    public String getDateFormatPattern() {\n-        return dateFormatPattern;\n-    }\n+  public ZoneId getZoneId() {\n+    return zoneId;\n+  }\n \n-    public void setDateFormatPattern(String dateFormatPattern) {\n-        this.dateFormatPattern = dateFormatPattern;\n-    }\n+  public String getDateFormatPattern() {\n+    return dateFormatPattern;\n+  }\n \n-    public Date parse(String value) throws DateTimeException {\n-        DateTimeFormatter dateTimeFormatter = new DateTimeFormatterBuilder()\n-                                                      .appendPattern(getDateFormatPattern())\n-                                                      .toFormatter()\n-                                                      .withZone(getZoneId());\n+  public void setDateFormatPattern(String dateFormatPattern) {\n+    this.dateFormatPattern = dateFormatPattern;\n+  }\n \n-        try {\n-            LocalDateTime localDateTime = dateTimeFormatter.parse(value,\n-                                                                  LocalDateTime::from);\n-            return Date.from(localDateTime.atZone(getZoneId()).toInstant());\n-        } catch (DateTimeException e) {\n-            LocalDate localDate = dateTimeFormatter.parse(String.valueOf(value),\n-                                                          LocalDate::from);\n-            return Date.from(localDate.atStartOfDay().atZone(getZoneId()).toInstant());\n-        }\n+  public Date parse(String value) throws DateTimeException {\n+    DateTimeFormatter dateTimeFormatter = new DateTimeFormatterBuilder().appendPattern(getDateFormatPattern()).toFormatter().withZone(getZoneId());\n+    try {\n+      LocalDateTime localDateTime = dateTimeFormatter.parse(value, LocalDateTime::from);\n+      return Date.from(localDateTime.atZone(getZoneId()).toInstant());\n+    } catch (DateTimeException e) {\n+      LocalDate localDate = dateTimeFormatter.parse(String.valueOf(value), LocalDate::from);\n+      return Date.from(localDate.atStartOfDay().atZone(getZoneId()).toInstant());\n     }\n+  }\n \n-    public Date toDate(Object value) {\n-        if (value instanceof String) {\n-            return parse((String) value);\n-        }\n-\n-        if (value instanceof Date) {\n-            return (Date)value;\n-        }\n-\n-        if (value instanceof Long) {\n-            return new Date((long)value);\n-        }\n-\n-        throw new DateTimeException(MessageFormat.format(\"Error while parsing date. Type: {0}, value: {1}\", value.getClass().getName(), value));\n+  public Date toDate(Object value) {\n+    if (value instanceof String) {\n+      return parse((String) value);\n+    }\n+    if (value instanceof Date) {\n+      return (Date) value;\n+    }\n+    if (value instanceof Long) {\n+      return new Date((long) value);\n     }\n-}\n+    throw new DateTimeException(MessageFormat.format(\"Error while parsing date. Type: {0}, value: {1}\", value.getClass().getName(), value));\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 47
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/858/DateFormatterProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/858/DateFormatterProvider.java\nindex 6ed23c7ab98..e59e8445f61 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/858/DateFormatterProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/858/DateFormatterProvider.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.common.util;\n \n import java.text.MessageFormat;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/858/DateFormatterProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/858/DateFormatterProvider.java\nindex 6ed23c7ab98..e59e8445f61 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/858/DateFormatterProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/858/DateFormatterProvider.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.common.util;\n \n import java.text.MessageFormat;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "apache-metron",
    "error_id": "14",
    "information": {
        "errors": [
            {
                "line": "18",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.apache.metron.rest.controller;\n\nimport io.swagger.annotations.ApiOperation;\nimport io.swagger.annotations.ApiParam;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/14/UpdateController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler/14/UpdateController.java\nindex 56b0b7b2417..6b777ffb363 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/14/UpdateController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler/14/UpdateController.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.rest.controller;\n \n import io.swagger.annotations.ApiOperation;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/14/UpdateController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/intellij/14/UpdateController.java\nindex 56b0b7b2417..19a18238086 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/14/UpdateController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/intellij/14/UpdateController.java\n@@ -6,15 +6,16 @@\n  * to you under the Apache License, Version 2.0 (the\n  * \"License\"); you may not use this file except in compliance\n  * with the License.  You may obtain a copy of the License at\n- *\n- *     http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.rest.controller;\n \n import io.swagger.annotations.ApiOperation;\n@@ -44,8 +45,8 @@ public class UpdateController {\n   @ApiResponse(message = \"Nothing\", code = 200)\n   @RequestMapping(value = \"/patch\", method = RequestMethod.PATCH)\n   ResponseEntity<Void> patch(\n-          final @ApiParam(name = \"request\", value = \"Patch request\", required = true)\n-                @RequestBody\n+      final @ApiParam(name = \"request\", value = \"Patch request\", required = true)\n+      @RequestBody\n           PatchRequest request\n   ) throws RestException {\n     try {\n@@ -60,8 +61,8 @@ public class UpdateController {\n   @ApiResponse(message = \"Nothing\", code = 200)\n   @RequestMapping(value = \"/replace\", method = RequestMethod.POST)\n   ResponseEntity<Void> replace(\n-          final @ApiParam(name = \"request\", value = \"Replacement request\", required = true)\n-                @RequestBody\n+      final @ApiParam(name = \"request\", value = \"Replacement request\", required = true)\n+      @RequestBody\n           ReplaceRequest request\n   ) throws RestException {\n     service.replace(request);\n",
            "diff_size": 8
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Annotation 'ApiResponse' have incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Annotation 'RequestMapping' have incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'PatchRequest' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "Annotation 'ApiResponse' have incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "Annotation 'RequestMapping' have incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 175).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "'ReplaceRequest' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/14/UpdateController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/naturalize/14/UpdateController.java\nindex 56b0b7b2417..23445edbd89 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/14/UpdateController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/naturalize/14/UpdateController.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.rest.controller;\n \n import io.swagger.annotations.ApiOperation;\n@@ -40,14 +41,16 @@ public class UpdateController {\n   @Autowired\n   private UpdateService service;\n \n-  @ApiOperation(value = \"Update a document with a patch\")\n-  @ApiResponse(message = \"Nothing\", code = 200)\n-  @RequestMapping(value = \"/patch\", method = RequestMethod.PATCH)\n-  ResponseEntity<Void> patch(\n-          final @ApiParam(name = \"request\", value = \"Patch request\", required = true)\n-                @RequestBody\n-          PatchRequest request\n-  ) throws RestException {\n+  @ApiOperation(value = \"Update a document with a patch\"\n+    )\n+\n+@ApiResponse(message = \"Nothing\", code = 200\n+    )\n+\n+@RequestMapping(value = \"/patch\", method = RequestMethod.PATCH) ResponseEntity<Void> patch(final @ApiParam(name = \"request\", value = \"Patch request\", required = true)\n+\n+@RequestBody\n+PatchRequest request) throws RestException {\n     try {\n       service.patch(request);\n     } catch (OriginalNotFoundException e) {\n@@ -56,15 +59,17 @@ public class UpdateController {\n     return new ResponseEntity<>(HttpStatus.OK);\n   }\n \n-  @ApiOperation(value = \"Replace a document with a full replacement\")\n-  @ApiResponse(message = \"Nothing\", code = 200)\n-  @RequestMapping(value = \"/replace\", method = RequestMethod.POST)\n-  ResponseEntity<Void> replace(\n-          final @ApiParam(name = \"request\", value = \"Replacement request\", required = true)\n-                @RequestBody\n-          ReplaceRequest request\n-  ) throws RestException {\n+  @ApiOperation(value = \"Replace a document with a full replacement\"\n+    )\n+\n+@ApiResponse(message = \"Nothing\", code = 200\n+    )\n+\n+@RequestMapping(value = \"/replace\", method = RequestMethod.POST) ResponseEntity<Void> replace(final @ApiParam(name = \"request\", value = \"Replacement request\", required = true)\n+\n+@RequestBody\n+ReplaceRequest request) throws RestException {\n     service.replace(request);\n     return new ResponseEntity<>(HttpStatus.OK);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "18",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Annotation 'RequestMapping' should be alone on line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "36",
                    "column": "33",
                    "severity": "warning",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'code' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "warning",
                    "message": "Annotation 'RequestMapping' have incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'method' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'required' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "'@' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'code' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Annotation 'RequestMapping' have incorrect indentation level 4, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.annotation.AnnotationLocationCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'method' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'required' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'@' has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/14/UpdateController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/codebuff/14/UpdateController.java\nindex 56b0b7b2417..c824f7cc407 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/14/UpdateController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/codebuff/14/UpdateController.java\n@@ -33,21 +33,21 @@ import org.springframework.web.bind.annotation.RequestMapping;\n import org.springframework.web.bind.annotation.RequestMethod;\n import org.springframework.web.bind.annotation.RestController;\n \n-@RestController\n-@RequestMapping(\"/api/v1/update\")\n+@RestController @RequestMapping( \"/api/v1/update\")\n public class UpdateController {\n \n-  @Autowired\n-  private UpdateService service;\n-\n+  @Autowired private UpdateService service;\n   @ApiOperation(value = \"Update a document with a patch\")\n-  @ApiResponse(message = \"Nothing\", code = 200)\n-  @RequestMapping(value = \"/patch\", method = RequestMethod.PATCH)\n-  ResponseEntity<Void> patch(\n-          final @ApiParam(name = \"request\", value = \"Patch request\", required = true)\n-                @RequestBody\n-          PatchRequest request\n-  ) throws RestException {\n+  @ApiResponse(message = \"Nothing\",\n+code = 200\n+  ) @RequestMapping(value = \"/patch\",\n+method = RequestMethod.PATCH\n+    ) ResponseEntity<Void> patch(final @ApiParam(name = \"request\",\n+value = \"Patch request\",\n+required = true\n+                                       )\n+\n+@RequestBody PatchRequest request) throws RestException {\n     try {\n       service.patch(request);\n     } catch (OriginalNotFoundException e) {\n@@ -57,14 +57,17 @@ public class UpdateController {\n   }\n \n   @ApiOperation(value = \"Replace a document with a full replacement\")\n-  @ApiResponse(message = \"Nothing\", code = 200)\n-  @RequestMapping(value = \"/replace\", method = RequestMethod.POST)\n-  ResponseEntity<Void> replace(\n-          final @ApiParam(name = \"request\", value = \"Replacement request\", required = true)\n-                @RequestBody\n-          ReplaceRequest request\n-  ) throws RestException {\n+  @ApiResponse(message = \"Nothing\",\n+code = 200\n+  ) @RequestMapping(value = \"/replace\",\n+method = RequestMethod.POST\n+    ) ResponseEntity<Void> replace(final @ApiParam(name = \"request\",\n+value = \"Replacement request\",\n+required = true\n+                                         )\n+\n+@RequestBody ReplaceRequest request) throws RestException {\n     service.replace(request);\n     return new ResponseEntity<>(HttpStatus.OK);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/14/UpdateController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_random/14/UpdateController.java\nindex 56b0b7b2417..6b777ffb363 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/14/UpdateController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_random/14/UpdateController.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.rest.controller;\n \n import io.swagger.annotations.ApiOperation;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/14/UpdateController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_three_grams/14/UpdateController.java\nindex 56b0b7b2417..6b777ffb363 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/errored/1/14/UpdateController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-metron/styler_three_grams/14/UpdateController.java\n@@ -15,6 +15,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.apache.metron.rest.controller;\n \n import io.swagger.annotations.ApiOperation;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
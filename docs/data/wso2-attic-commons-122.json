{
    "project_name": "wso2-attic-commons",
    "error_id": "122",
    "information": {
        "errors": [
            {
                "line": "199",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 135).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        serviceClient.engageModule(\"rampart\");\n\toptions.setProperty(\n                    RampartMessageData.KEY_RAMPART_POLICY, loadPolicy(\"./../../repository/samples/resources/policy/chb_policy_1.xml\"));\n        options.setUserName(uid);\n        options.setPassword(pwd);\n        serviceClient.setOptions(options);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/122/StockQuoteSecClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/122/StockQuoteSecClient.java\nindex daf13bf3e70..63ac6fbde18 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/122/StockQuoteSecClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler/122/StockQuoteSecClient.java\n@@ -196,8 +196,8 @@ public class StockQuoteSecClient {\n         }\n         serviceClient.engageModule(\"rampart\");\n \toptions.setProperty(\n-                    RampartMessageData.KEY_RAMPART_POLICY, loadPolicy(\"./../../repository/samples/resources/policy/chb_policy_1.xml\"));\n-        options.setUserName(uid);\n+    RampartMessageData.KEY_RAMPART_POLICY, loadPolicy(\"./../../repository/samples/resources/policy/chb_policy_1.xml\"));\n+ options.setUserName(uid);\n         options.setPassword(pwd);\n         serviceClient.setOptions(options);\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/122/StockQuoteSecClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/122/StockQuoteSecClient.java\nindex daf13bf3e70..151cc59242c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/122/StockQuoteSecClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/intellij/122/StockQuoteSecClient.java\n@@ -44,218 +44,219 @@ import java.net.URL;\n  */\n public class StockQuoteSecClient {\n \n-    private static String getProperty(String name, String def) {\n-        String result = System.getProperty(name);\n-        if (result == null || result.length() == 0) {\n-            result = def;\n-        }\n-        return result;\n+  private static String getProperty(String name, String def) {\n+    String result = System.getProperty(name);\n+    if (result == null || result.length() == 0) {\n+      result = def;\n     }\n+    return result;\n+  }\n \n-    public static void main(String[] args) {            \n+  public static void main(String[] args) {\n \n-        try {\n-            executeClient();\n+    try {\n+      executeClient();\n \n-            if (\"placeorder\".equals(InnerStruct.MODE)) {\n-                System.out.println(\"Order placed for \" + InnerStruct.QUANTITY\n-                        + \" shares of stock \" + InnerStruct.SYMBOL\n-                        + \" at a price of $ \" + InnerStruct.PRICE);\n+      if (\"placeorder\".equals(InnerStruct.MODE)) {\n+        System.out.println(\"Order placed for \" + InnerStruct.QUANTITY\n+          + \" shares of stock \" + InnerStruct.SYMBOL\n+          + \" at a price of $ \" + InnerStruct.PRICE);\n+      } else {\n+        if (\"customquote\".equals(InnerStruct.MODE)) {\n+          System.out.println(\"Custom :: Stock price = $\" +\n+            StockQuoteHandler.parseCustomQuoteResponse(InnerStruct.RESULT));\n+        } else if (\"quote\".equals(InnerStruct.MODE)) {\n+          System.out.println(\"Standard :: Stock price = $\" +\n+            StockQuoteHandler.parseStandardQuoteResponse(InnerStruct.RESULT));\n+        } else if (\"dualquote\".equals(InnerStruct.MODE)) {\n+          while (true) {\n+            if (InnerStruct.COMPLETED) {\n+              System.out.println(\"Standard dual channel :: Stock price = $\" +\n+                StockQuoteHandler.parseStandardQuoteResponse(InnerStruct.RESULT));\n+              System.exit(0);\n             } else {\n-                if (\"customquote\".equals(InnerStruct.MODE)) {\n-                    System.out.println(\"Custom :: Stock price = $\" +\n-                            StockQuoteHandler.parseCustomQuoteResponse(InnerStruct.RESULT));\n-                } else if (\"quote\".equals(InnerStruct.MODE)) {\n-                    System.out.println(\"Standard :: Stock price = $\" +\n-                            StockQuoteHandler.parseStandardQuoteResponse(InnerStruct.RESULT));\n-                } else if (\"dualquote\".equals(InnerStruct.MODE)) {\n-                    while (true) {\n-                        if (InnerStruct.COMPLETED) {\n-                            System.out.println(\"Standard dual channel :: Stock price = $\" +\n-                                    StockQuoteHandler.parseStandardQuoteResponse(InnerStruct.RESULT));\n-                            System.exit(0);\n-                        } else {\n-                            Thread.sleep(100);\n-                        }\n-                    }\n-                } else if (\"fullquote\".equals(InnerStruct.MODE)) {\n-                    System.out.println(\"Full :: Average price = $\" +\n-                            StockQuoteHandler.parseFullQuoteResponse(InnerStruct.RESULT));\n-                } else if (\"marketactivity\".equals(InnerStruct.MODE)) {\n-                    System.out.println(\"Activity :: Average price = $\" +\n-                            StockQuoteHandler.parseMarketActivityResponse(InnerStruct.RESULT));\n-                }\n+              Thread.sleep(100);\n             }\n-        } catch (Exception e) {\n-            //e.printStackTrace();\n+          }\n+        } else if (\"fullquote\".equals(InnerStruct.MODE)) {\n+          System.out.println(\"Full :: Average price = $\" +\n+            StockQuoteHandler.parseFullQuoteResponse(InnerStruct.RESULT));\n+        } else if (\"marketactivity\".equals(InnerStruct.MODE)) {\n+          System.out.println(\"Activity :: Average price = $\" +\n+            StockQuoteHandler.parseMarketActivityResponse(InnerStruct.RESULT));\n         }\n+      }\n+    } catch (Exception e) {\n+      //e.printStackTrace();\n     }\n+  }\n \n-    public static OMElement executeTestClient() throws Exception {\n-        executeClient();\n-        return InnerStruct.RESULT;\n-    }\n+  public static OMElement executeTestClient() throws Exception {\n+    executeClient();\n+    return InnerStruct.RESULT;\n+  }\n \n-    public static void executeClient() throws Exception {\n+  public static void executeClient() throws Exception {\n \n-        // defaults\n-        String symbol = getProperty(\"symbol\", \"IBM\");\n-        String mode = getProperty(\"mode\", \"quote\");\n-        String addUrl = getProperty(\"addurl\", null);\n-        String trpUrl = getProperty(\"trpurl\", null);\n-        String prxUrl = getProperty(\"prxurl\", null);\n-        String repo = getProperty(\"repository\", \"client_repo\");\n-        String svcPolicy = getProperty(\"policy\", null);\n-        String rest = getProperty(\"rest\", null);\n-        String wsrm = getProperty(\"wsrm\", null);\n-        String itr = getProperty(\"itr\", \"1\");\n-\tString uid = getProperty(\"uid\", \"admin\");\n-        String pwd = getProperty(\"pwd\", \"admin\");\n+    // defaults\n+    String symbol = getProperty(\"symbol\", \"IBM\");\n+    String mode = getProperty(\"mode\", \"quote\");\n+    String addUrl = getProperty(\"addurl\", null);\n+    String trpUrl = getProperty(\"trpurl\", null);\n+    String prxUrl = getProperty(\"prxurl\", null);\n+    String repo = getProperty(\"repository\", \"client_repo\");\n+    String svcPolicy = getProperty(\"policy\", null);\n+    String rest = getProperty(\"rest\", null);\n+    String wsrm = getProperty(\"wsrm\", null);\n+    String itr = getProperty(\"itr\", \"1\");\n+    String uid = getProperty(\"uid\", \"admin\");\n+    String pwd = getProperty(\"pwd\", \"admin\");\n \n-        double price = 0;\n-        int quantity = 0;\n-        ConfigurationContext configContext = null;\n+    double price = 0;\n+    int quantity = 0;\n+    ConfigurationContext configContext = null;\n \n-        Options options = new Options();\n-        OMElement payload = null;\n-        ServiceClient serviceClient;\n+    Options options = new Options();\n+    OMElement payload = null;\n+    ServiceClient serviceClient;\n \n-        if (repo != null && !\"null\".equals(repo)) {\n-            configContext =\n-                    ConfigurationContextFactory.\n-                            createConfigurationContextFromFileSystem(repo,\n-                                    repo + File.separator + \"conf\" + File.separator + \"axis2.xml\");\n-            serviceClient = new ServiceClient(configContext, null);\n-        } else {\n-            serviceClient = new ServiceClient();\n-        }\n+    if (repo != null && !\"null\".equals(repo)) {\n+      configContext =\n+        ConfigurationContextFactory.\n+          createConfigurationContextFromFileSystem(repo,\n+            repo + File.separator + \"conf\" + File.separator + \"axis2.xml\");\n+      serviceClient = new ServiceClient(configContext, null);\n+    } else {\n+      serviceClient = new ServiceClient();\n+    }\n \n-        if (\"customquote\".equals(mode)) {\n-            payload = StockQuoteHandler.createCustomQuoteRequest(symbol);\n-            options.setAction(\"urn:getQuote\");\n-        } else if (\"fullquote\".equals(mode)) {\n-            payload = StockQuoteHandler.createFullQuoteRequest(symbol);\n-            options.setAction(\"urn:getFullQuote\");\n-        } else if (\"placeorder\".equals(mode)) {\n-            price = getRandom(100, 0.9, true);\n-            quantity = (int) getRandom(10000, 1.0, true);\n-            payload = StockQuoteHandler.createPlaceOrderRequest(price, quantity, symbol);\n-            options.setAction(\"urn:placeOrder\");\n-        } else if (\"marketactivity\".equals(mode)) {\n-            payload = StockQuoteHandler.createMarketActivityRequest();\n-            options.setAction(\"urn:getMarketActivity\");\n-        } else if (\"quote\".equals(mode) || \"dualquote\".equals(mode)) {\n-            payload = StockQuoteHandler.createStandardQuoteRequest(\n-                    symbol, Integer.parseInt(itr));\n-            options.setAction(\"urn:getQuote\");\n-            if (\"dualquote\".equals(mode)) {\n-                serviceClient.engageModule(\"addressing\");\n-                options.setUseSeparateListener(true);\n-            }\n-        }\n+    if (\"customquote\".equals(mode)) {\n+      payload = StockQuoteHandler.createCustomQuoteRequest(symbol);\n+      options.setAction(\"urn:getQuote\");\n+    } else if (\"fullquote\".equals(mode)) {\n+      payload = StockQuoteHandler.createFullQuoteRequest(symbol);\n+      options.setAction(\"urn:getFullQuote\");\n+    } else if (\"placeorder\".equals(mode)) {\n+      price = getRandom(100, 0.9, true);\n+      quantity = (int) getRandom(10000, 1.0, true);\n+      payload = StockQuoteHandler.createPlaceOrderRequest(price, quantity, symbol);\n+      options.setAction(\"urn:placeOrder\");\n+    } else if (\"marketactivity\".equals(mode)) {\n+      payload = StockQuoteHandler.createMarketActivityRequest();\n+      options.setAction(\"urn:getMarketActivity\");\n+    } else if (\"quote\".equals(mode) || \"dualquote\".equals(mode)) {\n+      payload = StockQuoteHandler.createStandardQuoteRequest(\n+        symbol, Integer.parseInt(itr));\n+      options.setAction(\"urn:getQuote\");\n+      if (\"dualquote\".equals(mode)) {\n+        serviceClient.engageModule(\"addressing\");\n+        options.setUseSeparateListener(true);\n+      }\n+    }\n \n-        // set addressing, transport and proxy url\n-        if (addUrl != null && !\"null\".equals(addUrl)) {\n-            serviceClient.engageModule(\"addressing\");\n-            options.setTo(new EndpointReference(addUrl));\n-        }\n-        if (trpUrl != null && !\"null\".equals(trpUrl)) {\n-            options.setProperty(Constants.Configuration.TRANSPORT_URL, trpUrl);\n-        }\n-        if (prxUrl != null && !\"null\".equals(prxUrl)) {\n-            HttpTransportProperties.ProxyProperties proxyProperties =\n-                    new HttpTransportProperties.ProxyProperties();\n-            URL url = new URL(prxUrl);\n-            proxyProperties.setProxyName(url.getHost());\n-            proxyProperties.setProxyPort(url.getPort());\n-            proxyProperties.setUserName(\"\");\n-            proxyProperties.setPassWord(\"\");\n-            proxyProperties.setDomain(\"\");\n-            options.setProperty(HTTPConstants.PROXY, proxyProperties);\n-        }\n+    // set addressing, transport and proxy url\n+    if (addUrl != null && !\"null\".equals(addUrl)) {\n+      serviceClient.engageModule(\"addressing\");\n+      options.setTo(new EndpointReference(addUrl));\n+    }\n+    if (trpUrl != null && !\"null\".equals(trpUrl)) {\n+      options.setProperty(Constants.Configuration.TRANSPORT_URL, trpUrl);\n+    }\n+    if (prxUrl != null && !\"null\".equals(prxUrl)) {\n+      HttpTransportProperties.ProxyProperties proxyProperties =\n+        new HttpTransportProperties.ProxyProperties();\n+      URL url = new URL(prxUrl);\n+      proxyProperties.setProxyName(url.getHost());\n+      proxyProperties.setProxyPort(url.getPort());\n+      proxyProperties.setUserName(\"\");\n+      proxyProperties.setPassWord(\"\");\n+      proxyProperties.setDomain(\"\");\n+      options.setProperty(HTTPConstants.PROXY, proxyProperties);\n+    }\n \n-        // apply any service policies if any\n-        if (svcPolicy != null && !\"null\".equals(svcPolicy) && svcPolicy.length() > 0) {\n-            System.out.println(\"Using WS-Security\");\n-            serviceClient.engageModule(\"addressing\");\n-            serviceClient.engageModule(\"rampart\");\n-            options.setProperty(\n-                    RampartMessageData.KEY_RAMPART_POLICY, loadPolicy(svcPolicy));\n-        }\n+    // apply any service policies if any\n+    if (svcPolicy != null && !\"null\".equals(svcPolicy) && svcPolicy.length() > 0) {\n+      System.out.println(\"Using WS-Security\");\n+      serviceClient.engageModule(\"addressing\");\n+      serviceClient.engageModule(\"rampart\");\n+      options.setProperty(\n+        RampartMessageData.KEY_RAMPART_POLICY, loadPolicy(svcPolicy));\n+    }\n \n-        if (Boolean.parseBoolean(rest)) {\n-            System.out.println(\"Sending as REST\");\n-            options.setProperty(Constants.Configuration.ENABLE_REST, Constants.VALUE_TRUE);\n-        }\n-        if (Boolean.parseBoolean(wsrm)) {\n-            System.out.println(\"Using WS-RM\");\n-            serviceClient.engageModule(\"sandesha2\");\n-            options.setProperty(SandeshaClientConstants.LAST_MESSAGE, Constants.VALUE_TRUE);\n-            options.setProperty(\n-                    SandeshaClientConstants.OFFERED_SEQUENCE_ID, UUIDGenerator.getUUID());\n-        }\n-        serviceClient.engageModule(\"rampart\");\n-\toptions.setProperty(\n-                    RampartMessageData.KEY_RAMPART_POLICY, loadPolicy(\"./../../repository/samples/resources/policy/chb_policy_1.xml\"));\n-        options.setUserName(uid);\n-        options.setPassword(pwd);\n-        serviceClient.setOptions(options);\n+    if (Boolean.parseBoolean(rest)) {\n+      System.out.println(\"Sending as REST\");\n+      options.setProperty(Constants.Configuration.ENABLE_REST, Constants.VALUE_TRUE);\n+    }\n+    if (Boolean.parseBoolean(wsrm)) {\n+      System.out.println(\"Using WS-RM\");\n+      serviceClient.engageModule(\"sandesha2\");\n+      options.setProperty(SandeshaClientConstants.LAST_MESSAGE, Constants.VALUE_TRUE);\n+      options.setProperty(\n+        SandeshaClientConstants.OFFERED_SEQUENCE_ID, UUIDGenerator.getUUID());\n+    }\n+    serviceClient.engageModule(\"rampart\");\n+    options.setProperty(\n+      RampartMessageData.KEY_RAMPART_POLICY,\n+      loadPolicy(\"./../../repository/samples/resources/policy/chb_policy_1.xml\"));\n+    options.setUserName(uid);\n+    options.setPassword(pwd);\n+    serviceClient.setOptions(options);\n \n-        InnerStruct.MODE = mode;\n-        InnerStruct.SYMBOL = symbol;\n-        InnerStruct.PRICE = price;\n-        InnerStruct.QUANTITY = quantity;\n+    InnerStruct.MODE = mode;\n+    InnerStruct.SYMBOL = symbol;\n+    InnerStruct.PRICE = price;\n+    InnerStruct.QUANTITY = quantity;\n \n-        if (\"placeorder\".equals(mode)) {\n-            serviceClient.fireAndForget(payload);\n-            Thread.sleep(5000);\n+    if (\"placeorder\".equals(mode)) {\n+      serviceClient.fireAndForget(payload);\n+      Thread.sleep(5000);\n \n-        } else if (\"dualquote\".equals(mode)) {\n-            serviceClient.sendReceiveNonBlocking(payload, new StockQuoteCallback());\n-        } else {\n-            InnerStruct.RESULT = serviceClient.sendReceive(payload);\n-            if (Boolean.parseBoolean(wsrm)) {\n-                // give some time for RM to terminate normally\n-                Thread.sleep(5000);\n-                if (configContext != null) {\n-                    configContext.getListenerManager().stop();\n-                }\n-                serviceClient.cleanup();\n-                System.exit(0);\n-            }\n+    } else if (\"dualquote\".equals(mode)) {\n+      serviceClient.sendReceiveNonBlocking(payload, new StockQuoteCallback());\n+    } else {\n+      InnerStruct.RESULT = serviceClient.sendReceive(payload);\n+      if (Boolean.parseBoolean(wsrm)) {\n+        // give some time for RM to terminate normally\n+        Thread.sleep(5000);\n+        if (configContext != null) {\n+          configContext.getListenerManager().stop();\n         }\n+        serviceClient.cleanup();\n+        System.exit(0);\n+      }\n+    }\n \n //        try {\n //            if (configContext != null) {\n //                configContext.terminate();\n //            }\n-            // the above statement was used on reccomendation by Chamikara as I remember, but\n-            // since using Axis2 1.3 - this causes some unexpected classloading issue on the\n-            // Axis2 server side - which cannot be described. This using the below as suggested\n-            // by Deepal\n+    // the above statement was used on reccomendation by Chamikara as I remember, but\n+    // since using Axis2 1.3 - this causes some unexpected classloading issue on the\n+    // Axis2 server side - which cannot be described. This using the below as suggested\n+    // by Deepal\n //            serviceClient.cleanup();\n //        } catch (Exception ignore) {\n //        }\n-    }\n+  }\n \n-    public static class InnerStruct {\n-        static String MODE = null;\n-        static String SYMBOL = null;\n-        static int QUANTITY = 0;\n-        static double PRICE = 0;\n-        static boolean COMPLETED = false;\n-        static OMElement RESULT = null;\n-    }\n+  public static class InnerStruct {\n+    static String MODE = null;\n+    static String SYMBOL = null;\n+    static int QUANTITY = 0;\n+    static double PRICE = 0;\n+    static boolean COMPLETED = false;\n+    static OMElement RESULT = null;\n+  }\n \n-    private static Policy loadPolicy(String xmlPath) throws Exception {\n-        StAXOMBuilder builder = new StAXOMBuilder(xmlPath);\n-        return PolicyEngine.getPolicy(builder.getDocumentElement());\n-    }\n+  private static Policy loadPolicy(String xmlPath) throws Exception {\n+    StAXOMBuilder builder = new StAXOMBuilder(xmlPath);\n+    return PolicyEngine.getPolicy(builder.getDocumentElement());\n+  }\n \n-    private static double getRandom(double base, double varience, boolean onlypositive) {\n-        double rand = Math.random();\n-        return (base + ((rand > 0.5 ? 1 : -1) * varience * base * rand))\n-                * (onlypositive ? 1 : (rand > 0.5 ? 1 : -1));\n-    }\n+  private static double getRandom(double base, double varience, boolean onlypositive) {\n+    double rand = Math.random();\n+    return (base + ((rand > 0.5 ? 1 : -1) * varience * base * rand))\n+      * (onlypositive ? 1 : (rand > 0.5 ? 1 : -1));\n+  }\n \n }\n",
            "diff_size": 209
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/122/StockQuoteSecClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/122/StockQuoteSecClient.java\nindex daf13bf3e70..63ac6fbde18 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/122/StockQuoteSecClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_random/122/StockQuoteSecClient.java\n@@ -196,8 +196,8 @@ public class StockQuoteSecClient {\n         }\n         serviceClient.engageModule(\"rampart\");\n \toptions.setProperty(\n-                    RampartMessageData.KEY_RAMPART_POLICY, loadPolicy(\"./../../repository/samples/resources/policy/chb_policy_1.xml\"));\n-        options.setUserName(uid);\n+    RampartMessageData.KEY_RAMPART_POLICY, loadPolicy(\"./../../repository/samples/resources/policy/chb_policy_1.xml\"));\n+ options.setUserName(uid);\n         options.setPassword(pwd);\n         serviceClient.setOptions(options);\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "198",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 143).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/122/StockQuoteSecClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/122/StockQuoteSecClient.java\nindex daf13bf3e70..331e7ee74a1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/errored/1/122/StockQuoteSecClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wso2-attic-commons/styler_three_grams/122/StockQuoteSecClient.java\n@@ -195,9 +195,8 @@ public class StockQuoteSecClient {\n                     SandeshaClientConstants.OFFERED_SEQUENCE_ID, UUIDGenerator.getUUID());\n         }\n         serviceClient.engageModule(\"rampart\");\n-\toptions.setProperty(\n-                    RampartMessageData.KEY_RAMPART_POLICY, loadPolicy(\"./../../repository/samples/resources/policy/chb_policy_1.xml\"));\n-        options.setUserName(uid);\n+\toptions.setProperty(RampartMessageData.KEY_RAMPART_POLICY, loadPolicy(\"./../../repository/samples/resources/policy/chb_policy_1.xml\"));\n+ options.setUserName(uid);\n         options.setPassword(pwd);\n         serviceClient.setOptions(options);\n \n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "952",
    "information": {
        "errors": [
            {
                "line": "138",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n  public void incTrainTest() throws Exception {\n    LOG.info(\"=====================================incTrainTest===================================\");\n    try{\n      String inputPath = \"./src/test/data/lr/a9a.train\";\n      String loadPath = LOCAL_FS + TMP_PATH + \"/model\";",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/952/SgdLRTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/952/SgdLRTest.java\nindex d16d2582ca6..ddcf6f9c955 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/952/SgdLRTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/952/SgdLRTest.java\n@@ -38,9 +38,11 @@ public class SgdLRTest {\n   private static final Log LOG = LogFactory.getLog(SgdLRTest.class);\n   private static String LOCAL_FS = FileSystem.DEFAULT_FS;\n   private static String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n+\n   static {\n     PropertyConfigurator.configure(\"../conf/log4j.properties\");\n   }\n+\n   /**\n    * set parameter values of conf\n    */\n@@ -135,8 +137,9 @@ public class SgdLRTest {\n   }\n \n   public void incTrainTest() throws Exception {\n-    LOG.info(\"=====================================incTrainTest===================================\");\n-    try{\n+    LOG.info(\n+        \"=====================================incTrainTest===================================\");\n+    try {\n       String inputPath = \"./src/test/data/lr/a9a.train\";\n       String loadPath = LOCAL_FS + TMP_PATH + \"/model\";\n       String savePath = LOCAL_FS + TMP_PATH + \"/newmodel\";\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Block comment has incorrect indentation level 0, expected is 2, indentation should be the same level as line 48.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/952/SgdLRTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/952/SgdLRTest.java\nindex d16d2582ca6..567152a3999 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/952/SgdLRTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/952/SgdLRTest.java\n@@ -41,7 +41,8 @@ public class SgdLRTest {\n   static {\n     PropertyConfigurator.configure(\"../conf/log4j.properties\");\n   }\n-  /**\n+\n+/**\n    * set parameter values of conf\n    */\n   @Before\n@@ -136,7 +137,7 @@ public class SgdLRTest {\n \n   public void incTrainTest() throws Exception {\n     LOG.info(\"=====================================incTrainTest===================================\");\n-    try{\n+    try {\n       String inputPath = \"./src/test/data/lr/a9a.train\";\n       String loadPath = LOCAL_FS + TMP_PATH + \"/model\";\n       String savePath = LOCAL_FS + TMP_PATH + \"/newmodel\";\n@@ -185,4 +186,4 @@ public class SgdLRTest {\n       throw x;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/952/SgdLRTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/952/SgdLRTest.java\nindex d16d2582ca6..5c628d1f53c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/952/SgdLRTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/952/SgdLRTest.java\n@@ -33,17 +33,21 @@ import org.junit.Test;\n /**\n  * Gradient descent LR UT.\n  */\n+\n public class SgdLRTest {\n+\n   private Configuration conf = new Configuration();\n   private static final Log LOG = LogFactory.getLog(SgdLRTest.class);\n   private static String LOCAL_FS = FileSystem.DEFAULT_FS;\n   private static String TMP_PATH = System.getProperty(\"java.io.tmpdir\", \"/tmp\");\n+\n   static {\n     PropertyConfigurator.configure(\"../conf/log4j.properties\");\n   }\n   /**\n    * set parameter values of conf\n    */\n+\n   @Before\n   public void setConf() throws Exception {\n     try {\n@@ -78,7 +82,6 @@ public class SgdLRTest {\n       conf.setBoolean(AngelConf.ANGEL_JOB_OUTPUT_PATH_DELETEONEXIST, true);\n       conf.set(AngelConf.ANGEL_JOB_OUTPUT_PATH_DELETEONEXIST, \"true\");\n       conf.setInt(AngelConf.ANGEL_PSAGENT_CACHE_SYNC_TIMEINTERVAL_MS, 100);\n-\n       conf.setBoolean(MLConf.ML_INDEX_GET_ENABLE(), true);\n       // Set data format\n       conf.set(MLConf.ML_DATA_FORMAT(), dataFmt);\n@@ -125,7 +128,6 @@ public class SgdLRTest {\n       conf.set(AngelConf.ANGEL_LOG_PATH, logPath);\n       // Set actionType train\n       conf.set(AngelConf.ANGEL_ACTION_TYPE, MLConf.ANGEL_ML_TRAIN());\n-\n       LRRunner runner = new LRRunner();\n       runner.train(conf);\n     } catch (Exception x) {\n@@ -136,7 +138,7 @@ public class SgdLRTest {\n \n   public void incTrainTest() throws Exception {\n     LOG.info(\"=====================================incTrainTest===================================\");\n-    try{\n+    try {\n       String inputPath = \"./src/test/data/lr/a9a.train\";\n       String loadPath = LOCAL_FS + TMP_PATH + \"/model\";\n       String savePath = LOCAL_FS + TMP_PATH + \"/newmodel\";\n@@ -152,7 +154,6 @@ public class SgdLRTest {\n       conf.set(AngelConf.ANGEL_LOG_PATH, logPath);\n       // Set actionType incremental train\n       conf.set(AngelConf.ANGEL_ACTION_TYPE, MLConf.ANGEL_ML_INC_TRAIN());\n-\n       LRRunner runner = new LRRunner();\n       runner.incTrain(conf);\n     } catch (Exception x) {\n@@ -175,14 +176,12 @@ public class SgdLRTest {\n       conf.set(AngelConf.ANGEL_PREDICT_PATH, predictPath);\n       // Set actionType prediction\n       conf.set(AngelConf.ANGEL_ACTION_TYPE, MLConf.ANGEL_ML_INC_TRAIN());\n-\n       conf.set(AngelConf.ANGEL_ACTION_TYPE, MLConf.ANGEL_ML_PREDICT());\n       LRRunner runner = new LRRunner();\n-\n       runner.predict(conf);\n     } catch (Exception x) {\n       LOG.error(\"run predictTest failed \", x);\n       throw x;\n     }\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/952/SgdLRTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/952/SgdLRTest.java\nindex d16d2582ca6..1bdc3275870 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/952/SgdLRTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/styler_three_grams/952/SgdLRTest.java\n@@ -135,8 +135,8 @@ public class SgdLRTest {\n   }\n \n   public void incTrainTest() throws Exception {\n-    LOG.info(\"=====================================incTrainTest===================================\");\n-    try{\n+    LOG.info( \"=====================================incTrainTest===================================\" )\n+        ;try{\n       String inputPath = \"./src/test/data/lr/a9a.train\";\n       String loadPath = LOCAL_FS + TMP_PATH + \"/model\";\n       String savePath = LOCAL_FS + TMP_PATH + \"/newmodel\";\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
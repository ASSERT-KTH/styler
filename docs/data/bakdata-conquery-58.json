{
    "project_name": "bakdata-conquery",
    "error_id": "58",
    "information": {
        "errors": [
            {
                "line": "151",
                "column": "9",
                "severity": "warning",
                "message": "'}' at column 3 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "\t\t\tsearch.put(key, quick);\n\t\t\tlog.info(\"Processed reference list '{}' in {} ms\", file.getAbsolutePath(), System.currentTimeMillis() - time);\n\t\t} catch (Exception e) {\n\t\t\tlog.error(\"Failed to process reference list '\"+file.getAbsolutePath()+\"'\", e);\n\t\t}\n\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/58/FilterSearch.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/58/FilterSearch.java\nindex 95944ea5e7e..217054f9488 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/58/FilterSearch.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/58/FilterSearch.java\n@@ -148,7 +148,8 @@ public class FilterSearch {\n \t\t\tfilter.setSourceSearch(quick);\n \t\t\tsearch.put(key, quick);\n \t\t\tlog.info(\"Processed reference list '{}' in {} ms\", file.getAbsolutePath(), System.currentTimeMillis() - time);\n-\t\t} catch (Exception e) {\n+\t\t}\n+\t\tcatch (Exception e) {\n \t\t\tlog.error(\"Failed to process reference list '\"+file.getAbsolutePath()+\"'\", e);\n \t\t}\n \t}\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "column": "17",
                    "severity": "warning",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "84",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "91",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "105",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "138",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "139",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "140",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "142",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "144",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "145",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "146",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "147",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "148",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "151",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "152",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "153",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "154",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "155",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "156",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "157",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/58/FilterSearch.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/58/FilterSearch.java\nindex 95944ea5e7e..175bd89b0d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/58/FilterSearch.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/58/FilterSearch.java\n@@ -26,130 +26,133 @@ import static com.zigurs.karlis.utils.search.QuickSearch.UnmatchedPolicy.IGNORE;\n @Slf4j\n public class FilterSearch {\n \n-\t/**\n-\t * Enum to specify a scorer function in {@link QuickSearch}. Used for resolvers in {@link AbstractSelectFilter}.\n-\t */\n-\t@AllArgsConstructor\n-\t@Getter\n-\tpublic enum FilterSearchType {\n-\t\t/**\n-\t\t * String must start with search-String.\n-\t\t */\n-\t\tPREFIX {\n-\t\t\t@Override\n-\t\t\tdouble score(String candidate, String keyword) {\n-\t\t\t\t/* Sort ascending by length of match */\n-\t\t\t\tif (keyword.startsWith(candidate))\n-\t\t\t\t\treturn 1d / (double) candidate.length();\n-\t\t\t\telse\n-\t\t\t\t\treturn -1d;\n-\t\t\t}\n-\t\t},\n-\t\t/**\n-\t\t * Search is contained somewhere in string.\n-\t\t */\n-\t\tCONTAINS {\n-\t\t\t@Override\n-\t\t\tdouble score(String candidate, String keyword) {\n-\t\t\t\t/* 0...1 depending on the length ratio */\n-\t\t\t\tdouble matchScore = (double) candidate.length() / (double) keyword.length();\n-\n-\t\t\t\t/* boost by 1 if matches start of keyword */\n-\t\t\t\tif (keyword.startsWith(candidate))\n-\t\t\t\t\treturn matchScore + 1.0;\n-\n-\t\t\t\treturn matchScore;\n-\t\t\t}\n-\t\t},\n-\t\t/**\n-\t\t * Values must be exactly the same.\n-\t\t */\n-\t\tEXACT {\n-\t\t\t@Override\n-\t\t\tdouble score(String candidate, String keyword) {\n-\t\t\t\t/* Only allow exact matches through (returning < 0.0 means skip this candidate) */\n-\t\t\t\treturn candidate.length() == keyword.length() ? 1.0 : -1.0;\n-\t\t\t}\n-\t\t};\n-\n-\t\t/**\n-\t\t * Search function. See {@link QuickSearch#DEFAULT_MATCH_SCORER}.\n-\t\t * @param candidate potential match.\n-\t\t * @param match search String.\n-\t\t * @return Value > 0 increases relevance of string (also used for ordering results). < 0 removes string.\n-\t\t */\n-\t\tabstract double score(String candidate, String match);\n-\t}\n-\n-\tprivate static Map<String, QuickSearch<FilterSearchItem>> search = new HashMap<>();\n-\n-\tpublic static ExecutorService init(Namespaces namespaces, Collection<Dataset> datasets) {\n-\t\tExecutorService executor = Executors.newSingleThreadExecutor();\n-\t\tdatasets\n-\t\t\t.stream()\n-\t\t\t.flatMap(ds -> namespaces.get(ds.getId()).getStorage().getAllConcepts().stream())\n-\t\t\t.flatMap(c -> c.getConnectors().stream())\n-\t\t\t.flatMap(co -> co.collectAllFilters().stream())\n-\t\t\t.filter(f -> f instanceof AbstractSelectFilter && f.getTemplate() != null)\n-\t\t\t.forEach(f -> executor.submit(()->createSourceSearch((AbstractSelectFilter<?>) f)));\n-\t\texecutor.shutdown();\n-\t\treturn executor;\n-\t}\n-\n-\tpublic static void createSourceSearch(AbstractSelectFilter<?> filter) {\n-\t\tFilterTemplate template = filter.getTemplate();\n-\n-\t\tList<String> columns = new ArrayList<>(template.getColumns());\n-\t\tcolumns.add(template.getColumnValue());\n-\n-\t\tFile file = new File(template.getFilePath());\n-\t\tString key = String.join(\"_\", columns) + \"_\" + file.getName();\n-\n-\t\tQuickSearch<FilterSearchItem> quick = search.get(key);\n-\t\tif (quick != null) {\n-\t\t\tlog.info(\"Reference list '{}' already exists ...\", file.getAbsolutePath());\n-\t\t\tfilter.setSourceSearch(quick);\n-\t\t\treturn;\n-\t\t}\n-\n-\t\tlog.info(\"Processing reference list '{}' ...\", file.getAbsolutePath());\n-\t\tlong time = System.currentTimeMillis();\n-\n-\t\tquick = new QuickSearch.QuickSearchBuilder()\n-\t\t\t.withUnmatchedPolicy(IGNORE)\n-\t\t\t.withMergePolicy(INTERSECTION)\n-\t\t\t.withKeywordMatchScorer(filter.getSearchType()::score)\n-\t\t\t.build();\n-\n-\t\ttry {\n-\t\t\tCsvParser parser = CsvParsing.createParser();\n-\t\t\tIterator<String[]> it = ((Iterable<String[]>) parser.iterate(In.file(file).withUTF8().asReader())).iterator();\n-\t\t\tString[] header = it.next();\n-\n-\t\t\tfor (String[] row : (Iterable<String[]>) (() -> it)) {\n-\t\t\t\tFilterSearchItem item = new FilterSearchItem();\n-\n-\t\t\t\tfor (int i = 0; i < header.length; i++) {\n-\t\t\t\t\tString column = header[i];\n-\t\t\t\t\tif (columns.contains(column)) {\n-\t\t\t\t\t\titem.setLabel(template.getValue());\n-\t\t\t\t\t\titem.setOptionValue(template.getOptionValue());\n-\t\t\t\t\t\titem.getTemplateValues().put(column, row[i]);\n-\n-\t\t\t\t\t\tquick.addItem(item, row[i]);\n-\n-\t\t\t\t\t\tif (column.equals(template.getColumnValue())) {\n-\t\t\t\t\t\t\titem.setValue(row[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\tfilter.setSourceSearch(quick);\n-\t\t\tsearch.put(key, quick);\n-\t\t\tlog.info(\"Processed reference list '{}' in {} ms\", file.getAbsolutePath(), System.currentTimeMillis() - time);\n-\t\t} catch (Exception e) {\n-\t\t\tlog.error(\"Failed to process reference list '\"+file.getAbsolutePath()+\"'\", e);\n-\t\t}\n-\t}\n+    /**\n+     * Enum to specify a scorer function in {@link QuickSearch}. Used for resolvers in {@link AbstractSelectFilter}.\n+     */\n+    @AllArgsConstructor\n+    @Getter\n+    public enum FilterSearchType {\n+        /**\n+         * String must start with search-String.\n+         */\n+        PREFIX {\n+            @Override\n+            double score(String candidate, String keyword) {\n+                /* Sort ascending by length of match */\n+                if (keyword.startsWith(candidate)) {\n+                    return 1d / (double) candidate.length();\n+                } else {\n+                    return -1d;\n+                }\n+            }\n+        },\n+        /**\n+         * Search is contained somewhere in string.\n+         */\n+        CONTAINS {\n+            @Override\n+            double score(String candidate, String keyword) {\n+                /* 0...1 depending on the length ratio */\n+                double matchScore = (double) candidate.length() / (double) keyword.length();\n+\n+                /* boost by 1 if matches start of keyword */\n+                if (keyword.startsWith(candidate)) {\n+                    return matchScore + 1.0;\n+                }\n+\n+                return matchScore;\n+            }\n+        },\n+        /**\n+         * Values must be exactly the same.\n+         */\n+        EXACT {\n+            @Override\n+            double score(String candidate, String keyword) {\n+                /* Only allow exact matches through (returning < 0.0 means skip this candidate) */\n+                return candidate.length() == keyword.length() ? 1.0 : -1.0;\n+            }\n+        };\n+\n+        /**\n+         * Search function. See {@link QuickSearch#DEFAULT_MATCH_SCORER}.\n+         *\n+         * @param candidate potential match.\n+         * @param match     search String.\n+         * @return Value > 0 increases relevance of string (also used for ordering results). < 0 removes string.\n+         */\n+        abstract double score(String candidate, String match);\n+    }\n+\n+    private static Map<String, QuickSearch<FilterSearchItem>> search = new HashMap<>();\n+\n+    public static ExecutorService init(Namespaces namespaces, Collection<Dataset> datasets) {\n+        ExecutorService executor = Executors.newSingleThreadExecutor();\n+        datasets\n+            .stream()\n+            .flatMap(ds -> namespaces.get(ds.getId()).getStorage().getAllConcepts().stream())\n+            .flatMap(c -> c.getConnectors().stream())\n+            .flatMap(co -> co.collectAllFilters().stream())\n+            .filter(f -> f instanceof AbstractSelectFilter && f.getTemplate() != null)\n+            .forEach(f -> executor.submit(() -> createSourceSearch((AbstractSelectFilter<?>) f)));\n+        executor.shutdown();\n+        return executor;\n+    }\n+\n+    public static void createSourceSearch(AbstractSelectFilter<?> filter) {\n+        FilterTemplate template = filter.getTemplate();\n+\n+        List<String> columns = new ArrayList<>(template.getColumns());\n+        columns.add(template.getColumnValue());\n+\n+        File file = new File(template.getFilePath());\n+        String key = String.join(\"_\", columns) + \"_\" + file.getName();\n+\n+        QuickSearch<FilterSearchItem> quick = search.get(key);\n+        if (quick != null) {\n+            log.info(\"Reference list '{}' already exists ...\", file.getAbsolutePath());\n+            filter.setSourceSearch(quick);\n+            return;\n+        }\n+\n+        log.info(\"Processing reference list '{}' ...\", file.getAbsolutePath());\n+        long time = System.currentTimeMillis();\n+\n+        quick = new QuickSearch.QuickSearchBuilder()\n+            .withUnmatchedPolicy(IGNORE)\n+            .withMergePolicy(INTERSECTION)\n+            .withKeywordMatchScorer(filter.getSearchType()::score)\n+            .build();\n+\n+        try {\n+            CsvParser parser = CsvParsing.createParser();\n+            Iterator<String[]> it = ((Iterable<String[]>) parser.iterate(In.file(file).withUTF8().asReader())).iterator();\n+            String[] header = it.next();\n+\n+            for (String[] row : (Iterable<String[]>) (() -> it)) {\n+                FilterSearchItem item = new FilterSearchItem();\n+\n+                for (int i = 0; i < header.length; i++) {\n+                    String column = header[i];\n+                    if (columns.contains(column)) {\n+                        item.setLabel(template.getValue());\n+                        item.setOptionValue(template.getOptionValue());\n+                        item.getTemplateValues().put(column, row[i]);\n+\n+                        quick.addItem(item, row[i]);\n+\n+                        if (column.equals(template.getColumnValue())) {\n+                            item.setValue(row[i]);\n+                        }\n+                    }\n+                }\n+            }\n+\n+            filter.setSourceSearch(quick);\n+            search.put(key, quick);\n+            log.info(\"Processed reference list '{}' in {} ms\", file.getAbsolutePath(), System.currentTimeMillis() - time);\n+        } catch (Exception e) {\n+            log.error(\"Failed to process reference list '\" + file.getAbsolutePath() + \"'\", e);\n+        }\n+    }\n }\n",
            "diff_size": 129
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "54",
                    "column": "17",
                    "severity": "warning",
                    "message": "Block comment has incorrect indentation level 4, expected is 0, indentation should be the same level as line 56.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                },
                {
                    "line": "56",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 0, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "column": "1",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "152",
                    "column": "1",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/58/FilterSearch.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/58/FilterSearch.java\nindex 95944ea5e7e..e2c3a401da2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/58/FilterSearch.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/58/FilterSearch.java\n@@ -52,7 +52,8 @@ public class FilterSearch {\n \t\t\t@Override\n \t\t\tdouble score(String candidate, String keyword) {\n \t\t\t\t/* 0...1 depending on the length ratio */\n-\t\t\t\tdouble matchScore = (double) candidate.length() / (double) keyword.length();\n+\n+double matchScore = (double) candidate.length() / (double) keyword.length();\n \n \t\t\t\t/* boost by 1 if matches start of keyword */\n \t\t\t\tif (keyword.startsWith(candidate))\n@@ -120,8 +121,7 @@ public class FilterSearch {\n \t\t\t.withMergePolicy(INTERSECTION)\n \t\t\t.withKeywordMatchScorer(filter.getSearchType()::score)\n \t\t\t.build();\n-\n-\t\ttry {\n+try {\n \t\t\tCsvParser parser = CsvParsing.createParser();\n \t\t\tIterator<String[]> it = ((Iterable<String[]>) parser.iterate(In.file(file).withUTF8().asReader())).iterator();\n \t\t\tString[] header = it.next();\n@@ -148,8 +148,9 @@ public class FilterSearch {\n \t\t\tfilter.setSourceSearch(quick);\n \t\t\tsearch.put(key, quick);\n \t\t\tlog.info(\"Processed reference list '{}' in {} ms\", file.getAbsolutePath(), System.currentTimeMillis() - time);\n-\t\t} catch (Exception e) {\n+\t\t}\n+catch (Exception e) {\n \t\t\tlog.error(\"Failed to process reference list '\"+file.getAbsolutePath()+\"'\", e);\n \t\t}\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "column": "2",
                    "severity": "warning",
                    "message": "'enum def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "column": "2",
                    "severity": "warning",
                    "message": "'enum def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "column": "5",
                    "severity": "warning",
                    "message": "'else' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "column": "6",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "77",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Comment indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "80",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "81",
                    "column": "2",
                    "severity": "warning",
                    "message": "'enum def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "83",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "83",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "85",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "85",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "86",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "87",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "87",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "88",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "88",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "89",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "90",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "90",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "92",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "92",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "93",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "93",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "94",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "94",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "95",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "95",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "96",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "97",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "97",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "98",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "99",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "99",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "100",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "101",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "101",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "102",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "103",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "104",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "106",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "106",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "107",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "107",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "108",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "108",
                    "column": "3",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "109",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "109",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "110",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "111",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "111",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "112",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "112",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "113",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "113",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "114",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "114",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "115",
                    "column": "6",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "116",
                    "column": "6",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "117",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "117",
                    "column": "7",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "118",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "118",
                    "column": "7",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "119",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "119",
                    "column": "7",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "120",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "120",
                    "column": "7",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "121",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "121",
                    "column": "7",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "122",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "122",
                    "column": "8",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 7, expected level should be 28.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "123",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "123",
                    "column": "7",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 6, expected level should be 24.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "124",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "124",
                    "column": "6",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "125",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "125",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "126",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "126",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "127",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "127",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "128",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "128",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "129",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "129",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "130",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "131",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "132",
                    "column": "4",
                    "severity": "warning",
                    "message": "'method call rparen' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "133",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "133",
                    "column": "3",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "134",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "134",
                    "column": "3",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "135",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "135",
                    "column": "4",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "136",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "136",
                    "column": "3",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "137",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "137",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/58/FilterSearch.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/58/FilterSearch.java\nindex 95944ea5e7e..732af8ad794 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/58/FilterSearch.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/58/FilterSearch.java\n@@ -9,7 +9,6 @@ import com.zigurs.karlis.utils.search.QuickSearch;\n import lombok.AllArgsConstructor;\n import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n-\n import java.io.File;\n import java.util.ArrayList;\n import java.util.Collection;\n@@ -19,137 +18,121 @@ import java.util.List;\n import java.util.Map;\n import java.util.concurrent.ExecutorService;\n import java.util.concurrent.Executors;\n-\n import static com.zigurs.karlis.utils.search.QuickSearch.MergePolicy.INTERSECTION;\n import static com.zigurs.karlis.utils.search.QuickSearch.UnmatchedPolicy.IGNORE;\n \n @Slf4j\n public class FilterSearch {\n \n-\t/**\n-\t * Enum to specify a scorer function in {@link QuickSearch}. Used for resolvers in {@link AbstractSelectFilter}.\n-\t */\n-\t@AllArgsConstructor\n-\t@Getter\n-\tpublic enum FilterSearchType {\n-\t\t/**\n-\t\t * String must start with search-String.\n-\t\t */\n-\t\tPREFIX {\n-\t\t\t@Override\n-\t\t\tdouble score(String candidate, String keyword) {\n-\t\t\t\t/* Sort ascending by length of match */\n-\t\t\t\tif (keyword.startsWith(candidate))\n-\t\t\t\t\treturn 1d / (double) candidate.length();\n-\t\t\t\telse\n-\t\t\t\t\treturn -1d;\n-\t\t\t}\n-\t\t},\n-\t\t/**\n-\t\t * Search is contained somewhere in string.\n-\t\t */\n-\t\tCONTAINS {\n-\t\t\t@Override\n-\t\t\tdouble score(String candidate, String keyword) {\n-\t\t\t\t/* 0...1 depending on the length ratio */\n-\t\t\t\tdouble matchScore = (double) candidate.length() / (double) keyword.length();\n-\n-\t\t\t\t/* boost by 1 if matches start of keyword */\n-\t\t\t\tif (keyword.startsWith(candidate))\n-\t\t\t\t\treturn matchScore + 1.0;\n-\n-\t\t\t\treturn matchScore;\n-\t\t\t}\n-\t\t},\n-\t\t/**\n-\t\t * Values must be exactly the same.\n-\t\t */\n-\t\tEXACT {\n-\t\t\t@Override\n-\t\t\tdouble score(String candidate, String keyword) {\n-\t\t\t\t/* Only allow exact matches through (returning < 0.0 means skip this candidate) */\n-\t\t\t\treturn candidate.length() == keyword.length() ? 1.0 : -1.0;\n-\t\t\t}\n-\t\t};\n-\n-\t\t/**\n-\t\t * Search function. See {@link QuickSearch#DEFAULT_MATCH_SCORER}.\n-\t\t * @param candidate potential match.\n-\t\t * @param match search String.\n-\t\t * @return Value > 0 increases relevance of string (also used for ordering results). < 0 removes string.\n-\t\t */\n-\t\tabstract double score(String candidate, String match);\n-\t}\n-\n-\tprivate static Map<String, QuickSearch<FilterSearchItem>> search = new HashMap<>();\n-\n-\tpublic static ExecutorService init(Namespaces namespaces, Collection<Dataset> datasets) {\n-\t\tExecutorService executor = Executors.newSingleThreadExecutor();\n-\t\tdatasets\n-\t\t\t.stream()\n-\t\t\t.flatMap(ds -> namespaces.get(ds.getId()).getStorage().getAllConcepts().stream())\n-\t\t\t.flatMap(c -> c.getConnectors().stream())\n-\t\t\t.flatMap(co -> co.collectAllFilters().stream())\n-\t\t\t.filter(f -> f instanceof AbstractSelectFilter && f.getTemplate() != null)\n-\t\t\t.forEach(f -> executor.submit(()->createSourceSearch((AbstractSelectFilter<?>) f)));\n-\t\texecutor.shutdown();\n-\t\treturn executor;\n-\t}\n-\n-\tpublic static void createSourceSearch(AbstractSelectFilter<?> filter) {\n-\t\tFilterTemplate template = filter.getTemplate();\n-\n-\t\tList<String> columns = new ArrayList<>(template.getColumns());\n-\t\tcolumns.add(template.getColumnValue());\n-\n-\t\tFile file = new File(template.getFilePath());\n-\t\tString key = String.join(\"_\", columns) + \"_\" + file.getName();\n-\n-\t\tQuickSearch<FilterSearchItem> quick = search.get(key);\n-\t\tif (quick != null) {\n-\t\t\tlog.info(\"Reference list '{}' already exists ...\", file.getAbsolutePath());\n-\t\t\tfilter.setSourceSearch(quick);\n-\t\t\treturn;\n-\t\t}\n-\n-\t\tlog.info(\"Processing reference list '{}' ...\", file.getAbsolutePath());\n-\t\tlong time = System.currentTimeMillis();\n-\n-\t\tquick = new QuickSearch.QuickSearchBuilder()\n-\t\t\t.withUnmatchedPolicy(IGNORE)\n-\t\t\t.withMergePolicy(INTERSECTION)\n-\t\t\t.withKeywordMatchScorer(filter.getSearchType()::score)\n-\t\t\t.build();\n-\n-\t\ttry {\n-\t\t\tCsvParser parser = CsvParsing.createParser();\n-\t\t\tIterator<String[]> it = ((Iterable<String[]>) parser.iterate(In.file(file).withUTF8().asReader())).iterator();\n-\t\t\tString[] header = it.next();\n-\n-\t\t\tfor (String[] row : (Iterable<String[]>) (() -> it)) {\n-\t\t\t\tFilterSearchItem item = new FilterSearchItem();\n-\n-\t\t\t\tfor (int i = 0; i < header.length; i++) {\n-\t\t\t\t\tString column = header[i];\n-\t\t\t\t\tif (columns.contains(column)) {\n-\t\t\t\t\t\titem.setLabel(template.getValue());\n-\t\t\t\t\t\titem.setOptionValue(template.getOptionValue());\n-\t\t\t\t\t\titem.getTemplateValues().put(column, row[i]);\n-\n-\t\t\t\t\t\tquick.addItem(item, row[i]);\n-\n-\t\t\t\t\t\tif (column.equals(template.getColumnValue())) {\n-\t\t\t\t\t\t\titem.setValue(row[i]);\n-\t\t\t\t\t\t}\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\n-\t\t\tfilter.setSourceSearch(quick);\n-\t\t\tsearch.put(key, quick);\n-\t\t\tlog.info(\"Processed reference list '{}' in {} ms\", file.getAbsolutePath(), System.currentTimeMillis() - time);\n-\t\t} catch (Exception e) {\n-\t\t\tlog.error(\"Failed to process reference list '\"+file.getAbsolutePath()+\"'\", e);\n-\t\t}\n-\t}\n-}\n+ /**\n+  * Enum to specify a scorer function in {@link QuickSearch}. Used for resolvers in {@link AbstractSelectFilter}.\n+  */\n+\n+ @AllArgsConstructor @Getter\n+ public enum FilterSearchType {\n+  /**\n+   * String must start with search-String.\n+   */\n+  PREFIX {\n+\n+   @Override\n+   double score(String candidate, String keyword) {\n+    /* Sort ascending by length of match */\n+    if(keyword.startsWith(candidate)) return 1d / (double)candidate.length();\n+    else return -1d;\n+   }\n+  },\n+  /**\n+   * Search is contained somewhere in string.\n+   */\n+  CONTAINS {\n+\n+   @Override\n+   double score(String candidate, String keyword) {\n+    /* 0...1 depending on the length ratio */\n+    double matchScore = (double)candidate.length() / (double)keyword.length();\n+\n+    /* boost by 1 if matches start of keyword */\n+    if (keyword.startsWith(candidate))\n+     return matchScore+1.0;\n+    return matchScore;\n+   }\n+  },\n+  /**\n+   * Values must be exactly the same.\n+   */\n+  EXACT {\n+\n+   @Override\n+   double score(String candidate, String keyword) {\n+    /* Only allow exact matches through (returning < 0.0 means skip this candidate) */\n+    return candidate.length() == keyword.length() ? 1.0 : -1.0;\n+   }\n+  };\n+\n+  /**\n+   * Search function. See {@link QuickSearch#DEFAULT_MATCH_SCORER}.\n+   * @param candidate potential match.\n+   * @param match search String.\n+   * @return Value > 0 increases relevance of string (also used for ordering results). < 0 removes string.\n+   */\n+\n+  abstract double score(String candidate, String match);\n+ }\n+\n+ private static Map<String, QuickSearch<FilterSearchItem>> search = new HashMap<>();\n+\n+ public static ExecutorService init(Namespaces namespaces, Collection<Dataset> datasets) {\n+  ExecutorService executor = Executors.newSingleThreadExecutor();\n+  datasets.stream().flatMap(ds -> namespaces.get(ds.getId()).getStorage().getAllConcepts().stream()).flatMap(c -> c.getConnectors().stream()).flatMap(co -> co.collectAllFilters().stream()).filter(f -> f instanceof AbstractSelectFilter && f.getTemplate() != null).forEach(f -> executor.submit(()-> createSourceSearch((AbstractSelectFilter<?>)f)));\n+  executor.shutdown();\n+  return executor;\n+ }\n+\n+ public static void createSourceSearch(AbstractSelectFilter<?> filter) {\n+  FilterTemplate template = filter.getTemplate();\n+  List<String> columns = new ArrayList<>(template.getColumns());\n+  columns.add(template.getColumnValue());\n+  File file = new File(template.getFilePath());\n+  String key = String.join(\"_\", columns)+\"_\"+file.getName();\n+  QuickSearch<FilterSearchItem> quick = search.get(key);\n+  if (quick != null) {\n+   log.info(\"Reference list '{}' already exists ...\", file.getAbsolutePath());\n+   filter.setSourceSearch(quick);\n+   return;\n+  }\n+  log.info(\"Processing reference list '{}' ...\", file.getAbsolutePath());\n+\n+  long time = System.currentTimeMillis();\n+  quick = new QuickSearch.QuickSearchBuilder().withUnmatchedPolicy(IGNORE).withMergePolicy(INTERSECTION).withKeywordMatchScorer(filter.getSearchType()::score).build();\n+  try {\n+   CsvParser parser = CsvParsing.createParser();\n+   Iterator<String[]> it = ((Iterable<String[]>)parser.iterate(In.file(file).withUTF8().asReader())).iterator();\n+   String[] header = it.next();\n+   for(String[] row : (Iterable<String[]>)(()-> it)) {\n+    FilterSearchItem item = new FilterSearchItem();\n+    for(int i = 0;i<header.length;i++) {\n+     String column = header[i];\n+     if (columns.contains(column)) {\n+      item.setLabel(template.getValue());\n+      item.setOptionValue(template.getOptionValue());\n+      item.getTemplateValues().put(column, row[i]);\n+      quick.addItem(item, row[i]);\n+      if (column.equals(template.getColumnValue())) {\n+       item.setValue(row[i]);\n+      }\n+     }\n+    }\n+   }\n+   filter.setSourceSearch(quick);\n+   search.put(key, quick);\n+   log.info(\"Processed reference list '{}' in {} ms\",\n+            file.getAbsolutePath(),\n+            System.currentTimeMillis()- time\n+   );\n+  }\n+  catch (Exception e) {\n+   log.error(\"Failed to process reference list '\"+file.getAbsolutePath() +\"'\", e);\n+  }\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 129
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/58/FilterSearch.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/58/FilterSearch.java\nindex 95944ea5e7e..217054f9488 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/58/FilterSearch.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/58/FilterSearch.java\n@@ -148,7 +148,8 @@ public class FilterSearch {\n \t\t\tfilter.setSourceSearch(quick);\n \t\t\tsearch.put(key, quick);\n \t\t\tlog.info(\"Processed reference list '{}' in {} ms\", file.getAbsolutePath(), System.currentTimeMillis() - time);\n-\t\t} catch (Exception e) {\n+\t\t}\n+\t\tcatch (Exception e) {\n \t\t\tlog.error(\"Failed to process reference list '\"+file.getAbsolutePath()+\"'\", e);\n \t\t}\n \t}\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/58/FilterSearch.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/58/FilterSearch.java\nindex 95944ea5e7e..217054f9488 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/58/FilterSearch.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/58/FilterSearch.java\n@@ -148,7 +148,8 @@ public class FilterSearch {\n \t\t\tfilter.setSourceSearch(quick);\n \t\t\tsearch.put(key, quick);\n \t\t\tlog.info(\"Processed reference list '{}' in {} ms\", file.getAbsolutePath(), System.currentTimeMillis() - time);\n-\t\t} catch (Exception e) {\n+\t\t}\n+\t\tcatch (Exception e) {\n \t\t\tlog.error(\"Failed to process reference list '\"+file.getAbsolutePath()+\"'\", e);\n \t\t}\n \t}\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ]
}
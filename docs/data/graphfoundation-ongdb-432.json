{
    "project_name": "graphfoundation-ongdb",
    "error_id": "432",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/432/PlanDescription.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/432/PlanDescription.java\nindex e2e662fcac2..32180317708 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/432/PlanDescription.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/432/PlanDescription.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cypher.internal.javacompat;\n \n \n@@ -28,39 +29,39 @@ import org.neo4j.cypher.ProfilerStatisticsNotReadyException;\n \n /**\n  * Instances describe single execution steps in a Cypher query execution plan\n- *\n+ * <p>\n  * Execution plans form a tree of execution steps.  Each step is described by a PlanDescription object.\n  */\n public interface PlanDescription\n {\n-    /**\n-     * @return descriptive name for this kind of execution step\n-     */\n-    String getName();\n+  /**\n+   * @return descriptive name for this kind of execution step\n+   */\n+  String getName();\n \n-    /**\n-     * Retrieve argument map for the associated execution step\n-     *\n-     * Valid arguments are all Java primitive values, Strings, Arrays of those, and Maps from Strings to\n-     * valid arguments.  Results are guaranteed to be trees (i.e. there are no cyclic dependencies among values)\n-     *\n-     * @return a map containing arguments that describe this execution step in more detail\n-     */\n-    Map<String, Object> getArguments();\n+  /**\n+   * Retrieve argument map for the associated execution step\n+   * <p>\n+   * Valid arguments are all Java primitive values, Strings, Arrays of those, and Maps from Strings to\n+   * valid arguments.  Results are guaranteed to be trees (i.e. there are no cyclic dependencies among values)\n+   *\n+   * @return a map containing arguments that describe this execution step in more detail\n+   */\n+  Map<String, Object> getArguments();\n \n-    /**\n-     * @return list of previous (child) execution step descriptions\n-     */\n-    List<PlanDescription> getChildren();\n+  /**\n+   * @return list of previous (child) execution step descriptions\n+   */\n+  List<PlanDescription> getChildren();\n \n-    /**\n-     * @return true, if ProfilerStatistics are available for this execution step\n-     */\n-    boolean hasProfilerStatistics();\n+  /**\n+   * @return true, if ProfilerStatistics are available for this execution step\n+   */\n+  boolean hasProfilerStatistics();\n \n-    /**\n-     * @return profiler statistics for this execution step iff available\n-     * @throws ProfilerStatisticsNotReadyException iff profiler statistics are not available\n-     */\n-    ProfilerStatistics getProfilerStatistics() throws ProfilerStatisticsNotReadyException;\n+  /**\n+   * @return profiler statistics for this execution step iff available\n+   * @throws ProfilerStatisticsNotReadyException iff profiler statistics are not available\n+   */\n+  ProfilerStatistics getProfilerStatistics() throws ProfilerStatisticsNotReadyException;\n }\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/432/PlanDescription.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/432/PlanDescription.java\nindex e2e662fcac2..e2fd0e48b99 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/432/PlanDescription.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/432/PlanDescription.java\n@@ -18,14 +18,11 @@\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n package org.neo4j.cypher.internal.javacompat;\n-\n-\n import java.util.List;\n import java.util.Map;\n \n import org.neo4j.cypher.ProfilerStatisticsNotReadyException;\n \n-\n /**\n  * Instances describe single execution steps in a Cypher query execution plan\n  *\n@@ -46,7 +43,7 @@ public interface PlanDescription\n      *\n      * @return a map containing arguments that describe this execution step in more detail\n      */\n-    Map<String, Object> getArguments();\n+    Map<String,Object> getArguments();\n \n     /**\n      * @return list of previous (child) execution step descriptions\n@@ -63,4 +60,4 @@ public interface PlanDescription\n      * @throws ProfilerStatisticsNotReadyException iff profiler statistics are not available\n      */\n     ProfilerStatistics getProfilerStatistics() throws ProfilerStatisticsNotReadyException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
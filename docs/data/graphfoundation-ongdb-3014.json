{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3014",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "7",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "12",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "206",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "13",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "281",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "6",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "11",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "316",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "336",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "343",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "353",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "378",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "384",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "423",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "429",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "512",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "515",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "515",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "518",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "520",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "524",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "529",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "531",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "531",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "539",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "543",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "552",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "552",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "554",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "554",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "590",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "590",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "598",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "598",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "606",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "606",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "621",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "621",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "638",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "638",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "644",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "644",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "646",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "646",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "665",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "665",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "672",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "672",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "678",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "678",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "690",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "690",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "697",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "697",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "701",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "701",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "709",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "709",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "716",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "716",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "718",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "718",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "748",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "749",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "756",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "756",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "768",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "768",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "775",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "776",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "779",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "779",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "786",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "786",
                    "column": "130",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "789",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "789",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "791",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "791",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "795",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "795",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "804",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "804",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "810",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "810",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "813",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "813",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "827",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "827",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "861",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "861",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "865",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "865",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "869",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "869",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "873",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "873",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "877",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "877",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "881",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "881",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "883",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "883",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "890",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "890",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "892",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "892",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "898",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "898",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "902",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "902",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "906",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "906",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "913",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "913",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "926",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "926",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "938",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "938",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "943",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "943",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "946",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "946",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "953",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "953",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "957",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "957",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "974",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "974",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "979",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "979",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "983",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "983",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "998",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "998",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1007",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1007",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1009",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1009",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1016",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1016",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1021",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1021",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1026",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1026",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1031",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1031",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1039",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1039",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1042",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1042",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1045",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1045",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1054",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1054",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1058",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1058",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1064",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1064",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1072",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1072",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1074",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1074",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1080",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1080",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1088",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1088",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1090",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1090",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1096",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1096",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1101",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1101",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1105",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1105",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1115",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1115",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1120",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1120",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1124",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1124",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1134",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1134",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1141",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1141",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1147",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1147",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1155",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1155",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1160",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1160",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1165",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1165",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3014/LongerShortString.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3014/LongerShortString.java\nindex 1701c564e1c..5b0d18a4792 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3014/LongerShortString.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3014/LongerShortString.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store;\n \n import java.nio.charset.StandardCharsets;\n@@ -30,1097 +31,1140 @@ import org.neo4j.values.storable.Values;\n \n /**\n  * Supports encoding alphanumerical and <code>SP . - + , ' : / _</code>\n- *\n+ * <p>\n  * (This version assumes 14bytes property block, instead of 8bytes)\n  *\n  * @author Tobias Ivarsson <tobias.ivarsson@neotechnology.com>\n  */\n public enum LongerShortString\n {\n-    /**\n-     * Binary coded decimal with punctuation.\n-     *\n-     * <pre>\n-     *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n-     * 0-  0  1  2  3  4  5  6  7    8  9 SP  .  -  +  ,  '\n-     * </pre>\n-     */\n-    NUMERICAL( 1, 4 )\n-    {\n+  /**\n+   * Binary coded decimal with punctuation.\n+   *\n+   * <pre>\n+   *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n+   * 0-  0  1  2  3  4  5  6  7    8  9 SP  .  -  +  ,  '\n+   * </pre>\n+   */\n+  NUMERICAL(1, 4)\n+      {\n         @Override\n-        int encTranslate( byte b )\n-        {\n-            if ( b >= '0' && b <= '9' )\n-            {\n-                return b - '0';\n-            }\n-            switch ( b )\n-            {\n+        int encTranslate(byte b)\n+        {\n+          if (b >= '0' && b <= '9')\n+          {\n+            return b - '0';\n+          }\n+          switch (b)\n+          {\n             // interm.    encoded\n-            case 0: return 0xA;\n-            case 2: return 0xB;\n-            case 3: return 0xC;\n-            case 6: return 0xD;\n-            case 7: return 0xE;\n-            case 8: return 0xF;\n-            default: throw cannotEncode( b );\n-            }\n+            case 0:\n+              return 0xA;\n+            case 2:\n+              return 0xB;\n+            case 3:\n+              return 0xC;\n+            case 6:\n+              return 0xD;\n+            case 7:\n+              return 0xE;\n+            case 8:\n+              return 0xF;\n+            default:\n+              throw cannotEncode(b);\n+          }\n         }\n \n         @Override\n-        int encPunctuation( byte b )\n+        int encPunctuation(byte b)\n         {\n-            throw cannotEncode( b );\n+          throw cannotEncode(b);\n         }\n \n         @Override\n-        char decTranslate( byte codePoint )\n-        {\n-            if ( codePoint < 10 )\n-            {\n-                return (char) (codePoint + '0');\n-            }\n-            return decPunctuation( codePoint - 10 + 6 );\n-        }\n-    },\n-    /**\n-     * Binary coded decimal with punctuation.\n-     *\n-     * <pre>\n-     *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n-     * 0-  0  1  2  3  4  5  6  7    8  9 SP  -  :  /  +  ,\n-     * </pre>\n-     */\n-    DATE( 2, 4 )\n-    {\n+        char decTranslate(byte codePoint)\n+        {\n+          if (codePoint < 10)\n+          {\n+            return (char) (codePoint + '0');\n+          }\n+          return decPunctuation(codePoint - 10 + 6);\n+        }\n+      },\n+  /**\n+   * Binary coded decimal with punctuation.\n+   *\n+   * <pre>\n+   *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n+   * 0-  0  1  2  3  4  5  6  7    8  9 SP  -  :  /  +  ,\n+   * </pre>\n+   */\n+  DATE(2, 4)\n+      {\n         @Override\n-        int encTranslate( byte b )\n-        {\n-            if ( b >= '0' && b <= '9' )\n-            {\n-                return b - '0';\n-            }\n-            switch ( b )\n-            {\n-            case 0: return 0xA;\n-            case 3: return 0xB;\n-            case 4: return 0xC;\n-            case 5: return 0xD;\n-            case 6: return 0xE;\n-            case 7: return 0xF;\n-            default: throw cannotEncode( b );\n-            }\n+        int encTranslate(byte b)\n+        {\n+          if (b >= '0' && b <= '9')\n+          {\n+            return b - '0';\n+          }\n+          switch (b)\n+          {\n+            case 0:\n+              return 0xA;\n+            case 3:\n+              return 0xB;\n+            case 4:\n+              return 0xC;\n+            case 5:\n+              return 0xD;\n+            case 6:\n+              return 0xE;\n+            case 7:\n+              return 0xF;\n+            default:\n+              throw cannotEncode(b);\n+          }\n         }\n \n         @Override\n-        int encPunctuation( byte b )\n+        int encPunctuation(byte b)\n         {\n-            throw cannotEncode( b );\n+          throw cannotEncode(b);\n         }\n \n         @Override\n-        char decTranslate( byte codePoint )\n-        {\n-            if ( codePoint < 0xA )\n-            {\n-                return (char) (codePoint + '0');\n-            }\n-            switch ( codePoint )\n-            {\n-            case 0xA: return ' ';\n-            case 0xB: return '-';\n-            case 0xC: return ':';\n-            case 0xD: return '/';\n-            case 0xE: return '+';\n-            default: return ',';\n-            }\n-        }\n-    },\n-    /**\n-     * Upper-case characters with punctuation.\n-     *\n-     * <pre>\n-     *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n-     * 0- SP  A  B  C  D  E  F  G    H  I  J  K  L  M  N  O\n-     * 1-  P  Q  R  S  T  U  V  W    X  Y  Z  _  .  -  :  /\n-     * </pre>\n-     */\n-    UPPER( 3, 5 )\n-    {\n+        char decTranslate(byte codePoint)\n+        {\n+          if (codePoint < 0xA)\n+          {\n+            return (char) (codePoint + '0');\n+          }\n+          switch (codePoint)\n+          {\n+            case 0xA:\n+              return ' ';\n+            case 0xB:\n+              return '-';\n+            case 0xC:\n+              return ':';\n+            case 0xD:\n+              return '/';\n+            case 0xE:\n+              return '+';\n+            default:\n+              return ',';\n+          }\n+        }\n+      },\n+  /**\n+   * Upper-case characters with punctuation.\n+   *\n+   * <pre>\n+   *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n+   * 0- SP  A  B  C  D  E  F  G    H  I  J  K  L  M  N  O\n+   * 1-  P  Q  R  S  T  U  V  W    X  Y  Z  _  .  -  :  /\n+   * </pre>\n+   */\n+  UPPER(3, 5)\n+      {\n         @Override\n-        int encTranslate( byte b )\n+        int encTranslate(byte b)\n         {\n-            return super.encTranslate(b) - 0x40;\n+          return super.encTranslate(b) - 0x40;\n         }\n \n         @Override\n-        int encPunctuation( byte b )\n+        int encPunctuation(byte b)\n         {\n-            return b == 0 ? 0x40 : b + 0x5a;\n+          return b == 0 ? 0x40 : b + 0x5a;\n         }\n \n         @Override\n-        char decTranslate( byte codePoint )\n-        {\n-            if ( codePoint == 0 )\n-            {\n-                return ' ';\n-            }\n-            if ( codePoint <= 0x1A )\n-            {\n-                return (char) (codePoint + 'A' - 1);\n-            }\n-            return decPunctuation( codePoint - 0x1A );\n-        }\n-    },\n-    /**\n-     * Lower-case characters with punctuation.\n-     *\n-     * <pre>\n-     *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n-     * 0- SP  a  b  c  d  e  f  g    h  i  j  k  l  m  n  o\n-     * 1-  p  q  r  s  t  u  v  w    x  y  z  _  .  -  :  /\n-     * </pre>\n-     */\n-    LOWER( 4, 5 )\n-    {\n+        char decTranslate(byte codePoint)\n+        {\n+          if (codePoint == 0)\n+          {\n+            return ' ';\n+          }\n+          if (codePoint <= 0x1A)\n+          {\n+            return (char) (codePoint + 'A' - 1);\n+          }\n+          return decPunctuation(codePoint - 0x1A);\n+        }\n+      },\n+  /**\n+   * Lower-case characters with punctuation.\n+   *\n+   * <pre>\n+   *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n+   * 0- SP  a  b  c  d  e  f  g    h  i  j  k  l  m  n  o\n+   * 1-  p  q  r  s  t  u  v  w    x  y  z  _  .  -  :  /\n+   * </pre>\n+   */\n+  LOWER(4, 5)\n+      {\n         @Override\n-        int encTranslate( byte b )\n+        int encTranslate(byte b)\n         {\n-            return super.encTranslate(b) - 0x60;\n+          return super.encTranslate(b) - 0x60;\n         }\n \n         @Override\n-        int encPunctuation( byte b )\n+        int encPunctuation(byte b)\n         {\n-            return b == 0 ? 0x60 : b + 0x7a;\n+          return b == 0 ? 0x60 : b + 0x7a;\n         }\n \n         @Override\n-        char decTranslate( byte codePoint )\n-        {\n-            if ( codePoint == 0 )\n-            {\n-                return ' ';\n-            }\n-            if ( codePoint <= 0x1A )\n-            {\n-                return (char) (codePoint + 'a' - 1);\n-            }\n-            return decPunctuation( codePoint - 0x1A );\n-        }\n-    },\n-    /**\n-     * Lower-case characters with punctuation.\n-     *\n-     * <pre>\n-     *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n-     * 0-  ,  a  b  c  d  e  f  g    h  i  j  k  l  m  n  o\n-     * 1-  p  q  r  s  t  u  v  w    x  y  z  _  .  -  +  @\n-     * </pre>\n-     */\n-    EMAIL( 5, 5 )\n-    {\n+        char decTranslate(byte codePoint)\n+        {\n+          if (codePoint == 0)\n+          {\n+            return ' ';\n+          }\n+          if (codePoint <= 0x1A)\n+          {\n+            return (char) (codePoint + 'a' - 1);\n+          }\n+          return decPunctuation(codePoint - 0x1A);\n+        }\n+      },\n+  /**\n+   * Lower-case characters with punctuation.\n+   *\n+   * <pre>\n+   *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n+   * 0-  ,  a  b  c  d  e  f  g    h  i  j  k  l  m  n  o\n+   * 1-  p  q  r  s  t  u  v  w    x  y  z  _  .  -  +  @\n+   * </pre>\n+   */\n+  EMAIL(5, 5)\n+      {\n         @Override\n-        int encTranslate( byte b )\n+        int encTranslate(byte b)\n         {\n-            return super.encTranslate(b) - 0x60;\n+          return super.encTranslate(b) - 0x60;\n         }\n \n         @Override\n-        int encPunctuation( byte b )\n+        int encPunctuation(byte b)\n         {\n-            int encOffset = 0x60;\n-            if ( b == 7 )\n-            {\n-                return encOffset;\n-            }\n+          int encOffset = 0x60;\n+          if (b == 7)\n+          {\n+            return encOffset;\n+          }\n \n-            int offset = encOffset + 0x1B;\n-            switch ( b )\n-            {\n-            case 1: return 0 + offset;\n-            case 2: return 1 + offset;\n-            case 3: return 2 + offset;\n-            case 6: return 3 + offset;\n-            case 9: return 4 + offset;\n-            default: throw cannotEncode( b );\n-            }\n+          int offset = encOffset + 0x1B;\n+          switch (b)\n+          {\n+            case 1:\n+              return 0 + offset;\n+            case 2:\n+              return 1 + offset;\n+            case 3:\n+              return 2 + offset;\n+            case 6:\n+              return 3 + offset;\n+            case 9:\n+              return 4 + offset;\n+            default:\n+              throw cannotEncode(b);\n+          }\n         }\n \n         @Override\n-        char decTranslate( byte codePoint )\n-        {\n-            if ( codePoint == 0 )\n-            {\n-                return ',';\n-            }\n-            if ( codePoint <= 0x1A )\n-            {\n-                return (char) (codePoint + 'a' - 1);\n-            }\n-            switch ( codePoint )\n-            {\n-            case 0x1E: return '+';\n-            case 0x1F: return '@';\n-            default: return decPunctuation( codePoint - 0x1A );\n-            }\n-        }\n-    },\n-    /**\n-     * Lower-case characters, digits and punctuation and symbols.\n-     *\n-     * <pre>\n-     *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n-     * 0- SP  a  b  c  d  e  f  g    h  i  j  k  l  m  n  o\n-     * 1-  p  q  r  s  t  u  v  w    x  y  z\n-     * 2-  0  1  2  3  4  5  6  7    8  9  _  .  -  :  /  +\n-     * 3-  ,  '  @  |  ;  *  ?  &    %  #  (  )  $  <  >  =\n-     * </pre>\n-     */\n-    URI( 6, 6 )\n-    {\n+        char decTranslate(byte codePoint)\n+        {\n+          if (codePoint == 0)\n+          {\n+            return ',';\n+          }\n+          if (codePoint <= 0x1A)\n+          {\n+            return (char) (codePoint + 'a' - 1);\n+          }\n+          switch (codePoint)\n+          {\n+            case 0x1E:\n+              return '+';\n+            case 0x1F:\n+              return '@';\n+            default:\n+              return decPunctuation(codePoint - 0x1A);\n+          }\n+        }\n+      },\n+  /**\n+   * Lower-case characters, digits and punctuation and symbols.\n+   *\n+   * <pre>\n+   *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n+   * 0- SP  a  b  c  d  e  f  g    h  i  j  k  l  m  n  o\n+   * 1-  p  q  r  s  t  u  v  w    x  y  z\n+   * 2-  0  1  2  3  4  5  6  7    8  9  _  .  -  :  /  +\n+   * 3-  ,  '  @  |  ;  *  ?  &    %  #  (  )  $  <  >  =\n+   * </pre>\n+   */\n+  URI(6, 6)\n+      {\n         @Override\n-        int encTranslate( byte b )\n-        {\n-            if ( b == 0 )\n-            {\n-                return 0; // space\n-            }\n-            if ( b >= 0x61 && b <= 0x7A )\n-            {\n-                return b - 0x60; // lower-case letters\n-            }\n-            if ( b >= 0x30 && b <= 0x39 )\n-            {\n-                return b - 0x10; // digits\n-            }\n-            if ( b >= 0x1 && b <= 0x16 )\n-            {\n-                return b + 0x29; // symbols\n-            }\n-            throw cannotEncode( b );\n+        int encTranslate(byte b)\n+        {\n+          if (b == 0)\n+          {\n+            return 0; // space\n+          }\n+          if (b >= 0x61 && b <= 0x7A)\n+          {\n+            return b - 0x60; // lower-case letters\n+          }\n+          if (b >= 0x30 && b <= 0x39)\n+          {\n+            return b - 0x10; // digits\n+          }\n+          if (b >= 0x1 && b <= 0x16)\n+          {\n+            return b + 0x29; // symbols\n+          }\n+          throw cannotEncode(b);\n         }\n \n         @Override\n-        int encPunctuation( byte b )\n+        int encPunctuation(byte b)\n         {\n-            // Handled by encTranslate\n-            throw cannotEncode( b );\n+          // Handled by encTranslate\n+          throw cannotEncode(b);\n         }\n \n         @Override\n-        char decTranslate( byte codePoint )\n-        {\n-            if ( codePoint == 0 )\n-            {\n-                return ' ';\n-            }\n-            if ( codePoint <= 0x1A )\n-            {\n-                return (char) (codePoint + 'a' - 1);\n-            }\n-            if ( codePoint <= 0x29 )\n-            {\n-                return (char) (codePoint - 0x20 + '0');\n-            }\n-            if ( codePoint <= 0x2E )\n-            {\n-                return decPunctuation( codePoint - 0x29 );\n-            }\n-            return decPunctuation( codePoint - 0x2F + 9 );\n-        }\n-    },\n-    /**\n-     * Alpha-numerical characters space and underscore.\n-     *\n-     * <pre>\n-     *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n-     * 0- SP  A  B  C  D  E  F  G    H  I  J  K  L  M  N  O\n-     * 1-  P  Q  R  S  T  U  V  W    X  Y  Z  0  1  2  3  4\n-     * 2-  _  a  b  c  d  e  f  g    h  i  j  k  l  m  n  o\n-     * 3-  p  q  r  s  t  u  v  w    x  y  z  5  6  7  8  9\n-     * </pre>\n-     */\n-    ALPHANUM( 7, 6 )\n-    {\n+        char decTranslate(byte codePoint)\n+        {\n+          if (codePoint == 0)\n+          {\n+            return ' ';\n+          }\n+          if (codePoint <= 0x1A)\n+          {\n+            return (char) (codePoint + 'a' - 1);\n+          }\n+          if (codePoint <= 0x29)\n+          {\n+            return (char) (codePoint - 0x20 + '0');\n+          }\n+          if (codePoint <= 0x2E)\n+          {\n+            return decPunctuation(codePoint - 0x29);\n+          }\n+          return decPunctuation(codePoint - 0x2F + 9);\n+        }\n+      },\n+  /**\n+   * Alpha-numerical characters space and underscore.\n+   *\n+   * <pre>\n+   *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n+   * 0- SP  A  B  C  D  E  F  G    H  I  J  K  L  M  N  O\n+   * 1-  P  Q  R  S  T  U  V  W    X  Y  Z  0  1  2  3  4\n+   * 2-  _  a  b  c  d  e  f  g    h  i  j  k  l  m  n  o\n+   * 3-  p  q  r  s  t  u  v  w    x  y  z  5  6  7  8  9\n+   * </pre>\n+   */\n+  ALPHANUM(7, 6)\n+      {\n         @Override\n-        char decTranslate( byte codePoint )\n+        char decTranslate(byte codePoint)\n         {\n-            return EUROPEAN.decTranslate( (byte) ( codePoint + 0x40 ) );\n+          return EUROPEAN.decTranslate((byte) (codePoint + 0x40));\n         }\n \n         @Override\n-        int encTranslate( byte b )\n+        int encTranslate(byte b)\n         {\n-            // Punctuation is in the same places as European\n-            if ( b < 0x20 )\n-            {\n-                return encPunctuation( b ); // Punctuation\n-            }\n-            // But the rest is transposed by 0x40\n-            return EUROPEAN.encTranslate( b ) - 0x40;\n+          // Punctuation is in the same places as European\n+          if (b < 0x20)\n+          {\n+            return encPunctuation(b); // Punctuation\n+          }\n+          // But the rest is transposed by 0x40\n+          return EUROPEAN.encTranslate(b) - 0x40;\n         }\n \n         @Override\n-        int encPunctuation( byte b )\n+        int encPunctuation(byte b)\n         {\n-            switch ( b )\n-            {\n+          switch (b)\n+          {\n             case 0:\n-                return 0x00; // SPACE\n+              return 0x00; // SPACE\n             case 1:\n-                return 0x20; // UNDERSCORE\n+              return 0x20; // UNDERSCORE\n             default:\n-                throw cannotEncode( b );\n-            }\n-        }\n-    },\n-    /**\n-     * Alpha-numerical characters space and underscore.\n-     *\n-     * <pre>\n-     *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n-     * 0- SP  A  B  C  D  E  F  G    H  I  J  K  L  M  N  O\n-     * 1-  P  Q  R  S  T  U  V  W    X  Y  Z  _  .  -  :  /\n-     * 2-  ;  a  b  c  d  e  f  g    h  i  j  k  l  m  n  o\n-     * 3-  p  q  r  s  t  u  v  w    x  y  z  +  ,  '  @  |\n-     * </pre>\n-     */\n-    ALPHASYM( 8, 6 )\n-    {\n+              throw cannotEncode(b);\n+          }\n+        }\n+      },\n+  /**\n+   * Alpha-numerical characters space and underscore.\n+   *\n+   * <pre>\n+   *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n+   * 0- SP  A  B  C  D  E  F  G    H  I  J  K  L  M  N  O\n+   * 1-  P  Q  R  S  T  U  V  W    X  Y  Z  _  .  -  :  /\n+   * 2-  ;  a  b  c  d  e  f  g    h  i  j  k  l  m  n  o\n+   * 3-  p  q  r  s  t  u  v  w    x  y  z  +  ,  '  @  |\n+   * </pre>\n+   */\n+  ALPHASYM(8, 6)\n+      {\n         @Override\n-        char decTranslate( byte codePoint )\n-        {\n-            if ( codePoint == 0x0 )\n-            {\n-                return ' ';\n-            }\n-            if ( codePoint <= 0x1A )\n-            {\n-                return (char) ('A' + codePoint - 0x1);\n-            }\n-            if ( codePoint <= 0x1F )\n-            {\n-                return decPunctuation( codePoint - 0x1B + 1 );\n-            }\n-            if ( codePoint == 0x20 )\n-            {\n-                return ';';\n-            }\n-            if ( codePoint <= 0x3A )\n-            {\n-                return (char) ('a' + codePoint - 0x21);\n-            }\n-            return decPunctuation( codePoint - 0x3B + 9 );\n+        char decTranslate(byte codePoint)\n+        {\n+          if (codePoint == 0x0)\n+          {\n+            return ' ';\n+          }\n+          if (codePoint <= 0x1A)\n+          {\n+            return (char) ('A' + codePoint - 0x1);\n+          }\n+          if (codePoint <= 0x1F)\n+          {\n+            return decPunctuation(codePoint - 0x1B + 1);\n+          }\n+          if (codePoint == 0x20)\n+          {\n+            return ';';\n+          }\n+          if (codePoint <= 0x3A)\n+          {\n+            return (char) ('a' + codePoint - 0x21);\n+          }\n+          return decPunctuation(codePoint - 0x3B + 9);\n         }\n \n         @Override\n-        int encTranslate( byte b )\n-        {\n-            // Punctuation is in the same places as European\n-            if ( b < 0x20 )\n-            {\n-                return encPunctuation( b ); // Punctuation\n-            }\n-            // But the rest is transposed by 0x40\n+        int encTranslate(byte b)\n+        {\n+          // Punctuation is in the same places as European\n+          if (b < 0x20)\n+          {\n+            return encPunctuation(b); // Punctuation\n+          }\n+          // But the rest is transposed by 0x40\n //            return EUROPEAN.encTranslate( b ) - 0x40;\n-            return b - 0x40;\n+          return b - 0x40;\n         }\n \n         @Override\n-        int encPunctuation( byte b )\n+        int encPunctuation(byte b)\n+        {\n+          switch (b)\n+          {\n+            case 0x0:\n+              return 0x0;\n+            case 0x1:\n+              return 0x1B;\n+            case 0x2:\n+              return 0x1C;\n+            case 0x3:\n+              return 0x1D;\n+            case 0x4:\n+              return 0x1E;\n+            case 0x5:\n+              return 0x1F;\n+\n+            case 0x6:\n+              return 0x3B;\n+            case 0x7:\n+              return 0x3C;\n+            case 0x8:\n+              return 0x3D;\n+            case 0x9:\n+              return 0x3E;\n+            case 0xA:\n+              return 0x3F;\n+\n+            case 0xB:\n+              return 0x20;\n+            default:\n+              throw cannotEncode(b);\n+          }\n+        }\n+      },\n+  /**\n+   * The most common European characters (latin-1 but with less punctuation).\n+   *\n+   * <pre>\n+   *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n+   * 0-  \u00c0  \u00c1  \u00c2  \u00c3  \u00c4  \u00c5  \u00c6  \u00c7    \u00c8  \u00c9  \u00ca  \u00cb  \u00cc  \u00cd  \u00ce  \u00cf\n+   * 1-  \u00d0  \u00d1  \u00d2  \u00d3  \u00d4  \u00d5  \u00d6  .    \u00d8  \u00d9  \u00da  \u00db  \u00dc  \u00dd  \u00de  \u00df\n+   * 2-  \u00e0  \u00e1  \u00e2  \u00e3  \u00e4  \u00e5  \u00e6  \u00e7    \u00e8  \u00e9  \u00ea  \u00eb  \u00ec  \u00ed  \u00ee  \u00ef\n+   * 3-  \u00f0  \u00f1  \u00f2  \u00f3  \u00f4  \u00f5  \u00f6  -    \u00f8  \u00f9  \u00fa  \u00fb  \u00fc  \u00fd  \u00fe  \u00ff\n+   * 4- SP  A  B  C  D  E  F  G    H  I  J  K  L  M  N  O\n+   * 5-  P  Q  R  S  T  U  V  W    X  Y  Z  0  1  2  3  4\n+   * 6-  _  a  b  c  d  e  f  g    h  i  j  k  l  m  n  o\n+   * 7-  p  q  r  s  t  u  v  w    x  y  z  5  6  7  8  9\n+   * </pre>\n+   */\n+  EUROPEAN(9, 7)\n+      {\n+        @Override\n+        char decTranslate(byte codePoint)\n         {\n-            switch ( b )\n+          int code = codePoint & 0xFF;\n+          if (code < 0x40)\n+          {\n+            if (code == 0x17)\n             {\n-            case 0x0: return 0x0;\n-            case 0x1: return 0x1B;\n-            case 0x2: return 0x1C;\n-            case 0x3: return 0x1D;\n-            case 0x4: return 0x1E;\n-            case 0x5: return 0x1F;\n-\n-            case 0x6: return 0x3B;\n-            case 0x7: return 0x3C;\n-            case 0x8: return 0x3D;\n-            case 0x9: return 0x3E;\n-            case 0xA: return 0x3F;\n-\n-            case 0xB: return 0x20;\n-            default: throw cannotEncode( b );\n+              return '.';\n             }\n-        }\n-    },\n-    /**\n-     * The most common European characters (latin-1 but with less punctuation).\n-     *\n-     * <pre>\n-     *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n-     * 0-  \u00c0  \u00c1  \u00c2  \u00c3  \u00c4  \u00c5  \u00c6  \u00c7    \u00c8  \u00c9  \u00ca  \u00cb  \u00cc  \u00cd  \u00ce  \u00cf\n-     * 1-  \u00d0  \u00d1  \u00d2  \u00d3  \u00d4  \u00d5  \u00d6  .    \u00d8  \u00d9  \u00da  \u00db  \u00dc  \u00dd  \u00de  \u00df\n-     * 2-  \u00e0  \u00e1  \u00e2  \u00e3  \u00e4  \u00e5  \u00e6  \u00e7    \u00e8  \u00e9  \u00ea  \u00eb  \u00ec  \u00ed  \u00ee  \u00ef\n-     * 3-  \u00f0  \u00f1  \u00f2  \u00f3  \u00f4  \u00f5  \u00f6  -    \u00f8  \u00f9  \u00fa  \u00fb  \u00fc  \u00fd  \u00fe  \u00ff\n-     * 4- SP  A  B  C  D  E  F  G    H  I  J  K  L  M  N  O\n-     * 5-  P  Q  R  S  T  U  V  W    X  Y  Z  0  1  2  3  4\n-     * 6-  _  a  b  c  d  e  f  g    h  i  j  k  l  m  n  o\n-     * 7-  p  q  r  s  t  u  v  w    x  y  z  5  6  7  8  9\n-     * </pre>\n-     */\n-    EUROPEAN( 9, 7 )\n-    {\n-        @Override\n-        char decTranslate( byte codePoint )\n-        {\n-            int code = codePoint & 0xFF;\n-            if ( code < 0x40 )\n+            if (code == 0x37)\n+            {\n+              return '-';\n+            }\n+            return (char) (code + 0xC0);\n+          } else\n+          {\n+            if (code == 0x40)\n+            {\n+              return ' ';\n+            }\n+            if (code == 0x60)\n+            {\n+              return '_';\n+            }\n+            if (code >= 0x5B && code < 0x60)\n             {\n-                if ( code == 0x17 )\n-                {\n-                    return '.';\n-                }\n-                if ( code == 0x37 )\n-                {\n-                    return '-';\n-                }\n-                return (char) (code + 0xC0);\n+              return (char) ('0' + code - 0x5B);\n             }\n-            else\n+            if (code >= 0x7B && code < 0x80)\n             {\n-                if ( code == 0x40 )\n-                {\n-                    return ' ';\n-                }\n-                if ( code == 0x60 )\n-                {\n-                    return '_';\n-                }\n-                if ( code >= 0x5B && code < 0x60 )\n-                {\n-                    return (char) ('0' + code - 0x5B);\n-                }\n-                if ( code >= 0x7B && code < 0x80 )\n-                {\n-                    return (char) ('5' + code - 0x7B);\n-                }\n-                return (char) code;\n+              return (char) ('5' + code - 0x7B);\n             }\n+            return (char) code;\n+          }\n         }\n \n         @Override\n-        int encPunctuation( byte b )\n+        int encPunctuation(byte b)\n         {\n-            switch ( b )\n-            {\n+          switch (b)\n+          {\n             case 0x00:\n-                return 0x40; // SPACE\n+              return 0x40; // SPACE\n             case 0x01:\n-                return 0x60; // UNDERSCORE\n+              return 0x60; // UNDERSCORE\n             case 0x02:\n-                return 0x17; // DOT\n+              return 0x17; // DOT\n             case 0x03:\n-                return 0x37; // DASH\n+              return 0x37; // DASH\n             case 0x07:\n-                // TODO\n-                return 0;\n+              // TODO\n+              return 0;\n             default:\n-                throw cannotEncode( b );\n-            }\n-        }\n-    },\n-    // ENCODING_LATIN1 is 10th\n-    /**\n-     * Lower-case characters a-f and digits.\n-     *\n-     * <pre>\n-     *    -0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -A -B -C -D -E -F\n-     * 0-  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f\n-     * </pre>\n-     */\n-    LOWERHEX( 11, 4 )\n-    {\n+              throw cannotEncode(b);\n+          }\n+        }\n+      },\n+  // ENCODING_LATIN1 is 10th\n+  /**\n+   * Lower-case characters a-f and digits.\n+   *\n+   * <pre>\n+   *    -0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -A -B -C -D -E -F\n+   * 0-  0  1  2  3  4  5  6  7  8  9  a  b  c  d  e  f\n+   * </pre>\n+   */\n+  LOWERHEX(11, 4)\n+      {\n         @Override\n-        int encTranslate( byte b )\n+        int encTranslate(byte b)\n         {\n-            if ( b >= '0' && b <= '9' )\n-            {\n-                return b - '0';\n-            }\n-            if ( b >= 'a' && b <= 'f' )\n-            {\n-                return b - 'a' + 10;\n-            }\n-            throw cannotEncode( b );\n+          if (b >= '0' && b <= '9')\n+          {\n+            return b - '0';\n+          }\n+          if (b >= 'a' && b <= 'f')\n+          {\n+            return b - 'a' + 10;\n+          }\n+          throw cannotEncode(b);\n         }\n \n         @Override\n-        int encPunctuation( byte b )\n+        int encPunctuation(byte b)\n         {\n-            throw cannotEncode( b );\n+          throw cannotEncode(b);\n         }\n \n         @Override\n-        char decTranslate( byte codePoint )\n-        {\n-            if ( codePoint < 10 )\n-            {\n-                return (char) (codePoint + '0');\n-            }\n-            return (char) ( codePoint + 'a' - 10 );\n-        }\n-    },\n-    /**\n-     * Upper-case characters A-F and digits.\n-     *\n-     * <pre>\n-     *    -0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -A -B -C -D -E -F\n-     * 0-  0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F\n-     * </pre>\n-     */\n-    UPPERHEX( 12, 4 )\n-    {\n+        char decTranslate(byte codePoint)\n+        {\n+          if (codePoint < 10)\n+          {\n+            return (char) (codePoint + '0');\n+          }\n+          return (char) (codePoint + 'a' - 10);\n+        }\n+      },\n+  /**\n+   * Upper-case characters A-F and digits.\n+   *\n+   * <pre>\n+   *    -0 -1 -2 -3 -4 -5 -6 -7 -8 -9 -A -B -C -D -E -F\n+   * 0-  0  1  2  3  4  5  6  7  8  9  A  B  C  D  E  F\n+   * </pre>\n+   */\n+  UPPERHEX(12, 4)\n+      {\n         @Override\n-        int encTranslate( byte b )\n+        int encTranslate(byte b)\n         {\n-            if ( b >= '0' && b <= '9' )\n-            {\n-                return b - '0';\n-            }\n-            if ( b >= 'A' && b <= 'F' )\n-            {\n-                return b - 'A' + 10;\n-            }\n-            throw cannotEncode( b );\n+          if (b >= '0' && b <= '9')\n+          {\n+            return b - '0';\n+          }\n+          if (b >= 'A' && b <= 'F')\n+          {\n+            return b - 'A' + 10;\n+          }\n+          throw cannotEncode(b);\n         }\n \n         @Override\n-        int encPunctuation( byte b )\n+        int encPunctuation(byte b)\n         {\n-            throw cannotEncode( b );\n+          throw cannotEncode(b);\n         }\n \n         @Override\n-        char decTranslate( byte codePoint )\n-        {\n-            if ( codePoint < 10 )\n-            {\n-                return (char) (codePoint + '0');\n-            }\n-            return (char) ( codePoint + 'A' - 10 );\n-        }\n-    };\n-    public static final int REMOVE_LARGE_ENCODINGS_MASK = invertedBitMask( ALPHANUM, ALPHASYM, URI, EUROPEAN );\n-    public static final LongerShortString[] ENCODINGS = values();\n-    public static final int ENCODING_COUNT = ENCODINGS.length;\n-    public static final int ALL_BIT_MASK = bitMask( LongerShortString.values() );\n-    public static final int ENCODING_UTF8 = 0;\n-    public static final int ENCODING_LATIN1 = 10;\n-    private static final int HEADER_SIZE = 39; // bits\n-\n-    final int encodingHeader;\n-    final long mask;\n-    final int step;\n-\n-    LongerShortString( int encodingHeader, int step )\n+        char decTranslate(byte codePoint)\n+        {\n+          if (codePoint < 10)\n+          {\n+            return (char) (codePoint + '0');\n+          }\n+          return (char) (codePoint + 'A' - 10);\n+        }\n+      };\n+  public static final int REMOVE_LARGE_ENCODINGS_MASK = invertedBitMask(ALPHANUM, ALPHASYM, URI, EUROPEAN);\n+  public static final LongerShortString[] ENCODINGS = values();\n+  public static final int ENCODING_COUNT = ENCODINGS.length;\n+  public static final int ALL_BIT_MASK = bitMask(LongerShortString.values());\n+  public static final int ENCODING_UTF8 = 0;\n+  public static final int ENCODING_LATIN1 = 10;\n+  private static final int HEADER_SIZE = 39; // bits\n+\n+  final int encodingHeader;\n+  final long mask;\n+  final int step;\n+\n+  LongerShortString(int encodingHeader, int step)\n+  {\n+    this.encodingHeader = encodingHeader;\n+    this.mask = Bits.rightOverflowMask(step);\n+    this.step = step;\n+  }\n+\n+  int maxLength(int payloadSize)\n+  {\n+    // key-type-encoding-length\n+    return ((payloadSize << 3) - 24 - 4 - 4 - 6) / step;\n+  }\n+\n+  final IllegalArgumentException cannotEncode(byte b)\n+  {\n+    return new IllegalArgumentException(\"Cannot encode as \" + this.name() + \": \" + b);\n+  }\n+\n+  /**\n+   * Lookup table for decoding punctuation\n+   */\n+  private static final char[] PUNCTUATION = {\n+      ' ', '_', '.', '-', ':', '/',\n+      ' ', '.', '-', '+', ',', '\\'', '@', '|', ';', '*', '?', '&', '%', '#', '(', ')', '$', '<', '>', '='};\n+\n+  final char decPunctuation(int code)\n+  {\n+    return PUNCTUATION[code];\n+  }\n+\n+  int encTranslate(byte b)\n+  {\n+    if (b < 0)\n     {\n-        this.encodingHeader = encodingHeader;\n-        this.mask = Bits.rightOverflowMask( step );\n-        this.step = step;\n+      return (0xFF & b) - 0xC0; // European chars\n     }\n-\n-    int maxLength( int payloadSize )\n+    if (b < 0x20)\n     {\n-        // key-type-encoding-length\n-        return ((payloadSize << 3) - 24 - 4 - 4 - 6) / step;\n+      return encPunctuation(b); // Punctuation\n     }\n-\n-    final IllegalArgumentException cannotEncode( byte b )\n+    if (b >= '0' && b <= '4')\n     {\n-        return new IllegalArgumentException( \"Cannot encode as \" + this.name() + \": \" + b );\n+      return 0x5B + b - '0'; // Numbers\n     }\n-\n-    /** Lookup table for decoding punctuation */\n-    private static final char[] PUNCTUATION = {\n-        ' ', '_', '.', '-', ':', '/',\n-        ' ', '.', '-', '+', ',', '\\'', '@', '|', ';', '*', '?', '&', '%', '#', '(', ')', '$', '<', '>', '=' };\n-\n-    final char decPunctuation( int code )\n+    if (b >= '5' && b <= '9')\n     {\n-        return PUNCTUATION[code];\n+      return 0x7B + b - '5'; // Numbers\n     }\n-\n-    int encTranslate( byte b )\n+    return b; // Alphabetical\n+  }\n+\n+  abstract int encPunctuation(byte b);\n+\n+  abstract char decTranslate(byte codePoint);\n+\n+  /**\n+   * Encodes a short string.\n+   *\n+   * @param string the string to encode.\n+   * @param target the property record to store the encoded string in\n+   * @return <code>true</code> if the string could be encoded as a short\n+   * string, <code>false</code> if it couldn't.\n+   */\n+  /*\n+   * Intermediate code table\n+   *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n+   * 0- SP  _  .  -  :  /  +  ,    '  @  |  ;  *  ?  &  %\n+   * 1-  #  (  )  $  <  >  =\n+   * 2-\n+   * 3-  0  1  2  3  4  5  6  7    8  9\n+   * 4-     A  B  C  D  E  F  G    H  I  J  K  L  M  N  O\n+   * 5-  P  Q  R  S  T  U  V  W    X  Y  Z\n+   * 6-     a  b  c  d  e  f  g    h  i  j  k  l  m  n  o\n+   * 7-  p  q  r  s  t  u  v  w    x  y  z\n+   * 8-\n+   * 9-\n+   * A-\n+   * B-\n+   * C-  \u00c0  \u00c1  \u00c2  \u00c3  \u00c4  \u00c5  \u00c6  \u00c7    \u00c8  \u00c9  \u00ca  \u00cb  \u00cc  \u00cd  \u00ce  \u00cf\n+   * D-  \u00d0  \u00d1  \u00d2  \u00d3  \u00d4  \u00d5  \u00d6       \u00d8  \u00d9  \u00da  \u00db  \u00dc  \u00dd  \u00de  \u00df\n+   * E-  \u00e0  \u00e1  \u00e2  \u00e3  \u00e4  \u00e5  \u00e6  \u00e7    \u00e8  \u00e9  \u00ea  \u00eb  \u00ec  \u00ed  \u00ee  \u00ef\n+   * F-  \u00f0  \u00f1  \u00f2  \u00f3  \u00f4  \u00f5  \u00f6       \u00f8  \u00f9  \u00fa  \u00fb  \u00fc  \u00fd  \u00fe  \u00ff\n+   */\n+  public static boolean encode(int keyId, String string,\n+                               PropertyBlock target, int payloadSize)\n+  {\n+    // NUMERICAL can carry most characters, so compare to that\n+    int dataLength = string.length();\n+    // We only use 6 bits for storing the string length\n+    // TODO could be dealt with by having string length zero and go for null bytes,\n+    // at least for LATIN1 (that's what the ShortString implementation initially did)\n+    if (dataLength > NUMERICAL.maxLength(payloadSize) || dataLength > 63)\n     {\n-        if ( b < 0 )\n-        {\n-            return (0xFF & b) - 0xC0; // European chars\n-        }\n-        if ( b < 0x20 )\n-        {\n-            return encPunctuation( b ); // Punctuation\n-        }\n-        if ( b >= '0' && b <= '4' )\n-        {\n-            return 0x5B + b - '0'; // Numbers\n-        }\n-        if ( b >= '5' && b <= '9' )\n-        {\n-            return 0x7B + b - '5'; // Numbers\n-        }\n-        return b; // Alphabetical\n+      return false; // Not handled by any encoding\n     }\n \n-    abstract int encPunctuation( byte b );\n-\n-    abstract char decTranslate( byte codePoint );\n+    // Allocate space for the intermediate representation\n+    // (using the intermediate representation table above)\n+    byte[] data = new byte[dataLength];\n \n-    /**\n-     * Encodes a short string.\n-     *\n-     * @param string the string to encode.\n-     * @param target the property record to store the encoded string in\n-     * @return <code>true</code> if the string could be encoded as a short\n-     *         string, <code>false</code> if it couldn't.\n-     */\n-    /*\n-     * Intermediate code table\n-     *    -0 -1 -2 -3 -4 -5 -6 -7   -8 -9 -A -B -C -D -E -F\n-     * 0- SP  _  .  -  :  /  +  ,    '  @  |  ;  *  ?  &  %\n-     * 1-  #  (  )  $  <  >  =\n-     * 2-\n-     * 3-  0  1  2  3  4  5  6  7    8  9\n-     * 4-     A  B  C  D  E  F  G    H  I  J  K  L  M  N  O\n-     * 5-  P  Q  R  S  T  U  V  W    X  Y  Z\n-     * 6-     a  b  c  d  e  f  g    h  i  j  k  l  m  n  o\n-     * 7-  p  q  r  s  t  u  v  w    x  y  z\n-     * 8-\n-     * 9-\n-     * A-\n-     * B-\n-     * C-  \u00c0  \u00c1  \u00c2  \u00c3  \u00c4  \u00c5  \u00c6  \u00c7    \u00c8  \u00c9  \u00ca  \u00cb  \u00cc  \u00cd  \u00ce  \u00cf\n-     * D-  \u00d0  \u00d1  \u00d2  \u00d3  \u00d4  \u00d5  \u00d6       \u00d8  \u00d9  \u00da  \u00db  \u00dc  \u00dd  \u00de  \u00df\n-     * E-  \u00e0  \u00e1  \u00e2  \u00e3  \u00e4  \u00e5  \u00e6  \u00e7    \u00e8  \u00e9  \u00ea  \u00eb  \u00ec  \u00ed  \u00ee  \u00ef\n-     * F-  \u00f0  \u00f1  \u00f2  \u00f3  \u00f4  \u00f5  \u00f6       \u00f8  \u00f9  \u00fa  \u00fb  \u00fc  \u00fd  \u00fe  \u00ff\n-     */\n-    public static boolean encode( int keyId, String string,\n-                                  PropertyBlock target, int payloadSize )\n+    // Keep track of the possible encodings that can be used for the string\n+    // 0 means none applies\n+    int encodings = determineEncoding(string, data, dataLength, payloadSize);\n+    if (encodings != 0 && tryEncode(encodings, keyId, target, payloadSize, data, dataLength))\n     {\n-        // NUMERICAL can carry most characters, so compare to that\n-        int dataLength = string.length();\n-        // We only use 6 bits for storing the string length\n-        // TODO could be dealt with by having string length zero and go for null bytes,\n-        // at least for LATIN1 (that's what the ShortString implementation initially did)\n-        if ( dataLength > NUMERICAL.maxLength( payloadSize ) || dataLength > 63 )\n-        {\n-            return false; // Not handled by any encoding\n-        }\n-\n-        // Allocate space for the intermediate representation\n-        // (using the intermediate representation table above)\n-        byte[] data = new byte[dataLength];\n-\n-        // Keep track of the possible encodings that can be used for the string\n-        // 0 means none applies\n-        int encodings = determineEncoding( string, data, dataLength, payloadSize );\n-        if ( encodings != 0 && tryEncode( encodings, keyId, target, payloadSize, data, dataLength ) )\n-        {\n-            return true;\n-        }\n-        return encodeWithCharSet( keyId, string, target, payloadSize, dataLength );\n+      return true;\n     }\n-\n-    private static boolean encodeWithCharSet( int keyId, String string, PropertyBlock target, int payloadSize,\n-            int stringLength )\n+    return encodeWithCharSet(keyId, string, target, payloadSize, dataLength);\n+  }\n+\n+  private static boolean encodeWithCharSet(int keyId, String string, PropertyBlock target, int payloadSize,\n+                                           int stringLength)\n+  {\n+    int maxBytes = PropertyType.getPayloadSize();\n+    if (stringLength <= maxBytes - 5)\n     {\n-        int maxBytes = PropertyType.getPayloadSize();\n-        if ( stringLength <= maxBytes - 5 )\n-        {\n-            return encodeLatin1( keyId, string, target ) || encodeUTF8( keyId, string, target, payloadSize );\n-        }\n-        return false;\n+      return encodeLatin1(keyId, string, target) || encodeUTF8(keyId, string, target, payloadSize);\n     }\n+    return false;\n+  }\n \n-    private static boolean tryEncode( int encodings, int keyId, PropertyBlock target, int payloadSize, byte[] data, final int length )\n+  private static boolean tryEncode(int encodings, int keyId, PropertyBlock target, int payloadSize, byte[] data, final int length)\n+  {\n+    // find encoders in order that are still selected and try to encode the data\n+    for (LongerShortString encoding : ENCODINGS)\n     {\n-        // find encoders in order that are still selected and try to encode the data\n-        for ( LongerShortString encoding : ENCODINGS )\n-        {\n-            if ( (encoding.bitMask() & encodings) == 0 )\n-            {\n-                continue;\n-            }\n-            if ( encoding.doEncode( keyId, data, target, payloadSize, length ) )\n-            {\n-                return true;\n-            }\n-        }\n-        return false;\n+      if ((encoding.bitMask() & encodings) == 0)\n+      {\n+        continue;\n+      }\n+      if (encoding.doEncode(keyId, data, target, payloadSize, length))\n+      {\n+        return true;\n+      }\n     }\n-\n-    // inverted combined bit-mask for the encoders\n-    static int invertedBitMask( LongerShortString... encoders )\n+    return false;\n+  }\n+\n+  // inverted combined bit-mask for the encoders\n+  static int invertedBitMask(LongerShortString... encoders)\n+  {\n+    return ~bitMask(encoders);\n+  }\n+\n+  // combined bit-mask for the encoders\n+  private static int bitMask(LongerShortString[] encoders)\n+  {\n+    int result = 0;\n+    for (LongerShortString encoder : encoders)\n     {\n-        return ~bitMask( encoders );\n+      result |= encoder.bitMask();\n     }\n-\n-    // combined bit-mask for the encoders\n-    private static int bitMask( LongerShortString[] encoders )\n+    return result;\n+  }\n+\n+  // translation lookup for each ascii character\n+  private static final int TRANSLATION_COUNT = 256;\n+  // transformation for the char to byte according to the default translation table\n+  private static final byte[] TRANSLATION = new byte[TRANSLATION_COUNT];\n+  // mask for encoders that are not applicable for this character\n+  private static final int[] REMOVE_MASK = new int[TRANSLATION_COUNT];\n+\n+  private static void setUp(char pos, int value, LongerShortString... removeEncodings)\n+  {\n+    TRANSLATION[pos] = (byte) value;\n+    REMOVE_MASK[pos] = invertedBitMask(removeEncodings);\n+  }\n+\n+  static\n+  {\n+    Arrays.fill(TRANSLATION, (byte) 0xFF);\n+    Arrays.fill(REMOVE_MASK, invertedBitMask(ENCODINGS));\n+    setUp(' ', 0, EMAIL, LOWERHEX, UPPERHEX);\n+    setUp('_', 1, NUMERICAL, DATE, LOWERHEX, UPPERHEX);\n+    setUp('.', 2, DATE, ALPHANUM, LOWERHEX, UPPERHEX);\n+    setUp('-', 3, ALPHANUM, LOWERHEX, UPPERHEX);\n+    setUp(':', 4, ALPHANUM, NUMERICAL, EUROPEAN, EMAIL, LOWERHEX, UPPERHEX);\n+    setUp('/', 5, ALPHANUM, NUMERICAL, EUROPEAN, EMAIL, LOWERHEX, UPPERHEX);\n+    setUp('+', 6, UPPER, LOWER, ALPHANUM, EUROPEAN, LOWERHEX, UPPERHEX);\n+    setUp(',', 7, UPPER, LOWER, ALPHANUM, EUROPEAN, LOWERHEX, UPPERHEX);\n+    setUp('\\'', 8, DATE, UPPER, LOWER, EMAIL, ALPHANUM, EUROPEAN, LOWERHEX, UPPERHEX);\n+    setUp('@', 9, NUMERICAL, DATE, UPPER, LOWER, ALPHANUM, EUROPEAN, LOWERHEX, UPPERHEX);\n+    setUp('|', 0xA, NUMERICAL, DATE, UPPER, LOWER, EMAIL, URI, ALPHANUM, EUROPEAN, LOWERHEX, UPPERHEX);\n+    final LongerShortString[] retainUri = {NUMERICAL, DATE, UPPER, LOWER, EMAIL, ALPHANUM, ALPHASYM, EUROPEAN, LOWERHEX, UPPERHEX};\n+    setUp(';', 0xB, retainUri);\n+    setUp('*', 0xC, retainUri);\n+    setUp('?', 0xD, retainUri);\n+    setUp('&', 0xE, retainUri);\n+    setUp('%', 0xF, retainUri);\n+    setUp('#', 0x10, retainUri);\n+    setUp('(', 0x11, retainUri);\n+    setUp(')', 0x12, retainUri);\n+    setUp('$', 0x13, retainUri);\n+    setUp('<', 0x14, retainUri);\n+    setUp('>', 0x15, retainUri);\n+    setUp('=', 0x16, retainUri);\n+    for (char c = 'A'; c <= 'F'; c++)\n     {\n-        int result = 0;\n-        for ( LongerShortString encoder : encoders )\n-        {\n-            result |= encoder.bitMask();\n-        }\n-        return result;\n+      setUp(c, (byte) c, NUMERICAL, DATE, LOWER, EMAIL, URI, LOWERHEX);\n     }\n-\n-    // translation lookup for each ascii character\n-    private static final int TRANSLATION_COUNT = 256;\n-    // transformation for the char to byte according to the default translation table\n-    private static final byte[] TRANSLATION = new byte[TRANSLATION_COUNT];\n-    // mask for encoders that are not applicable for this character\n-    private static final int[] REMOVE_MASK = new int[TRANSLATION_COUNT];\n-\n-    private static void setUp( char pos, int value, LongerShortString... removeEncodings )\n+    for (char c = 'G'; c <= 'Z'; c++)\n     {\n-        TRANSLATION[pos] = (byte) value;\n-        REMOVE_MASK[pos] = invertedBitMask( removeEncodings );\n+      setUp(c, (byte) c, NUMERICAL, DATE, LOWER, EMAIL, URI, LOWERHEX, UPPERHEX);\n     }\n-\n-    static\n+    for (char c = 'a'; c <= 'f'; c++)\n     {\n-        Arrays.fill( TRANSLATION, (byte) 0xFF );\n-        Arrays.fill( REMOVE_MASK, invertedBitMask( ENCODINGS ) );\n-        setUp( ' ', 0, EMAIL, LOWERHEX, UPPERHEX );\n-        setUp( '_', 1, NUMERICAL, DATE, LOWERHEX, UPPERHEX );\n-        setUp( '.', 2, DATE, ALPHANUM, LOWERHEX, UPPERHEX );\n-        setUp( '-', 3, ALPHANUM, LOWERHEX, UPPERHEX );\n-        setUp( ':', 4, ALPHANUM, NUMERICAL, EUROPEAN, EMAIL, LOWERHEX, UPPERHEX );\n-        setUp( '/', 5, ALPHANUM, NUMERICAL, EUROPEAN, EMAIL, LOWERHEX, UPPERHEX );\n-        setUp( '+', 6, UPPER, LOWER, ALPHANUM, EUROPEAN, LOWERHEX, UPPERHEX );\n-        setUp( ',', 7, UPPER, LOWER, ALPHANUM, EUROPEAN, LOWERHEX, UPPERHEX );\n-        setUp( '\\'', 8, DATE, UPPER, LOWER, EMAIL, ALPHANUM, EUROPEAN, LOWERHEX, UPPERHEX );\n-        setUp( '@', 9, NUMERICAL, DATE, UPPER, LOWER, ALPHANUM, EUROPEAN, LOWERHEX, UPPERHEX );\n-        setUp( '|', 0xA, NUMERICAL, DATE, UPPER, LOWER, EMAIL, URI, ALPHANUM, EUROPEAN, LOWERHEX, UPPERHEX );\n-        final LongerShortString[] retainUri = {NUMERICAL, DATE, UPPER, LOWER, EMAIL, ALPHANUM, ALPHASYM, EUROPEAN, LOWERHEX, UPPERHEX};\n-        setUp( ';', 0xB, retainUri );\n-        setUp( '*', 0xC, retainUri );\n-        setUp( '?', 0xD, retainUri );\n-        setUp( '&', 0xE, retainUri );\n-        setUp( '%', 0xF, retainUri );\n-        setUp( '#', 0x10, retainUri );\n-        setUp( '(', 0x11, retainUri );\n-        setUp( ')', 0x12, retainUri );\n-        setUp( '$', 0x13, retainUri );\n-        setUp( '<', 0x14, retainUri );\n-        setUp( '>', 0x15, retainUri );\n-        setUp( '=', 0x16, retainUri );\n-        for ( char c = 'A'; c <= 'F'; c++ )\n-        {\n-            setUp( c, (byte) c, NUMERICAL, DATE, LOWER, EMAIL, URI, LOWERHEX );\n-        }\n-        for ( char c = 'G'; c <= 'Z'; c++ )\n-        {\n-            setUp( c, (byte) c, NUMERICAL, DATE, LOWER, EMAIL, URI, LOWERHEX, UPPERHEX );\n-        }\n-        for ( char c = 'a'; c <= 'f'; c++ )\n-        {\n-            setUp( c, (byte) c, NUMERICAL, DATE, UPPER, UPPERHEX );\n-        }\n-        for ( char c = 'g'; c <= 'z'; c++ )\n-        {\n-            setUp( c, (byte) c, NUMERICAL, DATE, UPPER, UPPERHEX, LOWERHEX );\n-        }\n-        for ( char c = '0'; c <= '9'; c++ )\n-        {\n-            setUp( c, (byte) c, UPPER, LOWER, EMAIL, ALPHASYM );\n-        }\n-        for ( char c = '\u00c0'; c <= '\u00ff'; c++ )\n-        {\n-            if ( c != 0xD7 && c != 0xF7 )\n-            {\n-                setUp( c, (byte) c, NUMERICAL, DATE, UPPER, LOWER, EMAIL, URI, ALPHANUM, ALPHASYM, LOWERHEX, UPPERHEX );\n-            }\n-        }\n+      setUp(c, (byte) c, NUMERICAL, DATE, UPPER, UPPERHEX);\n     }\n-\n-    private static int determineEncoding( String string, byte[] data, int length, int payloadSize )\n+    for (char c = 'g'; c <= 'z'; c++)\n     {\n-        if ( length == 0 )\n-        {\n-            return 0;\n-        }\n-        int encodings = ALL_BIT_MASK;\n-        // filter out larger encodings in one go\n-        if ( length > ALPHANUM.maxLength( payloadSize ) )\n-        {\n-            encodings &= REMOVE_LARGE_ENCODINGS_MASK;\n-        }\n-        for ( int i = 0; i < length; i++ )\n-        {\n-            char c = string.charAt( i );\n-            // non ASCII chars not supported\n-            if ( c >= TRANSLATION_COUNT )\n-            {\n-                return 0;\n-            }\n-            data[i] = TRANSLATION[c];\n-            // remove not matching encoders\n-            encodings &= REMOVE_MASK[c];\n-            if ( encodings == 0 )\n-            {\n-                return 0;\n-            }\n-        }\n-        return encodings;\n+      setUp(c, (byte) c, NUMERICAL, DATE, UPPER, UPPERHEX, LOWERHEX);\n     }\n-\n-    int bitMask()\n+    for (char c = '0'; c <= '9'; c++)\n     {\n-        return 1 << ordinal();\n+      setUp(c, (byte) c, UPPER, LOWER, EMAIL, ALPHASYM);\n     }\n-\n-    private static void writeHeader( Bits bits, int keyId, int encoding, int stringLength )\n+    for (char c = '\u00c0'; c <= '\u00ff'; c++)\n     {\n-        // [][][][ lll,llle][eeee,tttt][kkkk,kkkk][kkkk,kkkk][kkkk,kkkk]\n-        bits.put( keyId, 24 ).put( PropertyType.SHORT_STRING.intValue(), 4 ).put( encoding, 5 ).put( stringLength, 6 );\n+      if (c != 0xD7 && c != 0xF7)\n+      {\n+        setUp(c, (byte) c, NUMERICAL, DATE, UPPER, LOWER, EMAIL, URI, ALPHANUM, ALPHASYM, LOWERHEX, UPPERHEX);\n+      }\n     }\n+  }\n \n-    /**\n-     * Decode a short string represented as a long[]\n-     *\n-     * @param block the value to decode to a short string.\n-     * @return the decoded short string\n-     */\n-    public static TextValue decode( PropertyBlock block )\n+  private static int determineEncoding(String string, byte[] data, int length, int payloadSize)\n+  {\n+    if (length == 0)\n     {\n-        return decode( block.getValueBlocks(), 0, block.getValueBlocks().length );\n+      return 0;\n     }\n-\n-    public static TextValue decode( long[] blocks, int offset, int length )\n+    int encodings = ALL_BIT_MASK;\n+    // filter out larger encodings in one go\n+    if (length > ALPHANUM.maxLength(payloadSize))\n     {\n-        long firstLong = blocks[offset];\n-        if ( (firstLong & 0xFFFFFF0FFFFFFFFFL) == 0 )\n-        {\n-            return Values.EMPTY_STRING;\n-        }\n-        // key(24b) + type(4) = 28\n-        int encoding = (int) ((firstLong & 0x1F0000000L) >>> 28); // 5 bits of encoding\n-        int stringLength = (int) ((firstLong & 0x7E00000000L) >>> 33); // 6 bits of stringLength\n-        if ( encoding == LongerShortString.ENCODING_UTF8 )\n-        {\n-            return decodeUTF8( blocks, offset, stringLength );\n-        }\n-        if ( encoding == ENCODING_LATIN1 )\n-        {\n-            return decodeLatin1( blocks, offset, stringLength );\n-        }\n-\n-        LongerShortString table = getEncodingTable( encoding );\n-        assert table != null : \"We only decode LongerShortStrings after we have consistently read the PropertyBlock \" +\n-                \"data from the page cache. Thus, we should never have an invalid encoding header here.\";\n-        char[] result = new char[stringLength];\n-        // encode shifts in the bytes with the first char at the MSB, therefore\n-        // we must \"unshift\" in the reverse order\n-        decode( result, blocks, offset, table );\n-\n-        // We know the char array is unshared, so use sharing constructor explicitly\n-        return Values.stringValue( UnsafeUtil.newSharedArrayString( result ) );\n+      encodings &= REMOVE_LARGE_ENCODINGS_MASK;\n     }\n-\n-    private static void decode( char[] result, long[] blocks, int offset, LongerShortString table )\n+    for (int i = 0; i < length; i++)\n     {\n-        int block = offset;\n-        int maskShift = HEADER_SIZE;\n-        long baseMask = table.mask;\n-        for ( int i = 0; i < result.length; i++ )\n-        {\n-            byte codePoint = (byte) ((blocks[block] >>> maskShift) & baseMask);\n-            maskShift += table.step;\n-            if ( maskShift >= 64 && block + 1 < blocks.length )\n-            {\n-                maskShift %= 64;\n-                codePoint |= (blocks[++block] & (baseMask >>> (table.step - maskShift))) << (table.step - maskShift);\n-            }\n-            result[i] = table.decTranslate( codePoint );\n-        }\n+      char c = string.charAt(i);\n+      // non ASCII chars not supported\n+      if (c >= TRANSLATION_COUNT)\n+      {\n+        return 0;\n+      }\n+      data[i] = TRANSLATION[c];\n+      // remove not matching encoders\n+      encodings &= REMOVE_MASK[c];\n+      if (encodings == 0)\n+      {\n+        return 0;\n+      }\n     }\n-\n-    // lookup table by encoding header\n-    // +2 because of ENCODING_LATIN1 gap and one based index\n-    private static final LongerShortString[] ENCODINGS_BY_ENCODING = new LongerShortString[ENCODING_COUNT + 2];\n-\n-    static\n+    return encodings;\n+  }\n+\n+  int bitMask()\n+  {\n+    return 1 << ordinal();\n+  }\n+\n+  private static void writeHeader(Bits bits, int keyId, int encoding, int stringLength)\n+  {\n+    // [][][][ lll,llle][eeee,tttt][kkkk,kkkk][kkkk,kkkk][kkkk,kkkk]\n+    bits.put(keyId, 24).put(PropertyType.SHORT_STRING.intValue(), 4).put(encoding, 5).put(stringLength, 6);\n+  }\n+\n+  /**\n+   * Decode a short string represented as a long[]\n+   *\n+   * @param block the value to decode to a short string.\n+   * @return the decoded short string\n+   */\n+  public static TextValue decode(PropertyBlock block)\n+  {\n+    return decode(block.getValueBlocks(), 0, block.getValueBlocks().length);\n+  }\n+\n+  public static TextValue decode(long[] blocks, int offset, int length)\n+  {\n+    long firstLong = blocks[offset];\n+    if ((firstLong & 0xFFFFFF0FFFFFFFFFL) == 0)\n     {\n-        for ( LongerShortString encoding : ENCODINGS )\n-        {\n-            ENCODINGS_BY_ENCODING[encoding.encodingHeader] = encoding;\n-        }\n+      return Values.EMPTY_STRING;\n     }\n-\n-    /**\n-     * Get encoding table for the given encoding header, or {@code null} if the encoding header is invalid.\n-     */\n-    private static LongerShortString getEncodingTable( int encodingHeader )\n+    // key(24b) + type(4) = 28\n+    int encoding = (int) ((firstLong & 0x1F0000000L) >>> 28); // 5 bits of encoding\n+    int stringLength = (int) ((firstLong & 0x7E00000000L) >>> 33); // 6 bits of stringLength\n+    if (encoding == LongerShortString.ENCODING_UTF8)\n     {\n-        if ( encodingHeader < 0 | ENCODINGS_BY_ENCODING.length <= encodingHeader )\n-        {\n-            return null;\n-        }\n-        return ENCODINGS_BY_ENCODING[encodingHeader];\n+      return decodeUTF8(blocks, offset, stringLength);\n     }\n-\n-    private static Bits newBits( LongerShortString encoding, int length )\n+    if (encoding == ENCODING_LATIN1)\n     {\n-        return Bits.bits(calculateNumberOfBlocksUsed( encoding, length ) << 3 ); //*8\n+      return decodeLatin1(blocks, offset, stringLength);\n     }\n \n-    private static Bits newBitsForStep8( int length )\n+    LongerShortString table = getEncodingTable(encoding);\n+    assert table != null : \"We only decode LongerShortStrings after we have consistently read the PropertyBlock \" +\n+        \"data from the page cache. Thus, we should never have an invalid encoding header here.\";\n+    char[] result = new char[stringLength];\n+    // encode shifts in the bytes with the first char at the MSB, therefore\n+    // we must \"unshift\" in the reverse order\n+    decode(result, blocks, offset, table);\n+\n+    // We know the char array is unshared, so use sharing constructor explicitly\n+    return Values.stringValue(UnsafeUtil.newSharedArrayString(result));\n+  }\n+\n+  private static void decode(char[] result, long[] blocks, int offset, LongerShortString table)\n+  {\n+    int block = offset;\n+    int maskShift = HEADER_SIZE;\n+    long baseMask = table.mask;\n+    for (int i = 0; i < result.length; i++)\n     {\n-        return Bits.bits(calculateNumberOfBlocksUsedForStep8(length) << 3 ); //*8\n+      byte codePoint = (byte) ((blocks[block] >>> maskShift) & baseMask);\n+      maskShift += table.step;\n+      if (maskShift >= 64 && block + 1 < blocks.length)\n+      {\n+        maskShift %= 64;\n+        codePoint |= (blocks[++block] & (baseMask >>> (table.step - maskShift))) << (table.step - maskShift);\n+      }\n+      result[i] = table.decTranslate(codePoint);\n     }\n+  }\n+\n+  // lookup table by encoding header\n+  // +2 because of ENCODING_LATIN1 gap and one based index\n+  private static final LongerShortString[] ENCODINGS_BY_ENCODING = new LongerShortString[ENCODING_COUNT + 2];\n \n-    private static boolean encodeLatin1( int keyId, String string, PropertyBlock target )\n+  static\n+  {\n+    for (LongerShortString encoding : ENCODINGS)\n     {\n-        int length = string.length();\n-        Bits bits = newBitsForStep8(length);\n-        writeHeader( bits, keyId, ENCODING_LATIN1, length );\n-        if ( !writeLatin1Characters( string, bits ) )\n-        {\n-            return false;\n-        }\n-        target.setValueBlocks( bits.getLongs() );\n-        return true;\n+      ENCODINGS_BY_ENCODING[encoding.encodingHeader] = encoding;\n     }\n-\n-    public static boolean writeLatin1Characters( String string, Bits bits )\n+  }\n+\n+  /**\n+   * Get encoding table for the given encoding header, or {@code null} if the encoding header is invalid.\n+   */\n+  private static LongerShortString getEncodingTable(int encodingHeader)\n+  {\n+    if (encodingHeader < 0 | ENCODINGS_BY_ENCODING.length <= encodingHeader)\n     {\n-        int length = string.length();\n-        for ( int i = 0; i < length; i++ )\n-        {\n-            char c = string.charAt( i );\n-            if ( c >= 256 )\n-            {\n-                return false;\n-            }\n-            bits.put( c, 8 ); // Just the lower byte\n-        }\n-        return true;\n+      return null;\n     }\n-\n-    private static boolean encodeUTF8( int keyId, String string, PropertyBlock target, int payloadSize )\n+    return ENCODINGS_BY_ENCODING[encodingHeader];\n+  }\n+\n+  private static Bits newBits(LongerShortString encoding, int length)\n+  {\n+    return Bits.bits(calculateNumberOfBlocksUsed(encoding, length) << 3); //*8\n+  }\n+\n+  private static Bits newBitsForStep8(int length)\n+  {\n+    return Bits.bits(calculateNumberOfBlocksUsedForStep8(length) << 3); //*8\n+  }\n+\n+  private static boolean encodeLatin1(int keyId, String string, PropertyBlock target)\n+  {\n+    int length = string.length();\n+    Bits bits = newBitsForStep8(length);\n+    writeHeader(bits, keyId, ENCODING_LATIN1, length);\n+    if (!writeLatin1Characters(string, bits))\n     {\n-        byte[] bytes = string.getBytes( StandardCharsets.UTF_8 );\n-        final int length = bytes.length;\n-        if ( length > payloadSize - 3/*key*/ - 2/*enc+len*/ )\n-        {\n-            return false;\n-        }\n-        Bits bits = newBitsForStep8(length);\n-        writeHeader( bits, keyId, ENCODING_UTF8, length); // In this case it isn't the string length, but the number of bytes\n-        for ( byte value : bytes )\n-        {\n-            bits.put( value );\n-        }\n-        target.setValueBlocks( bits.getLongs() );\n-        return true;\n+      return false;\n     }\n-\n-    private boolean doEncode( int keyId, byte[] data, PropertyBlock target, int payloadSize, final int length )\n+    target.setValueBlocks(bits.getLongs());\n+    return true;\n+  }\n+\n+  public static boolean writeLatin1Characters(String string, Bits bits)\n+  {\n+    int length = string.length();\n+    for (int i = 0; i < length; i++)\n     {\n-        if ( length > maxLength( payloadSize ) )\n-        {\n-            return false;\n-        }\n-        Bits bits = newBits( this, length );\n-        writeHeader( bits, keyId, encodingHeader, length );\n-        if ( length > 0 )\n-        {\n-            translateData( bits, data, length, step );\n-        }\n-        target.setValueBlocks( bits.getLongs() );\n-        return true;\n+      char c = string.charAt(i);\n+      if (c >= 256)\n+      {\n+        return false;\n+      }\n+      bits.put(c, 8); // Just the lower byte\n     }\n-\n-    private void translateData( Bits bits, byte[] data, int length, final int step )\n+    return true;\n+  }\n+\n+  private static boolean encodeUTF8(int keyId, String string, PropertyBlock target, int payloadSize)\n+  {\n+    byte[] bytes = string.getBytes(StandardCharsets.UTF_8);\n+    final int length = bytes.length;\n+    if (length > payloadSize - 3/*key*/ - 2/*enc+len*/)\n     {\n-        for ( int i = 0; i < length; i++ )\n-        {\n-            bits.put(encTranslate(data[i]), step);\n-        }\n+      return false;\n     }\n-\n-    private static TextValue decodeLatin1( long[] blocks, int offset, int stringLength )\n+    Bits bits = newBitsForStep8(length);\n+    writeHeader(bits, keyId, ENCODING_UTF8, length); // In this case it isn't the string length, but the number of bytes\n+    for (byte value : bytes)\n     {\n-        char[] result = new char[stringLength];\n-        int block = offset;\n-        int maskShift = HEADER_SIZE;\n-        for ( int i = 0; i < result.length; i++ )\n-        {\n-            char codePoint = (char) ((blocks[block] >>> maskShift) & 0xFF);\n-            maskShift += 8;\n-            if ( maskShift >= 64 )\n-            {\n-                maskShift %= 64;\n-                codePoint |= (blocks[++block] & (0xFF >>> (8 - maskShift))) << (8 - maskShift);\n-            }\n-            result[i] = codePoint;\n-        }\n-        return Values.stringValue( UnsafeUtil.newSharedArrayString( result ) );\n+      bits.put(value);\n     }\n+    target.setValueBlocks(bits.getLongs());\n+    return true;\n+  }\n \n-    private static TextValue decodeUTF8( long[] blocks, int offset, int stringLength )\n+  private boolean doEncode(int keyId, byte[] data, PropertyBlock target, int payloadSize, final int length)\n+  {\n+    if (length > maxLength(payloadSize))\n     {\n-        byte[] result = new byte[stringLength];\n-        int block = offset;\n-        int maskShift = HEADER_SIZE;\n-        for ( int i = 0; i < result.length; i++ )\n-        {\n-            byte codePoint = (byte) (blocks[block] >>> maskShift);\n-            maskShift += 8;\n-            if ( maskShift >= 64 )\n-            {\n-                maskShift %= 64;\n-                codePoint |= (blocks[++block] & (0xFF >>> (8 - maskShift))) << (8 - maskShift);\n-            }\n-            result[i] = codePoint;\n-        }\n-        return Values.utf8Value( result );\n+      return false;\n     }\n-\n-    public static int calculateNumberOfBlocksUsed( long firstBlock )\n+    Bits bits = newBits(this, length);\n+    writeHeader(bits, keyId, encodingHeader, length);\n+    if (length > 0)\n     {\n-        /*\n-         * [ lll,llle][eeee,tttt][kkkk,kkkk][kkkk,kkkk][kkkk,kkkk]\n-         */\n-        int encoding = (int) ( ( firstBlock & 0x1F0000000L ) >> 28 );\n-        int length = (int) ( ( firstBlock & 0x7E00000000L ) >> 33 );\n-        if ( encoding == ENCODING_UTF8 || encoding == ENCODING_LATIN1 )\n-        {\n-            return calculateNumberOfBlocksUsedForStep8(length);\n-        }\n-\n-        LongerShortString encodingTable = getEncodingTable( encoding );\n-        if ( encodingTable == null )\n-        {\n-            // We probably did an inconsistent read of the first block\n-            return PropertyType.BLOCKS_USED_FOR_BAD_TYPE_OR_ENCODING;\n-        }\n-        return calculateNumberOfBlocksUsed( encodingTable, length );\n+      translateData(bits, data, length, step);\n     }\n+    target.setValueBlocks(bits.getLongs());\n+    return true;\n+  }\n \n-    public static int calculateNumberOfBlocksUsedForStep8( int length )\n+  private void translateData(Bits bits, byte[] data, int length, final int step)\n+  {\n+    for (int i = 0; i < length; i++)\n+    {\n+      bits.put(encTranslate(data[i]), step);\n+    }\n+  }\n+\n+  private static TextValue decodeLatin1(long[] blocks, int offset, int stringLength)\n+  {\n+    char[] result = new char[stringLength];\n+    int block = offset;\n+    int maskShift = HEADER_SIZE;\n+    for (int i = 0; i < result.length; i++)\n     {\n-        return totalBits( length << 3 ); // * 8\n+      char codePoint = (char) ((blocks[block] >>> maskShift) & 0xFF);\n+      maskShift += 8;\n+      if (maskShift >= 64)\n+      {\n+        maskShift %= 64;\n+        codePoint |= (blocks[++block] & (0xFF >>> (8 - maskShift))) << (8 - maskShift);\n+      }\n+      result[i] = codePoint;\n     }\n+    return Values.stringValue(UnsafeUtil.newSharedArrayString(result));\n+  }\n+\n+  private static TextValue decodeUTF8(long[] blocks, int offset, int stringLength)\n+  {\n+    byte[] result = new byte[stringLength];\n+    int block = offset;\n+    int maskShift = HEADER_SIZE;\n+    for (int i = 0; i < result.length; i++)\n+    {\n+      byte codePoint = (byte) (blocks[block] >>> maskShift);\n+      maskShift += 8;\n+      if (maskShift >= 64)\n+      {\n+        maskShift %= 64;\n+        codePoint |= (blocks[++block] & (0xFF >>> (8 - maskShift))) << (8 - maskShift);\n+      }\n+      result[i] = codePoint;\n+    }\n+    return Values.utf8Value(result);\n+  }\n \n-    public static int calculateNumberOfBlocksUsed( LongerShortString encoding, int length )\n+  public static int calculateNumberOfBlocksUsed(long firstBlock)\n+  {\n+    /*\n+     * [ lll,llle][eeee,tttt][kkkk,kkkk][kkkk,kkkk][kkkk,kkkk]\n+     */\n+    int encoding = (int) ((firstBlock & 0x1F0000000L) >> 28);\n+    int length = (int) ((firstBlock & 0x7E00000000L) >> 33);\n+    if (encoding == ENCODING_UTF8 || encoding == ENCODING_LATIN1)\n     {\n-        return totalBits( length * encoding.step );\n+      return calculateNumberOfBlocksUsedForStep8(length);\n     }\n \n-    private static int totalBits( int bitsForCharacters )\n+    LongerShortString encodingTable = getEncodingTable(encoding);\n+    if (encodingTable == null)\n     {\n-        int bitsInTotal = 24 + 4 + 5 + 6 + bitsForCharacters;\n-        return ((bitsInTotal - 1) >> 6) + 1; // /64\n+      // We probably did an inconsistent read of the first block\n+      return PropertyType.BLOCKS_USED_FOR_BAD_TYPE_OR_ENCODING;\n     }\n+    return calculateNumberOfBlocksUsed(encodingTable, length);\n+  }\n+\n+  public static int calculateNumberOfBlocksUsedForStep8(int length)\n+  {\n+    return totalBits(length << 3); // * 8\n+  }\n+\n+  public static int calculateNumberOfBlocksUsed(LongerShortString encoding, int length)\n+  {\n+    return totalBits(length * encoding.step);\n+  }\n+\n+  private static int totalBits(int bitsForCharacters)\n+  {\n+    int bitsInTotal = 24 + 4 + 5 + 6 + bitsForCharacters;\n+    return ((bitsInTotal - 1) >> 6) + 1; // /64\n+  }\n }\n",
            "diff_size": 1297
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
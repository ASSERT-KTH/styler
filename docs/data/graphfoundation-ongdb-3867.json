{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3867",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "95",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "173",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "241",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "243",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "277",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "298",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "306",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "318",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "339",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "345",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "347",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "347",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "349",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "357",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "357",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "359",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "363",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "365",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "376",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "385",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "389",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "408",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "413",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "413",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "415",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "437",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "441",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "443",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "462",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "475",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "477",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "495",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "500",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "502",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "505",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "505",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "507",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "513",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "513",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "526",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "526",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "534",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "534",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "536",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "536",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "545",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "548",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "556",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "556",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "559",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "559",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "561",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "561",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "564",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "569",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "574",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "580",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "580",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "580",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "596",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "602",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "604",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "610",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "613",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "613",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "613",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "622",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "622",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "628",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "628",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "636",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "636",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "642",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "642",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "647",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "647",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "652",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "652",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "652",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "654",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "654",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "660",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "660",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "662",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "662",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "664",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "664",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3867/LuceneDataSource.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3867/LuceneDataSource.java\nindex e0737b872fd..2cd00377192 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3867/LuceneDataSource.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3867/LuceneDataSource.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import org.apache.lucene.analysis.Analyzer;\n@@ -79,599 +80,587 @@ import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n  */\n public class LuceneDataSource extends LifecycleAdapter\n {\n-    public abstract static class Configuration\n-    {\n-        public static final Setting<Integer> lucene_searcher_cache_size = GraphDatabaseSettings.lucene_searcher_cache_size;\n-        public static final Setting<Boolean> ephemeral = GraphDatabaseFacadeFactory.Configuration.ephemeral;\n-    }\n-\n-    /**\n-     * Default {@link Analyzer} for fulltext parsing.\n-     */\n-    static final Analyzer LOWER_CASE_WHITESPACE_ANALYZER = new Analyzer()\n-    {\n-        @Override\n-        protected TokenStreamComponents createComponents( String fieldName )\n-        {\n-            Tokenizer source = new WhitespaceTokenizer();\n-            TokenStream filter = new LowerCaseFilter( source );\n-            return new TokenStreamComponents( source, filter );\n-        }\n-\n-        @Override\n-        public String toString()\n-        {\n-            return \"LOWER_CASE_WHITESPACE_ANALYZER\";\n-        }\n-    };\n-\n-    public static final Analyzer WHITESPACE_ANALYZER = new WhitespaceAnalyzer();\n-    public static final Analyzer KEYWORD_ANALYZER = new KeywordAnalyzer();\n-    private final File storeDir;\n-    private final Config config;\n-    private final FileSystemAbstraction fileSystemAbstraction;\n-    private final OperationalMode operationalMode;\n-    private IndexClockCache indexSearchers;\n-    private File baseStorePath;\n-    private final ReentrantReadWriteLock lock = new ReentrantReadWriteLock();\n-    private final IndexConfigStore indexStore;\n-    private IndexTypeCache typeCache;\n-    private boolean readOnly;\n-    private boolean closed;\n-    private IndexReferenceFactory indexReferenceFactory;\n-    private Map<IndexIdentifier,Map<String,DocValuesType>> indexTypeMap;\n-\n-    /**\n-     * Constructs this data source.\n-     */\n-    public LuceneDataSource( File storeDir, Config config, IndexConfigStore indexStore,\n-            FileSystemAbstraction fileSystemAbstraction, OperationalMode operationalMode )\n-    {\n-        this.storeDir = storeDir;\n-        this.config = config;\n-        this.indexStore = indexStore;\n-        this.typeCache = new IndexTypeCache( indexStore );\n-        this.fileSystemAbstraction = fileSystemAbstraction;\n-        this.operationalMode = operationalMode;\n-    }\n-\n+  public abstract static class Configuration\n+  {\n+    public static final Setting<Integer> lucene_searcher_cache_size = GraphDatabaseSettings.lucene_searcher_cache_size;\n+    public static final Setting<Boolean> ephemeral = GraphDatabaseFacadeFactory.Configuration.ephemeral;\n+  }\n+\n+  /**\n+   * Default {@link Analyzer} for fulltext parsing.\n+   */\n+  static final Analyzer LOWER_CASE_WHITESPACE_ANALYZER = new Analyzer()\n+  {\n     @Override\n-    public void init()\n-    {\n-        LuceneFilesystemFacade filesystemFacade =\n-                config.get( Configuration.ephemeral ) ? LuceneFilesystemFacade.MEMORY : LuceneFilesystemFacade.FS;\n-        readOnly = isReadOnly( config, operationalMode );\n-        indexSearchers = new IndexClockCache( config.get( Configuration.lucene_searcher_cache_size ) );\n-        this.baseStorePath = filesystemFacade.ensureDirectoryExists( fileSystemAbstraction,\n-                getLuceneIndexStoreDirectory( storeDir ) );\n-        filesystemFacade.cleanWriteLocks( baseStorePath );\n-        this.typeCache = new IndexTypeCache( indexStore );\n-        this.indexReferenceFactory = readOnly ?\n-                                     new ReadOnlyIndexReferenceFactory( filesystemFacade, baseStorePath, typeCache ) :\n-                                     new WritableIndexReferenceFactory( filesystemFacade, baseStorePath, typeCache );\n-        this.indexTypeMap = new ConcurrentHashMap<>();\n-        closed = false;\n-    }\n-\n-    void assertValidType( String key, Object value, IndexIdentifier identifier ) throws ExplicitIndexNotFoundKernelException\n+    protected TokenStreamComponents createComponents(String fieldName)\n     {\n-        DocValuesType expectedType;\n-        String expectedTypeName;\n-        if ( value instanceof Number )\n-        {\n-            expectedType = DocValuesType.SORTED_NUMERIC;\n-            expectedTypeName = \"numbers\";\n-        }\n-        else\n-        {\n-            expectedType = DocValuesType.SORTED_SET;\n-            expectedTypeName = \"strings\";\n-        }\n-        Map<String,DocValuesType> stringDocValuesTypeMap = indexTypeMap.get( identifier );\n-        // If the index searcher has never been loaded, we need to load it now to populate the map.\n-        int iterations = 0; // Iterate a bit in case we race with an index drop or create.\n-        while ( stringDocValuesTypeMap == null && iterations++ < 20 )\n-        {\n-            // We don't use ensureInstantiated because we want to surface the exception in this case.\n-            getIndexSearcher( identifier ).close();\n-            stringDocValuesTypeMap = indexTypeMap.get( identifier );\n-        }\n-\n-        if ( stringDocValuesTypeMap == null )\n-        {\n-            // Looks like we are running into some adversarial racing, so let's just give up.\n-            throw new ExplicitIndexNotFoundKernelException( \"Index '%s' doesn't exist.\", identifier );\n-        }\n-\n-        DocValuesType actualType = stringDocValuesTypeMap.putIfAbsent( key, expectedType );\n-        if ( actualType != null && !actualType.equals( DocValuesType.NONE ) && !actualType.equals( expectedType ) )\n-        {\n-            throw new IllegalArgumentException( String.format(\n-                    \"Cannot index '%s' for key '%s', since this key has been used to index %s. Raw value of the index type is %s\",\n-                    value, key, expectedTypeName, actualType ) );\n-\n-        }\n-    }\n-\n-    public static File getLuceneIndexStoreDirectory( File storeDir )\n-    {\n-        return new File( storeDir, \"index\" );\n-    }\n-\n-    IndexType getType( IndexIdentifier identifier, boolean recovery ) throws ExplicitIndexNotFoundKernelException\n-    {\n-        return typeCache.getIndexType( identifier, recovery );\n+      Tokenizer source = new WhitespaceTokenizer();\n+      TokenStream filter = new LowerCaseFilter(source);\n+      return new TokenStreamComponents(source, filter);\n     }\n \n     @Override\n-    public void shutdown() throws IOException\n-    {\n-        synchronized ( this )\n-        {\n-            if ( closed )\n+    public String toString()\n+    {\n+      return \"LOWER_CASE_WHITESPACE_ANALYZER\";\n+    }\n+  };\n+\n+  public static final Analyzer WHITESPACE_ANALYZER = new WhitespaceAnalyzer();\n+  public static final Analyzer KEYWORD_ANALYZER = new KeywordAnalyzer();\n+  private final File storeDir;\n+  private final Config config;\n+  private final FileSystemAbstraction fileSystemAbstraction;\n+  private final OperationalMode operationalMode;\n+  private IndexClockCache indexSearchers;\n+  private File baseStorePath;\n+  private final ReentrantReadWriteLock lock = new ReentrantReadWriteLock();\n+  private final IndexConfigStore indexStore;\n+  private IndexTypeCache typeCache;\n+  private boolean readOnly;\n+  private boolean closed;\n+  private IndexReferenceFactory indexReferenceFactory;\n+  private Map<IndexIdentifier, Map<String, DocValuesType>> indexTypeMap;\n+\n+  /**\n+   * Constructs this data source.\n+   */\n+  public LuceneDataSource(File storeDir, Config config, IndexConfigStore indexStore,\n+                          FileSystemAbstraction fileSystemAbstraction, OperationalMode operationalMode)\n+  {\n+    this.storeDir = storeDir;\n+    this.config = config;\n+    this.indexStore = indexStore;\n+    this.typeCache = new IndexTypeCache(indexStore);\n+    this.fileSystemAbstraction = fileSystemAbstraction;\n+    this.operationalMode = operationalMode;\n+  }\n+\n+  @Override\n+  public void init()\n+  {\n+    LuceneFilesystemFacade filesystemFacade =\n+        config.get(Configuration.ephemeral) ? LuceneFilesystemFacade.MEMORY : LuceneFilesystemFacade.FS;\n+    readOnly = isReadOnly(config, operationalMode);\n+    indexSearchers = new IndexClockCache(config.get(Configuration.lucene_searcher_cache_size));\n+    this.baseStorePath = filesystemFacade.ensureDirectoryExists(fileSystemAbstraction,\n+        getLuceneIndexStoreDirectory(storeDir));\n+    filesystemFacade.cleanWriteLocks(baseStorePath);\n+    this.typeCache = new IndexTypeCache(indexStore);\n+    this.indexReferenceFactory = readOnly ?\n+        new ReadOnlyIndexReferenceFactory(filesystemFacade, baseStorePath, typeCache) :\n+        new WritableIndexReferenceFactory(filesystemFacade, baseStorePath, typeCache);\n+    this.indexTypeMap = new ConcurrentHashMap<>();\n+    closed = false;\n+  }\n+\n+  void assertValidType(String key, Object value, IndexIdentifier identifier) throws ExplicitIndexNotFoundKernelException\n+  {\n+    DocValuesType expectedType;\n+    String expectedTypeName;\n+    if (value instanceof Number)\n+    {\n+      expectedType = DocValuesType.SORTED_NUMERIC;\n+      expectedTypeName = \"numbers\";\n+    } else\n+    {\n+      expectedType = DocValuesType.SORTED_SET;\n+      expectedTypeName = \"strings\";\n+    }\n+    Map<String, DocValuesType> stringDocValuesTypeMap = indexTypeMap.get(identifier);\n+    // If the index searcher has never been loaded, we need to load it now to populate the map.\n+    int iterations = 0; // Iterate a bit in case we race with an index drop or create.\n+    while (stringDocValuesTypeMap == null && iterations++ < 20)\n+    {\n+      // We don't use ensureInstantiated because we want to surface the exception in this case.\n+      getIndexSearcher(identifier).close();\n+      stringDocValuesTypeMap = indexTypeMap.get(identifier);\n+    }\n+\n+    if (stringDocValuesTypeMap == null)\n+    {\n+      // Looks like we are running into some adversarial racing, so let's just give up.\n+      throw new ExplicitIndexNotFoundKernelException(\"Index '%s' doesn't exist.\", identifier);\n+    }\n+\n+    DocValuesType actualType = stringDocValuesTypeMap.putIfAbsent(key, expectedType);\n+    if (actualType != null && !actualType.equals(DocValuesType.NONE) && !actualType.equals(expectedType))\n+    {\n+      throw new IllegalArgumentException(String.format(\n+          \"Cannot index '%s' for key '%s', since this key has been used to index %s. Raw value of the index type is %s\",\n+          value, key, expectedTypeName, actualType));\n+\n+    }\n+  }\n+\n+  public static File getLuceneIndexStoreDirectory(File storeDir)\n+  {\n+    return new File(storeDir, \"index\");\n+  }\n+\n+  IndexType getType(IndexIdentifier identifier, boolean recovery) throws ExplicitIndexNotFoundKernelException\n+  {\n+    return typeCache.getIndexType(identifier, recovery);\n+  }\n+\n+  @Override\n+  public void shutdown() throws IOException\n+  {\n+    synchronized (this)\n+    {\n+      if (closed)\n+      {\n+        return;\n+      }\n+      closed = true;\n+      for (IndexReference searcher : indexSearchers.values())\n+      {\n+        searcher.dispose();\n+      }\n+      indexSearchers.clear();\n+    }\n+  }\n+\n+  private synchronized IndexReference[] getAllIndexes()\n+  {\n+    Collection<IndexReference> indexReferences = indexSearchers.values();\n+    return indexReferences.toArray(new IndexReference[0]);\n+  }\n+\n+  void force()\n+  {\n+    if (readOnly)\n+    {\n+      return;\n+    }\n+    for (IndexReference index : getAllIndexes())\n+    {\n+      try\n+      {\n+        index.getWriter().commit();\n+      } catch (IOException e)\n+      {\n+        throw new RuntimeException(\"Unable to commit changes to \" + index.getIdentifier(), e);\n+      }\n+    }\n+  }\n+\n+  void getReadLock()\n+  {\n+    lock.readLock().lock();\n+  }\n+\n+  void releaseReadLock()\n+  {\n+    lock.readLock().unlock();\n+  }\n+\n+  void getWriteLock()\n+  {\n+    lock.writeLock().lock();\n+  }\n+\n+  void releaseWriteLock()\n+  {\n+    lock.writeLock().unlock();\n+  }\n+\n+  private static File getFileDirectory(File storeDir, IndexEntityType type)\n+  {\n+    File path = new File(storeDir, \"lucene\");\n+    String extra = type.nameToLowerCase();\n+    return new File(path, extra);\n+  }\n+\n+  static File getFileDirectory(File storeDir, IndexIdentifier identifier)\n+  {\n+    return new File(getFileDirectory(storeDir, identifier.entityType), identifier.indexName);\n+  }\n+\n+  static Directory getDirectory(File storeDir, IndexIdentifier identifier) throws IOException\n+  {\n+    return FSDirectory.open(getFileDirectory(storeDir, identifier).toPath());\n+  }\n+\n+  static TopFieldCollector scoringCollector(Sort sorting, int n) throws IOException\n+  {\n+    return TopFieldCollector.create(sorting, n, false, true, false);\n+  }\n+\n+  IndexReference getIndexSearcher(IndexIdentifier identifier) throws ExplicitIndexNotFoundKernelException\n+  {\n+    assertNotClosed();\n+    IndexReference searcher = indexSearchers.get(identifier);\n+    if (searcher == null)\n+    {\n+      return syncGetIndexSearcher(identifier);\n+    }\n+    synchronized (searcher)\n+    {\n+      /*\n+       * We need to get again a reference to the searcher because it might be so that\n+       * it was refreshed while we waited. Once in here though no one will mess with\n+       * our searcher\n+       */\n+      searcher = indexSearchers.get(identifier);\n+      if (searcher == null || searcher.isClosed())\n+      {\n+        return syncGetIndexSearcher(identifier);\n+      }\n+      searcher = refreshSearcherIfNeeded(searcher);\n+      searcher.incRef();\n+      return searcher;\n+    }\n+  }\n+\n+  private void assertNotClosed()\n+  {\n+    if (closed)\n+    {\n+      throw new IllegalStateException(\"Lucene index provider has been shut down\");\n+    }\n+  }\n+\n+  private synchronized IndexReference syncGetIndexSearcher(IndexIdentifier identifier)\n+      throws ExplicitIndexNotFoundKernelException\n+  {\n+    try\n+    {\n+      IndexReference indexReference = indexSearchers.get(identifier);\n+      if (indexReference == null)\n+      {\n+        indexReference = indexReferenceFactory.createIndexReference(identifier);\n+        indexSearchers.put(identifier, indexReference);\n+        ConcurrentHashMap<String, DocValuesType> fieldTypes = new ConcurrentHashMap<>();\n+        IndexSearcher searcher = indexReference.getSearcher();\n+        List<LeafReaderContext> leaves = searcher.getTopReaderContext().leaves();\n+        for (LeafReaderContext leafReaderContext : leaves)\n+        {\n+          for (FieldInfo fieldInfo : leafReaderContext.reader().getFieldInfos())\n+          {\n+            fieldTypes.put(fieldInfo.name, fieldInfo.getDocValuesType());\n+          }\n+        }\n+        indexTypeMap.put(identifier, fieldTypes);\n+      } else\n+      {\n+        if (!readOnly)\n+        {\n+          synchronized (indexReference)\n+          {\n+            indexReference = refreshSearcherIfNeeded(indexReference);\n+          }\n+        }\n+      }\n+      indexReference.incRef();\n+      return indexReference;\n+    } catch (IOException e)\n+    {\n+      throw new UncheckedIOException(e);\n+    }\n+  }\n+\n+  private IndexReference refreshSearcherIfNeeded(IndexReference searcher) throws ExplicitIndexNotFoundKernelException\n+  {\n+    if (searcher.checkAndClearStale())\n+    {\n+      searcher = indexReferenceFactory.refresh(searcher);\n+      if (searcher != null)\n+      {\n+        indexSearchers.put(searcher.getIdentifier(), searcher);\n+      }\n+    }\n+    return searcher;\n+  }\n+\n+  void invalidateIndexSearcher(IndexIdentifier identifier)\n+  {\n+    IndexReference searcher = indexSearchers.get(identifier);\n+    if (searcher != null)\n+    {\n+      searcher.setStale();\n+    }\n+  }\n+\n+  void deleteIndex(IndexIdentifier identifier, boolean recovery) throws IOException\n+  {\n+    if (readOnly)\n+    {\n+      throw new IllegalStateException(\"Index deletion in read only mode is not supported.\");\n+    }\n+    closeIndex(identifier);\n+    FileUtils.deleteRecursively(getFileDirectory(baseStorePath, identifier));\n+    indexTypeMap.remove(identifier);\n+    boolean removeFromIndexStore =\n+        !recovery || (indexStore.has(identifier.entityType.entityClass(), identifier.indexName));\n+    if (removeFromIndexStore)\n+    {\n+      indexStore.remove(identifier.entityType.entityClass(), identifier.indexName);\n+    }\n+    typeCache.invalidate(identifier);\n+  }\n+\n+  static Document findDocument(IndexType type, IndexSearcher searcher, long entityId)\n+  {\n+    try\n+    {\n+      TopDocs docs = searcher.search(type.idTermQuery(entityId), 1);\n+      if (docs.scoreDocs.length > 0)\n+      {\n+        return searcher.doc(docs.scoreDocs[0].doc);\n+      }\n+      return null;\n+    } catch (IOException e)\n+    {\n+      throw new RuntimeException(e);\n+    }\n+  }\n+\n+  static boolean documentIsEmpty(Document document)\n+  {\n+    List<IndexableField> fields = document.getFields();\n+    for (IndexableField field : fields)\n+    {\n+      if (LuceneExplicitIndex.isValidKey(field.name()))\n+      {\n+        return false;\n+      }\n+    }\n+    return true;\n+  }\n+\n+  private synchronized void closeIndex(IndexIdentifier identifier)\n+  {\n+    try\n+    {\n+      IndexReference searcher = indexSearchers.remove(identifier);\n+      if (searcher != null)\n+      {\n+        searcher.dispose();\n+      }\n+    } catch (IOException e)\n+    {\n+      throw new RuntimeException(\"Unable to close lucene writer \" + identifier, e);\n+    }\n+  }\n+\n+  private ResourceIterator<File> listWritableStoreFiles() throws IOException\n+  {\n+    final Collection<File> files = new ArrayList<>();\n+    final Collection<Pair<SnapshotDeletionPolicy, IndexCommit>> snapshots = new ArrayList<>();\n+    makeSureAllIndexesAreInstantiated();\n+    for (IndexReference index : getAllIndexes())\n+    {\n+      SnapshotDeletionPolicy deletionPolicy = (SnapshotDeletionPolicy) index.getWriter().getConfig()\n+          .getIndexDeletionPolicy();\n+      File indexDirectory = getFileDirectory(baseStorePath, index.getIdentifier());\n+      IndexCommit commit;\n+      try\n+      {\n+        // Throws IllegalStateException if no commits yet\n+        commit = deletionPolicy.snapshot();\n+      } catch (IllegalStateException e)\n+      {\n+        /*\n+         * This is insane but happens if we try to snapshot an existing index\n+         * that has no commits. This is a bad API design - it should return null\n+         * or something. This is not exceptional.\n+         *\n+         * For the time being we just do a commit and try again.\n+         */\n+        index.getWriter().commit();\n+        commit = deletionPolicy.snapshot();\n+      }\n+\n+      for (String fileName : commit.getFileNames())\n+      {\n+        files.add(new File(indexDirectory, fileName));\n+      }\n+      snapshots.add(Pair.of(deletionPolicy, commit));\n+    }\n+    return new PrefetchingResourceIterator<File>()\n+    {\n+      private final Iterator<File> filesIterator = files.iterator();\n+\n+      @Override\n+      protected File fetchNextOrNull()\n+      {\n+        return filesIterator.hasNext() ? filesIterator.next() : null;\n+      }\n+\n+      @Override\n+      public void close()\n+      {\n+        RuntimeException exception = null;\n+        for (Pair<SnapshotDeletionPolicy, IndexCommit> policyAndCommit : snapshots)\n+        {\n+          try\n+          {\n+            policyAndCommit.first().release(policyAndCommit.other());\n+          } catch (IOException | RuntimeException e)\n+          {\n+            if (exception == null)\n             {\n-                return;\n-            }\n-            closed = true;\n-            for ( IndexReference searcher : indexSearchers.values() )\n+              exception = e instanceof IOException ?\n+                  new UncheckedIOException((IOException) e) :\n+                  (RuntimeException) e;\n+            } else\n             {\n-                searcher.dispose();\n+              exception.addSuppressed(e);\n             }\n-            indexSearchers.clear();\n+          }\n         }\n-    }\n-\n-    private synchronized IndexReference[] getAllIndexes()\n-    {\n-        Collection<IndexReference> indexReferences = indexSearchers.values();\n-        return indexReferences.toArray( new IndexReference[0] );\n-    }\n-\n-    void force()\n-    {\n-        if ( readOnly )\n+        if (exception != null)\n         {\n-            return;\n+          throw exception;\n         }\n-        for ( IndexReference index : getAllIndexes() )\n-        {\n-            try\n-            {\n-                index.getWriter().commit();\n-            }\n-            catch ( IOException e )\n-            {\n-                throw new RuntimeException( \"Unable to commit changes to \" + index.getIdentifier(), e );\n-            }\n-        }\n-    }\n-\n-    void getReadLock()\n-    {\n-        lock.readLock().lock();\n-    }\n-\n-    void releaseReadLock()\n-    {\n-        lock.readLock().unlock();\n-    }\n-\n-    void getWriteLock()\n-    {\n-        lock.writeLock().lock();\n-    }\n-\n-    void releaseWriteLock()\n-    {\n-        lock.writeLock().unlock();\n-    }\n-\n-    private static File getFileDirectory( File storeDir, IndexEntityType type )\n-    {\n-        File path = new File( storeDir, \"lucene\" );\n-        String extra = type.nameToLowerCase();\n-        return new File( path, extra );\n-    }\n-\n-    static File getFileDirectory( File storeDir, IndexIdentifier identifier )\n-    {\n-        return new File( getFileDirectory( storeDir, identifier.entityType ), identifier.indexName );\n-    }\n-\n-    static Directory getDirectory( File storeDir, IndexIdentifier identifier ) throws IOException\n-    {\n-        return FSDirectory.open( getFileDirectory( storeDir, identifier ).toPath() );\n-    }\n-\n-    static TopFieldCollector scoringCollector( Sort sorting, int n ) throws IOException\n-    {\n-        return TopFieldCollector.create( sorting, n, false, true, false );\n-    }\n-\n-    IndexReference getIndexSearcher( IndexIdentifier identifier ) throws ExplicitIndexNotFoundKernelException\n-    {\n-        assertNotClosed();\n-        IndexReference searcher = indexSearchers.get( identifier );\n-        if ( searcher == null )\n-        {\n-            return syncGetIndexSearcher( identifier );\n-        }\n-        synchronized ( searcher )\n-        {\n-            /*\n-             * We need to get again a reference to the searcher because it might be so that\n-             * it was refreshed while we waited. Once in here though no one will mess with\n-             * our searcher\n-             */\n-            searcher = indexSearchers.get( identifier );\n-            if ( searcher == null || searcher.isClosed() )\n-            {\n-                return syncGetIndexSearcher( identifier );\n-            }\n-            searcher = refreshSearcherIfNeeded( searcher );\n-            searcher.incRef();\n-            return searcher;\n-        }\n-    }\n-\n-    private void assertNotClosed()\n-    {\n-        if ( closed )\n-        {\n-            throw new IllegalStateException( \"Lucene index provider has been shut down\" );\n-        }\n-    }\n-\n-    private synchronized IndexReference syncGetIndexSearcher( IndexIdentifier identifier )\n-            throws ExplicitIndexNotFoundKernelException\n-    {\n-        try\n-        {\n-            IndexReference indexReference = indexSearchers.get( identifier );\n-            if ( indexReference == null )\n-            {\n-                indexReference = indexReferenceFactory.createIndexReference( identifier );\n-                indexSearchers.put( identifier, indexReference );\n-                ConcurrentHashMap<String,DocValuesType> fieldTypes = new ConcurrentHashMap<>();\n-                IndexSearcher searcher = indexReference.getSearcher();\n-                List<LeafReaderContext> leaves = searcher.getTopReaderContext().leaves();\n-                for ( LeafReaderContext leafReaderContext : leaves )\n-                {\n-                    for ( FieldInfo fieldInfo : leafReaderContext.reader().getFieldInfos() )\n-                    {\n-                        fieldTypes.put( fieldInfo.name, fieldInfo.getDocValuesType() );\n-                    }\n-                }\n-                indexTypeMap.put( identifier, fieldTypes );\n-            }\n-            else\n-            {\n-                if ( !readOnly )\n-                {\n-                    synchronized ( indexReference )\n-                    {\n-                        indexReference = refreshSearcherIfNeeded( indexReference );\n-                    }\n-                }\n-            }\n-            indexReference.incRef();\n-            return indexReference;\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new UncheckedIOException( e );\n-        }\n-    }\n-\n-    private IndexReference refreshSearcherIfNeeded( IndexReference searcher ) throws ExplicitIndexNotFoundKernelException\n-    {\n-        if ( searcher.checkAndClearStale() )\n-        {\n-            searcher =  indexReferenceFactory.refresh( searcher );\n-            if ( searcher != null )\n-            {\n-                indexSearchers.put( searcher.getIdentifier(), searcher );\n-            }\n-        }\n-        return searcher;\n-    }\n-\n-    void invalidateIndexSearcher( IndexIdentifier identifier )\n-    {\n-        IndexReference searcher = indexSearchers.get( identifier );\n-        if ( searcher != null )\n-        {\n-            searcher.setStale();\n-        }\n-    }\n+      }\n+    };\n+  }\n \n-    void deleteIndex( IndexIdentifier identifier, boolean recovery ) throws IOException\n+  private ResourceIterator<File> listReadOnlyStoreFiles() throws IOException\n+  {\n+    // In read-only mode we don't need to take a snapshot, because the index will not be modified.\n+    final Collection<File> files = new ArrayList<>();\n+    makeSureAllIndexesAreInstantiated();\n+    for (IndexReference index : getAllIndexes())\n     {\n-        if ( readOnly )\n-        {\n-            throw new IllegalStateException( \"Index deletion in read only mode is not supported.\" );\n-        }\n-        closeIndex( identifier );\n-        FileUtils.deleteRecursively( getFileDirectory( baseStorePath, identifier ) );\n-        indexTypeMap.remove( identifier );\n-        boolean removeFromIndexStore =\n-                !recovery || (indexStore.has( identifier.entityType.entityClass(), identifier.indexName ));\n-        if ( removeFromIndexStore )\n+      File indexDirectory = getFileDirectory(baseStorePath, index.getIdentifier());\n+      IndexSearcher searcher = index.getSearcher();\n+      try (IndexReader indexReader = searcher.getIndexReader())\n+      {\n+        DirectoryReader directoryReader = (DirectoryReader) indexReader;\n+        IndexCommit commit = directoryReader.getIndexCommit();\n+        for (String fileName : commit.getFileNames())\n         {\n-            indexStore.remove( identifier.entityType.entityClass(), identifier.indexName );\n+          files.add(new File(indexDirectory, fileName));\n         }\n-        typeCache.invalidate( identifier );\n+      }\n     }\n+    return Iterators.asResourceIterator(files.iterator());\n+  }\n \n-    static Document findDocument( IndexType type, IndexSearcher searcher, long entityId )\n+  ResourceIterator<File> listStoreFiles() throws IOException\n+  {\n+    if (readOnly)\n     {\n-        try\n-        {\n-            TopDocs docs = searcher.search( type.idTermQuery( entityId ), 1 );\n-            if ( docs.scoreDocs.length > 0 )\n-            {\n-                return searcher.doc( docs.scoreDocs[0].doc );\n-            }\n-            return null;\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n-    }\n-\n-    static boolean documentIsEmpty( Document document )\n+      return listReadOnlyStoreFiles();\n+    } else\n     {\n-        List<IndexableField> fields = document.getFields();\n-        for ( IndexableField field : fields )\n-        {\n-            if ( LuceneExplicitIndex.isValidKey( field.name() ) )\n-            {\n-                return false;\n-            }\n-        }\n-        return true;\n+      return listWritableStoreFiles();\n     }\n+  }\n \n-    private synchronized void closeIndex( IndexIdentifier identifier )\n+  private void makeSureAllIndexesAreInstantiated()\n+  {\n+    for (String name : indexStore.getNames(Node.class))\n     {\n-        try\n-        {\n-            IndexReference searcher = indexSearchers.remove( identifier );\n-            if ( searcher != null )\n-            {\n-                searcher.dispose();\n-            }\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( \"Unable to close lucene writer \" + identifier, e );\n-        }\n+      Map<String, String> config = indexStore.get(Node.class, name);\n+      if (config.get(IndexManager.PROVIDER).equals(LuceneIndexImplementation.SERVICE_NAME))\n+      {\n+        ensureInstantiated(new IndexIdentifier(IndexEntityType.Node, name));\n+      }\n     }\n-\n-    private ResourceIterator<File> listWritableStoreFiles() throws IOException\n+    for (String name : indexStore.getNames(Relationship.class))\n     {\n-        final Collection<File> files = new ArrayList<>();\n-        final Collection<Pair<SnapshotDeletionPolicy,IndexCommit>> snapshots = new ArrayList<>();\n-        makeSureAllIndexesAreInstantiated();\n-        for ( IndexReference index : getAllIndexes() )\n-        {\n-            SnapshotDeletionPolicy deletionPolicy = (SnapshotDeletionPolicy) index.getWriter().getConfig()\n-                    .getIndexDeletionPolicy();\n-            File indexDirectory = getFileDirectory( baseStorePath, index.getIdentifier() );\n-            IndexCommit commit;\n-            try\n-            {\n-                // Throws IllegalStateException if no commits yet\n-                commit = deletionPolicy.snapshot();\n-            }\n-            catch ( IllegalStateException e )\n-            {\n-                /*\n-                 * This is insane but happens if we try to snapshot an existing index\n-                 * that has no commits. This is a bad API design - it should return null\n-                 * or something. This is not exceptional.\n-                 *\n-                 * For the time being we just do a commit and try again.\n-                 */\n-                index.getWriter().commit();\n-                commit = deletionPolicy.snapshot();\n-            }\n-\n-            for ( String fileName : commit.getFileNames() )\n-            {\n-                files.add( new File( indexDirectory, fileName ) );\n-            }\n-            snapshots.add( Pair.of( deletionPolicy, commit ) );\n-        }\n-        return new PrefetchingResourceIterator<File>()\n-        {\n-            private final Iterator<File> filesIterator = files.iterator();\n-\n-            @Override\n-            protected File fetchNextOrNull()\n-            {\n-                return filesIterator.hasNext() ? filesIterator.next() : null;\n-            }\n-\n-            @Override\n-            public void close()\n-            {\n-                RuntimeException exception = null;\n-                for ( Pair<SnapshotDeletionPolicy,IndexCommit> policyAndCommit : snapshots )\n-                {\n-                    try\n-                    {\n-                        policyAndCommit.first().release( policyAndCommit.other() );\n-                    }\n-                    catch ( IOException | RuntimeException e )\n-                    {\n-                        if ( exception == null )\n-                        {\n-                            exception = e instanceof IOException ?\n-                                        new UncheckedIOException( (IOException) e ) :\n-                                        (RuntimeException) e;\n-                        }\n-                        else\n-                        {\n-                            exception.addSuppressed( e );\n-                        }\n-                    }\n-                }\n-                if ( exception != null )\n-                {\n-                    throw exception;\n-                }\n-            }\n-        };\n+      Map<String, String> config = indexStore.get(Relationship.class, name);\n+      if (config.get(IndexManager.PROVIDER).equals(LuceneIndexImplementation.SERVICE_NAME))\n+      {\n+        ensureInstantiated(new IndexIdentifier(IndexEntityType.Relationship, name));\n+      }\n     }\n+  }\n \n-    private ResourceIterator<File> listReadOnlyStoreFiles() throws IOException\n+  private void ensureInstantiated(IndexIdentifier identifier)\n+  {\n+    try\n     {\n-        // In read-only mode we don't need to take a snapshot, because the index will not be modified.\n-        final Collection<File> files = new ArrayList<>();\n-        makeSureAllIndexesAreInstantiated();\n-        for ( IndexReference index : getAllIndexes() )\n-        {\n-            File indexDirectory = getFileDirectory( baseStorePath, index.getIdentifier() );\n-            IndexSearcher searcher = index.getSearcher();\n-            try ( IndexReader indexReader = searcher.getIndexReader() )\n-            {\n-                DirectoryReader directoryReader = (DirectoryReader) indexReader;\n-                IndexCommit commit = directoryReader.getIndexCommit();\n-                for ( String fileName : commit.getFileNames() )\n-                {\n-                    files.add( new File( indexDirectory, fileName ) );\n-                }\n-            }\n-        }\n-        return Iterators.asResourceIterator( files.iterator() );\n-    }\n-\n-    ResourceIterator<File> listStoreFiles() throws IOException\n+      IndexReference indexSearcher = getIndexSearcher(identifier);\n+      indexSearcher.close();\n+    } catch (ExplicitIndexNotFoundKernelException ignore)\n     {\n-        if ( readOnly )\n-        {\n-            return listReadOnlyStoreFiles();\n-        }\n-        else\n-        {\n-            return listWritableStoreFiles();\n-        }\n+      // Ignore supposedly concurrently dropped indexes.\n     }\n+  }\n \n-    private void makeSureAllIndexesAreInstantiated()\n-    {\n-        for ( String name : indexStore.getNames( Node.class ) )\n-        {\n-            Map<String, String> config = indexStore.get( Node.class, name );\n-            if ( config.get( IndexManager.PROVIDER ).equals( LuceneIndexImplementation.SERVICE_NAME ) )\n-            {\n-                ensureInstantiated( new IndexIdentifier( IndexEntityType.Node, name ) );\n-            }\n-        }\n-        for ( String name : indexStore.getNames( Relationship.class ) )\n-        {\n-            Map<String, String> config = indexStore.get( Relationship.class, name );\n-            if ( config.get( IndexManager.PROVIDER ).equals( LuceneIndexImplementation.SERVICE_NAME ) )\n-            {\n-                ensureInstantiated( new IndexIdentifier( IndexEntityType.Relationship, name ) );\n-            }\n-        }\n-    }\n+  private boolean isReadOnly(Config config, OperationalMode operationalMode)\n+  {\n+    return config.get(GraphDatabaseSettings.read_only) && (OperationalMode.single == operationalMode);\n+  }\n \n-    private void ensureInstantiated( IndexIdentifier identifier )\n-    {\n-        try\n-        {\n-            IndexReference indexSearcher = getIndexSearcher( identifier );\n-            indexSearcher.close();\n-        }\n-        catch ( ExplicitIndexNotFoundKernelException ignore )\n+  enum LuceneFilesystemFacade\n+  {\n+    FS\n         {\n-            // Ignore supposedly concurrently dropped indexes.\n-        }\n-    }\n-\n-    private boolean isReadOnly( Config config, OperationalMode operationalMode )\n-    {\n-        return config.get( GraphDatabaseSettings.read_only ) && (OperationalMode.single == operationalMode);\n-    }\n+          @Override\n+          Directory getDirectory(File baseStorePath, IndexIdentifier identifier) throws IOException\n+          {\n+            return FSDirectory.open(getFileDirectory(baseStorePath, identifier).toPath());\n+          }\n \n-    enum LuceneFilesystemFacade\n-    {\n-        FS\n-        {\n-            @Override\n-            Directory getDirectory( File baseStorePath, IndexIdentifier identifier ) throws IOException\n+          @Override\n+          void cleanWriteLocks(File dir)\n+          {\n+            if (!dir.isDirectory())\n             {\n-                return FSDirectory.open( getFileDirectory( baseStorePath, identifier ).toPath() );\n+              return;\n             }\n-\n-            @Override\n-            void cleanWriteLocks( File dir )\n+            for (File file : dir.listFiles())\n             {\n-                if ( !dir.isDirectory() )\n-                {\n-                    return;\n-                }\n-                for ( File file : dir.listFiles() )\n-                {\n-                    if ( file.isDirectory() )\n-                    {\n-                        cleanWriteLocks( file );\n-                    }\n-                    else if ( file.getName().equals( \"write.lock\" ) )\n-                    {\n-                        boolean success = file.delete();\n-                        assert success;\n-                    }\n-                }\n+              if (file.isDirectory())\n+              {\n+                cleanWriteLocks(file);\n+              } else if (file.getName().equals(\"write.lock\"))\n+              {\n+                boolean success = file.delete();\n+                assert success;\n+              }\n             }\n+          }\n \n-            @Override\n-            File ensureDirectoryExists( FileSystemAbstraction fileSystem, File dir )\n+          @Override\n+          File ensureDirectoryExists(FileSystemAbstraction fileSystem, File dir)\n+          {\n+            if (!dir.exists() && !dir.mkdirs())\n             {\n-                if ( !dir.exists() && !dir.mkdirs() )\n-                {\n-                    String message = String.format( \"Unable to create directory path[%s] for Neo4j store\" + \".\",\n-                            dir.getAbsolutePath() );\n-                    throw new RuntimeException( message );\n-                }\n-                return dir;\n+              String message = String.format(\"Unable to create directory path[%s] for Neo4j store\" + \".\",\n+                  dir.getAbsolutePath());\n+              throw new RuntimeException(message);\n             }\n+            return dir;\n+          }\n         },\n-        MEMORY\n-        {\n-            @Override\n-            Directory getDirectory( File baseStorePath, IndexIdentifier identifier )\n-            {\n-                return new RAMDirectory();\n-            }\n-\n-            @Override\n-            void cleanWriteLocks( File path )\n+    MEMORY\n+        {\n+          @Override\n+          Directory getDirectory(File baseStorePath, IndexIdentifier identifier)\n+          {\n+            return new RAMDirectory();\n+          }\n+\n+          @Override\n+          void cleanWriteLocks(File path)\n+          {\n+          }\n+\n+          @Override\n+          File ensureDirectoryExists(FileSystemAbstraction fileSystem, File path)\n+          {\n+            try\n             {\n-            }\n-\n-            @Override\n-            File ensureDirectoryExists( FileSystemAbstraction fileSystem, File path )\n+              fileSystem.mkdirs(path);\n+            } catch (IOException e)\n             {\n-                try\n-                {\n-                    fileSystem.mkdirs( path );\n-                }\n-                catch ( IOException e )\n-                {\n-                    throw new RuntimeException( e );\n-                }\n-                return path;\n+              throw new RuntimeException(e);\n             }\n+            return path;\n+          }\n         };\n-        abstract Directory getDirectory( File baseStorePath, IndexIdentifier identifier ) throws IOException;\n \n-        abstract File ensureDirectoryExists( FileSystemAbstraction fileSystem, File path );\n+    abstract Directory getDirectory(File baseStorePath, IndexIdentifier identifier) throws IOException;\n \n-        abstract void cleanWriteLocks( File path );\n-    }\n+    abstract File ensureDirectoryExists(FileSystemAbstraction fileSystem, File path);\n+\n+    abstract void cleanWriteLocks(File path);\n+  }\n }\n",
            "diff_size": 976
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "737",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "85",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/737/HilbertSpaceFillingCurve2D.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/737/HilbertSpaceFillingCurve2D.java\nindex cbef8065c87..68c83c0b8d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/737/HilbertSpaceFillingCurve2D.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/737/HilbertSpaceFillingCurve2D.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.gis.spatial.index.curves;\n \n import java.util.EnumMap;\n@@ -38,43 +39,43 @@ public class HilbertSpaceFillingCurve2D extends SpaceFillingCurve\n     {\n         private CurveRule[] children;\n \n-        private HilbertCurve2D( int... npointValues )\n+        private HilbertCurve2D(int... npointValues)\n         {\n-            super( 2, npointValues );\n+            super(2, npointValues);\n             assert npointValues[0] == 0 || npointValues[0] == 3;\n         }\n \n-        private Direction2D direction( int end )\n+        private Direction2D direction(int end)\n         {\n             int start = npointValues[0];\n             end -= start;\n-            switch ( end )\n+            switch (end)\n             {\n-            case 1:\n-                return UP; // move up      00->01\n-            case 2:\n-                return RIGHT; // move right   00->10\n-            case -2:\n-                return LEFT; // move left    11->01\n-            case -1:\n-                return DOWN; // move down    11->10\n-            default:\n-                throw new IllegalArgumentException( \"Illegal direction: \" + end );\n+                case 1:\n+                    return UP; // move up      00->01\n+                case 2:\n+                    return RIGHT; // move right   00->10\n+                case -2:\n+                    return LEFT; // move left    11->01\n+                case -1:\n+                    return DOWN; // move down    11->10\n+                default:\n+                    throw new IllegalArgumentException(\"Illegal direction: \" + end);\n             }\n         }\n \n         private Direction2D name()\n         {\n-            return direction( npointValues[1] );\n+            return direction(npointValues[1]);\n         }\n \n-        private void setChildren( CurveRule... children )\n+        private void setChildren(CurveRule... children)\n         {\n             this.children = children;\n         }\n \n         @Override\n-        public CurveRule childAt( int npoint )\n+        public CurveRule childAt(int npoint)\n         {\n             return children[npoint];\n         }\n@@ -82,7 +83,7 @@ public class HilbertSpaceFillingCurve2D extends SpaceFillingCurve\n         @Override\n         public String toString()\n         {\n-            return String.valueOf( name() );\n+            return String.valueOf(name());\n         }\n     }\n \n@@ -91,54 +92,54 @@ public class HilbertSpaceFillingCurve2D extends SpaceFillingCurve\n         UP, RIGHT, LEFT, DOWN\n     }\n \n-    private static final EnumMap<Direction2D,HilbertCurve2D> CURVES = new EnumMap<>( Direction2D.class );\n+    private static final EnumMap<Direction2D, HilbertCurve2D> CURVES = new EnumMap<>(Direction2D.class);\n \n-    private static void addCurveRule( int... npointValues )\n+    private static void addCurveRule(int... npointValues)\n     {\n-        HilbertCurve2D curve = new HilbertCurve2D( npointValues );\n+        HilbertCurve2D curve = new HilbertCurve2D(npointValues);\n         Direction2D name = curve.name();\n-        if ( !CURVES.containsKey( name ) )\n+        if (!CURVES.containsKey(name))\n         {\n-            CURVES.put( name, curve );\n+            CURVES.put(name, curve);\n         }\n     }\n \n-    private static void setChildren( Direction2D parent, Direction2D... children )\n+    private static void setChildren(Direction2D parent, Direction2D... children)\n     {\n-        HilbertCurve2D curve = CURVES.get( parent );\n+        HilbertCurve2D curve = CURVES.get(parent);\n         HilbertCurve2D[] childCurves = new HilbertCurve2D[children.length];\n-        for ( int i = 0; i < children.length; i++ )\n+        for (int i = 0; i < children.length; i++)\n         {\n-            childCurves[i] = CURVES.get( children[i] );\n+            childCurves[i] = CURVES.get(children[i]);\n         }\n-        curve.setChildren( childCurves );\n+        curve.setChildren(childCurves);\n     }\n \n     private static final HilbertCurve2D curveUp;\n \n     static\n     {\n-        addCurveRule( 0, 1, 3, 2 );\n-        addCurveRule( 0, 2, 3, 1 );\n-        addCurveRule( 3, 1, 0, 2 );\n-        addCurveRule( 3, 2, 0, 1 );\n-        setChildren( UP, RIGHT, UP, UP, LEFT );\n-        setChildren( RIGHT, UP, RIGHT, RIGHT, DOWN );\n-        setChildren( DOWN, LEFT, DOWN, DOWN, RIGHT );\n-        setChildren( LEFT, DOWN, LEFT, LEFT, UP );\n-        curveUp = CURVES.get( UP );\n+        addCurveRule(0, 1, 3, 2);\n+        addCurveRule(0, 2, 3, 1);\n+        addCurveRule(3, 1, 0, 2);\n+        addCurveRule(3, 2, 0, 1);\n+        setChildren(UP, RIGHT, UP, UP, LEFT);\n+        setChildren(RIGHT, UP, RIGHT, RIGHT, DOWN);\n+        setChildren(DOWN, LEFT, DOWN, DOWN, RIGHT);\n+        setChildren(LEFT, DOWN, LEFT, LEFT, UP);\n+        curveUp = CURVES.get(UP);\n     }\n \n     public static final int MAX_LEVEL = 63 / 2 - 1;\n \n-    public HilbertSpaceFillingCurve2D( Envelope range )\n+    public HilbertSpaceFillingCurve2D(Envelope range)\n     {\n-        this( range, MAX_LEVEL );\n+        this(range, MAX_LEVEL);\n     }\n \n-    public HilbertSpaceFillingCurve2D( Envelope range, int maxLevel )\n+    public HilbertSpaceFillingCurve2D(Envelope range, int maxLevel)\n     {\n-        super( range, maxLevel );\n+        super(range, maxLevel);\n         assert maxLevel <= MAX_LEVEL;\n         assert range.getDimension() == 2;\n     }\n",
            "diff_size": 42
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/737/HilbertSpaceFillingCurve2D.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/737/HilbertSpaceFillingCurve2D.java\nindex cbef8065c87..2f2af1d3b5f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/737/HilbertSpaceFillingCurve2D.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/737/HilbertSpaceFillingCurve2D.java\n@@ -149,4 +149,4 @@ public class HilbertSpaceFillingCurve2D extends SpaceFillingCurve\n         return curveUp;\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
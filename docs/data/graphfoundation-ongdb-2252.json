{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2252",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2252/BridgingIndexProgressor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2252/BridgingIndexProgressor.java\nindex 3f96942e075..6879f8bb527 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2252/BridgingIndexProgressor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2252/BridgingIndexProgressor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.schema;\n \n import java.util.Queue;\n@@ -32,75 +33,74 @@ import org.neo4j.values.storable.Value;\n  */\n public class BridgingIndexProgressor implements IndexProgressor.NodeValueClient, IndexProgressor\n {\n-    private final NodeValueClient client;\n-    private final int[] keys;\n-    // This is a thread-safe queue because it can be used in parallel scenarios.\n-    // The overhead of a concurrent queue in this case is negligable since typically there will be two or a very few number\n-    // of progressors and each progressor has many results each\n-    private final Queue<IndexProgressor> progressors = new ConcurrentLinkedQueue<>();\n-    private IndexProgressor current;\n+  private final NodeValueClient client;\n+  private final int[] keys;\n+  // This is a thread-safe queue because it can be used in parallel scenarios.\n+  // The overhead of a concurrent queue in this case is negligable since typically there will be two or a very few number\n+  // of progressors and each progressor has many results each\n+  private final Queue<IndexProgressor> progressors = new ConcurrentLinkedQueue<>();\n+  private IndexProgressor current;\n \n-    public BridgingIndexProgressor( NodeValueClient client, int[] keys )\n-    {\n-        this.client = client;\n-        this.keys = keys;\n-    }\n+  public BridgingIndexProgressor(NodeValueClient client, int[] keys)\n+  {\n+    this.client = client;\n+    this.keys = keys;\n+  }\n \n-    @Override\n-    public boolean next()\n+  @Override\n+  public boolean next()\n+  {\n+    if (current == null)\n     {\n-        if ( current == null )\n-        {\n-            current = progressors.poll();\n-        }\n-        while ( current != null )\n-        {\n-            if ( current.next() )\n-            {\n-                return true;\n-            }\n-            else\n-            {\n-                current.close();\n-                current = progressors.poll();\n-            }\n-        }\n-        return false;\n+      current = progressors.poll();\n     }\n-\n-    @Override\n-    public boolean needsValues()\n+    while (current != null)\n     {\n-        return client.needsValues();\n+      if (current.next())\n+      {\n+        return true;\n+      } else\n+      {\n+        current.close();\n+        current = progressors.poll();\n+      }\n     }\n+    return false;\n+  }\n \n-    @Override\n-    public void close()\n-    {\n-        progressors.forEach( IndexProgressor::close );\n-    }\n+  @Override\n+  public boolean needsValues()\n+  {\n+    return client.needsValues();\n+  }\n \n-    @Override\n-    public void initialize( SchemaIndexDescriptor descriptor, IndexProgressor progressor, IndexQuery[] queries )\n-    {\n-        assertKeysAlign( descriptor.schema().getPropertyIds() );\n-        progressors.add( progressor );\n-    }\n+  @Override\n+  public void close()\n+  {\n+    progressors.forEach(IndexProgressor::close);\n+  }\n \n-    private void assertKeysAlign( int[] keys )\n-    {\n-        for ( int i = 0; i < this.keys.length; i++ )\n-        {\n-            if ( this.keys[i] != keys[i] )\n-            {\n-                throw new UnsupportedOperationException( \"Can not chain multiple progressors with different key set.\" );\n-            }\n-        }\n-    }\n+  @Override\n+  public void initialize(SchemaIndexDescriptor descriptor, IndexProgressor progressor, IndexQuery[] queries)\n+  {\n+    assertKeysAlign(descriptor.schema().getPropertyIds());\n+    progressors.add(progressor);\n+  }\n \n-    @Override\n-    public boolean acceptNode( long reference, Value[] values )\n+  private void assertKeysAlign(int[] keys)\n+  {\n+    for (int i = 0; i < this.keys.length; i++)\n     {\n-        return client.acceptNode( reference, values );\n+      if (this.keys[i] != keys[i])\n+      {\n+        throw new UnsupportedOperationException(\"Can not chain multiple progressors with different key set.\");\n+      }\n     }\n+  }\n+\n+  @Override\n+  public boolean acceptNode(long reference, Value[] values)\n+  {\n+    return client.acceptNode(reference, values);\n+  }\n }\n",
            "diff_size": 82
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2252/BridgingIndexProgressor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2252/BridgingIndexProgressor.java\nindex 3f96942e075..61c197554d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2252/BridgingIndexProgressor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2252/BridgingIndexProgressor.java\n@@ -103,4 +103,4 @@ public class BridgingIndexProgressor implements IndexProgressor.NodeValueClient,\n     {\n         return client.acceptNode( reference, values );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
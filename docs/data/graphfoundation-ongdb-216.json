{
    "project_name": "graphfoundation-ongdb",
    "error_id": "216",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "28",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "28",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "30",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/216/BoltConnectionTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/216/BoltConnectionTracker.java\nindex 4de10618570..f591a391adc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/216/BoltConnectionTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/216/BoltConnectionTracker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.bolt;\n \n import java.util.Collections;\n@@ -24,36 +25,36 @@ import java.util.Set;\n \n public interface BoltConnectionTracker\n {\n-    void onRegister( ManagedBoltStateMachine machine, String owner );\n+  void onRegister(ManagedBoltStateMachine machine, String owner);\n+\n+  void onTerminate(ManagedBoltStateMachine machine);\n \n-    void onTerminate( ManagedBoltStateMachine machine );\n+  Set<ManagedBoltStateMachine> getActiveConnections();\n \n-    Set<ManagedBoltStateMachine> getActiveConnections();\n+  Set<ManagedBoltStateMachine> getActiveConnections(String owner);\n+\n+  BoltConnectionTracker NOOP = new BoltConnectionTracker()\n+  {\n+    @Override\n+    public void onRegister(ManagedBoltStateMachine machine, String owner)\n+    {\n+    }\n \n-    Set<ManagedBoltStateMachine> getActiveConnections( String owner );\n+    @Override\n+    public void onTerminate(ManagedBoltStateMachine machine)\n+    {\n+    }\n+\n+    @Override\n+    public Set<ManagedBoltStateMachine> getActiveConnections()\n+    {\n+      return Collections.emptySet();\n+    }\n \n-    BoltConnectionTracker NOOP = new BoltConnectionTracker()\n+    @Override\n+    public Set<ManagedBoltStateMachine> getActiveConnections(String owner)\n     {\n-        @Override\n-        public void onRegister( ManagedBoltStateMachine machine, String owner )\n-        {\n-        }\n-\n-        @Override\n-        public void onTerminate( ManagedBoltStateMachine machine )\n-        {\n-        }\n-\n-        @Override\n-        public Set<ManagedBoltStateMachine> getActiveConnections()\n-        {\n-            return Collections.emptySet();\n-        }\n-\n-        @Override\n-        public Set<ManagedBoltStateMachine> getActiveConnections( String owner )\n-        {\n-            return Collections.emptySet();\n-        }\n-    };\n+      return Collections.emptySet();\n+    }\n+  };\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/216/BoltConnectionTracker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/216/BoltConnectionTracker.java\nindex 4de10618570..9a40db8bd8f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/216/BoltConnectionTracker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/216/BoltConnectionTracker.java\n@@ -31,8 +31,7 @@ public interface BoltConnectionTracker\n     Set<ManagedBoltStateMachine> getActiveConnections();\n \n     Set<ManagedBoltStateMachine> getActiveConnections( String owner );\n-\n-    BoltConnectionTracker NOOP = new BoltConnectionTracker()\n+BoltConnectionTracker NOOP = new BoltConnectionTracker()\n     {\n         @Override\n         public void onRegister( ManagedBoltStateMachine machine, String owner )\n@@ -56,4 +55,4 @@ public interface BoltConnectionTracker\n             return Collections.emptySet();\n         }\n     };\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Activiti-Activiti",
    "error_id": "412",
    "information": {
        "errors": [
            {
                "line": "16",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.api.task.model.impl;\n\nimport java.util.Date;\nimport java.util.List;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/412/TaskImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/412/TaskImpl.java\nindex 6c97ae51baa..88084d8fda0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/412/TaskImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/412/TaskImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.task.model.impl;\n \n import java.util.Date;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/412/TaskImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/412/TaskImpl.java\nindex 6c97ae51baa..db595cad6aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/412/TaskImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/412/TaskImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.task.model.impl;\n \n import java.util.Date;\n@@ -218,16 +219,16 @@ public class TaskImpl extends ApplicationElementImpl implements Task {\n     public void setDuration(Long duration) {\n         this.duration = duration;\n     }\n-    \n+\n     @Override\n-    public Integer getProcessDefinitionVersion() { \n-        return processDefinitionVersion; \n+    public Integer getProcessDefinitionVersion() {\n+        return processDefinitionVersion;\n     }\n-    \n+\n     public void setProcessDefinitionVersion(Integer processDefinitionVersion) {\n         this.processDefinitionVersion = processDefinitionVersion;\n     }\n-    \n+\n     @Override\n     public String getBusinessKey() {\n         return businessKey;\n@@ -241,7 +242,7 @@ public class TaskImpl extends ApplicationElementImpl implements Task {\n     public void setBusinessKey(String businessKey) {\n         this.businessKey = businessKey;\n     }\n-    \n+\n     @Override\n     public String getTaskDefinitionKey() {\n         return taskDefinitionKey;\n@@ -250,7 +251,7 @@ public class TaskImpl extends ApplicationElementImpl implements Task {\n     public void setTaskDefinitionKey(String taskDefinitionKey) {\n         this.taskDefinitionKey = taskDefinitionKey;\n     }\n-    \n+\n     @Override\n     public boolean equals(Object o) {\n         if (this == o) {\n@@ -265,64 +266,64 @@ public class TaskImpl extends ApplicationElementImpl implements Task {\n         TaskImpl task = (TaskImpl) o;\n         return priority == task.priority &&\n                 Objects.equals(id,\n-                               task.id) &&\n+                        task.id) &&\n                 Objects.equals(name,\n-                               task.name) &&\n+                        task.name) &&\n                 status == task.status &&\n                 Objects.equals(owner,\n-                               task.owner) &&\n+                        task.owner) &&\n                 Objects.equals(assignee,\n-                               task.assignee) &&\n+                        task.assignee) &&\n                 Objects.equals(description,\n-                               task.description) &&\n+                        task.description) &&\n                 Objects.equals(createdDate,\n-                               task.createdDate) &&\n+                        task.createdDate) &&\n                 Objects.equals(claimedDate,\n-                               task.claimedDate) &&\n+                        task.claimedDate) &&\n                 Objects.equals(dueDate,\n-                               task.dueDate) &&\n+                        task.dueDate) &&\n                 Objects.equals(processDefinitionId,\n-                               task.processDefinitionId) &&\n+                        task.processDefinitionId) &&\n                 Objects.equals(processInstanceId,\n-                               task.processInstanceId) &&\n+                        task.processInstanceId) &&\n                 Objects.equals(parentTaskId,\n-                               task.parentTaskId) &&\n+                        task.parentTaskId) &&\n                 Objects.equals(formKey,\n-                               task.formKey) &&\n+                        task.formKey) &&\n                 Objects.equals(completedDate,\n-                               task.completedDate) &&\n+                        task.completedDate) &&\n                 Objects.equals(duration,\n-                               task.duration) &&\n+                        task.duration) &&\n                 Objects.equals(processDefinitionVersion,\n-                               task.processDefinitionVersion) &&\n+                        task.processDefinitionVersion) &&\n                 Objects.equals(businessKey,\n-                               task.businessKey) &&\n+                        task.businessKey) &&\n                 Objects.equals(taskDefinitionKey,\n-                               task.taskDefinitionKey);\n+                        task.taskDefinitionKey);\n     }\n \n     @Override\n     public int hashCode() {\n         return Objects.hash(super.hashCode(),\n-                            id,\n-                            name,\n-                            status,\n-                            owner,\n-                            assignee,\n-                            description,\n-                            createdDate,\n-                            claimedDate,\n-                            dueDate,\n-                            priority,\n-                            processDefinitionId,\n-                            processInstanceId,\n-                            parentTaskId,\n-                            formKey,\n-                            completedDate,\n-                            duration,\n-                            processDefinitionVersion,\n-                            businessKey,\n-                            taskDefinitionKey);\n+                id,\n+                name,\n+                status,\n+                owner,\n+                assignee,\n+                description,\n+                createdDate,\n+                claimedDate,\n+                dueDate,\n+                priority,\n+                processDefinitionId,\n+                processInstanceId,\n+                parentTaskId,\n+                formKey,\n+                completedDate,\n+                duration,\n+                processDefinitionVersion,\n+                businessKey,\n+                taskDefinitionKey);\n     }\n \n     @Override\n",
            "diff_size": 44
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "16",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "285",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 434).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "286",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 732).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "287",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 848).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "292",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 281).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "297",
                    "severity": "error",
                    "message": "Line is longer than 240 characters (found 646).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/412/TaskImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/412/TaskImpl.java\nindex 6c97ae51baa..a53d86c522d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/412/TaskImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/412/TaskImpl.java\n@@ -18,334 +18,282 @@ package org.activiti.api.task.model.impl;\n import java.util.Date;\n import java.util.List;\n import java.util.Objects;\n-\n import org.activiti.api.runtime.model.impl.ApplicationElementImpl;\n import org.activiti.api.task.model.Task;\n \n+\n public class TaskImpl extends ApplicationElementImpl implements Task {\n \n-    private String id;\n-    private String name;\n-    private Task.TaskStatus status;\n-    private String owner;\n-    private String assignee;\n-    private String description;\n-    private Date createdDate;\n-    private Date claimedDate;\n-    private Date dueDate;\n-    private int priority;\n-    private String processDefinitionId;\n-    private String processInstanceId;\n-    private String parentTaskId;\n-    private String formKey;\n-    private Date completedDate;\n-    private Long duration;\n-    private Integer processDefinitionVersion;\n-    private String businessKey;\n-    private String taskDefinitionKey;\n-    private List<String> candidateUsers;\n-    private List<String> candidateGroups;\n-\n-    public TaskImpl() {\n-    }\n+  private String id;\n \n-    public TaskImpl(String id,\n-                    String name,\n-                    Task.TaskStatus status) {\n-        this.id = id;\n-        this.name = name;\n-        this.status = status;\n-    }\n+  private String name;\n \n-    public void setId(String id) {\n-        this.id = id;\n-    }\n+  private Task.TaskStatus status;\n \n-    @Override\n-    public String getId() {\n-        return id;\n-    }\n+  private String owner;\n \n-    @Override\n-    public String getOwner() {\n-        return owner;\n-    }\n+  private String assignee;\n \n-    public void setOwner(String owner) {\n-        this.owner = owner;\n-    }\n+  private String description;\n \n-    @Override\n-    public String getAssignee() {\n-        return assignee;\n-    }\n+  private Date createdDate;\n \n-    public void setAssignee(String assignee) {\n-        this.assignee = assignee;\n-    }\n+  private Date claimedDate;\n \n-    @Override\n-    public List<String> getCandidateUsers() {\n-        return candidateUsers;\n-    }\n+  private Date dueDate;\n \n-    public void setCandidateUsers(List<String> candidateUsers) {\n-        this.candidateUsers = candidateUsers;\n-    }\n+  private int priority;\n \n-    @Override\n-    public List<String> getCandidateGroups() {\n-        return candidateGroups;\n-    }\n+  private String processDefinitionId;\n \n-    public void setCandidateGroups(List<String> candidateGroups) {\n-        this.candidateGroups = candidateGroups;\n-    }\n+  private String processInstanceId;\n \n-    @Override\n-    public String getName() {\n-        return name;\n-    }\n+  private String parentTaskId;\n \n-    public void setName(String name) {\n-        this.name = name;\n-    }\n+  private String formKey;\n \n-    @Override\n-    public String getDescription() {\n-        return description;\n-    }\n+  private Date completedDate;\n \n-    public void setDescription(String description) {\n-        this.description = description;\n-    }\n+  private Long duration;\n \n-    @Override\n-    public Date getCreatedDate() {\n-        return createdDate;\n-    }\n-\n-    public void setCreatedDate(Date createdDate) {\n-        this.createdDate = createdDate;\n-    }\n-\n-    @Override\n-    public Date getClaimedDate() {\n-        return claimedDate;\n-    }\n-\n-    public void setClaimedDate(Date claimedDate) {\n-        this.claimedDate = claimedDate;\n-    }\n-\n-    @Override\n-    public Date getDueDate() {\n-        return dueDate;\n-    }\n+  private Integer processDefinitionVersion;\n \n-    public void setDueDate(Date dueDate) {\n-        this.dueDate = dueDate;\n-    }\n+  private String businessKey;\n \n-    @Override\n-    public int getPriority() {\n-        return priority;\n-    }\n+  private String taskDefinitionKey;\n \n-    public void setPriority(int priority) {\n-        this.priority = priority;\n-    }\n+  private List<String> candidateUsers;\n \n-    @Override\n-    public String getProcessDefinitionId() {\n-        return processDefinitionId;\n-    }\n+  private List<String> candidateGroups;\n \n-    public void setProcessDefinitionId(String processDefinitionId) {\n-        this.processDefinitionId = processDefinitionId;\n-    }\n+  public TaskImpl() {\n+  }\n \n-    @Override\n-    public String getProcessInstanceId() {\n-        return processInstanceId;\n-    }\n+  public TaskImpl(String id, String name, Task.TaskStatus status) {\n+    this.id = id;\n+    this.name = name;\n+    this.status = status;\n+  }\n \n-    public void setProcessInstanceId(String processInstanceId) {\n-        this.processInstanceId = processInstanceId;\n-    }\n+  public void setId(String id) {\n+    this.id = id;\n+  }\n \n-    @Override\n-    public TaskStatus getStatus() {\n-        return status;\n-    }\n+  @Override\n+  public String getId() {\n+    return id;\n+  }\n \n-    @Override\n-    public String getParentTaskId() {\n-        return parentTaskId;\n-    }\n+  @Override\n+  public String getOwner() {\n+    return owner;\n+  }\n \n-    public void setParentTaskId(String parentTaskId) {\n-        this.parentTaskId = parentTaskId;\n-    }\n+  public void setOwner(String owner) {\n+    this.owner = owner;\n+  }\n \n-    public void setStatus(TaskStatus status) {\n-        this.status = status;\n-    }\n+  @Override\n+  public String getAssignee() {\n+    return assignee;\n+  }\n \n-    @Override\n-    public String getFormKey() {\n-        return formKey;\n-    }\n+  public void setAssignee(String assignee) {\n+    this.assignee = assignee;\n+  }\n \n-    public void setFormKey(String formKey) {\n-        this.formKey = formKey;\n-    }\n+  @Override\n+  public List<String> getCandidateUsers() {\n+    return candidateUsers;\n+  }\n \n-    @Override\n-    public Date getCompletedDate() {\n-        return completedDate;\n-    }\n+  public void setCandidateUsers(List<String> candidateUsers) {\n+    this.candidateUsers = candidateUsers;\n+  }\n \n-    public void setCompletedDate(Date completedDate) {\n-        this.completedDate = completedDate;\n-    }\n+  @Override\n+  public List<String> getCandidateGroups() {\n+    return candidateGroups;\n+  }\n \n-    @Override\n-    public Long getDuration() {\n-        return duration;\n-    }\n+  public void setCandidateGroups(List<String> candidateGroups) {\n+    this.candidateGroups = candidateGroups;\n+  }\n \n-    public void setDuration(Long duration) {\n-        this.duration = duration;\n-    }\n-    \n-    @Override\n-    public Integer getProcessDefinitionVersion() { \n-        return processDefinitionVersion; \n-    }\n-    \n-    public void setProcessDefinitionVersion(Integer processDefinitionVersion) {\n-        this.processDefinitionVersion = processDefinitionVersion;\n-    }\n-    \n-    @Override\n-    public String getBusinessKey() {\n-        return businessKey;\n-    }\n+  @Override\n+  public String getName() {\n+    return name;\n+  }\n \n-    @Override\n-    public boolean isStandalone() {\n-        return getProcessInstanceId() == null;\n-    }\n+  public void setName(String name) {\n+    this.name = name;\n+  }\n \n-    public void setBusinessKey(String businessKey) {\n-        this.businessKey = businessKey;\n-    }\n-    \n-    @Override\n-    public String getTaskDefinitionKey() {\n-        return taskDefinitionKey;\n-    }\n+  @Override\n+  public String getDescription() {\n+    return description;\n+  }\n \n-    public void setTaskDefinitionKey(String taskDefinitionKey) {\n-        this.taskDefinitionKey = taskDefinitionKey;\n-    }\n-    \n-    @Override\n-    public boolean equals(Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-        if (!super.equals(o)) {\n-            return false;\n-        }\n-        TaskImpl task = (TaskImpl) o;\n-        return priority == task.priority &&\n-                Objects.equals(id,\n-                               task.id) &&\n-                Objects.equals(name,\n-                               task.name) &&\n-                status == task.status &&\n-                Objects.equals(owner,\n-                               task.owner) &&\n-                Objects.equals(assignee,\n-                               task.assignee) &&\n-                Objects.equals(description,\n-                               task.description) &&\n-                Objects.equals(createdDate,\n-                               task.createdDate) &&\n-                Objects.equals(claimedDate,\n-                               task.claimedDate) &&\n-                Objects.equals(dueDate,\n-                               task.dueDate) &&\n-                Objects.equals(processDefinitionId,\n-                               task.processDefinitionId) &&\n-                Objects.equals(processInstanceId,\n-                               task.processInstanceId) &&\n-                Objects.equals(parentTaskId,\n-                               task.parentTaskId) &&\n-                Objects.equals(formKey,\n-                               task.formKey) &&\n-                Objects.equals(completedDate,\n-                               task.completedDate) &&\n-                Objects.equals(duration,\n-                               task.duration) &&\n-                Objects.equals(processDefinitionVersion,\n-                               task.processDefinitionVersion) &&\n-                Objects.equals(businessKey,\n-                               task.businessKey) &&\n-                Objects.equals(taskDefinitionKey,\n-                               task.taskDefinitionKey);\n-    }\n+  public void setDescription(String description) {\n+    this.description = description;\n+  }\n \n-    @Override\n-    public int hashCode() {\n-        return Objects.hash(super.hashCode(),\n-                            id,\n-                            name,\n-                            status,\n-                            owner,\n-                            assignee,\n-                            description,\n-                            createdDate,\n-                            claimedDate,\n-                            dueDate,\n-                            priority,\n-                            processDefinitionId,\n-                            processInstanceId,\n-                            parentTaskId,\n-                            formKey,\n-                            completedDate,\n-                            duration,\n-                            processDefinitionVersion,\n-                            businessKey,\n-                            taskDefinitionKey);\n-    }\n+  @Override\n+  public Date getCreatedDate() {\n+    return createdDate;\n+  }\n \n-    @Override\n-    public String toString() {\n-        return \"TaskImpl{\" +\n-                \"id='\" + id + '\\'' +\n-                \", owner='\" + owner + '\\'' +\n-                \", assignee='\" + assignee + '\\'' +\n-                \", name='\" + name + '\\'' +\n-                \", description='\" + description + '\\'' +\n-                \", createdDate=\" + createdDate +\n-                \", claimedDate=\" + claimedDate +\n-                \", dueDate=\" + dueDate +\n-                \", priority=\" + priority +\n-                \", processDefinitionId='\" + processDefinitionId + '\\'' +\n-                \", processInstanceId='\" + processInstanceId + '\\'' +\n-                \", parentTaskId='\" + parentTaskId + '\\'' +\n-                \", formKey='\" + formKey + '\\'' +\n-                \", status=\" + status +\n-                \", processDefinitionVersion=\" + processDefinitionVersion +\n-                \", businessKey=\" + businessKey +\n-                \", taskDefinitionKey=\" + taskDefinitionKey +\n-                '}';\n-    }\n+  public void setCreatedDate(Date createdDate) {\n+    this.createdDate = createdDate;\n+  }\n \n-}\n+  @Override\n+  public Date getClaimedDate() {\n+    return claimedDate;\n+  }\n+\n+  public void setClaimedDate(Date claimedDate) {\n+    this.claimedDate = claimedDate;\n+  }\n+\n+  @Override\n+  public Date getDueDate() {\n+    return dueDate;\n+  }\n+\n+  public void setDueDate(Date dueDate) {\n+    this.dueDate = dueDate;\n+  }\n+\n+  @Override\n+  public int getPriority() {\n+    return priority;\n+  }\n+\n+  public void setPriority(int priority) {\n+    this.priority = priority;\n+  }\n+\n+  @Override\n+  public String getProcessDefinitionId() {\n+    return processDefinitionId;\n+  }\n+\n+  public void setProcessDefinitionId(String processDefinitionId) {\n+    this.processDefinitionId = processDefinitionId;\n+  }\n+\n+  @Override\n+  public String getProcessInstanceId() {\n+    return processInstanceId;\n+  }\n+\n+  public void setProcessInstanceId(String processInstanceId) {\n+    this.processInstanceId = processInstanceId;\n+  }\n+\n+  @Override\n+  public TaskStatus getStatus() {\n+    return status;\n+  }\n+\n+  @Override\n+  public String getParentTaskId() {\n+    return parentTaskId;\n+  }\n+\n+  public void setParentTaskId(String parentTaskId) {\n+    this.parentTaskId = parentTaskId;\n+  }\n+\n+  public void setStatus(TaskStatus status) {\n+    this.status = status;\n+  }\n+\n+  @Override\n+  public String getFormKey() {\n+    return formKey;\n+  }\n+\n+  public void setFormKey(String formKey) {\n+    this.formKey = formKey;\n+  }\n+\n+  @Override\n+  public Date getCompletedDate() {\n+    return completedDate;\n+  }\n+\n+  public void setCompletedDate(Date completedDate) {\n+    this.completedDate = completedDate;\n+  }\n+\n+  @Override\n+  public Long getDuration() {\n+    return duration;\n+  }\n+\n+  public void setDuration(Long duration) {\n+    this.duration = duration;\n+  }\n+\n+  @Override\n+  public Integer getProcessDefinitionVersion() {\n+    return processDefinitionVersion;\n+  }\n+\n+  public void setProcessDefinitionVersion(Integer processDefinitionVersion) {\n+    this.processDefinitionVersion = processDefinitionVersion;\n+  }\n+\n+  @Override\n+  public String getBusinessKey() {\n+    return businessKey;\n+  }\n+\n+  @Override\n+  public boolean isStandalone() {\n+    return getProcessInstanceId() == null;\n+  }\n+\n+  public void setBusinessKey(String businessKey) {\n+    this.businessKey = businessKey;\n+  }\n+\n+  @Override\n+  public String getTaskDefinitionKey() {\n+    return taskDefinitionKey;\n+  }\n+\n+  public void setTaskDefinitionKey(String taskDefinitionKey) {\n+    this.taskDefinitionKey = taskDefinitionKey;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    if (!super.equals(o)) {\n+      return false;\n+    }\n+\n+    TaskImpl task = (TaskImpl) o;\n+    return priority == task.priority && Objects.equals(id, task.id) && Objects.equals(name, task.name) && status == task.status && Objects.equals(owner, task.owner) && Objects.equals(assignee, task.assignee) && Objects.equals(description, task.description) && Objects.equals(createdDate, task.createdDate) && Objects.equals(claimedDate, task.claimedDate) && Objects.equals(dueDate, task.dueDate) && Objects.equals(processDefinitionId,\n+                                                                                                                                                                                                                                                                                                                                                                                                                              task.processDefinitionId) && Objects.equals(processInstanceId, task.processInstanceId) && Objects.equals(parentTaskId, task.parentTaskId) && Objects.equals(formKey, task.formKey) && Objects.equals(completedDate, task.completedDate) && Objects.equals(duration, task.duration) && Objects.equals(processDefinitionVersion,\ntask.processDefinitionVersion) && Objects.equals(businessKey, task.businessKey) && Objects.equals(taskDefinitionKey, task.taskDefinitionKey);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return Objects.hash(super.hashCode(), id, name, status, owner, assignee, description, createdDate, claimedDate, dueDate, priority, processDefinitionId, processInstanceId, parentTaskId, formKey, completedDate, duration, processDefinitionVersion, businessKey, taskDefinitionKey);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    return \"TaskImpl{\" + \"id='\" + id + '\\'' + \", owner='\" + owner + '\\'' + \", assignee='\" + assignee + '\\'' + \", name='\" + name + '\\'' + \", description='\" + description + '\\'' + \", createdDate=\" + createdDate + \", claimedDate=\" + claimedDate + \", dueDate=\" + dueDate + \", priority=\" + priority + \", processDefinitionId='\" + processDefinitionId + '\\'' + \", processInstanceId='\" + processInstanceId + '\\'' + \", parentTaskId='\" + parentTaskId + '\\'' + \", formKey='\" + formKey + '\\'' + \", status=\" + status + \", processDefinitionVersion=\" + processDefinitionVersion + \", businessKey=\" + businessKey + \", taskDefinitionKey=\" + taskDefinitionKey + '}';\n+  }\n+}\n\\ No newline at end of file\n",
            "diff_size": 441
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/412/TaskImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/412/TaskImpl.java\nindex 6c97ae51baa..88084d8fda0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/412/TaskImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/412/TaskImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.task.model.impl;\n \n import java.util.Date;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/412/TaskImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/412/TaskImpl.java\nindex 6c97ae51baa..88084d8fda0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/412/TaskImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/412/TaskImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.api.task.model.impl;\n \n import java.util.Date;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "open-eid-digidoc4j",
    "error_id": "39",
    "information": {
        "errors": [
            {
                "line": "79",
                "column": "118",
                "severity": "error",
                "message": "'+' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "      return this.getIssuerForCertificateToken(certificateToken);\n    } catch (IllegalStateException e) {\n      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n              \" certificate source?\",\n          (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n              .getDSSIdAsString(), e);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "79",
                    "column": "118",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/39/OCSPCertificateValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler/39/OCSPCertificateValidator.java\nindex 67e0fecc6ae..c3ba4a00215 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/39/OCSPCertificateValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler/39/OCSPCertificateValidator.java\n@@ -77,7 +77,7 @@ public class OCSPCertificateValidator implements CertificateValidator {\n       return this.getIssuerForCertificateToken(certificateToken);\n     } catch (IllegalStateException e) {\n       LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n-              \" certificate source?\",\n+          \" certificate source?\",\n           (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n               .getDSSIdAsString(), e);\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "79",
                    "column": "118",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/39/OCSPCertificateValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/39/OCSPCertificateValidator.java\nindex 67e0fecc6ae..92b6ffd6e04 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/39/OCSPCertificateValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/intellij/39/OCSPCertificateValidator.java\n@@ -82,14 +82,14 @@ public class OCSPCertificateValidator implements CertificateValidator {\n               .getDSSIdAsString(), e);\n     }\n     throw CertificateValidationException.of(CertificateValidationStatus.UNTRUSTED,\n-            \"Failed to parse issuer certificate token. Not all intermediate certificates added into OCSP.\");\n+        \"Failed to parse issuer certificate token. Not all intermediate certificates added into OCSP.\");\n   }\n \n   private CertificateToken getIssuerForCertificateToken(CertificateToken certificateToken) {\n     List<CertificateToken> tokens = this.getIssuerFromCertificateSource(certificateToken);\n     if (tokens.size() != 1) {\n       throw new IllegalStateException(String.format(\"<%s> matching certificate tokens found from certificate source\",\n-              tokens.size()));\n+          tokens.size()));\n     }\n     return tokens.get(0);\n   }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 262).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "86",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 134).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/39/OCSPCertificateValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/39/OCSPCertificateValidator.java\nindex 67e0fecc6ae..7c081174d69 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/39/OCSPCertificateValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/naturalize/39/OCSPCertificateValidator.java\n@@ -44,8 +44,7 @@ public class OCSPCertificateValidator implements CertificateValidator {\n    * @param certificateSource the source of certificates\n    * @param ocspSource        the source of OCSP\n    */\n-  public OCSPCertificateValidator(Configuration configuration, CertificateSource certificateSource, OCSPSource\n-      ocspSource) {\n+  public OCSPCertificateValidator(Configuration configuration, CertificateSource certificateSource, OCSPSource ocspSource) {\n     this.configuration = configuration;\n     this.certificateSource = certificateSource;\n     this.ocspSource = ocspSource;\n@@ -76,21 +75,16 @@ public class OCSPCertificateValidator implements CertificateValidator {\n       certificateToken = DSSUtils.loadCertificate(certificate.getEncoded());\n       return this.getIssuerForCertificateToken(certificateToken);\n     } catch (IllegalStateException e) {\n-      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n-              \" certificate source?\",\n-          (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n-              .getDSSIdAsString(), e);\n-    }\n-    throw CertificateValidationException.of(CertificateValidationStatus.UNTRUSTED,\n-            \"Failed to parse issuer certificate token. Not all intermediate certificates added into OCSP.\");\n+      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" + \" certificate source?\", (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken.getDSSIdAsString(), e);\n+  }\n+    throw CertificateValidationException.of(CertificateValidationStatus.UNTRUSTED, \"Failed to parse issuer certificate token. Not all intermediate certificates added into OCSP.\");\n   }\n \n   private CertificateToken getIssuerForCertificateToken(CertificateToken certificateToken) {\n     List<CertificateToken> tokens = this.getIssuerFromCertificateSource(certificateToken);\n     if (tokens.size() != 1) {\n-      throw new IllegalStateException(String.format(\"<%s> matching certificate tokens found from certificate source\",\n-              tokens.size()));\n-    }\n+      throw new IllegalStateException(String.format(\"<%s> matching certificate tokens found from certificate source\", tokens.size()));\n+  }\n     return tokens.get(0);\n   }\n \n@@ -111,4 +105,4 @@ public class OCSPCertificateValidator implements CertificateValidator {\n     return certificateSource;\n   }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 124).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 262).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 179).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/39/OCSPCertificateValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/39/OCSPCertificateValidator.java\nindex 67e0fecc6ae..f13f790da1a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/39/OCSPCertificateValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/codebuff/39/OCSPCertificateValidator.java\n@@ -22,7 +22,6 @@ import org.digidoc4j.exceptions.CertificateValidationException.CertificateValida\n import org.digidoc4j.exceptions.NetworkException;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.security.cert.CertificateEncodingException;\n import java.security.cert.X509Certificate;\n import java.util.List;\n@@ -32,6 +31,8 @@ import java.util.List;\n  * <p>\n  * Created by Janar Rahumeel (CGI Estonia)\n  */\n+\n+\n public class OCSPCertificateValidator implements CertificateValidator {\n \n   private static final Logger LOGGER = LoggerFactory.getLogger(OCSPCertificateValidator.class);\n@@ -44,8 +45,8 @@ public class OCSPCertificateValidator implements CertificateValidator {\n    * @param certificateSource the source of certificates\n    * @param ocspSource        the source of OCSP\n    */\n-  public OCSPCertificateValidator(Configuration configuration, CertificateSource certificateSource, OCSPSource\n-      ocspSource) {\n+\n+  public OCSPCertificateValidator(Configuration configuration, CertificateSource certificateSource, OCSPSource ocspSource) {\n     this.configuration = configuration;\n     this.certificateSource = certificateSource;\n     this.ocspSource = ocspSource;\n@@ -76,20 +77,16 @@ public class OCSPCertificateValidator implements CertificateValidator {\n       certificateToken = DSSUtils.loadCertificate(certificate.getEncoded());\n       return this.getIssuerForCertificateToken(certificateToken);\n     } catch (IllegalStateException e) {\n-      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n-              \" certificate source?\",\n-          (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n-              .getDSSIdAsString(), e);\n+      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" + \" certificate source?\", (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken.getDSSIdAsString(), e);\n     }\n-    throw CertificateValidationException.of(CertificateValidationStatus.UNTRUSTED,\n-            \"Failed to parse issuer certificate token. Not all intermediate certificates added into OCSP.\");\n+    throw CertificateValidationException.of(CertificateValidationStatus.UNTRUSTED, \"Failed to parse issuer certificate token. Not all intermediate certificates added into OCSP.\");\n   }\n \n   private CertificateToken getIssuerForCertificateToken(CertificateToken certificateToken) {\n     List<CertificateToken> tokens = this.getIssuerFromCertificateSource(certificateToken);\n     if (tokens.size() != 1) {\n       throw new IllegalStateException(String.format(\"<%s> matching certificate tokens found from certificate source\",\n-              tokens.size()));\n+        tokens.size()));\n     }\n     return tokens.get(0);\n   }\n@@ -110,5 +107,4 @@ public class OCSPCertificateValidator implements CertificateValidator {\n   public CertificateSource getCertificateSource() {\n     return certificateSource;\n   }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "79",
                    "column": "117",
                    "severity": "error",
                    "message": "'+' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "79",
                    "column": "117",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/39/OCSPCertificateValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_random/39/OCSPCertificateValidator.java\nindex 67e0fecc6ae..76df45fba2f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/39/OCSPCertificateValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_random/39/OCSPCertificateValidator.java\n@@ -76,8 +76,8 @@ public class OCSPCertificateValidator implements CertificateValidator {\n       certificateToken = DSSUtils.loadCertificate(certificate.getEncoded());\n       return this.getIssuerForCertificateToken(certificateToken);\n     } catch (IllegalStateException e) {\n-      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n-              \" certificate source?\",\n+      LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\"+\n+          \" certificate source?\",\n           (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n               .getDSSIdAsString(), e);\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "79",
                    "column": "118",
                    "severity": "error",
                    "message": "'+' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/39/OCSPCertificateValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_three_grams/39/OCSPCertificateValidator.java\nindex 67e0fecc6ae..c3ba4a00215 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/errored/1/39/OCSPCertificateValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/open-eid-digidoc4j/styler_three_grams/39/OCSPCertificateValidator.java\n@@ -77,7 +77,7 @@ public class OCSPCertificateValidator implements CertificateValidator {\n       return this.getIssuerForCertificateToken(certificateToken);\n     } catch (IllegalStateException e) {\n       LOGGER.warn(\"Certificate with DSS ID <{}> is untrusted. Not all the intermediate certificates added into OCSP\" +\n-              \" certificate source?\",\n+          \" certificate source?\",\n           (certificateToken == null) ? certificate.getSubjectX500Principal().getName() : certificateToken\n               .getDSSIdAsString(), e);\n     }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
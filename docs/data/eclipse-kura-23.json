{
    "project_name": "eclipse-kura",
    "error_id": "23",
    "information": {
        "errors": [
            {
                "line": "297",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 151).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        // TODO - should be know if we are CONNECTED_SITE for wifi?\n\n        LoopbackInterfaceImpl<? extends NetInterfaceAddress> netInterface = (LoopbackInterfaceImpl<? extends NetInterfaceAddress>) getNetworkInterface(\n                \"lo\");\n        if (netInterface.isUp()) {\n            return NetworkState.CONNECTED_LOCAL;",
    "results": [
        {
            "tool": "styler",
            "errors": null,
            "diff": null
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/23/NetworkServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/intellij/23/NetworkServiceImpl.java\nindex 5e20888dc59..e241ffa7d7b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/23/NetworkServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/intellij/23/NetworkServiceImpl.java\n@@ -9,6 +9,7 @@\n  * Contributors:\n  *     Eurotech\n  *******************************************************************************/\n+\n package org.eclipse.kura.linux.net;\n \n import java.io.BufferedReader;\n@@ -100,8 +101,8 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n \n     private static final String UNCONFIGURED_MODEM_REGEX = \"^\\\\d+-\\\\d+(\\\\.\\\\d+)?$\";\n \n-    private static final String[] EVENT_TOPICS = new String[] { UsbDeviceAddedEvent.USB_EVENT_DEVICE_ADDED_TOPIC,\n-            UsbDeviceRemovedEvent.USB_EVENT_DEVICE_REMOVED_TOPIC };\n+    private static final String[] EVENT_TOPICS = new String[] {UsbDeviceAddedEvent.USB_EVENT_DEVICE_ADDED_TOPIC,\n+        UsbDeviceRemovedEvent.USB_EVENT_DEVICE_REMOVED_TOPIC};\n \n     private static final String TOGGLE_MODEM_TASK_NAME = \"ToggleModem\";\n     private static final long TOGGLE_MODEM_TASK_INTERVAL = 40; // in sec\n@@ -193,7 +194,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                     final UsbModemDevice usbModem = e.getValue();\n \n                     final SupportedUsbModemInfo modemInfo = SupportedUsbModemsInfo.getModem(usbModem.getVendorId(),\n-                            usbModem.getProductId(), usbModem.getProductName());\n+                        usbModem.getProductId(), usbModem.getProductName());\n \n                     logger.debug(\"activate() :: Found modem: {}\", usbModem);\n \n@@ -204,9 +205,9 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                     // Check for correct number of resources\n \n                     logger.debug(\"activate() :: usbModem.getTtyDevs().size()={}, modemInfo.getNumTtyDevs()={}\",\n-                            usbModem.getTtyDevs().size(), modemInfo.getNumTtyDevs());\n+                        usbModem.getTtyDevs().size(), modemInfo.getNumTtyDevs());\n                     logger.debug(\"activate() :: usbModem.getBlockDevs().size()={}, modemInfo.getNumBlockDevs()={}\",\n-                            usbModem.getBlockDevs().size(), modemInfo.getNumBlockDevs());\n+                        usbModem.getBlockDevs().size(), modemInfo.getNumBlockDevs());\n \n                     if (hasCorrectNumberOfResources(modemInfo, usbModem)) {\n                         logger.info(\"activate () :: posting ModemAddedEvent ... {}\", usbModem);\n@@ -214,11 +215,11 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                         this.addedModems.add(usbModem.getUsbPort());\n                     } else {\n                         logger.warn(\n-                                \"activate() :: modem doesn't have correct number of resources, will try to toggle it ...\");\n+                            \"activate() :: modem doesn't have correct number of resources, will try to toggle it ...\");\n                         logger.info(\"activate() :: scheduling {} thread in {} minutes ..\", TOGGLE_MODEM_TASK_NAME,\n-                                TOGGLE_MODEM_TASK_EXECUTION_DELAY);\n+                            TOGGLE_MODEM_TASK_EXECUTION_DELAY);\n                         this.executor.schedule(new ToggleModemTask(modemInfo, usbPort),\n-                                TOGGLE_MODEM_TASK_EXECUTION_DELAY, TimeUnit.MINUTES);\n+                            TOGGLE_MODEM_TASK_EXECUTION_DELAY, TimeUnit.MINUTES);\n                     }\n                 }\n             } finally {\n@@ -230,7 +231,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n     private void addUsbDevices(List<? extends AbstractUsbDevice> usbDevices) {\n         for (AbstractUsbDevice device : usbDevices) {\n             if (SupportedUsbModemsInfo.isSupported(device.getVendorId(), device.getProductId(),\n-                    device.getProductName())) {\n+                device.getProductName())) {\n                 String usbPort = device.getUsbPort();\n                 UsbModemDevice usbModem;\n                 if (this.usbModems.get(usbPort) == null) {\n@@ -265,7 +266,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                 logger.warn(\"Interrupted\", e);\n             }\n             logger.info(\"deactivate() :: {} Thread terminated? - {}\", TOGGLE_MODEM_TASK_NAME,\n-                    this.executor.isTerminated());\n+                this.executor.isTerminated());\n         }\n         this.ctx = null;\n     }\n@@ -294,7 +295,8 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n \n         // TODO - should be know if we are CONNECTED_SITE for wifi?\n \n-        LoopbackInterfaceImpl<? extends NetInterfaceAddress> netInterface = (LoopbackInterfaceImpl<? extends NetInterfaceAddress>) getNetworkInterface(\n+        LoopbackInterfaceImpl<? extends NetInterfaceAddress> netInterface =\n+            (LoopbackInterfaceImpl<? extends NetInterfaceAddress>) getNetworkInterface(\n                 \"lo\");\n         if (netInterface.isUp()) {\n             return NetworkState.CONNECTED_LOCAL;\n@@ -405,9 +407,9 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                         String iface = netInterface.getName();\n                         if (iface != null && iface.startsWith(\"ppp\")) {\n                             ModemInterface<ModemInterfaceAddress> pppModemInterface = getModemInterface(iface, false,\n-                                    this.serialModem);\n+                                this.serialModem);\n                             ModemInterface<ModemInterfaceAddress> serialModemInterface = getModemInterface(\n-                                    this.serialModem.getProductName(), false, this.serialModem);\n+                                this.serialModem.getProductName(), false, this.serialModem);\n                             if (pppModemInterface != null && serialModemInterface != null) {\n                                 String pppModel = pppModemInterface.getModel();\n                                 String serialModel = serialModemInterface.getModel();\n@@ -420,7 +422,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                     }\n                     if (addModem) {\n                         netInterfaces\n-                                .add(getModemInterface(this.serialModem.getProductName(), false, this.serialModem));\n+                            .add(getModemInterface(this.serialModem.getProductName(), false, this.serialModem));\n                     }\n                 }\n             }\n@@ -511,7 +513,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n         NetInterfaceType type = ifconfig.getType();\n         boolean isUp = ifconfig.isUp();\n         if (type == NetInterfaceType.UNKNOWN && this.serialModem != null\n-                && interfaceName.equals(this.serialModem.getProductName())) {\n+            && interfaceName.equals(this.serialModem.getProductName())) {\n             // If the interface name is in a form such as \"1-3.4\", assume it is a modem\n             type = NetInterfaceType.MODEM;\n         }\n@@ -544,7 +546,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n             netInterface.setDriverVersion(getDriverVersion());\n             netInterface.setFirmwareVersion(getFirmwareVersion());\n             netInterface.setAutoConnect(LinuxNetworkUtil.isAutoConnect(interfaceName));\n-            netInterface.setHardwareAddress(new byte[] { 0, 0, 0, 0, 0, 0 });\n+            netInterface.setHardwareAddress(new byte[] {0, 0, 0, 0, 0, 0});\n             netInterface.setLoopback(true);\n             netInterface.setMTU(ifconfig.getMtu());\n             netInterface.setSupportsMulticast(ifconfig.isMulticast());\n@@ -611,7 +613,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                 logger.debug(\"Ignoring unconfigured ppp interface: {}\", interfaceName);\n             } else {\n                 logger.debug(\"Unsupported network type - not adding to network devices: {} of type: {}\", interfaceName,\n-                        type.toString());\n+                    type.toString());\n             }\n             return null;\n         }\n@@ -633,20 +635,20 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                 return;\n             }\n             if (event.getProperty(UsbDeviceEvent.USB_EVENT_RESOURCE_PROPERTY) == null\n-                    || ((String) event.getProperty(UsbDeviceEvent.USB_EVENT_RESOURCE_PROPERTY)).startsWith(\"usb\")) {\n+                || ((String) event.getProperty(UsbDeviceEvent.USB_EVENT_RESOURCE_PROPERTY)).startsWith(\"usb\")) {\n                 return;\n             }\n             if (event.getProperty(UsbDeviceEvent.USB_EVENT_DEVICE_TYPE_PROPERTY) == null\n-                    || ((UsbDeviceType) event.getProperty(UsbDeviceEvent.USB_EVENT_DEVICE_TYPE_PROPERTY))\n-                            .equals(UsbDeviceType.USB_NET_DEVICE)) {\n+                || ((UsbDeviceType) event.getProperty(UsbDeviceEvent.USB_EVENT_DEVICE_TYPE_PROPERTY))\n+                .equals(UsbDeviceType.USB_NET_DEVICE)) {\n                 return;\n             }\n \n             // do we care?\n             final SupportedUsbModemInfo modemInfo = SupportedUsbModemsInfo.getModem(\n-                    (String) event.getProperty(UsbDeviceEvent.USB_EVENT_VENDOR_ID_PROPERTY),\n-                    (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_ID_PROPERTY),\n-                    (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_NAME_PROPERTY));\n+                (String) event.getProperty(UsbDeviceEvent.USB_EVENT_VENDOR_ID_PROPERTY),\n+                (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_ID_PROPERTY),\n+                (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_NAME_PROPERTY));\n             if (modemInfo != null) {\n                 // Found one - see if we have some info for it.\n                 // Also check if we are getting more devices than expected.\n@@ -663,7 +665,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                 }\n \n                 UsbModemDevice usbModem = this.usbModems\n-                        .get(event.getProperty(UsbDeviceEvent.USB_EVENT_USB_PORT_PROPERTY));\n+                    .get(event.getProperty(UsbDeviceEvent.USB_EVENT_USB_PORT_PROPERTY));\n \n                 boolean createNewUsbModemDevice = false;\n                 if (usbModem == null) {\n@@ -671,35 +673,35 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                     createNewUsbModemDevice = true;\n                 } else if (modemInfo.getNumTtyDevs() > 0 && modemInfo.getNumBlockDevs() > 0) {\n                     if (usbModem.getTtyDevs().size() >= modemInfo.getNumTtyDevs()\n-                            && usbModem.getBlockDevs().size() >= modemInfo.getNumBlockDevs()) {\n+                        && usbModem.getBlockDevs().size() >= modemInfo.getNumBlockDevs()) {\n                         logger.debug(\"handleEvent() :: Found modem with too many resources: {}. Create a new one\",\n-                                usbModem);\n+                            usbModem);\n                         createNewUsbModemDevice = true;\n                     }\n                 } else if (modemInfo.getNumTtyDevs() > 0 && usbModem.getTtyDevs().size() >= modemInfo.getNumTtyDevs()\n-                        || modemInfo.getNumBlockDevs() > 0\n-                                && usbModem.getBlockDevs().size() >= modemInfo.getNumBlockDevs()) {\n+                    || modemInfo.getNumBlockDevs() > 0\n+                    && usbModem.getBlockDevs().size() >= modemInfo.getNumBlockDevs()) {\n                     logger.debug(\"handleEvent() :: Found modem with too many resources: {}. Create a new one\",\n-                            usbModem);\n+                        usbModem);\n                     createNewUsbModemDevice = true;\n                 }\n \n                 if (createNewUsbModemDevice) {\n                     usbModem = new UsbModemDevice(\n-                            (String) event.getProperty(UsbDeviceEvent.USB_EVENT_VENDOR_ID_PROPERTY),\n-                            (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_ID_PROPERTY),\n-                            (String) event.getProperty(UsbDeviceEvent.USB_EVENT_MANUFACTURER_NAME_PROPERTY),\n-                            (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_NAME_PROPERTY),\n-                            (String) event.getProperty(UsbDeviceEvent.USB_EVENT_BUS_NUMBER_PROPERTY),\n-                            (String) event.getProperty(UsbDeviceEvent.USB_EVENT_DEVICE_PATH_PROPERTY));\n+                        (String) event.getProperty(UsbDeviceEvent.USB_EVENT_VENDOR_ID_PROPERTY),\n+                        (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_ID_PROPERTY),\n+                        (String) event.getProperty(UsbDeviceEvent.USB_EVENT_MANUFACTURER_NAME_PROPERTY),\n+                        (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_NAME_PROPERTY),\n+                        (String) event.getProperty(UsbDeviceEvent.USB_EVENT_BUS_NUMBER_PROPERTY),\n+                        (String) event.getProperty(UsbDeviceEvent.USB_EVENT_DEVICE_PATH_PROPERTY));\n                 }\n \n                 String resource = (String) event.getProperty(UsbDeviceEvent.USB_EVENT_RESOURCE_PROPERTY);\n                 Integer interfaceNumber = (Integer) event.getProperty(UsbDeviceEvent.USB_EVENT_USB_INTERFACE_NUMBER);\n                 UsbDeviceType usbDeviceType = (UsbDeviceType) event\n-                        .getProperty(UsbDeviceEvent.USB_EVENT_DEVICE_TYPE_PROPERTY);\n+                    .getProperty(UsbDeviceEvent.USB_EVENT_DEVICE_TYPE_PROPERTY);\n                 logger.debug(\"handleEvent() :: Found resource: {} of type {} for: {}\", resource, usbDeviceType,\n-                        usbModem.getUsbPort());\n+                    usbModem.getUsbPort());\n                 if (usbDeviceType.equals(UsbDeviceType.USB_TTY_DEVICE)) {\n                     usbModem.addTtyDev(resource, interfaceNumber);\n                 } else if (usbDeviceType.equals(UsbDeviceType.USB_BLOCK_DEVICE)) {\n@@ -712,15 +714,15 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                 logger.info(\"handleEvent() :: Modified modem (Added resource): {}\", usbModem);\n \n                 logger.debug(\"handleEvent() :: usbModem.getTtyDevs().size()={}, modemInfo.getNumTtyDevs()={}\",\n-                        usbModem.getTtyDevs().size(), modemInfo.getNumTtyDevs());\n+                    usbModem.getTtyDevs().size(), modemInfo.getNumTtyDevs());\n                 logger.debug(\"handleEvent() :: usbModem.getBlockDevs().size()={}, modemInfo.getNumBlockDevs()={}\",\n-                        usbModem.getBlockDevs().size(), modemInfo.getNumBlockDevs());\n+                    usbModem.getBlockDevs().size(), modemInfo.getNumBlockDevs());\n \n                 // Check for correct number of resources\n                 if (usbModem.getTtyDevs().size() == modemInfo.getNumTtyDevs()\n-                        && usbModem.getBlockDevs().size() == modemInfo.getNumBlockDevs()) {\n+                    && usbModem.getBlockDevs().size() == modemInfo.getNumBlockDevs()) {\n                     logger.info(\"handleEvent() :: posting ModemAddedEvent -- USB_EVENT_DEVICE_ADDED_TOPIC: {}\",\n-                            usbModem);\n+                        usbModem);\n                     this.eventAdmin.postEvent(new ModemAddedEvent(usbModem));\n                     this.addedModems.add(usbModem.getUsbPort());\n                 }\n@@ -739,13 +741,13 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n \n             // do we care?\n             SupportedUsbModemInfo modemInfo = SupportedUsbModemsInfo.getModem(\n-                    (String) event.getProperty(UsbDeviceEvent.USB_EVENT_VENDOR_ID_PROPERTY),\n-                    (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_ID_PROPERTY),\n-                    (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_NAME_PROPERTY));\n+                (String) event.getProperty(UsbDeviceEvent.USB_EVENT_VENDOR_ID_PROPERTY),\n+                (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_ID_PROPERTY),\n+                (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_NAME_PROPERTY));\n             if (modemInfo != null) {\n                 // found one - remove if it exists\n                 UsbModemDevice usbModem = this.usbModems\n-                        .remove(event.getProperty(UsbDeviceEvent.USB_EVENT_USB_PORT_PROPERTY));\n+                    .remove(event.getProperty(UsbDeviceEvent.USB_EVENT_USB_PORT_PROPERTY));\n                 if (usbModem != null) {\n                     logger.info(\"handleEvent() :: Removing modem: {}\", usbModem);\n                     this.addedModems.remove(usbModem.getUsbPort());\n@@ -782,7 +784,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n     }\n \n     private ModemInterface<ModemInterfaceAddress> getModemInterface(String interfaceName, boolean isUp,\n-            ModemDevice modemDevice) throws KuraException {\n+                                                                    ModemDevice modemDevice) throws KuraException {\n \n         ModemInterfaceImpl<ModemInterfaceAddress> modemInterface = new ModemInterfaceImpl<>(interfaceName);\n \n@@ -791,7 +793,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n \n             UsbModemDevice usbModemDevice = (UsbModemDevice) modemDevice;\n             SupportedUsbModemInfo supportedUsbModemInfo = SupportedUsbModemsInfo.getModem(usbModemDevice.getVendorId(),\n-                    usbModemDevice.getProductId(), usbModemDevice.getProductName());\n+                usbModemDevice.getProductId(), usbModemDevice.getProductName());\n             modemInterface.setTechnologyTypes(supportedUsbModemInfo.getTechnologyTypes());\n             modemInterface.setUsbDevice((UsbModemDevice) modemDevice);\n         }\n@@ -814,7 +816,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n         modemInterface.setLoopback(false);\n         modemInterface.setPointToPoint(true);\n         modemInterface.setState(getState(interfaceName, isUp));\n-        modemInterface.setHardwareAddress(new byte[] { 0, 0, 0, 0, 0, 0 });\n+        modemInterface.setHardwareAddress(new byte[] {0, 0, 0, 0, 0, 0});\n         if (!interfaceName.matches(UNCONFIGURED_MODEM_REGEX)) {\n             LinuxIfconfig ifconfig = this.linuxNetworkUtil.getInterfaceConfiguration(interfaceName);\n             if (ifconfig != null) {\n@@ -832,7 +834,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n     }\n \n     private List<NetInterfaceAddress> getNetInterfaceAddresses(String interfaceName, NetInterfaceType type,\n-            boolean isUp) throws KuraException {\n+                                                               boolean isUp) throws KuraException {\n         List<NetInterfaceAddress> netInterfaceAddresses = new ArrayList<>();\n         if (isUp) {\n             ConnectionInfo conInfo = new ConnectionInfoImpl(interfaceName);\n@@ -864,7 +866,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n     }\n \n     private List<WifiInterfaceAddress> getWifiInterfaceAddresses(String interfaceName, boolean isUp)\n-            throws KuraException {\n+        throws KuraException {\n         List<WifiInterfaceAddress> wifiInterfaceAddresses = new ArrayList<>();\n         if (isUp) {\n             ConnectionInfo conInfo = new ConnectionInfoImpl(interfaceName);\n@@ -920,7 +922,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n     }\n \n     private List<ModemInterfaceAddress> getModemInterfaceAddresses(String interfaceName, boolean isUp)\n-            throws KuraException {\n+        throws KuraException {\n         List<ModemInterfaceAddress> modemInterfaceAddresses = new ArrayList<>();\n         if (isUp) {\n             ConnectionInfo conInfo = new ConnectionInfoImpl(interfaceName);\n@@ -1045,7 +1047,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n         if (modemDevice instanceof UsbModemDevice) {\n             UsbModemDevice usbModem = (UsbModemDevice) modemDevice;\n             SupportedUsbModemInfo modemInfo = SupportedUsbModemsInfo.getModem(usbModem.getVendorId(),\n-                    usbModem.getProductId(), usbModem.getProductName());\n+                usbModem.getProductId(), usbModem.getProductName());\n             deviceName = modemInfo.getDeviceName();\n             modemId = usbModem.getUsbPort();\n         } else if (modemDevice instanceof SerialModemDevice) {\n@@ -1088,9 +1090,9 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n     }\n \n     private boolean hasCorrectNumberOfResources(final SupportedUsbModemInfo modemInfo,\n-            final UsbModemDevice modemDevice) {\n+                                                final UsbModemDevice modemDevice) {\n         return modemDevice.getTtyDevs().size() == modemInfo.getNumTtyDevs()\n-                && modemDevice.getBlockDevs().size() == modemInfo.getNumBlockDevs();\n+            && modemDevice.getBlockDevs().size() == modemInfo.getNumBlockDevs();\n     }\n \n     private void waitActivated() {\n",
            "diff_size": 56
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "297",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/23/NetworkServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/naturalize/23/NetworkServiceImpl.java\nindex 5e20888dc59..f3f5cb8dc84 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/23/NetworkServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/naturalize/23/NetworkServiceImpl.java\n@@ -404,8 +404,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                     for (NetInterface<?> netInterface : netInterfaces) {\n                         String iface = netInterface.getName();\n                         if (iface != null && iface.startsWith(\"ppp\")) {\n-                            ModemInterface<ModemInterfaceAddress> pppModemInterface = getModemInterface(iface, false,\n-                                    this.serialModem);\n+                            ModemInterface<ModemInterfaceAddress> pppModemInterface = getModemInterface(iface, false, this.serialModem);\n                             ModemInterface<ModemInterfaceAddress> serialModemInterface = getModemInterface(\n                                     this.serialModem.getProductName(), false, this.serialModem);\n                             if (pppModemInterface != null && serialModemInterface != null) {\n@@ -639,7 +638,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n             if (event.getProperty(UsbDeviceEvent.USB_EVENT_DEVICE_TYPE_PROPERTY) == null\n                     || ((UsbDeviceType) event.getProperty(UsbDeviceEvent.USB_EVENT_DEVICE_TYPE_PROPERTY))\n                             .equals(UsbDeviceType.USB_NET_DEVICE)) {\n-                return;\n+    return;\n             }\n \n             // do we care?\n@@ -1170,4 +1169,4 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n             Thread.currentThread().interrupt();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "100",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "185",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "193",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "194",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "285",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "391",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "608",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "611",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 214).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "617",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 307).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "644",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 220).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "650",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 503).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "671",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 168).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "672",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "697",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 301).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "736",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "986",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 154).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/23/NetworkServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/codebuff/23/NetworkServiceImpl.java\nindex 5e20888dc59..426bfab1504 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/errored/1/23/NetworkServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-kura/codebuff/23/NetworkServiceImpl.java\n@@ -31,7 +31,6 @@ import java.util.concurrent.Executors;\n import java.util.concurrent.ScheduledExecutorService;\n import java.util.concurrent.TimeUnit;\n import java.util.concurrent.atomic.AtomicBoolean;\n-\n import org.eclipse.kura.KuraErrorCode;\n import org.eclipse.kura.KuraException;\n import org.eclipse.kura.core.net.EthernetInterfaceImpl;\n@@ -94,31 +93,23 @@ import org.slf4j.LoggerFactory;\n \n public class NetworkServiceImpl implements NetworkService, EventHandler {\n \n-    public static final String PPP_PEERS_DIR = \"/etc/ppp/peers/\";\n \n+    public static final String PPP_PEERS_DIR = \"/etc/ppp/peers/\";\n     private static final Logger logger = LoggerFactory.getLogger(NetworkServiceImpl.class);\n-\n     private static final String UNCONFIGURED_MODEM_REGEX = \"^\\\\d+-\\\\d+(\\\\.\\\\d+)?$\";\n-\n-    private static final String[] EVENT_TOPICS = new String[] { UsbDeviceAddedEvent.USB_EVENT_DEVICE_ADDED_TOPIC,\n-            UsbDeviceRemovedEvent.USB_EVENT_DEVICE_REMOVED_TOPIC };\n-\n+    private static final String[] EVENT_TOPICS = new String[] { UsbDeviceAddedEvent.USB_EVENT_DEVICE_ADDED_TOPIC, UsbDeviceRemovedEvent.USB_EVENT_DEVICE_REMOVED_TOPIC };\n     private static final String TOGGLE_MODEM_TASK_NAME = \"ToggleModem\";\n     private static final long TOGGLE_MODEM_TASK_INTERVAL = 40; // in sec\n     private static final long TOGGLE_MODEM_TASK_TERMINATION_TOUT = 1; // in sec\n     private static final long TOGGLE_MODEM_TASK_EXECUTION_DELAY = 2; // in min\n-\n     private final Map<String, UsbModemDevice> usbModems = new ConcurrentHashMap<>();\n     private final List<String> addedModems = new CopyOnWriteArrayList<>();\n     private final ScheduledExecutorService executor = Executors.newSingleThreadScheduledExecutor();\n     private final AtomicBoolean activated = new AtomicBoolean(false);\n-\n     private ComponentContext ctx;\n-\n     private EventAdmin eventAdmin;\n     private UsbService usbService;\n     private CommandExecutorService executorService;\n-\n     private SerialModemDevice serialModem;\n     private LinuxNetworkUtil linuxNetworkUtil;\n \n@@ -161,11 +152,9 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n         // save the bundle context\n         this.ctx = componentContext;\n         this.linuxNetworkUtil = new LinuxNetworkUtil(this.executorService);\n-\n         Dictionary<String, String[]> d = new Hashtable<>();\n         d.put(EventConstants.EVENT_TOPIC, EVENT_TOPICS);\n         this.ctx.getBundleContext().registerService(EventHandler.class.getName(), this, d);\n-\n         this.executor.execute(() -> {\n             try {\n                 SupportedUsbModems.installModemDrivers(this.executorService);\n@@ -178,23 +167,22 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                 }\n \n                 // Add block devices\n+\n                 List<? extends AbstractUsbDevice> blockDevices = this.usbService.getUsbBlockDevices();\n                 if (blockDevices != null && !blockDevices.isEmpty()) {\n-                    logger.debug(\"activate() :: Total block devices reported by UsbService: {}\", blockDevices.size());\n+                    logger.debug(\"activate() :: Total block devices reported by UsbService: {}\",\n+                                 blockDevices.size());\n                     addUsbDevices(blockDevices);\n                 }\n \n                 // At this point, we should have some modems - display them\n+\n                 Iterator<Entry<String, UsbModemDevice>> it = this.usbModems.entrySet().iterator();\n                 while (it.hasNext()) {\n                     final Entry<String, UsbModemDevice> e = it.next();\n-\n                     final String usbPort = e.getKey();\n                     final UsbModemDevice usbModem = e.getValue();\n-\n-                    final SupportedUsbModemInfo modemInfo = SupportedUsbModemsInfo.getModem(usbModem.getVendorId(),\n-                            usbModem.getProductId(), usbModem.getProductName());\n-\n+                    final SupportedUsbModemInfo modemInfo = SupportedUsbModemsInfo.getModem(usbModem.getVendorId(), usbModem.getProductId(), usbModem.getProductName());\n                     logger.debug(\"activate() :: Found modem: {}\", usbModem);\n \n                     if (modemInfo == null) {\n@@ -202,23 +190,21 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                     }\n \n                     // Check for correct number of resources\n-\n-                    logger.debug(\"activate() :: usbModem.getTtyDevs().size()={}, modemInfo.getNumTtyDevs()={}\",\n-                            usbModem.getTtyDevs().size(), modemInfo.getNumTtyDevs());\n-                    logger.debug(\"activate() :: usbModem.getBlockDevs().size()={}, modemInfo.getNumBlockDevs()={}\",\n-                            usbModem.getBlockDevs().size(), modemInfo.getNumBlockDevs());\n+                    logger.debug(\"activate() :: usbModem.getTtyDevs().size()={}, modemInfo.getNumTtyDevs()={}\", usbModem.getTtyDevs().size(), modemInfo.getNumTtyDevs());\n+                    logger.debug(\"activate() :: usbModem.getBlockDevs().size()={}, modemInfo.getNumBlockDevs()={}\", usbModem.getBlockDevs().size(), modemInfo.getNumBlockDevs());\n \n                     if (hasCorrectNumberOfResources(modemInfo, usbModem)) {\n                         logger.info(\"activate () :: posting ModemAddedEvent ... {}\", usbModem);\n                         this.eventAdmin.postEvent(new ModemAddedEvent(usbModem));\n                         this.addedModems.add(usbModem.getUsbPort());\n                     } else {\n-                        logger.warn(\n-                                \"activate() :: modem doesn't have correct number of resources, will try to toggle it ...\");\n-                        logger.info(\"activate() :: scheduling {} thread in {} minutes ..\", TOGGLE_MODEM_TASK_NAME,\n-                                TOGGLE_MODEM_TASK_EXECUTION_DELAY);\n+                        logger.warn(\"activate() :: modem doesn't have correct number of resources, will try to toggle it ...\");\n+                        logger.info(\"activate() :: scheduling {} thread in {} minutes ..\",\n+                                    TOGGLE_MODEM_TASK_NAME,\n+                                    TOGGLE_MODEM_TASK_EXECUTION_DELAY);\n                         this.executor.schedule(new ToggleModemTask(modemInfo, usbPort),\n-                                TOGGLE_MODEM_TASK_EXECUTION_DELAY, TimeUnit.MINUTES);\n+                            TOGGLE_MODEM_TASK_EXECUTION_DELAY,\n+                                TimeUnit.MINUTES);\n                     }\n                 }\n             } finally {\n@@ -229,8 +215,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n \n     private void addUsbDevices(List<? extends AbstractUsbDevice> usbDevices) {\n         for (AbstractUsbDevice device : usbDevices) {\n-            if (SupportedUsbModemsInfo.isSupported(device.getVendorId(), device.getProductId(),\n-                    device.getProductName())) {\n+            if (SupportedUsbModemsInfo.isSupported(device.getVendorId(), device.getProductId(), device.getProductName())) {\n                 String usbPort = device.getUsbPort();\n                 UsbModemDevice usbModem;\n                 if (this.usbModems.get(usbPort) == null) {\n@@ -248,13 +233,13 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                     usbModem.addBlockDev(deviceNode);\n                     logger.debug(\"activate() :: Adding block resource: {} for {}\", deviceNode, device.getUsbPort());\n                 }\n+\n                 this.usbModems.put(device.getUsbPort(), usbModem);\n             }\n         }\n     }\n \n     protected void deactivate(ComponentContext componentContext) {\n-\n         if (this.executor != null) {\n             logger.debug(\"deactivate() :: Terminating {} Thread ...\", TOGGLE_MODEM_TASK_NAME);\n             this.executor.shutdownNow();\n@@ -264,9 +249,11 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                 Thread.currentThread().interrupt();\n                 logger.warn(\"Interrupted\", e);\n             }\n-            logger.info(\"deactivate() :: {} Thread terminated? - {}\", TOGGLE_MODEM_TASK_NAME,\n-                    this.executor.isTerminated());\n+            logger.info(\"deactivate() :: {} Thread terminated? - {}\",\n+                        TOGGLE_MODEM_TASK_NAME,\n+                        this.executor.isTerminated());\n         }\n+\n         this.ctx = null;\n     }\n \n@@ -283,6 +270,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n         }\n \n         // if we have a link we at least of network local access\n+\n         List<NetInterface<? extends NetInterfaceAddress>> netInterfaces = getNetworkInterfaces();\n         for (NetInterface<? extends NetInterfaceAddress> netInterface : netInterfaces) {\n             if (netInterface.getType() == NetInterfaceType.ETHERNET) {\n@@ -294,8 +282,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n \n         // TODO - should be know if we are CONNECTED_SITE for wifi?\n \n-        LoopbackInterfaceImpl<? extends NetInterfaceAddress> netInterface = (LoopbackInterfaceImpl<? extends NetInterfaceAddress>) getNetworkInterface(\n-                \"lo\");\n+        LoopbackInterfaceImpl<? extends NetInterfaceAddress> netInterface = (LoopbackInterfaceImpl<? extends NetInterfaceAddress>) getNetworkInterface(\"lo\");\n         if (netInterface.isUp()) {\n             return NetworkState.CONNECTED_LOCAL;\n         }\n@@ -318,7 +305,6 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n     @Override\n     public List<String> getAllNetworkInterfaceNames() throws KuraException {\n         waitActivated();\n-\n         ArrayList<String> interfaceNames = new ArrayList<>();\n         List<String> allInterfaceNames = this.linuxNetworkUtil.getAllInterfaceNames();\n         if (allInterfaceNames != null) {\n@@ -326,6 +312,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n         }\n \n         // include non-connected ppp interfaces and usb port numbers for non-configured modems\n+\n         Iterator<String> it = this.addedModems.iterator();\n         while (it.hasNext()) {\n             String modemId = it.next();\n@@ -336,10 +323,10 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n             } else {\n                 // for Serial modem\n                 if (this.serialModem != null) {\n-                    pppPort = getModemPppPort(this.serialModem);\n+                    pppPort = getModemPppPort(\n+                        this.serialModem);\n                 }\n             }\n-\n             if (pppPort != null) {\n                 if (!interfaceNames.contains(pppPort)) {\n                     interfaceNames.add(pppPort);\n@@ -349,18 +336,14 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                 interfaceNames.add(modemId);\n             }\n         }\n-\n         return interfaceNames;\n     }\n \n     @Override\n     public List<NetInterface<? extends NetInterfaceAddress>> getNetworkInterfaces() throws KuraException {\n         logger.trace(\"getNetworkInterfaces()\");\n-\n         waitActivated();\n-\n         List<NetInterface<? extends NetInterfaceAddress>> netInterfaces = new ArrayList<>();\n-\n         List<String> interfaceNames = getAllNetworkInterfaceNames();\n         for (String interfaceName : interfaceNames) {\n             try {\n@@ -374,6 +357,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n         }\n \n         // Return an entry for non-connected modems (those w/o a ppp interface)\n+\n         Iterator<String> it = this.addedModems.iterator();\n         while (it.hasNext()) {\n             String modemId = it.next();\n@@ -392,7 +376,6 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                         netInterfaces.remove(netInterface);\n                     }\n                 }\n-\n                 if (addModem) {\n                     netInterfaces.add(getModemInterface(usbModem.getUsbPort(), false, usbModem));\n                 }\n@@ -404,10 +387,8 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                     for (NetInterface<?> netInterface : netInterfaces) {\n                         String iface = netInterface.getName();\n                         if (iface != null && iface.startsWith(\"ppp\")) {\n-                            ModemInterface<ModemInterfaceAddress> pppModemInterface = getModemInterface(iface, false,\n-                                    this.serialModem);\n-                            ModemInterface<ModemInterfaceAddress> serialModemInterface = getModemInterface(\n-                                    this.serialModem.getProductName(), false, this.serialModem);\n+                            ModemInterface<ModemInterfaceAddress> pppModemInterface = getModemInterface(iface, false, this.serialModem);\n+                            ModemInterface<ModemInterfaceAddress> serialModemInterface = getModemInterface(this.serialModem.getProductName(), false, this.serialModem);\n                             if (pppModemInterface != null && serialModemInterface != null) {\n                                 String pppModel = pppModemInterface.getModel();\n                                 String serialModel = serialModemInterface.getModel();\n@@ -419,8 +400,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                         }\n                     }\n                     if (addModem) {\n-                        netInterfaces\n-                                .add(getModemInterface(this.serialModem.getProductName(), false, this.serialModem));\n+                        netInterfaces.add(getModemInterface(this.serialModem.getProductName(), false, this.serialModem));\n                     }\n                 }\n             }\n@@ -435,6 +415,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n             if (usbDevice == null) {\n                 continue;\n             }\n+\n             final String interfaceUsbPort = usbDevice.getUsbPort();\n             if (interfaceUsbPort == null) {\n                 continue;\n@@ -483,10 +464,10 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n     }\n \n     public NetInterface<? extends NetInterfaceAddress> getNetworkInterface(String interfaceName) throws KuraException {\n-\n         waitActivated();\n \n         // ignore redpine vlan interface\n+\n         if (interfaceName.startsWith(\"rpine\")) {\n             logger.debug(\"Ignoring redpine vlan interface.\");\n             return null;\n@@ -510,15 +491,12 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n \n         NetInterfaceType type = ifconfig.getType();\n         boolean isUp = ifconfig.isUp();\n-        if (type == NetInterfaceType.UNKNOWN && this.serialModem != null\n-                && interfaceName.equals(this.serialModem.getProductName())) {\n+        if (type == NetInterfaceType.UNKNOWN && this.serialModem != null && interfaceName.equals(this.serialModem.getProductName())) {\n             // If the interface name is in a form such as \"1-3.4\", assume it is a modem\n             type = NetInterfaceType.MODEM;\n         }\n-\n         if (type == NetInterfaceType.ETHERNET) {\n             EthernetInterfaceImpl<NetInterfaceAddress> netInterface = new EthernetInterfaceImpl<>(interfaceName);\n-\n             Map<String, String> driver = this.linuxNetworkUtil.getEthernetDriver(interfaceName);\n             netInterface.setDriver(driver.get(\"name\"));\n             netInterface.setDriverVersion(driver.get(\"version\"));\n@@ -535,11 +513,9 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n             netInterface.setUsbDevice(getUsbDevice(interfaceName));\n             netInterface.setState(getState(interfaceName, isUp));\n             netInterface.setNetInterfaceAddresses(getNetInterfaceAddresses(interfaceName, type, isUp));\n-\n             return netInterface;\n         } else if (type == NetInterfaceType.LOOPBACK) {\n             LoopbackInterfaceImpl<NetInterfaceAddress> netInterface = new LoopbackInterfaceImpl<>(interfaceName);\n-\n             netInterface.setDriver(getDriver());\n             netInterface.setDriverVersion(getDriverVersion());\n             netInterface.setFirmwareVersion(getFirmwareVersion());\n@@ -554,67 +530,64 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n             netInterface.setUsbDevice(null);\n             netInterface.setState(getState(interfaceName, isUp));\n             netInterface.setNetInterfaceAddresses(getNetInterfaceAddresses(interfaceName, type, isUp));\n-\n             return netInterface;\n         } else if (type == NetInterfaceType.WIFI) {\n-            WifiInterfaceImpl<WifiInterfaceAddress> wifiInterface = new WifiInterfaceImpl<>(interfaceName);\n-\n-            Map<String, String> driver = this.linuxNetworkUtil.getEthernetDriver(interfaceName);\n-            wifiInterface.setDriver(driver.get(\"name\"));\n-            wifiInterface.setDriverVersion(driver.get(\"version\"));\n-            wifiInterface.setFirmwareVersion(driver.get(\"firmware\"));\n-            wifiInterface.setAutoConnect(LinuxNetworkUtil.isAutoConnect(interfaceName));\n-            wifiInterface.setHardwareAddress(ifconfig.getMacAddressBytes());\n-            wifiInterface.setMTU(ifconfig.getMtu());\n-            wifiInterface.setSupportsMulticast(ifconfig.isMulticast());\n+                   WifiInterfaceImpl<WifiInterfaceAddress> wifiInterface = new WifiInterfaceImpl<>(interfaceName);\n+                   Map<String, String> driver = this.linuxNetworkUtil.getEthernetDriver(interfaceName);\n+                   wifiInterface.setDriver(driver.get(\"name\"));\n+                   wifiInterface.setDriverVersion(driver.get(\"version\"));\n+                   wifiInterface.setFirmwareVersion(driver.get(\"firmware\"));\n+                   wifiInterface.setAutoConnect(LinuxNetworkUtil.isAutoConnect(interfaceName));\n+                   wifiInterface.setHardwareAddress(ifconfig.getMacAddressBytes());\n+                   wifiInterface.setMTU(ifconfig.getMtu());\n+                   wifiInterface.setSupportsMulticast(ifconfig.isMulticast());\n             // FIXME:MS Add linkUp in the AbstractNetInterface and populate accordingly\n             // wifiInterface.setLinkUp(LinuxNetworkUtil.isLinkUp(type, interfaceName));\n-            wifiInterface.setLoopback(false);\n-            wifiInterface.setPointToPoint(false);\n-            wifiInterface.setUp(isUp);\n-            wifiInterface.setVirtual(isVirtual());\n-            wifiInterface.setUsbDevice(getUsbDevice(interfaceName));\n-            wifiInterface.setState(getState(interfaceName, isUp));\n-            wifiInterface.setNetInterfaceAddresses(getWifiInterfaceAddresses(interfaceName, isUp));\n-\n-            try {\n-                wifiInterface.setCapabilities(this.linuxNetworkUtil.getWifiCapabilities(interfaceName));\n-            } catch (final Exception e) {\n-                logger.warn(\"failed to get capabilities for {}\", interfaceName);\n-                logger.debug(\"excepton\", e);\n-                wifiInterface.setCapabilities(EnumSet.noneOf(Capability.class));\n-            }\n-\n-            return wifiInterface;\n+                   wifiInterface.setLoopback(false);\n+                   wifiInterface.setPointToPoint(false);\n+                   wifiInterface.setUp(isUp);\n+                   wifiInterface.setVirtual(isVirtual());\n+                   wifiInterface.setUsbDevice(getUsbDevice(interfaceName));\n+                   wifiInterface.setState(getState(interfaceName, isUp));\n+                   wifiInterface.setNetInterfaceAddresses(getWifiInterfaceAddresses(interfaceName, isUp));\n+                   try {\n+                       wifiInterface.setCapabilities(this.linuxNetworkUtil.getWifiCapabilities(interfaceName));\n+                   } catch (final Exception e) {\n+                       logger.warn(\"failed to get capabilities for {}\", interfaceName);\n+                       logger.debug(\"excepton\", e);\n+                       wifiInterface.setCapabilities(EnumSet.noneOf(Capability.class));\n+                   }\n+                   return wifiInterface;\n         } else if (type == NetInterfaceType.MODEM) {\n-            ModemDevice modemDevice = null;\n-            if (interfaceName.startsWith(\"ppp\")) {\n+                   ModemDevice modemDevice = null;\n+                   if (interfaceName.startsWith(\"ppp\")) {\n                 // already connected - find the corresponding usb device\n-                String modemUsbPort = getModemUsbPort(interfaceName);\n-                if (modemUsbPort != null && !modemUsbPort.isEmpty()) {\n-                    modemDevice = this.usbModems.get(getModemUsbPort(interfaceName));\n-                }\n-                if (modemDevice == null && this.serialModem != null) {\n-                    modemDevice = this.serialModem;\n-                }\n-            } else if (interfaceName.matches(UNCONFIGURED_MODEM_REGEX)) {\n+                       String modemUsbPort = getModemUsbPort(interfaceName);\n+                       if (modemUsbPort != null && !modemUsbPort.isEmpty()) {\n+                           modemDevice = this.usbModems.get(getModemUsbPort(interfaceName));\n+                       }\n+                       if (modemDevice == null && this.serialModem != null) {\n+                           modemDevice = this.serialModem;\n+                       }\n+                   } else if (interfaceName.matches(UNCONFIGURED_MODEM_REGEX)) {\n                 // the interface name is in the form of a usb port i.e. \"1-3.4\"\n-                modemDevice = this.usbModems.get(interfaceName);\n-            } else if (this.serialModem != null && interfaceName.equals(this.serialModem.getProductName())) {\n-                modemDevice = this.serialModem;\n-            }\n-            return modemDevice != null ? getModemInterface(interfaceName, isUp, modemDevice) : null;\n-        } else {\n-            if (interfaceName.startsWith(\"can\")) {\n-                logger.trace(\"Ignoring CAN interface: {}\", interfaceName);\n-            } else if (interfaceName.startsWith(\"ppp\")) {\n-                logger.debug(\"Ignoring unconfigured ppp interface: {}\", interfaceName);\n-            } else {\n-                logger.debug(\"Unsupported network type - not adding to network devices: {} of type: {}\", interfaceName,\n-                        type.toString());\n-            }\n-            return null;\n-        }\n+                       modemDevice = this.usbModems.get(interfaceName);\n+                   } else if (this.serialModem != null && interfaceName.equals(this.serialModem.getProductName())) {\n+                              modemDevice = this.serialModem;\n+                   }\n+                   return modemDevice != null ? getModemInterface(interfaceName, isUp, modemDevice) : null;\n+               } else {\n+                   if (interfaceName.startsWith(\"can\")) {\n+                       logger.trace(\"Ignoring CAN interface: {}\", interfaceName);\n+                   } else if (interfaceName.startsWith(\"ppp\")) {\n+                       logger.debug(\"Ignoring unconfigured ppp interface: {}\", interfaceName);\n+                   } else {\n+                       logger.debug(\"Unsupported network type - not adding to network devices: {} of type: {}\",\n+                                    interfaceName,\n+                                    type.toString());\n+                   }\n+                   return null;\n+               }\n     }\n \n     @Override\n@@ -632,21 +605,16 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n             if (event.getProperty(UsbDeviceEvent.USB_EVENT_USB_PORT_PROPERTY) == null) {\n                 return;\n             }\n-            if (event.getProperty(UsbDeviceEvent.USB_EVENT_RESOURCE_PROPERTY) == null\n-                    || ((String) event.getProperty(UsbDeviceEvent.USB_EVENT_RESOURCE_PROPERTY)).startsWith(\"usb\")) {\n+            if (event.getProperty(UsbDeviceEvent.USB_EVENT_RESOURCE_PROPERTY) == null || ((String) event.getProperty(UsbDeviceEvent.USB_EVENT_RESOURCE_PROPERTY)).startsWith(\"usb\")) {\n                 return;\n             }\n-            if (event.getProperty(UsbDeviceEvent.USB_EVENT_DEVICE_TYPE_PROPERTY) == null\n-                    || ((UsbDeviceType) event.getProperty(UsbDeviceEvent.USB_EVENT_DEVICE_TYPE_PROPERTY))\n-                            .equals(UsbDeviceType.USB_NET_DEVICE)) {\n+            if (event.getProperty(UsbDeviceEvent.USB_EVENT_DEVICE_TYPE_PROPERTY) == null || ((UsbDeviceType) event.getProperty(UsbDeviceEvent.USB_EVENT_DEVICE_TYPE_PROPERTY)).equals(UsbDeviceType.USB_NET_DEVICE)) {\n                 return;\n             }\n \n             // do we care?\n-            final SupportedUsbModemInfo modemInfo = SupportedUsbModemsInfo.getModem(\n-                    (String) event.getProperty(UsbDeviceEvent.USB_EVENT_VENDOR_ID_PROPERTY),\n-                    (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_ID_PROPERTY),\n-                    (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_NAME_PROPERTY));\n+\n+            final SupportedUsbModemInfo modemInfo = SupportedUsbModemsInfo.getModem((String) event.getProperty(UsbDeviceEvent.USB_EVENT_VENDOR_ID_PROPERTY), (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_ID_PROPERTY), (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_NAME_PROPERTY));\n             if (modemInfo != null) {\n                 // Found one - see if we have some info for it.\n                 // Also check if we are getting more devices than expected.\n@@ -662,44 +630,34 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                     }\n                 }\n \n-                UsbModemDevice usbModem = this.usbModems\n-                        .get(event.getProperty(UsbDeviceEvent.USB_EVENT_USB_PORT_PROPERTY));\n-\n+                UsbModemDevice usbModem = this.usbModems.get(event.getProperty(UsbDeviceEvent.USB_EVENT_USB_PORT_PROPERTY));\n                 boolean createNewUsbModemDevice = false;\n                 if (usbModem == null) {\n                     logger.debug(\"handleEvent() :: Modem not found. Create one\");\n                     createNewUsbModemDevice = true;\n                 } else if (modemInfo.getNumTtyDevs() > 0 && modemInfo.getNumBlockDevs() > 0) {\n-                    if (usbModem.getTtyDevs().size() >= modemInfo.getNumTtyDevs()\n-                            && usbModem.getBlockDevs().size() >= modemInfo.getNumBlockDevs()) {\n+                    if (usbModem.getTtyDevs().size() >= modemInfo.getNumTtyDevs() && usbModem.getBlockDevs().size() >= modemInfo.getNumBlockDevs()) {\n                         logger.debug(\"handleEvent() :: Found modem with too many resources: {}. Create a new one\",\n-                                usbModem);\n+                                     usbModem);\n                         createNewUsbModemDevice = true;\n                     }\n-                } else if (modemInfo.getNumTtyDevs() > 0 && usbModem.getTtyDevs().size() >= modemInfo.getNumTtyDevs()\n-                        || modemInfo.getNumBlockDevs() > 0\n-                                && usbModem.getBlockDevs().size() >= modemInfo.getNumBlockDevs()) {\n-                    logger.debug(\"handleEvent() :: Found modem with too many resources: {}. Create a new one\",\n-                            usbModem);\n-                    createNewUsbModemDevice = true;\n+                } else if (modemInfo.getNumTtyDevs() > 0 && usbModem.getTtyDevs().size() >= modemInfo.getNumTtyDevs() || modemInfo.getNumBlockDevs() > 0 && usbModem.getBlockDevs().size() >= modemInfo.getNumBlockDevs()) {\n+                           logger.debug(\"handleEvent() :: Found modem with too many resources: {}. Create a new one\",\n+                                        usbModem);\n+                           createNewUsbModemDevice = true;\n                 }\n-\n                 if (createNewUsbModemDevice) {\n-                    usbModem = new UsbModemDevice(\n-                            (String) event.getProperty(UsbDeviceEvent.USB_EVENT_VENDOR_ID_PROPERTY),\n-                            (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_ID_PROPERTY),\n-                            (String) event.getProperty(UsbDeviceEvent.USB_EVENT_MANUFACTURER_NAME_PROPERTY),\n-                            (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_NAME_PROPERTY),\n-                            (String) event.getProperty(UsbDeviceEvent.USB_EVENT_BUS_NUMBER_PROPERTY),\n-                            (String) event.getProperty(UsbDeviceEvent.USB_EVENT_DEVICE_PATH_PROPERTY));\n+                    usbModem = new UsbModemDevice((String) event.getProperty(UsbDeviceEvent.USB_EVENT_VENDOR_ID_PROPERTY), (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_ID_PROPERTY), (String) event.getProperty(UsbDeviceEvent.USB_EVENT_MANUFACTURER_NAME_PROPERTY), (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_NAME_PROPERTY), (String) event.getProperty(UsbDeviceEvent.USB_EVENT_BUS_NUMBER_PROPERTY), (String) event.getProperty(UsbDeviceEvent.USB_EVENT_DEVICE_PATH_PROPERTY));\n                 }\n \n                 String resource = (String) event.getProperty(UsbDeviceEvent.USB_EVENT_RESOURCE_PROPERTY);\n                 Integer interfaceNumber = (Integer) event.getProperty(UsbDeviceEvent.USB_EVENT_USB_INTERFACE_NUMBER);\n-                UsbDeviceType usbDeviceType = (UsbDeviceType) event\n-                        .getProperty(UsbDeviceEvent.USB_EVENT_DEVICE_TYPE_PROPERTY);\n-                logger.debug(\"handleEvent() :: Found resource: {} of type {} for: {}\", resource, usbDeviceType,\n-                        usbModem.getUsbPort());\n+                UsbDeviceType usbDeviceType = (UsbDeviceType) event.getProperty(UsbDeviceEvent.USB_EVENT_DEVICE_TYPE_PROPERTY);\n+                logger.debug(\"handleEvent() :: Found resource: {} of type {} for: {}\",\n+                             resource,\n+                             usbDeviceType,\n+                             usbModem.getUsbPort());\n+\n                 if (usbDeviceType.equals(UsbDeviceType.USB_TTY_DEVICE)) {\n                     usbModem.addTtyDev(resource, interfaceNumber);\n                 } else if (usbDeviceType.equals(UsbDeviceType.USB_BLOCK_DEVICE)) {\n@@ -710,17 +668,14 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n \n                 // At this point, we should have some modems - display them\n                 logger.info(\"handleEvent() :: Modified modem (Added resource): {}\", usbModem);\n-\n-                logger.debug(\"handleEvent() :: usbModem.getTtyDevs().size()={}, modemInfo.getNumTtyDevs()={}\",\n-                        usbModem.getTtyDevs().size(), modemInfo.getNumTtyDevs());\n-                logger.debug(\"handleEvent() :: usbModem.getBlockDevs().size()={}, modemInfo.getNumBlockDevs()={}\",\n-                        usbModem.getBlockDevs().size(), modemInfo.getNumBlockDevs());\n+                logger.debug(\"handleEvent() :: usbModem.getTtyDevs().size()={}, modemInfo.getNumTtyDevs()={}\", usbModem.getTtyDevs().size(), modemInfo.getNumTtyDevs());\n+                logger.debug(\"handleEvent() :: usbModem.getBlockDevs().size()={}, modemInfo.getNumBlockDevs()={}\", usbModem.getBlockDevs().size(), modemInfo.getNumBlockDevs());\n \n                 // Check for correct number of resources\n-                if (usbModem.getTtyDevs().size() == modemInfo.getNumTtyDevs()\n-                        && usbModem.getBlockDevs().size() == modemInfo.getNumBlockDevs()) {\n+\n+                if (usbModem.getTtyDevs().size() == modemInfo.getNumTtyDevs() && usbModem.getBlockDevs().size() == modemInfo.getNumBlockDevs()) {\n                     logger.info(\"handleEvent() :: posting ModemAddedEvent -- USB_EVENT_DEVICE_ADDED_TOPIC: {}\",\n-                            usbModem);\n+                                usbModem);\n                     this.eventAdmin.postEvent(new ModemAddedEvent(usbModem));\n                     this.addedModems.add(usbModem.getUsbPort());\n                 }\n@@ -738,25 +693,22 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n             }\n \n             // do we care?\n-            SupportedUsbModemInfo modemInfo = SupportedUsbModemsInfo.getModem(\n-                    (String) event.getProperty(UsbDeviceEvent.USB_EVENT_VENDOR_ID_PROPERTY),\n-                    (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_ID_PROPERTY),\n-                    (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_NAME_PROPERTY));\n+\n+            SupportedUsbModemInfo modemInfo = SupportedUsbModemsInfo.getModem((String) event.getProperty(UsbDeviceEvent.USB_EVENT_VENDOR_ID_PROPERTY), (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_ID_PROPERTY), (String) event.getProperty(UsbDeviceEvent.USB_EVENT_PRODUCT_NAME_PROPERTY));\n             if (modemInfo != null) {\n                 // found one - remove if it exists\n-                UsbModemDevice usbModem = this.usbModems\n-                        .remove(event.getProperty(UsbDeviceEvent.USB_EVENT_USB_PORT_PROPERTY));\n+                UsbModemDevice usbModem = this.usbModems.remove(event.getProperty(UsbDeviceEvent.USB_EVENT_USB_PORT_PROPERTY));\n                 if (usbModem != null) {\n                     logger.info(\"handleEvent() :: Removing modem: {}\", usbModem);\n                     this.addedModems.remove(usbModem.getUsbPort());\n-\n                     Map<String, String> properties = new HashMap<>();\n                     properties.put(UsbDeviceEvent.USB_EVENT_BUS_NUMBER_PROPERTY, usbModem.getUsbBusNumber());\n                     properties.put(UsbDeviceEvent.USB_EVENT_DEVICE_PATH_PROPERTY, usbModem.getUsbDevicePath());\n                     properties.put(UsbDeviceEvent.USB_EVENT_USB_PORT_PROPERTY, usbModem.getUsbPort());\n                     properties.put(UsbDeviceEvent.USB_EVENT_VENDOR_ID_PROPERTY, usbModem.getVendorId());\n                     properties.put(UsbDeviceEvent.USB_EVENT_PRODUCT_ID_PROPERTY, usbModem.getProductId());\n-                    properties.put(UsbDeviceEvent.USB_EVENT_MANUFACTURER_NAME_PROPERTY, usbModem.getManufacturerName());\n+                    properties.put(UsbDeviceEvent.USB_EVENT_MANUFACTURER_NAME_PROPERTY,\n+                                   usbModem.getManufacturerName());\n                     properties.put(UsbDeviceEvent.USB_EVENT_PRODUCT_NAME_PROPERTY, usbModem.getProductName());\n                     this.eventAdmin.postEvent(new ModemRemovedEvent(properties));\n                 }\n@@ -781,21 +733,20 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n         return \"unknown\";\n     }\n \n-    private ModemInterface<ModemInterfaceAddress> getModemInterface(String interfaceName, boolean isUp,\n-            ModemDevice modemDevice) throws KuraException {\n-\n+    private ModemInterface<ModemInterfaceAddress> getModemInterface(String interfaceName, boolean isUp, ModemDevice modemDevice) throws KuraException {\n         ModemInterfaceImpl<ModemInterfaceAddress> modemInterface = new ModemInterfaceImpl<>(interfaceName);\n-\n         modemInterface.setModemDevice(modemDevice);\n-        if (modemDevice instanceof UsbModemDevice) {\n \n+        if (modemDevice instanceof UsbModemDevice) {\n             UsbModemDevice usbModemDevice = (UsbModemDevice) modemDevice;\n             SupportedUsbModemInfo supportedUsbModemInfo = SupportedUsbModemsInfo.getModem(usbModemDevice.getVendorId(),\n-                    usbModemDevice.getProductId(), usbModemDevice.getProductName());\n+                usbModemDevice.getProductId(),\n+                    usbModemDevice.getProductName());\n             modemInterface.setTechnologyTypes(supportedUsbModemInfo.getTechnologyTypes());\n             modemInterface.setUsbDevice((UsbModemDevice) modemDevice);\n         }\n \n+\n         int pppNum = 0;\n         if (interfaceName.startsWith(\"ppp\")) {\n             pppNum = Integer.parseInt(interfaceName.substring(3));\n@@ -810,11 +761,11 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n         modemInterface.setDriverVersion(getDriverVersion());\n         modemInterface.setFirmwareVersion(getFirmwareVersion());\n         modemInterface.setSerialNumber(\"unknown\");\n-\n         modemInterface.setLoopback(false);\n         modemInterface.setPointToPoint(true);\n         modemInterface.setState(getState(interfaceName, isUp));\n         modemInterface.setHardwareAddress(new byte[] { 0, 0, 0, 0, 0, 0 });\n+\n         if (!interfaceName.matches(UNCONFIGURED_MODEM_REGEX)) {\n             LinuxIfconfig ifconfig = this.linuxNetworkUtil.getInterfaceConfiguration(interfaceName);\n             if (ifconfig != null) {\n@@ -822,17 +773,13 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                 modemInterface.setSupportsMulticast(ifconfig.isMulticast());\n             }\n         }\n-\n         modemInterface.setUp(isUp);\n         modemInterface.setVirtual(isVirtual());\n         modemInterface.setNetInterfaceAddresses(getModemInterfaceAddresses(interfaceName, isUp));\n-\n         return modemInterface;\n-\n     }\n \n-    private List<NetInterfaceAddress> getNetInterfaceAddresses(String interfaceName, NetInterfaceType type,\n-            boolean isUp) throws KuraException {\n+    private List<NetInterfaceAddress> getNetInterfaceAddresses(String interfaceName, NetInterfaceType type, boolean isUp) throws KuraException {\n         List<NetInterfaceAddress> netInterfaceAddresses = new ArrayList<>();\n         if (isUp) {\n             ConnectionInfo conInfo = new ConnectionInfoImpl(interfaceName);\n@@ -844,10 +791,10 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                     if (currentNetmask != null) {\n                         netInterfaceAddress.setAddress(IPAddress.parseHostAddress(ifconfig.getInetAddress()));\n                         netInterfaceAddress.setBroadcast(IPAddress.parseHostAddress(ifconfig.getInetBcast()));\n-\n                         netInterfaceAddress.setNetmask(IPAddress.parseHostAddress(currentNetmask));\n                         netInterfaceAddress.setNetworkPrefixLength(NetworkUtil.getNetmaskShortForm(currentNetmask));\n                         netInterfaceAddress.setGateway(conInfo.getGateway());\n+\n                         if (type == NetInterfaceType.MODEM) {\n                             netInterfaceAddress.setDnsServers(LinuxDns.getInstance().getPppDnServers());\n                         } else {\n@@ -863,8 +810,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n         return netInterfaceAddresses;\n     }\n \n-    private List<WifiInterfaceAddress> getWifiInterfaceAddresses(String interfaceName, boolean isUp)\n-            throws KuraException {\n+    private List<WifiInterfaceAddress> getWifiInterfaceAddresses(String interfaceName, boolean isUp) throws KuraException {\n         List<WifiInterfaceAddress> wifiInterfaceAddresses = new ArrayList<>();\n         if (isUp) {\n             ConnectionInfo conInfo = new ConnectionInfoImpl(interfaceName);\n@@ -881,18 +827,16 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                         wifiInterfaceAddress.setNetworkPrefixLength(NetworkUtil.getNetmaskShortForm(currentNetmask));\n                         wifiInterfaceAddress.setGateway(conInfo.getGateway());\n                         wifiInterfaceAddress.setDnsServers(conInfo.getDnsServers());\n-\n                         WifiMode wifiMode = this.linuxNetworkUtil.getWifiMode(interfaceName);\n                         wifiInterfaceAddress.setBitrate(this.linuxNetworkUtil.getWifiBitrate(interfaceName));\n                         wifiInterfaceAddress.setMode(wifiMode);\n \n                         // TODO - should this only be the AP we are connected to in client mode?\n+\n                         if (wifiMode == WifiMode.INFRA) {\n                             String currentSSID = this.linuxNetworkUtil.getSSID(interfaceName);\n-\n                             if (currentSSID != null) {\n                                 logger.debug(\"Adding access point SSID: {}\", currentSSID);\n-\n                                 WifiAccessPointImpl wifiAccessPoint = new WifiAccessPointImpl(currentSSID);\n \n                                 // FIXME: fill in other info\n@@ -905,7 +849,6 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                                 wifiAccessPoint.setRsnSecurity(EnumSet.allOf(WifiSecurity.class));\n                                 wifiAccessPoint.setStrength(1234);\n                                 wifiAccessPoint.setWpaSecurity(EnumSet.allOf(WifiSecurity.class));\n-\n                                 wifiInterfaceAddress.setWifiAccessPoint(wifiAccessPoint);\n                             }\n                         }\n@@ -915,12 +858,10 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                 throw new KuraException(KuraErrorCode.INTERNAL_ERROR, e);\n             }\n         }\n-\n         return wifiInterfaceAddresses;\n     }\n \n-    private List<ModemInterfaceAddress> getModemInterfaceAddresses(String interfaceName, boolean isUp)\n-            throws KuraException {\n+    private List<ModemInterfaceAddress> getModemInterfaceAddresses(String interfaceName, boolean isUp) throws KuraException {\n         List<ModemInterfaceAddress> modemInterfaceAddresses = new ArrayList<>();\n         if (isUp) {\n             ConnectionInfo conInfo = new ConnectionInfoImpl(interfaceName);\n@@ -994,7 +935,6 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                 }\n             }\n         }\n-\n         return null;\n     }\n \n@@ -1002,6 +942,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n      * Given an interface name (e.g. 'ppp0'), look up the associated usb port\n      * using the ppp peers config files\n      */\n+\n     @Override\n     public String getModemUsbPort(String interfaceName) {\n         if (interfaceName != null) {\n@@ -1027,7 +968,6 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                 return interfaceName;\n             }\n         }\n-\n         return null;\n     }\n \n@@ -1036,16 +976,14 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n      *\n      * @throws KuraException\n      */\n+\n     @Override\n     public String getModemPppPort(ModemDevice modemDevice) throws KuraException {\n-\n         String deviceName = null;\n         String modemId = null;\n-\n         if (modemDevice instanceof UsbModemDevice) {\n             UsbModemDevice usbModem = (UsbModemDevice) modemDevice;\n-            SupportedUsbModemInfo modemInfo = SupportedUsbModemsInfo.getModem(usbModem.getVendorId(),\n-                    usbModem.getProductId(), usbModem.getProductName());\n+            SupportedUsbModemInfo modemInfo = SupportedUsbModemsInfo.getModem(usbModem.getVendorId(), usbModem.getProductId(), usbModem.getProductName());\n             deviceName = modemInfo.getDeviceName();\n             modemId = usbModem.getUsbPort();\n         } else if (modemDevice instanceof SerialModemDevice) {\n@@ -1055,6 +993,7 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n         }\n \n         // find a matching config file in the ppp peers directory\n+\n         File peersDir = new File(PPP_PEERS_DIR);\n         if (peersDir.isDirectory()) {\n             File[] peerFiles = peersDir.listFiles();\n@@ -1087,10 +1026,8 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n         return false;\n     }\n \n-    private boolean hasCorrectNumberOfResources(final SupportedUsbModemInfo modemInfo,\n-            final UsbModemDevice modemDevice) {\n-        return modemDevice.getTtyDevs().size() == modemInfo.getNumTtyDevs()\n-                && modemDevice.getBlockDevs().size() == modemInfo.getNumBlockDevs();\n+    private boolean hasCorrectNumberOfResources(final SupportedUsbModemInfo modemInfo, final UsbModemDevice modemDevice) {\n+        return modemDevice.getTtyDevs().size() == modemInfo.getNumTtyDevs() && modemDevice.getBlockDevs().size() == modemInfo.getNumBlockDevs();\n     }\n \n     private void waitActivated() {\n@@ -1116,18 +1053,14 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n \n         @Override\n         public void run() {\n-\n             final String threadName = Thread.currentThread().getName();\n             Thread.currentThread().setName(TOGGLE_MODEM_TASK_NAME);\n-\n             try {\n                 final UsbModemDevice modemDevice = NetworkServiceImpl.this.usbModems.get(this.usbPort);\n-\n                 if (modemDevice == null) {\n                     logger.info(\"ToggleModemTask :: modem is no longer attached, exiting\");\n                     return;\n                 }\n-\n                 if (hasCorrectNumberOfResources(this.modemInfo, modemDevice)) {\n                     logger.info(\"ToggleModemTask :: modem is ready, exiting\");\n                     return;\n@@ -1138,22 +1071,18 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n                 if (usbDeviceDrivers != null && !usbDeviceDrivers.isEmpty()) {\n                     modemDriver = usbDeviceDrivers.get(0);\n                 }\n-\n                 if (modemDriver == null) {\n                     return;\n                 }\n-\n                 logger.info(\"ToggleModemTask :: turning modem off ...\");\n                 modemDriver.disable();\n                 sleep(3000);\n                 logger.info(\"ToggleModemTask :: turning modem on ...\");\n                 modemDriver.enable();\n-\n                 logger.info(\"ToggleModemTask :: modem has been toggled ...\");\n \n                 // will check if the modem is ready at next iteration and toggles again if needed\n                 NetworkServiceImpl.this.executor.schedule(this, TOGGLE_MODEM_TASK_INTERVAL, TimeUnit.SECONDS);\n-\n             } catch (Exception e) {\n                 logger.error(\"toggleModem() :: failed to toggle modem \", e);\n                 NetworkServiceImpl.this.executor.schedule(this, TOGGLE_MODEM_TASK_INTERVAL, TimeUnit.SECONDS);\n@@ -1170,4 +1099,4 @@ public class NetworkServiceImpl implements NetworkService, EventHandler {\n             Thread.currentThread().interrupt();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 228
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
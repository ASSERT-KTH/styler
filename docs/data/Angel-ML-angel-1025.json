{
    "project_name": "Angel-ML-angel",
    "error_id": "1025",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Comment has incorrect indentation level 0, expected is 4, indentation should be the same level as line 51.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1025/RowUpdateInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1025/RowUpdateInfo.java\nindex f7a0808cd93..4ac695f9290 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1025/RowUpdateInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1025/RowUpdateInfo.java\n@@ -46,7 +46,8 @@ public class RowUpdateInfo {\n   }\n \n   public void init() {\n-    this.taskNum = 0;// MLContext.get().getLocalTaskNum();\n+    this.taskNum = 0;\n+// MLContext.get().getLocalTaskNum();\n     this.info = new short[this.rowNum * taskNum];\n     this.taskIndexToId = new short[taskNum];\n     this.taskIdToIndex = new Int2IntOpenHashMap();\n@@ -104,4 +105,4 @@ public class RowUpdateInfo {\n   public int getTaskNum() {\n     return taskNum;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1025/RowUpdateInfo.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1025/RowUpdateInfo.java\nindex f7a0808cd93..5ddea9757f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1025/RowUpdateInfo.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1025/RowUpdateInfo.java\n@@ -19,12 +19,12 @@ package com.tencent.angel.psagent.matrix.index;\n import it.unimi.dsi.fastutil.ints.Int2IntOpenHashMap;\n import org.apache.commons.logging.Log;\n import org.apache.commons.logging.LogFactory;\n-\n import java.util.Arrays;\n \n /**\n  * This class store the update clock info of every row and task at matrix oplog\n  */\n+\n public class RowUpdateInfo {\n \n   private static final Log LOG = LogFactory.getLog(RowUpdateInfo.class);\n@@ -50,12 +50,10 @@ public class RowUpdateInfo {\n     this.info = new short[this.rowNum * taskNum];\n     this.taskIndexToId = new short[taskNum];\n     this.taskIdToIndex = new Int2IntOpenHashMap();\n-\n     LOG.info(\"local task num=\" + taskNum);\n \n     int[] taskIds = new int[0];\n     Arrays.sort(taskIds);\n-\n     for (int i = 0; i < taskIds.length; i++) {\n       taskIndexToId[i] = (short) taskIds[i];\n       taskIdToIndex.put(taskIds[i], i);\n@@ -93,6 +91,7 @@ public class RowUpdateInfo {\n \n   public void setRowClockWithIndex(int rowId, int clock, int taskIndex) {\n     startIfNeed();\n+\n     int arrayIndex = getArrayIndex(rowId, taskIndex);\n     info[arrayIndex] = (short) clock;\n   }\n@@ -104,4 +103,5 @@ public class RowUpdateInfo {\n   public int getTaskNum() {\n     return taskNum;\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
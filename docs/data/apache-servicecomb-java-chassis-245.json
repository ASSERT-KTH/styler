{
    "project_name": "apache-servicecomb-java-chassis",
    "error_id": "245",
    "information": {
        "errors": [
            {
                "line": "113",
                "column": "8",
                "severity": "warning",
                "message": "',' is preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
            }
        ]
    },
    "source_code": "\n    Response response = Response.create(header.getStatusCode(), header.getReasonPhrase()\n        , defaultPrimitiveValue(body, type));\n    response.setHeaders(header.toMultiMap());\n\n    return response;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/245/HighwayCodec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/245/HighwayCodec.java\nindex ac2bb9615a7..266ad6001d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/245/HighwayCodec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler/245/HighwayCodec.java\n@@ -109,8 +109,8 @@ public final class HighwayCodec {\n     Object body = bodySchema\n         .deserialize(tcpData.getBodyBuffer().getBytes(), type);\n \n-    Response response = Response.create(header.getStatusCode(), header.getReasonPhrase()\n-        , defaultPrimitiveValue(body, type));\n+    Response response = Response.create(header.getStatusCode(), header.getReasonPhrase(),\n+        defaultPrimitiveValue(body, type));\n     response.setHeaders(header.toMultiMap());\n \n     return response;\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "113",
                    "column": "8",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/245/HighwayCodec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/245/HighwayCodec.java\nindex ac2bb9615a7..4d4109fed55 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/245/HighwayCodec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/intellij/245/HighwayCodec.java\n@@ -43,7 +43,7 @@ public final class HighwayCodec {\n   }\n \n   public static TcpOutputStream encodeRequest(long msgId, Invocation invocation,\n-      OperationProtobuf operationProtobuf) throws Exception {\n+                                              OperationProtobuf operationProtobuf) throws Exception {\n     // \u5199header\n     RequestHeader header = new RequestHeader();\n     header.setMsgType(MsgType.REQUEST);\n@@ -59,7 +59,7 @@ public final class HighwayCodec {\n   }\n \n   private static Map<String, Object> addPrimitiveTypeDefaultValues(Invocation invocation,\n-      Map<String, Object> swaggerArguments) {\n+                                                                   Map<String, Object> swaggerArguments) {\n     // proto buffer never serialize default values, put it back in provider\n     if (invocation.getOperationMeta().getSwaggerProducerOperation() != null && !invocation.isEdge()) {\n       List<Parameter> swaggerParameters = invocation.getOperationMeta().getSwaggerOperation()\n@@ -76,7 +76,7 @@ public final class HighwayCodec {\n   }\n \n   public static void decodeRequest(Invocation invocation, RequestHeader header, OperationProtobuf operationProtobuf,\n-      Buffer bodyBuffer) throws Exception {\n+                                   Buffer bodyBuffer) throws Exception {\n     RequestRootDeserializer<Object> requestDeserializer = operationProtobuf.getRequestRootDeserializer();\n     Map<String, Object> swaggerArguments = requestDeserializer.deserialize(bodyBuffer.getBytes());\n     addPrimitiveTypeDefaultValues(invocation, swaggerArguments);\n@@ -89,7 +89,7 @@ public final class HighwayCodec {\n   }\n \n   public static Buffer encodeResponse(long msgId, ResponseHeader header, ResponseRootSerializer bodySchema,\n-      Object body) throws Exception {\n+                                      Object body) throws Exception {\n     try (HighwayOutputStream os = new HighwayOutputStream(msgId)) {\n       os.write(header, bodySchema, body);\n       return os.getBuffer();\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "112",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/245/HighwayCodec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/245/HighwayCodec.java\nindex ac2bb9615a7..75382582a4e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/245/HighwayCodec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/naturalize/245/HighwayCodec.java\n@@ -60,7 +60,7 @@ public final class HighwayCodec {\n \n   private static Map<String, Object> addPrimitiveTypeDefaultValues(Invocation invocation,\n       Map<String, Object> swaggerArguments) {\n-    // proto buffer never serialize default values, put it back in provider\n+  // proto buffer never serialize default values, put it back in provider\n     if (invocation.getOperationMeta().getSwaggerProducerOperation() != null && !invocation.isEdge()) {\n       List<Parameter> swaggerParameters = invocation.getOperationMeta().getSwaggerOperation()\n           .getParameters();\n@@ -109,8 +109,7 @@ public final class HighwayCodec {\n     Object body = bodySchema\n         .deserialize(tcpData.getBodyBuffer().getBytes(), type);\n \n-    Response response = Response.create(header.getStatusCode(), header.getReasonPhrase()\n-        , defaultPrimitiveValue(body, type));\n+    Response response = Response.create(header.getStatusCode(), header.getReasonPhrase(), defaultPrimitiveValue(body, type));\n     response.setHeaders(header.toMultiMap());\n \n     return response;\n@@ -127,4 +126,4 @@ public final class HighwayCodec {\n     }\n     return body;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "113",
                    "column": "8",
                    "severity": "warning",
                    "message": "',' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/245/HighwayCodec.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/245/HighwayCodec.java\nindex ac2bb9615a7..266ad6001d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/errored/1/245/HighwayCodec.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-servicecomb-java-chassis/styler_three_grams/245/HighwayCodec.java\n@@ -109,8 +109,8 @@ public final class HighwayCodec {\n     Object body = bodySchema\n         .deserialize(tcpData.getBodyBuffer().getBytes(), type);\n \n-    Response response = Response.create(header.getStatusCode(), header.getReasonPhrase()\n-        , defaultPrimitiveValue(body, type));\n+    Response response = Response.create(header.getStatusCode(), header.getReasonPhrase(),\n+        defaultPrimitiveValue(body, type));\n     response.setHeaders(header.toMultiMap());\n \n     return response;\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
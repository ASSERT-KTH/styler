{
    "project_name": "fangjinuo-easyjson",
    "error_id": "53",
    "information": {
        "errors": [
            {
                "line": "151",
                "column": "27",
                "severity": "warning",
                "message": "',' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "    }\n\n    public PagingRequest<C,E> setCacheCount(Boolean cacheCount) {\n        this.cacheCount = cacheCount;\n        return this;\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/53/PagingRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler/53/PagingRequest.java\nindex 485bf5d4135..7381500f013 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/53/PagingRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler/53/PagingRequest.java\n@@ -148,7 +148,7 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         return cacheCount;\n     }\n \n-    public PagingRequest<C,E> setCacheCount(Boolean cacheCount) {\n+    public PagingRequest<C, E> setCacheCount(Boolean cacheCount) {\n         this.cacheCount = cacheCount;\n         return this;\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/53/PagingRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/intellij/53/PagingRequest.java\nindex 485bf5d4135..bc06a01bd4b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/53/PagingRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/intellij/53/PagingRequest.java\n@@ -148,7 +148,7 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         return cacheCount;\n     }\n \n-    public PagingRequest<C,E> setCacheCount(Boolean cacheCount) {\n+    public PagingRequest<C, E> setCacheCount(Boolean cacheCount) {\n         this.cacheCount = cacheCount;\n         return this;\n     }\n@@ -167,10 +167,8 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n     }\n \n     /**\n-     *\n      * @param useLastPageIfPageNoOut\n      * @return\n-     *\n      * @see #setUseLastPageIfPageOut(Boolean)\n      */\n     @Deprecated\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/53/PagingRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/naturalize/53/PagingRequest.java\nindex 485bf5d4135..b15a6865e23 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/53/PagingRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/naturalize/53/PagingRequest.java\n@@ -129,7 +129,7 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         setCtx(null);\n         if (clearResult) {\n             if (result != null) {\n-                result.setItems(Collects.<E>emptyArrayList());\n+                result.setItems(Collects.<E> emptyArrayList());\n             }\n         }\n         setCondition(null);\n@@ -148,7 +148,7 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         return cacheCount;\n     }\n \n-    public PagingRequest<C,E> setCacheCount(Boolean cacheCount) {\n+    public PagingRequest<C, E> setCacheCount(Boolean cacheCount) {\n         this.cacheCount = cacheCount;\n         return this;\n     }\n@@ -220,4 +220,4 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n     public boolean isPagingRequest() {\n         return true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/53/PagingRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/codebuff/53/PagingRequest.java\nindex 485bf5d4135..6b29dab80e7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/53/PagingRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/codebuff/53/PagingRequest.java\n@@ -14,7 +14,6 @@\n \n package com.jn.easyjson.tests.entity.struct;\n \n-\n import com.jn.easyjson.core.JSONBuilderProvider;\n import com.jn.easyjson.core.exclusion.IgnoreAnnotationExclusion;\n import com.jn.langx.util.collection.Collects;\n@@ -34,7 +33,6 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n     private Boolean useLastPageIfPageOut;\n     private C condition;\n     private PagingResult<E> result;\n-\n     private boolean subqueryPaging = false;\n     private String subqueryPagingStartFlag;\n     private String subqueryPagingEndFlag;\n@@ -43,6 +41,8 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n     /**\n      * Nothing to do, will not do query, the result is empty list\n      */\n+\n+\n     public boolean isEmptyRequest() {\n         return this.pageSize == 0;\n     }\n@@ -50,6 +50,7 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n     /**\n      * Get all matched records with out paging limit\n      */\n+\n     public boolean isGetAllRequest() {\n         return this.pageSize < 0 && pageNo == 1;\n     }\n@@ -135,7 +136,6 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         setCondition(null);\n     }\n \n-\n     public String getCountColumn() {\n         return countColumn;\n     }\n@@ -148,7 +148,7 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         return cacheCount;\n     }\n \n-    public PagingRequest<C,E> setCacheCount(Boolean cacheCount) {\n+    public PagingRequest<C, E> setCacheCount(Boolean cacheCount) {\n         this.cacheCount = cacheCount;\n         return this;\n     }\n@@ -173,12 +173,12 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n      *\n      * @see #setUseLastPageIfPageOut(Boolean)\n      */\n+\n     @Deprecated\n     public PagingRequest<C, E> setUseLastPageIfPageNoOut(Boolean useLastPageIfPageNoOut) {\n         return setUseLastPageIfPageOut(useLastPageIfPageNoOut);\n     }\n \n-\n     public String getSubqueryPagingStartFlag() {\n         return subqueryPagingStartFlag;\n     }\n@@ -206,7 +206,6 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         return this;\n     }\n \n-\n     public PagingRequest<C, E> setSubqueryPaging(String subqueryPagingStartFlag, String subqueryPagingEndFlag) {\n         return setSubqueryPaging(true).setSubqueryPagingStartFlag(subqueryPagingStartFlag).setSubqueryPagingEndFlag(subqueryPagingEndFlag);\n     }\n@@ -220,4 +219,4 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n     public boolean isPagingRequest() {\n         return true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/53/PagingRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_random/53/PagingRequest.java\nindex 485bf5d4135..7381500f013 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/53/PagingRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_random/53/PagingRequest.java\n@@ -148,7 +148,7 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         return cacheCount;\n     }\n \n-    public PagingRequest<C,E> setCacheCount(Boolean cacheCount) {\n+    public PagingRequest<C, E> setCacheCount(Boolean cacheCount) {\n         this.cacheCount = cacheCount;\n         return this;\n     }\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/53/PagingRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_three_grams/53/PagingRequest.java\nindex 485bf5d4135..7381500f013 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/errored/1/53/PagingRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/fangjinuo-easyjson/styler_three_grams/53/PagingRequest.java\n@@ -148,7 +148,7 @@ public class PagingRequest<C, E> extends SelectRequest<PagingRequest<C, E>, Pagi\n         return cacheCount;\n     }\n \n-    public PagingRequest<C,E> setCacheCount(Boolean cacheCount) {\n+    public PagingRequest<C, E> setCacheCount(Boolean cacheCount) {\n         this.cacheCount = cacheCount;\n         return this;\n     }\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": []
}
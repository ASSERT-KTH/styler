{
    "project_name": "IQSS-dataverse",
    "error_id": "78",
    "information": {
        "errors": [
            {
                "line": "27",
                "column": "1",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": " */\n@NamedQueries({\n\t@NamedQuery( name=\"DataverseFacet.removeByOwnerId\",\n\t\t\t\t query=\"DELETE FROM DataverseFacet f WHERE f.dataverse.id=:ownerId\"),\n    @NamedQuery( name=\"DataverseFacet.findByDataverseId\",\n                 query=\"select f from DataverseFacet f where f.dataverse.id = :dataverseId order by f.displayOrder\")",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "28",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/78/DataverseFacet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/78/DataverseFacet.java\nindex bfd465b8f54..33e9a1e9e38 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/78/DataverseFacet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/78/DataverseFacet.java\n@@ -24,7 +24,7 @@ import javax.persistence.Table;\n  * @author gdurand\n  */\n @NamedQueries({\n-\t@NamedQuery( name=\"DataverseFacet.removeByOwnerId\",\n+@NamedQuery( name=\"DataverseFacet.removeByOwnerId\",\n \t\t\t\t query=\"DELETE FROM DataverseFacet f WHERE f.dataverse.id=:ownerId\"),\n     @NamedQuery( name=\"DataverseFacet.findByDataverseId\",\n                  query=\"select f from DataverseFacet f where f.dataverse.id = :dataverseId order by f.displayOrder\")\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/78/DataverseFacet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/78/DataverseFacet.java\nindex bfd465b8f54..a7a2907088a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/78/DataverseFacet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/78/DataverseFacet.java\n@@ -20,90 +20,89 @@ import javax.persistence.NamedQuery;\n import javax.persistence.Table;\n \n /**\n- *\n  * @author gdurand\n  */\n @NamedQueries({\n-\t@NamedQuery( name=\"DataverseFacet.removeByOwnerId\",\n-\t\t\t\t query=\"DELETE FROM DataverseFacet f WHERE f.dataverse.id=:ownerId\"),\n-    @NamedQuery( name=\"DataverseFacet.findByDataverseId\",\n-                 query=\"select f from DataverseFacet f where f.dataverse.id = :dataverseId order by f.displayOrder\")\n+  @NamedQuery(name = \"DataverseFacet.removeByOwnerId\",\n+    query = \"DELETE FROM DataverseFacet f WHERE f.dataverse.id=:ownerId\"),\n+  @NamedQuery(name = \"DataverseFacet.findByDataverseId\",\n+    query = \"select f from DataverseFacet f where f.dataverse.id = :dataverseId order by f.displayOrder\")\n })\n \n @Entity\n-@Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"datasetfieldtype_id\")\n-\t\t, @Index(columnList=\"displayorder\")})\n+@Table(indexes = {@Index(columnList = \"dataverse_id\")\n+  , @Index(columnList = \"datasetfieldtype_id\")\n+  , @Index(columnList = \"displayorder\")})\n public class DataverseFacet implements Serializable {\n-    private static final long serialVersionUID = 1L;\n+  private static final long serialVersionUID = 1L;\n \n-    @Id\n-    @GeneratedValue(strategy = GenerationType.IDENTITY)\n-    private Long id;\n+  @Id\n+  @GeneratedValue(strategy = GenerationType.IDENTITY)\n+  private Long id;\n \n-    public Long getId() {\n-        return this.id;\n-    }\n+  public Long getId() {\n+    return this.id;\n+  }\n \n-    public void setId(Long id) {\n-        this.id = id;\n-    }\n+  public void setId(Long id) {\n+    this.id = id;\n+  }\n \n   @ManyToOne\n-  @JoinColumn(name=\"dataverse_id\")\n+  @JoinColumn(name = \"dataverse_id\")\n   private Dataverse dataverse;\n \n   @ManyToOne\n-  @JoinColumn(name=\"datasetfieldtype_id\")\n+  @JoinColumn(name = \"datasetfieldtype_id\")\n   private DatasetFieldType datasetFieldType;\n \n \n   private int displayOrder;\n \n-    public Dataverse getDataverse() {\n-        return dataverse;\n-    }\n-\n-    public void setDataverse(Dataverse dataverse) {\n-        this.dataverse = dataverse;\n-    }\n-\n-    public DatasetFieldType getDatasetFieldType() {\n-        return datasetFieldType;\n-    }\n-\n-    public void setDatasetFieldType(DatasetFieldType datasetFieldType) {\n-        this.datasetFieldType = datasetFieldType;\n-    }\n-\n-    public int getDisplayOrder() {\n-        return displayOrder;\n+  public Dataverse getDataverse() {\n+    return dataverse;\n+  }\n+\n+  public void setDataverse(Dataverse dataverse) {\n+    this.dataverse = dataverse;\n+  }\n+\n+  public DatasetFieldType getDatasetFieldType() {\n+    return datasetFieldType;\n+  }\n+\n+  public void setDatasetFieldType(DatasetFieldType datasetFieldType) {\n+    this.datasetFieldType = datasetFieldType;\n+  }\n+\n+  public int getDisplayOrder() {\n+    return displayOrder;\n+  }\n+\n+  public void setDisplayOrder(int displayOrder) {\n+    this.displayOrder = displayOrder;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    int hash = 0;\n+    hash += (this.id != null ? this.id.hashCode() : 0);\n+    return hash;\n+  }\n+\n+  @Override\n+  public boolean equals(Object object) {\n+    if (!(object instanceof DatasetFieldType)) {\n+      return false;\n     }\n+    DataverseFacet other = (DataverseFacet) object;\n+    return !(!Objects.equals(this.id, other.id) && (this.id == null || !this.id.equals(other.id)));\n+  }\n \n-    public void setDisplayOrder(int displayOrder) {\n-        this.displayOrder = displayOrder;\n-    } \n-  \n-    @Override\n-    public int hashCode() {\n-        int hash = 0;\n-        hash += (this.id != null ? this.id.hashCode() : 0);\n-        return hash;\n-    }\n+  @Override\n+  public String toString() {\n+    return \"edu.harvard.iq.dataverse.DataverseFacet[ id=\" + id + \" ]\";\n+  }\n \n-    @Override\n-    public boolean equals(Object object) {\n-        if (!(object instanceof DatasetFieldType)) {\n-            return false;\n-        }\n-        DataverseFacet other = (DataverseFacet) object;\n-        return !(!Objects.equals(this.id, other.id) && (this.id == null || !this.id.equals(other.id)));\n-    }\n-\n-    @Override\n-    public String toString() {\n-        return \"edu.harvard.iq.dataverse.DataverseFacet[ id=\" + id + \" ]\";\n-    }\n-    \n }\n \n",
            "diff_size": 82
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/78/DataverseFacet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/naturalize/78/DataverseFacet.java\nindex bfd465b8f54..9cf2254ed0f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/78/DataverseFacet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/naturalize/78/DataverseFacet.java\n@@ -24,16 +24,14 @@ import javax.persistence.Table;\n  * @author gdurand\n  */\n @NamedQueries({\n-\t@NamedQuery( name=\"DataverseFacet.removeByOwnerId\",\n-\t\t\t\t query=\"DELETE FROM DataverseFacet f WHERE f.dataverse.id=:ownerId\"),\n-    @NamedQuery( name=\"DataverseFacet.findByDataverseId\",\n+    @NamedQuery( name=\"DataverseFacet.removeByOwnerId\",\n+             query=\"DELETE FROM DataverseFacet f WHERE f.dataverse.id=:ownerId\"),\n+           @NamedQuery( name=\"DataverseFacet.findByDataverseId\",\n                  query=\"select f from DataverseFacet f where f.dataverse.id = :dataverseId order by f.displayOrder\")\n })\n \n @Entity\n-@Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"datasetfieldtype_id\")\n-\t\t, @Index(columnList=\"displayorder\")})\n+@Table(indexes = {@Index(columnList=\"dataverse_id\"), @Index(columnList=\"datasetfieldtype_id\"), @Index(columnList=\"displayorder\")})\n public class DataverseFacet implements Serializable {\n     private static final long serialVersionUID = 1L;\n \n@@ -49,16 +47,14 @@ public class DataverseFacet implements Serializable {\n         this.id = id;\n     }\n \n-  @ManyToOne\n+@ManyToOne\n   @JoinColumn(name=\"dataverse_id\")\n   private Dataverse dataverse;\n \n   @ManyToOne\n   @JoinColumn(name=\"datasetfieldtype_id\")\n   private DatasetFieldType datasetFieldType;\n-\n-\n-  private int displayOrder;\n+private int displayOrder;\n \n     public Dataverse getDataverse() {\n         return dataverse;\n@@ -105,5 +101,4 @@ public class DataverseFacet implements Serializable {\n         return \"edu.harvard.iq.dataverse.DataverseFacet[ id=\" + id + \" ]\";\n     }\n     \n-}\n-\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/78/DataverseFacet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/78/DataverseFacet.java\nindex bfd465b8f54..8331161d9e9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/78/DataverseFacet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/78/DataverseFacet.java\n@@ -23,18 +23,17 @@ import javax.persistence.Table;\n  *\n  * @author gdurand\n  */\n+\n+\n @NamedQueries({\n-\t@NamedQuery( name=\"DataverseFacet.removeByOwnerId\",\n-\t\t\t\t query=\"DELETE FROM DataverseFacet f WHERE f.dataverse.id=:ownerId\"),\n-    @NamedQuery( name=\"DataverseFacet.findByDataverseId\",\n-                 query=\"select f from DataverseFacet f where f.dataverse.id = :dataverseId order by f.displayOrder\")\n+    @NamedQuery(name = \"DataverseFacet.removeByOwnerId\", query = \"DELETE FROM DataverseFacet f WHERE f.dataverse.id=:ownerId\"),\n+    @NamedQuery(name = \"DataverseFacet.findByDataverseId\",\n+        query = \"select f from DataverseFacet f where f.dataverse.id = :dataverseId order by f.displayOrder\")\n })\n-\n @Entity\n-@Table(indexes = {@Index(columnList=\"dataverse_id\")\n-\t\t, @Index(columnList=\"datasetfieldtype_id\")\n-\t\t, @Index(columnList=\"displayorder\")})\n+@Table(indexes = {@Index(columnList = \"dataverse_id\"), @Index(columnList = \"datasetfieldtype_id\"), @Index(columnList = \"displayorder\")})\n public class DataverseFacet implements Serializable {\n+\n     private static final long serialVersionUID = 1L;\n \n     @Id\n@@ -49,16 +48,14 @@ public class DataverseFacet implements Serializable {\n         this.id = id;\n     }\n \n-  @ManyToOne\n-  @JoinColumn(name=\"dataverse_id\")\n-  private Dataverse dataverse;\n-\n-  @ManyToOne\n-  @JoinColumn(name=\"datasetfieldtype_id\")\n-  private DatasetFieldType datasetFieldType;\n+    @ManyToOne\n+    @JoinColumn(name = \"dataverse_id\")\n+    private Dataverse dataverse;\n \n-\n-  private int displayOrder;\n+    @ManyToOne\n+    @JoinColumn(name = \"datasetfieldtype_id\")\n+    private DatasetFieldType datasetFieldType;\n+    private int displayOrder;\n \n     public Dataverse getDataverse() {\n         return dataverse;\n@@ -82,8 +79,8 @@ public class DataverseFacet implements Serializable {\n \n     public void setDisplayOrder(int displayOrder) {\n         this.displayOrder = displayOrder;\n-    } \n-  \n+    }\n+\n     @Override\n     public int hashCode() {\n         int hash = 0;\n@@ -96,6 +93,7 @@ public class DataverseFacet implements Serializable {\n         if (!(object instanceof DatasetFieldType)) {\n             return false;\n         }\n+\n         DataverseFacet other = (DataverseFacet) object;\n         return !(!Objects.equals(this.id, other.id) && (this.id == null || !this.id.equals(other.id)));\n     }\n@@ -104,6 +102,5 @@ public class DataverseFacet implements Serializable {\n     public String toString() {\n         return \"edu.harvard.iq.dataverse.DataverseFacet[ id=\" + id + \" ]\";\n     }\n-    \n-}\n \n+}\n\\ No newline at end of file\n",
            "diff_size": 28
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "28",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/78/DataverseFacet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/78/DataverseFacet.java\nindex bfd465b8f54..33e9a1e9e38 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/78/DataverseFacet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/78/DataverseFacet.java\n@@ -24,7 +24,7 @@ import javax.persistence.Table;\n  * @author gdurand\n  */\n @NamedQueries({\n-\t@NamedQuery( name=\"DataverseFacet.removeByOwnerId\",\n+@NamedQuery( name=\"DataverseFacet.removeByOwnerId\",\n \t\t\t\t query=\"DELETE FROM DataverseFacet f WHERE f.dataverse.id=:ownerId\"),\n     @NamedQuery( name=\"DataverseFacet.findByDataverseId\",\n                  query=\"select f from DataverseFacet f where f.dataverse.id = :dataverseId order by f.displayOrder\")\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "29",
                    "column": "1",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/78/DataverseFacet.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/78/DataverseFacet.java\nindex bfd465b8f54..0d8e18f17d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/78/DataverseFacet.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/78/DataverseFacet.java\n@@ -24,7 +24,8 @@ import javax.persistence.Table;\n  * @author gdurand\n  */\n @NamedQueries({\n-\t@NamedQuery( name=\"DataverseFacet.removeByOwnerId\",\n+\n+@NamedQuery( name=\"DataverseFacet.removeByOwnerId\",\n \t\t\t\t query=\"DELETE FROM DataverseFacet f WHERE f.dataverse.id=:ownerId\"),\n     @NamedQuery( name=\"DataverseFacet.findByDataverseId\",\n                  query=\"select f from DataverseFacet f where f.dataverse.id = :dataverseId order by f.displayOrder\")\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "naturalize",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "styler_random",
        "styler_three_grams"
    ]
}
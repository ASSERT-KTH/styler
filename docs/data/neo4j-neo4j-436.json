{
    "project_name": "neo4j-neo4j",
    "error_id": "436",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/436/ProcessingStats.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/436/ProcessingStats.java\nindex 22a9f69dad0..649457c5f80 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/436/ProcessingStats.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/436/ProcessingStats.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.batchimport.stats;\n \n import org.neo4j.internal.batchimport.staging.Step;\n@@ -28,15 +29,15 @@ import org.neo4j.internal.batchimport.staging.Step;\n public class ProcessingStats extends GenericStatsProvider\n {\n     public ProcessingStats(\n-            long receivedBatches, long doneBatches,\n-            long totalProcessingTime, long average,\n-            long upstreamIdleTime, long downstreamIdleTime )\n+      long receivedBatches, long doneBatches,\n+      long totalProcessingTime, long average,\n+      long upstreamIdleTime, long downstreamIdleTime)\n     {\n-        add( Keys.received_batches, Stats.longStat( receivedBatches ) );\n-        add( Keys.done_batches, Stats.longStat( doneBatches ) );\n-        add( Keys.total_processing_time, Stats.longStat( totalProcessingTime ) );\n-        add( Keys.upstream_idle_time, Stats.longStat( upstreamIdleTime ) );\n-        add( Keys.downstream_idle_time, Stats.longStat( downstreamIdleTime ) );\n-        add( Keys.avg_processing_time, Stats.longStat( average ) );\n+        add(Keys.received_batches, Stats.longStat(receivedBatches));\n+        add(Keys.done_batches, Stats.longStat(doneBatches));\n+        add(Keys.total_processing_time, Stats.longStat(totalProcessingTime));\n+        add(Keys.upstream_idle_time, Stats.longStat(upstreamIdleTime));\n+        add(Keys.downstream_idle_time, Stats.longStat(downstreamIdleTime));\n+        add(Keys.avg_processing_time, Stats.longStat(average));\n     }\n }\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "206",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/206/HANewSnapshotFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/206/HANewSnapshotFunction.java\nindex fe293812c9a..8481c016d3c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/206/HANewSnapshotFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/206/HANewSnapshotFunction.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha.cluster;\n \n import java.io.Serializable;\n@@ -36,80 +37,79 @@ import static org.neo4j.kernel.ha.cluster.modeswitch.HighAvailabilityModeSwitche\n  * face of failures of instances in the cluster.\n  */\n public class HANewSnapshotFunction implements Serializable,\n-        BiFunction<Iterable<MemberIsAvailable>,MemberIsAvailable,Iterable<MemberIsAvailable>>\n+    BiFunction<Iterable<MemberIsAvailable>, MemberIsAvailable, Iterable<MemberIsAvailable>>\n {\n-    private static final long serialVersionUID = -8065136460852260734L;\n+  private static final long serialVersionUID = -8065136460852260734L;\n \n-    @Override\n-    public Iterable<MemberIsAvailable> apply( Iterable<MemberIsAvailable> previousSnapshot,\n-            final MemberIsAvailable newMessage )\n+  @Override\n+  public Iterable<MemberIsAvailable> apply(Iterable<MemberIsAvailable> previousSnapshot,\n+                                           final MemberIsAvailable newMessage)\n+  {\n+    /*\n+     * If a master event is received, all events that set to slave that instance should be removed. The same\n+     * should happen to existing master events and backup events, no matter which instance they are for\n+     */\n+    if (newMessage.getRole().equals(MASTER))\n     {\n-        /*\n-         * If a master event is received, all events that set to slave that instance should be removed. The same\n-         * should happen to existing master events and backup events, no matter which instance they are for\n-         */\n-        if ( newMessage.getRole().equals( MASTER ) )\n+      List<MemberIsAvailable> result = new LinkedList<>();\n+      for (MemberIsAvailable existing : previousSnapshot)\n+      {\n+        if ((isSlave(existing) && sameIds(newMessage, existing))\n+            || isMaster(existing))\n         {\n-            List<MemberIsAvailable> result = new LinkedList<>();\n-            for ( MemberIsAvailable existing : previousSnapshot )\n-            {\n-                if ( (isSlave( existing ) && sameIds( newMessage, existing ))\n-                        || isMaster( existing ) )\n-                {\n-                    continue;\n-                }\n-                result.add( existing );\n-            }\n-            result.add( newMessage );\n-            return result;\n+          continue;\n         }\n-        /*\n-         * If a slave event is received, all existing slave events for that instance should be removed. The same for\n-         * master and backup, which means remove all events for that instance.\n-         */\n-        else if ( newMessage.getRole().equals( SLAVE ) )\n+        result.add(existing);\n+      }\n+      result.add(newMessage);\n+      return result;\n+    }\n+    /*\n+     * If a slave event is received, all existing slave events for that instance should be removed. The same for\n+     * master and backup, which means remove all events for that instance.\n+     */\n+    else if (newMessage.getRole().equals(SLAVE))\n+    {\n+      List<MemberIsAvailable> result = new LinkedList<>();\n+      for (MemberIsAvailable existing : previousSnapshot)\n+      {\n+        if (sameIds(newMessage, existing))\n         {\n-            List<MemberIsAvailable> result = new LinkedList<>();\n-            for ( MemberIsAvailable existing : previousSnapshot )\n-            {\n-                if ( sameIds( newMessage, existing ) )\n-                {\n-                    continue;\n-                }\n-                result.add( existing );\n-            }\n-            result.add( newMessage );\n-            return result;\n+          continue;\n         }\n-        else if ( newMessage.getRole().equals( OnlineBackupKernelExtension.BACKUP ) )\n+        result.add(existing);\n+      }\n+      result.add(newMessage);\n+      return result;\n+    } else if (newMessage.getRole().equals(OnlineBackupKernelExtension.BACKUP))\n+    {\n+      List<MemberIsAvailable> result = new LinkedList<>();\n+      for (MemberIsAvailable existing : previousSnapshot)\n+      {\n+        if (existing.getRole().equals(OnlineBackupKernelExtension.BACKUP))\n         {\n-            List<MemberIsAvailable> result = new LinkedList<>();\n-            for ( MemberIsAvailable existing : previousSnapshot )\n-            {\n-                if ( existing.getRole().equals( OnlineBackupKernelExtension.BACKUP ) )\n-                {\n-                    continue;\n-                }\n-                result.add( existing );\n-            }\n-            result.add( newMessage );\n-            return result;\n+          continue;\n         }\n-        return Iterables.append( newMessage, previousSnapshot );\n+        result.add(existing);\n+      }\n+      result.add(newMessage);\n+      return result;\n     }\n+    return Iterables.append(newMessage, previousSnapshot);\n+  }\n \n-    private boolean isMaster( MemberIsAvailable existing )\n-    {\n-        return existing.getRole().equals( MASTER );\n-    }\n+  private boolean isMaster(MemberIsAvailable existing)\n+  {\n+    return existing.getRole().equals(MASTER);\n+  }\n \n-    private boolean isSlave( MemberIsAvailable existing )\n-    {\n-        return existing.getRole().equals( SLAVE );\n-    }\n+  private boolean isSlave(MemberIsAvailable existing)\n+  {\n+    return existing.getRole().equals(SLAVE);\n+  }\n \n-    private boolean sameIds( MemberIsAvailable newMessage, MemberIsAvailable existing )\n-    {\n-        return existing.getInstanceId().equals( newMessage.getInstanceId() );\n-    }\n+  private boolean sameIds(MemberIsAvailable newMessage, MemberIsAvailable existing)\n+  {\n+    return existing.getInstanceId().equals(newMessage.getInstanceId());\n+  }\n }\n",
            "diff_size": 94
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "54",
                    "column": "78",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/206/HANewSnapshotFunction.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/206/HANewSnapshotFunction.java\nindex fe293812c9a..be62f47e618 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/206/HANewSnapshotFunction.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/206/HANewSnapshotFunction.java\n@@ -35,14 +35,12 @@ import static org.neo4j.kernel.ha.cluster.modeswitch.HighAvailabilityModeSwitche\n  * Filters existing events in a snapshot while adding new ones. Ensures that the snapshot is consistent in the\n  * face of failures of instances in the cluster.\n  */\n-public class HANewSnapshotFunction implements Serializable,\n-        BiFunction<Iterable<MemberIsAvailable>,MemberIsAvailable,Iterable<MemberIsAvailable>>\n+public class HANewSnapshotFunction implements Serializable, BiFunction<Iterable<MemberIsAvailable>,MemberIsAvailable,Iterable<MemberIsAvailable>>\n {\n     private static final long serialVersionUID = -8065136460852260734L;\n \n     @Override\n-    public Iterable<MemberIsAvailable> apply( Iterable<MemberIsAvailable> previousSnapshot,\n-            final MemberIsAvailable newMessage )\n+    public Iterable<MemberIsAvailable> apply( Iterable<MemberIsAvailable> previousSnapshot, final MemberIsAvailable newMessage )\n     {\n         /*\n          * If a master event is received, all events that set to slave that instance should be removed. The same\n@@ -53,8 +51,7 @@ public class HANewSnapshotFunction implements Serializable,\n             List<MemberIsAvailable> result = new LinkedList<>();\n             for ( MemberIsAvailable existing : previousSnapshot )\n             {\n-                if ( (isSlave( existing ) && sameIds( newMessage, existing ))\n-                        || isMaster( existing ) )\n+                if ( (isSlave( existing ) && sameIds( newMessage, existing ))|| isMaster( existing ) )\n                 {\n                     continue;\n                 }\n@@ -95,7 +92,8 @@ public class HANewSnapshotFunction implements Serializable,\n             result.add( newMessage );\n             return result;\n         }\n-        return Iterables.append( newMessage, previousSnapshot );\n+\n+return Iterables.append( newMessage, previousSnapshot );\n     }\n \n     private boolean isMaster( MemberIsAvailable existing )\n@@ -112,4 +110,4 @@ public class HANewSnapshotFunction implements Serializable,\n     {\n         return existing.getInstanceId().equals( newMessage.getInstanceId() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
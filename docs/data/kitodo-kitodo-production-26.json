{
    "project_name": "kitodo-kitodo-production",
    "error_id": "26",
    "information": {
        "errors": [
            {
                "line": "45",
                "column": "5",
                "severity": "warning",
                "message": "'METHOD_DEF' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": "     *             an IOException\n     */\n    public CommandResult runCommand(String script) throws IOException {\n        if (Objects.isNull(script)) {\n            return null;\n        }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/26/CommandService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler/26/CommandService.java\nindex ea73bada35e..ce6732c4771 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/26/CommandService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler/26/CommandService.java\n@@ -42,6 +42,7 @@ public class CommandService {\n      * @throws IOException\n      *             an IOException\n      */\n+\n     public CommandResult runCommand(String script) throws IOException {\n         if (Objects.isNull(script)) {\n             return null;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/26/CommandService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/26/CommandService.java\nindex ea73bada35e..74ca2476933 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/26/CommandService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/intellij/26/CommandService.java\n@@ -30,17 +30,14 @@ public class CommandService {\n     private static final CommandService commandService = ServiceManager.getCommandService();\n     private final ArrayList<CommandResult> finishedCommandResults = new ArrayList<>();\n     private final Random random = new Random(1000000);\n+\n     /**\n      * Method executes a script string.\n      *\n-     * @param script\n-     *            Path to the script file with optional arguments (filepath\n-     *            parameter1 parameter2 ...).\n-     *\n+     * @param script Path to the script file with optional arguments (filepath\n+     *               parameter1 parameter2 ...).\n      * @return The CommandResult.\n-     *\n-     * @throws IOException\n-     *             an IOException\n+     * @throws IOException an IOException\n      */\n     public CommandResult runCommand(String script) throws IOException {\n         if (Objects.isNull(script)) {\n@@ -57,14 +54,10 @@ public class CommandService {\n     /**\n      * Method executes a script file with parameters.\n      *\n-     * @param scriptFile\n-     *            The script file.\n-     * @param parameter\n-     *            The script parameters.\n+     * @param scriptFile The script file.\n+     * @param parameter  The script parameters.\n      * @return The CommandResult.\n-     *\n-     * @throws IOException\n-     *             an IOException\n+     * @throws IOException an IOException\n      */\n     public CommandResult runCommand(File scriptFile, List<String> parameter) throws IOException {\n         if (Objects.isNull(scriptFile)) {\n@@ -77,13 +70,9 @@ public class CommandService {\n     /**\n      * Method executes a script file.\n      *\n-     * @param scriptFile\n-     *            The script file.\n-     *\n+     * @param scriptFile The script file.\n      * @return The CommandResult.\n-     *\n-     * @throws IOException\n-     *             an IOException\n+     * @throws IOException an IOException\n      */\n     public CommandResult runCommand(File scriptFile) throws IOException {\n         if (Objects.isNull(scriptFile)) {\n@@ -96,8 +85,7 @@ public class CommandService {\n     /**\n      * Method runs a specified script file asynchronously.\n      *\n-     * @param script\n-     *            The script.\n+     * @param script The script.\n      */\n     public void runCommandAsync(String script) {\n         if (Objects.nonNull(script)) {\n@@ -117,10 +105,8 @@ public class CommandService {\n     /**\n      * Method executes a script file with parameters asynchronously.\n      *\n-     * @param scriptFile\n-     *            The script file.\n-     * @param parameter\n-     *            The script parameters.\n+     * @param scriptFile The script file.\n+     * @param parameter  The script parameters.\n      */\n     public void runCommandAsync(File scriptFile, List<String> parameter) {\n         if (Objects.nonNull(scriptFile)) {\n@@ -132,8 +118,7 @@ public class CommandService {\n     /**\n      * Method executes a script file asynchronously.\n      *\n-     * @param scriptFile\n-     *            The script file.\n+     * @param scriptFile The script file.\n      */\n     public void runCommandAsync(File scriptFile) {\n         if (Objects.nonNull(scriptFile)) {\n@@ -144,8 +129,7 @@ public class CommandService {\n     /**\n      * Should be used to handle finished asynchronous script executions.\n      *\n-     * @param commandResult\n-     *            The finished command result.\n+     * @param commandResult The finished command result.\n      */\n     private void handleCommandResult(CommandResult commandResult) {\n \n@@ -157,12 +141,8 @@ public class CommandService {\n     /**\n      * Generates a String in the form of (filepath parameter1 parameter2 ...).\n      *\n-     * @param file\n-     *            The file.\n-     *\n-     * @param parameter\n-     *            The parameters.\n-     *\n+     * @param file      The file.\n+     * @param parameter The parameters.\n      * @return The String.\n      */\n     private String generateScriptString(File file, List<String> parameter) {\n",
            "diff_size": 37
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "45",
                    "column": "5",
                    "severity": "warning",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "151",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "153",
                    "column": "9",
                    "severity": "warning",
                    "message": "Comment has incorrect indentation level 8, expected is 4, indentation should be the same level as line 151.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/26/CommandService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/26/CommandService.java\nindex ea73bada35e..aaf34ab337e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/26/CommandService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/naturalize/26/CommandService.java\n@@ -148,8 +148,7 @@ public class CommandService {\n      *            The finished command result.\n      */\n     private void handleCommandResult(CommandResult commandResult) {\n-\n-        finishedCommandResults.add(commandResult);\n+    finishedCommandResults.add(commandResult);\n \n         // TODO add more result handling for frontend here\n     }\n@@ -181,4 +180,4 @@ public class CommandService {\n     public List<CommandResult> getFinishedCommandResults() {\n         return finishedCommandResults;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/26/CommandService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/26/CommandService.java\nindex ea73bada35e..21ad720f5ca 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/26/CommandService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/codebuff/26/CommandService.java\n@@ -13,20 +13,19 @@ package org.kitodo.production.services.command;\n \n import io.reactivex.Flowable;\n import io.reactivex.schedulers.Schedulers;\n-\n import java.io.File;\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.List;\n import java.util.Objects;\n import java.util.Random;\n-\n import org.kitodo.api.command.CommandInterface;\n import org.kitodo.api.command.CommandResult;\n import org.kitodo.production.services.ServiceManager;\n import org.kitodo.serviceloader.KitodoServiceLoader;\n \n public class CommandService {\n+\n     private static final CommandService commandService = ServiceManager.getCommandService();\n     private final ArrayList<CommandResult> finishedCommandResults = new ArrayList<>();\n     private final Random random = new Random(1000000);\n@@ -42,6 +41,8 @@ public class CommandService {\n      * @throws IOException\n      *             an IOException\n      */\n+\n+\n     public CommandResult runCommand(String script) throws IOException {\n         if (Objects.isNull(script)) {\n             return null;\n@@ -66,6 +67,8 @@ public class CommandService {\n      * @throws IOException\n      *             an IOException\n      */\n+\n+\n     public CommandResult runCommand(File scriptFile, List<String> parameter) throws IOException {\n         if (Objects.isNull(scriptFile)) {\n             return null;\n@@ -85,12 +88,13 @@ public class CommandService {\n      * @throws IOException\n      *             an IOException\n      */\n+\n+\n     public CommandResult runCommand(File scriptFile) throws IOException {\n         if (Objects.isNull(scriptFile)) {\n             return null;\n         }\n         return runCommand(scriptFile.getAbsolutePath());\n-\n     }\n \n     /**\n@@ -99,15 +103,13 @@ public class CommandService {\n      * @param script\n      *            The script.\n      */\n+\n+\n     public void runCommandAsync(String script) {\n         if (Objects.nonNull(script)) {\n             KitodoServiceLoader<CommandInterface> serviceLoader = new KitodoServiceLoader<>(CommandInterface.class);\n             CommandInterface commandInterface = serviceLoader.loadModule();\n-\n-            Flowable<CommandResult> source = Flowable.fromCallable(() ->\n-                commandInterface.runCommand(random.nextInt(), script)\n-            );\n-\n+            Flowable<CommandResult> source = Flowable.fromCallable(() -> commandInterface.runCommand(random.nextInt(), script));\n             Flowable<CommandResult> commandBackgroundWorker = source.subscribeOn(Schedulers.io());\n             Flowable<CommandResult> commandResultListener = commandBackgroundWorker.observeOn(Schedulers.single());\n             commandResultListener.subscribe(this::handleCommandResult);\n@@ -122,6 +124,8 @@ public class CommandService {\n      * @param parameter\n      *            The script parameters.\n      */\n+\n+\n     public void runCommandAsync(File scriptFile, List<String> parameter) {\n         if (Objects.nonNull(scriptFile)) {\n             String script = generateScriptString(scriptFile, parameter);\n@@ -135,6 +139,8 @@ public class CommandService {\n      * @param scriptFile\n      *            The script file.\n      */\n+\n+\n     public void runCommandAsync(File scriptFile) {\n         if (Objects.nonNull(scriptFile)) {\n             runCommandAsync(scriptFile.getAbsolutePath());\n@@ -147,8 +153,9 @@ public class CommandService {\n      * @param commandResult\n      *            The finished command result.\n      */\n-    private void handleCommandResult(CommandResult commandResult) {\n \n+\n+    private void handleCommandResult(CommandResult commandResult) {\n         finishedCommandResults.add(commandResult);\n \n         // TODO add more result handling for frontend here\n@@ -165,6 +172,8 @@ public class CommandService {\n      *\n      * @return The String.\n      */\n+\n+\n     private String generateScriptString(File file, List<String> parameter) {\n         String scriptString = file.getAbsolutePath();\n         if (Objects.nonNull(parameter)) {\n@@ -178,7 +187,9 @@ public class CommandService {\n      *\n      * @return The CommandResults.\n      */\n+\n+\n     public List<CommandResult> getFinishedCommandResults() {\n         return finishedCommandResults;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 29
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/26/CommandService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_random/26/CommandService.java\nindex ea73bada35e..ce6732c4771 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/26/CommandService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_random/26/CommandService.java\n@@ -42,6 +42,7 @@ public class CommandService {\n      * @throws IOException\n      *             an IOException\n      */\n+\n     public CommandResult runCommand(String script) throws IOException {\n         if (Objects.isNull(script)) {\n             return null;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/26/CommandService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_three_grams/26/CommandService.java\nindex ea73bada35e..ce6732c4771 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/errored/1/26/CommandService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/kitodo-kitodo-production/styler_three_grams/26/CommandService.java\n@@ -42,6 +42,7 @@ public class CommandService {\n      * @throws IOException\n      *             an IOException\n      */\n+\n     public CommandResult runCommand(String script) throws IOException {\n         if (Objects.isNull(script)) {\n             return null;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
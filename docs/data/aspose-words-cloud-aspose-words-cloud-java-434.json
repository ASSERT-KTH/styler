{
    "project_name": "aspose-words-cloud-aspose-words-cloud-java",
    "error_id": "434",
    "information": {
        "errors": [
            {
                "line": "307",
                "column": "28",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    Border border = (Border)o;\n    return\n        Objects.equals(this.borderType, border.borderType) &&\n        Objects.equals(this.color, border.color) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/434/Border.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/434/Border.java\nindex b24ce1fdb0d..3f253f1e2cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/434/Border.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/434/Border.java\n@@ -304,7 +304,7 @@ public class Border extends LinkElement {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    Border border = (Border)o;\n+    Border border = (Border) o;\n     return\n         Objects.equals(this.borderType, border.borderType) &&\n         Objects.equals(this.color, border.color) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/434/Border.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/434/Border.java\nindex b24ce1fdb0d..b59e8a48513 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/434/Border.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/434/Border.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -86,7 +89,7 @@ public class Border extends LinkElement {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< BorderTypeEnum > {\n+        public static class Adapter extends TypeAdapter<BorderTypeEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final BorderTypeEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -157,7 +160,7 @@ public class Border extends LinkElement {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< LineStyleEnum > {\n+        public static class Adapter extends TypeAdapter<LineStyleEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final LineStyleEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -188,6 +191,7 @@ public class Border extends LinkElement {\n \n     @SerializedName(\"Shadow\")\n     private Boolean shadow = null;\n+\n     public Border borderType(BorderTypeEnum borderType) {\n         this.borderType = borderType;\n         return this;\n@@ -195,8 +199,9 @@ public class Border extends LinkElement {\n \n     /**\n      * Gets or sets the border type.\n-    * @return borderType\n-    **/\n+     *\n+     * @return borderType\n+     **/\n     @ApiModelProperty(value = \"Gets or sets the border type.\")\n     public BorderTypeEnum getBorderType() {\n         return borderType;\n@@ -213,8 +218,9 @@ public class Border extends LinkElement {\n \n     /**\n      * Gets or sets the border color.\n-    * @return color\n-    **/\n+     *\n+     * @return color\n+     **/\n     @ApiModelProperty(value = \"Gets or sets the border color.\")\n     public XmlColor getColor() {\n         return color;\n@@ -231,8 +237,9 @@ public class Border extends LinkElement {\n \n     /**\n      * Gets or sets distance of the border from text or from the page edge in points.\n-    * @return distanceFromText\n-    **/\n+     *\n+     * @return distanceFromText\n+     **/\n     @ApiModelProperty(value = \"Gets or sets distance of the border from text or from the page edge in points.\")\n     public Double getDistanceFromText() {\n         return distanceFromText;\n@@ -249,8 +256,9 @@ public class Border extends LinkElement {\n \n     /**\n      * Gets or sets the border style.\n-    * @return lineStyle\n-    **/\n+     *\n+     * @return lineStyle\n+     **/\n     @ApiModelProperty(value = \"Gets or sets the border style.\")\n     public LineStyleEnum getLineStyle() {\n         return lineStyle;\n@@ -267,8 +275,9 @@ public class Border extends LinkElement {\n \n     /**\n      * Gets or sets the border width in points.\n-    * @return lineWidth\n-    **/\n+     *\n+     * @return lineWidth\n+     **/\n     @ApiModelProperty(value = \"Gets or sets the border width in points.\")\n     public Double getLineWidth() {\n         return lineWidth;\n@@ -285,8 +294,9 @@ public class Border extends LinkElement {\n \n     /**\n      * Gets or sets a value indicating whether the border has a shadow.\n-    * @return shadow\n-    **/\n+     *\n+     * @return shadow\n+     **/\n     @ApiModelProperty(value = \"Gets or sets a value indicating whether the border has a shadow.\")\n     public Boolean getShadow() {\n         return shadow;\n@@ -304,45 +314,45 @@ public class Border extends LinkElement {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    Border border = (Border)o;\n-    return\n-        Objects.equals(this.borderType, border.borderType) &&\n-        Objects.equals(this.color, border.color) &&\n-        Objects.equals(this.distanceFromText, border.distanceFromText) &&\n-        Objects.equals(this.lineStyle, border.lineStyle) &&\n-        Objects.equals(this.lineWidth, border.lineWidth) &&\n-        Objects.equals(this.shadow, border.shadow) &&\n-        super.equals(o);\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    return Objects.hash(borderType, color, distanceFromText, lineStyle, lineWidth, shadow, super.hashCode());\n-  }\n-\n-  @Override\n-  public String toString() {\n-    StringBuilder sb = new StringBuilder();\n-    sb.append(\"class Border {\\n\");\n-    sb.append(\"    \").append(toIndentedString(super.toString())).append(\"\\n\");\n-    sb.append(\"    borderType: \").append(toIndentedString(borderType)).append(\"\\n\");\n-    sb.append(\"    color: \").append(toIndentedString(color)).append(\"\\n\");\n-    sb.append(\"    distanceFromText: \").append(toIndentedString(distanceFromText)).append(\"\\n\");\n-    sb.append(\"    lineStyle: \").append(toIndentedString(lineStyle)).append(\"\\n\");\n-    sb.append(\"    lineWidth: \").append(toIndentedString(lineWidth)).append(\"\\n\");\n-    sb.append(\"    shadow: \").append(toIndentedString(shadow)).append(\"\\n\");\n-    sb.append(\"}\");\n-    return sb.toString();\n-  }\n-\n-  /**\n-   * Convert the given object to string with each line indented by 4 spaces\n-   * (except the first line).\n-   */\n-  private String toIndentedString(java.lang.Object o) {\n-    if (o == null) {\n-      return \"null\";\n+        Border border = (Border) o;\n+        return\n+            Objects.equals(this.borderType, border.borderType) &&\n+                Objects.equals(this.color, border.color) &&\n+                Objects.equals(this.distanceFromText, border.distanceFromText) &&\n+                Objects.equals(this.lineStyle, border.lineStyle) &&\n+                Objects.equals(this.lineWidth, border.lineWidth) &&\n+                Objects.equals(this.shadow, border.shadow) &&\n+                super.equals(o);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(borderType, color, distanceFromText, lineStyle, lineWidth, shadow, super.hashCode());\n+    }\n+\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"class Border {\\n\");\n+        sb.append(\"    \").append(toIndentedString(super.toString())).append(\"\\n\");\n+        sb.append(\"    borderType: \").append(toIndentedString(borderType)).append(\"\\n\");\n+        sb.append(\"    color: \").append(toIndentedString(color)).append(\"\\n\");\n+        sb.append(\"    distanceFromText: \").append(toIndentedString(distanceFromText)).append(\"\\n\");\n+        sb.append(\"    lineStyle: \").append(toIndentedString(lineStyle)).append(\"\\n\");\n+        sb.append(\"    lineWidth: \").append(toIndentedString(lineWidth)).append(\"\\n\");\n+        sb.append(\"    shadow: \").append(toIndentedString(shadow)).append(\"\\n\");\n+        sb.append(\"}\");\n+        return sb.toString();\n+    }\n+\n+    /**\n+     * Convert the given object to string with each line indented by 4 spaces\n+     * (except the first line).\n+     */\n+    private String toIndentedString(java.lang.Object o) {\n+        if (o == null) {\n+            return \"null\";\n+        }\n+        return o.toString().replace(\"\\n\", \"\\n    \");\n     }\n-    return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n }\n",
            "diff_size": 68
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/434/Border.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/434/Border.java\nindex b24ce1fdb0d..fc38ccf41d4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/434/Border.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/434/Border.java\n@@ -45,281 +45,339 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * Represents a border of an object.\n  */\n+\n+\n @ApiModel(description = \"Represents a border of an object.\")\n+\n public class Border extends LinkElement {\n     /**\n      * Gets or sets the border type.\n      */\n-    @JsonAdapter(BorderTypeEnum.Adapter.class)\n-    public enum BorderTypeEnum {\n-        BOTTOM(\"Bottom\"),\n-        LEFT(\"Left\"),\n-        RIGHT(\"Right\"),\n-        TOP(\"Top\"),\n-        HORIZONTAL(\"Horizontal\"),\n-        VERTICAL(\"Vertical\"),\n-        DIAGONALDOWN(\"DiagonalDown\"),\n-        DIAGONALUP(\"DiagonalUp\"),\n-        NONE(\"None\");\n-\n-        private String value;\n-\n-        BorderTypeEnum(String value) {\n-            this.value = value;\n-        }\n+  @JsonAdapter(BorderTypeEnum.Adapter.class)\n+  public enum BorderTypeEnum {\n+    BOTTOM(\"Bottom\"),\n \n-        public String getValue() {\n-            return value;\n-        }\n+    LEFT(\"Left\"),\n \n-        @Override\n-        public String toString() {\n-            return String.valueOf(value);\n-        }\n+    RIGHT(\"Right\"),\n \n-        public static BorderTypeEnum fromValue(String text) {\n-            for (BorderTypeEnum b : BorderTypeEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n-        }\n+    TOP(\"Top\"),\n+\n+    HORIZONTAL(\"Horizontal\"),\n+\n+    VERTICAL(\"Vertical\"),\n+\n+    DIAGONALDOWN(\"DiagonalDown\"),\n+\n+    DIAGONALUP(\"DiagonalUp\"),\n+\n+    NONE(\"None\");\n+\n+    private String value;\n+\n+    BorderTypeEnum(String value) {\n+      this.value = value;\n+    }\n+\n+    public String getValue() {\n+      return value;\n+    }\n+\n+    @Override\n+    public String toString() {\n+      return String.valueOf(value);\n+    }\n \n-        public static class Adapter extends TypeAdapter< BorderTypeEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final BorderTypeEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public BorderTypeEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return BorderTypeEnum.fromValue(String.valueOf(value));\n-            }\n+    public static BorderTypeEnum fromValue(String text) {\n+      for (BorderTypeEnum b : BorderTypeEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+          return b;\n         }\n+      }\n+      return null;\n+    }\n+\n+    public static class Adapter extends TypeAdapter<BorderTypeEnum> {\n+      @Override\n+      public void write(final JsonWriter jsonWriter, final BorderTypeEnum enumeration) throws IOException {\n+        jsonWriter.value(enumeration.getValue());\n+      }\n+\n+\n+      @Override\n+      public BorderTypeEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return BorderTypeEnum.fromValue(String.valueOf(value));\n+      }\n     }\n+  }\n \n     /**\n      * Gets or sets the border style.\n      */\n-    @JsonAdapter(LineStyleEnum.Adapter.class)\n-    public enum LineStyleEnum {\n-        NONE(\"None\"),\n-        SINGLE(\"Single\"),\n-        THICK(\"Thick\"),\n-        DOUBLE(\"Double\"),\n-        HAIRLINE(\"Hairline\"),\n-        DOT(\"Dot\"),\n-        DASHLARGEGAP(\"DashLargeGap\"),\n-        DOTDASH(\"DotDash\"),\n-        DOTDOTDASH(\"DotDotDash\"),\n-        TRIPLE(\"Triple\"),\n-        THINTHICKSMALLGAP(\"ThinThickSmallGap\"),\n-        THICKTHINSMALLGAP(\"ThickThinSmallGap\"),\n-        THINTHICKTHINSMALLGAP(\"ThinThickThinSmallGap\"),\n-        THINTHICKMEDIUMGAP(\"ThinThickMediumGap\"),\n-        THICKTHINMEDIUMGAP(\"ThickThinMediumGap\"),\n-        THINTHICKTHINMEDIUMGAP(\"ThinThickThinMediumGap\"),\n-        THINTHICKLARGEGAP(\"ThinThickLargeGap\"),\n-        THICKTHINLARGEGAP(\"ThickThinLargeGap\"),\n-        THINTHICKTHINLARGEGAP(\"ThinThickThinLargeGap\"),\n-        WAVE(\"Wave\"),\n-        DOUBLEWAVE(\"DoubleWave\"),\n-        DASHSMALLGAP(\"DashSmallGap\"),\n-        DASHDOTSTROKER(\"DashDotStroker\"),\n-        EMBOSS3D(\"Emboss3D\"),\n-        ENGRAVE3D(\"Engrave3D\"),\n-        OUTSET(\"Outset\"),\n-        INSET(\"Inset\");\n-\n-        private String value;\n-\n-        LineStyleEnum(String value) {\n-            this.value = value;\n-        }\n \n-        public String getValue() {\n-            return value;\n-        }\n \n-        @Override\n-        public String toString() {\n-            return String.valueOf(value);\n-        }\n+  @JsonAdapter(LineStyleEnum.Adapter.class)\n+  public enum LineStyleEnum {\n+    NONE(\"None\"),\n \n-        public static LineStyleEnum fromValue(String text) {\n-            for (LineStyleEnum b : LineStyleEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n-        }\n+    SINGLE(\"Single\"),\n \n-        public static class Adapter extends TypeAdapter< LineStyleEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final LineStyleEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public LineStyleEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return LineStyleEnum.fromValue(String.valueOf(value));\n-            }\n-        }\n+    THICK(\"Thick\"),\n+\n+    DOUBLE(\"Double\"),\n+\n+    HAIRLINE(\"Hairline\"),\n+\n+    DOT(\"Dot\"),\n+\n+    DASHLARGEGAP(\"DashLargeGap\"),\n+\n+    DOTDASH(\"DotDash\"),\n+\n+    DOTDOTDASH(\"DotDotDash\"),\n+\n+    TRIPLE(\"Triple\"),\n+\n+    THINTHICKSMALLGAP(\"ThinThickSmallGap\"),\n+\n+    THICKTHINSMALLGAP(\"ThickThinSmallGap\"),\n+\n+    THINTHICKTHINSMALLGAP(\"ThinThickThinSmallGap\"),\n+\n+    THINTHICKMEDIUMGAP(\"ThinThickMediumGap\"),\n+\n+    THICKTHINMEDIUMGAP(\"ThickThinMediumGap\"),\n+\n+    THINTHICKTHINMEDIUMGAP(\"ThinThickThinMediumGap\"),\n+\n+    THINTHICKLARGEGAP(\"ThinThickLargeGap\"),\n+\n+    THICKTHINLARGEGAP(\"ThickThinLargeGap\"),\n+\n+    THINTHICKTHINLARGEGAP(\"ThinThickThinLargeGap\"),\n+\n+    WAVE(\"Wave\"),\n+\n+    DOUBLEWAVE(\"DoubleWave\"),\n+\n+    DASHSMALLGAP(\"DashSmallGap\"),\n+\n+    DASHDOTSTROKER(\"DashDotStroker\"),\n+\n+    EMBOSS3D(\"Emboss3D\"),\n+\n+    ENGRAVE3D(\"Engrave3D\"),\n+\n+    OUTSET(\"Outset\"),\n+\n+    INSET(\"Inset\");\n+\n+    private String value;\n+\n+    LineStyleEnum(String value) {\n+      this.value = value;\n     }\n \n-    @SerializedName(\"BorderType\")\n-    private BorderTypeEnum borderType = null;\n+    public String getValue() {\n+      return value;\n+    }\n \n-    @SerializedName(\"Color\")\n-    private XmlColor color = null;\n+    @Override\n+    public String toString() {\n+      return String.valueOf(value);\n+    }\n \n-    @SerializedName(\"DistanceFromText\")\n-    private Double distanceFromText = null;\n+    public static LineStyleEnum fromValue(String text) {\n+      for (LineStyleEnum b : LineStyleEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+          return b;\n+        }\n+      }\n+      return null;\n+    }\n \n-    @SerializedName(\"LineStyle\")\n-    private LineStyleEnum lineStyle = null;\n+    public static class Adapter extends TypeAdapter<LineStyleEnum> {\n+      @Override\n+      public void write(final JsonWriter jsonWriter, final LineStyleEnum enumeration) throws IOException {\n+        jsonWriter.value(enumeration.getValue());\n+      }\n \n-    @SerializedName(\"LineWidth\")\n-    private Double lineWidth = null;\n \n-    @SerializedName(\"Shadow\")\n-    private Boolean shadow = null;\n-    public Border borderType(BorderTypeEnum borderType) {\n-        this.borderType = borderType;\n-        return this;\n+      @Override\n+      public LineStyleEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return LineStyleEnum.fromValue(String.valueOf(value));\n+      }\n     }\n+  }\n+\n+\n+  @SerializedName(\"BorderType\")\n+  private BorderTypeEnum borderType = null;\n+\n+  @SerializedName(\"Color\")\n+  private XmlColor color = null;\n+\n+  @SerializedName(\"DistanceFromText\")\n+  private Double distanceFromText = null;\n+\n+  @SerializedName(\"LineStyle\")\n+  private LineStyleEnum lineStyle = null;\n+\n+  @SerializedName(\"LineWidth\")\n+  private Double lineWidth = null;\n+\n+  @SerializedName(\"Shadow\")\n+  private Boolean shadow = null;\n+\n+  public Border borderType(BorderTypeEnum borderType) {\n+    this.borderType = borderType;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets the border type.\n     * @return borderType\n     **/\n-    @ApiModelProperty(value = \"Gets or sets the border type.\")\n-    public BorderTypeEnum getBorderType() {\n-        return borderType;\n-    }\n \n-    public void setBorderType(BorderTypeEnum borderType) {\n-        this.borderType = borderType;\n-    }\n \n-    public Border color(XmlColor color) {\n-        this.color = color;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets the border type.\")\n+  public BorderTypeEnum getBorderType() {\n+    return borderType;\n+  }\n+\n+  public void setBorderType(BorderTypeEnum borderType) {\n+    this.borderType = borderType;\n+  }\n+\n+  public Border color(XmlColor color) {\n+    this.color = color;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets the border color.\n     * @return color\n     **/\n-    @ApiModelProperty(value = \"Gets or sets the border color.\")\n-    public XmlColor getColor() {\n-        return color;\n-    }\n \n-    public void setColor(XmlColor color) {\n-        this.color = color;\n-    }\n \n-    public Border distanceFromText(Double distanceFromText) {\n-        this.distanceFromText = distanceFromText;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets the border color.\")\n+  public XmlColor getColor() {\n+    return color;\n+  }\n+\n+  public void setColor(XmlColor color) {\n+    this.color = color;\n+  }\n+\n+  public Border distanceFromText(Double distanceFromText) {\n+    this.distanceFromText = distanceFromText;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets distance of the border from text or from the page edge in points.\n     * @return distanceFromText\n     **/\n-    @ApiModelProperty(value = \"Gets or sets distance of the border from text or from the page edge in points.\")\n-    public Double getDistanceFromText() {\n-        return distanceFromText;\n-    }\n \n-    public void setDistanceFromText(Double distanceFromText) {\n-        this.distanceFromText = distanceFromText;\n-    }\n \n-    public Border lineStyle(LineStyleEnum lineStyle) {\n-        this.lineStyle = lineStyle;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets distance of the border from text or from the page edge in points.\")\n+  public Double getDistanceFromText() {\n+    return distanceFromText;\n+  }\n+\n+  public void setDistanceFromText(Double distanceFromText) {\n+    this.distanceFromText = distanceFromText;\n+  }\n+\n+  public Border lineStyle(LineStyleEnum lineStyle) {\n+    this.lineStyle = lineStyle;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets the border style.\n     * @return lineStyle\n     **/\n-    @ApiModelProperty(value = \"Gets or sets the border style.\")\n-    public LineStyleEnum getLineStyle() {\n-        return lineStyle;\n-    }\n \n-    public void setLineStyle(LineStyleEnum lineStyle) {\n-        this.lineStyle = lineStyle;\n-    }\n \n-    public Border lineWidth(Double lineWidth) {\n-        this.lineWidth = lineWidth;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets the border style.\")\n+  public LineStyleEnum getLineStyle() {\n+    return lineStyle;\n+  }\n+\n+  public void setLineStyle(LineStyleEnum lineStyle) {\n+    this.lineStyle = lineStyle;\n+  }\n+\n+  public Border lineWidth(Double lineWidth) {\n+    this.lineWidth = lineWidth;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets the border width in points.\n     * @return lineWidth\n     **/\n-    @ApiModelProperty(value = \"Gets or sets the border width in points.\")\n-    public Double getLineWidth() {\n-        return lineWidth;\n-    }\n \n-    public void setLineWidth(Double lineWidth) {\n-        this.lineWidth = lineWidth;\n-    }\n \n-    public Border shadow(Boolean shadow) {\n-        this.shadow = shadow;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets the border width in points.\")\n+  public Double getLineWidth() {\n+    return lineWidth;\n+  }\n+\n+  public void setLineWidth(Double lineWidth) {\n+    this.lineWidth = lineWidth;\n+  }\n+\n+  public Border shadow(Boolean shadow) {\n+    this.shadow = shadow;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets a value indicating whether the border has a shadow.\n     * @return shadow\n     **/\n-    @ApiModelProperty(value = \"Gets or sets a value indicating whether the border has a shadow.\")\n-    public Boolean getShadow() {\n-        return shadow;\n-    }\n \n-    public void setShadow(Boolean shadow) {\n-        this.shadow = shadow;\n+\n+  @ApiModelProperty(value = \"Gets or sets a value indicating whether the border has a shadow.\")\n+  public Boolean getShadow() {\n+    return shadow;\n+  }\n+\n+  public void setShadow(Boolean shadow) {\n+    this.shadow = shadow;\n+  }\n+\n+\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n     }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    Border border = (Border)o;\n-    return\n-        Objects.equals(this.borderType, border.borderType) &&\n-        Objects.equals(this.color, border.color) &&\n-        Objects.equals(this.distanceFromText, border.distanceFromText) &&\n-        Objects.equals(this.lineStyle, border.lineStyle) &&\n-        Objects.equals(this.lineWidth, border.lineWidth) &&\n-        Objects.equals(this.shadow, border.shadow) &&\n-        super.equals(o);\n+    Border border = (Border) o;\n+    return Objects.equals(this.borderType, border.borderType) &&\n+    Objects.equals(this.color, border.color) &&\n+    Objects.equals(this.distanceFromText, border.distanceFromText) &&\n+    Objects.equals(this.lineStyle, border.lineStyle) &&\n+    Objects.equals(this.lineWidth, border.lineWidth) &&\n+    Objects.equals(this.shadow, border.shadow) &&\n+    super.equals(o);\n   }\n \n+\n   @Override\n   public int hashCode() {\n     return Objects.hash(borderType, color, distanceFromText, lineStyle, lineWidth, shadow, super.hashCode());\n   }\n \n+\n   @Override\n   public String toString() {\n     StringBuilder sb = new StringBuilder();\n@@ -339,10 +397,12 @@ public class Border extends LinkElement {\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n+\n   private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n       return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 381
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/434/Border.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/434/Border.java\nindex b24ce1fdb0d..3f253f1e2cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/434/Border.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/434/Border.java\n@@ -304,7 +304,7 @@ public class Border extends LinkElement {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    Border border = (Border)o;\n+    Border border = (Border) o;\n     return\n         Objects.equals(this.borderType, border.borderType) &&\n         Objects.equals(this.color, border.color) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/434/Border.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/434/Border.java\nindex b24ce1fdb0d..3f253f1e2cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/434/Border.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/434/Border.java\n@@ -304,7 +304,7 @@ public class Border extends LinkElement {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    Border border = (Border)o;\n+    Border border = (Border) o;\n     return\n         Objects.equals(this.borderType, border.borderType) &&\n         Objects.equals(this.color, border.color) &&\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
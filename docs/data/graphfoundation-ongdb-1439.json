{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1439",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1439/Groups.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1439/Groups.java\nindex 514a8534dbe..91288d8f1c3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1439/Groups.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1439/Groups.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input;\n \n import java.util.ArrayList;\n@@ -32,71 +33,71 @@ import static java.util.Arrays.asList;\n  */\n public class Groups\n {\n-    static final int LOWEST_NONGLOBAL_ID = 1;\n+  static final int LOWEST_NONGLOBAL_ID = 1;\n \n-    private final Map<String,Group> byName = new HashMap<>();\n-    private final List<Group> byId = new ArrayList<>( asList( Group.GLOBAL ) );\n-    private int nextId = LOWEST_NONGLOBAL_ID;\n+  private final Map<String, Group> byName = new HashMap<>();\n+  private final List<Group> byId = new ArrayList<>(asList(Group.GLOBAL));\n+  private int nextId = LOWEST_NONGLOBAL_ID;\n \n-    /**\n-     * @param name group name or {@code null} for a {@link Group#GLOBAL global group}.\n-     * @return {@link Group} for the given name. If the group doesn't already exist it will be created\n-     * with a new id. If {@code name} is {@code null} then the {@link Group#GLOBAL global group} is returned.\n-     * This method also prevents mixing global and non-global groups, i.e. if first call is {@code null},\n-     * then consecutive calls have to specify {@code null} name as well. The same holds true for non-null values.\n-     */\n-    public synchronized Group getOrCreate( String name )\n+  /**\n+   * @param name group name or {@code null} for a {@link Group#GLOBAL global group}.\n+   * @return {@link Group} for the given name. If the group doesn't already exist it will be created\n+   * with a new id. If {@code name} is {@code null} then the {@link Group#GLOBAL global group} is returned.\n+   * This method also prevents mixing global and non-global groups, i.e. if first call is {@code null},\n+   * then consecutive calls have to specify {@code null} name as well. The same holds true for non-null values.\n+   */\n+  public synchronized Group getOrCreate(String name)\n+  {\n+    if (isGlobalGroup(name))\n     {\n-        if ( isGlobalGroup( name ) )\n-        {\n-            return Group.GLOBAL;\n-        }\n-\n-        Group group = byName.get( name );\n-        if ( group == null )\n-        {\n-            byName.put( name, group = new Group.Adapter( nextId++, name ) );\n-            byId.add( group );\n-        }\n-        return group;\n+      return Group.GLOBAL;\n     }\n \n-    private static boolean isGlobalGroup( String name )\n+    Group group = byName.get(name);\n+    if (group == null)\n     {\n-        return name == null || Group.GLOBAL.name().equals( name );\n+      byName.put(name, group = new Group.Adapter(nextId++, name));\n+      byId.add(group);\n     }\n+    return group;\n+  }\n \n-    public synchronized Group get( String name )\n-    {\n-        if ( isGlobalGroup( name ) )\n-        {\n-            return Group.GLOBAL;\n-        }\n+  private static boolean isGlobalGroup(String name)\n+  {\n+    return name == null || Group.GLOBAL.name().equals(name);\n+  }\n \n-        Group group = byName.get( name );\n-        if ( group == null )\n-        {\n-            throw new HeaderException( \"Group '\" + name + \"' not found. Available groups are: \" + groupNames() );\n-        }\n-        return group;\n-    }\n-\n-    public Group get( int id )\n+  public synchronized Group get(String name)\n+  {\n+    if (isGlobalGroup(name))\n     {\n-        if ( id < 0 || id >= byId.size() )\n-        {\n-            throw new HeaderException( \"Group with id \" + id + \" not found\" );\n-        }\n-        return byId.get( id );\n+      return Group.GLOBAL;\n     }\n \n-    private String groupNames()\n+    Group group = byName.get(name);\n+    if (group == null)\n     {\n-        return Arrays.toString( byName.keySet().toArray( new String[byName.keySet().size()] ) );\n+      throw new HeaderException(\"Group '\" + name + \"' not found. Available groups are: \" + groupNames());\n     }\n+    return group;\n+  }\n \n-    public int size()\n+  public Group get(int id)\n+  {\n+    if (id < 0 || id >= byId.size())\n     {\n-        return nextId;\n+      throw new HeaderException(\"Group with id \" + id + \" not found\");\n     }\n+    return byId.get(id);\n+  }\n+\n+  private String groupNames()\n+  {\n+    return Arrays.toString(byName.keySet().toArray(new String[byName.keySet().size()]));\n+  }\n+\n+  public int size()\n+  {\n+    return nextId;\n+  }\n }\n",
            "diff_size": 74
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1439/Groups.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1439/Groups.java\nindex 514a8534dbe..68350c575eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1439/Groups.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1439/Groups.java\n@@ -33,8 +33,7 @@ import static java.util.Arrays.asList;\n public class Groups\n {\n     static final int LOWEST_NONGLOBAL_ID = 1;\n-\n-    private final Map<String,Group> byName = new HashMap<>();\n+private final Map<String,Group> byName = new HashMap<>();\n     private final List<Group> byId = new ArrayList<>( asList( Group.GLOBAL ) );\n     private int nextId = LOWEST_NONGLOBAL_ID;\n \n@@ -58,7 +57,8 @@ public class Groups\n             byName.put( name, group = new Group.Adapter( nextId++, name ) );\n             byId.add( group );\n         }\n-        return group;\n+\n+return group;\n     }\n \n     private static boolean isGlobalGroup( String name )\n@@ -78,7 +78,8 @@ public class Groups\n         {\n             throw new HeaderException( \"Group '\" + name + \"' not found. Available groups are: \" + groupNames() );\n         }\n-        return group;\n+\n+return group;\n     }\n \n     public Group get( int id )\n@@ -87,7 +88,8 @@ public class Groups\n         {\n             throw new HeaderException( \"Group with id \" + id + \" not found\" );\n         }\n-        return byId.get( id );\n+\n+return byId.get( id );\n     }\n \n     private String groupNames()\n@@ -99,4 +101,4 @@ public class Groups\n     {\n         return nextId;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
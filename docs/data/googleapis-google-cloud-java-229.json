{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "229",
    "information": {
        "errors": [
            {
                "line": "65",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 111).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  public void testToAndFromPb() {\n    assertTrue(BaseTableDefinition.fromPb(VIEW_DEFINITION.toPb()) instanceof ViewDefinition);\n    compareViewDefinition(VIEW_DEFINITION, BaseTableDefinition.<ViewDefinition>fromPb(VIEW_DEFINITION.toPb()));\n  }\n\n  private void compareViewDefinition(ViewDefinition expected, ViewDefinition value) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/229/ViewDefinitionTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/229/ViewDefinitionTest.java\nindex 26e65d3a5d4..a3578fb4494 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/229/ViewDefinitionTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/229/ViewDefinitionTest.java\n@@ -62,7 +62,8 @@ public class ViewDefinitionTest {\n   @Test\n   public void testToAndFromPb() {\n     assertTrue(BaseTableDefinition.fromPb(VIEW_DEFINITION.toPb()) instanceof ViewDefinition);\n-    compareViewDefinition(VIEW_DEFINITION, BaseTableDefinition.<ViewDefinition>fromPb(VIEW_DEFINITION.toPb()));\n+    compareViewDefinition(VIEW_DEFINITION,\n+        BaseTableDefinition.<ViewDefinition>fromPb(VIEW_DEFINITION.toPb()));\n   }\n \n   private void compareViewDefinition(ViewDefinition expected, ViewDefinition value) {\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/229/ViewDefinitionTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/229/ViewDefinitionTest.java\nindex 26e65d3a5d4..bbb0087fc10 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/229/ViewDefinitionTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/229/ViewDefinitionTest.java\n@@ -33,7 +33,7 @@ public class ViewDefinitionTest {\n   private static final ViewDefinition VIEW_DEFINITION =\n       ViewDefinition.builder(VIEW_QUERY, USER_DEFINED_FUNCTIONS).build();\n \n-  @Test\n+@Test\n   public void testToBuilder() {\n     compareViewDefinition(VIEW_DEFINITION, VIEW_DEFINITION.toBuilder().build());\n     ViewDefinition viewDefinition = VIEW_DEFINITION.toBuilder()\n@@ -71,4 +71,4 @@ public class ViewDefinitionTest {\n     assertEquals(expected.userDefinedFunctions(), value.userDefinedFunctions());\n     assertEquals(expected.hashCode(), value.hashCode());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 167).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 123).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/229/ViewDefinitionTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/229/ViewDefinitionTest.java\nindex 26e65d3a5d4..713425789df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/229/ViewDefinitionTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/229/ViewDefinitionTest.java\n@@ -20,29 +20,22 @@ import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n \n import com.google.common.collect.ImmutableList;\n-\n import org.junit.Test;\n-\n import java.util.List;\n \n+\n public class ViewDefinitionTest {\n \n   private static final String VIEW_QUERY = \"VIEW QUERY\";\n-  private static final List<UserDefinedFunction> USER_DEFINED_FUNCTIONS =\n-      ImmutableList.of(UserDefinedFunction.inline(\"Function\"), UserDefinedFunction.fromUri(\"URI\"));\n-  private static final ViewDefinition VIEW_DEFINITION =\n-      ViewDefinition.builder(VIEW_QUERY, USER_DEFINED_FUNCTIONS).build();\n+  private static final List<UserDefinedFunction> USER_DEFINED_FUNCTIONS = ImmutableList.of(UserDefinedFunction.inline(\"Function\"), UserDefinedFunction.fromUri(\"URI\"));\n+  private static final ViewDefinition VIEW_DEFINITION = ViewDefinition.builder(VIEW_QUERY, USER_DEFINED_FUNCTIONS).build();\n \n   @Test\n   public void testToBuilder() {\n     compareViewDefinition(VIEW_DEFINITION, VIEW_DEFINITION.toBuilder().build());\n-    ViewDefinition viewDefinition = VIEW_DEFINITION.toBuilder()\n-        .query(\"NEW QUERY\")\n-        .build();\n+    ViewDefinition viewDefinition = VIEW_DEFINITION.toBuilder().query(\"NEW QUERY\").build();\n     assertEquals(\"NEW QUERY\", viewDefinition.query());\n-    viewDefinition = viewDefinition.toBuilder()\n-        .query(VIEW_QUERY)\n-        .build();\n+    viewDefinition = viewDefinition.toBuilder().query(VIEW_QUERY).build();\n     compareViewDefinition(VIEW_DEFINITION, viewDefinition);\n   }\n \n@@ -71,4 +64,4 @@ public class ViewDefinitionTest {\n     assertEquals(expected.userDefinedFunctions(), value.userDefinedFunctions());\n     assertEquals(expected.hashCode(), value.hashCode());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 14
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
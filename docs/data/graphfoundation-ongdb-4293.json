{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4293",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4293/SslSocketConnectorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4293/SslSocketConnectorFactory.java\nindex f24f9c67f06..5d6c47d4b85 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4293/SslSocketConnectorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4293/SslSocketConnectorFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.ssl;\n \n import org.eclipse.jetty.http.HttpVersion;\n@@ -39,68 +40,68 @@ import org.neo4j.ssl.SslPolicy;\n \n public class SslSocketConnectorFactory extends HttpConnectorFactory\n {\n-    private final Customizer requestCustomizer;\n+  private final Customizer requestCustomizer;\n \n-    public SslSocketConnectorFactory( Config config )\n-    {\n-        super( config );\n-        requestCustomizer = new HttpsRequestCustomizer( config );\n-    }\n+  public SslSocketConnectorFactory(Config config)\n+  {\n+    super(config);\n+    requestCustomizer = new HttpsRequestCustomizer(config);\n+  }\n+\n+  @Override\n+  protected HttpConfiguration createHttpConfig()\n+  {\n+    HttpConfiguration httpConfig = super.createHttpConfig();\n+    httpConfig.addCustomizer(requestCustomizer);\n+    return httpConfig;\n+  }\n+\n+  public ServerConnector createConnector(Server server, SslPolicy sslPolicy, ListenSocketAddress address,\n+                                         JettyThreadCalculator jettyThreadCalculator)\n+  {\n+    SslConnectionFactory sslConnectionFactory = createSslConnectionFactory(sslPolicy);\n+    return super.createConnector(server, address, jettyThreadCalculator, sslConnectionFactory, createHttpConnectionFactory());\n+  }\n+\n+  private SslConnectionFactory createSslConnectionFactory(SslPolicy sslPolicy)\n+  {\n+    SslContextFactory sslContextFactory = new SslContextFactory();\n+\n+    String password = UUID.randomUUID().toString();\n+    sslContextFactory.setKeyStore(sslPolicy.getKeyStore(password.toCharArray(), password.toCharArray()));\n+    sslContextFactory.setKeyStorePassword(password);\n+    sslContextFactory.setKeyManagerPassword(password);\n \n-    @Override\n-    protected HttpConfiguration createHttpConfig()\n+    List<String> ciphers = sslPolicy.getCipherSuites();\n+    if (ciphers != null)\n     {\n-        HttpConfiguration httpConfig = super.createHttpConfig();\n-        httpConfig.addCustomizer( requestCustomizer );\n-        return httpConfig;\n+      sslContextFactory.setIncludeCipherSuites(ciphers.toArray(new String[ciphers.size()]));\n+      sslContextFactory.setExcludeCipherSuites();\n     }\n \n-    public ServerConnector createConnector( Server server, SslPolicy sslPolicy, ListenSocketAddress address,\n-            JettyThreadCalculator jettyThreadCalculator )\n+    String[] protocols = sslPolicy.getTlsVersions();\n+    if (protocols != null)\n     {\n-        SslConnectionFactory sslConnectionFactory = createSslConnectionFactory( sslPolicy );\n-        return super.createConnector( server, address, jettyThreadCalculator, sslConnectionFactory, createHttpConnectionFactory() );\n+      sslContextFactory.setIncludeProtocols(protocols);\n+      sslContextFactory.setExcludeProtocols();\n     }\n \n-    private SslConnectionFactory createSslConnectionFactory( SslPolicy sslPolicy )\n+    switch (sslPolicy.getClientAuth())\n     {\n-        SslContextFactory sslContextFactory = new SslContextFactory();\n-\n-        String password = UUID.randomUUID().toString();\n-        sslContextFactory.setKeyStore( sslPolicy.getKeyStore( password.toCharArray(), password.toCharArray() ) );\n-        sslContextFactory.setKeyStorePassword( password );\n-        sslContextFactory.setKeyManagerPassword( password );\n-\n-        List<String> ciphers = sslPolicy.getCipherSuites();\n-        if ( ciphers != null )\n-        {\n-            sslContextFactory.setIncludeCipherSuites( ciphers.toArray( new String[ciphers.size()] ) );\n-            sslContextFactory.setExcludeCipherSuites();\n-        }\n-\n-        String[] protocols = sslPolicy.getTlsVersions();\n-        if ( protocols != null )\n-        {\n-            sslContextFactory.setIncludeProtocols( protocols );\n-            sslContextFactory.setExcludeProtocols();\n-        }\n-\n-        switch ( sslPolicy.getClientAuth() )\n-        {\n-        case REQUIRE:\n-            sslContextFactory.setNeedClientAuth( true );\n-            break;\n-        case OPTIONAL:\n-            sslContextFactory.setWantClientAuth( true );\n-            break;\n-        case NONE:\n-            sslContextFactory.setWantClientAuth( false );\n-            sslContextFactory.setNeedClientAuth( false );\n-            break;\n-        default:\n-            throw new IllegalArgumentException( \"Not supported: \" + sslPolicy.getClientAuth() );\n-        }\n-\n-        return new SslConnectionFactory( sslContextFactory, HttpVersion.HTTP_1_1.asString() );\n+      case REQUIRE:\n+        sslContextFactory.setNeedClientAuth(true);\n+        break;\n+      case OPTIONAL:\n+        sslContextFactory.setWantClientAuth(true);\n+        break;\n+      case NONE:\n+        sslContextFactory.setWantClientAuth(false);\n+        sslContextFactory.setNeedClientAuth(false);\n+        break;\n+      default:\n+        throw new IllegalArgumentException(\"Not supported: \" + sslPolicy.getClientAuth());\n     }\n+\n+    return new SslConnectionFactory(sslContextFactory, HttpVersion.HTTP_1_1.asString());\n+  }\n }\n",
            "diff_size": 82
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4293/SslSocketConnectorFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4293/SslSocketConnectorFactory.java\nindex f24f9c67f06..5c9b48799eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4293/SslSocketConnectorFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4293/SslSocketConnectorFactory.java\n@@ -36,7 +36,6 @@ import org.neo4j.server.web.HttpConnectorFactory;\n import org.neo4j.server.web.JettyThreadCalculator;\n import org.neo4j.ssl.SslPolicy;\n \n-\n public class SslSocketConnectorFactory extends HttpConnectorFactory\n {\n     private final Customizer requestCustomizer;\n@@ -65,8 +64,7 @@ public class SslSocketConnectorFactory extends HttpConnectorFactory\n     private SslConnectionFactory createSslConnectionFactory( SslPolicy sslPolicy )\n     {\n         SslContextFactory sslContextFactory = new SslContextFactory();\n-\n-        String password = UUID.randomUUID().toString();\n+String password = UUID.randomUUID().toString();\n         sslContextFactory.setKeyStore( sslPolicy.getKeyStore( password.toCharArray(), password.toCharArray() ) );\n         sslContextFactory.setKeyStorePassword( password );\n         sslContextFactory.setKeyManagerPassword( password );\n@@ -103,4 +101,4 @@ public class SslSocketConnectorFactory extends HttpConnectorFactory\n \n         return new SslConnectionFactory( sslContextFactory, HttpVersion.HTTP_1_1.asString() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
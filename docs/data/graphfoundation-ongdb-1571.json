{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1571",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1571/LogAppendEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1571/LogAppendEvent.java\nindex 56ee244d1d5..5f9476b3407 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1571/LogAppendEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1571/LogAppendEvent.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.tracing;\n \n /**\n@@ -25,64 +26,64 @@ package org.neo4j.kernel.impl.transaction.tracing;\n  */\n public interface LogAppendEvent extends LogForceEvents, AutoCloseable\n {\n-    class Empty implements LogAppendEvent\n+  class Empty implements LogAppendEvent\n+  {\n+    @Override\n+    public void close()\n     {\n-        @Override\n-        public void close()\n-        {\n-        }\n+    }\n \n-        @Override\n-        public void setLogRotated( boolean logRotated )\n-        {\n+    @Override\n+    public void setLogRotated(boolean logRotated)\n+    {\n \n-        }\n+    }\n \n-        @Override\n-        public LogRotateEvent beginLogRotate()\n-        {\n-            return LogRotateEvent.NULL;\n-        }\n+    @Override\n+    public LogRotateEvent beginLogRotate()\n+    {\n+      return LogRotateEvent.NULL;\n+    }\n \n-        @Override\n-        public SerializeTransactionEvent beginSerializeTransaction()\n-        {\n-            return SerializeTransactionEvent.NULL;\n-        }\n+    @Override\n+    public SerializeTransactionEvent beginSerializeTransaction()\n+    {\n+      return SerializeTransactionEvent.NULL;\n+    }\n \n-        @Override\n-        public LogForceWaitEvent beginLogForceWait()\n-        {\n-            return LogForceWaitEvent.NULL;\n-        }\n+    @Override\n+    public LogForceWaitEvent beginLogForceWait()\n+    {\n+      return LogForceWaitEvent.NULL;\n+    }\n \n-        @Override\n-        public LogForceEvent beginLogForce()\n-        {\n-            return LogForceEvent.NULL;\n-        }\n+    @Override\n+    public LogForceEvent beginLogForce()\n+    {\n+      return LogForceEvent.NULL;\n     }\n+  }\n \n-    LogAppendEvent NULL = new Empty();\n+  LogAppendEvent NULL = new Empty();\n \n-    /**\n-     * Mark the end of the process of appending a transaction to the transaction log.\n-     */\n-    @Override\n-    void close();\n+  /**\n+   * Mark the end of the process of appending a transaction to the transaction log.\n+   */\n+  @Override\n+  void close();\n \n-    /**\n-     * Note whether or not the log was rotated by the appending of this transaction to the log.\n-     */\n-    void setLogRotated( boolean logRotated );\n+  /**\n+   * Note whether or not the log was rotated by the appending of this transaction to the log.\n+   */\n+  void setLogRotated(boolean logRotated);\n \n-    /**\n-     * Begin a log rotation as part of this appending to the transaction log.\n-     */\n-    LogRotateEvent beginLogRotate();\n+  /**\n+   * Begin a log rotation as part of this appending to the transaction log.\n+   */\n+  LogRotateEvent beginLogRotate();\n \n-    /**\n-     * Begin serializing and writing out the commands for this transaction.\n-     */\n-    SerializeTransactionEvent beginSerializeTransaction();\n+  /**\n+   * Begin serializing and writing out the commands for this transaction.\n+   */\n+  SerializeTransactionEvent beginSerializeTransaction();\n }\n",
            "diff_size": 52
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1571/LogAppendEvent.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1571/LogAppendEvent.java\nindex 56ee244d1d5..47332988912 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1571/LogAppendEvent.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1571/LogAppendEvent.java\n@@ -35,8 +35,7 @@ public interface LogAppendEvent extends LogForceEvents, AutoCloseable\n         @Override\n         public void setLogRotated( boolean logRotated )\n         {\n-\n-        }\n+}\n \n         @Override\n         public LogRotateEvent beginLogRotate()\n@@ -85,4 +84,4 @@ public interface LogAppendEvent extends LogForceEvents, AutoCloseable\n      * Begin serializing and writing out the commands for this transaction.\n      */\n     SerializeTransactionEvent beginSerializeTransaction();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
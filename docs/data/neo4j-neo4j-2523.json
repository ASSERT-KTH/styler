{
    "project_name": "neo4j-neo4j",
    "error_id": "2523",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "65",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "139",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2523/LoggingLogFileMonitor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2523/LoggingLogFileMonitor.java\nindex c77658d5f2a..2ca8f461663 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2523/LoggingLogFileMonitor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2523/LoggingLogFileMonitor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log;\n \n import java.nio.file.Path;\n@@ -36,56 +37,55 @@ public class LoggingLogFileMonitor implements RecoveryMonitor, RecoveryStartInfo\n     private long lastTransactionRecovered;\n     private final Log log;\n \n-    public LoggingLogFileMonitor( Log log )\n+    public LoggingLogFileMonitor(Log log)\n     {\n         this.log = log;\n     }\n \n     @Override\n-    public void recoveryRequired( LogPosition startPosition )\n+    public void recoveryRequired(LogPosition startPosition)\n     {\n-        log.info( \"Recovery required from position \" + startPosition );\n+        log.info(\"Recovery required from position \" + startPosition);\n     }\n \n     @Override\n-    public void recoveryCompleted( int numberOfRecoveredTransactions, long recoveryTimeInMilliseconds )\n+    public void recoveryCompleted(int numberOfRecoveredTransactions, long recoveryTimeInMilliseconds)\n     {\n-        if ( numberOfRecoveredTransactions != 0 )\n+        if (numberOfRecoveredTransactions != 0)\n         {\n-            log.info( format( \"Recovery completed. %d transactions, first:%d, last:%d recovered, time spent: %s\", numberOfRecoveredTransactions,\n-                    firstTransactionRecovered, lastTransactionRecovered, duration( recoveryTimeInMilliseconds ) ) );\n-        }\n-        else\n+            log.info(format(\"Recovery completed. %d transactions, first:%d, last:%d recovered, time spent: %s\", numberOfRecoveredTransactions,\n+              firstTransactionRecovered, lastTransactionRecovered, duration(recoveryTimeInMilliseconds)));\n+        } else\n         {\n-            log.info( \"No recovery required\" );\n+            log.info(\"No recovery required\");\n         }\n     }\n \n     @Override\n-    public void failToRecoverTransactionsAfterCommit( Throwable t, LogEntryCommit commitEntry, LogPosition recoveryToPosition )\n+    public void failToRecoverTransactionsAfterCommit(Throwable t, LogEntryCommit commitEntry, LogPosition recoveryToPosition)\n     {\n-        log.warn( format( \"Fail to recover all transactions. Last recoverable transaction id:%d, committed \" +\n-                        \"at:%d. Any later transaction after %s are unreadable and will be truncated.\",\n-                commitEntry.getTxId(), commitEntry.getTimeWritten(), recoveryToPosition ), t );\n+        log.warn(format(\"Fail to recover all transactions. Last recoverable transaction id:%d, committed \" +\n+            \"at:%d. Any later transaction after %s are unreadable and will be truncated.\",\n+          commitEntry.getTxId(), commitEntry.getTimeWritten(), recoveryToPosition), t);\n     }\n \n     @Override\n-    public void failToRecoverTransactionsAfterPosition( Throwable t, LogPosition recoveryFromPosition )\n+    public void failToRecoverTransactionsAfterPosition(Throwable t, LogPosition recoveryFromPosition)\n     {\n-        log.warn( format( \"Fail to recover all transactions. Any later transactions after position %s are \" +\n-                \"unreadable and will be truncated.\", recoveryFromPosition ), t );\n+        log.warn(format(\"Fail to recover all transactions. Any later transactions after position %s are \" +\n+          \"unreadable and will be truncated.\", recoveryFromPosition), t);\n     }\n \n     @Override\n-    public void failToExtractInitialFileHeader( Exception e )\n+    public void failToExtractInitialFileHeader(Exception e)\n     {\n-        log.warn( \"Fail to read initial transaction log file header.\", e );\n+        log.warn(\"Fail to read initial transaction log file header.\", e);\n     }\n \n     @Override\n-    public void transactionRecovered( long txId )\n+    public void transactionRecovered(long txId)\n     {\n-        if ( firstTransactionRecovered == -1 )\n+        if (firstTransactionRecovered == -1)\n         {\n             firstTransactionRecovered = txId;\n         }\n@@ -93,41 +93,41 @@ public class LoggingLogFileMonitor implements RecoveryMonitor, RecoveryStartInfo\n     }\n \n     @Override\n-    public void noCommitsAfterLastCheckPoint( LogPosition logPosition )\n+    public void noCommitsAfterLastCheckPoint(LogPosition logPosition)\n     {\n-        log.info( format( \"No commits found after last check point (which is at %s)\",\n-                logPosition != null ? logPosition.toString() : \"<no log position given>\" ) );\n+        log.info(format(\"No commits found after last check point (which is at %s)\",\n+          logPosition != null ? logPosition.toString() : \"<no log position given>\"));\n     }\n \n     @Override\n-    public void commitsAfterLastCheckPoint( LogPosition logPosition, long firstTxIdAfterLastCheckPoint )\n+    public void commitsAfterLastCheckPoint(LogPosition logPosition, long firstTxIdAfterLastCheckPoint)\n     {\n-        log.info( format(\n-                \"Commits found after last check point (which is at %s). First txId after last checkpoint: %d \",\n-                logPosition, firstTxIdAfterLastCheckPoint ) );\n+        log.info(format(\n+          \"Commits found after last check point (which is at %s). First txId after last checkpoint: %d \",\n+          logPosition, firstTxIdAfterLastCheckPoint));\n     }\n \n     @Override\n     public void noCheckPointFound()\n     {\n-        log.info( \"No check point found in transaction log\" );\n+        log.info(\"No check point found in transaction log\");\n     }\n \n     @Override\n-    public void startRotation( long currentLogVersion )\n+    public void startRotation(long currentLogVersion)\n     {\n     }\n \n     @Override\n-    public void finishLogRotation( Path logFile, long logVersion, long lastTransactionId, long rotationMillis, long millisSinceLastRotation )\n+    public void finishLogRotation(Path logFile, long logVersion, long lastTransactionId, long rotationMillis, long millisSinceLastRotation)\n     {\n-        StringBuilder sb = new StringBuilder( \"Rotated to transaction log [\" );\n-        sb.append( logFile ).append( \"] version=\" ).append( logVersion ).append( \", last transaction in previous log=\" );\n-        sb.append( lastTransactionId ).append( \", rotation took \" ).append( rotationMillis ).append( \" millis\" );\n-        if ( millisSinceLastRotation > 0 )\n+        StringBuilder sb = new StringBuilder(\"Rotated to transaction log [\");\n+        sb.append(logFile).append(\"] version=\").append(logVersion).append(\", last transaction in previous log=\");\n+        sb.append(lastTransactionId).append(\", rotation took \").append(rotationMillis).append(\" millis\");\n+        if (millisSinceLastRotation > 0)\n         {\n-            sb.append( \", started after \" ).append( millisSinceLastRotation ).append( \" millis\" );\n+            sb.append(\", started after \").append(millisSinceLastRotation).append(\" millis\");\n         }\n-        log.info( sb.append( '.' ).toString() );\n+        log.info(sb.append('.').toString());\n     }\n }\n",
            "diff_size": 38
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
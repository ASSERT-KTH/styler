{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3714",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "107",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3714/FakeClock.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3714/FakeClock.java\nindex 91f646d82c8..a0e998837be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3714/FakeClock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3714/FakeClock.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.time;\n \n import java.time.Clock;\n@@ -33,89 +34,89 @@ import java.util.concurrent.atomic.AtomicLong;\n  */\n public class FakeClock extends SystemNanoClock\n {\n-    private AtomicLong nanoTime = new AtomicLong();\n-\n-    public FakeClock()\n-    {\n-    }\n-\n-    public FakeClock( long initialTime, TimeUnit unit )\n+  private AtomicLong nanoTime = new AtomicLong();\n+\n+  public FakeClock()\n+  {\n+  }\n+\n+  public FakeClock(long initialTime, TimeUnit unit)\n+  {\n+    forward(initialTime, unit);\n+  }\n+\n+  @Override\n+  public ZoneId getZone()\n+  {\n+    return ZoneOffset.UTC;\n+  }\n+\n+  @Override\n+  public Clock withZone(ZoneId zone)\n+  {\n+    return new WithZone(zone);\n+  }\n+\n+  @Override\n+  public Instant instant()\n+  {\n+    return Instant.ofEpochMilli(TimeUnit.NANOSECONDS.toMillis(nanoTime.get()));\n+  }\n+\n+  @Override\n+  public long nanos()\n+  {\n+    return nanoTime.get();\n+  }\n+\n+  @Override\n+  public long millis()\n+  {\n+    return TimeUnit.NANOSECONDS.toMillis(nanoTime.get());\n+  }\n+\n+  public FakeClock forward(Duration delta)\n+  {\n+    return forward(delta.toNanos(), TimeUnit.NANOSECONDS);\n+  }\n+\n+  public FakeClock forward(long delta, TimeUnit unit)\n+  {\n+    nanoTime.addAndGet(unit.toNanos(delta));\n+    return this;\n+  }\n+\n+  private class WithZone extends Clock\n+  {\n+    private final ZoneId zone;\n+\n+    WithZone(ZoneId zone)\n     {\n-        forward( initialTime, unit );\n+      this.zone = zone;\n     }\n \n     @Override\n     public ZoneId getZone()\n     {\n-        return ZoneOffset.UTC;\n-    }\n-\n-    @Override\n-    public Clock withZone( ZoneId zone )\n-    {\n-        return new WithZone( zone );\n-    }\n-\n-    @Override\n-    public Instant instant()\n-    {\n-        return Instant.ofEpochMilli( TimeUnit.NANOSECONDS.toMillis( nanoTime.get() ) );\n+      return zone;\n     }\n \n     @Override\n-    public long nanos()\n+    public Clock withZone(ZoneId zone)\n     {\n-        return nanoTime.get();\n+      return new WithZone(zone);\n     }\n \n     @Override\n     public long millis()\n     {\n-        return TimeUnit.NANOSECONDS.toMillis( nanoTime.get() );\n-    }\n-\n-    public FakeClock forward( Duration delta )\n-    {\n-        return forward( delta.toNanos(), TimeUnit.NANOSECONDS );\n+      return FakeClock.this.millis();\n     }\n \n-    public FakeClock forward( long delta, TimeUnit unit )\n-    {\n-        nanoTime.addAndGet( unit.toNanos( delta ) );\n-        return this;\n-    }\n-\n-    private class WithZone extends Clock\n+    @Override\n+    public Instant instant()\n     {\n-        private final ZoneId zone;\n-\n-        WithZone( ZoneId zone )\n-        {\n-            this.zone = zone;\n-        }\n-\n-        @Override\n-        public ZoneId getZone()\n-        {\n-            return zone;\n-        }\n-\n-        @Override\n-        public Clock withZone( ZoneId zone )\n-        {\n-            return new WithZone( zone );\n-        }\n-\n-        @Override\n-        public long millis()\n-        {\n-            return FakeClock.this.millis();\n-        }\n-\n-        @Override\n-        public Instant instant()\n-        {\n-            return FakeClock.this.instant();\n-        }\n+      return FakeClock.this.instant();\n     }\n+  }\n }\n",
            "diff_size": 118
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3714/FakeClock.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3714/FakeClock.java\nindex 91f646d82c8..a680a59b1ec 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3714/FakeClock.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3714/FakeClock.java\n@@ -118,4 +118,4 @@ public class FakeClock extends SystemNanoClock\n             return FakeClock.this.instant();\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
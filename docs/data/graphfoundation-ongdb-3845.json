{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3845",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3845/DurationBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3845/DurationBuilder.java\nindex 8ea53ca2b33..e2938db7d4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3845/DurationBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3845/DurationBuilder.java\n@@ -17,89 +17,90 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.values.storable;\n \n import org.neo4j.values.StructureBuilder;\n \n-abstract class DurationBuilder<Input, Result> implements StructureBuilder<Input,Result>\n+abstract class DurationBuilder<Input, Result> implements StructureBuilder<Input, Result>\n {\n-    private Input years;\n-    private Input months;\n-    private Input weeks;\n-    private Input days;\n-    private Input hours;\n-    private Input minutes;\n-    private Input seconds;\n-    private Input milliseconds;\n-    private Input microseconds;\n-    private Input nanoseconds;\n+  private Input years;\n+  private Input months;\n+  private Input weeks;\n+  private Input days;\n+  private Input hours;\n+  private Input minutes;\n+  private Input seconds;\n+  private Input milliseconds;\n+  private Input microseconds;\n+  private Input nanoseconds;\n \n-    @Override\n-    public final StructureBuilder<Input,Result> add( String field, Input value )\n+  @Override\n+  public final StructureBuilder<Input, Result> add(String field, Input value)\n+  {\n+    switch (field.toLowerCase())\n     {\n-        switch ( field.toLowerCase() )\n-        {\n-        case \"years\":\n-            this.years = value;\n-            break;\n-        case \"months\":\n-            this.months = value;\n-            break;\n-        case \"weeks\":\n-            this.weeks = value;\n-            break;\n-        case \"days\":\n-            this.days = value;\n-            break;\n-        case \"hours\":\n-            this.hours = value;\n-            break;\n-        case \"minutes\":\n-            this.minutes = value;\n-            break;\n-        case \"seconds\":\n-            this.seconds = value;\n-            break;\n-        case \"milliseconds\":\n-            this.milliseconds = value;\n-            break;\n-        case \"microseconds\":\n-            this.microseconds = value;\n-            break;\n-        case \"nanoseconds\":\n-            this.nanoseconds = value;\n-            break;\n-        default:\n-            throw new IllegalStateException( \"Unknown field: \" + field );\n-        }\n-        return this;\n+      case \"years\":\n+        this.years = value;\n+        break;\n+      case \"months\":\n+        this.months = value;\n+        break;\n+      case \"weeks\":\n+        this.weeks = value;\n+        break;\n+      case \"days\":\n+        this.days = value;\n+        break;\n+      case \"hours\":\n+        this.hours = value;\n+        break;\n+      case \"minutes\":\n+        this.minutes = value;\n+        break;\n+      case \"seconds\":\n+        this.seconds = value;\n+        break;\n+      case \"milliseconds\":\n+        this.milliseconds = value;\n+        break;\n+      case \"microseconds\":\n+        this.microseconds = value;\n+        break;\n+      case \"nanoseconds\":\n+        this.nanoseconds = value;\n+        break;\n+      default:\n+        throw new IllegalStateException(\"Unknown field: \" + field);\n     }\n+    return this;\n+  }\n \n-    @Override\n-    public final Result build()\n-    {\n-        return create(\n-                years,\n-                months,\n-                weeks,\n-                days,\n-                hours,\n-                minutes,\n-                seconds,\n-                milliseconds,\n-                microseconds,\n-                nanoseconds );\n-    }\n+  @Override\n+  public final Result build()\n+  {\n+    return create(\n+        years,\n+        months,\n+        weeks,\n+        days,\n+        hours,\n+        minutes,\n+        seconds,\n+        milliseconds,\n+        microseconds,\n+        nanoseconds);\n+  }\n \n-    abstract Result create(\n-            Input years,\n-            Input months,\n-            Input weeks,\n-            Input days,\n-            Input hours,\n-            Input minutes,\n-            Input seconds,\n-            Input milliseconds,\n-            Input microseconds,\n-            Input nanoseconds );\n+  abstract Result create(\n+      Input years,\n+      Input months,\n+      Input weeks,\n+      Input days,\n+      Input hours,\n+      Input minutes,\n+      Input seconds,\n+      Input milliseconds,\n+      Input microseconds,\n+      Input nanoseconds);\n }\n",
            "diff_size": 80
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3845/DurationBuilder.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3845/DurationBuilder.java\nindex 8ea53ca2b33..69b8c0ec342 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3845/DurationBuilder.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3845/DurationBuilder.java\n@@ -21,7 +21,7 @@ package org.neo4j.values.storable;\n \n import org.neo4j.values.StructureBuilder;\n \n-abstract class DurationBuilder<Input, Result> implements StructureBuilder<Input,Result>\n+abstract class DurationBuilder<Input,Result> implements StructureBuilder<Input,Result>\n {\n     private Input years;\n     private Input months;\n@@ -78,21 +78,10 @@ abstract class DurationBuilder<Input, Result> implements StructureBuilder<Input,\n     @Override\n     public final Result build()\n     {\n-        return create(\n-                years,\n-                months,\n-                weeks,\n-                days,\n-                hours,\n-                minutes,\n-                seconds,\n-                milliseconds,\n-                microseconds,\n-                nanoseconds );\n+        return create( years, months, weeks, days, hours, minutes, seconds, milliseconds, microseconds, nanoseconds );\n     }\n \n-    abstract Result create(\n-            Input years,\n+    abstract Result create( Input years,\n             Input months,\n             Input weeks,\n             Input days,\n@@ -102,4 +91,4 @@ abstract class DurationBuilder<Input, Result> implements StructureBuilder<Input,\n             Input milliseconds,\n             Input microseconds,\n             Input nanoseconds );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 15
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "bakdata-conquery",
    "error_id": "688",
    "information": {
        "errors": [
            {
                "line": "62",
                "column": "14",
                "severity": "warning",
                "message": "'{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": "\t\t\t\t\tdecision.estimateMemoryConsumptionBytes(),\n\t\t\t\t\t0\n\t\t\t){\n\t\t\t\t@Override\n\t\t\t\tpublic StringStore getType() {\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/688/NumberTypeGuesser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/688/NumberTypeGuesser.java\nindex 21ff32eaf4e..899c4908018 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/688/NumberTypeGuesser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/688/NumberTypeGuesser.java\n@@ -59,7 +59,7 @@ public class NumberTypeGuesser extends StringTypeGuesser {\n \t\t\t\t\tnull,\n \t\t\t\t\tdecision.estimateMemoryConsumptionBytes(),\n \t\t\t\t\t0\n-\t\t\t){\n+\t\t\t) {\n \t\t\t\t@Override\n \t\t\t\tpublic StringStore getType() {\n \n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "71",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "74",
                    "column": "9",
                    "severity": "warning",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "75",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/688/NumberTypeGuesser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/688/NumberTypeGuesser.java\nindex 21ff32eaf4e..e26ce769ba1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/688/NumberTypeGuesser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/688/NumberTypeGuesser.java\n@@ -21,62 +21,61 @@ import lombok.RequiredArgsConstructor;\n @RequiredArgsConstructor\n public class NumberTypeGuesser extends StringTypeGuesser {\n \n-\tprivate final StringParser p;\n-\tprivate final ParserConfig config;\n+    private final StringParser p;\n+    private final ParserConfig config;\n \n-\t@Override\n-\tpublic Guess createGuess() {\n-\t\t//check if the remaining strings are all numbers\n-\t\ttry {\n-\t\t\tRange<Integer> range = new IntegerRange(0, 0);\n-\t\t\tIntegerParser numberParser = new IntegerParser(config);\n-\t\t\tint[] intMap = new int[p.getStrings().size()];\n-\t\t\tArrays.fill(intMap, -1);\n-\t\t\tfor (Entry<String, Integer> e : p.getStrings().entrySet()) {\n-\t\t\t\tint intValue = Integer.parseInt(e.getKey());\n-\t\t\t\t//check that there are no leading zeroes that we would destroy\n-\t\t\t\tif (e.getKey().startsWith(\"0\") && !e.getKey().equals(\"0\")) {\n-\t\t\t\t\treturn null;\n-\t\t\t\t}\n-\t\t\t\tintMap[e.getValue()] = intValue;\n-\t\t\t\trange = range.span(new IntegerRange(intValue, intValue));\n-\t\t\t\tnumberParser.addLine((long) intValue);\n-\t\t\t}\n+    @Override\n+    public Guess createGuess() {\n+        //check if the remaining strings are all numbers\n+        try {\n+            Range<Integer> range = new IntegerRange(0, 0);\n+            IntegerParser numberParser = new IntegerParser(config);\n+            int[] intMap = new int[p.getStrings().size()];\n+            Arrays.fill(intMap, -1);\n+            for (Entry<String, Integer> e : p.getStrings().entrySet()) {\n+                int intValue = Integer.parseInt(e.getKey());\n+                //check that there are no leading zeroes that we would destroy\n+                if (e.getKey().startsWith(\"0\") && !e.getKey().equals(\"0\")) {\n+                    return null;\n+                }\n+                intMap[e.getValue()] = intValue;\n+                range = range.span(new IntegerRange(intValue, intValue));\n+                numberParser.addLine((long) intValue);\n+            }\n \n-\t\t\tnumberParser.setLines(p.getLines());\n+            numberParser.setLines(p.getLines());\n \n-\t\t\t//do not use a number type if the range is much larger than the number if distinct values\n-\t\t\t//e.g. if the column contains only 0 and 5M\n-\t\t\tint span = range.getMax() - range.getMin() + 1;\n-\t\t\tif (span > p.getStrings().size()) {\n-\t\t\t\treturn null;\n-\t\t\t}\n+            //do not use a number type if the range is much larger than the number if distinct values\n+            //e.g. if the column contains only 0 and 5M\n+            int span = range.getMax() - range.getMin() + 1;\n+            if (span > p.getStrings().size()) {\n+                return null;\n+            }\n \n-\t\t\tIntegerStore decision = numberParser.findBestType();\n+            IntegerStore decision = numberParser.findBestType();\n \n-\t\t\tRange<Integer> finalRange = range;\n-\t\t\treturn new Guess(\n-\t\t\t\t\tnull,\n-\t\t\t\t\tdecision.estimateMemoryConsumptionBytes(),\n-\t\t\t\t\t0\n-\t\t\t){\n-\t\t\t\t@Override\n-\t\t\t\tpublic StringStore getType() {\n+            Range<Integer> finalRange = range;\n+            return new Guess(\n+                null,\n+                decision.estimateMemoryConsumptionBytes(),\n+                0\n+            ) {\n+                @Override\n+                public StringStore getType() {\n \n-\t\t\t\t\tInt2ObjectMap<String> inverse = new Int2ObjectOpenHashMap<>(p.getStrings().size());\n-\t\t\t\t\tp.getStrings().forEach((key, value) -> inverse.putIfAbsent((int) value,key));\n+                    Int2ObjectMap<String> inverse = new Int2ObjectOpenHashMap<>(p.getStrings().size());\n+                    p.getStrings().forEach((key, value) -> inverse.putIfAbsent((int) value, key));\n \n-\t\t\t\t\tfinal StringTypeNumber type = new StringTypeNumber(finalRange, decision, inverse);\n+                    final StringTypeNumber type = new StringTypeNumber(finalRange, decision, inverse);\n \n-\t\t\t\t\treturn type;\n-\t\t\t\t}\n-\t\t\t};\n-\t\t}\n-\t\tcatch (NumberFormatException e) {\n-\t\t\treturn null;\n-\t\t}\n+                    return type;\n+                }\n+            };\n+        } catch (NumberFormatException e) {\n+            return null;\n+        }\n \n \n-\t}\n+    }\n \n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "61",
                    "column": "23",
                    "severity": "warning",
                    "message": "'{' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/688/NumberTypeGuesser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/688/NumberTypeGuesser.java\nindex 21ff32eaf4e..63d66fcd2bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/688/NumberTypeGuesser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/688/NumberTypeGuesser.java\n@@ -56,15 +56,14 @@ public class NumberTypeGuesser extends StringTypeGuesser {\n \n \t\t\tRange<Integer> finalRange = range;\n \t\t\treturn new Guess(\n-\t\t\t\t\tnull,\n+\tnull,\n \t\t\t\t\tdecision.estimateMemoryConsumptionBytes(),\n-\t\t\t\t\t0\n-\t\t\t){\n+\t\t\t\t\t0){\n \t\t\t\t@Override\n \t\t\t\tpublic StringStore getType() {\n \n \t\t\t\t\tInt2ObjectMap<String> inverse = new Int2ObjectOpenHashMap<>(p.getStrings().size());\n-\t\t\t\t\tp.getStrings().forEach((key, value) -> inverse.putIfAbsent((int) value,key));\n+\t\t\t\t\tp.getStrings().forEach((key, value) -> inverse.putIfAbsent((int)value,key));\n \n \t\t\t\t\tfinal StringTypeNumber type = new StringTypeNumber(finalRange, decision, inverse);\n \n@@ -75,8 +74,6 @@ public class NumberTypeGuesser extends StringTypeGuesser {\n \t\tcatch (NumberFormatException e) {\n \t\t\treturn null;\n \t\t}\n-\n-\n \t}\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "column": "3",
                    "severity": "warning",
                    "message": "'try' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "35",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "36",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "36",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "38",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "39",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "39",
                    "column": "6",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 5, expected level should be 20.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "40",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "41",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "42",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "43",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "43",
                    "column": "5",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "44",
                    "column": "4",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "45",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "49",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "50",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "51",
                    "column": "5",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 4, expected level should be 16.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "52",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "54",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "55",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "56",
                    "column": "4",
                    "severity": "warning",
                    "message": "'try' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "58",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 4, expected level should be one of the following: 7, 11.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "60",
                    "column": "6",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 5, expected level should be one of the following: 11, 15.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "61",
                    "column": "6",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 5, expected level should be one of the following: 11, 15.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "62",
                    "column": "6",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 5, expected level should be one of the following: 11, 15.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "63",
                    "column": "6",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 5, expected level should be one of the following: 11, 15.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "64",
                    "column": "5",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 4, expected level should be one of the following: 7, 11.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "65",
                    "column": "11",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 10, expected level should be one of the following: 3, 7.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "66",
                    "column": "3",
                    "severity": "warning",
                    "message": "'try rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "67",
                    "column": "3",
                    "severity": "warning",
                    "message": "'catch' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "68",
                    "column": "4",
                    "severity": "warning",
                    "message": "'catch' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "69",
                    "column": "3",
                    "severity": "warning",
                    "message": "'catch rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "70",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/688/NumberTypeGuesser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/688/NumberTypeGuesser.java\nindex 21ff32eaf4e..ce2ccf0a63b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/688/NumberTypeGuesser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/688/NumberTypeGuesser.java\n@@ -2,7 +2,6 @@ package com.bakdata.conquery.models.events.parser.specific.string;\n \n import java.util.Arrays;\n import java.util.Map.Entry;\n-\n import com.bakdata.conquery.models.common.Range;\n import com.bakdata.conquery.models.common.Range.IntegerRange;\n import com.bakdata.conquery.models.config.ParserConfig;\n@@ -18,65 +17,55 @@ import lombok.RequiredArgsConstructor;\n /**\n  * Guess, testing if all values can be represented as Integer Numbers without leading zeros. If selected, the values will be compressed using {@link IntegerParser}.\n  */\n+\n @RequiredArgsConstructor\n public class NumberTypeGuesser extends StringTypeGuesser {\n \n-\tprivate final StringParser p;\n-\tprivate final ParserConfig config;\n-\n-\t@Override\n-\tpublic Guess createGuess() {\n-\t\t//check if the remaining strings are all numbers\n-\t\ttry {\n-\t\t\tRange<Integer> range = new IntegerRange(0, 0);\n-\t\t\tIntegerParser numberParser = new IntegerParser(config);\n-\t\t\tint[] intMap = new int[p.getStrings().size()];\n-\t\t\tArrays.fill(intMap, -1);\n-\t\t\tfor (Entry<String, Integer> e : p.getStrings().entrySet()) {\n-\t\t\t\tint intValue = Integer.parseInt(e.getKey());\n-\t\t\t\t//check that there are no leading zeroes that we would destroy\n-\t\t\t\tif (e.getKey().startsWith(\"0\") && !e.getKey().equals(\"0\")) {\n-\t\t\t\t\treturn null;\n-\t\t\t\t}\n-\t\t\t\tintMap[e.getValue()] = intValue;\n-\t\t\t\trange = range.span(new IntegerRange(intValue, intValue));\n-\t\t\t\tnumberParser.addLine((long) intValue);\n-\t\t\t}\n-\n-\t\t\tnumberParser.setLines(p.getLines());\n-\n-\t\t\t//do not use a number type if the range is much larger than the number if distinct values\n-\t\t\t//e.g. if the column contains only 0 and 5M\n-\t\t\tint span = range.getMax() - range.getMin() + 1;\n-\t\t\tif (span > p.getStrings().size()) {\n-\t\t\t\treturn null;\n-\t\t\t}\n-\n-\t\t\tIntegerStore decision = numberParser.findBestType();\n-\n-\t\t\tRange<Integer> finalRange = range;\n-\t\t\treturn new Guess(\n-\t\t\t\t\tnull,\n-\t\t\t\t\tdecision.estimateMemoryConsumptionBytes(),\n-\t\t\t\t\t0\n-\t\t\t){\n-\t\t\t\t@Override\n-\t\t\t\tpublic StringStore getType() {\n-\n-\t\t\t\t\tInt2ObjectMap<String> inverse = new Int2ObjectOpenHashMap<>(p.getStrings().size());\n-\t\t\t\t\tp.getStrings().forEach((key, value) -> inverse.putIfAbsent((int) value,key));\n-\n-\t\t\t\t\tfinal StringTypeNumber type = new StringTypeNumber(finalRange, decision, inverse);\n+ private final StringParser p;\n+ private final ParserConfig config;\n \n-\t\t\t\t\treturn type;\n-\t\t\t\t}\n-\t\t\t};\n-\t\t}\n-\t\tcatch (NumberFormatException e) {\n-\t\t\treturn null;\n-\t\t}\n+ @Override\n+ public Guess createGuess() {\n+  //check if the remaining strings are all numbers\n+  try {\n+   Range<Integer> range = new IntegerRange(0, 0);\n+   IntegerParser numberParser = new IntegerParser(config);\n+   int[] intMap = new int[p.getStrings().size()];\n+   Arrays.fill(intMap, -1);\n+   for(Entry<String, Integer> e :p.getStrings().entrySet()) {\n+    int intValue = Integer.parseInt(e.getKey());\n+    //check that there are no leading zeroes that we would destroy\n+    if (e.getKey().startsWith(\"0\") && !e.getKey().equals(\"0\")) {\n+     return null;\n+    }\n+    intMap[e.getValue()] = intValue;\n+    range = range.span(new IntegerRange(intValue, intValue));\n+    numberParser.addLine((long)intValue);\n+   }\n+   numberParser.setLines(p.getLines());\n \n+   //do not use a number type if the range is much larger than the number if distinct values\n+   //e.g. if the column contains only 0 and 5M\n+   int span = range.getMax() - range.getMin() + 1;\n+   if (span > p.getStrings().size()) {\n+    return null;\n+   }\n \n-\t}\n+   IntegerStore decision = numberParser.findBestType();\n+   Range<Integer> finalRange = range;\n+   return new Guess(null, decision.estimateMemoryConsumptionBytes(), 0) {\n \n-}\n+    @Override\n+    public StringStore getType() {\n+     Int2ObjectMap<String> inverse = new Int2ObjectOpenHashMap<>(p.getStrings().size());\n+     p.getStrings().forEach((key, value) -> inverse.putIfAbsent((int)value, key));\n+     final StringTypeNumber type = new StringTypeNumber(finalRange, decision, inverse);\n+     return type;\n+    }\n+          };\n+  }\n+  catch (NumberFormatException e) {\n+   return null;\n+  }\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 90
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/688/NumberTypeGuesser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/688/NumberTypeGuesser.java\nindex 21ff32eaf4e..899c4908018 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/688/NumberTypeGuesser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/688/NumberTypeGuesser.java\n@@ -59,7 +59,7 @@ public class NumberTypeGuesser extends StringTypeGuesser {\n \t\t\t\t\tnull,\n \t\t\t\t\tdecision.estimateMemoryConsumptionBytes(),\n \t\t\t\t\t0\n-\t\t\t){\n+\t\t\t) {\n \t\t\t\t@Override\n \t\t\t\tpublic StringStore getType() {\n \n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "62",
                    "column": "15",
                    "severity": "warning",
                    "message": "'{' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/688/NumberTypeGuesser.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/688/NumberTypeGuesser.java\nindex 21ff32eaf4e..9d9dd76e7f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/688/NumberTypeGuesser.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/688/NumberTypeGuesser.java\n@@ -59,8 +59,7 @@ public class NumberTypeGuesser extends StringTypeGuesser {\n \t\t\t\t\tnull,\n \t\t\t\t\tdecision.estimateMemoryConsumptionBytes(),\n \t\t\t\t\t0\n-\t\t\t){\n-\t\t\t\t@Override\n+\t\t\t) {@Override\n \t\t\t\tpublic StringStore getType() {\n \n \t\t\t\t\tInt2ObjectMap<String> inverse = new Int2ObjectOpenHashMap<>(p.getStrings().size());\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_random"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3095",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "44",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3095/HeapSizeSanityChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3095/HeapSizeSanityChecker.java\nindex 94fb2ba8e31..5e6bf624a41 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3095/HeapSizeSanityChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3095/HeapSizeSanityChecker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport;\n \n import java.util.function.LongSupplier;\n@@ -36,51 +37,51 @@ import static org.neo4j.unsafe.impl.batchimport.ImportMemoryCalculator.optimalMi\n  */\n class HeapSizeSanityChecker\n {\n-    private final ImportLogic.Monitor monitor;\n-    private final LongSupplier freeMemoryLookup;\n-    private final LongSupplier actualHeapSizeLookup;\n+  private final ImportLogic.Monitor monitor;\n+  private final LongSupplier freeMemoryLookup;\n+  private final LongSupplier actualHeapSizeLookup;\n+\n+  HeapSizeSanityChecker(ImportLogic.Monitor monitor)\n+  {\n+    this(monitor, OsBeanUtil::getFreePhysicalMemory, Runtime.getRuntime()::maxMemory);\n+  }\n+\n+  HeapSizeSanityChecker(ImportLogic.Monitor monitor, LongSupplier freeMemoryLookup, LongSupplier actualHeapSizeLookup)\n+  {\n+    this.monitor = monitor;\n+    this.freeMemoryLookup = freeMemoryLookup;\n+    this.actualHeapSizeLookup = actualHeapSizeLookup;\n+  }\n+\n+  void sanityCheck(Input.Estimates inputEstimates, RecordFormats recordFormats, MemoryStatsVisitor.Visitable baseMemory,\n+                   MemoryStatsVisitor.Visitable... memoryVisitables)\n+  {\n+    // At this point in time the store hasn't started so it won't show up in free memory reported from OS,\n+    // i.e. we have to include it here in the calculations.\n+    long estimatedCacheSize = estimatedCacheSize(baseMemory, memoryVisitables);\n+    long freeMemory = freeMemoryLookup.getAsLong();\n+    long optimalMinimalHeapSize = optimalMinimalHeapSize(inputEstimates, recordFormats);\n+    long actualHeapSize = actualHeapSizeLookup.getAsLong();\n+    boolean freeMemoryIsKnown = freeMemory != VALUE_UNAVAILABLE;\n \n-    HeapSizeSanityChecker( ImportLogic.Monitor monitor )\n+    // Check if there's enough memory for the import\n+    if (freeMemoryIsKnown && actualHeapSize + freeMemory < estimatedCacheSize + optimalMinimalHeapSize)\n     {\n-        this( monitor, OsBeanUtil::getFreePhysicalMemory, Runtime.getRuntime()::maxMemory );\n+      monitor.insufficientAvailableMemory(estimatedCacheSize, optimalMinimalHeapSize, freeMemory);\n+      return; // there's likely not available memory, no need to warn about anything else\n     }\n \n-    HeapSizeSanityChecker( ImportLogic.Monitor monitor, LongSupplier freeMemoryLookup, LongSupplier actualHeapSizeLookup )\n+    // Check if the heap is big enough to handle the import\n+    if (actualHeapSize < optimalMinimalHeapSize)\n     {\n-        this.monitor = monitor;\n-        this.freeMemoryLookup = freeMemoryLookup;\n-        this.actualHeapSizeLookup = actualHeapSizeLookup;\n+      monitor.insufficientHeapSize(optimalMinimalHeapSize, actualHeapSize);\n+      return; // user have been warned about heap size issue\n     }\n \n-    void sanityCheck( Input.Estimates inputEstimates, RecordFormats recordFormats, MemoryStatsVisitor.Visitable baseMemory,\n-            MemoryStatsVisitor.Visitable... memoryVisitables )\n+    // Check if heap size could be tweaked\n+    if ((!freeMemoryIsKnown || freeMemory < estimatedCacheSize) && actualHeapSize > optimalMinimalHeapSize * 1.2)\n     {\n-        // At this point in time the store hasn't started so it won't show up in free memory reported from OS,\n-        // i.e. we have to include it here in the calculations.\n-        long estimatedCacheSize = estimatedCacheSize( baseMemory, memoryVisitables );\n-        long freeMemory = freeMemoryLookup.getAsLong();\n-        long optimalMinimalHeapSize = optimalMinimalHeapSize( inputEstimates, recordFormats );\n-        long actualHeapSize = actualHeapSizeLookup.getAsLong();\n-        boolean freeMemoryIsKnown = freeMemory != VALUE_UNAVAILABLE;\n-\n-        // Check if there's enough memory for the import\n-        if ( freeMemoryIsKnown && actualHeapSize + freeMemory < estimatedCacheSize + optimalMinimalHeapSize )\n-        {\n-            monitor.insufficientAvailableMemory( estimatedCacheSize, optimalMinimalHeapSize, freeMemory );\n-            return; // there's likely not available memory, no need to warn about anything else\n-        }\n-\n-        // Check if the heap is big enough to handle the import\n-        if ( actualHeapSize < optimalMinimalHeapSize )\n-        {\n-            monitor.insufficientHeapSize( optimalMinimalHeapSize, actualHeapSize );\n-            return; // user have been warned about heap size issue\n-        }\n-\n-        // Check if heap size could be tweaked\n-        if ( (!freeMemoryIsKnown || freeMemory < estimatedCacheSize) && actualHeapSize > optimalMinimalHeapSize * 1.2 )\n-        {\n-            monitor.abundantHeapSize( optimalMinimalHeapSize, actualHeapSize );\n-        }\n+      monitor.abundantHeapSize(optimalMinimalHeapSize, actualHeapSize);\n     }\n+  }\n }\n",
            "diff_size": 66
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "81",
                    "column": "87",
                    "severity": "error",
                    "message": "'>' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3095/HeapSizeSanityChecker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3095/HeapSizeSanityChecker.java\nindex 94fb2ba8e31..df0e7807e7a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3095/HeapSizeSanityChecker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3095/HeapSizeSanityChecker.java\n@@ -78,9 +78,9 @@ class HeapSizeSanityChecker\n         }\n \n         // Check if heap size could be tweaked\n-        if ( (!freeMemoryIsKnown || freeMemory < estimatedCacheSize) && actualHeapSize > optimalMinimalHeapSize * 1.2 )\n+        if ( (!freeMemoryIsKnown || freeMemory < estimatedCacheSize) && actualHeapSize> optimalMinimalHeapSize * 1.2 )\n         {\n             monitor.abundantHeapSize( optimalMinimalHeapSize, actualHeapSize );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
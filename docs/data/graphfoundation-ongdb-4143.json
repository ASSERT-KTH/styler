{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4143",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 166).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "column": "166",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4143/PropertyAndNode2LabelIndexProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4143/PropertyAndNode2LabelIndexProcessor.java\nindex 6380a6ffb56..684494d832b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4143/PropertyAndNode2LabelIndexProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4143/PropertyAndNode2LabelIndexProcessor.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.consistency.checking.full;\n \n import java.util.function.Function;\n@@ -38,47 +39,47 @@ import org.neo4j.kernel.impl.store.record.PropertyRecord;\n  */\n public class PropertyAndNode2LabelIndexProcessor extends RecordProcessor.Adapter<NodeRecord>\n {\n-    private final ConsistencyReporter reporter;\n-    private final RecordCheck<NodeRecord, ConsistencyReport.NodeConsistencyReport> nodeIndexCheck;\n-    private final RecordCheck<PropertyRecord, ConsistencyReport.PropertyConsistencyReport> propertyCheck;\n-    private final CacheAccess cacheAccess;\n-    private final Function<NodeRecord,Check<NodeRecord,NodeConsistencyReport>> mandatoryProperties;\n+  private final ConsistencyReporter reporter;\n+  private final RecordCheck<NodeRecord, ConsistencyReport.NodeConsistencyReport> nodeIndexCheck;\n+  private final RecordCheck<PropertyRecord, ConsistencyReport.PropertyConsistencyReport> propertyCheck;\n+  private final CacheAccess cacheAccess;\n+  private final Function<NodeRecord, Check<NodeRecord, NodeConsistencyReport>> mandatoryProperties;\n \n-    public PropertyAndNode2LabelIndexProcessor( ConsistencyReporter reporter,\n-            IndexAccessors indexes,\n-            PropertyReader propertyReader,\n-            CacheAccess cacheAccess,\n-            Function<NodeRecord,MandatoryProperties.Check<NodeRecord,ConsistencyReport.NodeConsistencyReport>> mandatoryProperties )\n-    {\n-        this.reporter = reporter;\n-        this.cacheAccess = cacheAccess;\n-        this.mandatoryProperties = mandatoryProperties;\n-        this.nodeIndexCheck = new PropertyAndNodeIndexedCheck( indexes, propertyReader, cacheAccess );\n-        this.propertyCheck = new PropertyRecordCheck();\n-    }\n+  public PropertyAndNode2LabelIndexProcessor(ConsistencyReporter reporter,\n+                                             IndexAccessors indexes,\n+                                             PropertyReader propertyReader,\n+                                             CacheAccess cacheAccess,\n+                                             Function<NodeRecord, MandatoryProperties.Check<NodeRecord, ConsistencyReport.NodeConsistencyReport>> mandatoryProperties)\n+  {\n+    this.reporter = reporter;\n+    this.cacheAccess = cacheAccess;\n+    this.mandatoryProperties = mandatoryProperties;\n+    this.nodeIndexCheck = new PropertyAndNodeIndexedCheck(indexes, propertyReader, cacheAccess);\n+    this.propertyCheck = new PropertyRecordCheck();\n+  }\n \n-    @Override\n-    public void process( NodeRecord nodeRecord )\n+  @Override\n+  public void process(NodeRecord nodeRecord)\n+  {\n+    reporter.forNode(nodeRecord, nodeIndexCheck);\n+    CacheAccess.Client client = cacheAccess.client();\n+    try (MandatoryProperties.Check<NodeRecord, ConsistencyReport.NodeConsistencyReport> mandatoryCheck =\n+             mandatoryProperties.apply(nodeRecord))\n     {\n-        reporter.forNode( nodeRecord, nodeIndexCheck );\n-        CacheAccess.Client client = cacheAccess.client();\n-        try ( MandatoryProperties.Check<NodeRecord,ConsistencyReport.NodeConsistencyReport> mandatoryCheck =\n-                mandatoryProperties.apply( nodeRecord ) )\n-        {\n-            Iterable<PropertyRecord> properties = client.getPropertiesFromCache();\n+      Iterable<PropertyRecord> properties = client.getPropertiesFromCache();\n \n-            // We do this null-check here because even if nodeIndexCheck should provide the properties for us,\n-            // or an empty list at least, it may fail in one way or another and exception be caught by\n-            // broad exception handler in reporter. The caught exception will produce an ERROR so it will not\n-            // go by unnoticed.\n-            if ( properties != null )\n-            {\n-                for ( PropertyRecord property : properties )\n-                {\n-                    reporter.forProperty( property, propertyCheck );\n-                    mandatoryCheck.receive( ChainCheck.keys( property ) );\n-                }\n-            }\n+      // We do this null-check here because even if nodeIndexCheck should provide the properties for us,\n+      // or an empty list at least, it may fail in one way or another and exception be caught by\n+      // broad exception handler in reporter. The caught exception will produce an ERROR so it will not\n+      // go by unnoticed.\n+      if (properties != null)\n+      {\n+        for (PropertyRecord property : properties)\n+        {\n+          reporter.forProperty(property, propertyCheck);\n+          mandatoryCheck.receive(ChainCheck.keys(property));\n         }\n+      }\n     }\n+  }\n }\n",
            "diff_size": 45
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4143/PropertyAndNode2LabelIndexProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4143/PropertyAndNode2LabelIndexProcessor.java\nindex 6380a6ffb56..0d6f4402735 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4143/PropertyAndNode2LabelIndexProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4143/PropertyAndNode2LabelIndexProcessor.java\n@@ -47,8 +47,7 @@ public class PropertyAndNode2LabelIndexProcessor extends RecordProcessor.Adapter\n     public PropertyAndNode2LabelIndexProcessor( ConsistencyReporter reporter,\n             IndexAccessors indexes,\n             PropertyReader propertyReader,\n-            CacheAccess cacheAccess,\n-            Function<NodeRecord,MandatoryProperties.Check<NodeRecord,ConsistencyReport.NodeConsistencyReport>> mandatoryProperties )\n+            CacheAccess cacheAccess, Function<NodeRecord,MandatoryProperties.Check<NodeRecord,ConsistencyReport.NodeConsistencyReport>> mandatoryProperties )\n     {\n         this.reporter = reporter;\n         this.cacheAccess = cacheAccess;\n@@ -62,8 +61,7 @@ public class PropertyAndNode2LabelIndexProcessor extends RecordProcessor.Adapter\n     {\n         reporter.forNode( nodeRecord, nodeIndexCheck );\n         CacheAccess.Client client = cacheAccess.client();\n-        try ( MandatoryProperties.Check<NodeRecord,ConsistencyReport.NodeConsistencyReport> mandatoryCheck =\n-                mandatoryProperties.apply( nodeRecord ) )\n+        try ( MandatoryProperties.Check<NodeRecord,ConsistencyReport.NodeConsistencyReport> mandatoryCheck = mandatoryProperties.apply( nodeRecord ) )\n         {\n             Iterable<PropertyRecord> properties = client.getPropertiesFromCache();\n \n@@ -81,4 +79,4 @@ public class PropertyAndNode2LabelIndexProcessor extends RecordProcessor.Adapter\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 278).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "62",
                    "column": "145",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "17",
                    "severity": "error",
                    "message": "'for' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "72",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4143/PropertyAndNode2LabelIndexProcessor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4143/PropertyAndNode2LabelIndexProcessor.java\nindex 6380a6ffb56..62462e00ae1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4143/PropertyAndNode2LabelIndexProcessor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/4143/PropertyAndNode2LabelIndexProcessor.java\n@@ -20,7 +20,6 @@\n package org.neo4j.consistency.checking.full;\n \n import java.util.function.Function;\n-\n import org.neo4j.consistency.checking.ChainCheck;\n import org.neo4j.consistency.checking.PropertyRecordCheck;\n import org.neo4j.consistency.checking.RecordCheck;\n@@ -36,19 +35,16 @@ import org.neo4j.kernel.impl.store.record.PropertyRecord;\n /**\n  * Processor of node records with the context of how they're indexed.\n  */\n+\n public class PropertyAndNode2LabelIndexProcessor extends RecordProcessor.Adapter<NodeRecord>\n {\n     private final ConsistencyReporter reporter;\n-    private final RecordCheck<NodeRecord, ConsistencyReport.NodeConsistencyReport> nodeIndexCheck;\n-    private final RecordCheck<PropertyRecord, ConsistencyReport.PropertyConsistencyReport> propertyCheck;\n+    private final RecordCheck<NodeRecord,ConsistencyReport.NodeConsistencyReport> nodeIndexCheck;\n+    private final RecordCheck<PropertyRecord,ConsistencyReport.PropertyConsistencyReport> propertyCheck;\n     private final CacheAccess cacheAccess;\n     private final Function<NodeRecord,Check<NodeRecord,NodeConsistencyReport>> mandatoryProperties;\n \n-    public PropertyAndNode2LabelIndexProcessor( ConsistencyReporter reporter,\n-            IndexAccessors indexes,\n-            PropertyReader propertyReader,\n-            CacheAccess cacheAccess,\n-            Function<NodeRecord,MandatoryProperties.Check<NodeRecord,ConsistencyReport.NodeConsistencyReport>> mandatoryProperties )\n+    public PropertyAndNode2LabelIndexProcessor( ConsistencyReporter reporter, IndexAccessors indexes, PropertyReader propertyReader, CacheAccess cacheAccess, Function<NodeRecord,MandatoryProperties.Check<NodeRecord,ConsistencyReport.NodeConsistencyReport>> mandatoryProperties )\n     {\n         this.reporter = reporter;\n         this.cacheAccess = cacheAccess;\n@@ -62,8 +58,8 @@ public class PropertyAndNode2LabelIndexProcessor extends RecordProcessor.Adapter\n     {\n         reporter.forNode( nodeRecord, nodeIndexCheck );\n         CacheAccess.Client client = cacheAccess.client();\n-        try ( MandatoryProperties.Check<NodeRecord,ConsistencyReport.NodeConsistencyReport> mandatoryCheck =\n-                mandatoryProperties.apply( nodeRecord ) )\n+        try\n+        ( MandatoryProperties.Check<NodeRecord,ConsistencyReport.NodeConsistencyReport> mandatoryCheck = mandatoryProperties.apply( nodeRecord ))\n         {\n             Iterable<PropertyRecord> properties = client.getPropertiesFromCache();\n \n@@ -73,7 +69,7 @@ public class PropertyAndNode2LabelIndexProcessor extends RecordProcessor.Adapter\n             // go by unnoticed.\n             if ( properties != null )\n             {\n-                for ( PropertyRecord property : properties )\n+                for( PropertyRecord property : properties)\n                 {\n                     reporter.forProperty( property, propertyCheck );\n                     mandatoryCheck.receive( ChainCheck.keys( property ) );\n@@ -81,4 +77,4 @@ public class PropertyAndNode2LabelIndexProcessor extends RecordProcessor.Adapter\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "755",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.mpi.adapter.component;\n\nimport gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\nimport org.hl7.v3.PRPAIN201306UV02;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/755/AdapterComponentMpiOrchImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/755/AdapterComponentMpiOrchImpl.java\nindex 1713878d67e..ea2301a549b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/755/AdapterComponentMpiOrchImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/755/AdapterComponentMpiOrchImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpi.adapter.component;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/755/AdapterComponentMpiOrchImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/755/AdapterComponentMpiOrchImpl.java\nindex 1713878d67e..625d66c51eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/755/AdapterComponentMpiOrchImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/755/AdapterComponentMpiOrchImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpi.adapter.component;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -32,26 +33,25 @@ import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n /**\n- *\n  * @author westberg\n  */\n public class AdapterComponentMpiOrchImpl {\n-    private static final Logger LOG = LoggerFactory.getLogger(AdapterComponentMpiOrchImpl.class);\n+  private static final Logger LOG = LoggerFactory.getLogger(AdapterComponentMpiOrchImpl.class);\n \n-    /**\n-     * Call the find candidates on the MPI.\n-     *\n-     * @param findCandidatesRequest The find candidates on the MPI\n-     * @param assertion The assertion information.\n-     * @return The patients found.\n-     */\n-    public PRPAIN201306UV02 findCandidates(org.hl7.v3.PRPAIN201305UV02 findCandidatesRequest, AssertionType assertion) {\n-        // return PatientChecker.FindPatient(findCandidatesRequest);\n-        LOG.trace(\"Entering AdapterComponentMpiOrchImpl.findCandidates method...\");\n+  /**\n+   * Call the find candidates on the MPI.\n+   *\n+   * @param findCandidatesRequest The find candidates on the MPI\n+   * @param assertion             The assertion information.\n+   * @return The patients found.\n+   */\n+  public PRPAIN201306UV02 findCandidates(org.hl7.v3.PRPAIN201305UV02 findCandidatesRequest, AssertionType assertion) {\n+    // return PatientChecker.FindPatient(findCandidatesRequest);\n+    LOG.trace(\"Entering AdapterComponentMpiOrchImpl.findCandidates method...\");\n \n-        AdapterComponentMpiChecker oMpiChecker;\n-        AdapterComponentMpiCheckerObjectFactory oFactory = new AdapterComponentMpiCheckerObjectFactory();\n-        oMpiChecker = oFactory.getAdapterComponentMpiChecker();\n-        return oMpiChecker.findPatient(findCandidatesRequest);\n-    }\n+    AdapterComponentMpiChecker oMpiChecker;\n+    AdapterComponentMpiCheckerObjectFactory oFactory = new AdapterComponentMpiCheckerObjectFactory();\n+    oMpiChecker = oFactory.getAdapterComponentMpiChecker();\n+    return oMpiChecker.findPatient(findCandidatesRequest);\n+  }\n }\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/755/AdapterComponentMpiOrchImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/755/AdapterComponentMpiOrchImpl.java\nindex 1713878d67e..1e6fd82ddb9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/755/AdapterComponentMpiOrchImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/755/AdapterComponentMpiOrchImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpi.adapter.component;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n@@ -52,6 +53,7 @@ public class AdapterComponentMpiOrchImpl {\n         AdapterComponentMpiChecker oMpiChecker;\n         AdapterComponentMpiCheckerObjectFactory oFactory = new AdapterComponentMpiCheckerObjectFactory();\n         oMpiChecker = oFactory.getAdapterComponentMpiChecker();\n-        return oMpiChecker.findPatient(findCandidatesRequest);\n+\n+return oMpiChecker.findPatient(findCandidatesRequest);\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/755/AdapterComponentMpiOrchImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/755/AdapterComponentMpiOrchImpl.java\nindex 1713878d67e..89a6b7af26f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/755/AdapterComponentMpiOrchImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/755/AdapterComponentMpiOrchImpl.java\n@@ -35,7 +35,10 @@ import org.slf4j.LoggerFactory;\n  *\n  * @author westberg\n  */\n+\n+\n public class AdapterComponentMpiOrchImpl {\n+\n     private static final Logger LOG = LoggerFactory.getLogger(AdapterComponentMpiOrchImpl.class);\n \n     /**\n@@ -45,13 +48,15 @@ public class AdapterComponentMpiOrchImpl {\n      * @param assertion The assertion information.\n      * @return The patients found.\n      */\n+\n+\n     public PRPAIN201306UV02 findCandidates(org.hl7.v3.PRPAIN201305UV02 findCandidatesRequest, AssertionType assertion) {\n         // return PatientChecker.FindPatient(findCandidatesRequest);\n         LOG.trace(\"Entering AdapterComponentMpiOrchImpl.findCandidates method...\");\n-\n         AdapterComponentMpiChecker oMpiChecker;\n         AdapterComponentMpiCheckerObjectFactory oFactory = new AdapterComponentMpiCheckerObjectFactory();\n         oMpiChecker = oFactory.getAdapterComponentMpiChecker();\n         return oMpiChecker.findPatient(findCandidatesRequest);\n     }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/755/AdapterComponentMpiOrchImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/755/AdapterComponentMpiOrchImpl.java\nindex 1713878d67e..ea2301a549b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/755/AdapterComponentMpiOrchImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/755/AdapterComponentMpiOrchImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.mpi.adapter.component;\n \n import gov.hhs.fha.nhinc.common.nhinccommon.AssertionType;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3994",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "140",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "71",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "113",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "124",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "129",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "138",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3994/TxPullRequestHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3994/TxPullRequestHandler.java\nindex e4ad088347e..ad0b79ca30f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3994/TxPullRequestHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3994/TxPullRequestHandler.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.catchup.tx;\n \n import io.netty.channel.ChannelHandlerContext;\n@@ -49,107 +50,103 @@ import static org.neo4j.causalclustering.catchup.CatchupResult.SUCCESS_END_OF_ST\n \n public class TxPullRequestHandler extends SimpleChannelInboundHandler<TxPullRequest>\n {\n-    private final CatchupServerProtocol protocol;\n-    private final Supplier<StoreId> storeIdSupplier;\n-    private final BooleanSupplier databaseAvailable;\n-    private final TransactionIdStore transactionIdStore;\n-    private final LogicalTransactionStore logicalTransactionStore;\n-    private final TxPullRequestsMonitor monitor;\n-    private final Log log;\n-\n-    public TxPullRequestHandler( CatchupServerProtocol protocol, Supplier<StoreId> storeIdSupplier,\n-            BooleanSupplier databaseAvailable, Supplier<TransactionIdStore> transactionIdStoreSupplier,\n-            Supplier<LogicalTransactionStore> logicalTransactionStoreSupplier, Monitors monitors, LogProvider logProvider )\n-    {\n-        this.protocol = protocol;\n-        this.storeIdSupplier = storeIdSupplier;\n-        this.databaseAvailable = databaseAvailable;\n-        this.transactionIdStore = transactionIdStoreSupplier.get();\n-        this.logicalTransactionStore = logicalTransactionStoreSupplier.get();\n-        this.monitor = monitors.newMonitor( TxPullRequestsMonitor.class );\n-        this.log = logProvider.getLog( getClass() );\n-    }\n+  private final CatchupServerProtocol protocol;\n+  private final Supplier<StoreId> storeIdSupplier;\n+  private final BooleanSupplier databaseAvailable;\n+  private final TransactionIdStore transactionIdStore;\n+  private final LogicalTransactionStore logicalTransactionStore;\n+  private final TxPullRequestsMonitor monitor;\n+  private final Log log;\n \n-    @Override\n-    protected void channelRead0( ChannelHandlerContext ctx, final TxPullRequest msg ) throws Exception\n-    {\n-        monitor.increment();\n+  public TxPullRequestHandler(CatchupServerProtocol protocol, Supplier<StoreId> storeIdSupplier,\n+                              BooleanSupplier databaseAvailable, Supplier<TransactionIdStore> transactionIdStoreSupplier,\n+                              Supplier<LogicalTransactionStore> logicalTransactionStoreSupplier, Monitors monitors, LogProvider logProvider)\n+  {\n+    this.protocol = protocol;\n+    this.storeIdSupplier = storeIdSupplier;\n+    this.databaseAvailable = databaseAvailable;\n+    this.transactionIdStore = transactionIdStoreSupplier.get();\n+    this.logicalTransactionStore = logicalTransactionStoreSupplier.get();\n+    this.monitor = monitors.newMonitor(TxPullRequestsMonitor.class);\n+    this.log = logProvider.getLog(getClass());\n+  }\n \n-        if ( msg.previousTxId() <= 0 )\n-        {\n-            log.error( \"Illegal tx pull request\" );\n-            endInteraction( ctx, E_INVALID_REQUEST, -1 );\n-            return;\n-        }\n+  @Override\n+  protected void channelRead0(ChannelHandlerContext ctx, final TxPullRequest msg) throws Exception\n+  {\n+    monitor.increment();\n \n-        StoreId localStoreId = storeIdSupplier.get();\n-        StoreId expectedStoreId = msg.expectedStoreId();\n+    if (msg.previousTxId() <= 0)\n+    {\n+      log.error(\"Illegal tx pull request\");\n+      endInteraction(ctx, E_INVALID_REQUEST, -1);\n+      return;\n+    }\n \n-        long firstTxId = msg.previousTxId() + 1;\n-        IOCursor<CommittedTransactionRepresentation> txCursor = getCursor( ctx, firstTxId, localStoreId, expectedStoreId );\n+    StoreId localStoreId = storeIdSupplier.get();\n+    StoreId expectedStoreId = msg.expectedStoreId();\n \n-        if ( txCursor != null )\n-        {\n-            ChunkedTransactionStream txStream = new ChunkedTransactionStream( localStoreId, firstTxId, txCursor, protocol );\n-            // chunked transaction stream ends the interaction internally and closes the cursor\n-            ctx.writeAndFlush( txStream ).addListener( f ->\n-            {\n-                if ( log.isDebugEnabled() || !f.isSuccess() )\n-                {\n-                    String message = format( \"Streamed transactions [%d--%d] to %s\", firstTxId, txStream.lastTxId(), ctx.channel().remoteAddress() );\n-                    if ( f.isSuccess() )\n-                    {\n-                        log.debug( message );\n-                    }\n-                    else\n-                    {\n-                        log.warn( message, f.cause() );\n-                    }\n-                }\n-            } );\n-        }\n-    }\n+    long firstTxId = msg.previousTxId() + 1;\n+    IOCursor<CommittedTransactionRepresentation> txCursor = getCursor(ctx, firstTxId, localStoreId, expectedStoreId);\n \n-    private IOCursor<CommittedTransactionRepresentation> getCursor( ChannelHandlerContext ctx, long firstTxId,\n-            StoreId localStoreId, StoreId expectedStoreId ) throws IOException\n+    if (txCursor != null)\n     {\n-        long lastCommittedTransactionId = transactionIdStore.getLastCommittedTransactionId();\n-\n-        if ( localStoreId == null || !localStoreId.equals( expectedStoreId ) )\n-        {\n-            log.info( \"Failed to serve TxPullRequest for tx %d and storeId %s because that storeId is different \" +\n-                    \"from this machine with %s\", firstTxId, expectedStoreId, localStoreId );\n-            endInteraction( ctx, E_STORE_ID_MISMATCH, lastCommittedTransactionId );\n-            return null;\n-        }\n-        else if ( !databaseAvailable.getAsBoolean() )\n+      ChunkedTransactionStream txStream = new ChunkedTransactionStream(localStoreId, firstTxId, txCursor, protocol);\n+      // chunked transaction stream ends the interaction internally and closes the cursor\n+      ctx.writeAndFlush(txStream).addListener(f ->\n+      {\n+        if (log.isDebugEnabled() || !f.isSuccess())\n         {\n-            log.info( \"Failed to serve TxPullRequest for tx %d because the local database is unavailable.\", firstTxId );\n-            endInteraction( ctx, E_STORE_UNAVAILABLE, lastCommittedTransactionId );\n-            return null;\n-        }\n-        else if ( lastCommittedTransactionId < firstTxId )\n-        {\n-            endInteraction( ctx, SUCCESS_END_OF_STREAM, lastCommittedTransactionId );\n-            return null;\n+          String message = format(\"Streamed transactions [%d--%d] to %s\", firstTxId, txStream.lastTxId(), ctx.channel().remoteAddress());\n+          if (f.isSuccess())\n+          {\n+            log.debug(message);\n+          } else\n+          {\n+            log.warn(message, f.cause());\n+          }\n         }\n+      });\n+    }\n+  }\n \n-        try\n-        {\n-            return logicalTransactionStore.getTransactions( firstTxId );\n-        }\n-        catch ( NoSuchTransactionException e )\n-        {\n-            log.info( \"Failed to serve TxPullRequest for tx %d because the transaction does not exist.\", firstTxId );\n-            endInteraction( ctx, E_TRANSACTION_PRUNED, lastCommittedTransactionId );\n-            return null;\n-        }\n+  private IOCursor<CommittedTransactionRepresentation> getCursor(ChannelHandlerContext ctx, long firstTxId,\n+                                                                 StoreId localStoreId, StoreId expectedStoreId) throws IOException\n+  {\n+    long lastCommittedTransactionId = transactionIdStore.getLastCommittedTransactionId();\n+\n+    if (localStoreId == null || !localStoreId.equals(expectedStoreId))\n+    {\n+      log.info(\"Failed to serve TxPullRequest for tx %d and storeId %s because that storeId is different \" +\n+          \"from this machine with %s\", firstTxId, expectedStoreId, localStoreId);\n+      endInteraction(ctx, E_STORE_ID_MISMATCH, lastCommittedTransactionId);\n+      return null;\n+    } else if (!databaseAvailable.getAsBoolean())\n+    {\n+      log.info(\"Failed to serve TxPullRequest for tx %d because the local database is unavailable.\", firstTxId);\n+      endInteraction(ctx, E_STORE_UNAVAILABLE, lastCommittedTransactionId);\n+      return null;\n+    } else if (lastCommittedTransactionId < firstTxId)\n+    {\n+      endInteraction(ctx, SUCCESS_END_OF_STREAM, lastCommittedTransactionId);\n+      return null;\n     }\n \n-    private void endInteraction( ChannelHandlerContext ctx, CatchupResult status, long lastCommittedTransactionId )\n+    try\n+    {\n+      return logicalTransactionStore.getTransactions(firstTxId);\n+    } catch (NoSuchTransactionException e)\n     {\n-        ctx.write( ResponseMessageType.TX_STREAM_FINISHED );\n-        ctx.writeAndFlush( new TxStreamFinishedResponse( status, lastCommittedTransactionId ) );\n-        protocol.expect( State.MESSAGE_TYPE );\n+      log.info(\"Failed to serve TxPullRequest for tx %d because the transaction does not exist.\", firstTxId);\n+      endInteraction(ctx, E_TRANSACTION_PRUNED, lastCommittedTransactionId);\n+      return null;\n     }\n+  }\n+\n+  private void endInteraction(ChannelHandlerContext ctx, CatchupResult status, long lastCommittedTransactionId)\n+  {\n+    ctx.write(ResponseMessageType.TX_STREAM_FINISHED);\n+    ctx.writeAndFlush(new TxStreamFinishedResponse(status, lastCommittedTransactionId));\n+    protocol.expect(State.MESSAGE_TYPE);\n+  }\n }\n",
            "diff_size": 126
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "61",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 215).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "116",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3994/TxPullRequestHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3994/TxPullRequestHandler.java\nindex e4ad088347e..3a2a5967c5d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3994/TxPullRequestHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3994/TxPullRequestHandler.java\n@@ -58,8 +58,7 @@ public class TxPullRequestHandler extends SimpleChannelInboundHandler<TxPullRequ\n     private final Log log;\n \n     public TxPullRequestHandler( CatchupServerProtocol protocol, Supplier<StoreId> storeIdSupplier,\n-            BooleanSupplier databaseAvailable, Supplier<TransactionIdStore> transactionIdStoreSupplier,\n-            Supplier<LogicalTransactionStore> logicalTransactionStoreSupplier, Monitors monitors, LogProvider logProvider )\n+            BooleanSupplier databaseAvailable, Supplier<TransactionIdStore> transactionIdStoreSupplier, Supplier<LogicalTransactionStore> logicalTransactionStoreSupplier, Monitors monitors, LogProvider logProvider )\n     {\n         this.protocol = protocol;\n         this.storeIdSupplier = storeIdSupplier;\n@@ -74,8 +73,7 @@ public class TxPullRequestHandler extends SimpleChannelInboundHandler<TxPullRequ\n     protected void channelRead0( ChannelHandlerContext ctx, final TxPullRequest msg ) throws Exception\n     {\n         monitor.increment();\n-\n-        if ( msg.previousTxId() <= 0 )\n+if ( msg.previousTxId() <= 0 )\n         {\n             log.error( \"Illegal tx pull request\" );\n             endInteraction( ctx, E_INVALID_REQUEST, -1 );\n@@ -87,8 +85,7 @@ public class TxPullRequestHandler extends SimpleChannelInboundHandler<TxPullRequ\n \n         long firstTxId = msg.previousTxId() + 1;\n         IOCursor<CommittedTransactionRepresentation> txCursor = getCursor( ctx, firstTxId, localStoreId, expectedStoreId );\n-\n-        if ( txCursor != null )\n+if ( txCursor != null )\n         {\n             ChunkedTransactionStream txStream = new ChunkedTransactionStream( localStoreId, firstTxId, txCursor, protocol );\n             // chunked transaction stream ends the interaction internally and closes the cursor\n@@ -112,14 +109,12 @@ public class TxPullRequestHandler extends SimpleChannelInboundHandler<TxPullRequ\n \n     private IOCursor<CommittedTransactionRepresentation> getCursor( ChannelHandlerContext ctx, long firstTxId,\n             StoreId localStoreId, StoreId expectedStoreId ) throws IOException\n-    {\n+{\n         long lastCommittedTransactionId = transactionIdStore.getLastCommittedTransactionId();\n-\n-        if ( localStoreId == null || !localStoreId.equals( expectedStoreId ) )\n+if ( localStoreId == null || !localStoreId.equals( expectedStoreId ) )\n         {\n-            log.info( \"Failed to serve TxPullRequest for tx %d and storeId %s because that storeId is different \" +\n-                    \"from this machine with %s\", firstTxId, expectedStoreId, localStoreId );\n-            endInteraction( ctx, E_STORE_ID_MISMATCH, lastCommittedTransactionId );\n+            log.info( \"Failed to serve TxPullRequest for tx %d and storeId %s because that storeId is different \" + \"from this machine with %s\", firstTxId, expectedStoreId, localStoreId );\n+endInteraction( ctx, E_STORE_ID_MISMATCH, lastCommittedTransactionId );\n             return null;\n         }\n         else if ( !databaseAvailable.getAsBoolean() )\n@@ -152,4 +147,4 @@ public class TxPullRequestHandler extends SimpleChannelInboundHandler<TxPullRequ\n         ctx.writeAndFlush( new TxStreamFinishedResponse( status, lastCommittedTransactionId ) );\n         protocol.expect( State.MESSAGE_TYPE );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 303).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "94",
                    "column": "85",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 192).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "110",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "113",
                    "column": "34",
                    "severity": "error",
                    "message": "'||' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "115",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3994/TxPullRequestHandler.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3994/TxPullRequestHandler.java\nindex e4ad088347e..6064f0cbedf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3994/TxPullRequestHandler.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3994/TxPullRequestHandler.java\n@@ -21,11 +21,9 @@ package org.neo4j.causalclustering.catchup.tx;\n \n import io.netty.channel.ChannelHandlerContext;\n import io.netty.channel.SimpleChannelInboundHandler;\n-\n import java.io.IOException;\n import java.util.function.BooleanSupplier;\n import java.util.function.Supplier;\n-\n import org.neo4j.causalclustering.catchup.CatchupResult;\n import org.neo4j.causalclustering.catchup.CatchupServerProtocol;\n import org.neo4j.causalclustering.catchup.CatchupServerProtocol.State;\n@@ -39,12 +37,16 @@ import org.neo4j.kernel.impl.transaction.log.TransactionIdStore;\n import org.neo4j.kernel.monitoring.Monitors;\n import org.neo4j.logging.Log;\n import org.neo4j.logging.LogProvider;\n-\n import static java.lang.String.format;\n+\n import static org.neo4j.causalclustering.catchup.CatchupResult.E_INVALID_REQUEST;\n+\n import static org.neo4j.causalclustering.catchup.CatchupResult.E_STORE_ID_MISMATCH;\n+\n import static org.neo4j.causalclustering.catchup.CatchupResult.E_STORE_UNAVAILABLE;\n+\n import static org.neo4j.causalclustering.catchup.CatchupResult.E_TRANSACTION_PRUNED;\n+\n import static org.neo4j.causalclustering.catchup.CatchupResult.SUCCESS_END_OF_STREAM;\n \n public class TxPullRequestHandler extends SimpleChannelInboundHandler<TxPullRequest>\n@@ -57,9 +59,7 @@ public class TxPullRequestHandler extends SimpleChannelInboundHandler<TxPullRequ\n     private final TxPullRequestsMonitor monitor;\n     private final Log log;\n \n-    public TxPullRequestHandler( CatchupServerProtocol protocol, Supplier<StoreId> storeIdSupplier,\n-            BooleanSupplier databaseAvailable, Supplier<TransactionIdStore> transactionIdStoreSupplier,\n-            Supplier<LogicalTransactionStore> logicalTransactionStoreSupplier, Monitors monitors, LogProvider logProvider )\n+    public TxPullRequestHandler( CatchupServerProtocol protocol, Supplier<StoreId> storeIdSupplier, BooleanSupplier databaseAvailable, Supplier<TransactionIdStore> transactionIdStoreSupplier, Supplier<LogicalTransactionStore> logicalTransactionStoreSupplier, Monitors monitors, LogProvider logProvider )\n     {\n         this.protocol = protocol;\n         this.storeIdSupplier = storeIdSupplier;\n@@ -74,65 +74,61 @@ public class TxPullRequestHandler extends SimpleChannelInboundHandler<TxPullRequ\n     protected void channelRead0( ChannelHandlerContext ctx, final TxPullRequest msg ) throws Exception\n     {\n         monitor.increment();\n-\n         if ( msg.previousTxId() <= 0 )\n         {\n             log.error( \"Illegal tx pull request\" );\n-            endInteraction( ctx, E_INVALID_REQUEST, -1 );\n+            endInteraction( ctx, E_INVALID_REQUEST, - 1 );\n             return;\n         }\n \n         StoreId localStoreId = storeIdSupplier.get();\n         StoreId expectedStoreId = msg.expectedStoreId();\n-\n         long firstTxId = msg.previousTxId() + 1;\n         IOCursor<CommittedTransactionRepresentation> txCursor = getCursor( ctx, firstTxId, localStoreId, expectedStoreId );\n-\n         if ( txCursor != null )\n         {\n             ChunkedTransactionStream txStream = new ChunkedTransactionStream( localStoreId, firstTxId, txCursor, protocol );\n             // chunked transaction stream ends the interaction internally and closes the cursor\n             ctx.writeAndFlush( txStream ).addListener( f ->\n-            {\n-                if ( log.isDebugEnabled() || !f.isSuccess() )\n-                {\n-                    String message = format( \"Streamed transactions [%d--%d] to %s\", firstTxId, txStream.lastTxId(), ctx.channel().remoteAddress() );\n-                    if ( f.isSuccess() )\n-                    {\n-                        log.debug( message );\n-                    }\n-                    else\n-                    {\n-                        log.warn( message, f.cause() );\n-                    }\n-                }\n-            } );\n+                                                       {\n+                                                           if ( log.isDebugEnabled()|| ! f.isSuccess() )\n+                                                           {\n+                                                               String message = format( \"Streamed transactions [%d--%d] to %s\", firstTxId, txStream.lastTxId(), ctx.channel().remoteAddress() );\n+                                                               if ( f.isSuccess() )\n+                                                               {\n+                                                                   log.debug( message );\n+                                                               }\n+                                                               else\n+                                                               {\n+                                                                   log.warn( message, f.cause() );\n+                                                               }\n+                                                           }\n+                                                       } );\n         }\n     }\n \n-    private IOCursor<CommittedTransactionRepresentation> getCursor( ChannelHandlerContext ctx, long firstTxId,\n-            StoreId localStoreId, StoreId expectedStoreId ) throws IOException\n+    private IOCursor<CommittedTransactionRepresentation> getCursor( ChannelHandlerContext ctx, long firstTxId, StoreId localStoreId, StoreId expectedStoreId ) throws IOException\n     {\n         long lastCommittedTransactionId = transactionIdStore.getLastCommittedTransactionId();\n-\n-        if ( localStoreId == null || !localStoreId.equals( expectedStoreId ) )\n+        if ( localStoreId == null|| ! localStoreId.equals( expectedStoreId ) )\n         {\n-            log.info( \"Failed to serve TxPullRequest for tx %d and storeId %s because that storeId is different \" +\n-                    \"from this machine with %s\", firstTxId, expectedStoreId, localStoreId );\n+            log.info( \"Failed to serve TxPullRequest for tx %d and storeId %s because that storeId is different \" + \"from this machine with %s\", firstTxId, expectedStoreId, localStoreId );\n             endInteraction( ctx, E_STORE_ID_MISMATCH, lastCommittedTransactionId );\n             return null;\n         }\n-        else if ( !databaseAvailable.getAsBoolean() )\n+        else\n+        if ( ! databaseAvailable.getAsBoolean() )\n         {\n             log.info( \"Failed to serve TxPullRequest for tx %d because the local database is unavailable.\", firstTxId );\n             endInteraction( ctx, E_STORE_UNAVAILABLE, lastCommittedTransactionId );\n             return null;\n         }\n-        else if ( lastCommittedTransactionId < firstTxId )\n-        {\n-            endInteraction( ctx, SUCCESS_END_OF_STREAM, lastCommittedTransactionId );\n-            return null;\n-        }\n+        else\n+            if ( lastCommittedTransactionId < firstTxId )\n+            {\n+                endInteraction( ctx, SUCCESS_END_OF_STREAM, lastCommittedTransactionId );\n+                return null;\n+            }\n \n         try\n         {\n@@ -152,4 +148,4 @@ public class TxPullRequestHandler extends SimpleChannelInboundHandler<TxPullRequ\n         ctx.writeAndFlush( new TxStreamFinishedResponse( status, lastCommittedTransactionId ) );\n         protocol.expect( State.MESSAGE_TYPE );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 44
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
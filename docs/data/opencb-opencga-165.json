{
    "project_name": "opencb-opencga",
    "error_id": "165",
    "information": {
        "errors": [
            {
                "line": "98",
                "severity": "error",
                "message": "Line is longer than 140 characters (found 227).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "//                        description = \"Cohort data imported from \" + source;\n//                    }\n//                    Cohort cohort = catalogManager.getCohortManager().create(studyConfiguration.getName(), cohortName, Enums.CohortType.COLLECTION, description, newSampleList, null, Collections.emptyMap(), sessionId).first();\n//                    newCohortIds.put(cohortName, (int) cohort.getUid());\n//                    newCohorts.put((int) cohort.getUid(), newSampleList.stream().map(Sample::getUid).map(Long::intValue)\n//                            .collect(Collectors.toSet()));",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/165/VariantImportOperationManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler/165/VariantImportOperationManager.java\nindex bd84e1277ef..d45d562f317 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/165/VariantImportOperationManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler/165/VariantImportOperationManager.java\n@@ -95,9 +95,9 @@ public class VariantImportOperationManager extends OperationManager {\n //                    } else {\n //                        description = \"Cohort data imported from \" + source;\n //                    }\n-//                    Cohort cohort = catalogManager.getCohortManager().create(studyConfiguration.getName(), cohortName, Enums.CohortType.COLLECTION, description, newSampleList, null, Collections.emptyMap(), sessionId).first();\n //                    newCohortIds.put(cohortName, (int) cohort.getUid());\n //                    newCohorts.put((int) cohort.getUid(), newSampleList.stream().map(Sample::getUid).map(Long::intValue)\n+//                    newCohorts.put((int) cohort.getUid(), newSampleList.stream().map(Sample::getUid).map(Long::intValue)\n //                            .collect(Collectors.toSet()));\n //                    catalogManager.getCohortManager().setStatus(studyStr, cohort.getId(), CohortStatus.READY, \"\", sessionId);\n //                }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 227).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/165/VariantImportOperationManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/165/VariantImportOperationManager.java\nindex bd84e1277ef..e1993b630fe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/165/VariantImportOperationManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/intellij/165/VariantImportOperationManager.java\n@@ -29,38 +29,38 @@ import java.net.URI;\n \n public class VariantImportOperationManager extends OperationManager {\n \n-    public VariantImportOperationManager(VariantStorageManager variantStorageManager, VariantStorageEngine variantStorageEngine) {\n-        super(variantStorageManager, variantStorageEngine);\n-    }\n-\n-    public void run(String study, URI inputUri, String token) throws Exception {\n+  public VariantImportOperationManager(VariantStorageManager variantStorageManager, VariantStorageEngine variantStorageEngine) {\n+    super(variantStorageManager, variantStorageEngine);\n+  }\n \n-        VariantMetadataImporter variantMetadataImporter;\n-        variantMetadataImporter = new CatalogVariantMetadataImporter(study, inputUri, token);\n+  public void run(String study, URI inputUri, String token) throws Exception {\n \n-        ObjectMap options = variantStorageEngine.getOptions();\n-        VariantMetadata metadata;\n-        try (VariantStorageMetadataManager scm = variantStorageEngine.getMetadataManager()) {\n-            metadata = variantMetadataImporter.importMetaData(inputUri, scm);\n-        }\n+    VariantMetadataImporter variantMetadataImporter;\n+    variantMetadataImporter = new CatalogVariantMetadataImporter(study, inputUri, token);\n \n-        variantStorageEngine.importData(inputUri, metadata, null, options);\n+    ObjectMap options = variantStorageEngine.getOptions();\n+    VariantMetadata metadata;\n+    try (VariantStorageMetadataManager scm = variantStorageEngine.getMetadataManager()) {\n+      metadata = variantMetadataImporter.importMetaData(inputUri, scm);\n     }\n \n-    private final class CatalogVariantMetadataImporter extends VariantMetadataImporter {\n-        private final URI inputUri;\n-        private final String sessionId;\n-        private final String studyStr;\n+    variantStorageEngine.importData(inputUri, metadata, null, options);\n+  }\n \n-        private CatalogVariantMetadataImporter(String studyStr, URI inputUri, String sessionId) {\n-            this.inputUri = inputUri;\n-            this.sessionId = sessionId;\n-            this.studyStr = studyStr;\n-        }\n+  private final class CatalogVariantMetadataImporter extends VariantMetadataImporter {\n+    private final URI inputUri;\n+    private final String sessionId;\n+    private final String studyStr;\n+\n+    private CatalogVariantMetadataImporter(String studyStr, URI inputUri, String sessionId) {\n+      this.inputUri = inputUri;\n+      this.sessionId = sessionId;\n+      this.studyStr = studyStr;\n+    }\n \n-        @Override\n-        protected void processStudyConfiguration(StudyConfiguration studyConfiguration) {\n-            throw new NotImplementedException(\"Pending migration\");\n+    @Override\n+    protected void processStudyConfiguration(StudyConfiguration studyConfiguration) {\n+      throw new NotImplementedException(\"Pending migration\");\n //            studyConfiguration.setStudyName(studyStr);\n //\n //            try {\n@@ -150,7 +150,7 @@ public class VariantImportOperationManager extends OperationManager {\n //            } catch (CatalogException e) {\n //                throw new IllegalArgumentException(e);\n //            }\n-        }\n     }\n+  }\n \n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 227).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/165/VariantImportOperationManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/165/VariantImportOperationManager.java\nindex bd84e1277ef..c10bce7e520 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/165/VariantImportOperationManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/naturalize/165/VariantImportOperationManager.java\n@@ -153,4 +153,4 @@ public class VariantImportOperationManager extends OperationManager {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 140 characters (found 227).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/165/VariantImportOperationManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_three_grams/165/VariantImportOperationManager.java\nindex bd84e1277ef..d45d562f317 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/errored/1/165/VariantImportOperationManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/opencb-opencga/styler_three_grams/165/VariantImportOperationManager.java\n@@ -95,9 +95,9 @@ public class VariantImportOperationManager extends OperationManager {\n //                    } else {\n //                        description = \"Cohort data imported from \" + source;\n //                    }\n-//                    Cohort cohort = catalogManager.getCohortManager().create(studyConfiguration.getName(), cohortName, Enums.CohortType.COLLECTION, description, newSampleList, null, Collections.emptyMap(), sessionId).first();\n //                    newCohortIds.put(cohortName, (int) cohort.getUid());\n //                    newCohorts.put((int) cohort.getUid(), newSampleList.stream().map(Sample::getUid).map(Long::intValue)\n+//                    newCohorts.put((int) cohort.getUid(), newSampleList.stream().map(Sample::getUid).map(Long::intValue)\n //                            .collect(Collectors.toSet()));\n //                    catalogManager.getCohortManager().setStatus(studyStr, cohort.getId(), CohortStatus.READY, \"\", sessionId);\n //                }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "871",
    "information": {
        "errors": [
            {
                "line": "60",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 108).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        @Override\n        protected void setValue(ListValue from, com.google.datastore.v1.Value.Builder to) {\n          List<com.google.datastore.v1.Value> propertiesPb = new ArrayList<com.google.datastore.v1.Value>();\n          for (Value<?> property : from.get()) {\n            propertiesPb.add(property.toPb());\n          }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/871/ListValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/871/ListValue.java\nindex 6e7fe16697d..e8fa01c42b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/871/ListValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/871/ListValue.java\n@@ -57,7 +57,8 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n \n         @Override\n         protected void setValue(ListValue from, com.google.datastore.v1.Value.Builder to) {\n-          List<com.google.datastore.v1.Value> propertiesPb = new ArrayList<com.google.datastore.v1.Value>();\n+          List<com.google.datastore.v1.Value> propertiesPb =\n+              new ArrayList<com.google.datastore.v1.Value>();\n           for (Value<?> property : from.get()) {\n             propertiesPb.add(property.toPb());\n           }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/871/ListValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/871/ListValue.java\nindex 6e7fe16697d..16cbeab6e28 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/871/ListValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/871/ListValue.java\n@@ -323,4 +323,4 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n   public static Builder builder() {\n     return new Builder();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "35",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "'object def' child has incorrect indentation level 91, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "37",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 157).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "39",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 91, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 93, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 91, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 91, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 151).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 93, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 91, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "49",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 91, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "50",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 93, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "51",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 176).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 93, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 95, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 93, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 93, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 111).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "56",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 91, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 91, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 93, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 191).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "'for' has incorrect indentation level 93, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 131).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "'for' child has incorrect indentation level 95, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "63",
                    "severity": "warning",
                    "message": "'for rcurly' has incorrect indentation level 93, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 93, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "64",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 91, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 89, expected level should be one of the following: 2, 4, 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 109).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/871/ListValue.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/871/ListValue.java\nindex 6e7fe16697d..3432bfdd2db 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/871/ListValue.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/871/ListValue.java\n@@ -20,54 +20,52 @@ import static com.google.datastore.v1.Value.ARRAY_VALUE_FIELD_NUMBER;\n \n import com.google.common.base.Preconditions;\n import com.google.common.collect.ImmutableList;\n-\n import java.util.ArrayList;\n import java.util.List;\n \n /**\n  * A Google Cloud Datastore list value. A list value is a list of {@link Value} objects.\n  */\n+\n+\n public final class ListValue extends Value<List<? extends Value<?>>> {\n \n   private static final long serialVersionUID = -5121887228607148857L;\n \n-  static final BaseMarshaller<List<? extends Value<?>>, ListValue, Builder> MARSHALLER =\n-      new BaseMarshaller<List<? extends Value<?>>, ListValue, Builder>() {\n-\n-        private static final long serialVersionUID = 7720473855548179942L;\n-\n-        @Override\n-        public int getProtoFieldId() {\n-          return ARRAY_VALUE_FIELD_NUMBER;\n-        }\n-\n-        @Override\n-        public Builder newBuilder(List<? extends Value<?>> values) {\n-          return builder().set(values);\n-        }\n-\n-        @Override\n-        protected List<Value<?>> getValue(com.google.datastore.v1.Value from) {\n-          List<Value<?>> properties = new ArrayList<>(from.getArrayValue().getValuesCount());\n-          for (com.google.datastore.v1.Value valuePb : from.getArrayValue().getValuesList()) {\n-            properties.add(Value.fromPb(valuePb));\n-          }\n-          return properties;\n-        }\n-\n-        @Override\n-        protected void setValue(ListValue from, com.google.datastore.v1.Value.Builder to) {\n-          List<com.google.datastore.v1.Value> propertiesPb = new ArrayList<com.google.datastore.v1.Value>();\n-          for (Value<?> property : from.get()) {\n-            propertiesPb.add(property.toPb());\n-          }\n-          to.setArrayValue(com.google.datastore.v1.ArrayValue.newBuilder()\n-              .addAllValues(propertiesPb));\n-        }\n-      };\n-\n-  public static final class Builder extends\n-      Value.BaseBuilder<List<? extends Value<?>>, ListValue, Builder> {\n+  static final BaseMarshaller<List<? extends Value<?>>, ListValue, Builder> MARSHALLER = new BaseMarshaller<List<? extends Value<?>>, ListValue, Builder>() {\n+\n+                                                                                           private static final long serialVersionUID = 7720473855548179942L;\n+\n+                                                                                           @Override\n+                                                                                           public int getProtoFieldId() {\n+                                                                                             return ARRAY_VALUE_FIELD_NUMBER;\n+                                                                                           }\n+\n+                                                                                           @Override\n+                                                                                           public Builder newBuilder(List<? extends Value<?>> values) {\n+                                                                                             return builder().set(values);\n+                                                                                           }\n+\n+                                                                                           @Override\n+                                                                                           protected List<Value<?>> getValue(com.google.datastore.v1.Value from) {\n+                                                                                             List<Value<?>> properties = new ArrayList<>(from.getArrayValue().getValuesCount());\n+                                                                                             for (com.google.datastore.v1.Value valuePb : from.getArrayValue().getValuesList()) {\n+                                                                                               properties.add(Value.fromPb(valuePb));\n+                                                                                             }\n+                                                                                             return properties;\n+                                                                                           }\n+\n+                                                                                           @Override\n+                                                                                           protected void setValue(ListValue from, com.google.datastore.v1.Value.Builder to) {\n+                                                                                             List<com.google.datastore.v1.Value> propertiesPb = new ArrayList<com.google.datastore.v1.Value>();\n+                                                                                             for (Value<?> property : from.get()) {\n+                                                                                               propertiesPb.add(property.toPb());\n+                                                                                             }\n+                                                                                             to.setArrayValue(com.google.datastore.v1.ArrayValue.newBuilder().addAllValues(propertiesPb));\n+                                                                                           }\n+                                                                                         };\n+\n+  public static final class Builder extends Value.BaseBuilder<List<? extends Value<?>>, ListValue, Builder> {\n \n     private ImmutableList.Builder<Value<?>> listBuilder = ImmutableList.builder();\n \n@@ -84,6 +82,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n     /**\n      * Adds the provided values to the {@code ListValue} builder.\n      */\n+\n     public Builder addValue(Value<?> first, Value<?>... other) {\n       addValueHelper(first);\n       for (Value<?> value : other) {\n@@ -95,6 +94,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n     /**\n      * Adds the provided string values to the {@code ListValue} builder.\n      */\n+\n     public Builder addValue(String first, String... other) {\n       listBuilder.add(StringValue.of(first));\n       for (String value : other) {\n@@ -106,6 +106,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n     /**\n      * Adds the provided long values to the {@code ListValue} builder.\n      */\n+\n     public Builder addValue(long first, long... other) {\n       listBuilder.add(LongValue.of(first));\n       for (long value : other) {\n@@ -117,6 +118,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n     /**\n      * Adds the provided double values to the {@code ListValue} builder.\n      */\n+\n     public Builder addValue(double first, double... other) {\n       listBuilder.add(DoubleValue.of(first));\n       for (double value : other) {\n@@ -128,6 +130,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n     /**\n      * Adds the provided boolean values to the {@code ListValue} builder.\n      */\n+\n     public Builder addValue(boolean first, boolean... other) {\n       listBuilder.add(BooleanValue.of(first));\n       for (boolean value : other) {\n@@ -139,6 +142,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n     /**\n      * Adds the provided {@code DateTime} values to the {@code ListValue} builder.\n      */\n+\n     public Builder addValue(DateTime first, DateTime... other) {\n       listBuilder.add(DateTimeValue.of(first));\n       for (DateTime value : other) {\n@@ -150,6 +154,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n     /**\n      * Adds the provided {@code LatLng} values to the {@code ListValue} builder.\n      */\n+\n     public Builder addValue(LatLng first, LatLng... other) {\n       listBuilder.add(LatLngValue.of(first));\n       for (LatLng value : other) {\n@@ -161,6 +166,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n     /**\n      * Adds the provided {@code Key} values to the {@code ListValue} builder.\n      */\n+\n     public Builder addValue(Key first, Key... other) {\n       listBuilder.add(KeyValue.of(first));\n       for (Key value : other) {\n@@ -172,6 +178,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n     /**\n      * Adds the provided {@code FullEntity} values to the {@code ListValue} builder.\n      */\n+\n     public Builder addValue(FullEntity<?> first, FullEntity<?>... other) {\n       listBuilder.add(EntityValue.of(first));\n       for (FullEntity<?> value : other) {\n@@ -183,6 +190,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n     /**\n      * Adds the provided {@code Blob} values to the {@code ListValue} builder.\n      */\n+\n     public Builder addValue(Blob first, Blob... other) {\n       listBuilder.add(BlobValue.of(first));\n       for (Blob value : other) {\n@@ -197,6 +205,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n      *\n      * @see com.google.cloud.datastore.Value.BaseBuilder#set(java.lang.Object)\n      */\n+\n     @Override\n     public Builder set(List<? extends Value<?>> values) {\n       listBuilder = ImmutableList.builder();\n@@ -214,6 +223,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n     /**\n      * Creates a {@code ListValue} object.\n      */\n+\n     @Override\n     public ListValue build() {\n       return new ListValue(this);\n@@ -235,6 +245,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n   /**\n    * Returns a builder for the list value object.\n    */\n+\n   @Override\n   public Builder toBuilder() {\n     return new Builder().mergeFrom(this);\n@@ -243,6 +254,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n   /**\n    * Creates a {@code ListValue} object given a list of {@code Value} objects.\n    */\n+\n   public static ListValue of(List<? extends Value<?>> values) {\n     return new ListValue(values);\n   }\n@@ -250,6 +262,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n   /**\n    * Creates a {@code ListValue} object given a number of {@code Value} objects.\n    */\n+\n   public static ListValue of(Value<?> first, Value<?>... other) {\n     return new ListValue(first, other);\n   }\n@@ -257,6 +270,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n   /**\n    * Creates a {@code ListValue} object given a number of string values.\n    */\n+\n   public static ListValue of(String first, String... other) {\n     return builder().addValue(first, other).build();\n   }\n@@ -264,6 +278,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n   /**\n    * Creates a {@code ListValue} object given a number of long values.\n    */\n+\n   public static ListValue of(long first, long... other) {\n     return builder().addValue(first, other).build();\n   }\n@@ -271,6 +286,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n   /**\n    * Creates a {@code ListValue} object given a number of double values.\n    */\n+\n   public static ListValue of(double first, double... other) {\n     return builder().addValue(first, other).build();\n   }\n@@ -278,6 +294,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n   /**\n    * Creates a {@code ListValue} object given a number of boolean values.\n    */\n+\n   public static ListValue of(boolean first, boolean... other) {\n     return builder().addValue(first, other).build();\n   }\n@@ -285,6 +302,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n   /**\n    * Creates a {@code ListValue} object given a number of {@code DateTime} values.\n    */\n+\n   public static ListValue of(DateTime first, DateTime... other) {\n     return builder().addValue(first, other).build();\n   }\n@@ -292,6 +310,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n   /**\n    * Creates a {@code ListValue} object given a number of {@code LatLng} values.\n    */\n+\n   public static ListValue of(LatLng first, LatLng... other) {\n     return builder().addValue(first, other).build();\n   }\n@@ -299,6 +318,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n   /**\n    * Creates a {@code ListValue} object given a number of {@code Key} values.\n    */\n+\n   public static ListValue of(Key first, Key... other) {\n     return builder().addValue(first, other).build();\n   }\n@@ -306,6 +326,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n   /**\n    * Creates a {@code ListValue} object given a number of {@code FullEntity} values.\n    */\n+\n   public static ListValue of(FullEntity<?> first, FullEntity<?>... other) {\n     return builder().addValue(first, other).build();\n   }\n@@ -313,6 +334,7 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n   /**\n    * Creates a {@code ListValue} object given a number of {@code Blob} values.\n    */\n+\n   public static ListValue of(Blob first, Blob... other) {\n     return builder().addValue(first, other).build();\n   }\n@@ -320,7 +342,8 @@ public final class ListValue extends Value<List<? extends Value<?>>> {\n   /**\n    * Returns a builder for {@code ListValue} objects.\n    */\n+\n   public static Builder builder() {\n     return new Builder();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 66
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "60",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
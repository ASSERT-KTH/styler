{
    "project_name": "neo4j-neo4j",
    "error_id": "871",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "111",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "82",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/871/NodeRecordFormat.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/871/NodeRecordFormat.java\nindex c33a6c4c1f4..656b274de15 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/871/NodeRecordFormat.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/871/NodeRecordFormat.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.format.standard;\n \n import org.neo4j.io.pagecache.PageCursor;\n@@ -33,27 +34,27 @@ public class NodeRecordFormat extends BaseOneByteHeaderRecordFormat<NodeRecord>\n \n     public NodeRecordFormat()\n     {\n-        this( false );\n+        this(false);\n     }\n \n-    public NodeRecordFormat( boolean pageAligned )\n+    public NodeRecordFormat(boolean pageAligned)\n     {\n-        super( fixedRecordSize( RECORD_SIZE ), 0, IN_USE_BIT, StandardFormatSettings.NODE_MAXIMUM_ID_BITS, pageAligned );\n+        super(fixedRecordSize(RECORD_SIZE), 0, IN_USE_BIT, StandardFormatSettings.NODE_MAXIMUM_ID_BITS, pageAligned);\n     }\n \n     @Override\n     public NodeRecord newRecord()\n     {\n-        return new NodeRecord( -1 );\n+        return new NodeRecord(-1);\n     }\n \n     @Override\n-    public void read( NodeRecord record, PageCursor cursor, RecordLoad mode, int recordSize, int recordsPerPage )\n+    public void read(NodeRecord record, PageCursor cursor, RecordLoad mode, int recordSize, int recordsPerPage)\n     {\n         byte headerByte = cursor.getByte();\n-        boolean inUse = isInUse( headerByte );\n-        record.setInUse( inUse );\n-        if ( mode.shouldLoad( inUse ) )\n+        boolean inUse = isInUse(headerByte);\n+        record.setInUse(inUse);\n+        if (mode.shouldLoad(inUse))\n         {\n             long nextRel = cursor.getInt() & 0xFFFFFFFFL;\n             long nextProp = cursor.getInt() & 0xFFFFFFFFL;\n@@ -67,50 +68,48 @@ public class NodeRecordFormat extends BaseOneByteHeaderRecordFormat<NodeRecord>\n             byte extra = cursor.getByte();\n             boolean dense = (extra & 0x1) > 0;\n \n-            record.initialize( inUse,\n-                    BaseRecordFormat.longFromIntAndMod( nextProp, propModifier ), dense,\n-                    BaseRecordFormat.longFromIntAndMod( nextRel, relModifier ), labels );\n-        }\n-        else\n+            record.initialize(inUse,\n+              BaseRecordFormat.longFromIntAndMod(nextProp, propModifier), dense,\n+              BaseRecordFormat.longFromIntAndMod(nextRel, relModifier), labels);\n+        } else\n         {\n             int nextOffset = cursor.getOffset() + recordSize - HEADER_SIZE;\n-            cursor.setOffset( nextOffset );\n+            cursor.setOffset(nextOffset);\n         }\n     }\n \n     @Override\n-    public void write( NodeRecord record, PageCursor cursor, int recordSize, int recordsPerPage )\n+    public void write(NodeRecord record, PageCursor cursor, int recordSize, int recordsPerPage)\n     {\n-        if ( record.inUse() )\n+        if (record.inUse())\n         {\n             long nextRel = record.getNextRel();\n             long nextProp = record.getNextProp();\n \n-            short relModifier = nextRel == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (short)((nextRel & 0x700000000L) >> 31);\n-            short propModifier = nextProp == Record.NO_NEXT_PROPERTY.intValue() ? 0 : (short)((nextProp & 0xF00000000L) >> 28);\n+            short relModifier = nextRel == Record.NO_NEXT_RELATIONSHIP.intValue() ? 0 : (short) ((nextRel & 0x700000000L) >> 31);\n+            short propModifier = nextProp == Record.NO_NEXT_PROPERTY.intValue() ? 0 : (short) ((nextProp & 0xF00000000L) >> 28);\n \n             // [    ,   x] in use bit\n             // [    ,xxx ] higher bits for rel id\n             // [xxxx,    ] higher bits for prop id\n-            short inUseUnsignedByte = ( record.inUse() ? Record.IN_USE : Record.NOT_IN_USE ).byteValue();\n-            inUseUnsignedByte = (short) ( inUseUnsignedByte | relModifier | propModifier );\n+            short inUseUnsignedByte = (record.inUse() ? Record.IN_USE : Record.NOT_IN_USE).byteValue();\n+            inUseUnsignedByte = (short) (inUseUnsignedByte | relModifier | propModifier);\n \n-            cursor.putByte( (byte) inUseUnsignedByte );\n-            cursor.putInt( (int) nextRel );\n-            cursor.putInt( (int) nextProp );\n+            cursor.putByte((byte) inUseUnsignedByte);\n+            cursor.putInt((int) nextRel);\n+            cursor.putInt((int) nextProp);\n \n             // lsb of labels\n             long labelField = record.getLabelField();\n-            cursor.putInt( (int) labelField );\n+            cursor.putInt((int) labelField);\n             // msb of labels\n-            cursor.putByte( (byte) ((labelField & 0xFF00000000L) >> 32) );\n+            cursor.putByte((byte) ((labelField & 0xFF00000000L) >> 32));\n \n-            byte extra = record.isDense() ? (byte)1 : (byte)0;\n-            cursor.putByte( extra );\n-        }\n-        else\n+            byte extra = record.isDense() ? (byte) 1 : (byte) 0;\n+            cursor.putByte(extra);\n+        } else\n         {\n-            markAsUnused( cursor );\n+            markAsUnused(cursor);\n         }\n     }\n }\n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Activiti-Activiti",
    "error_id": "127",
    "information": {
        "errors": [
            {
                "line": "13",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * limitations under the License.\n */\npackage org.activiti.engine.delegate.event.impl;\n\nimport org.activiti.engine.ActivitiIllegalArgumentException;\nimport org.activiti.engine.delegate.event.ActivitiEvent;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/127/ActivitiEventImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/127/ActivitiEventImpl.java\nindex 7cf0ffa2dba..275bd3b4a9d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/127/ActivitiEventImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler/127/ActivitiEventImpl.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.delegate.event.impl;\n \n import org.activiti.engine.ActivitiIllegalArgumentException;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/127/ActivitiEventImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/127/ActivitiEventImpl.java\nindex 7cf0ffa2dba..ed2c3b6f300 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/127/ActivitiEventImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/intellij/127/ActivitiEventImpl.java\n@@ -1,15 +1,16 @@\n /* Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- * \n+ *\n  *      http://www.apache.org/licenses/LICENSE-2.0\n- * \n+ *\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.delegate.event.impl;\n \n import org.activiti.engine.ActivitiIllegalArgumentException;\n@@ -18,71 +19,69 @@ import org.activiti.engine.delegate.event.ActivitiEventType;\n \n /**\n  * Base class for all {@link ActivitiEvent} implementations.\n- * \n-\n  */\n public class ActivitiEventImpl implements ActivitiEvent {\n \n-  protected ActivitiEventType type;\n-  protected String executionId;\n-  protected String processInstanceId;\n-  protected String processDefinitionId;\n-\n-  /**\n-   * Creates a new event implementation, not part of an execution context.\n-   */\n-  public ActivitiEventImpl(ActivitiEventType type) {\n-    this(type, null, null, null);\n-  }\n-\n-  /**\n-   * Creates a new event implementation, part of an execution context.\n-   */\n-  public ActivitiEventImpl(ActivitiEventType type, String executionId, String processInstanceId, String processDefinitionId) {\n-    if (type == null) {\n-      throw new ActivitiIllegalArgumentException(\"type is null\");\n+    protected ActivitiEventType type;\n+    protected String executionId;\n+    protected String processInstanceId;\n+    protected String processDefinitionId;\n+\n+    /**\n+     * Creates a new event implementation, not part of an execution context.\n+     */\n+    public ActivitiEventImpl(ActivitiEventType type) {\n+        this(type, null, null, null);\n+    }\n+\n+    /**\n+     * Creates a new event implementation, part of an execution context.\n+     */\n+    public ActivitiEventImpl(ActivitiEventType type, String executionId, String processInstanceId, String processDefinitionId) {\n+        if (type == null) {\n+            throw new ActivitiIllegalArgumentException(\"type is null\");\n+        }\n+        this.type = type;\n+        this.executionId = executionId;\n+        this.processInstanceId = processInstanceId;\n+        this.processDefinitionId = processDefinitionId;\n+    }\n+\n+    public ActivitiEventType getType() {\n+        return type;\n+    }\n+\n+    public void setType(ActivitiEventType type) {\n+        this.type = type;\n+    }\n+\n+    public String getExecutionId() {\n+        return executionId;\n+    }\n+\n+    public void setExecutionId(String executionId) {\n+        this.executionId = executionId;\n+    }\n+\n+    public String getProcessDefinitionId() {\n+        return processDefinitionId;\n+    }\n+\n+    public void setProcessDefinitionId(String processDefinitionId) {\n+        this.processDefinitionId = processDefinitionId;\n+    }\n+\n+    public String getProcessInstanceId() {\n+        return processInstanceId;\n+    }\n+\n+    public void setProcessInstanceId(String processInstanceId) {\n+        this.processInstanceId = processInstanceId;\n     }\n-    this.type = type;\n-    this.executionId = executionId;\n-    this.processInstanceId = processInstanceId;\n-    this.processDefinitionId = processDefinitionId;\n-  }\n-\n-  public ActivitiEventType getType() {\n-    return type;\n-  }\n-\n-  public void setType(ActivitiEventType type) {\n-    this.type = type;\n-  }\n-\n-  public String getExecutionId() {\n-    return executionId;\n-  }\n-\n-  public void setExecutionId(String executionId) {\n-    this.executionId = executionId;\n-  }\n-\n-  public String getProcessDefinitionId() {\n-    return processDefinitionId;\n-  }\n-\n-  public void setProcessDefinitionId(String processDefinitionId) {\n-    this.processDefinitionId = processDefinitionId;\n-  }\n-\n-  public String getProcessInstanceId() {\n-    return processInstanceId;\n-  }\n-\n-  public void setProcessInstanceId(String processInstanceId) {\n-    this.processInstanceId = processInstanceId;\n-  }\n-\n-  @Override\n-  public String toString() {\n-    return getClass() + \" - \" + type;\n-  }\n-  \n+\n+    @Override\n+    public String toString() {\n+        return getClass() + \" - \" + type;\n+    }\n+\n }\n",
            "diff_size": 103
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "13",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "'CLASS_DEF' has more than 1 empty lines before.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/127/ActivitiEventImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/127/ActivitiEventImpl.java\nindex 7cf0ffa2dba..4c4a45d14c0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/127/ActivitiEventImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/codebuff/127/ActivitiEventImpl.java\n@@ -21,6 +21,8 @@ import org.activiti.engine.delegate.event.ActivitiEventType;\n  * \n \n  */\n+\n+\n public class ActivitiEventImpl implements ActivitiEvent {\n \n   protected ActivitiEventType type;\n@@ -31,6 +33,7 @@ public class ActivitiEventImpl implements ActivitiEvent {\n   /**\n    * Creates a new event implementation, not part of an execution context.\n    */\n+\n   public ActivitiEventImpl(ActivitiEventType type) {\n     this(type, null, null, null);\n   }\n@@ -38,6 +41,7 @@ public class ActivitiEventImpl implements ActivitiEvent {\n   /**\n    * Creates a new event implementation, part of an execution context.\n    */\n+\n   public ActivitiEventImpl(ActivitiEventType type, String executionId, String processInstanceId, String processDefinitionId) {\n     if (type == null) {\n       throw new ActivitiIllegalArgumentException(\"type is null\");\n@@ -84,5 +88,4 @@ public class ActivitiEventImpl implements ActivitiEvent {\n   public String toString() {\n     return getClass() + \" - \" + type;\n   }\n-  \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/127/ActivitiEventImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/127/ActivitiEventImpl.java\nindex 7cf0ffa2dba..275bd3b4a9d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/127/ActivitiEventImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_random/127/ActivitiEventImpl.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.delegate.event.impl;\n \n import org.activiti.engine.ActivitiIllegalArgumentException;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/127/ActivitiEventImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/127/ActivitiEventImpl.java\nindex 7cf0ffa2dba..275bd3b4a9d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/errored/1/127/ActivitiEventImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Activiti-Activiti/styler_three_grams/127/ActivitiEventImpl.java\n@@ -10,6 +10,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.activiti.engine.delegate.event.impl;\n \n import org.activiti.engine.ActivitiIllegalArgumentException;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
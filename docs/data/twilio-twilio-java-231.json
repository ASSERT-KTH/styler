{
    "project_name": "twilio-twilio-java",
    "error_id": "231",
    "information": {
        "errors": [
            {
                "line": "183",
                "severity": "error",
                "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
                "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
            }
        ]
    },
    "source_code": "                throw new ApiException(\"Server Error, no content\");\n            }\n           throw new ApiException(restException);\n        }\n\n        return Page.fromJson(",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/231/BundleReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/231/BundleReader.java\nindex 42eb33a49fb..780ec5456a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/231/BundleReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler/231/BundleReader.java\n@@ -180,7 +180,7 @@ public class BundleReader extends Reader<Bundle> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/231/BundleReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/231/BundleReader.java\nindex 42eb33a49fb..7f1d08c0f51 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/231/BundleReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/intellij/231/BundleReader.java\n@@ -1,8 +1,8 @@\n /**\n  * This code was generated by\n  * \\ / _    _  _|   _  _\n- *  | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n- *       /       /\n+ * | (_)\\/(_)(_|\\/| |(/_  v1.0.0\n+ * /       /\n  */\n \n package com.twilio.rest.numbers.v2.regulatorycompliance;\n@@ -180,7 +180,7 @@ public class BundleReader extends Reader<Bundle> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 3
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/231/BundleReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/231/BundleReader.java\nindex 42eb33a49fb..6776c81d896 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/231/BundleReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/codebuff/231/BundleReader.java\n@@ -32,6 +32,7 @@ public class BundleReader extends Reader<Bundle> {\n      * @param status The verification status of the Bundle resource\n      * @return this\n      */\n+\n     public BundleReader setStatus(final Bundle.Status status) {\n         this.status = status;\n         return this;\n@@ -43,6 +44,8 @@ public class BundleReader extends Reader<Bundle> {\n      * @param friendlyName The string that you assigned to describe the resource\n      * @return this\n      */\n+\n+\n     public BundleReader setFriendlyName(final String friendlyName) {\n         this.friendlyName = friendlyName;\n         return this;\n@@ -54,6 +57,8 @@ public class BundleReader extends Reader<Bundle> {\n      * @param regulationSid The unique string of a regulation.\n      * @return this\n      */\n+\n+\n     public BundleReader setRegulationSid(final String regulationSid) {\n         this.regulationSid = regulationSid;\n         return this;\n@@ -65,6 +70,8 @@ public class BundleReader extends Reader<Bundle> {\n      * @param isoCountry The ISO country code of the country\n      * @return this\n      */\n+\n+\n     public BundleReader setIsoCountry(final String isoCountry) {\n         this.isoCountry = isoCountry;\n         return this;\n@@ -76,6 +83,8 @@ public class BundleReader extends Reader<Bundle> {\n      * @param numberType The type of phone number\n      * @return this\n      */\n+\n+\n     public BundleReader setNumberType(final String numberType) {\n         this.numberType = numberType;\n         return this;\n@@ -87,6 +96,7 @@ public class BundleReader extends Reader<Bundle> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Bundle ResourceSet\n      */\n+\n     @Override\n     public ResourceSet<Bundle> read(final TwilioRestClient client) {\n         return new ResourceSet<>(this, client, firstPage(client));\n@@ -98,14 +108,11 @@ public class BundleReader extends Reader<Bundle> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Bundle ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n     public Page<Bundle> firstPage(final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            Domains.NUMBERS.toString(),\n-            \"/v2/RegulatoryCompliance/Bundles\"\n-        );\n+        Request request = new Request(HttpMethod.GET, Domains.NUMBERS.toString(), \"/v2/RegulatoryCompliance/Bundles\");\n \n         addQueryParams(request);\n         return pageForRequest(client, request);\n@@ -118,14 +125,12 @@ public class BundleReader extends Reader<Bundle> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Bundle ResourceSet\n      */\n+\n     @Override\n     @SuppressWarnings(\"checkstyle:linelength\")\n-    public Page<Bundle> getPage(final String targetUrl, final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            targetUrl\n-        );\n-\n+    public Page<Bundle> getPage(final String targetUrl,\n+                                final TwilioRestClient client) {\n+        Request request = new Request(HttpMethod.GET, targetUrl);\n         return pageForRequest(client, request);\n     }\n \n@@ -136,13 +141,11 @@ public class BundleReader extends Reader<Bundle> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Next Page\n      */\n+\n     @Override\n     public Page<Bundle> nextPage(final Page<Bundle> page,\n                                  final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getNextPageUrl(Domains.NUMBERS.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getNextPageUrl(Domains.NUMBERS.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -153,13 +156,11 @@ public class BundleReader extends Reader<Bundle> {\n      * @param client TwilioRestClient with which to make the request\n      * @return Previous Page\n      */\n+\n     @Override\n     public Page<Bundle> previousPage(final Page<Bundle> page,\n                                      final TwilioRestClient client) {\n-        Request request = new Request(\n-            HttpMethod.GET,\n-            page.getPreviousPageUrl(Domains.NUMBERS.toString())\n-        );\n+        Request request = new Request(HttpMethod.GET, page.getPreviousPageUrl(Domains.NUMBERS.toString()));\n         return pageForRequest(client, request);\n     }\n \n@@ -170,9 +171,11 @@ public class BundleReader extends Reader<Bundle> {\n      * @param request Request to generate a page for\n      * @return Page for the Request\n      */\n-    private Page<Bundle> pageForRequest(final TwilioRestClient client, final Request request) {\n-        Response response = client.request(request);\n \n+\n+    private Page<Bundle> pageForRequest(final TwilioRestClient client,\n+                                        final Request request) {\n+        Response response = client.request(request);\n         if (response == null) {\n             throw new ApiConnectionException(\"Bundle read failed: Unable to connect to server\");\n         } else if (!TwilioRestClient.SUCCESS.test(response.getStatusCode())) {\n@@ -180,15 +183,11 @@ public class BundleReader extends Reader<Bundle> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n-        return Page.fromJson(\n-            \"results\",\n-            response.getContent(),\n-            Bundle.class,\n-            client.getObjectMapper()\n-        );\n+        return Page.fromJson(\"results\", response.getContent(), Bundle.class, client.getObjectMapper());\n     }\n \n     /**\n@@ -196,6 +195,8 @@ public class BundleReader extends Reader<Bundle> {\n      *\n      * @param request Request to add query string arguments to\n      */\n+\n+\n     private void addQueryParams(final Request request) {\n         if (status != null) {\n             request.addQueryParam(\"Status\", status.toString());\n",
            "diff_size": 49
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/231/BundleReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/231/BundleReader.java\nindex 42eb33a49fb..780ec5456a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/231/BundleReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_random/231/BundleReader.java\n@@ -180,7 +180,7 @@ public class BundleReader extends Reader<Bundle> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/231/BundleReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/231/BundleReader.java\nindex 42eb33a49fb..0de0a74a0ce 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/errored/1/231/BundleReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/twilio-twilio-java/styler_three_grams/231/BundleReader.java\n@@ -180,7 +180,8 @@ public class BundleReader extends Reader<Bundle> {\n             if (restException == null) {\n                 throw new ApiException(\"Server Error, no content\");\n             }\n-           throw new ApiException(restException);\n+\n+            throw new ApiException(restException);\n         }\n \n         return Page.fromJson(\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
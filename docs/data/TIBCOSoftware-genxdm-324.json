{
    "project_name": "TIBCOSoftware-genxdm",
    "error_id": "324",
    "information": {
        "errors": [
            {
                "line": "11",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "\npublic class TestDocumentCreationWithModel extends BaseBareDomPerfTest {\n\tstatic final String DOC_CREATE_DEPTH_NAME = \"depth\";\n\tstatic final int DOC_CREATE_DEPTH_DEFAULT = 3;\n\tstatic final String DOC_CREATE_WIDTH_NAME = \"width\";\n\tstatic final int DOC_CREATE_WIDTH_DEFAULT = 10;",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "12",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/324/TestDocumentCreationWithModel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/324/TestDocumentCreationWithModel.java\nindex 46532bde23b..2dcca74dab0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/324/TestDocumentCreationWithModel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler/324/TestDocumentCreationWithModel.java\n@@ -8,7 +8,7 @@ import org.w3c.dom.Node;\n import org.w3c.dom.Text;\r\n \r\n public class TestDocumentCreationWithModel extends BaseBareDomPerfTest {\r\n-\tstatic final String DOC_CREATE_DEPTH_NAME = \"depth\";\r\n+static final String DOC_CREATE_DEPTH_NAME = \"depth\";\r\n \tstatic final int DOC_CREATE_DEPTH_DEFAULT = 3;\r\n \tstatic final String DOC_CREATE_WIDTH_NAME = \"width\";\r\n \tstatic final int DOC_CREATE_WIDTH_DEFAULT = 10;\r\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/324/TestDocumentCreationWithModel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/324/TestDocumentCreationWithModel.java\nindex 46532bde23b..024d8f0ebe6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/324/TestDocumentCreationWithModel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/intellij/324/TestDocumentCreationWithModel.java\n@@ -8,99 +8,119 @@ import org.w3c.dom.Node;\n import org.w3c.dom.Text;\r\n \r\n public class TestDocumentCreationWithModel extends BaseBareDomPerfTest {\r\n-\tstatic final String DOC_CREATE_DEPTH_NAME = \"depth\";\r\n-\tstatic final int DOC_CREATE_DEPTH_DEFAULT = 3;\r\n-\tstatic final String DOC_CREATE_WIDTH_NAME = \"width\";\r\n-\tstatic final int DOC_CREATE_WIDTH_DEFAULT = 10;\r\n-\tprivate static final String DOCUMENT_CREATE_NS = \"http://com.tibco.com/test\";\r\n-\tprivate static final String DOCUMENT_CREATE_PREFIX = \"ns\";\r\n-\tprivate static final String DOCUMENT_CREATE_ROOT_NAME = \"root\";\r\n-\tprivate static final String DOCUMENT_CREATE_CHILD_NAME = \"child\";\r\n-\tprivate static final String[][] DOCUMENT_CREATE_ATTS = {\r\n-\t\t{\"att0\",\"0.0\"}, {\"att1\",\"1.0\"}, {\"att2\",\"2.0\"}, {\"att3\",\"string3\"},\r\n-\t\t\t{\"att4\",\"string4\"}, {\"att5\",\"2010-12-10T14:43:55+04:00\"}\r\n-\t};\r\n-\tprivate static final String[] DOCUMENT_CREATE_TEXT_VALUES = {\r\n-\t\t\"Hello\",\" \", \"world!\", \"\\n\" \r\n-\t};\r\n-\r\n-\tint m_depth;\r\n-\tint m_width;\r\n-\t@Override\r\n-\tpublic void initialSetup(Map<String,Object> props)\r\n-\t{\r\n-\t\tsuper.initialSetup(props);\r\n-\t\tString depth = (String)props.get(DOC_CREATE_DEPTH_NAME);\r\n-\t\tif(depth == null)\r\n-\t\t\tm_depth = DOC_CREATE_DEPTH_DEFAULT;\r\n-\t\telse\r\n-\t\t\tm_depth = Integer.parseInt(depth);\r\n-\r\n-\t\tString width = (String)props.get(DOC_CREATE_WIDTH_NAME);\r\n-\t\tif(width == null)\r\n-\t\t\tm_width = DOC_CREATE_WIDTH_DEFAULT;\r\n-\t\telse\r\n-\t\t\tm_width = Integer.parseInt(width);\r\n-\t\t\r\n-\t}\r\n-\t@Override\r\n-\tpublic String getTestName() {\r\n-\t\tlong size = 1;\r\n-\t\tfor(int icnt = 1; icnt <= m_depth; icnt++)\r\n-\t\t{\r\n-\t\t\tsize += Math.pow(m_width, icnt);\r\n-\t\t}\r\n-\t\treturn \"Document creation via model: \" + size + \" elements\";\r\n-\t}\r\n-\t\r\n-\t@Override\r\n-\tpublic void iterativeSetup() {}\r\n-\t\r\n-\t@Override\r\n-\tpublic void execute() {\r\n-\t\t/* // Create a new document. */\r\n-\t\tDocument document = m_builder.newDocument();\r\n-\r\n-\t\tElement root = document.createElementNS(DOCUMENT_CREATE_NS, DOCUMENT_CREATE_PREFIX + \":\" + DOCUMENT_CREATE_ROOT_NAME);\r\n-\r\n-\t\t// Append the document element to the documentNode.\r\n-\t\tdocument.appendChild(root);\r\n-\r\n-\t\tappendChildren(document, root, DOCUMENT_CREATE_NS, DOCUMENT_CREATE_PREFIX, DOCUMENT_CREATE_CHILD_NAME, DOCUMENT_CREATE_ATTS, DOCUMENT_CREATE_TEXT_VALUES, m_depth, m_width);\r\n-\t}\r\n-\tprivate void appendChildren(Document doc, Node parent, String ns, String prefix, String childName, \r\n-\t\t\tString[][] atts, String textValues[], int depth, int width)\r\n-\t{\r\n-\t\t// Add children\r\n-\t\tfor(int icnt = 0; icnt < width; icnt++)\r\n-\t\t{\r\n-\t\t\tfinal Element childElement = doc.createElementNS(ns, prefix+\":\"+childName + \"_\" + depth + \"_\" + icnt);\r\n-\t\t\tparent.appendChild(childElement);\r\n-\t\t\t\r\n-\t\t\t// Add attributes\r\n-\t\t\tfor(String[] att : atts)\r\n-\t\t\t{\r\n-\t\t\t\tchildElement.setAttributeNS(ns, prefix+\":\"+att[0], att[1]);\r\n-\t\t\t}\r\n-\t\t\t// If not leaf node, add children\r\n-\t\t\tif(depth > 1)\r\n-\t\t\t{\r\n-\t\t\t\tappendChildren(doc, childElement, ns, prefix, childName, atts, textValues, depth - 1 , width);\r\n-\t\t\t}\r\n-\t\t\t// Else if leaf node, add text values\r\n-\t\t\telse\r\n-\t\t\t{\r\n-\t\t\t\tfor(String textValue : textValues)\r\n-\t\t\t\t{\r\n-\t\t\t\t\tText text = doc.createTextNode(textValue);\r\n-\t\t\t\t\tchildElement.appendChild(text);\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t}\r\n-\t}\r\n-\t@Override\r\n-\tpublic Iterable<String> iterativeTeardown() { return null; }\r\n-\t\r\n-\t@Override\r\n-\tpublic void finalTeardown() {};\r\n+    static final String DOC_CREATE_DEPTH_NAME = \"depth\";\r\n+\r\n+    static final int DOC_CREATE_DEPTH_DEFAULT = 3;\r\n+\r\n+    static final String DOC_CREATE_WIDTH_NAME = \"width\";\r\n+\r\n+    static final int DOC_CREATE_WIDTH_DEFAULT = 10;\r\n+\r\n+    private static final String DOCUMENT_CREATE_NS = \"http://com.tibco.com/test\";\r\n+\r\n+    private static final String DOCUMENT_CREATE_PREFIX = \"ns\";\r\n+\r\n+    private static final String DOCUMENT_CREATE_ROOT_NAME = \"root\";\r\n+\r\n+    private static final String DOCUMENT_CREATE_CHILD_NAME = \"child\";\r\n+\r\n+    private static final String[][] DOCUMENT_CREATE_ATTS = {\r\n+        {\"att0\", \"0.0\"}, {\"att1\", \"1.0\"}, {\"att2\", \"2.0\"}, {\"att3\", \"string3\"},\r\n+        {\"att4\", \"string4\"}, {\"att5\", \"2010-12-10T14:43:55+04:00\"}\r\n+    };\r\n+\r\n+    private static final String[] DOCUMENT_CREATE_TEXT_VALUES = {\r\n+        \"Hello\", \" \", \"world!\", \"\\n\"\r\n+    };\r\n+\r\n+    int m_depth;\r\n+\r\n+    int m_width;\r\n+\r\n+    @Override\r\n+    public void initialSetup(Map<String, Object> props) {\r\n+        super.initialSetup(props);\r\n+        String depth = (String) props.get(DOC_CREATE_DEPTH_NAME);\r\n+        if (depth == null) {\r\n+            m_depth = DOC_CREATE_DEPTH_DEFAULT;\r\n+        } else {\r\n+            m_depth = Integer.parseInt(depth);\r\n+        }\r\n+\r\n+        String width = (String) props.get(DOC_CREATE_WIDTH_NAME);\r\n+        if (width == null) {\r\n+            m_width = DOC_CREATE_WIDTH_DEFAULT;\r\n+        } else {\r\n+            m_width = Integer.parseInt(width);\r\n+        }\r\n+\r\n+    }\r\n+\r\n+    @Override\r\n+    public String getTestName() {\r\n+        long size = 1;\r\n+        for (int icnt = 1; icnt <= m_depth; icnt++) {\r\n+            size += Math.pow(m_width, icnt);\r\n+        }\r\n+        return \"Document creation via model: \" + size + \" elements\";\r\n+    }\r\n+\r\n+    @Override\r\n+    public void iterativeSetup() {\r\n+    }\r\n+\r\n+    @Override\r\n+    public void execute() {\r\n+        /* // Create a new document. */\r\n+        Document document = m_builder.newDocument();\r\n+\r\n+        Element root = document.createElementNS(DOCUMENT_CREATE_NS,\r\n+            DOCUMENT_CREATE_PREFIX + \":\" + DOCUMENT_CREATE_ROOT_NAME);\r\n+\r\n+        // Append the document element to the documentNode.\r\n+        document.appendChild(root);\r\n+\r\n+        appendChildren(document, root, DOCUMENT_CREATE_NS, DOCUMENT_CREATE_PREFIX,\r\n+            DOCUMENT_CREATE_CHILD_NAME, DOCUMENT_CREATE_ATTS, DOCUMENT_CREATE_TEXT_VALUES, m_depth,\r\n+            m_width);\r\n+    }\r\n+\r\n+    private void appendChildren(Document doc, Node parent, String ns, String prefix,\r\n+                                String childName,\r\n+                                String[][] atts, String textValues[], int depth, int width) {\r\n+        // Add children\r\n+        for (int icnt = 0; icnt < width; icnt++) {\r\n+            final Element childElement =\r\n+                doc.createElementNS(ns, prefix + \":\" + childName + \"_\" + depth + \"_\" + icnt);\r\n+            parent.appendChild(childElement);\r\n+\r\n+            // Add attributes\r\n+            for (String[] att : atts) {\r\n+                childElement.setAttributeNS(ns, prefix + \":\" + att[0], att[1]);\r\n+            }\r\n+            // If not leaf node, add children\r\n+            if (depth > 1) {\r\n+                appendChildren(doc, childElement, ns, prefix, childName, atts, textValues,\r\n+                    depth - 1, width);\r\n+            }\r\n+            // Else if leaf node, add text values\r\n+            else {\r\n+                for (String textValue : textValues) {\r\n+                    Text text = doc.createTextNode(textValue);\r\n+                    childElement.appendChild(text);\r\n+                }\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    @Override\r\n+    public Iterable<String> iterativeTeardown() {\r\n+        return null;\r\n+    }\r\n+\r\n+    @Override\r\n+    public void finalTeardown() {\r\n+    }\r\n+\r\n+    ;\r\n }\r\n",
            "diff_size": 115
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/324/TestDocumentCreationWithModel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/324/TestDocumentCreationWithModel.java\nindex 46532bde23b..8256a8b2f4b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/324/TestDocumentCreationWithModel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/codebuff/324/TestDocumentCreationWithModel.java\n@@ -1,106 +1,114 @@\n-package org.genxdm.samples.performance.dom;\r\n+package org.genxdm.samples.performance.dom;\n+\n+import java.util.Map;\n+import org.w3c.dom.Document;\n+import org.w3c.dom.Element;\n+import org.w3c.dom.Node;\n+import org.w3c.dom.Text;\n+\n+public class TestDocumentCreationWithModel extends BaseBareDomPerfTest\n+{\n+    static final String DOC_CREATE_DEPTH_NAME = \"depth\";\n+    static final int DOC_CREATE_DEPTH_DEFAULT = 3;\n+    static final String DOC_CREATE_WIDTH_NAME = \"width\";\n+    static final int DOC_CREATE_WIDTH_DEFAULT = 10;\n+    private static final String DOCUMENT_CREATE_NS = \"http://com.tibco.com/test\";\n+    private static final String DOCUMENT_CREATE_PREFIX = \"ns\";\n+    private static final String DOCUMENT_CREATE_ROOT_NAME = \"root\";\n+    private static final String DOCUMENT_CREATE_CHILD_NAME = \"child\";\n+    private static final String[][] DOCUMENT_CREATE_ATTS = { { \"att0\", \"0.0\" }, { \"att1\", \"1.0\" }, { \"att2\", \"2.0\" }, { \"att3\", \"string3\" }, { \"att4\", \"string4\" }, { \"att5\", \"2010-12-10T14:43:55+04:00\" } };\n+    private static final String[] DOCUMENT_CREATE_TEXT_VALUES = { \"Hello\", \" \", \"world!\", \"\\n\" };\n+    int m_depth;\n+    int m_width;\n+\n+    @Override\n+    public void initialSetup(Map<String, Object> props)\n+    {\n+        super.initialSetup(props);\n+        String depth = (String)props.get(DOC_CREATE_DEPTH_NAME);\n+        if (depth == null)\n+            m_depth = DOC_CREATE_DEPTH_DEFAULT;\n+        else\n+            m_depth = Integer.parseInt(depth);\n+        String width = (String)props.get(DOC_CREATE_WIDTH_NAME);\n+        if (width == null)\n+            m_width = DOC_CREATE_WIDTH_DEFAULT;\n+        else\n+            m_width = Integer.parseInt(width);\n+    }\n+\n+    @Override\n+    public String getTestName()\n+    {\n+        long size = 1;\n+        for (int icnt = 1; icnt <= m_depth; icnt++)\n+        {\n+            size += Math.pow(m_width, icnt);\n+        }\n+        return \"Document creation via model: \" + size + \" elements\";\n+    }\n+\n+    @Override\n+    public void iterativeSetup()\n+    {\n+\n+\n+    }\n+\n+    @Override\n+    public void execute()\n+    {\r\n+        /* // Create a new document. */\n+        Document document = m_builder.newDocument();\n+        Element root = document.createElementNS(DOCUMENT_CREATE_NS, DOCUMENT_CREATE_PREFIX + \":\" + DOCUMENT_CREATE_ROOT_NAME);\r\n \r\n-import java.util.Map;\r\n-\r\n-import org.w3c.dom.Document;\r\n-import org.w3c.dom.Element;\r\n-import org.w3c.dom.Node;\r\n-import org.w3c.dom.Text;\r\n-\r\n-public class TestDocumentCreationWithModel extends BaseBareDomPerfTest {\r\n-\tstatic final String DOC_CREATE_DEPTH_NAME = \"depth\";\r\n-\tstatic final int DOC_CREATE_DEPTH_DEFAULT = 3;\r\n-\tstatic final String DOC_CREATE_WIDTH_NAME = \"width\";\r\n-\tstatic final int DOC_CREATE_WIDTH_DEFAULT = 10;\r\n-\tprivate static final String DOCUMENT_CREATE_NS = \"http://com.tibco.com/test\";\r\n-\tprivate static final String DOCUMENT_CREATE_PREFIX = \"ns\";\r\n-\tprivate static final String DOCUMENT_CREATE_ROOT_NAME = \"root\";\r\n-\tprivate static final String DOCUMENT_CREATE_CHILD_NAME = \"child\";\r\n-\tprivate static final String[][] DOCUMENT_CREATE_ATTS = {\r\n-\t\t{\"att0\",\"0.0\"}, {\"att1\",\"1.0\"}, {\"att2\",\"2.0\"}, {\"att3\",\"string3\"},\r\n-\t\t\t{\"att4\",\"string4\"}, {\"att5\",\"2010-12-10T14:43:55+04:00\"}\r\n-\t};\r\n-\tprivate static final String[] DOCUMENT_CREATE_TEXT_VALUES = {\r\n-\t\t\"Hello\",\" \", \"world!\", \"\\n\" \r\n-\t};\r\n-\r\n-\tint m_depth;\r\n-\tint m_width;\r\n-\t@Override\r\n-\tpublic void initialSetup(Map<String,Object> props)\r\n-\t{\r\n-\t\tsuper.initialSetup(props);\r\n-\t\tString depth = (String)props.get(DOC_CREATE_DEPTH_NAME);\r\n-\t\tif(depth == null)\r\n-\t\t\tm_depth = DOC_CREATE_DEPTH_DEFAULT;\r\n-\t\telse\r\n-\t\t\tm_depth = Integer.parseInt(depth);\r\n-\r\n-\t\tString width = (String)props.get(DOC_CREATE_WIDTH_NAME);\r\n-\t\tif(width == null)\r\n-\t\t\tm_width = DOC_CREATE_WIDTH_DEFAULT;\r\n-\t\telse\r\n-\t\t\tm_width = Integer.parseInt(width);\r\n-\t\t\r\n-\t}\r\n-\t@Override\r\n-\tpublic String getTestName() {\r\n-\t\tlong size = 1;\r\n-\t\tfor(int icnt = 1; icnt <= m_depth; icnt++)\r\n-\t\t{\r\n-\t\t\tsize += Math.pow(m_width, icnt);\r\n-\t\t}\r\n-\t\treturn \"Document creation via model: \" + size + \" elements\";\r\n-\t}\r\n-\t\r\n-\t@Override\r\n-\tpublic void iterativeSetup() {}\r\n-\t\r\n-\t@Override\r\n-\tpublic void execute() {\r\n-\t\t/* // Create a new document. */\r\n-\t\tDocument document = m_builder.newDocument();\r\n-\r\n-\t\tElement root = document.createElementNS(DOCUMENT_CREATE_NS, DOCUMENT_CREATE_PREFIX + \":\" + DOCUMENT_CREATE_ROOT_NAME);\r\n-\r\n-\t\t// Append the document element to the documentNode.\r\n-\t\tdocument.appendChild(root);\r\n-\r\n-\t\tappendChildren(document, root, DOCUMENT_CREATE_NS, DOCUMENT_CREATE_PREFIX, DOCUMENT_CREATE_CHILD_NAME, DOCUMENT_CREATE_ATTS, DOCUMENT_CREATE_TEXT_VALUES, m_depth, m_width);\r\n-\t}\r\n-\tprivate void appendChildren(Document doc, Node parent, String ns, String prefix, String childName, \r\n-\t\t\tString[][] atts, String textValues[], int depth, int width)\r\n-\t{\r\n-\t\t// Add children\r\n-\t\tfor(int icnt = 0; icnt < width; icnt++)\r\n-\t\t{\r\n-\t\t\tfinal Element childElement = doc.createElementNS(ns, prefix+\":\"+childName + \"_\" + depth + \"_\" + icnt);\r\n-\t\t\tparent.appendChild(childElement);\r\n-\t\t\t\r\n-\t\t\t// Add attributes\r\n-\t\t\tfor(String[] att : atts)\r\n-\t\t\t{\r\n-\t\t\t\tchildElement.setAttributeNS(ns, prefix+\":\"+att[0], att[1]);\r\n-\t\t\t}\r\n-\t\t\t// If not leaf node, add children\r\n-\t\t\tif(depth > 1)\r\n-\t\t\t{\r\n-\t\t\t\tappendChildren(doc, childElement, ns, prefix, childName, atts, textValues, depth - 1 , width);\r\n-\t\t\t}\r\n-\t\t\t// Else if leaf node, add text values\r\n-\t\t\telse\r\n-\t\t\t{\r\n-\t\t\t\tfor(String textValue : textValues)\r\n-\t\t\t\t{\r\n-\t\t\t\t\tText text = doc.createTextNode(textValue);\r\n-\t\t\t\t\tchildElement.appendChild(text);\r\n-\t\t\t\t}\r\n-\t\t\t}\r\n-\t\t}\r\n-\t}\r\n-\t@Override\r\n-\tpublic Iterable<String> iterativeTeardown() { return null; }\r\n-\t\r\n-\t@Override\r\n-\tpublic void finalTeardown() {};\r\n-}\r\n+        // Append the document element to the documentNode.\n+        document.appendChild(root);\n+        appendChildren(document, root, DOCUMENT_CREATE_NS, DOCUMENT_CREATE_PREFIX, DOCUMENT_CREATE_CHILD_NAME, DOCUMENT_CREATE_ATTS, DOCUMENT_CREATE_TEXT_VALUES, m_depth, m_width);\n+    }\n+\n+    private void appendChildren(Document doc, Node parent, String ns, String prefix, String childName, String[][] atts, String textValues[], int depth, int width)\n+    {\r\n+        // Add children\n+        for (int icnt = 0; icnt < width; icnt++)\n+        {\n+            final Element childElement = doc.createElementNS(ns, prefix + \":\" + childName + \"_\" + depth + \"_\" + icnt);\n+            parent.appendChild(childElement);\r\n+            \r\n+            // Add attributes\n+            for (String[] att : atts)\n+            {\n+                childElement.setAttributeNS(ns, prefix + \":\" + att[0], att[1]);\n+            }\r\n+            // If not leaf node, add children\n+            if (depth > 1)\n+            {\n+                appendChildren(doc, childElement, ns, prefix, childName, atts, textValues, depth - 1, width);\n+            }\r\n+            // Else if leaf node, add text values\n+            else\n+            {\n+                for (String textValue : textValues)\n+                {\n+                    Text text = doc.createTextNode(textValue);\n+                    childElement.appendChild(text);\n+                }\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public Iterable<String> iterativeTeardown()\n+    {\n+        return null;\n+    }\n+\n+    @Override\n+    public void finalTeardown()\n+    {\n+\n+\n+    }\n+\n+    ;\n+}\n\\ No newline at end of file\n",
            "diff_size": 167
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "12",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/324/TestDocumentCreationWithModel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/324/TestDocumentCreationWithModel.java\nindex 46532bde23b..2dcca74dab0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/324/TestDocumentCreationWithModel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_random/324/TestDocumentCreationWithModel.java\n@@ -8,7 +8,7 @@ import org.w3c.dom.Node;\n import org.w3c.dom.Text;\r\n \r\n public class TestDocumentCreationWithModel extends BaseBareDomPerfTest {\r\n-\tstatic final String DOC_CREATE_DEPTH_NAME = \"depth\";\r\n+static final String DOC_CREATE_DEPTH_NAME = \"depth\";\r\n \tstatic final int DOC_CREATE_DEPTH_DEFAULT = 3;\r\n \tstatic final String DOC_CREATE_WIDTH_NAME = \"width\";\r\n \tstatic final int DOC_CREATE_WIDTH_DEFAULT = 10;\r\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "12",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/324/TestDocumentCreationWithModel.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/324/TestDocumentCreationWithModel.java\nindex 46532bde23b..2d734b1cdf7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/errored/1/324/TestDocumentCreationWithModel.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/TIBCOSoftware-genxdm/styler_three_grams/324/TestDocumentCreationWithModel.java\n@@ -8,7 +8,7 @@ import org.w3c.dom.Node;\n import org.w3c.dom.Text;\r\n \r\n public class TestDocumentCreationWithModel extends BaseBareDomPerfTest {\r\n-\tstatic final String DOC_CREATE_DEPTH_NAME = \"depth\";\r\n+    static final String DOC_CREATE_DEPTH_NAME = \"depth\";\r\n \tstatic final int DOC_CREATE_DEPTH_DEFAULT = 3;\r\n \tstatic final String DOC_CREATE_WIDTH_NAME = \"width\";\r\n \tstatic final int DOC_CREATE_WIDTH_DEFAULT = 10;\r\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
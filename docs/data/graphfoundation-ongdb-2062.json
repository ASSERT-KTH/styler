{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2062",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "78",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "101",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "102",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "179",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2062/SimpleAppServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2062/SimpleAppServer.java\nindex bde29fc2199..9b45250a4d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2062/SimpleAppServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2062/SimpleAppServer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.impl;\n \n import java.io.Serializable;\n@@ -37,187 +38,187 @@ import org.neo4j.shell.Welcome;\n  */\n public abstract class SimpleAppServer implements ShellServer\n {\n-    private ShellServer remoteEndPoint;\n-    protected final BashVariableInterpreter bashInterpreter = new BashVariableInterpreter();\n-\n-    /**\n-     * The default RMI name for a shell server,\n-     * see {@link #makeRemotelyAvailable(int, String)}.\n-     */\n-    public static final String DEFAULT_NAME = \"shell\";\n-\n-    /**\n-     * The default RMI port for a shell server,\n-     * see {@link #makeRemotelyAvailable(int, String)}.\n-     */\n-    public static final int DEFAULT_PORT = 1337;\n-\n-    private final Map<Serializable, Session> clientSessions = new ConcurrentHashMap<>();\n-\n-    private final AtomicInteger nextClientId = new AtomicInteger();\n-\n-    /**\n-     * Constructs a new server.\n-     * @throws RemoteException if an RMI exception occurs.\n-     */\n-    public SimpleAppServer()\n-        throws RemoteException\n-    {\n-        super();\n-    }\n+  private ShellServer remoteEndPoint;\n+  protected final BashVariableInterpreter bashInterpreter = new BashVariableInterpreter();\n+\n+  /**\n+   * The default RMI name for a shell server,\n+   * see {@link #makeRemotelyAvailable(int, String)}.\n+   */\n+  public static final String DEFAULT_NAME = \"shell\";\n+\n+  /**\n+   * The default RMI port for a shell server,\n+   * see {@link #makeRemotelyAvailable(int, String)}.\n+   */\n+  public static final int DEFAULT_PORT = 1337;\n+\n+  private final Map<Serializable, Session> clientSessions = new ConcurrentHashMap<>();\n+\n+  private final AtomicInteger nextClientId = new AtomicInteger();\n+\n+  /**\n+   * Constructs a new server.\n+   *\n+   * @throws RemoteException if an RMI exception occurs.\n+   */\n+  public SimpleAppServer()\n+      throws RemoteException\n+  {\n+    super();\n+  }\n+\n+  @Override\n+  public String getName()\n+  {\n+    return DEFAULT_NAME;\n+  }\n \n-    @Override\n-    public String getName()\n-    {\n-        return DEFAULT_NAME;\n-    }\n+  @Override\n+  public Serializable interpretVariable(Serializable clientID, String key) throws ShellException, RemoteException\n+  {\n+    return (Serializable) getClientSession(clientID).get(key);\n+  }\n \n-    @Override\n-    public Serializable interpretVariable( Serializable clientID, String key ) throws ShellException, RemoteException\n-    {\n-        return (Serializable) getClientSession( clientID ).get( key );\n-    }\n+  protected Serializable newClientId()\n+  {\n+    return nextClientId.incrementAndGet();\n+  }\n \n-    protected Serializable newClientId()\n+  @Override\n+  public Welcome welcome(Map<String, Serializable> initialSession) throws RemoteException, ShellException\n+  {\n+    Serializable clientId = newClientId();\n+    if (clientSessions.containsKey(clientId))\n     {\n-        return nextClientId.incrementAndGet();\n+      throw new IllegalStateException(\"Client \" + clientId + \" already initialized\");\n     }\n-\n-    @Override\n-    public Welcome welcome( Map<String, Serializable> initialSession ) throws RemoteException, ShellException\n+    Session session = newSession(clientId, initialSession);\n+    clientSessions.put(clientId, session);\n+    try\n     {\n-        Serializable clientId = newClientId();\n-        if ( clientSessions.containsKey( clientId ) )\n-        {\n-            throw new IllegalStateException( \"Client \" + clientId + \" already initialized\" );\n-        }\n-        Session session = newSession( clientId, initialSession );\n-        clientSessions.put( clientId, session );\n-        try\n-        {\n-            String message = noWelcome( initialSession ) ? \"\" : getWelcomeMessage();\n-            return new Welcome( message, clientId, getPrompt( session ) );\n-        }\n-        catch ( ShellException e )\n-        {\n-            throw new RemoteException( e.getMessage() );\n-        }\n-    }\n-\n-    private boolean noWelcome( Map<String, Serializable> initialSession )\n+      String message = noWelcome(initialSession) ? \"\" : getWelcomeMessage();\n+      return new Welcome(message, clientId, getPrompt(session));\n+    } catch (ShellException e)\n     {\n-        final Serializable quiet = initialSession.get( \"quiet\" );\n-        if ( quiet == null )\n-        {\n-            return false;\n-        }\n-        if ( quiet instanceof Boolean )\n-        {\n-            return (Boolean) quiet;\n-        }\n-        return quiet.toString().equalsIgnoreCase( \"true\" );\n+      throw new RemoteException(e.getMessage());\n     }\n+  }\n \n-    private Session newSession( Serializable id, Map<String, Serializable> initialSession ) throws ShellException\n-    {\n-        Session session = new Session( id );\n-        initialPopulateSession( session );\n-        for ( Map.Entry<String, Serializable> entry : initialSession.entrySet() )\n-        {\n-            session.set( entry.getKey(), entry.getValue() );\n-        }\n-        return session;\n+  private boolean noWelcome(Map<String, Serializable> initialSession)\n+  {\n+    final Serializable quiet = initialSession.get(\"quiet\");\n+    if (quiet == null)\n+    {\n+      return false;\n     }\n-\n-    protected void initialPopulateSession( Session session ) throws ShellException\n-    {   // No initial session by default\n+    if (quiet instanceof Boolean)\n+    {\n+      return (Boolean) quiet;\n     }\n+    return quiet.toString().equalsIgnoreCase(\"true\");\n+  }\n+\n+  private Session newSession(Serializable id, Map<String, Serializable> initialSession) throws ShellException\n+  {\n+    Session session = new Session(id);\n+    initialPopulateSession(session);\n+    for (Map.Entry<String, Serializable> entry : initialSession.entrySet())\n+    {\n+      session.set(entry.getKey(), entry.getValue());\n+    }\n+    return session;\n+  }\n+\n+  protected void initialPopulateSession(Session session) throws ShellException\n+  {   // No initial session by default\n+  }\n+\n+  /**\n+   * Returns a prompt given a session, where the session may contain a custom \"PS1\" prompt variable.\n+   *\n+   * @param session the session to get custom prompt and other variables from.\n+   * @return the interpreted prompt to return to the client.\n+   */\n+  protected abstract String getPrompt(Session session) throws ShellException;\n+\n+  protected String getDefaultPrompt()\n+  {\n+    return \"sh$ \";\n+  }\n \n-    /**\n-     * Returns a prompt given a session, where the session may contain a custom \"PS1\" prompt variable.\n-     *\n-     * @param session the session to get custom prompt and other variables from.\n-     * @return the interpreted prompt to return to the client.\n-     */\n-    protected abstract String getPrompt( Session session ) throws ShellException;\n+  protected String getWelcomeMessage()\n+  {\n+    return \"Welcome to the shell\";\n+  }\n \n-    protected String getDefaultPrompt()\n-    {\n-        return \"sh$ \";\n-    }\n+  public Session getClientSession(Serializable clientID)\n+  {\n+    Session session = clientSessions.get(clientID);\n+    if (session == null)\n+    {\n+      throw new IllegalStateException(\"Client \" + clientID + \" not initialized\");\n+    }\n+    return session;\n+  }\n+\n+  @Override\n+  public void leave(Serializable clientID) throws RemoteException\n+  {\n+    // TODO how about clients not properly leaving?\n \n-    protected String getWelcomeMessage()\n+    if (clientSessions.remove(clientID) == null)\n     {\n-        return \"Welcome to the shell\";\n+      throw new IllegalStateException(\"Client \" + clientID + \" not initialized\");\n     }\n+  }\n \n-    public Session getClientSession( Serializable clientID )\n+  @Override\n+  public synchronized void shutdown() throws RemoteException\n+  {\n+    if (remoteEndPoint != null)\n     {\n-        Session session = clientSessions.get( clientID );\n-        if ( session == null )\n-        {\n-            throw new IllegalStateException( \"Client \" + clientID + \" not initialized\" );\n-        }\n-        return session;\n+      remoteEndPoint.shutdown();\n+      remoteEndPoint = null;\n     }\n+  }\n \n-    @Override\n-    public void leave( Serializable clientID ) throws RemoteException\n-    {\n-        // TODO how about clients not properly leaving?\n+  @Override\n+  public synchronized void makeRemotelyAvailable(int port, String name)\n+      throws RemoteException\n+  {\n+    remoteEndPoint().makeRemotelyAvailable(port, name);\n+  }\n \n-        if ( clientSessions.remove( clientID ) == null )\n-        {\n-            throw new IllegalStateException( \"Client \" + clientID + \" not initialized\" );\n-        }\n-    }\n+  @Override\n+  public synchronized void makeRemotelyAvailable(String host, int port, String name) throws RemoteException\n+  {\n+    remoteEndPoint().makeRemotelyAvailable(host, port, name);\n+  }\n \n-    @Override\n-    public synchronized void shutdown() throws RemoteException\n+  private ShellServer remoteEndPoint() throws RemoteException\n+  {\n+    if (remoteEndPoint == null)\n     {\n-        if ( remoteEndPoint != null )\n-        {\n-            remoteEndPoint.shutdown();\n-            remoteEndPoint = null;\n-        }\n+      remoteEndPoint = new RemotelyAvailableServer(this);\n     }\n+    return remoteEndPoint;\n+  }\n \n-    @Override\n-    public synchronized void makeRemotelyAvailable( int port, String name )\n-        throws RemoteException\n-    {\n-        remoteEndPoint().makeRemotelyAvailable( port, name );\n-    }\n-\n-    @Override\n-    public synchronized void makeRemotelyAvailable( String host, int port, String name ) throws RemoteException\n-    {\n-        remoteEndPoint().makeRemotelyAvailable( host, port, name );\n-    }\n+  @Override\n+  public String[] getAllAvailableCommands()\n+  {\n+    return new String[0];\n+  }\n \n-    private ShellServer remoteEndPoint() throws RemoteException\n-    {\n-        if ( remoteEndPoint == null )\n-        {\n-            remoteEndPoint = new RemotelyAvailableServer( this );\n-        }\n-        return remoteEndPoint;\n-    }\n+  public TabCompletion tabComplete(String partOfLine, Session session)\n+  {\n+    return new TabCompletion(Collections.emptyList(), 0);\n+  }\n \n-    @Override\n-    public String[] getAllAvailableCommands()\n-    {\n-        return new String[0];\n-    }\n-\n-    public TabCompletion tabComplete( String partOfLine, Session session )\n-    {\n-        return new TabCompletion( Collections.emptyList(), 0 );\n-    }\n-\n-    @Override\n-    public void setSessionVariable( Serializable clientID, String key, Object value ) throws ShellException\n-    {\n-        getClientSession( clientID ).set( key, value );\n-    }\n+  @Override\n+  public void setSessionVariable(Serializable clientID, String key, Object value) throws ShellException\n+  {\n+    getClientSession(clientID).set(key, value);\n+  }\n }\n",
            "diff_size": 219
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2062/SimpleAppServer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2062/SimpleAppServer.java\nindex bde29fc2199..2f716df169c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2062/SimpleAppServer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2062/SimpleAppServer.java\n@@ -51,8 +51,7 @@ public abstract class SimpleAppServer implements ShellServer\n      * see {@link #makeRemotelyAvailable(int, String)}.\n      */\n     public static final int DEFAULT_PORT = 1337;\n-\n-    private final Map<Serializable, Session> clientSessions = new ConcurrentHashMap<>();\n+private final Map<Serializable,Session> clientSessions = new ConcurrentHashMap<>();\n \n     private final AtomicInteger nextClientId = new AtomicInteger();\n \n@@ -60,9 +59,8 @@ public abstract class SimpleAppServer implements ShellServer\n      * Constructs a new server.\n      * @throws RemoteException if an RMI exception occurs.\n      */\n-    public SimpleAppServer()\n-        throws RemoteException\n-    {\n+    public SimpleAppServer() throws RemoteException\n+{\n         super();\n     }\n \n@@ -84,14 +82,15 @@ public abstract class SimpleAppServer implements ShellServer\n     }\n \n     @Override\n-    public Welcome welcome( Map<String, Serializable> initialSession ) throws RemoteException, ShellException\n+    public Welcome welcome( Map<String,Serializable> initialSession ) throws RemoteException, ShellException\n     {\n         Serializable clientId = newClientId();\n         if ( clientSessions.containsKey( clientId ) )\n         {\n             throw new IllegalStateException( \"Client \" + clientId + \" already initialized\" );\n         }\n-        Session session = newSession( clientId, initialSession );\n+\n+Session session = newSession( clientId, initialSession );\n         clientSessions.put( clientId, session );\n         try\n         {\n@@ -104,33 +103,37 @@ public abstract class SimpleAppServer implements ShellServer\n         }\n     }\n \n-    private boolean noWelcome( Map<String, Serializable> initialSession )\n+    private boolean noWelcome( Map<String,Serializable> initialSession )\n     {\n         final Serializable quiet = initialSession.get( \"quiet\" );\n         if ( quiet == null )\n         {\n             return false;\n         }\n-        if ( quiet instanceof Boolean )\n+\n+if ( quiet instanceof Boolean )\n         {\n             return (Boolean) quiet;\n         }\n-        return quiet.toString().equalsIgnoreCase( \"true\" );\n+\n+return quiet.toString().equalsIgnoreCase( \"true\" );\n     }\n \n-    private Session newSession( Serializable id, Map<String, Serializable> initialSession ) throws ShellException\n+    private Session newSession( Serializable id, Map<String,Serializable> initialSession ) throws ShellException\n     {\n         Session session = new Session( id );\n         initialPopulateSession( session );\n-        for ( Map.Entry<String, Serializable> entry : initialSession.entrySet() )\n+        for ( Map.Entry<String,Serializable> entry : initialSession.entrySet() )\n         {\n             session.set( entry.getKey(), entry.getValue() );\n         }\n-        return session;\n+\n+return session;\n     }\n \n     protected void initialPopulateSession( Session session ) throws ShellException\n-    {   // No initial session by default\n+    {\n+    // No initial session by default\n     }\n \n     /**\n@@ -158,7 +161,8 @@ public abstract class SimpleAppServer implements ShellServer\n         {\n             throw new IllegalStateException( \"Client \" + clientID + \" not initialized\" );\n         }\n-        return session;\n+\n+return session;\n     }\n \n     @Override\n@@ -183,9 +187,8 @@ public abstract class SimpleAppServer implements ShellServer\n     }\n \n     @Override\n-    public synchronized void makeRemotelyAvailable( int port, String name )\n-        throws RemoteException\n-    {\n+    public synchronized void makeRemotelyAvailable( int port, String name ) throws RemoteException\n+{\n         remoteEndPoint().makeRemotelyAvailable( port, name );\n     }\n \n@@ -201,7 +204,8 @@ public abstract class SimpleAppServer implements ShellServer\n         {\n             remoteEndPoint = new RemotelyAvailableServer( this );\n         }\n-        return remoteEndPoint;\n+\n+return remoteEndPoint;\n     }\n \n     @Override\n@@ -220,4 +224,4 @@ public abstract class SimpleAppServer implements ShellServer\n     {\n         getClientSession( clientID ).set( key, value );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 27
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
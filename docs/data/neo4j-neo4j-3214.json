{
    "project_name": "neo4j-neo4j",
    "error_id": "3214",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "51",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3214/NativeIndexKey.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3214/NativeIndexKey.java\nindex db60022e899..0c4012f3fb3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3214/NativeIndexKey.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3214/NativeIndexKey.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import org.neo4j.index.internal.gbptree.GBPTree;\n@@ -47,7 +48,7 @@ abstract class NativeIndexKey<SELF extends NativeIndexKey<SELF>> extends Tempora\n      * <p>\n      * Note that {@code compareId} is only an in memory state.\n      */\n-    void setCompareId( boolean compareId )\n+    void setCompareId(boolean compareId)\n     {\n         this.compareId = compareId;\n     }\n@@ -62,20 +63,20 @@ abstract class NativeIndexKey<SELF extends NativeIndexKey<SELF>> extends Tempora\n         return entityId;\n     }\n \n-    void setEntityId( long entityId )\n+    void setEntityId(long entityId)\n     {\n         this.entityId = entityId;\n     }\n \n-    final void initFromValue( int stateSlot, Value value, Inclusion inclusion )\n+    final void initFromValue(int stateSlot, Value value, Inclusion inclusion)\n     {\n-        assertValidValue( stateSlot, value );\n-        writeValue( stateSlot, value, inclusion );\n+        assertValidValue(stateSlot, value);\n+        writeValue(stateSlot, value, inclusion);\n     }\n \n-    abstract void writeValue( int stateSlot, Value value, Inclusion inclusion );\n+    abstract void writeValue(int stateSlot, Value value, Inclusion inclusion);\n \n-    abstract void assertValidValue( int stateSlot, Value value );\n+    abstract void assertValidValue(int stateSlot, Value value);\n \n     /**\n      * Initializes this key with entity id and resets other flags to default values.\n@@ -83,35 +84,35 @@ abstract class NativeIndexKey<SELF extends NativeIndexKey<SELF>> extends Tempora\n      *\n      * @param entityId entity id to set for this key.\n      */\n-    void initialize( long entityId )\n+    void initialize(long entityId)\n     {\n         this.compareId = DEFAULT_COMPARE_ID;\n-        setEntityId( entityId );\n+        setEntityId(entityId);\n     }\n \n     abstract Value[] asValues();\n \n-    abstract void initValueAsLowest( int stateSlot, ValueGroup valueGroup );\n+    abstract void initValueAsLowest(int stateSlot, ValueGroup valueGroup);\n \n-    abstract void initValueAsHighest( int stateSlot, ValueGroup valueGroup );\n+    abstract void initValueAsHighest(int stateSlot, ValueGroup valueGroup);\n \n     abstract int numberOfStateSlots();\n \n     final void initValuesAsLowest()\n     {\n         int slots = numberOfStateSlots();\n-        for ( int i = 0; i < slots; i++ )\n+        for (int i = 0; i < slots; i++)\n         {\n-            initValueAsLowest( i, ValueGroup.UNKNOWN );\n+            initValueAsLowest(i, ValueGroup.UNKNOWN);\n         }\n     }\n \n     final void initValuesAsHighest()\n     {\n         int slots = numberOfStateSlots();\n-        for ( int i = 0; i < slots; i++ )\n+        for (int i = 0; i < slots; i++)\n         {\n-            initValueAsHighest( i, ValueGroup.UNKNOWN );\n+            initValueAsHighest(i, ValueGroup.UNKNOWN);\n         }\n     }\n \n@@ -122,5 +123,5 @@ abstract class NativeIndexKey<SELF extends NativeIndexKey<SELF>> extends Tempora\n      * @param other the key to compare to.\n      * @return comparison against the {@code other} key.\n      */\n-    abstract int compareValueTo( SELF other );\n+    abstract int compareValueTo(SELF other);\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
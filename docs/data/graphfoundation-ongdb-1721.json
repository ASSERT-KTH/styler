{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1721",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "220",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "242",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "291",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "307",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "308",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "324",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "325",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1721/TransactionCommittingResponseUnpacker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1721/TransactionCommittingResponseUnpacker.java\nindex 52817e86f71..bc0beb4a79c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1721/TransactionCommittingResponseUnpacker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1721/TransactionCommittingResponseUnpacker.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.com.storecopy;\n \n import org.neo4j.com.Response;\n@@ -179,157 +180,155 @@ import org.neo4j.storageengine.api.StorageEngine;\n  */\n public class TransactionCommittingResponseUnpacker extends LifecycleAdapter implements ResponseUnpacker\n {\n+  /**\n+   * Dependencies that this {@link TransactionCommittingResponseUnpacker} has. These are called upon\n+   * in {@link TransactionCommittingResponseUnpacker#start()}.\n+   */\n+  public interface Dependencies\n+  {\n     /**\n-     * Dependencies that this {@link TransactionCommittingResponseUnpacker} has. These are called upon\n-     * in {@link TransactionCommittingResponseUnpacker#start()}.\n+     * Responsible for committing batches of transactions received from transaction stream responses.\n      */\n-    public interface Dependencies\n-    {\n-        /**\n-         * Responsible for committing batches of transactions received from transaction stream responses.\n-         */\n-        TransactionCommitProcess commitProcess();\n-\n-        /**\n-         * Responsible for fulfilling transaction obligations received from transaction obligation responses.\n-         */\n-        TransactionObligationFulfiller obligationFulfiller();\n+    TransactionCommitProcess commitProcess();\n \n-        /**\n-         * Log provider\n-         */\n-        LogService logService();\n-\n-        KernelTransactions kernelTransactions();\n-\n-        /**\n-         * Version context supplier\n-         */\n-        VersionContextSupplier versionContextSupplier();\n-    }\n+    /**\n+     * Responsible for fulfilling transaction obligations received from transaction obligation responses.\n+     */\n+    TransactionObligationFulfiller obligationFulfiller();\n \n     /**\n-     * Common implementation which pulls out dependencies from a {@link DependencyResolver} and constructs\n-     * whatever components it needs from that.\n+     * Log provider\n      */\n-    private static class ResolvableDependencies implements Dependencies\n-    {\n-        private final DependencyResolver resolver;\n+    LogService logService();\n \n-        ResolvableDependencies( DependencyResolver resolver )\n-        {\n-            this.resolver = resolver;\n-        }\n+    KernelTransactions kernelTransactions();\n \n-        @Override\n-        public TransactionCommitProcess commitProcess()\n-        {\n-            // We simply can't resolve the commit process here, since the commit process of a slave\n-            // is one that sends transactions to the master. We here, however would like to actually\n-            // commit transactions in this db.\n-            return new TransactionRepresentationCommitProcess(\n-                    resolver.resolveDependency( TransactionAppender.class ),\n-                    resolver.resolveDependency( StorageEngine.class ) );\n-        }\n+    /**\n+     * Version context supplier\n+     */\n+    VersionContextSupplier versionContextSupplier();\n+  }\n \n-        @Override\n-        public TransactionObligationFulfiller obligationFulfiller()\n-        {\n-            try\n-            {\n-                return resolver.resolveDependency( TransactionObligationFulfiller.class );\n-            }\n-            catch ( UnsatisfiedDependencyException e )\n-            {\n-                return toTxId ->\n-                {\n-                    throw new UnsupportedOperationException( \"Should not be called\" );\n-                };\n-            }\n-        }\n+  /**\n+   * Common implementation which pulls out dependencies from a {@link DependencyResolver} and constructs\n+   * whatever components it needs from that.\n+   */\n+  private static class ResolvableDependencies implements Dependencies\n+  {\n+    private final DependencyResolver resolver;\n \n-        @Override\n-        public LogService logService()\n-        {\n-            return resolver.resolveDependency( LogService.class );\n-        }\n+    ResolvableDependencies(DependencyResolver resolver)\n+    {\n+      this.resolver = resolver;\n+    }\n \n-        @Override\n-        public KernelTransactions kernelTransactions()\n-        {\n-            return resolver.resolveDependency( KernelTransactions.class );\n-        }\n+    @Override\n+    public TransactionCommitProcess commitProcess()\n+    {\n+      // We simply can't resolve the commit process here, since the commit process of a slave\n+      // is one that sends transactions to the master. We here, however would like to actually\n+      // commit transactions in this db.\n+      return new TransactionRepresentationCommitProcess(\n+          resolver.resolveDependency(TransactionAppender.class),\n+          resolver.resolveDependency(StorageEngine.class));\n+    }\n \n-        @Override\n-        public VersionContextSupplier versionContextSupplier()\n+    @Override\n+    public TransactionObligationFulfiller obligationFulfiller()\n+    {\n+      try\n+      {\n+        return resolver.resolveDependency(TransactionObligationFulfiller.class);\n+      } catch (UnsatisfiedDependencyException e)\n+      {\n+        return toTxId ->\n         {\n-            return resolver.resolveDependency( VersionContextSupplier.class );\n-        }\n+          throw new UnsupportedOperationException(\"Should not be called\");\n+        };\n+      }\n     }\n \n-    public static final int DEFAULT_BATCH_SIZE = 100;\n-\n-    // Assigned in constructor\n-    private final Dependencies dependencies;\n-    private final int maxBatchSize;\n-    private final long idReuseSafeZoneTime;\n-\n-    // Assigned in start()\n-    private TransactionObligationFulfiller obligationFulfiller;\n-    private TransactionBatchCommitter batchCommitter;\n-    private VersionContextSupplier versionContextSupplier;\n-    private Log log;\n-    // Assigned in stop()\n-    private volatile boolean stopped;\n-\n-    public TransactionCommittingResponseUnpacker( DependencyResolver dependencies, int maxBatchSize,\n-            long idReuseSafeZoneTime )\n+    @Override\n+    public LogService logService()\n     {\n-        this( new ResolvableDependencies( dependencies ), maxBatchSize, idReuseSafeZoneTime );\n+      return resolver.resolveDependency(LogService.class);\n     }\n \n-    public TransactionCommittingResponseUnpacker( Dependencies dependencies, int maxBatchSize,\n-            long idReuseSafeZoneTime )\n+    @Override\n+    public KernelTransactions kernelTransactions()\n     {\n-        this.dependencies = dependencies;\n-        this.maxBatchSize = maxBatchSize;\n-        this.idReuseSafeZoneTime = idReuseSafeZoneTime;\n+      return resolver.resolveDependency(KernelTransactions.class);\n     }\n \n     @Override\n-    public void unpackResponse( Response<?> response, TxHandler txHandler ) throws Exception\n+    public VersionContextSupplier versionContextSupplier()\n     {\n-        if ( stopped )\n-        {\n-            throw new IllegalStateException( \"Component is currently stopped\" );\n-        }\n-\n-        BatchingResponseHandler responseHandler = new BatchingResponseHandler( maxBatchSize,\n-                batchCommitter, obligationFulfiller, txHandler, versionContextSupplier, log );\n-        try\n-        {\n-            response.accept( responseHandler );\n-        }\n-        finally\n-        {\n-            responseHandler.applyQueuedTransactions();\n-        }\n+      return resolver.resolveDependency(VersionContextSupplier.class);\n     }\n+  }\n \n-    @Override\n-    public void start()\n+  public static final int DEFAULT_BATCH_SIZE = 100;\n+\n+  // Assigned in constructor\n+  private final Dependencies dependencies;\n+  private final int maxBatchSize;\n+  private final long idReuseSafeZoneTime;\n+\n+  // Assigned in start()\n+  private TransactionObligationFulfiller obligationFulfiller;\n+  private TransactionBatchCommitter batchCommitter;\n+  private VersionContextSupplier versionContextSupplier;\n+  private Log log;\n+  // Assigned in stop()\n+  private volatile boolean stopped;\n+\n+  public TransactionCommittingResponseUnpacker(DependencyResolver dependencies, int maxBatchSize,\n+                                               long idReuseSafeZoneTime)\n+  {\n+    this(new ResolvableDependencies(dependencies), maxBatchSize, idReuseSafeZoneTime);\n+  }\n+\n+  public TransactionCommittingResponseUnpacker(Dependencies dependencies, int maxBatchSize,\n+                                               long idReuseSafeZoneTime)\n+  {\n+    this.dependencies = dependencies;\n+    this.maxBatchSize = maxBatchSize;\n+    this.idReuseSafeZoneTime = idReuseSafeZoneTime;\n+  }\n+\n+  @Override\n+  public void unpackResponse(Response<?> response, TxHandler txHandler) throws Exception\n+  {\n+    if (stopped)\n     {\n-        this.obligationFulfiller = dependencies.obligationFulfiller();\n-        this.log = dependencies.logService().getInternalLog( BatchingResponseHandler.class );\n-        this.versionContextSupplier = dependencies.versionContextSupplier();\n-        this.batchCommitter = new TransactionBatchCommitter( dependencies.kernelTransactions(), idReuseSafeZoneTime,\n-                dependencies.commitProcess(), log );\n-        this.stopped = false;\n+      throw new IllegalStateException(\"Component is currently stopped\");\n     }\n \n-    @Override\n-    public void stop()\n+    BatchingResponseHandler responseHandler = new BatchingResponseHandler(maxBatchSize,\n+        batchCommitter, obligationFulfiller, txHandler, versionContextSupplier, log);\n+    try\n+    {\n+      response.accept(responseHandler);\n+    } finally\n     {\n-        this.stopped = true;\n+      responseHandler.applyQueuedTransactions();\n     }\n+  }\n+\n+  @Override\n+  public void start()\n+  {\n+    this.obligationFulfiller = dependencies.obligationFulfiller();\n+    this.log = dependencies.logService().getInternalLog(BatchingResponseHandler.class);\n+    this.versionContextSupplier = dependencies.versionContextSupplier();\n+    this.batchCommitter = new TransactionBatchCommitter(dependencies.kernelTransactions(), idReuseSafeZoneTime,\n+        dependencies.commitProcess(), log);\n+    this.stopped = false;\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+    this.stopped = true;\n+  }\n }\n",
            "diff_size": 197
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "230",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 172).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1721/TransactionCommittingResponseUnpacker.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1721/TransactionCommittingResponseUnpacker.java\nindex 52817e86f71..a9f37ab5f14 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1721/TransactionCommittingResponseUnpacker.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1721/TransactionCommittingResponseUnpacker.java\n@@ -227,9 +227,7 @@ public class TransactionCommittingResponseUnpacker extends LifecycleAdapter impl\n             // We simply can't resolve the commit process here, since the commit process of a slave\n             // is one that sends transactions to the master. We here, however would like to actually\n             // commit transactions in this db.\n-            return new TransactionRepresentationCommitProcess(\n-                    resolver.resolveDependency( TransactionAppender.class ),\n-                    resolver.resolveDependency( StorageEngine.class ) );\n+            return new TransactionRepresentationCommitProcess( resolver.resolveDependency( TransactionAppender.class ), resolver.resolveDependency( StorageEngine.class ) );\n         }\n \n         @Override\n@@ -306,7 +304,8 @@ public class TransactionCommittingResponseUnpacker extends LifecycleAdapter impl\n \n         BatchingResponseHandler responseHandler = new BatchingResponseHandler( maxBatchSize,\n                 batchCommitter, obligationFulfiller, txHandler, versionContextSupplier, log );\n-        try\n+\n+try\n         {\n             response.accept( responseHandler );\n         }\n@@ -324,7 +323,7 @@ public class TransactionCommittingResponseUnpacker extends LifecycleAdapter impl\n         this.versionContextSupplier = dependencies.versionContextSupplier();\n         this.batchCommitter = new TransactionBatchCommitter( dependencies.kernelTransactions(), idReuseSafeZoneTime,\n                 dependencies.commitProcess(), log );\n-        this.stopped = false;\n+this.stopped = false;\n     }\n \n     @Override\n@@ -332,4 +331,4 @@ public class TransactionCommittingResponseUnpacker extends LifecycleAdapter impl\n     {\n         this.stopped = true;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
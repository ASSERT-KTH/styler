{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1166",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "112",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1166/UpdatePullingTransactionObligationFulfiller.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1166/UpdatePullingTransactionObligationFulfiller.java\nindex a23d04ed7b8..19f83217abe 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1166/UpdatePullingTransactionObligationFulfiller.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1166/UpdatePullingTransactionObligationFulfiller.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.ha;\n \n import java.util.function.Supplier;\n@@ -34,84 +35,84 @@ import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n  * the desired transactions.\n  */\n public class UpdatePullingTransactionObligationFulfiller extends LifecycleAdapter\n-        implements TransactionObligationFulfiller\n+    implements TransactionObligationFulfiller\n {\n-    private final UpdatePuller updatePuller;\n-    private final RoleListener listener;\n-    private final HighAvailabilityMemberStateMachine memberStateMachine;\n-    private final Supplier<TransactionIdStore> transactionIdStoreSupplier;\n+  private final UpdatePuller updatePuller;\n+  private final RoleListener listener;\n+  private final HighAvailabilityMemberStateMachine memberStateMachine;\n+  private final Supplier<TransactionIdStore> transactionIdStoreSupplier;\n \n-    private volatile TransactionIdStore transactionIdStore;\n+  private volatile TransactionIdStore transactionIdStore;\n \n-    public UpdatePullingTransactionObligationFulfiller( UpdatePuller updatePuller,\n-            HighAvailabilityMemberStateMachine memberStateMachine, InstanceId serverId,\n-            Supplier<TransactionIdStore> transactionIdStoreSupplier )\n-    {\n-        this.updatePuller = updatePuller;\n-        this.memberStateMachine = memberStateMachine;\n-        this.transactionIdStoreSupplier = transactionIdStoreSupplier;\n-        this.listener = new RoleListener( serverId );\n-    }\n+  public UpdatePullingTransactionObligationFulfiller(UpdatePuller updatePuller,\n+                                                     HighAvailabilityMemberStateMachine memberStateMachine, InstanceId serverId,\n+                                                     Supplier<TransactionIdStore> transactionIdStoreSupplier)\n+  {\n+    this.updatePuller = updatePuller;\n+    this.memberStateMachine = memberStateMachine;\n+    this.transactionIdStoreSupplier = transactionIdStoreSupplier;\n+    this.listener = new RoleListener(serverId);\n+  }\n \n-    /**\n-     * Triggers pulling of updates up until at least {@code toTxId} if no pulling is currently happening\n-     * and returns immediately.\n-     */\n-    @Override\n-    public void fulfill( final long toTxId ) throws InterruptedException\n+  /**\n+   * Triggers pulling of updates up until at least {@code toTxId} if no pulling is currently happening\n+   * and returns immediately.\n+   */\n+  @Override\n+  public void fulfill(final long toTxId) throws InterruptedException\n+  {\n+    updatePuller.pullUpdates((currentTicket, targetTicket) ->\n     {\n-        updatePuller.pullUpdates( ( currentTicket, targetTicket ) ->\n-        {\n-            /*\n-             * We need to await last *closed* transaction id, not last *committed* transaction id since\n-             * right after leaving this method we might read records off of disk, and they had better\n-             * be up to date, otherwise we read stale data.\n-             */\n-            return transactionIdStore != null &&\n-                   transactionIdStore.getLastClosedTransactionId() >= toTxId;\n-        }, true /*We strictly need the update puller to be and remain active while we wait*/ );\n-    }\n+      /*\n+       * We need to await last *closed* transaction id, not last *committed* transaction id since\n+       * right after leaving this method we might read records off of disk, and they had better\n+       * be up to date, otherwise we read stale data.\n+       */\n+      return transactionIdStore != null &&\n+          transactionIdStore.getLastClosedTransactionId() >= toTxId;\n+    }, true /*We strictly need the update puller to be and remain active while we wait*/);\n+  }\n \n-    @Override\n-    public void start()\n+  @Override\n+  public void start()\n+  {\n+    memberStateMachine.addHighAvailabilityMemberListener(listener);\n+  }\n+\n+  @Override\n+  public void stop()\n+  {\n+    memberStateMachine.removeHighAvailabilityMemberListener(listener);\n+  }\n+\n+  private class RoleListener extends HighAvailabilityMemberListener.Adapter\n+  {\n+    private final InstanceId myInstanceId;\n+\n+    private RoleListener(InstanceId myInstanceId)\n     {\n-        memberStateMachine.addHighAvailabilityMemberListener( listener );\n+      this.myInstanceId = myInstanceId;\n     }\n \n     @Override\n-    public void stop()\n+    public void slaveIsAvailable(HighAvailabilityMemberChangeEvent event)\n     {\n-        memberStateMachine.removeHighAvailabilityMemberListener( listener );\n+      if (event.getInstanceId().equals(myInstanceId))\n+      {\n+        // I'm a slave, let the transactions stream in\n+\n+        // Pull out the transaction id store at this very moment, because we receive this event\n+        // when joining a cluster or switching to a new master and there might have been a store copy\n+        // just now where there has been a new transaction id store created.\n+        transactionIdStore = transactionIdStoreSupplier.get();\n+      }\n     }\n \n-    private class RoleListener extends HighAvailabilityMemberListener.Adapter\n+    @Override\n+    public void instanceStops(HighAvailabilityMemberChangeEvent event)\n     {\n-        private final InstanceId myInstanceId;\n-\n-        private RoleListener( InstanceId myInstanceId )\n-        {\n-            this.myInstanceId = myInstanceId;\n-        }\n-\n-        @Override\n-        public void slaveIsAvailable( HighAvailabilityMemberChangeEvent event )\n-        {\n-            if ( event.getInstanceId().equals( myInstanceId ) )\n-            {\n-                // I'm a slave, let the transactions stream in\n-\n-                // Pull out the transaction id store at this very moment, because we receive this event\n-                // when joining a cluster or switching to a new master and there might have been a store copy\n-                // just now where there has been a new transaction id store created.\n-                transactionIdStore = transactionIdStoreSupplier.get();\n-            }\n-        }\n-\n-        @Override\n-        public void instanceStops( HighAvailabilityMemberChangeEvent event )\n-        {\n-            // clear state to avoid calling out of date objects\n-            transactionIdStore = null;\n-        }\n+      // clear state to avoid calling out of date objects\n+      transactionIdStore = null;\n     }\n+  }\n }\n",
            "diff_size": 93
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "68",
                    "column": "47",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1166/UpdatePullingTransactionObligationFulfiller.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1166/UpdatePullingTransactionObligationFulfiller.java\nindex a23d04ed7b8..5eca2090c9a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1166/UpdatePullingTransactionObligationFulfiller.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1166/UpdatePullingTransactionObligationFulfiller.java\n@@ -33,8 +33,7 @@ import org.neo4j.kernel.lifecycle.LifecycleAdapter;\n  * Fulfills transaction obligations by poking {@link UpdatePuller} and awaiting it to commit and apply\n  * the desired transactions.\n  */\n-public class UpdatePullingTransactionObligationFulfiller extends LifecycleAdapter\n-        implements TransactionObligationFulfiller\n+public class UpdatePullingTransactionObligationFulfiller extends LifecycleAdapter implements TransactionObligationFulfiller\n {\n     private final UpdatePuller updatePuller;\n     private final RoleListener listener;\n@@ -44,8 +43,7 @@ public class UpdatePullingTransactionObligationFulfiller extends LifecycleAdapte\n     private volatile TransactionIdStore transactionIdStore;\n \n     public UpdatePullingTransactionObligationFulfiller( UpdatePuller updatePuller,\n-            HighAvailabilityMemberStateMachine memberStateMachine, InstanceId serverId,\n-            Supplier<TransactionIdStore> transactionIdStoreSupplier )\n+            HighAvailabilityMemberStateMachine memberStateMachine, InstanceId serverId, Supplier<TransactionIdStore> transactionIdStoreSupplier )\n     {\n         this.updatePuller = updatePuller;\n         this.memberStateMachine = memberStateMachine;\n@@ -67,9 +65,8 @@ public class UpdatePullingTransactionObligationFulfiller extends LifecycleAdapte\n              * right after leaving this method we might read records off of disk, and they had better\n              * be up to date, otherwise we read stale data.\n              */\n-            return transactionIdStore != null &&\n-                   transactionIdStore.getLastClosedTransactionId() >= toTxId;\n-        }, true /*We strictly need the update puller to be and remain active while we wait*/ );\n+            return transactionIdStore != null &&transactionIdStore.getLastClosedTransactionId() >= toTxId;\n+    }, true /*We strictly need the update puller to be and remain active while we wait*/ );\n     }\n \n     @Override\n@@ -114,4 +111,4 @@ public class UpdatePullingTransactionObligationFulfiller extends LifecycleAdapte\n             transactionIdStore = null;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
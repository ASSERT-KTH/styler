{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3883",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "42",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "94",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "145",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "156",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "97",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "167",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "198",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "238",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "259",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "261",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "266",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "270",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "285",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "296",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "299",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3883/TransactionHandleRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3883/TransactionHandleRegistry.java\nindex 7fccb4bafc5..d0d00926c07 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3883/TransactionHandleRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3883/TransactionHandleRegistry.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.transactional;\n \n import java.time.Clock;\n@@ -38,274 +39,267 @@ import static java.lang.String.format;\n \n public class TransactionHandleRegistry implements TransactionRegistry\n {\n-    private final AtomicLong idGenerator = new AtomicLong( 0L );\n-    private final ConcurrentHashMap<Long, TransactionMarker> registry = new ConcurrentHashMap<>( 64 );\n+  private final AtomicLong idGenerator = new AtomicLong(0L);\n+  private final ConcurrentHashMap<Long, TransactionMarker> registry = new ConcurrentHashMap<>(64);\n \n-    private final Clock clock;\n+  private final Clock clock;\n \n-    private final Log log;\n-    private final long timeoutMillis;\n+  private final Log log;\n+  private final long timeoutMillis;\n \n-    public TransactionHandleRegistry( Clock clock, long timeoutMillis, LogProvider logProvider )\n-    {\n-        this.clock = clock;\n-        this.timeoutMillis = timeoutMillis;\n-        this.log = logProvider.getLog( getClass() );\n-    }\n+  public TransactionHandleRegistry(Clock clock, long timeoutMillis, LogProvider logProvider)\n+  {\n+    this.clock = clock;\n+    this.timeoutMillis = timeoutMillis;\n+    this.log = logProvider.getLog(getClass());\n+  }\n \n-    private abstract static class TransactionMarker\n-    {\n-        abstract ActiveTransaction getActiveTransaction();\n+  private abstract static class TransactionMarker\n+  {\n+    abstract ActiveTransaction getActiveTransaction();\n \n-        abstract SuspendedTransaction getSuspendedTransaction() throws InvalidConcurrentTransactionAccess;\n+    abstract SuspendedTransaction getSuspendedTransaction() throws InvalidConcurrentTransactionAccess;\n \n-        abstract boolean isSuspended();\n+    abstract boolean isSuspended();\n+  }\n+\n+  private static class ActiveTransaction extends TransactionMarker\n+  {\n+    final TransactionTerminationHandle terminationHandle;\n+\n+    private ActiveTransaction(TransactionTerminationHandle terminationHandle)\n+    {\n+      this.terminationHandle = terminationHandle;\n     }\n \n-    private static class ActiveTransaction extends TransactionMarker\n+    TransactionTerminationHandle getTerminationHandle()\n     {\n-        final TransactionTerminationHandle terminationHandle;\n-\n-        private ActiveTransaction( TransactionTerminationHandle terminationHandle )\n-        {\n-            this.terminationHandle = terminationHandle;\n-        }\n-\n-        TransactionTerminationHandle getTerminationHandle()\n-        {\n-            return terminationHandle;\n-        }\n-\n-        @Override\n-        ActiveTransaction getActiveTransaction()\n-        {\n-            return this;\n-        }\n-\n-        @Override\n-        SuspendedTransaction getSuspendedTransaction() throws InvalidConcurrentTransactionAccess\n-        {\n-            throw new InvalidConcurrentTransactionAccess();\n-        }\n-\n-        @Override\n-        boolean isSuspended()\n-        {\n-            return false;\n-        }\n+      return terminationHandle;\n     }\n \n-    private class SuspendedTransaction extends TransactionMarker\n+    @Override\n+    ActiveTransaction getActiveTransaction()\n     {\n-        final ActiveTransaction activeMarker;\n-        final TransactionHandle transactionHandle;\n-        final long lastActiveTimestamp;\n-\n-        private SuspendedTransaction( ActiveTransaction activeMarker, TransactionHandle transactionHandle )\n-        {\n-            this.activeMarker = activeMarker;\n-            this.transactionHandle = transactionHandle;\n-            this.lastActiveTimestamp = clock.millis();\n-        }\n-\n-        @Override\n-        ActiveTransaction getActiveTransaction()\n-        {\n-            return activeMarker;\n-        }\n-\n-        @Override\n-        SuspendedTransaction getSuspendedTransaction()\n-        {\n-            return this;\n-        }\n-\n-        @Override\n-        boolean isSuspended()\n-        {\n-            return true;\n-        }\n-\n-        long getLastActiveTimestamp()\n-        {\n-            return lastActiveTimestamp;\n-        }\n+      return this;\n     }\n \n     @Override\n-    public long begin( TransactionHandle handle )\n+    SuspendedTransaction getSuspendedTransaction() throws InvalidConcurrentTransactionAccess\n     {\n-        long id = idGenerator.incrementAndGet();\n-        if ( null == registry.putIfAbsent( id, new ActiveTransaction( handle ) ) )\n-        {\n-            return id;\n-        }\n-        else\n-        {\n-            throw new IllegalStateException( \"Attempt to begin transaction for id that was already registered\" );\n-        }\n+      throw new InvalidConcurrentTransactionAccess();\n     }\n \n     @Override\n-    public long release( long id, TransactionHandle transactionHandle )\n+    boolean isSuspended()\n     {\n-        TransactionMarker marker = registry.get( id );\n-\n-        if ( null == marker )\n-        {\n-            throw new IllegalStateException( \"Trying to suspend unregistered transaction\" );\n-        }\n-\n-        if ( marker.isSuspended() )\n-        {\n-            throw new IllegalStateException( \"Trying to suspend transaction that was already suspended\" );\n-        }\n-\n-        SuspendedTransaction suspendedTx = new SuspendedTransaction( marker.getActiveTransaction(), transactionHandle );\n-        if ( !registry.replace( id, marker, suspendedTx ) )\n-        {\n-            throw new IllegalStateException( \"Trying to suspend transaction that has been concurrently suspended\" );\n-        }\n-        return computeNewExpiryTime( suspendedTx.getLastActiveTimestamp() );\n+      return false;\n     }\n+  }\n+\n+  private class SuspendedTransaction extends TransactionMarker\n+  {\n+    final ActiveTransaction activeMarker;\n+    final TransactionHandle transactionHandle;\n+    final long lastActiveTimestamp;\n \n-    private long computeNewExpiryTime( long lastActiveTimestamp )\n+    private SuspendedTransaction(ActiveTransaction activeMarker, TransactionHandle transactionHandle)\n     {\n-        return  lastActiveTimestamp + timeoutMillis;\n+      this.activeMarker = activeMarker;\n+      this.transactionHandle = transactionHandle;\n+      this.lastActiveTimestamp = clock.millis();\n     }\n \n     @Override\n-    public TransactionHandle acquire( long id ) throws TransactionLifecycleException\n+    ActiveTransaction getActiveTransaction()\n     {\n-        TransactionMarker marker = registry.get( id );\n-\n-        if ( null == marker )\n-        {\n-            throw new InvalidTransactionId();\n-        }\n-\n-        SuspendedTransaction transaction = marker.getSuspendedTransaction();\n-        if ( registry.replace( id, marker, marker.getActiveTransaction() ) )\n-        {\n-            return transaction.transactionHandle;\n-        }\n-        else\n-        {\n-            throw new InvalidConcurrentTransactionAccess();\n-        }\n+      return activeMarker;\n     }\n \n     @Override\n-    public void forget( long id )\n+    SuspendedTransaction getSuspendedTransaction()\n     {\n-        TransactionMarker marker = registry.get( id );\n-\n-        if ( null == marker )\n-        {\n-            throw new IllegalStateException( \"Could not finish unregistered transaction\" );\n-        }\n-\n-        if ( marker.isSuspended() )\n-        {\n-            throw new IllegalStateException( \"Cannot finish suspended registered transaction\" );\n-        }\n-\n-        if ( !registry.remove( id, marker ) )\n-        {\n-            throw new IllegalStateException(\n-                    \"Trying to finish transaction that has been concurrently finished or suspended\" );\n-        }\n+      return this;\n     }\n \n     @Override\n-    public TransactionHandle terminate( long id ) throws TransactionLifecycleException\n+    boolean isSuspended()\n     {\n-        TransactionMarker marker = registry.get( id );\n-        if ( null == marker )\n-        {\n-            throw new InvalidTransactionId();\n-        }\n-\n-        TransactionTerminationHandle handle = marker.getActiveTransaction().getTerminationHandle();\n-        handle.terminate();\n-\n-        try\n-        {\n-            SuspendedTransaction transaction = marker.getSuspendedTransaction();\n-            if ( registry.replace( id, marker, marker.getActiveTransaction() ) )\n-            {\n-                return transaction.transactionHandle;\n-            }\n-        }\n-        catch ( InvalidConcurrentTransactionAccess exception )\n-        {\n-            // We could not acquire the transaction. Let the other request clean up.\n-        }\n-        return null;\n+      return true;\n     }\n \n-    @Override\n-    public void rollbackAllSuspendedTransactions()\n+    long getLastActiveTimestamp()\n+    {\n+      return lastActiveTimestamp;\n+    }\n+  }\n+\n+  @Override\n+  public long begin(TransactionHandle handle)\n+  {\n+    long id = idGenerator.incrementAndGet();\n+    if (null == registry.putIfAbsent(id, new ActiveTransaction(handle)))\n     {\n-        rollbackSuspended( Predicates.alwaysTrue() );\n+      return id;\n+    } else\n+    {\n+      throw new IllegalStateException(\"Attempt to begin transaction for id that was already registered\");\n     }\n+  }\n+\n+  @Override\n+  public long release(long id, TransactionHandle transactionHandle)\n+  {\n+    TransactionMarker marker = registry.get(id);\n+\n+    if (null == marker)\n+    {\n+      throw new IllegalStateException(\"Trying to suspend unregistered transaction\");\n+    }\n+\n+    if (marker.isSuspended())\n+    {\n+      throw new IllegalStateException(\"Trying to suspend transaction that was already suspended\");\n+    }\n+\n+    SuspendedTransaction suspendedTx = new SuspendedTransaction(marker.getActiveTransaction(), transactionHandle);\n+    if (!registry.replace(id, marker, suspendedTx))\n+    {\n+      throw new IllegalStateException(\"Trying to suspend transaction that has been concurrently suspended\");\n+    }\n+    return computeNewExpiryTime(suspendedTx.getLastActiveTimestamp());\n+  }\n+\n+  private long computeNewExpiryTime(long lastActiveTimestamp)\n+  {\n+    return lastActiveTimestamp + timeoutMillis;\n+  }\n+\n+  @Override\n+  public TransactionHandle acquire(long id) throws TransactionLifecycleException\n+  {\n+    TransactionMarker marker = registry.get(id);\n \n-    public void rollbackSuspendedTransactionsIdleSince( final long oldestLastActiveTime )\n+    if (null == marker)\n+    {\n+      throw new InvalidTransactionId();\n+    }\n+\n+    SuspendedTransaction transaction = marker.getSuspendedTransaction();\n+    if (registry.replace(id, marker, marker.getActiveTransaction()))\n+    {\n+      return transaction.transactionHandle;\n+    } else\n+    {\n+      throw new InvalidConcurrentTransactionAccess();\n+    }\n+  }\n+\n+  @Override\n+  public void forget(long id)\n+  {\n+    TransactionMarker marker = registry.get(id);\n+\n+    if (null == marker)\n+    {\n+      throw new IllegalStateException(\"Could not finish unregistered transaction\");\n+    }\n+\n+    if (marker.isSuspended())\n+    {\n+      throw new IllegalStateException(\"Cannot finish suspended registered transaction\");\n+    }\n+\n+    if (!registry.remove(id, marker))\n+    {\n+      throw new IllegalStateException(\n+          \"Trying to finish transaction that has been concurrently finished or suspended\");\n+    }\n+  }\n+\n+  @Override\n+  public TransactionHandle terminate(long id) throws TransactionLifecycleException\n+  {\n+    TransactionMarker marker = registry.get(id);\n+    if (null == marker)\n+    {\n+      throw new InvalidTransactionId();\n+    }\n+\n+    TransactionTerminationHandle handle = marker.getActiveTransaction().getTerminationHandle();\n+    handle.terminate();\n+\n+    try\n+    {\n+      SuspendedTransaction transaction = marker.getSuspendedTransaction();\n+      if (registry.replace(id, marker, marker.getActiveTransaction()))\n+      {\n+        return transaction.transactionHandle;\n+      }\n+    } catch (InvalidConcurrentTransactionAccess exception)\n+    {\n+      // We could not acquire the transaction. Let the other request clean up.\n+    }\n+    return null;\n+  }\n+\n+  @Override\n+  public void rollbackAllSuspendedTransactions()\n+  {\n+    rollbackSuspended(Predicates.alwaysTrue());\n+  }\n+\n+  public void rollbackSuspendedTransactionsIdleSince(final long oldestLastActiveTime)\n+  {\n+    rollbackSuspended(item ->\n+    {\n+      try\n+      {\n+        SuspendedTransaction transaction = item.getSuspendedTransaction();\n+        return transaction.lastActiveTimestamp < oldestLastActiveTime;\n+      } catch (InvalidConcurrentTransactionAccess concurrentTransactionAccessError)\n+      {\n+        throw new RuntimeException(concurrentTransactionAccessError);\n+      }\n+    });\n+  }\n+\n+  private void rollbackSuspended(Predicate<TransactionMarker> predicate)\n+  {\n+    Set<Long> candidateTransactionIdsToRollback = new HashSet<>();\n+\n+    for (Map.Entry<Long, TransactionMarker> entry : registry.entrySet())\n     {\n-        rollbackSuspended( item ->\n-        {\n-            try\n-            {\n-                SuspendedTransaction transaction = item.getSuspendedTransaction();\n-                return transaction.lastActiveTimestamp < oldestLastActiveTime;\n-            }\n-            catch ( InvalidConcurrentTransactionAccess concurrentTransactionAccessError )\n-            {\n-                throw new RuntimeException( concurrentTransactionAccessError );\n-            }\n-        } );\n+      TransactionMarker marker = entry.getValue();\n+      if (marker.isSuspended() && predicate.test(marker))\n+      {\n+        candidateTransactionIdsToRollback.add(entry.getKey());\n+      }\n     }\n \n-    private void rollbackSuspended( Predicate<TransactionMarker> predicate )\n+    for (long id : candidateTransactionIdsToRollback)\n     {\n-        Set<Long> candidateTransactionIdsToRollback = new HashSet<>();\n-\n-        for ( Map.Entry<Long, TransactionMarker> entry : registry.entrySet() )\n-        {\n-            TransactionMarker marker = entry.getValue();\n-            if ( marker.isSuspended() && predicate.test( marker ) )\n-            {\n-                candidateTransactionIdsToRollback.add( entry.getKey() );\n-            }\n-        }\n-\n-        for ( long id : candidateTransactionIdsToRollback )\n-        {\n-            TransactionHandle handle;\n-            try\n-            {\n-                handle = acquire( id );\n-            }\n-            catch ( TransactionLifecycleException invalidTransactionId )\n-            {\n-                // Allow this - someone snatched the transaction from under our feet,\n-                continue;\n-            }\n-            try\n-            {\n-                handle.forceRollback();\n-                log.info(\n-                        format( \"Transaction with id %d has been automatically rolled back due to transaction timeout.\",\n-                                id ) );\n-            }\n-            catch ( Throwable e )\n-            {\n-                log.error( format( \"Transaction with id %d failed to roll back.\", id ), e );\n-            }\n-            finally\n-            {\n-                forget( id );\n-            }\n-        }\n+      TransactionHandle handle;\n+      try\n+      {\n+        handle = acquire(id);\n+      } catch (TransactionLifecycleException invalidTransactionId)\n+      {\n+        // Allow this - someone snatched the transaction from under our feet,\n+        continue;\n+      }\n+      try\n+      {\n+        handle.forceRollback();\n+        log.info(\n+            format(\"Transaction with id %d has been automatically rolled back due to transaction timeout.\",\n+                id));\n+      } catch (Throwable e)\n+      {\n+        log.error(format(\"Transaction with id %d failed to roll back.\", id), e);\n+      } finally\n+      {\n+        forget(id);\n+      }\n     }\n+  }\n }\n",
            "diff_size": 380
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3883/TransactionHandleRegistry.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3883/TransactionHandleRegistry.java\nindex 7fccb4bafc5..ee488d43970 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3883/TransactionHandleRegistry.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3883/TransactionHandleRegistry.java\n@@ -39,7 +39,7 @@ import static java.lang.String.format;\n public class TransactionHandleRegistry implements TransactionRegistry\n {\n     private final AtomicLong idGenerator = new AtomicLong( 0L );\n-    private final ConcurrentHashMap<Long, TransactionMarker> registry = new ConcurrentHashMap<>( 64 );\n+    private final ConcurrentHashMap<Long,TransactionMarker> registry = new ConcurrentHashMap<>( 64 );\n \n     private final Clock clock;\n \n@@ -150,8 +150,7 @@ public class TransactionHandleRegistry implements TransactionRegistry\n     public long release( long id, TransactionHandle transactionHandle )\n     {\n         TransactionMarker marker = registry.get( id );\n-\n-        if ( null == marker )\n+if ( null == marker )\n         {\n             throw new IllegalStateException( \"Trying to suspend unregistered transaction\" );\n         }\n@@ -166,20 +165,20 @@ public class TransactionHandleRegistry implements TransactionRegistry\n         {\n             throw new IllegalStateException( \"Trying to suspend transaction that has been concurrently suspended\" );\n         }\n-        return computeNewExpiryTime( suspendedTx.getLastActiveTimestamp() );\n+\n+return computeNewExpiryTime( suspendedTx.getLastActiveTimestamp() );\n     }\n \n     private long computeNewExpiryTime( long lastActiveTimestamp )\n     {\n-        return  lastActiveTimestamp + timeoutMillis;\n+        return lastActiveTimestamp + timeoutMillis;\n     }\n \n     @Override\n     public TransactionHandle acquire( long id ) throws TransactionLifecycleException\n     {\n         TransactionMarker marker = registry.get( id );\n-\n-        if ( null == marker )\n+if ( null == marker )\n         {\n             throw new InvalidTransactionId();\n         }\n@@ -199,8 +198,7 @@ public class TransactionHandleRegistry implements TransactionRegistry\n     public void forget( long id )\n     {\n         TransactionMarker marker = registry.get( id );\n-\n-        if ( null == marker )\n+if ( null == marker )\n         {\n             throw new IllegalStateException( \"Could not finish unregistered transaction\" );\n         }\n@@ -212,9 +210,8 @@ public class TransactionHandleRegistry implements TransactionRegistry\n \n         if ( !registry.remove( id, marker ) )\n         {\n-            throw new IllegalStateException(\n-                    \"Trying to finish transaction that has been concurrently finished or suspended\" );\n-        }\n+            throw new IllegalStateException( \"Trying to finish transaction that has been concurrently finished or suspended\" );\n+    }\n     }\n \n     @Override\n@@ -269,8 +266,7 @@ public class TransactionHandleRegistry implements TransactionRegistry\n     private void rollbackSuspended( Predicate<TransactionMarker> predicate )\n     {\n         Set<Long> candidateTransactionIdsToRollback = new HashSet<>();\n-\n-        for ( Map.Entry<Long, TransactionMarker> entry : registry.entrySet() )\n+for ( Map.Entry<Long,TransactionMarker> entry : registry.entrySet() )\n         {\n             TransactionMarker marker = entry.getValue();\n             if ( marker.isSuspended() && predicate.test( marker ) )\n@@ -291,13 +287,13 @@ public class TransactionHandleRegistry implements TransactionRegistry\n                 // Allow this - someone snatched the transaction from under our feet,\n                 continue;\n             }\n-            try\n+\n+try\n             {\n                 handle.forceRollback();\n-                log.info(\n-                        format( \"Transaction with id %d has been automatically rolled back due to transaction timeout.\",\n+                log.info( format( \"Transaction with id %d has been automatically rolled back due to transaction timeout.\",\n                                 id ) );\n-            }\n+    }\n             catch ( Throwable e )\n             {\n                 log.error( format( \"Transaction with id %d failed to roll back.\", id ), e );\n@@ -308,4 +304,4 @@ public class TransactionHandleRegistry implements TransactionRegistry\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "18",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.auditquerylog.nhinc.proxy;\n\nimport gov.hhs.fha.nhinc.audit.retrieve.AuditRetrieve;\nimport gov.hhs.fha.nhinc.common.auditquerylog.QueryAuditEventsBlobRequest;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/18/AuditQueryLogProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/18/AuditQueryLogProxyNoOpImpl.java\nindex 4db8f698c5e..4df084c3f4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/18/AuditQueryLogProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/18/AuditQueryLogProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.auditquerylog.nhinc.proxy;\n \n import gov.hhs.fha.nhinc.audit.retrieve.AuditRetrieve;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/18/AuditQueryLogProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/18/AuditQueryLogProxyNoOpImpl.java\nindex 4db8f698c5e..8f26ea6020a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/18/AuditQueryLogProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/18/AuditQueryLogProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.auditquerylog.nhinc.proxy;\n \n import gov.hhs.fha.nhinc.audit.retrieve.AuditRetrieve;\n@@ -34,25 +35,24 @@ import gov.hhs.fha.nhinc.common.auditquerylog.QueryAuditEventsRequestType;\n import gov.hhs.fha.nhinc.common.auditquerylog.QueryAuditEventsResponseType;\n \n /**\n- *\n  * @author achidamb\n  */\n public class AuditQueryLogProxyNoOpImpl implements AuditRetrieve {\n \n-    @Override\n-    public QueryAuditEventsResponseType retrieveAudits(QueryAuditEventsRequestType request) {\n-        return new QueryAuditEventsResponseType();\n-    }\n+  @Override\n+  public QueryAuditEventsResponseType retrieveAudits(QueryAuditEventsRequestType request) {\n+    return new QueryAuditEventsResponseType();\n+  }\n \n-    @Override\n-    public QueryAuditEventsResponseType retrieveAuditsByMsgIdAndRelatesToId(\n-        QueryAuditEventsRequestByRequestMessageId request) {\n-        return new QueryAuditEventsResponseType();\n-    }\n+  @Override\n+  public QueryAuditEventsResponseType retrieveAuditsByMsgIdAndRelatesToId(\n+      QueryAuditEventsRequestByRequestMessageId request) {\n+    return new QueryAuditEventsResponseType();\n+  }\n \n-    @Override\n-    public QueryAuditEventsBlobResponse retrieveAuditBlob(QueryAuditEventsBlobRequest request) {\n-        return new QueryAuditEventsBlobResponse();\n-    }\n+  @Override\n+  public QueryAuditEventsBlobResponse retrieveAuditBlob(QueryAuditEventsBlobRequest request) {\n+    return new QueryAuditEventsBlobResponse();\n+  }\n \n }\n",
            "diff_size": 15
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "49",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/18/AuditQueryLogProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/18/AuditQueryLogProxyNoOpImpl.java\nindex 4db8f698c5e..8fa9d86098c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/18/AuditQueryLogProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/18/AuditQueryLogProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.auditquerylog.nhinc.proxy;\n \n import gov.hhs.fha.nhinc.audit.retrieve.AuditRetrieve;\n@@ -45,9 +46,8 @@ public class AuditQueryLogProxyNoOpImpl implements AuditRetrieve {\n     }\n \n     @Override\n-    public QueryAuditEventsResponseType retrieveAuditsByMsgIdAndRelatesToId(\n-        QueryAuditEventsRequestByRequestMessageId request) {\n-        return new QueryAuditEventsResponseType();\n+    public QueryAuditEventsResponseType retrieveAuditsByMsgIdAndRelatesToId(QueryAuditEventsRequestByRequestMessageId request) {\n+    return new QueryAuditEventsResponseType();\n     }\n \n     @Override\n@@ -55,4 +55,4 @@ public class AuditQueryLogProxyNoOpImpl implements AuditRetrieve {\n         return new QueryAuditEventsBlobResponse();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "52",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 128).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/18/AuditQueryLogProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/18/AuditQueryLogProxyNoOpImpl.java\nindex 4db8f698c5e..d89bce5f4e0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/18/AuditQueryLogProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/18/AuditQueryLogProxyNoOpImpl.java\n@@ -37,22 +37,26 @@ import gov.hhs.fha.nhinc.common.auditquerylog.QueryAuditEventsResponseType;\n  *\n  * @author achidamb\n  */\n+\n+\n public class AuditQueryLogProxyNoOpImpl implements AuditRetrieve {\n \n+\n     @Override\n     public QueryAuditEventsResponseType retrieveAudits(QueryAuditEventsRequestType request) {\n         return new QueryAuditEventsResponseType();\n     }\n \n+\n     @Override\n-    public QueryAuditEventsResponseType retrieveAuditsByMsgIdAndRelatesToId(\n-        QueryAuditEventsRequestByRequestMessageId request) {\n+    public QueryAuditEventsResponseType retrieveAuditsByMsgIdAndRelatesToId(QueryAuditEventsRequestByRequestMessageId request) {\n         return new QueryAuditEventsResponseType();\n     }\n \n+\n     @Override\n     public QueryAuditEventsBlobResponse retrieveAuditBlob(QueryAuditEventsBlobRequest request) {\n         return new QueryAuditEventsBlobResponse();\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "'import' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/18/AuditQueryLogProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/18/AuditQueryLogProxyNoOpImpl.java\nindex 4db8f698c5e..64161da7552 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/18/AuditQueryLogProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_random/18/AuditQueryLogProxyNoOpImpl.java\n@@ -25,7 +25,6 @@\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n package gov.hhs.fha.nhinc.auditquerylog.nhinc.proxy;\n-\n import gov.hhs.fha.nhinc.audit.retrieve.AuditRetrieve;\n import gov.hhs.fha.nhinc.common.auditquerylog.QueryAuditEventsBlobRequest;\n import gov.hhs.fha.nhinc.common.auditquerylog.QueryAuditEventsBlobResponse;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/18/AuditQueryLogProxyNoOpImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/18/AuditQueryLogProxyNoOpImpl.java\nindex 4db8f698c5e..4df084c3f4f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/18/AuditQueryLogProxyNoOpImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/18/AuditQueryLogProxyNoOpImpl.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.auditquerylog.nhinc.proxy;\n \n import gov.hhs.fha.nhinc.audit.retrieve.AuditRetrieve;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1890",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "53",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "72",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "161",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "163",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1890/AnsiFormattedText.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1890/AnsiFormattedText.java\nindex 6035c932240..72f38ea974a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1890/AnsiFormattedText.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1890/AnsiFormattedText.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.log;\n \n import org.fusesource.jansi.Ansi;\n@@ -49,11 +50,11 @@ public class AnsiFormattedText\n      * Return a new map which is a copy of the first map, with the keys/values from the second if they do not override anything already defined in the first\n      * map.\n      */\n-    private static <K, V> Map<K, V> mergeMaps( Map<K, V> primary, Map<K, V> secondary )\n+    private static <K, V> Map<K, V> mergeMaps(Map<K, V> primary, Map<K, V> secondary)\n     {\n         Map<K, V> result = new HashMap<>();\n-        result.putAll( primary );\n-        secondary.forEach( result::putIfAbsent );\n+        result.putAll(primary);\n+        secondary.forEach(result::putIfAbsent);\n         return result;\n     }\n \n@@ -69,12 +70,12 @@ public class AnsiFormattedText\n      * @param string to start with, may be null in which case it is ignored\n      * @return a new instance containing the unformatted text in string, or empty if it was null\n      */\n-    public static AnsiFormattedText from( @Nullable String string )\n+    public static AnsiFormattedText from(@Nullable String string)\n     {\n         AnsiFormattedText st = new AnsiFormattedText();\n-        if ( string != null )\n+        if (string != null)\n         {\n-            st.append( string );\n+            st.append(string);\n         }\n         return st;\n     }\n@@ -86,33 +87,33 @@ public class AnsiFormattedText\n     public String formattedString()\n     {\n         StringBuilder sb = new StringBuilder();\n-        for ( AnsiFormattedString s : pieces )\n+        for (AnsiFormattedString s : pieces)\n         {\n             List<String> codes = new ArrayList<>();\n \n             // color\n-            if ( s.color != null && !DEFAULT_COLOR.equals( s.color ) )\n+            if (s.color != null && !DEFAULT_COLOR.equals(s.color))\n             {\n-                codes.add( s.color );\n+                codes.add(s.color);\n             }\n             // attributes\n-            if ( s.attributes.getOrDefault( BOLD, false ) )\n+            if (s.attributes.getOrDefault(BOLD, false))\n             {\n-                codes.add( BOLD );\n+                codes.add(BOLD);\n             }\n             // Only do formatting if we actually have some formatting to apply\n-            if ( !codes.isEmpty() )\n+            if (!codes.isEmpty())\n             {\n-                sb.append( \"@|\" )\n-                  .append( String.join( \",\", codes ) )\n-                  .append( \" \" );\n+                sb.append(\"@|\")\n+                  .append(String.join(\",\", codes))\n+                  .append(\" \");\n             }\n             // string\n-            sb.append( s.string );\n+            sb.append(s.string);\n             // Only reset formatting if we actually did some formatting\n-            if ( !codes.isEmpty() )\n+            if (!codes.isEmpty())\n             {\n-                sb.append( \"|@\" );\n+                sb.append(\"|@\");\n             }\n         }\n         return sb.toString();\n@@ -124,7 +125,7 @@ public class AnsiFormattedText\n     @Nonnull\n     public String renderedString()\n     {\n-        return Ansi.ansi().render( formattedString() ).toString();\n+        return Ansi.ansi().render(formattedString()).toString();\n     }\n \n     /**\n@@ -134,7 +135,7 @@ public class AnsiFormattedText\n     public String plainString()\n     {\n         StringBuilder sb = new StringBuilder();\n-        pieces.forEach( sb::append );\n+        pieces.forEach(sb::append);\n         return sb.toString();\n     }\n \n@@ -144,10 +145,10 @@ public class AnsiFormattedText\n      * @param existing text to append using this instance's formatting\n      * @return this\n      */\n-    public AnsiFormattedText append( AnsiFormattedText existing )\n+    public AnsiFormattedText append(AnsiFormattedText existing)\n     {\n-        existing.pieces.forEach( s -> pieces.add( new AnsiFormattedString( color != null ? color : s.color,\n-                                                                           mergeMaps( attributes, s.attributes ), s.string ) ) );\n+        existing.pieces.forEach(s -> pieces.add(new AnsiFormattedString(color != null ? color : s.color,\n+          mergeMaps(attributes, s.attributes), s.string)));\n         return this;\n     }\n \n@@ -157,9 +158,9 @@ public class AnsiFormattedText\n      * @param s string to append using this instance's formatting\n      * @return this\n      */\n-    public AnsiFormattedText append( String s )\n+    public AnsiFormattedText append(String s)\n     {\n-        pieces.add( new AnsiFormattedString( color, attributes, s ) );\n+        pieces.add(new AnsiFormattedString(color, attributes, s));\n         return this;\n     }\n \n@@ -170,7 +171,7 @@ public class AnsiFormattedText\n      */\n     public AnsiFormattedText appendNewLine()\n     {\n-        pieces.add( new AnsiFormattedString( color, attributes, System.lineSeparator() ) );\n+        pieces.add(new AnsiFormattedString(color, attributes, System.lineSeparator()));\n         return this;\n     }\n \n@@ -181,7 +182,7 @@ public class AnsiFormattedText\n      */\n     public AnsiFormattedText bold()\n     {\n-        attributes.put( BOLD, true );\n+        attributes.put(BOLD, true);\n         return this;\n     }\n \n@@ -192,7 +193,7 @@ public class AnsiFormattedText\n      */\n     public AnsiFormattedText boldOff()\n     {\n-        attributes.put( BOLD, false );\n+        attributes.put(BOLD, false);\n         return this;\n     }\n \n@@ -229,10 +230,10 @@ public class AnsiFormattedText\n         final Map<String, Boolean> attributes = new HashMap<>();\n         final String string;\n \n-        AnsiFormattedString( String color, Map<String, Boolean> attributes, String s )\n+        AnsiFormattedString(String color, Map<String, Boolean> attributes, String s)\n         {\n             this.color = color;\n-            this.attributes.putAll( attributes );\n+            this.attributes.putAll(attributes);\n             this.string = s;\n         }\n \n",
            "diff_size": 31
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "149",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 162).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1890/AnsiFormattedText.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1890/AnsiFormattedText.java\nindex 6035c932240..9c6b8e13fbd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1890/AnsiFormattedText.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/1890/AnsiFormattedText.java\n@@ -146,8 +146,7 @@ public class AnsiFormattedText\n      */\n     public AnsiFormattedText append( AnsiFormattedText existing )\n     {\n-        existing.pieces.forEach( s -> pieces.add( new AnsiFormattedString( color != null ? color : s.color,\n-                                                                           mergeMaps( attributes, s.attributes ), s.string ) ) );\n+        existing.pieces.forEach( s -> pieces.add( new AnsiFormattedString( color != null ? color : s.color, mergeMaps( attributes, s.attributes ), s.string ) ) );\n         return this;\n     }\n \n@@ -242,4 +241,4 @@ public class AnsiFormattedText\n             return string;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
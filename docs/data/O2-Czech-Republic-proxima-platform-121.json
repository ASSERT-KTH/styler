{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "121",
    "information": {
        "errors": [
            {
                "line": "55",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 92).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "      assertNotNull(options);\n      assertEquals(\n          10000L, (long) options.as(FlinkPipelineOptions.class).getCheckpointingInterval());\n      assertEquals(\"FlinkRunner\", options.getRunner().getSimpleName());\n      assertEquals(1, provider.getRegistrars().size());\n      assertEquals(2, provider.getArgs().length);",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/121/BeamStreamProviderTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/121/BeamStreamProviderTest.java\nindex b21e6934dae..1508d41e73e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/121/BeamStreamProviderTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler/121/BeamStreamProviderTest.java\n@@ -52,7 +52,7 @@ public class BeamStreamProviderTest {\n       PipelineOptions options = provider.getPipelineOptionsFactory().get();\n       assertNotNull(options);\n       assertEquals(\n-          10000L, (long) options.as(FlinkPipelineOptions.class).getCheckpointingInterval());\n+  10000L, (long) options.as(FlinkPipelineOptions.class).getCheckpointingInterval());\n       assertEquals(\"FlinkRunner\", options.getRunner().getSimpleName());\n       assertEquals(1, provider.getRegistrars().size());\n       assertEquals(2, provider.getArgs().length);\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/121/BeamStreamProviderTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/121/BeamStreamProviderTest.java\nindex b21e6934dae..2a3610f5c47 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/121/BeamStreamProviderTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/121/BeamStreamProviderTest.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.beam.tools.groovy;\n \n import static org.junit.Assert.*;\n@@ -44,15 +45,16 @@ public class BeamStreamProviderTest {\n       provider.init(\n           repo,\n           new String[] {\n-            \"--runner=flink\",\n-            \"--runnerRegistrar=\" + Registrar.class.getName(),\n-            \"--checkpointingInterval=10000\"\n+              \"--runner=flink\",\n+              \"--runnerRegistrar=\" + Registrar.class.getName(),\n+              \"--checkpointingInterval=10000\"\n           });\n       assertNotNull(provider.getPipelineOptionsFactory());\n       PipelineOptions options = provider.getPipelineOptionsFactory().get();\n       assertNotNull(options);\n       assertEquals(\n-          10000L, (long) options.as(FlinkPipelineOptions.class).getCheckpointingInterval());\n+          10000L,\n+          (long) options.as(FlinkPipelineOptions.class).getCheckpointingInterval());\n       assertEquals(\"FlinkRunner\", options.getRunner().getSimpleName());\n       assertEquals(1, provider.getRegistrars().size());\n       assertEquals(2, provider.getArgs().length);\n",
            "diff_size": 10
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "53",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 92).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/121/BeamStreamProviderTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/121/BeamStreamProviderTest.java\nindex b21e6934dae..6fd7c47a8e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/121/BeamStreamProviderTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/121/BeamStreamProviderTest.java\n@@ -43,11 +43,9 @@ public class BeamStreamProviderTest {\n     try (BeamStreamProvider.Default provider = new BeamStreamProvider.Default()) {\n       provider.init(\n           repo,\n-          new String[] {\n-            \"--runner=flink\",\n+          new String[] {\"--runner=flink\",\n             \"--runnerRegistrar=\" + Registrar.class.getName(),\n-            \"--checkpointingInterval=10000\"\n-          });\n+            \"--checkpointingInterval=10000\"});\n       assertNotNull(provider.getPipelineOptionsFactory());\n       PipelineOptions options = provider.getPipelineOptionsFactory().get();\n       assertNotNull(options);\n@@ -66,4 +64,4 @@ public class BeamStreamProviderTest {\n     // must not throw any exceptions\n     assertTrue(true);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/121/BeamStreamProviderTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/121/BeamStreamProviderTest.java\nindex b21e6934dae..1508d41e73e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/121/BeamStreamProviderTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/121/BeamStreamProviderTest.java\n@@ -52,7 +52,7 @@ public class BeamStreamProviderTest {\n       PipelineOptions options = provider.getPipelineOptionsFactory().get();\n       assertNotNull(options);\n       assertEquals(\n-          10000L, (long) options.as(FlinkPipelineOptions.class).getCheckpointingInterval());\n+  10000L, (long) options.as(FlinkPipelineOptions.class).getCheckpointingInterval());\n       assertEquals(\"FlinkRunner\", options.getRunner().getSimpleName());\n       assertEquals(1, provider.getRegistrars().size());\n       assertEquals(2, provider.getArgs().length);\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "57",
                    "severity": "error",
                    "message": "'try' child has incorrect indentation level 10, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/121/BeamStreamProviderTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/121/BeamStreamProviderTest.java\nindex b21e6934dae..ed67518fed2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/121/BeamStreamProviderTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_three_grams/121/BeamStreamProviderTest.java\n@@ -52,8 +52,9 @@ public class BeamStreamProviderTest {\n       PipelineOptions options = provider.getPipelineOptionsFactory().get();\n       assertNotNull(options);\n       assertEquals(\n-          10000L, (long) options.as(FlinkPipelineOptions.class).getCheckpointingInterval());\n-      assertEquals(\"FlinkRunner\", options.getRunner().getSimpleName());\n+          10000L,\n+          (long )options.as(FlinkPipelineOptions.class).getCheckpointingInterval());\n+          assertEquals(\"FlinkRunner\", options.getRunner().getSimpleName());\n       assertEquals(1, provider.getRegistrars().size());\n       assertEquals(2, provider.getArgs().length);\n     }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
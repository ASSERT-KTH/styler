{
    "project_name": "Angel-ML-angel",
    "error_id": "358",
    "information": {
        "errors": [
            {
                "line": "6",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 102).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * Copyright (C) 2017-2018 THL A29 Limited, a Tencent company. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in\n * compliance with the License. You may obtain a copy of the License at\n *\n * https://opensource.org/licenses/Apache-2.0",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/358/PartitionKey.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/358/PartitionKey.java\nindex a21e269d6fd..aa736f41ed7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/358/PartitionKey.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/358/PartitionKey.java\n@@ -44,12 +44,12 @@ public class PartitionKey implements Comparable<PartitionKey>, Serialize {\n   }\r\n \r\n   public PartitionKey(int partitionId, int matrixId, int startRow, long startCol, int endRow,\r\n-      long endCol) {\r\n+                      long endCol) {\r\n     this(partitionId, matrixId, startRow, startCol, endRow, endCol, -1);\r\n   }\r\n \r\n   public PartitionKey(int partitionId, int matrixId, int startRow, long startCol, int endRow,\r\n-      long endCol, int indexNum) {\r\n+                      long endCol, int indexNum) {\r\n     super();\r\n     this.partitionId = partitionId;\r\n     this.matrixId = matrixId;\r\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/358/PartitionKey.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/358/PartitionKey.java\nindex a21e269d6fd..eb7da19f766 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/358/PartitionKey.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/358/PartitionKey.java\n@@ -13,9 +13,8 @@\n  * or implied. See the License for the specific language governing permissions and limitations under\r\n  * the License.\r\n  *\r\n- */\r\n-\r\n-\r\n+ */\n+\n package com.tencent.angel;\r\n \r\n import com.tencent.angel.common.Serialize;\r\n@@ -43,13 +42,13 @@ public class PartitionKey implements Comparable<PartitionKey>, Serialize {\n   public PartitionKey() {\r\n   }\r\n \r\n-  public PartitionKey(int partitionId, int matrixId, int startRow, long startCol, int endRow,\r\n-      long endCol) {\r\n-    this(partitionId, matrixId, startRow, startCol, endRow, endCol, -1);\r\n+  public PartitionKey(int partitionId, int matrixId, int startRow, long startCol, int endRow,\n+long endCol) {\n+  this(partitionId, matrixId, startRow, startCol, endRow, endCol, -1);\r\n   }\r\n \r\n-  public PartitionKey(int partitionId, int matrixId, int startRow, long startCol, int endRow,\r\n-      long endCol, int indexNum) {\r\n+  public PartitionKey(int partitionId, int matrixId, int startRow, long startCol, int endRow,\n+long endCol, int indexNum) {\r\n     super();\r\n     this.partitionId = partitionId;\r\n     this.matrixId = matrixId;\r\n@@ -216,4 +215,4 @@ public class PartitionKey implements Comparable<PartitionKey>, Serialize {\n     }\r\n     return partitionId == other.partitionId;\r\n   }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 122).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/358/PartitionKey.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/358/PartitionKey.java\nindex a21e269d6fd..bbd791563c5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/358/PartitionKey.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/358/PartitionKey.java\n@@ -16,204 +16,213 @@\n  */\r\n \r\n \r\n-package com.tencent.angel;\r\n-\r\n-import com.tencent.angel.common.Serialize;\r\n+package com.tencent.angel;\n+\n+import com.tencent.angel.common.Serialize;\n import io.netty.buffer.ByteBuf;\r\n \r\n \r\n /**\r\n  * The type Partition key,represent a part of matrix\r\n- */\r\n-public class PartitionKey implements Comparable<PartitionKey>, Serialize {\r\n-\r\n-  int partitionId = 0;\r\n+ */\n+\n+public class PartitionKey implements Comparable<PartitionKey>, Serialize {\n+\n+  int partitionId = 0;\n+\n+\n   int matrixId = 0;\r\n \r\n   /**\r\n    * Elements in this partition row number are in [startRow, endRow) and column number are in\r\n    * [StartCol, endCol);\r\n-   */\r\n-  int startRow = -1;\r\n-  long startCol = -1;\r\n-  int endRow = -1;\r\n-  long endCol = -1;\r\n-  int indexNum = -1;\r\n-\r\n-  public PartitionKey() {\r\n-  }\r\n-\r\n-  public PartitionKey(int partitionId, int matrixId, int startRow, long startCol, int endRow,\r\n-      long endCol) {\r\n-    this(partitionId, matrixId, startRow, startCol, endRow, endCol, -1);\r\n-  }\r\n-\r\n-  public PartitionKey(int partitionId, int matrixId, int startRow, long startCol, int endRow,\r\n-      long endCol, int indexNum) {\r\n-    super();\r\n-    this.partitionId = partitionId;\r\n-    this.matrixId = matrixId;\r\n-    this.startRow = startRow;\r\n-    this.startCol = startCol;\r\n-    this.endRow = endRow;\r\n-    this.endCol = endCol;\r\n-    this.indexNum = indexNum;\r\n-  }\r\n-\r\n-  public PartitionKey(int matrixId, int partId) {\r\n-    this(partId, matrixId, -1, -1, -1, -1);\r\n-  }\r\n-\r\n-  @Override\r\n-  public String toString() {\r\n-    StringBuilder builder = new StringBuilder();\r\n-    builder.append(\"PartitionKey(\");\r\n-    builder.append(\"matrixId=\").append(matrixId).append(\", \");\r\n-    builder.append(\"partitionId=\").append(partitionId).append(\", \");\r\n-    builder.append(\"startRow=\").append(startRow).append(\", \");\r\n-    builder.append(\"startCol=\").append(startCol).append(\", \");\r\n-    builder.append(\"endRow=\").append(endRow).append(\", \");\r\n-    builder.append(\"endCol=\").append(endCol).append(\")\");\r\n-    builder.append(\"indexNum=\").append(indexNum).append(\")\");\r\n-    return builder.toString();\r\n-  }\r\n-\r\n-  public int getPartitionId() {\r\n-    return partitionId;\r\n-  }\r\n-\r\n-  public int getMatrixId() {\r\n-    return matrixId;\r\n-  }\r\n-\r\n-  public void setMatrixId(int matrixId) {\r\n-    this.matrixId = matrixId;\r\n-  }\r\n-\r\n-  public int getStartRow() {\r\n-    return startRow;\r\n-  }\r\n-\r\n-  public long getStartCol() {\r\n-    return startCol;\r\n-  }\r\n-\r\n-  public void setStartCol(int startCol) {\r\n-    this.startCol = startCol;\r\n-  }\r\n-\r\n-  public int getEndRow() {\r\n-    return endRow;\r\n-  }\r\n-\r\n-  public long getEndCol() {\r\n-    return endCol;\r\n-  }\r\n-\r\n-  public void setEndCol(int endCol) {\r\n-    this.endCol = endCol;\r\n-  }\r\n-\r\n-  public void setStartCol(long startCol) {\r\n-    this.startCol = startCol;\r\n-  }\r\n-\r\n-  public void setEndCol(long endCol) {\r\n-    this.endCol = endCol;\r\n-  }\r\n-\r\n-  public int getIndexNum() {\r\n-    return indexNum;\r\n-  }\r\n-\r\n-  public void setIndexNum(int indexNum) {\r\n-    this.indexNum = indexNum;\r\n-  }\r\n-\r\n-  public void setPartitionId(int partitionId) {\r\n-    this.partitionId = partitionId;\r\n-  }\r\n-\r\n-  public void setStartRow(int startRow) {\r\n-    this.startRow = startRow;\r\n-  }\r\n-\r\n-  public void setEndRow(int endRow) {\r\n-    this.endRow = endRow;\r\n-  }\r\n-\r\n-  @Override\r\n-  public int compareTo(PartitionKey other) {\r\n-    if (this.startRow > other.startRow) {\r\n-      return 1;\r\n-    }\r\n-\r\n-    if (this.startRow < other.startRow) {\r\n-      return -1;\r\n-    }\r\n-\r\n-    if (this.startCol > other.startCol) {\r\n-      return 1;\r\n-    }\r\n-\r\n-    if (this.startCol < other.startCol) {\r\n-      return -1;\r\n-    }\r\n-\r\n-    return 0;\r\n-  }\r\n-\r\n-  @Override\r\n-  public void serialize(ByteBuf buf) {\r\n-    buf.writeInt(matrixId);\r\n-    buf.writeInt(partitionId);\r\n-    buf.writeInt(startRow);\r\n-    buf.writeInt(endRow);\r\n-    buf.writeLong(startCol);\r\n-    buf.writeLong(endCol);\r\n-    buf.writeInt(indexNum);\r\n-  }\r\n-\r\n-  @Override\r\n-  public void deserialize(ByteBuf buf) {\r\n-    matrixId = buf.readInt();\r\n-    partitionId = buf.readInt();\r\n-    startRow = buf.readInt();\r\n-    endRow = buf.readInt();\r\n-    startCol = buf.readLong();\r\n-    endCol = buf.readLong();\r\n-    indexNum = buf.readInt();\r\n-  }\r\n-\r\n-  @Override\r\n-  public int bufferLen() {\r\n-    return 8;\r\n-  }\r\n-\r\n-  @Override\r\n-  public int hashCode() {\r\n-    final int prime = 31;\r\n-    int result = 1;\r\n-    result = prime * result + matrixId;\r\n-    result = prime * result + partitionId;\r\n-    return result;\r\n-  }\r\n-\r\n-  @Override\r\n-  public boolean equals(Object obj) {\r\n-    if (this == obj) {\r\n-      return true;\r\n-    }\r\n-    if (obj == null) {\r\n-      return false;\r\n-    }\r\n-    if (getClass() != obj.getClass()) {\r\n-      return false;\r\n-    }\r\n-    PartitionKey other = (PartitionKey) obj;\r\n-    if (matrixId != other.matrixId) {\r\n-      return false;\r\n-    }\r\n-    return partitionId == other.partitionId;\r\n-  }\r\n-}\r\n+   */\n+\n+\n+  int startRow = -1;\n+  long startCol = -1;\n+\n+\n+  int endRow = -1;\n+  long endCol = -1;\n+\n+\n+  int indexNum = -1;\n+\n+  public PartitionKey() {}\n+\n+  public PartitionKey(int partitionId, int matrixId, int startRow, long startCol, int endRow, long endCol) {\n+    this(partitionId, matrixId, startRow, startCol, endRow, endCol, -1);\n+  }\n+\n+  public PartitionKey(int partitionId, int matrixId, int startRow, long startCol, int endRow, long endCol, int indexNum) {\n+    super();\n+    this.partitionId = partitionId;\n+    this.matrixId = matrixId;\n+    this.startRow = startRow;\n+    this.startCol = startCol;\n+    this.endRow = endRow;\n+    this.endCol = endCol;\n+    this.indexNum = indexNum;\n+  }\n+\n+  public PartitionKey(int matrixId, int partId) {\n+    this(partId, matrixId, -1, -1, -1, -1);\n+  }\n+\n+  @Override\n+  public String toString() {\n+    StringBuilder builder = new StringBuilder();\n+    builder.append(\"PartitionKey(\");\n+    builder.append(\"matrixId=\").append(matrixId).append(\", \");\n+    builder.append(\"partitionId=\").append(partitionId).append(\", \");\n+    builder.append(\"startRow=\").append(startRow).append(\", \");\n+    builder.append(\"startCol=\").append(startCol).append(\", \");\n+    builder.append(\"endRow=\").append(endRow).append(\", \");\n+    builder.append(\"endCol=\").append(endCol).append(\")\");\n+    builder.append(\"indexNum=\").append(indexNum).append(\")\");\n+    return builder.toString();\n+  }\n+\n+  public int getPartitionId() {\n+    return partitionId;\n+  }\n+\n+  public int getMatrixId() {\n+    return matrixId;\n+  }\n+\n+  public void setMatrixId(int matrixId) {\n+    this.matrixId = matrixId;\n+  }\n+\n+  public int getStartRow() {\n+    return startRow;\n+  }\n+\n+  public long getStartCol() {\n+    return startCol;\n+  }\n+\n+  public void setStartCol(int startCol) {\n+    this.startCol = startCol;\n+  }\n+\n+  public int getEndRow() {\n+    return endRow;\n+  }\n+\n+  public long getEndCol() {\n+    return endCol;\n+  }\n+\n+  public void setEndCol(int endCol) {\n+    this.endCol = endCol;\n+  }\n+\n+  public void setStartCol(long startCol) {\n+    this.startCol = startCol;\n+  }\n+\n+  public void setEndCol(long endCol) {\n+    this.endCol = endCol;\n+  }\n+\n+  public int getIndexNum() {\n+    return indexNum;\n+  }\n+\n+  public void setIndexNum(int indexNum) {\n+    this.indexNum = indexNum;\n+  }\n+\n+  public void setPartitionId(int partitionId) {\n+    this.partitionId = partitionId;\n+  }\n+\n+  public void setStartRow(int startRow) {\n+    this.startRow = startRow;\n+  }\n+\n+  public void setEndRow(int endRow) {\n+    this.endRow = endRow;\n+  }\n+\n+  @Override\n+  public int compareTo(PartitionKey other) {\n+    if (this.startRow > other.startRow) {\n+      return 1;\n+    }\n+\n+    if (this.startRow < other.startRow) {\n+      return -1;\n+    }\n+\n+    if (this.startCol > other.startCol) {\n+      return 1;\n+    }\n+\n+    if (this.startCol < other.startCol) {\n+      return -1;\n+    }\n+    return 0;\n+  }\n+\n+  @Override\n+  public void serialize(ByteBuf buf) {\n+    buf.writeInt(matrixId);\n+    buf.writeInt(partitionId);\n+    buf.writeInt(startRow);\n+    buf.writeInt(endRow);\n+    buf.writeLong(startCol);\n+    buf.writeLong(endCol);\n+    buf.writeInt(indexNum);\n+  }\n+\n+  @Override\n+  public void deserialize(ByteBuf buf) {\n+    matrixId = buf.readInt();\n+    partitionId = buf.readInt();\n+    startRow = buf.readInt();\n+    endRow = buf.readInt();\n+    startCol = buf.readLong();\n+    endCol = buf.readLong();\n+    indexNum = buf.readInt();\n+  }\n+\n+  @Override\n+  public int bufferLen() {\n+    return 8;\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    final int prime = 31;\n+    int result = 1;\n+    result = prime * result + matrixId;\n+    result = prime * result + partitionId;\n+    return result;\n+  }\n+\n+  @Override\n+  public boolean equals(Object obj) {\n+    if (this == obj) {\n+      return true;\n+    }\n+\n+    if (obj == null) {\n+      return false;\n+    }\n+\n+    if (getClass() != obj.getClass()) {\n+      return false;\n+    }\n+\n+    PartitionKey other = (PartitionKey) obj;\n+    if (matrixId != other.matrixId) {\n+      return false;\n+    }\n+    return partitionId == other.partitionId;\n+  }\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 200
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "6",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "Angel-ML-angel",
    "error_id": "1051",
    "information": {
        "errors": [
            {
                "line": "11",
                "severity": "error",
                "message": "Line is longer than 100 characters (found 103).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": " * https://opensource.org/licenses/BSD-3-Clause\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License is\n * distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific language governing permissions and\n * limitations under the License.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1051/TAbstractVector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1051/TAbstractVector.java\nindex 36c9bdcebdf..b0f7e075bc6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1051/TAbstractVector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/intellij/1051/TAbstractVector.java\n@@ -145,7 +145,6 @@ public abstract class TAbstractVector extends TUpdate {\n   /**\n    * The actually value size.\n    *\n-   *\n    * @return if sparse then return size of non-zero values, else size of all\n    */\n   public abstract int size();\n",
            "diff_size": 1
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1051/TAbstractVector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1051/TAbstractVector.java\nindex 36c9bdcebdf..ea5ecde33fc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1051/TAbstractVector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/naturalize/1051/TAbstractVector.java\n@@ -149,4 +149,4 @@ public abstract class TAbstractVector extends TUpdate {\n    * @return if sparse then return size of non-zero values, else size of all\n    */\n   public abstract int size();\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1051/TAbstractVector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1051/TAbstractVector.java\nindex 36c9bdcebdf..36a32da6e37 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/errored/1/1051/TAbstractVector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Angel-ML-angel/codebuff/1051/TAbstractVector.java\n@@ -20,28 +20,36 @@ package com.tencent.angel.ml.math;\n /**\n  * Vector is the Class operated by users.\n  */\n+\n+\n+\n public abstract class TAbstractVector extends TUpdate {\n \n   /**\n    * The Row id.\n    */\n+\n   protected int rowId;\n   /**\n    * The Matrix id.\n    */\n+\n   protected int matrixId;\n   /**\n    * The Clock.\n    */\n+\n   protected int clock;\n   /**\n    * The Dimension.\n    */\n+\n   protected int dim;\n \n   /**\n    * Default construction.\n    */\n+\n   public TAbstractVector() {\n     this.rowId = -1;\n     this.matrixId = -1;\n@@ -54,6 +62,7 @@ public abstract class TAbstractVector extends TUpdate {\n    *\n    * @param other the other\n    */\n+\n   public TAbstractVector(TAbstractVector other) {\n     this.rowId = other.getRowId();\n     this.matrixId = other.getMatrixId();\n@@ -66,6 +75,7 @@ public abstract class TAbstractVector extends TUpdate {\n    *\n    * @return Return the sparsity of vector\n    */\n+\n   public abstract double sparsity();\n \n   /**\n@@ -73,6 +83,7 @@ public abstract class TAbstractVector extends TUpdate {\n    *\n    * @return Return the clone\n    */\n+\n   public abstract TAbstractVector clone();\n \n   /**\n@@ -80,6 +91,7 @@ public abstract class TAbstractVector extends TUpdate {\n    *\n    * @return the type\n    */\n+\n   public abstract VectorType getType();\n \n   /**\n@@ -87,6 +99,7 @@ public abstract class TAbstractVector extends TUpdate {\n    *\n    * @return the dimension\n    */\n+\n   public int getDimension() {\n     return dim;\n   }\n@@ -96,6 +109,7 @@ public abstract class TAbstractVector extends TUpdate {\n    *\n    * @return the row id\n    */\n+\n   public int getRowId() {\n     return rowId;\n   }\n@@ -110,6 +124,7 @@ public abstract class TAbstractVector extends TUpdate {\n    *\n    * @return the clock\n    */\n+\n   public int getClock() {\n     return clock;\n   }\n@@ -120,6 +135,7 @@ public abstract class TAbstractVector extends TUpdate {\n    * @param rowId the row id\n    * @return the row id\n    */\n+\n   public TAbstractVector setRowId(int rowId) {\n     this.rowId = rowId;\n     return this;\n@@ -137,6 +153,7 @@ public abstract class TAbstractVector extends TUpdate {\n    * @param clock the clock\n    * @return the clock\n    */\n+\n   public TAbstractVector setClock(int clock) {\n     this.clock = clock;\n     return this;\n@@ -148,5 +165,7 @@ public abstract class TAbstractVector extends TUpdate {\n    *\n    * @return if sparse then return size of non-zero values, else size of all\n    */\n+\n   public abstract int size();\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 20
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "11",
                    "severity": "error",
                    "message": "Line is longer than 100 characters (found 103).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
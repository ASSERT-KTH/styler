{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3508",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3508/SetInitialPasswordCommandProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3508/SetInitialPasswordCommandProvider.java\nindex 11be369407e..bd64193e206 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3508/SetInitialPasswordCommandProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3508/SetInitialPasswordCommandProvider.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.commandline.admin.security;\n \n import java.nio.file.Path;\n@@ -32,43 +33,43 @@ import static org.neo4j.kernel.api.security.UserManager.INITIAL_USER_NAME;\n public class SetInitialPasswordCommandProvider extends AdminCommand.Provider\n {\n \n-    public SetInitialPasswordCommandProvider()\n-    {\n-        super( \"set-initial-password\" );\n-    }\n+  public SetInitialPasswordCommandProvider()\n+  {\n+    super(\"set-initial-password\");\n+  }\n \n-    @Override\n-    @Nonnull\n-    public Arguments allArguments()\n-    {\n-        return SetInitialPasswordCommand.arguments();\n-    }\n+  @Override\n+  @Nonnull\n+  public Arguments allArguments()\n+  {\n+    return SetInitialPasswordCommand.arguments();\n+  }\n \n-    @Override\n-    @Nonnull\n-    public String description()\n-    {\n-        return \"Sets the initial password of the initial admin user ('\" + INITIAL_USER_NAME + \"').\";\n-    }\n+  @Override\n+  @Nonnull\n+  public String description()\n+  {\n+    return \"Sets the initial password of the initial admin user ('\" + INITIAL_USER_NAME + \"').\";\n+  }\n \n-    @Override\n-    @Nonnull\n-    public String summary()\n-    {\n-        return description();\n-    }\n+  @Override\n+  @Nonnull\n+  public String summary()\n+  {\n+    return description();\n+  }\n \n-    @Override\n-    @Nonnull\n-    public AdminCommandSection commandSection()\n-    {\n-        return AuthenticationCommandSection.instance();\n-    }\n+  @Override\n+  @Nonnull\n+  public AdminCommandSection commandSection()\n+  {\n+    return AuthenticationCommandSection.instance();\n+  }\n \n-    @Override\n-    @Nonnull\n-    public AdminCommand create( Path homeDir, Path configDir, OutsideWorld outsideWorld )\n-    {\n-        return new SetInitialPasswordCommand( homeDir, configDir, outsideWorld );\n-    }\n+  @Override\n+  @Nonnull\n+  public AdminCommand create(Path homeDir, Path configDir, OutsideWorld outsideWorld)\n+  {\n+    return new SetInitialPasswordCommand(homeDir, configDir, outsideWorld);\n+  }\n }\n",
            "diff_size": 35
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3508/SetInitialPasswordCommandProvider.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3508/SetInitialPasswordCommandProvider.java\nindex 11be369407e..721f09d359f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3508/SetInitialPasswordCommandProvider.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3508/SetInitialPasswordCommandProvider.java\n@@ -31,7 +31,6 @@ import static org.neo4j.kernel.api.security.UserManager.INITIAL_USER_NAME;\n \n public class SetInitialPasswordCommandProvider extends AdminCommand.Provider\n {\n-\n     public SetInitialPasswordCommandProvider()\n     {\n         super( \"set-initial-password\" );\n@@ -71,4 +70,4 @@ public class SetInitialPasswordCommandProvider extends AdminCommand.Provider\n     {\n         return new SetInitialPasswordCommand( homeDir, configDir, outsideWorld );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "java110-MicroCommunity",
    "error_id": "187",
    "information": {
        "errors": [
            {
                "line": "261",
                "severity": "error",
                "message": "Line is longer than 150 characters (found 173).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        }\n\n        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n\n        return billOweFeeDtos;\n",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "260",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/187/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/187/FeeInnerServiceSMOImpl.java\nindex e140dafab05..5779ba32537 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/187/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler/187/FeeInnerServiceSMOImpl.java\n@@ -257,8 +257,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n         }\n-\n-        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n+    List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n \n         return billOweFeeDtos;\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/187/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/187/FeeInnerServiceSMOImpl.java\nindex e140dafab05..6a87c4e31bb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/187/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/intellij/187/FeeInnerServiceSMOImpl.java\n@@ -258,7 +258,8 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n             billDto.setPage((page - 1) * billDto.getRow());\n         }\n \n-        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n+        List<BillOweFeeDto> billOweFeeDtos =\n+            BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n \n         return billOweFeeDtos;\n \n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "262",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/187/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/187/FeeInnerServiceSMOImpl.java\nindex e140dafab05..3ed0941cab4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/187/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/naturalize/187/FeeInnerServiceSMOImpl.java\n@@ -151,7 +151,8 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n \n     @Override\n     public List<FeeDto> queryFeeByAttr(FeeAttrDto feeAttrDto) {\n-        //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n+\n+    //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n         int page = feeAttrDto.getPage();\n \n@@ -321,9 +322,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         if (feeConfigDtos == null || feeConfigDtos.size() < 1) {\n             return data;\n         }\n-\n-\n-        for (FeeConfigDto tmpFeeConfigDto : feeConfigDtos) {\n+for (FeeConfigDto tmpFeeConfigDto : feeConfigDtos) {\n             dealFeeConfig(data, tmpFeeConfigDto);\n         }\n \n@@ -367,4 +366,4 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "258",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 173).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/187/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/187/FeeInnerServiceSMOImpl.java\nindex e140dafab05..80ad895b95d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/187/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/codebuff/187/FeeInnerServiceSMOImpl.java\n@@ -1,11 +1,11 @@\n package com.java110.fee.smo.impl;\n \n-\n import com.alibaba.fastjson.JSONArray;\n import com.alibaba.fastjson.JSONObject;\n import com.java110.core.base.smo.BaseServiceSMO;\n import com.java110.dto.PageDto;\n import com.java110.dto.fee.*;\n+\n import com.java110.dto.user.UserDto;\n import com.java110.fee.dao.IFeeAttrServiceDao;\n import com.java110.fee.dao.IFeeServiceDao;\n@@ -19,7 +19,6 @@ import com.java110.utils.util.StringUtil;\n import org.springframework.beans.factory.annotation.Autowired;\n import org.springframework.web.bind.annotation.RequestBody;\n import org.springframework.web.bind.annotation.RestController;\n-\n import java.util.ArrayList;\n import java.util.HashMap;\n import java.util.List;\n@@ -33,6 +32,8 @@ import java.util.Map;\n  * @Version 1.0\n  * add by wuxw 2019/4/24\n  **/\n+\n+\n @RestController\n public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerServiceSMO {\n \n@@ -48,19 +49,19 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n     @Autowired\n     private IFeeAttrServiceDao feeAttrServiceDaoImpl;\n \n-\n     @Override\n     public List<FeeDto> queryFees(@RequestBody FeeDto feeDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n-        int page = feeDto.getPage();\n \n+\n+\n+        int page = feeDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             feeDto.setPage((page - 1) * feeDto.getRow());\n         }\n \n         List<FeeDto> fees = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.getFeeInfo(BeanConvertUtil.beanCovertMap(feeDto)), FeeDto.class);\n-\n         if (fees == null || fees.size() == 0) {\n             return fees;\n         }\n@@ -68,7 +69,6 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         String[] userIds = getUserIds(fees);\n         //\u6839\u636e userId \u67e5\u8be2\u7528\u6237\u4fe1\u606f\n         List<UserDto> users = userInnerServiceSMOImpl.getUserInfo(userIds);\n-\n         for (FeeDto fee : fees) {\n             refreshFee(fee, users);\n         }\n@@ -81,19 +81,17 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         Map info = new HashMap();\n         info.put(\"feeIds\", feeIds);\n         info.put(\"communityId\", feeDto.getCommunityId());\n-\n         List<Map> attrMaps = feeAttrServiceDaoImpl.getFeeAttrInfo(info);\n-\n         List<FeeAttrDto> feeAttrDtos = BeanConvertUtil.covertBeanList(attrMaps, FeeAttrDto.class);\n         List<FeeAttrDto> tmpFeeAttrDtos = null;\n         for (FeeDto tmpFeeDto : fees) {\n             tmpFeeAttrDtos = new ArrayList<>();\n             for (FeeAttrDto feeAttrDto : feeAttrDtos) {\n-\n                 if (tmpFeeDto.getFeeId().equals(feeAttrDto.getFeeId())) {\n                     tmpFeeAttrDtos.add(feeAttrDto);\n                 }\n             }\n+\n             tmpFeeDto.setFeeAttrDtos(tmpFeeAttrDtos);\n         }\n         return fees;\n@@ -101,11 +99,8 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n \n     @Override\n     public List<FeeDto> queryBusinessFees(@RequestBody FeeDto feeDto) {\n-\n         List<Map> fees = feeServiceDaoImpl.getBusinessFeeInfo(BeanConvertUtil.beanCovertMap(feeDto));\n-\n         return BeanConvertUtil.covertBeanList(fees, FeeDto.class);\n-\n     }\n \n     /**\n@@ -114,6 +109,8 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param fee   \u5c0f\u533a\u8d39\u7528\u4fe1\u606f\n      * @param users \u7528\u6237\u5217\u8868\n      */\n+\n+\n     private void refreshFee(FeeDto fee, List<UserDto> users) {\n         for (UserDto user : users) {\n             if (fee.getUserId().equals(user.getUserId())) {\n@@ -125,7 +122,6 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n             //fee.setFeeName(fee.getImportFeeName() + \"(\" + fee.getFeeName() + \")\");\n             fee.setFeeName(fee.getImportFeeName());\n         }\n-\n     }\n \n     /**\n@@ -134,13 +130,13 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param fees \u5c0f\u533a\u697c\u4fe1\u606f\n      * @return \u6279\u91cfuserIds \u4fe1\u606f\n      */\n+\n+\n     private String[] getUserIds(List<FeeDto> fees) {\n         List<String> userIds = new ArrayList<String>();\n         for (FeeDto fee : fees) {\n             userIds.add(fee.getUserId());\n-\n         }\n-\n         return userIds.toArray(new String[userIds.size()]);\n     }\n \n@@ -153,14 +149,14 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n     public List<FeeDto> queryFeeByAttr(FeeAttrDto feeAttrDto) {\n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = feeAttrDto.getPage();\n \n+\n+        int page = feeAttrDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             feeAttrDto.setPage((page - 1) * feeAttrDto.getRow());\n         }\n \n         List<FeeDto> fees = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryFeeByAttr(BeanConvertUtil.beanCovertMap(feeAttrDto)), FeeDto.class);\n-\n         return fees;\n     }\n \n@@ -169,7 +165,6 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         return feeServiceDaoImpl.queryFeeByAttrCount(BeanConvertUtil.beanCovertMap(feeAttrDto));\n     }\n \n-\n     @Override\n     public int queryBillCount(@RequestBody BillDto billDto) {\n         return feeServiceDaoImpl.queryBillCount(BeanConvertUtil.beanCovertMap(billDto));\n@@ -181,21 +176,21 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param billDto\n      * @return\n      */\n+\n     @Override\n     public List<BillDto> queryBills(@RequestBody BillDto billDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = billDto.getPage();\n \n+\n+        int page = billDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n         }\n \n         List<BillDto> billDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBills(BeanConvertUtil.beanCovertMap(billDto)), BillDto.class);\n-\n         return billDtos;\n-\n     }\n \n     @Override\n@@ -203,30 +198,31 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         return feeServiceDaoImpl.computeBillOweFeeCount(BeanConvertUtil.beanCovertMap(feeDto));\n     }\n \n-\n     @Override\n     public List<FeeDto> computeBillOweFee(@RequestBody FeeDto feeDto) {\n-        int page = feeDto.getPage();\n \n+\n+\n+        int page = feeDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             feeDto.setPage((page - 1) * feeDto.getRow());\n         }\n \n         List<FeeDto> fees = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.computeBillOweFee(BeanConvertUtil.beanCovertMap(feeDto)), FeeDto.class);\n-\n         return fees;\n     }\n \n     @Override\n     public List<FeeDto> computeEveryOweFee(FeeDto feeDto) {\n-        int page = feeDto.getPage();\n \n+\n+\n+        int page = feeDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             feeDto.setPage((page - 1) * feeDto.getRow());\n         }\n \n         List<FeeDto> fees = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.computeEveryOweFee(BeanConvertUtil.beanCovertMap(feeDto)), FeeDto.class);\n-\n         return fees;\n     }\n \n@@ -235,7 +231,6 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         return feeServiceDaoImpl.computeEveryOweFeeCount(BeanConvertUtil.beanCovertMap(feeDto));\n     }\n \n-\n     @Override\n     public int queryBillOweFeeCount(@RequestBody BillOweFeeDto billDto) {\n         return feeServiceDaoImpl.queryBillOweFeeCount(BeanConvertUtil.beanCovertMap(billDto));\n@@ -247,21 +242,21 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param billDto\n      * @return\n      */\n+\n     @Override\n     public List<BillOweFeeDto> queryBillOweFees(@RequestBody BillOweFeeDto billDto) {\n \n         //\u6821\u9a8c\u662f\u5426\u4f20\u4e86 \u5206\u9875\u4fe1\u606f\n \n-        int page = billDto.getPage();\n \n+\n+        int page = billDto.getPage();\n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n         }\n \n         List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n-\n         return billOweFeeDtos;\n-\n     }\n \n     /**\n@@ -270,6 +265,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param billDto\n      * @return\n      */\n+\n     @Override\n     public int insertBillOweFees(@RequestBody BillOweFeeDto billDto) {\n         return feeServiceDaoImpl.insertBillOweFees(BeanConvertUtil.beanCovertMap(billDto));\n@@ -286,6 +282,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n      * @param billDto\n      * @return\n      */\n+\n     @Override\n     public int insertBill(@RequestBody BillDto billDto) {\n         return feeServiceDaoImpl.insertBill(BeanConvertUtil.beanCovertMap(billDto));\n@@ -311,47 +308,40 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n \n     @Override\n     public JSONArray getAssetsFee(@RequestBody String communityId) {\n-\n         JSONArray data = new JSONArray();\n         FeeConfigDto feeConfigDto = new FeeConfigDto();\n         feeConfigDto.setCommunityId(communityId);\n         feeConfigDto.setCurTime(DateUtil.getNow(DateUtil.DATE_FORMATE_STRING_A));\n         List<FeeConfigDto> feeConfigDtos = feeConfigInnerServiceSMOImpl.queryFeeConfigs(feeConfigDto);\n-\n         if (feeConfigDtos == null || feeConfigDtos.size() < 1) {\n             return data;\n         }\n \n-\n         for (FeeConfigDto tmpFeeConfigDto : feeConfigDtos) {\n             dealFeeConfig(data, tmpFeeConfigDto);\n         }\n-\n-\n         return data;\n     }\n \n+\n     private void dealFeeConfig(JSONArray data, FeeConfigDto tmpFeeConfigDto) {\n         JSONObject config = new JSONObject();\n         Map info = new HashMap();\n         info.put(\"configId\", tmpFeeConfigDto.getConfigId());\n         info.put(\"communityId\", tmpFeeConfigDto.getCommunityId());\n-        info.put(\"arrearsEndTime\", DateUtil.getNow(DateUtil.DATE_FORMATE_STRING_A));\n+        info.put(\"arrearsEndTime\",\n+            DateUtil.getNow(DateUtil.DATE_FORMATE_STRING_A));\n         info.put(\"state\", FeeDto.STATE_DOING);\n         int oweFeeCount = feeServiceDaoImpl.queryFeesCount(info);\n         config.put(\"oweFeeCount\", oweFeeCount);\n-\n         info.put(\"noArrearsEndTime\", DateUtil.getNow(DateUtil.DATE_FORMATE_STRING_A));\n         info.put(\"state\", FeeDto.STATE_DOING);\n         int feeCount = feeServiceDaoImpl.queryFeesCount(info);\n         config.put(\"feeCount\", feeCount);\n-\n         config.put(\"feeName\", tmpFeeConfigDto.getFeeName());\n         data.add(config);\n-\n     }\n \n-\n     public IFeeServiceDao getFeeServiceDaoImpl() {\n         return feeServiceDaoImpl;\n     }\n@@ -367,4 +357,4 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n     public void setUserInnerServiceSMOImpl(IUserInnerServiceSMO userInnerServiceSMOImpl) {\n         this.userInnerServiceSMOImpl = userInnerServiceSMOImpl;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 70
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "259",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 174).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "259",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "259",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/187/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/187/FeeInnerServiceSMOImpl.java\nindex e140dafab05..da0886a300c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/187/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_random/187/FeeInnerServiceSMOImpl.java\n@@ -256,9 +256,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n \n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n-        }\n-\n-        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n+        }List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n \n         return billOweFeeDtos;\n \n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "260",
                    "severity": "error",
                    "message": "Line is longer than 150 characters (found 169).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/187/FeeInnerServiceSMOImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/187/FeeInnerServiceSMOImpl.java\nindex e140dafab05..5779ba32537 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/errored/1/187/FeeInnerServiceSMOImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/java110-MicroCommunity/styler_three_grams/187/FeeInnerServiceSMOImpl.java\n@@ -257,8 +257,7 @@ public class FeeInnerServiceSMOImpl extends BaseServiceSMO implements IFeeInnerS\n         if (page != PageDto.DEFAULT_PAGE) {\n             billDto.setPage((page - 1) * billDto.getRow());\n         }\n-\n-        List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n+    List<BillOweFeeDto> billOweFeeDtos = BeanConvertUtil.covertBeanList(feeServiceDaoImpl.queryBillOweFees(BeanConvertUtil.beanCovertMap(billDto)), BillOweFeeDto.class);\n \n         return billOweFeeDtos;\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
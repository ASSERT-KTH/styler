{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3174",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3174/ConflictDetectingValueMerger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3174/ConflictDetectingValueMerger.java\nindex 8e372bf5d4f..9302b29efd3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3174/ConflictDetectingValueMerger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3174/ConflictDetectingValueMerger.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import org.neo4j.index.internal.gbptree.GBPTree;\n@@ -34,49 +35,49 @@ import org.neo4j.values.storable.ValueTuple;\n  *\n  * @param <VALUE> type of values being merged.\n  */\n-class ConflictDetectingValueMerger<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue> implements ValueMerger<KEY,VALUE>\n+class ConflictDetectingValueMerger<KEY extends NativeSchemaKey<KEY>, VALUE extends NativeSchemaValue> implements ValueMerger<KEY, VALUE>\n {\n-    private final boolean compareEntityIds;\n+  private final boolean compareEntityIds;\n \n-    private boolean conflict;\n-    private long existingNodeId;\n-    private long addedNodeId;\n+  private boolean conflict;\n+  private long existingNodeId;\n+  private long addedNodeId;\n \n-    ConflictDetectingValueMerger( boolean compareEntityIds )\n-    {\n-        this.compareEntityIds = compareEntityIds;\n-    }\n+  ConflictDetectingValueMerger(boolean compareEntityIds)\n+  {\n+    this.compareEntityIds = compareEntityIds;\n+  }\n \n-    @Override\n-    public VALUE merge( KEY existingKey, KEY newKey, VALUE existingValue, VALUE newValue )\n+  @Override\n+  public VALUE merge(KEY existingKey, KEY newKey, VALUE existingValue, VALUE newValue)\n+  {\n+    if (existingKey.getEntityId() != newKey.getEntityId())\n     {\n-        if ( existingKey.getEntityId() != newKey.getEntityId() )\n-        {\n-            conflict = true;\n-            existingNodeId = existingKey.getEntityId();\n-            addedNodeId = newKey.getEntityId();\n-        }\n-        return null;\n+      conflict = true;\n+      existingNodeId = existingKey.getEntityId();\n+      addedNodeId = newKey.getEntityId();\n     }\n+    return null;\n+  }\n \n-    /**\n-     * To be called for a populated key that is about to be sent off to a {@link Writer}.\n-     * {@link GBPTree}'s ability to check for conflicts while applying updates is an opportunity,\n-     * but also complicates some scenarios. This is why the strictness can be tweaked like this.\n-     *\n-     * @param key key to let know about conflict detection strictness.\n-     */\n-    void controlConflictDetection( KEY key )\n-    {\n-        key.setCompareId( compareEntityIds );\n-    }\n+  /**\n+   * To be called for a populated key that is about to be sent off to a {@link Writer}.\n+   * {@link GBPTree}'s ability to check for conflicts while applying updates is an opportunity,\n+   * but also complicates some scenarios. This is why the strictness can be tweaked like this.\n+   *\n+   * @param key key to let know about conflict detection strictness.\n+   */\n+  void controlConflictDetection(KEY key)\n+  {\n+    key.setCompareId(compareEntityIds);\n+  }\n \n-    void checkConflict( Value[] values ) throws IndexEntryConflictException\n+  void checkConflict(Value[] values) throws IndexEntryConflictException\n+  {\n+    if (conflict)\n     {\n-        if ( conflict )\n-        {\n-            conflict = false;\n-            throw new IndexEntryConflictException( existingNodeId, addedNodeId, ValueTuple.of( values ) );\n-        }\n+      conflict = false;\n+      throw new IndexEntryConflictException(existingNodeId, addedNodeId, ValueTuple.of(values));\n     }\n+  }\n }\n",
            "diff_size": 43
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3174/ConflictDetectingValueMerger.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3174/ConflictDetectingValueMerger.java\nindex 8e372bf5d4f..ce9c310cce0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3174/ConflictDetectingValueMerger.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3174/ConflictDetectingValueMerger.java\n@@ -79,4 +79,4 @@ class ConflictDetectingValueMerger<KEY extends NativeSchemaKey<KEY>, VALUE exten\n             throw new IndexEntryConflictException( existingNodeId, addedNodeId, ValueTuple.of( values ) );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
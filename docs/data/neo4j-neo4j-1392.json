{
    "project_name": "neo4j-neo4j",
    "error_id": "1392",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "152",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "25",
                    "severity": "error",
                    "message": "'}' at column 25 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "83",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "91",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1392/NativeAllEntriesReader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1392/NativeAllEntriesReader.java\nindex 3b7bfafba5e..c9bb00f5220 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1392/NativeAllEntriesReader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1392/NativeAllEntriesReader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.index.schema;\n \n import java.io.IOException;\n@@ -30,16 +31,16 @@ import org.neo4j.internal.helpers.collection.BoundedIterable;\n import org.neo4j.internal.helpers.collection.PrefetchingIterator;\n import org.neo4j.io.pagecache.tracing.cursor.PageCursorTracer;\n \n-public class NativeAllEntriesReader<KEY extends NativeIndexKey<KEY>,VALUE extends NativeIndexValue> implements BoundedIterable<Long>\n+public class NativeAllEntriesReader<KEY extends NativeIndexKey<KEY>, VALUE extends NativeIndexValue> implements BoundedIterable<Long>\n {\n-    private final GBPTree<KEY,VALUE> tree;\n-    private final Layout<KEY,VALUE> layout;\n+    private final GBPTree<KEY, VALUE> tree;\n+    private final Layout<KEY, VALUE> layout;\n     private final long fromIdInclusive;\n     private final long toIdExclusive;\n     private final PageCursorTracer cursorTracer;\n-    private Seeker<KEY,VALUE> seeker;\n+    private Seeker<KEY, VALUE> seeker;\n \n-    NativeAllEntriesReader( GBPTree<KEY,VALUE> tree, Layout<KEY,VALUE> layout, long fromIdInclusive, long toIdExclusive, PageCursorTracer cursorTracer )\n+    NativeAllEntriesReader(GBPTree<KEY, VALUE> tree, Layout<KEY, VALUE> layout, long fromIdInclusive, long toIdExclusive, PageCursorTracer cursorTracer)\n     {\n         this.tree = tree;\n         this.layout = layout;\n@@ -52,15 +53,15 @@ public class NativeAllEntriesReader<KEY extends NativeIndexKey<KEY>,VALUE extend\n     public Iterator<Long> iterator()\n     {\n         KEY from = layout.newKey();\n-        from.initialize( Long.MIN_VALUE );\n+        from.initialize(Long.MIN_VALUE);\n         from.initValuesAsLowest();\n         KEY to = layout.newKey();\n-        to.initialize( Long.MAX_VALUE );\n+        to.initialize(Long.MAX_VALUE);\n         to.initValuesAsHighest();\n         try\n         {\n             closeSeeker();\n-            seeker = tree.seek( from, to, cursorTracer );\n+            seeker = tree.seek(from, to, cursorTracer);\n             return new PrefetchingIterator<>()\n             {\n                 @Override\n@@ -70,34 +71,32 @@ public class NativeAllEntriesReader<KEY extends NativeIndexKey<KEY>,VALUE extend\n                     {\n                         try\n                         {\n-                            if ( !seeker.next() )\n+                            if (!seeker.next())\n                             {\n                                 return null;\n                             }\n                             long id = seeker.key().getEntityId();\n-                            if ( id >= fromIdInclusive && id < toIdExclusive )\n+                            if (id >= fromIdInclusive && id < toIdExclusive)\n                             {\n                                 return id;\n                             }\n-                        }\n-                        catch ( IOException e )\n+                        } catch (IOException e)\n                         {\n-                            throw new UncheckedIOException( e );\n+                            throw new UncheckedIOException(e);\n                         }\n                     }\n-                    while ( true );\n+                    while (true);\n                 }\n             };\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n-            throw new UncheckedIOException( e );\n+            throw new UncheckedIOException(e);\n         }\n     }\n \n     private void closeSeeker() throws IOException\n     {\n-        if ( seeker != null )\n+        if (seeker != null)\n         {\n             seeker.close();\n             seeker = null;\n",
            "diff_size": 19
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
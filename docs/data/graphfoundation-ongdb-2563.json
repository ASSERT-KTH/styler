{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2563",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2563/DocToIdIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2563/DocToIdIterator.java\nindex 21f28805275..eb30a18a9b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2563/DocToIdIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2563/DocToIdIterator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import org.apache.lucene.document.Document;\n@@ -28,93 +29,93 @@ import org.neo4j.graphdb.index.IndexHits;\n \n public class DocToIdIterator extends AbstractExplicitIndexHits\n {\n-    private final Collection<EntityId> removedInTransactionState;\n-    private final EntityId.LongCostume idCostume = new EntityId.LongCostume();\n-    private IndexReference searcherOrNull;\n-    private final IndexHits<Document> source;\n-    private final PrimitiveLongSet idsModifiedInTransactionState;\n+  private final Collection<EntityId> removedInTransactionState;\n+  private final EntityId.LongCostume idCostume = new EntityId.LongCostume();\n+  private IndexReference searcherOrNull;\n+  private final IndexHits<Document> source;\n+  private final PrimitiveLongSet idsModifiedInTransactionState;\n \n-    public DocToIdIterator( IndexHits<Document> source, Collection<EntityId> exclude, IndexReference searcherOrNull,\n-            PrimitiveLongSet idsModifiedInTransactionState )\n+  public DocToIdIterator(IndexHits<Document> source, Collection<EntityId> exclude, IndexReference searcherOrNull,\n+                         PrimitiveLongSet idsModifiedInTransactionState)\n+  {\n+    this.source = source;\n+    this.removedInTransactionState = exclude;\n+    this.searcherOrNull = searcherOrNull;\n+    this.idsModifiedInTransactionState = idsModifiedInTransactionState;\n+    if (source.size() == 0)\n     {\n-        this.source = source;\n-        this.removedInTransactionState = exclude;\n-        this.searcherOrNull = searcherOrNull;\n-        this.idsModifiedInTransactionState = idsModifiedInTransactionState;\n-        if ( source.size() == 0 )\n-        {\n-            close();\n-        }\n+      close();\n     }\n+  }\n \n-    @Override\n-    protected boolean fetchNext()\n+  @Override\n+  protected boolean fetchNext()\n+  {\n+    while (source.hasNext())\n     {\n-        while ( source.hasNext() )\n-        {\n-            Document doc = source.next();\n-            long id = idFromDoc( doc );\n-            boolean documentIsFromStore = doc.getField( FullTxData.TX_STATE_KEY ) == null;\n-            boolean idWillBeReturnedByTransactionStateInstead =\n-                    documentIsFromStore && idsModifiedInTransactionState.contains( id );\n-            if ( removedInTransactionState.contains( idCostume.setId( id ) ) ||\n-                    idWillBeReturnedByTransactionStateInstead )\n-            {\n-                // Skip this one, continue to the next\n-                continue;\n-            }\n-            return next( id );\n-        }\n-        return endReached();\n+      Document doc = source.next();\n+      long id = idFromDoc(doc);\n+      boolean documentIsFromStore = doc.getField(FullTxData.TX_STATE_KEY) == null;\n+      boolean idWillBeReturnedByTransactionStateInstead =\n+          documentIsFromStore && idsModifiedInTransactionState.contains(id);\n+      if (removedInTransactionState.contains(idCostume.setId(id)) ||\n+          idWillBeReturnedByTransactionStateInstead)\n+      {\n+        // Skip this one, continue to the next\n+        continue;\n+      }\n+      return next(id);\n     }\n+    return endReached();\n+  }\n \n-    static long idFromDoc( Document doc )\n-    {\n-        return Long.parseLong( doc.get( LuceneExplicitIndex.KEY_DOC_ID ) );\n-    }\n+  static long idFromDoc(Document doc)\n+  {\n+    return Long.parseLong(doc.get(LuceneExplicitIndex.KEY_DOC_ID));\n+  }\n \n-    protected boolean endReached()\n-    {\n-        close();\n-        return false;\n-    }\n+  protected boolean endReached()\n+  {\n+    close();\n+    return false;\n+  }\n \n-    @Override\n-    public void close()\n+  @Override\n+  public void close()\n+  {\n+    if (!isClosed())\n     {\n-        if ( !isClosed() )\n-        {\n-            this.searcherOrNull.close();\n-            this.searcherOrNull = null;\n-        }\n+      this.searcherOrNull.close();\n+      this.searcherOrNull = null;\n     }\n+  }\n \n-    @Override\n-    public int size()\n-    {\n-        /*\n-         * If stuff was removed from the index during this tx and during the same tx a query that matches them is\n-         * issued, then it is possible to get negative size from the IndexHits result, if exclude is larger than source.\n-         * To avoid such weirdness, we return at least 0. Note that the iterator will return no results, as it should.\n-         */\n-        return Math.max( 0, source.size() - removedInTransactionState.size() );\n-    }\n+  @Override\n+  public int size()\n+  {\n+    /*\n+     * If stuff was removed from the index during this tx and during the same tx a query that matches them is\n+     * issued, then it is possible to get negative size from the IndexHits result, if exclude is larger than source.\n+     * To avoid such weirdness, we return at least 0. Note that the iterator will return no results, as it should.\n+     */\n+    return Math.max(0, source.size() - removedInTransactionState.size());\n+  }\n \n-    private boolean isClosed()\n-    {\n-        return searcherOrNull == null;\n-    }\n+  private boolean isClosed()\n+  {\n+    return searcherOrNull == null;\n+  }\n \n-    @Override\n-    public float currentScore()\n-    {\n-        return source.currentScore();\n-    }\n+  @Override\n+  public float currentScore()\n+  {\n+    return source.currentScore();\n+  }\n \n-    @Override\n-    protected void finalize() throws Throwable\n-    {\n-        close();\n-        super.finalize();\n-    }\n+  @Override\n+  protected void finalize() throws Throwable\n+  {\n+    close();\n+    super.finalize();\n+  }\n }\n",
            "diff_size": 89
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2563/DocToIdIterator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2563/DocToIdIterator.java\nindex 21f28805275..909bee0f897 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2563/DocToIdIterator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2563/DocToIdIterator.java\n@@ -57,15 +57,17 @@ public class DocToIdIterator extends AbstractExplicitIndexHits\n             boolean documentIsFromStore = doc.getField( FullTxData.TX_STATE_KEY ) == null;\n             boolean idWillBeReturnedByTransactionStateInstead =\n                     documentIsFromStore && idsModifiedInTransactionState.contains( id );\n-            if ( removedInTransactionState.contains( idCostume.setId( id ) ) ||\n+if ( removedInTransactionState.contains( idCostume.setId( id ) ) ||\n                     idWillBeReturnedByTransactionStateInstead )\n             {\n                 // Skip this one, continue to the next\n                 continue;\n             }\n-            return next( id );\n+\n+return next( id );\n         }\n-        return endReached();\n+\n+return endReached();\n     }\n \n     static long idFromDoc( Document doc )\n@@ -117,4 +119,4 @@ public class DocToIdIterator extends AbstractExplicitIndexHits\n         close();\n         super.finalize();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
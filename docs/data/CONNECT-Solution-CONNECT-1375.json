{
    "project_name": "CONNECT-Solution-CONNECT",
    "error_id": "1375",
    "information": {
        "errors": [
            {
                "line": "27",
                "severity": "error",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\npackage gov.hhs.fha.nhinc.admindistribution.aspect;\n\nimport java.math.BigInteger;\nimport java.util.ArrayList;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1375/EDXLDistributionPayloadSizeExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1375/EDXLDistributionPayloadSizeExtractor.java\nindex e7d4e79c2a3..82065faea33 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1375/EDXLDistributionPayloadSizeExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler/1375/EDXLDistributionPayloadSizeExtractor.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.aspect;\n \n import java.math.BigInteger;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1375/EDXLDistributionPayloadSizeExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1375/EDXLDistributionPayloadSizeExtractor.java\nindex e7d4e79c2a3..2ddb531d222 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1375/EDXLDistributionPayloadSizeExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/intellij/1375/EDXLDistributionPayloadSizeExtractor.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.aspect;\n \n import java.math.BigInteger;\n@@ -36,55 +37,54 @@ import oasis.names.tc.emergency.edxl.de._1.XmlContentType;\n \n /**\n  * @author zmelnick\n- *\n  */\n public class EDXLDistributionPayloadSizeExtractor {\n \n-    /**\n-     * Determines the payload sizes for each alert message.\n-     *\n-     * @param alertMessage the EDXLDistribution.\n-     * @return list of sizes\n-     */\n-    public List<String> getPayloadSizes(EDXLDistribution alertMessage) {\n-        List<String> payloadSize = new ArrayList<>();\n-        if (alertMessage != null) {\n-            List<ContentObjectType> contents = alertMessage.getContentObject();\n-            for (ContentObjectType message : contents) {\n-                payloadSize.add(getPayloadSize(message));\n-            }\n-        }\n-        return payloadSize;\n+  /**\n+   * Determines the payload sizes for each alert message.\n+   *\n+   * @param alertMessage the EDXLDistribution.\n+   * @return list of sizes\n+   */\n+  public List<String> getPayloadSizes(EDXLDistribution alertMessage) {\n+    List<String> payloadSize = new ArrayList<>();\n+    if (alertMessage != null) {\n+      List<ContentObjectType> contents = alertMessage.getContentObject();\n+      for (ContentObjectType message : contents) {\n+        payloadSize.add(getPayloadSize(message));\n+      }\n     }\n+    return payloadSize;\n+  }\n \n-    private String getPayloadSize(ContentObjectType message) {\n-        int result = 0;\n-        result += getContentXMLSize(message.getXmlContent());\n-        result += getNonContentXMLSize(message.getNonXMLContent());\n-        return \"\" + result;\n-    }\n+  private String getPayloadSize(ContentObjectType message) {\n+    int result = 0;\n+    result += getContentXMLSize(message.getXmlContent());\n+    result += getNonContentXMLSize(message.getNonXMLContent());\n+    return \"\" + result;\n+  }\n \n-    private int getContentXMLSize(XmlContentType contentXML) {\n-        if (contentXML == null) {\n-            return 0;\n-        } else {\n-            int embeddedXMLSize = contentXML.getEmbeddedXMLContent().size();\n-            int keyXMLSize = contentXML.getKeyXMLContent().size();\n-            return embeddedXMLSize + keyXMLSize;\n-        }\n+  private int getContentXMLSize(XmlContentType contentXML) {\n+    if (contentXML == null) {\n+      return 0;\n+    } else {\n+      int embeddedXMLSize = contentXML.getEmbeddedXMLContent().size();\n+      int keyXMLSize = contentXML.getKeyXMLContent().size();\n+      return embeddedXMLSize + keyXMLSize;\n     }\n+  }\n \n-    private int getNonContentXMLSize(NonXMLContentType nonContentXML) {\n-        if (nonContentXML == null) {\n-            return 0;\n-        } else {\n-            BigInteger size = nonContentXML.getSize();\n-            if (size != null) {\n-                return size.intValue();\n-            } else {\n-                return 0;\n-            }\n-        }\n+  private int getNonContentXMLSize(NonXMLContentType nonContentXML) {\n+    if (nonContentXML == null) {\n+      return 0;\n+    } else {\n+      BigInteger size = nonContentXML.getSize();\n+      if (size != null) {\n+        return size.intValue();\n+      } else {\n+        return 0;\n+      }\n     }\n+  }\n \n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1375/EDXLDistributionPayloadSizeExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1375/EDXLDistributionPayloadSizeExtractor.java\nindex e7d4e79c2a3..f3bd0d3f7bf 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1375/EDXLDistributionPayloadSizeExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/naturalize/1375/EDXLDistributionPayloadSizeExtractor.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.aspect;\n \n import java.math.BigInteger;\n@@ -61,7 +62,8 @@ public class EDXLDistributionPayloadSizeExtractor {\n         int result = 0;\n         result += getContentXMLSize(message.getXmlContent());\n         result += getNonContentXMLSize(message.getNonXMLContent());\n-        return \"\" + result;\n+\n+return \"\" + result;\n     }\n \n     private int getContentXMLSize(XmlContentType contentXML) {\n@@ -70,7 +72,8 @@ public class EDXLDistributionPayloadSizeExtractor {\n         } else {\n             int embeddedXMLSize = contentXML.getEmbeddedXMLContent().size();\n             int keyXMLSize = contentXML.getKeyXMLContent().size();\n-            return embeddedXMLSize + keyXMLSize;\n+\n+return embeddedXMLSize + keyXMLSize;\n         }\n     }\n \n@@ -87,4 +90,4 @@ public class EDXLDistributionPayloadSizeExtractor {\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "72",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "74",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "86",
                    "column": "11",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "88",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "93",
                    "column": "15",
                    "severity": "error",
                    "message": "'if' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "95",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1375/EDXLDistributionPayloadSizeExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1375/EDXLDistributionPayloadSizeExtractor.java\nindex e7d4e79c2a3..f344ca68036 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1375/EDXLDistributionPayloadSizeExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/codebuff/1375/EDXLDistributionPayloadSizeExtractor.java\n@@ -38,6 +38,8 @@ import oasis.names.tc.emergency.edxl.de._1.XmlContentType;\n  * @author zmelnick\n  *\n  */\n+\n+\n public class EDXLDistributionPayloadSizeExtractor {\n \n     /**\n@@ -46,6 +48,8 @@ public class EDXLDistributionPayloadSizeExtractor {\n      * @param alertMessage the EDXLDistribution.\n      * @return list of sizes\n      */\n+\n+\n     public List<String> getPayloadSizes(EDXLDistribution alertMessage) {\n         List<String> payloadSize = new ArrayList<>();\n         if (alertMessage != null) {\n@@ -65,26 +69,35 @@ public class EDXLDistributionPayloadSizeExtractor {\n     }\n \n     private int getContentXMLSize(XmlContentType contentXML) {\n-        if (contentXML == null) {\n+        if(contentXML == null) {\n             return 0;\n-        } else {\n+        }\n+\n+\n+else {\n             int embeddedXMLSize = contentXML.getEmbeddedXMLContent().size();\n+\n             int keyXMLSize = contentXML.getKeyXMLContent().size();\n             return embeddedXMLSize + keyXMLSize;\n         }\n     }\n \n     private int getNonContentXMLSize(NonXMLContentType nonContentXML) {\n-        if (nonContentXML == null) {\n+        if(nonContentXML == null) {\n             return 0;\n-        } else {\n+        }\n+\n+\n+else {\n             BigInteger size = nonContentXML.getSize();\n-            if (size != null) {\n+            if(size != null) {\n                 return size.intValue();\n-            } else {\n+            }\n+\n+\n+else {\n                 return 0;\n             }\n         }\n     }\n-\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "27",
                    "severity": "error",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1375/EDXLDistributionPayloadSizeExtractor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1375/EDXLDistributionPayloadSizeExtractor.java\nindex e7d4e79c2a3..82065faea33 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/errored/1/1375/EDXLDistributionPayloadSizeExtractor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/CONNECT-Solution-CONNECT/styler_three_grams/1375/EDXLDistributionPayloadSizeExtractor.java\n@@ -24,6 +24,7 @@\n  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  */\n+\n package gov.hhs.fha.nhinc.admindistribution.aspect;\n \n import java.math.BigInteger;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff",
        "styler_random"
    ]
}
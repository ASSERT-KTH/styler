{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2519",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "49",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "54",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "172",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "200",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "231",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "253",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "286",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "292",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "294",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2519/WorkSync.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2519/WorkSync.java\nindex 1b391e51c28..a58650a650f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2519/WorkSync.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2519/WorkSync.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.concurrent;\n \n import java.util.concurrent.ExecutionException;\n@@ -45,279 +46,275 @@ import java.util.concurrent.locks.LockSupport;\n  *\n  * @see Work\n  */\n-@SuppressWarnings( {\"unchecked\", \"NumberEquality\"} )\n-public class WorkSync<Material, W extends Work<Material,W>>\n+@SuppressWarnings({\"unchecked\", \"NumberEquality\"})\n+public class WorkSync<Material, W extends Work<Material, W>>\n {\n-    private final Material material;\n-    private final AtomicReference<WorkUnit<Material,W>> stack;\n-    private static final WorkUnit<?,?> stackEnd = new WorkUnit<>( null, null );\n-    private final AtomicReference<Thread> lock;\n+  private final Material material;\n+  private final AtomicReference<WorkUnit<Material, W>> stack;\n+  private static final WorkUnit<?, ?> stackEnd = new WorkUnit<>(null, null);\n+  private final AtomicReference<Thread> lock;\n+\n+  /**\n+   * Create a new WorkSync that will synchronize the application of work to\n+   * the given material.\n+   *\n+   * @param material The material we want to apply work to, in a thread-safe\n+   *                 way.\n+   */\n+  public WorkSync(Material material)\n+  {\n+    this.material = material;\n+    this.stack = new AtomicReference<>((WorkUnit<Material, W>) stackEnd);\n+    this.lock = new AtomicReference<>();\n+  }\n \n-    /**\n-     * Create a new WorkSync that will synchronize the application of work to\n-     * the given material.\n-     *\n-     * @param material The material we want to apply work to, in a thread-safe\n-     * way.\n-     */\n-    public WorkSync( Material material )\n+  /**\n+   * Apply the given work to the material in a thread-safe way, possibly by\n+   * combining it with other work.\n+   *\n+   * @param work The work to be done.\n+   * @throws ExecutionException if this thread ends up performing the piled up work,\n+   *                            and any work unit in the pile throws an exception. Thus the current thread is not\n+   *                            guaranteed to observe any exception its unit of work might throw, since the\n+   *                            exception will be thrown in whichever thread that ends up actually performing the work.\n+   */\n+  public void apply(W work) throws ExecutionException\n+  {\n+    // Schedule our work on the stack.\n+    WorkUnit<Material, W> unit = enqueueWork(work);\n+\n+    // Try grabbing the lock to do all the work, until our work unit\n+    // has been completed.\n+    int tryCount = 0;\n+    do\n     {\n-        this.material = material;\n-        this.stack = new AtomicReference<>( (WorkUnit<Material,W>) stackEnd );\n-        this.lock = new AtomicReference<>();\n+      tryCount++;\n+      checkFailure(tryDoWork(unit, tryCount, true));\n     }\n+    while (!unit.isDone());\n+  }\n \n-    /**\n-     * Apply the given work to the material in a thread-safe way, possibly by\n-     * combining it with other work.\n-     *\n-     * @param work The work to be done.\n-     * @throws ExecutionException if this thread ends up performing the piled up work,\n-     * and any work unit in the pile throws an exception. Thus the current thread is not\n-     * guaranteed to observe any exception its unit of work might throw, since the\n-     * exception will be thrown in whichever thread that ends up actually performing the work.\n-     */\n-    public void apply( W work ) throws ExecutionException\n-    {\n-        // Schedule our work on the stack.\n-        WorkUnit<Material,W> unit = enqueueWork( work );\n+  /**\n+   * Apply the given work to the material in a thread-safe way, possibly asynchronously if contention is observed\n+   * with other threads, and possibly by combining it with other work.\n+   * <p>\n+   * The work will be applied immediately, if no other thread is contending for the material. Otherwise, the work\n+   * will be enqueued for later application, which may occur on the next call to {@link #apply(Work)} on this\n+   * {@code WorkSync}, or the next call to {@link AsyncApply#await()} from an {@code AsyncApply} instance created\n+   * from this {@code WorkSync}. These calls, and thus the application of the enqueued work, may occur in an\n+   * arbitrary thread.\n+   * <p>\n+   * The returned {@link AsyncApply} instance is not thread-safe. If so desired, its ownership can be transferred to\n+   * other threads, but only in a way that ensures safe publication.\n+   * <p>\n+   * If the given work causes an exception to be thrown, then that exception will only be observed by the thread that\n+   * ultimately applies the work. Thus, exceptions caused by this work are not guaranteed to be associated with, or\n+   * made visible via, the returned {@link AsyncApply} instance.\n+   *\n+   * @param work The work to be done.\n+   * @return An {@link AsyncApply} instance representing the enqueued - and possibly completed - work.\n+   */\n+  public AsyncApply applyAsync(W work)\n+  {\n+    // Schedule our work on the stack.\n+    WorkUnit<Material, W> unit = enqueueWork(work);\n \n-        // Try grabbing the lock to do all the work, until our work unit\n-        // has been completed.\n-        int tryCount = 0;\n-        do\n-        {\n-            tryCount++;\n-            checkFailure( tryDoWork( unit, tryCount, true ) );\n-        }\n-        while ( !unit.isDone() );\n-    }\n+    // Apply the work if the lock is immediately available.\n+    Throwable initialThrowable = tryDoWork(unit, 100, false);\n \n-    /**\n-     * Apply the given work to the material in a thread-safe way, possibly asynchronously if contention is observed\n-     * with other threads, and possibly by combining it with other work.\n-     * <p>\n-     * The work will be applied immediately, if no other thread is contending for the material. Otherwise, the work\n-     * will be enqueued for later application, which may occur on the next call to {@link #apply(Work)} on this\n-     * {@code WorkSync}, or the next call to {@link AsyncApply#await()} from an {@code AsyncApply} instance created\n-     * from this {@code WorkSync}. These calls, and thus the application of the enqueued work, may occur in an\n-     * arbitrary thread.\n-     * <p>\n-     * The returned {@link AsyncApply} instance is not thread-safe. If so desired, its ownership can be transferred to\n-     * other threads, but only in a way that ensures safe publication.\n-     * <p>\n-     * If the given work causes an exception to be thrown, then that exception will only be observed by the thread that\n-     * ultimately applies the work. Thus, exceptions caused by this work are not guaranteed to be associated with, or\n-     * made visible via, the returned {@link AsyncApply} instance.\n-     *\n-     * @param work The work to be done.\n-     * @return An {@link AsyncApply} instance representing the enqueued - and possibly completed - work.\n-     */\n-    public AsyncApply applyAsync( W work )\n+    return new AsyncApply()\n     {\n-        // Schedule our work on the stack.\n-        WorkUnit<Material,W> unit = enqueueWork( work );\n+      Throwable throwable = initialThrowable;\n \n-        // Apply the work if the lock is immediately available.\n-        Throwable initialThrowable = tryDoWork( unit, 100, false );\n+      @Override\n+      public void await() throws ExecutionException\n+      {\n \n-        return new AsyncApply()\n+        checkFailure(throwable);\n+        int tryCount = 0;\n+        while (!unit.isDone())\n         {\n-            Throwable throwable = initialThrowable;\n-\n-            @Override\n-            public void await() throws ExecutionException\n-            {\n+          tryCount++;\n+          checkFailure(throwable = tryDoWork(unit, tryCount, true));\n+        }\n+      }\n+    };\n+  }\n \n-                checkFailure( throwable );\n-                int tryCount = 0;\n-                while ( !unit.isDone() )\n-                {\n-                    tryCount++;\n-                    checkFailure( throwable = tryDoWork( unit, tryCount, true ) );\n-                }\n-            }\n-        };\n-    }\n+  private WorkUnit<Material, W> enqueueWork(W work)\n+  {\n+    WorkUnit<Material, W> unit = new WorkUnit<>(work, Thread.currentThread());\n+    unit.next = stack.getAndSet(unit); // benign race, see the batch.next read-loop in combine()\n+    return unit;\n+  }\n \n-    private WorkUnit<Material,W> enqueueWork( W work )\n+  private Throwable tryDoWork(WorkUnit<Material, W> unit, int tryCount, boolean block)\n+  {\n+    if (tryLock(tryCount, unit, block))\n     {\n-        WorkUnit<Material,W> unit = new WorkUnit<>( work, Thread.currentThread() );\n-        unit.next = stack.getAndSet( unit ); // benign race, see the batch.next read-loop in combine()\n-        return unit;\n+      WorkUnit<Material, W> batch = grabBatch();\n+      try\n+      {\n+        return doSynchronizedWork(batch);\n+      } finally\n+      {\n+        unlock();\n+        unparkAnyWaiters();\n+        markAsDone(batch);\n+      }\n     }\n+    return null;\n+  }\n \n-    private Throwable tryDoWork( WorkUnit<Material,W> unit, int tryCount, boolean block )\n+  private void unparkAnyWaiters()\n+  {\n+    WorkUnit<Material, W> waiter = stack.get();\n+    if (waiter != stackEnd)\n     {\n-        if ( tryLock( tryCount, unit, block ) )\n-        {\n-            WorkUnit<Material,W> batch = grabBatch();\n-            try\n-            {\n-                return doSynchronizedWork( batch );\n-            }\n-            finally\n-            {\n-                unlock();\n-                unparkAnyWaiters();\n-                markAsDone( batch );\n-            }\n-        }\n-        return null;\n+      waiter.unpark();\n     }\n+  }\n \n-    private void unparkAnyWaiters()\n+  private void checkFailure(Throwable failure) throws ExecutionException\n+  {\n+    if (failure != null)\n     {\n-        WorkUnit<Material,W> waiter = stack.get();\n-        if ( waiter != stackEnd )\n-        {\n-            waiter.unpark();\n-        }\n+      throw new ExecutionException(failure);\n     }\n+  }\n \n-    private void checkFailure( Throwable failure ) throws ExecutionException\n+  private boolean tryLock(int tryCount, WorkUnit<Material, W> unit, boolean block)\n+  {\n+    if (lock.compareAndSet(null, Thread.currentThread()))\n     {\n-        if ( failure != null )\n-        {\n-            throw new ExecutionException( failure );\n-        }\n+      // Got the lock!\n+      return true;\n     }\n \n-    private boolean tryLock( int tryCount, WorkUnit<Material,W> unit, boolean block )\n+    // Did not get the lock, spend some time until our work has either been completed,\n+    // or we get the lock.\n+    if (tryCount < 10)\n     {\n-        if ( lock.compareAndSet( null, Thread.currentThread() ) )\n-        {\n-            // Got the lock!\n-            return true;\n-        }\n-\n-        // Did not get the lock, spend some time until our work has either been completed,\n-        // or we get the lock.\n-        if ( tryCount < 10 )\n-        {\n-            // todo Java9: Thread.onSpinWait() ?\n-            Thread.yield();\n-        }\n-        else if ( block )\n-        {\n-            unit.park( 10, TimeUnit.MILLISECONDS );\n-        }\n-        return false;\n-    }\n-\n-    private void unlock()\n+      // todo Java9: Thread.onSpinWait() ?\n+      Thread.yield();\n+    } else if (block)\n     {\n-        if ( lock.getAndSet( null ) != Thread.currentThread() )\n-        {\n-            throw new IllegalMonitorStateException(\n-                    \"WorkSync accidentally released a lock not owned by the current thread\" );\n-        }\n+      unit.park(10, TimeUnit.MILLISECONDS);\n     }\n+    return false;\n+  }\n \n-    private WorkUnit<Material,W> grabBatch()\n+  private void unlock()\n+  {\n+    if (lock.getAndSet(null) != Thread.currentThread())\n     {\n-        return stack.getAndSet( (WorkUnit<Material,W>) stackEnd );\n+      throw new IllegalMonitorStateException(\n+          \"WorkSync accidentally released a lock not owned by the current thread\");\n     }\n+  }\n \n-    private Throwable doSynchronizedWork( WorkUnit<Material,W> batch )\n-    {\n-        W combinedWork = combine( batch );\n-        Throwable failure = null;\n+  private WorkUnit<Material, W> grabBatch()\n+  {\n+    return stack.getAndSet((WorkUnit<Material, W>) stackEnd);\n+  }\n \n-        if ( combinedWork != null )\n-        {\n-            try\n-            {\n-                combinedWork.apply( material );\n-            }\n-            catch ( Throwable throwable )\n-            {\n-                failure = throwable;\n-            }\n-        }\n-        return failure;\n+  private Throwable doSynchronizedWork(WorkUnit<Material, W> batch)\n+  {\n+    W combinedWork = combine(batch);\n+    Throwable failure = null;\n+\n+    if (combinedWork != null)\n+    {\n+      try\n+      {\n+        combinedWork.apply(material);\n+      } catch (Throwable throwable)\n+      {\n+        failure = throwable;\n+      }\n     }\n+    return failure;\n+  }\n \n-    private W combine( WorkUnit<Material,W> batch )\n+  private W combine(WorkUnit<Material, W> batch)\n+  {\n+    W result = null;\n+    while (batch != stackEnd)\n     {\n-        W result = null;\n-        while ( batch != stackEnd )\n-        {\n-            if ( result == null )\n-            {\n-                result = batch.work;\n-            }\n-            else\n-            {\n-                result = result.combine( batch.work );\n-            }\n+      if (result == null)\n+      {\n+        result = batch.work;\n+      } else\n+      {\n+        result = result.combine(batch.work);\n+      }\n \n-            WorkUnit<Material,W> tmp = batch.next;\n-            while ( tmp == null )\n-            {\n-                // We may see 'null' via race, as work units are put on the\n-                // stack before their 'next' pointers are updated. We just spin\n-                // until we observe their volatile write to 'next'.\n-                // todo Java9: Thread.onSpinWait() ?\n-                Thread.yield();\n-                tmp = batch.next;\n-            }\n-            batch = tmp;\n-        }\n-        return result;\n+      WorkUnit<Material, W> tmp = batch.next;\n+      while (tmp == null)\n+      {\n+        // We may see 'null' via race, as work units are put on the\n+        // stack before their 'next' pointers are updated. We just spin\n+        // until we observe their volatile write to 'next'.\n+        // todo Java9: Thread.onSpinWait() ?\n+        Thread.yield();\n+        tmp = batch.next;\n+      }\n+      batch = tmp;\n     }\n+    return result;\n+  }\n \n-    private void markAsDone( WorkUnit<Material,W> batch )\n+  private void markAsDone(WorkUnit<Material, W> batch)\n+  {\n+    while (batch != stackEnd)\n     {\n-        while ( batch != stackEnd )\n-        {\n-            batch.complete();\n-            batch = batch.next;\n-        }\n+      batch.complete();\n+      batch = batch.next;\n     }\n+  }\n \n-    private static class WorkUnit<Material, W extends Work<Material,W>> extends AtomicInteger\n-    {\n-        static final int STATE_QUEUED = 0;\n-        static final int STATE_PARKED = 1;\n-        static final int STATE_DONE = 2;\n+  private static class WorkUnit<Material, W extends Work<Material, W>> extends AtomicInteger\n+  {\n+    static final int STATE_QUEUED = 0;\n+    static final int STATE_PARKED = 1;\n+    static final int STATE_DONE = 2;\n \n-        final W work;\n-        final Thread owner;\n-        volatile WorkUnit<Material,W> next;\n+    final W work;\n+    final Thread owner;\n+    volatile WorkUnit<Material, W> next;\n \n-        private WorkUnit( W work, Thread owner )\n-        {\n-            this.work = work;\n-            this.owner = owner;\n-        }\n+    private WorkUnit(W work, Thread owner)\n+    {\n+      this.work = work;\n+      this.owner = owner;\n+    }\n \n-        void park( long time, TimeUnit unit )\n-        {\n-            if ( compareAndSet( STATE_QUEUED, STATE_PARKED ) )\n-            {\n-                LockSupport.parkNanos( unit.toNanos( time ) );\n-                compareAndSet( STATE_PARKED, STATE_QUEUED );\n-            }\n-        }\n+    void park(long time, TimeUnit unit)\n+    {\n+      if (compareAndSet(STATE_QUEUED, STATE_PARKED))\n+      {\n+        LockSupport.parkNanos(unit.toNanos(time));\n+        compareAndSet(STATE_PARKED, STATE_QUEUED);\n+      }\n+    }\n \n-        boolean isDone()\n-        {\n-            return get() == STATE_DONE;\n-        }\n+    boolean isDone()\n+    {\n+      return get() == STATE_DONE;\n+    }\n \n-        void complete()\n-        {\n-            int previousState = getAndSet( STATE_DONE );\n-            if ( previousState == STATE_PARKED )\n-            {\n-                unpark();\n-            }\n-        }\n+    void complete()\n+    {\n+      int previousState = getAndSet(STATE_DONE);\n+      if (previousState == STATE_PARKED)\n+      {\n+        unpark();\n+      }\n+    }\n \n-        void unpark()\n-        {\n-            LockSupport.unpark( owner );\n-        }\n+    void unpark()\n+    {\n+      LockSupport.unpark(owner);\n     }\n+  }\n }\n",
            "diff_size": 309
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2519/WorkSync.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2519/WorkSync.java\nindex 1b391e51c28..f16bb6da249 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2519/WorkSync.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2519/WorkSync.java\n@@ -50,7 +50,7 @@ public class WorkSync<Material, W extends Work<Material,W>>\n {\n     private final Material material;\n     private final AtomicReference<WorkUnit<Material,W>> stack;\n-    private static final WorkUnit<?,?> stackEnd = new WorkUnit<>( null, null );\n+    private static final WorkUnit<?, ?> stackEnd = new WorkUnit<>( null, null );\n     private final AtomicReference<Thread> lock;\n \n     /**\n@@ -120,16 +120,14 @@ public class WorkSync<Material, W extends Work<Material,W>>\n \n         // Apply the work if the lock is immediately available.\n         Throwable initialThrowable = tryDoWork( unit, 100, false );\n-\n-        return new AsyncApply()\n+return new AsyncApply()\n         {\n             Throwable throwable = initialThrowable;\n \n             @Override\n             public void await() throws ExecutionException\n             {\n-\n-                checkFailure( throwable );\n+    checkFailure( throwable );\n                 int tryCount = 0;\n                 while ( !unit.isDone() )\n                 {\n@@ -209,9 +207,8 @@ public class WorkSync<Material, W extends Work<Material,W>>\n     {\n         if ( lock.getAndSet( null ) != Thread.currentThread() )\n         {\n-            throw new IllegalMonitorStateException(\n-                    \"WorkSync accidentally released a lock not owned by the current thread\" );\n-        }\n+            throw new IllegalMonitorStateException( \"WorkSync accidentally released a lock not owned by the current thread\" );\n+    }\n     }\n \n     private WorkUnit<Material,W> grabBatch()\n@@ -262,9 +259,11 @@ public class WorkSync<Material, W extends Work<Material,W>>\n                 Thread.yield();\n                 tmp = batch.next;\n             }\n-            batch = tmp;\n+\n+batch = tmp;\n         }\n-        return result;\n+\n+return result;\n     }\n \n     private void markAsDone( WorkUnit<Material,W> batch )\n@@ -320,4 +319,4 @@ public class WorkSync<Material, W extends Work<Material,W>>\n             LockSupport.unpark( owner );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 13
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
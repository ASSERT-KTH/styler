{
    "project_name": "IQSS-dataverse",
    "error_id": "39",
    "information": {
        "errors": [
            {
                "line": "55",
                "column": "9",
                "severity": "error",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "            ctxt.datasets().merge(dataset);\n        } catch (HttpException hex) {\n        \tString message = BundleUtil.getStringFromBundle(\"pids.deletePid.failureExpected\", Arrays.asList(dataset.getGlobalId().asString(), Integer.toString(hex.getReasonCode())));\n            logger.info(message);\n            throw new IllegalCommandException(message, this);\n        } catch (Exception ex) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "59",
                    "column": "9",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/39/DeletePidCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/39/DeletePidCommand.java\nindex 274aeb3c3fd..408fd543b9f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/39/DeletePidCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler/39/DeletePidCommand.java\n@@ -52,7 +52,7 @@ public class DeletePidCommand extends AbstractVoidCommand {\n             dataset.setIdentifierRegistered(false);\n             ctxt.datasets().merge(dataset);\n         } catch (HttpException hex) {\n-        \tString message = BundleUtil.getStringFromBundle(\"pids.deletePid.failureExpected\", Arrays.asList(dataset.getGlobalId().asString(), Integer.toString(hex.getReasonCode())));\n+        String message = BundleUtil.getStringFromBundle(\"pids.deletePid.failureExpected\", Arrays.asList(dataset.getGlobalId().asString(), Integer.toString(hex.getReasonCode())));\n             logger.info(message);\n             throw new IllegalCommandException(message, this);\n         } catch (Exception ex) {\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/39/DeletePidCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/39/DeletePidCommand.java\nindex 274aeb3c3fd..8364a3a2dee 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/39/DeletePidCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/intellij/39/DeletePidCommand.java\n@@ -25,41 +25,43 @@ import java.util.logging.Logger;\n @RequiredPermissions({})\n public class DeletePidCommand extends AbstractVoidCommand {\n \n-    private static final Logger logger = Logger.getLogger(ReservePidCommand.class.getCanonicalName());\n+  private static final Logger logger = Logger.getLogger(ReservePidCommand.class.getCanonicalName());\n \n-    private final Dataset dataset;\n+  private final Dataset dataset;\n \n-    public DeletePidCommand(DataverseRequest request, Dataset dataset) {\n-        super(request, dataset);\n-        this.dataset = dataset;\n-    }\n+  public DeletePidCommand(DataverseRequest request, Dataset dataset) {\n+    super(request, dataset);\n+    this.dataset = dataset;\n+  }\n \n-    @Override\n-    protected void executeImpl(CommandContext ctxt) throws CommandException {\n+  @Override\n+  protected void executeImpl(CommandContext ctxt) throws CommandException {\n \n-        if (!(getUser() instanceof AuthenticatedUser) || !getUser().isSuperuser()) {\n-            throw new PermissionException(BundleUtil.getStringFromBundle(\"admin.api.auth.mustBeSuperUser\"),\n-                    this, Collections.singleton(Permission.EditDataset), dataset);\n-        }\n+    if (!(getUser() instanceof AuthenticatedUser) || !getUser().isSuperuser()) {\n+      throw new PermissionException(BundleUtil.getStringFromBundle(\"admin.api.auth.mustBeSuperUser\"),\n+        this, Collections.singleton(Permission.EditDataset), dataset);\n+    }\n \n-        String nonNullDefaultIfKeyNotFound = \"\";\n-        String protocol = ctxt.settings().getValueForKey(SettingsServiceBean.Key.Protocol, nonNullDefaultIfKeyNotFound);\n-        GlobalIdServiceBean idServiceBean = GlobalIdServiceBean.getBean(protocol, ctxt);\n-        try {\n-            idServiceBean.deleteIdentifier(dataset); \n-            // Success! Clear the create time, etc.\n-            dataset.setGlobalIdCreateTime(null);\n-            dataset.setIdentifierRegistered(false);\n-            ctxt.datasets().merge(dataset);\n-        } catch (HttpException hex) {\n-        \tString message = BundleUtil.getStringFromBundle(\"pids.deletePid.failureExpected\", Arrays.asList(dataset.getGlobalId().asString(), Integer.toString(hex.getReasonCode())));\n-            logger.info(message);\n-            throw new IllegalCommandException(message, this);\n-        } catch (Exception ex) {\n-        \tString message = BundleUtil.getStringFromBundle(\"pids.deletePid.failureOther\", Arrays.asList(dataset.getGlobalId().asString(), ex.getLocalizedMessage()));\n-            logger.info(message);\n-            throw new IllegalCommandException(message, this);\n-        }\n+    String nonNullDefaultIfKeyNotFound = \"\";\n+    String protocol = ctxt.settings().getValueForKey(SettingsServiceBean.Key.Protocol, nonNullDefaultIfKeyNotFound);\n+    GlobalIdServiceBean idServiceBean = GlobalIdServiceBean.getBean(protocol, ctxt);\n+    try {\n+      idServiceBean.deleteIdentifier(dataset);\n+      // Success! Clear the create time, etc.\n+      dataset.setGlobalIdCreateTime(null);\n+      dataset.setIdentifierRegistered(false);\n+      ctxt.datasets().merge(dataset);\n+    } catch (HttpException hex) {\n+      String message = BundleUtil.getStringFromBundle(\"pids.deletePid.failureExpected\",\n+        Arrays.asList(dataset.getGlobalId().asString(), Integer.toString(hex.getReasonCode())));\n+      logger.info(message);\n+      throw new IllegalCommandException(message, this);\n+    } catch (Exception ex) {\n+      String message = BundleUtil.getStringFromBundle(\"pids.deletePid.failureOther\",\n+        Arrays.asList(dataset.getGlobalId().asString(), ex.getLocalizedMessage()));\n+      logger.info(message);\n+      throw new IllegalCommandException(message, this);\n     }\n+  }\n \n }\n",
            "diff_size": 32
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/39/DeletePidCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/39/DeletePidCommand.java\nindex 274aeb3c3fd..701da3a75db 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/39/DeletePidCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/codebuff/39/DeletePidCommand.java\n@@ -14,7 +14,6 @@ import edu.harvard.iq.dataverse.engine.command.exception.PermissionException;\n import edu.harvard.iq.dataverse.settings.SettingsServiceBean;\n import edu.harvard.iq.dataverse.util.BundleUtil;\n import org.apache.commons.httpclient.HttpException;\n-\n import java.util.Arrays;\n import java.util.Collections;\n import java.util.logging.Logger;\n@@ -22,11 +21,12 @@ import java.util.logging.Logger;\n /**\n  * No required permissions because we check for superuser status.\n  */\n+\n+\n @RequiredPermissions({})\n public class DeletePidCommand extends AbstractVoidCommand {\n \n     private static final Logger logger = Logger.getLogger(ReservePidCommand.class.getCanonicalName());\n-\n     private final Dataset dataset;\n \n     public DeletePidCommand(DataverseRequest request, Dataset dataset) {\n@@ -36,10 +36,8 @@ public class DeletePidCommand extends AbstractVoidCommand {\n \n     @Override\n     protected void executeImpl(CommandContext ctxt) throws CommandException {\n-\n         if (!(getUser() instanceof AuthenticatedUser) || !getUser().isSuperuser()) {\n-            throw new PermissionException(BundleUtil.getStringFromBundle(\"admin.api.auth.mustBeSuperUser\"),\n-                    this, Collections.singleton(Permission.EditDataset), dataset);\n+            throw new PermissionException(BundleUtil.getStringFromBundle(\"admin.api.auth.mustBeSuperUser\"), this, Collections.singleton(Permission.EditDataset), dataset);\n         }\n \n         String nonNullDefaultIfKeyNotFound = \"\";\n@@ -52,14 +50,16 @@ public class DeletePidCommand extends AbstractVoidCommand {\n             dataset.setIdentifierRegistered(false);\n             ctxt.datasets().merge(dataset);\n         } catch (HttpException hex) {\n-        \tString message = BundleUtil.getStringFromBundle(\"pids.deletePid.failureExpected\", Arrays.asList(dataset.getGlobalId().asString(), Integer.toString(hex.getReasonCode())));\n+            String message = BundleUtil.getStringFromBundle(\"pids.deletePid.failureExpected\",\n+                                                            Arrays.asList(dataset.getGlobalId().asString(), Integer.toString(hex.getReasonCode())));\n             logger.info(message);\n             throw new IllegalCommandException(message, this);\n         } catch (Exception ex) {\n-        \tString message = BundleUtil.getStringFromBundle(\"pids.deletePid.failureOther\", Arrays.asList(dataset.getGlobalId().asString(), ex.getLocalizedMessage()));\n+            String message = BundleUtil.getStringFromBundle(\"pids.deletePid.failureOther\",\n+                                                            Arrays.asList(dataset.getGlobalId().asString(), ex.getLocalizedMessage()));\n             logger.info(message);\n             throw new IllegalCommandException(message, this);\n         }\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "59",
                    "column": "9",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/39/DeletePidCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/39/DeletePidCommand.java\nindex 274aeb3c3fd..408fd543b9f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/39/DeletePidCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_random/39/DeletePidCommand.java\n@@ -52,7 +52,7 @@ public class DeletePidCommand extends AbstractVoidCommand {\n             dataset.setIdentifierRegistered(false);\n             ctxt.datasets().merge(dataset);\n         } catch (HttpException hex) {\n-        \tString message = BundleUtil.getStringFromBundle(\"pids.deletePid.failureExpected\", Arrays.asList(dataset.getGlobalId().asString(), Integer.toString(hex.getReasonCode())));\n+        String message = BundleUtil.getStringFromBundle(\"pids.deletePid.failureExpected\", Arrays.asList(dataset.getGlobalId().asString(), Integer.toString(hex.getReasonCode())));\n             logger.info(message);\n             throw new IllegalCommandException(message, this);\n         } catch (Exception ex) {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "59",
                    "column": "9",
                    "severity": "error",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/39/DeletePidCommand.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/39/DeletePidCommand.java\nindex 274aeb3c3fd..3a9826d11f8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/errored/1/39/DeletePidCommand.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/IQSS-dataverse/styler_three_grams/39/DeletePidCommand.java\n@@ -52,7 +52,7 @@ public class DeletePidCommand extends AbstractVoidCommand {\n             dataset.setIdentifierRegistered(false);\n             ctxt.datasets().merge(dataset);\n         } catch (HttpException hex) {\n-        \tString message = BundleUtil.getStringFromBundle(\"pids.deletePid.failureExpected\", Arrays.asList(dataset.getGlobalId().asString(), Integer.toString(hex.getReasonCode())));\n+            String message = BundleUtil.getStringFromBundle(\"pids.deletePid.failureExpected\", Arrays.asList(dataset.getGlobalId().asString(), Integer.toString(hex.getReasonCode())));\n             logger.info(message);\n             throw new IllegalCommandException(message, this);\n         } catch (Exception ex) {\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
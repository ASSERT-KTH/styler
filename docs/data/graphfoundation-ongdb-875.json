{
    "project_name": "graphfoundation-ongdb",
    "error_id": "875",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "143",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "143",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "190",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "194",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "255",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "255",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "329",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "329",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "346",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "351",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "369",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "377",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "396",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "419",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "428",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "433",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "451",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "458",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "460",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "464",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "483",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "496",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "500",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "508",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "530",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "534",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "551",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "551",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "557",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "557",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "561",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "561",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "565",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "565",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "581",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "583",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "583",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "588",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "588",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "588",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "592",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "597",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "597",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "605",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "605",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "611",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "611",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "614",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "619",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "619",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "619",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "633",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "633",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "635",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "635",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "637",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "637",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "639",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "639",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "641",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "641",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "643",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "643",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "643",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "645",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "645",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "647",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "647",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "675",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "675",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "677",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "677",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "681",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "681",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "687",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "687",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "687",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "689",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "689",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "691",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "691",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "697",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "697",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "701",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "701",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "707",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "707",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "709",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "709",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "711",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "711",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "713",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "713",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "715",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "715",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "735",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "735",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "737",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "737",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "743",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "743",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "746",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "746",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "751",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "751",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "751",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "755",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "755",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "759",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "759",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "763",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "763",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "767",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "767",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "771",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "771",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "773",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "773",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "775",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "775",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "777",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "777",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "779",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "779",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "781",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "781",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "791",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "791",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "797",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "803",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "803",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "807",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "807",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "811",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "811",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "814",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "814",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "814",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "818",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "819",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "821",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "821",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "824",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "824",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "824",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "830",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "830",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "833",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "833",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "833",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "835",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "835",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "836",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "836",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "836",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "838",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "838",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "839",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "839",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "839",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "841",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "841",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "842",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "842",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "842",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "845",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "847",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "848",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "851",
                    "column": "15",
                    "severity": "error",
                    "message": "'}' at column 15 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "853",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "853",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "858",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "858",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "858",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "860",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "860",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "878",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "878",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "882",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "882",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "885",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "885",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "885",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "888",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "907",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "907",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "911",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "911",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "914",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "914",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "914",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "917",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "919",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "919",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "931",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "931",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "934",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "934",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "936",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "936",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "948",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "948",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "951",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "951",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "954",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "954",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "954",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "958",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "958",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "969",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "969",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "975",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "975",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "975",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "977",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "977",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "990",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "990",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1004",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1004",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1007",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1007",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1011",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1011",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1022",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1022",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1025",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1025",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1029",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1029",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1041",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1041",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1054",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1054",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1065",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1065",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1078",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1078",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1114",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1114",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1127",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1127",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1140",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1140",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1154",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1154",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1159",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1159",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1159",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1174",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1174",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1176",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1176",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1189",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1189",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1204",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1204",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1209",
                    "column": "75",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1209",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1210",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1210",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1210",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1225",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1225",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1240",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1240",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1245",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1245",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1245",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1259",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1259",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1273",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1273",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1288",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1288",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1303",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1303",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1308",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1308",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1308",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1322",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1322",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1335",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1335",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1349",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1349",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1363",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1363",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1365",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1365",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1377",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1377",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1391",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1391",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1406",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1406",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1408",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1408",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1424",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1424",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1426",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1426",
                    "column": "20",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1428",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1428",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1430",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1430",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1434",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1451",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1451",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1453",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1453",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1455",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1455",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1457",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1457",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1475",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1475",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1477",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1477",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1491",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1491",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1504",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1504",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1516",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1516",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1518",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1518",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1523",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1523",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1548",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1548",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1550",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1550",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1552",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1552",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1563",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1563",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1563",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1582",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1582",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1601",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1601",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1605",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1605",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1610",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1610",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1613",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1613",
                    "column": "15",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1619",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1621",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1621",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1624",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1624",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1627",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1631",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1631",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1639",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1639",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1642",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1642",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1661",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1661",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1669",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1669",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1671",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1671",
                    "column": "14",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1679",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1679",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1682",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1682",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1682",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1685",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1693",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "1693",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1693",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1695",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1695",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1733",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1733",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/875/JSONObject.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/875/JSONObject.java\nindex 554d5bec924..dd4785f4439 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/875/JSONObject.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/875/JSONObject.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.util.json;\n \n /*\n@@ -110,1678 +111,1639 @@ import java.util.TreeSet;\n public class JSONObject\n {\n \n-    /**\n-     * It is sometimes more convenient and less ambiguous to have a\n-     * <code>NULL</code> object than to use Java's <code>null</code> value.\n-     * <code>JSONObject.NULL.equals(null)</code> returns <code>true</code>.\n-     * <code>JSONObject.NULL.toString()</code> returns <code>\"null\"</code>.\n-     */\n-    public static final Object NULL = new Null();\n-    /**\n-     * The map where the JSONObject's properties are kept.\n-     */\n-    private Map map;\n+  /**\n+   * It is sometimes more convenient and less ambiguous to have a\n+   * <code>NULL</code> object than to use Java's <code>null</code> value.\n+   * <code>JSONObject.NULL.equals(null)</code> returns <code>true</code>.\n+   * <code>JSONObject.NULL.toString()</code> returns <code>\"null\"</code>.\n+   */\n+  public static final Object NULL = new Null();\n+  /**\n+   * The map where the JSONObject's properties are kept.\n+   */\n+  private Map map;\n+\n+  /**\n+   * Construct an empty JSONObject.\n+   */\n+  public JSONObject()\n+  {\n+    this.map = new HashMap();\n+  }\n+\n+  /**\n+   * Construct a JSONObject from a subset of another JSONObject.\n+   * An array of strings is used to identify the keys that should be copied.\n+   * Missing keys are ignored.\n+   *\n+   * @param jo    A JSONObject.\n+   * @param names An array of strings.\n+   * @throws JSONException If a value is a non-finite number or if a name is duplicated.\n+   */\n+  public JSONObject(JSONObject jo, String[] names) throws JSONException\n+  {\n+    this();\n+    for (String name : names)\n+    {\n+      putOnce(name, jo.opt(name));\n+    }\n+  }\n+\n+  /**\n+   * Construct a JSONObject from a JSONTokener.\n+   *\n+   * @param x A JSONTokener object containing the source string.\n+   * @throws JSONException If there is a syntax error in the source string\n+   *                       or a duplicated key.\n+   */\n+  public JSONObject(JSONTokener x) throws JSONException\n+  {\n+    this();\n+    char c;\n+    String key;\n+\n+    if (x.nextClean() != '{')\n+    {\n+      throw x.syntaxError(\"A JSONObject text must begin with '{'\");\n+    }\n+    for (; ; )\n+    {\n+      c = x.nextClean();\n+      switch (c)\n+      {\n+        case 0:\n+          throw x.syntaxError(\"A JSONObject text must end with '}'\");\n+        case '}':\n+          return;\n+        default:\n+          x.back();\n+          key = x.nextValue().toString();\n+      }\n+\n+      /*\n+       * The key is followed by ':'. We will also tolerate '=' or '=>'.\n+       */\n+\n+      c = x.nextClean();\n+      if (c == '=')\n+      {\n+        if (x.next() != '>')\n+        {\n+          x.back();\n+        }\n+      } else if (c != ':')\n+      {\n+        throw x.syntaxError(\"Expected a ':' after a key\");\n+      }\n+      putOnce(key, x.nextValue());\n+\n+      /*\n+       * Pairs are separated by ','. We will also tolerate ';'.\n+       */\n+\n+      switch (x.nextClean())\n+      {\n+        case ';':\n+        case ',':\n+          if (x.nextClean() == '}')\n+          {\n+            return;\n+          }\n+          x.back();\n+          break;\n+        case '}':\n+          return;\n+        default:\n+          throw x.syntaxError(\"Expected a ',' or '}'\");\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Construct a JSONObject from a Map.\n+   *\n+   * @param map A map object that can be used to initialize the contents of\n+   *            the JSONObject.\n+   */\n+  public JSONObject(Map map)\n+  {\n+    this.map = (map == null) ? new HashMap() : map;\n+  }\n+\n+  /**\n+   * Construct a JSONObject from a Map.\n+   * <p>\n+   * Note: Use this constructor when the map contains <key,bean>.\n+   *\n+   * @param map               - A map with Key-Bean data.\n+   * @param includeSuperClass - Tell whether to include the super class properties.\n+   */\n+  public JSONObject(Map map, boolean includeSuperClass)\n+  {\n+    this.map = new HashMap();\n+    if (map != null)\n+    {\n+      Iterator i = map.entrySet().iterator();\n+      while (i.hasNext())\n+      {\n+        Map.Entry e = (Map.Entry) i.next();\n+        if (isStandardProperty(e.getValue().getClass()))\n+        {\n+          this.map.put(e.getKey(), e.getValue());\n+        } else\n+        {\n+          this.map.put(e.getKey(), new JSONObject(e.getValue(), includeSuperClass));\n+        }\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Construct a JSONObject from an Object using bean getters.\n+   * It reflects on all of the public methods of the object.\n+   * For each of the methods with no parameters and a name starting\n+   * with <code>\"get\"</code> or <code>\"is\"</code> followed by an uppercase letter,\n+   * the method is invoked, and a key and the value returned from the getter method\n+   * are put into the new JSONObject.\n+   * <p>\n+   * The key is formed by removing the <code>\"get\"</code> or <code>\"is\"</code> prefix.\n+   * If the second remaining character is not upper case, then the first\n+   * character is converted to lower case.\n+   * <p>\n+   * For example, if an object has a method named <code>\"getName\"</code>, and\n+   * if the result of calling <code>object.getName()</code> is <code>\"Larry Fine\"</code>,\n+   * then the JSONObject will contain <code>\"name\": \"Larry Fine\"</code>.\n+   *\n+   * @param bean An object that has getter methods that should be used\n+   *             to make a JSONObject.\n+   */\n+  public JSONObject(Object bean)\n+  {\n+    this();\n+    populateInternalMap(bean, false);\n+  }\n+\n+  /**\n+   * Construct a JSONObject from an Object using bean getters.\n+   * It reflects on all of the public methods of the object.\n+   * For each of the methods with no parameters and a name starting\n+   * with <code>\"get\"</code> or <code>\"is\"</code> followed by an uppercase letter,\n+   * the method is invoked, and a key and the value returned from the getter method\n+   * are put into the new JSONObject.\n+   * <p>\n+   * The key is formed by removing the <code>\"get\"</code> or <code>\"is\"</code> prefix.\n+   * If the second remaining character is not upper case, then the first\n+   * character is converted to lower case.\n+   *\n+   * @param bean              An object that has getter methods that should be used\n+   *                          to make a JSONObject.\n+   * @param includeSuperClass If true, include the super class properties.\n+   */\n+  public JSONObject(Object bean, boolean includeSuperClass)\n+  {\n+    this();\n+    populateInternalMap(bean, includeSuperClass);\n+  }\n+\n+  /**\n+   * Construct a JSONObject from an Object, using reflection to find the\n+   * public members. The resulting JSONObject's keys will be the strings\n+   * from the names array, and the values will be the field values associated\n+   * with those keys in the object. If a key is not found or not visible,\n+   * then it will not be copied into the new JSONObject.\n+   *\n+   * @param object An object that has fields that should be used to make a\n+   *               JSONObject.\n+   * @param names  An array of strings, the names of the fields to be obtained\n+   *               from the object.\n+   */\n+  public JSONObject(Object object, String[] names)\n+  {\n+    this();\n+    Class c = object.getClass();\n+    for (String name : names)\n+    {\n+      try\n+      {\n+        putOpt(name, c.getField(name).get(object));\n+      } catch (Exception e)\n+      {\n+        /* forget about it */\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Construct a JSONObject from a source JSON text string.\n+   * This is the most commonly used JSONObject constructor.\n+   *\n+   * @param source A string beginning\n+   *               with <code>{</code>&nbsp;<small>(left brace)</small> and ending\n+   *               with <code>}</code>&nbsp;<small>(right brace)</small>.\n+   * @throws JSONException If there is a syntax error in the source\n+   *                       string or a duplicated key.\n+   */\n+  public JSONObject(String source) throws JSONException\n+  {\n+    this(new JSONTokener(source));\n+  }\n+\n+  static boolean isStandardProperty(Class clazz)\n+  {\n+    return clazz.isPrimitive() || clazz.isAssignableFrom(Byte.class) || clazz.isAssignableFrom(Short.class) ||\n+        clazz.isAssignableFrom(Integer.class) || clazz.isAssignableFrom(Long.class) ||\n+        clazz.isAssignableFrom(Float.class) || clazz.isAssignableFrom(Double.class) ||\n+        clazz.isAssignableFrom(Character.class) || clazz.isAssignableFrom(String.class) ||\n+        clazz.isAssignableFrom(Boolean.class);\n+  }\n+\n+  /**\n+   * Produce a string from a double. The string \"null\" will be returned if\n+   * the number is not finite.\n+   *\n+   * @param d A double.\n+   * @return A String.\n+   */\n+  public static String doubleToString(double d)\n+  {\n+    if (Double.isInfinite(d) || Double.isNaN(d))\n+    {\n+      return \"null\";\n+    }\n \n-    /**\n-     * Construct an empty JSONObject.\n-     */\n-    public JSONObject()\n+// Shave off trailing zeros and decimal point, if possible.\n+\n+    String s = Double.toString(d);\n+    if (s.indexOf('.') > 0 && s.indexOf('e') < 0 && s.indexOf('E') < 0)\n+    {\n+      while (s.endsWith(\"0\"))\n+      {\n+        s = s.substring(0, s.length() - 1);\n+      }\n+      if (s.endsWith(\".\"))\n+      {\n+        s = s.substring(0, s.length() - 1);\n+      }\n+    }\n+    return s;\n+  }\n+\n+  /**\n+   * Get an array of field names from a JSONObject.\n+   *\n+   * @return An array of field names, or null if there are no names.\n+   */\n+  public static String[] getNames(JSONObject jo)\n+  {\n+    int length = jo.length();\n+    if (length == 0)\n+    {\n+      return null;\n+    }\n+    Iterator i = jo.keys();\n+    String[] names = new String[length];\n+    int j = 0;\n+    while (i.hasNext())\n+    {\n+      names[j] = (String) i.next();\n+      j += 1;\n+    }\n+    return names;\n+  }\n+\n+  /**\n+   * Get an array of field names from an Object.\n+   *\n+   * @return An array of field names, or null if there are no names.\n+   */\n+  public static String[] getNames(Object object)\n+  {\n+    if (object == null)\n+    {\n+      return null;\n+    }\n+    Class klass = object.getClass();\n+    Field[] fields = klass.getFields();\n+    int length = fields.length;\n+    if (length == 0)\n+    {\n+      return null;\n+    }\n+    String[] names = new String[length];\n+    for (int i = 0; i < length; i += 1)\n+    {\n+      names[i] = fields[i].getName();\n+    }\n+    return names;\n+  }\n+\n+  /**\n+   * Produce a string from a Number.\n+   *\n+   * @param n A Number\n+   * @return A String.\n+   * @throws JSONException If n is a non-finite number.\n+   */\n+  public static String numberToString(Number n) throws JSONException\n+  {\n+    if (n == null)\n+    {\n+      throw new JSONException(\"Null pointer\");\n+    }\n+    testValidity(n);\n+\n+// Shave off trailing zeros and decimal point, if possible.\n+\n+    String s = n.toString();\n+    if (s.indexOf('.') > 0 && s.indexOf('e') < 0 && s.indexOf('E') < 0)\n+    {\n+      while (s.endsWith(\"0\"))\n+      {\n+        s = s.substring(0, s.length() - 1);\n+      }\n+      if (s.endsWith(\".\"))\n+      {\n+        s = s.substring(0, s.length() - 1);\n+      }\n+    }\n+    return s;\n+  }\n+\n+  /**\n+   * Produce a string in double quotes with backslash sequences in all the\n+   * right places. A backslash will be inserted within </, allowing JSON\n+   * text to be delivered in HTML. In JSON text, a string cannot contain a\n+   * control character or an unescaped quote or backslash.\n+   *\n+   * @param string A String\n+   * @return A String correctly formatted for insertion in a JSON text.\n+   */\n+  public static String quote(String string)\n+  {\n+    if (string == null || string.length() == 0)\n+    {\n+      return \"\\\"\\\"\";\n+    }\n+\n+    char b;\n+    char c = 0;\n+    int i;\n+    int len = string.length();\n+    StringBuilder sb = new StringBuilder(len + 4);\n+    String t;\n+\n+    sb.append('\"');\n+    for (i = 0; i < len; i += 1)\n+    {\n+      b = c;\n+      c = string.charAt(i);\n+      switch (c)\n+      {\n+        case '\\\\':\n+        case '\"':\n+          sb.append('\\\\');\n+          sb.append(c);\n+          break;\n+        case '/':\n+          if (b == '<')\n+          {\n+            sb.append('\\\\');\n+          }\n+          sb.append(c);\n+          break;\n+        case '\\b':\n+          sb.append(\"\\\\b\");\n+          break;\n+        case '\\t':\n+          sb.append(\"\\\\t\");\n+          break;\n+        case '\\n':\n+          sb.append(\"\\\\n\");\n+          break;\n+        case '\\f':\n+          sb.append(\"\\\\f\");\n+          break;\n+        case '\\r':\n+          sb.append(\"\\\\r\");\n+          break;\n+        default:\n+          if (c < ' ' || (c >= '\\u0080' && c < '\\u00a0') || (c >= '\\u2000' && c < '\\u2100'))\n+          {\n+            t = \"000\" + Integer.toHexString(c);\n+            sb.append(\"\\\\u\" + t.substring(t.length() - 4));\n+          } else\n+          {\n+            sb.append(c);\n+          }\n+      }\n+    }\n+    sb.append('\"');\n+    return sb.toString();\n+  }\n+\n+  /**\n+   * Try to convert a string into a number, boolean, or null. If the string\n+   * can't be converted, return the string.\n+   *\n+   * @param s A String.\n+   * @return A simple JSON value.\n+   */\n+  public static Object stringToValue(String s)\n+  {\n+    if (s.equals(\"\"))\n+    {\n+      return s;\n+    }\n+    if (s.equalsIgnoreCase(\"true\"))\n+    {\n+      return Boolean.TRUE;\n+    }\n+    if (s.equalsIgnoreCase(\"false\"))\n+    {\n+      return Boolean.FALSE;\n+    }\n+    if (s.equalsIgnoreCase(\"null\"))\n+    {\n+      return JSONObject.NULL;\n+    }\n+\n+    /*\n+     * If it might be a number, try converting it. We support the 0- and 0x-\n+     * conventions. If a number cannot be produced, then the value will just\n+     * be a string. Note that the 0-, 0x-, plus, and implied string\n+     * conventions are non-standard. A JSON parser is free to accept\n+     * non-JSON forms as long as it accepts all correct JSON forms.\n+     */\n+\n+    char b = s.charAt(0);\n+    if ((b >= '0' && b <= '9') || b == '.' || b == '-' || b == '+')\n+    {\n+      if (b == '0')\n+      {\n+        if (s.length() > 2 && (s.charAt(1) == 'x' || s.charAt(1) == 'X'))\n+        {\n+          try\n+          {\n+            return Integer.parseInt(s.substring(2), 16);\n+          } catch (Exception e)\n+          {\n+            /* Ignore the error */\n+          }\n+        } else\n+        {\n+          try\n+          {\n+            return Integer.parseInt(s, 8);\n+          } catch (Exception e)\n+          {\n+            /* Ignore the error */\n+          }\n+        }\n+      }\n+      try\n+      {\n+        if (s.indexOf('.') > -1 || s.indexOf('e') > -1 || s.indexOf('E') > -1)\n+        {\n+          return Double.valueOf(s);\n+        } else\n+        {\n+          Long myLong = Long.valueOf(s);\n+          if (myLong == myLong.intValue())\n+          {\n+            return myLong.intValue();\n+          } else\n+          {\n+            return myLong;\n+          }\n+        }\n+      } catch (Exception f)\n+      {\n+        /* Ignore the error */\n+      }\n+    }\n+    return s;\n+  }\n+\n+  /**\n+   * Throw an exception if the object is an NaN or infinite number.\n+   *\n+   * @param o The object to test.\n+   * @throws JSONException If o is a non-finite number.\n+   */\n+  static void testValidity(Object o) throws JSONException\n+  {\n+    if (o != null)\n+    {\n+      if (o instanceof Double)\n+      {\n+        if (((Double) o).isInfinite() || ((Double) o).isNaN())\n+        {\n+          throw new JSONException(\"JSON does not allow non-finite numbers.\");\n+        }\n+      } else if (o instanceof Float)\n+      {\n+        if (((Float) o).isInfinite() || ((Float) o).isNaN())\n+        {\n+          throw new JSONException(\"JSON does not allow non-finite numbers.\");\n+        }\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Make a JSON text of an Object value. If the object has an\n+   * value.toJSONString() method, then that method will be used to produce\n+   * the JSON text. The method is required to produce a strictly\n+   * conforming text. If the object does not contain a toJSONString\n+   * method (which is the most common case), then a text will be\n+   * produced by other means. If the value is an array or Collection,\n+   * then a JSONArray will be made from it and its toJSONString method\n+   * will be called. If the value is a MAP, then a JSONObject will be made\n+   * from it and its toJSONString method will be called. Otherwise, the\n+   * value's toString method will be called, and the result will be quoted.\n+   * <p>\n+   * <p>\n+   * Warning: This method assumes that the data structure is acyclical.\n+   *\n+   * @param value The value to be serialized.\n+   * @return a printable, displayable, transmittable\n+   * representation of the object, beginning\n+   * with <code>{</code>&nbsp;<small>(left brace)</small> and ending\n+   * with <code>}</code>&nbsp;<small>(right brace)</small>.\n+   * @throws JSONException If the value is or contains an invalid number.\n+   */\n+  public static String valueToString(Object value) throws JSONException\n+  {\n+    if (value == null || value.equals(null))\n     {\n-        this.map = new HashMap();\n+      return \"null\";\n     }\n-\n-    /**\n-     * Construct a JSONObject from a subset of another JSONObject.\n-     * An array of strings is used to identify the keys that should be copied.\n-     * Missing keys are ignored.\n-     *\n-     * @param jo A JSONObject.\n-     * @param names An array of strings.\n-     * @throws JSONException If a value is a non-finite number or if a name is duplicated.\n-     */\n-    public JSONObject( JSONObject jo, String[] names ) throws JSONException\n+    if (value instanceof JSONString)\n     {\n-        this();\n-        for ( String name : names )\n-        {\n-            putOnce( name, jo.opt( name ) );\n-        }\n+      Object o;\n+      try\n+      {\n+        o = ((JSONString) value).toJSONString();\n+      } catch (Exception e)\n+      {\n+        throw new JSONException(e);\n+      }\n+      if (o instanceof String)\n+      {\n+        return (String) o;\n+      }\n+      throw new JSONException(\"Bad value from toJSONString: \" + o);\n     }\n-\n-    /**\n-     * Construct a JSONObject from a JSONTokener.\n-     *\n-     * @param x A JSONTokener object containing the source string.\n-     * @throws JSONException If there is a syntax error in the source string\n-     * or a duplicated key.\n-     */\n-    public JSONObject( JSONTokener x ) throws JSONException\n+    if (value instanceof Number)\n     {\n-        this();\n-        char c;\n-        String key;\n-\n-        if ( x.nextClean() != '{' )\n-        {\n-            throw x.syntaxError( \"A JSONObject text must begin with '{'\" );\n-        }\n-        for ( ; ; )\n-        {\n-            c = x.nextClean();\n-            switch ( c )\n-            {\n-            case 0:\n-                throw x.syntaxError( \"A JSONObject text must end with '}'\" );\n-            case '}':\n-                return;\n-            default:\n-                x.back();\n-                key = x.nextValue().toString();\n-            }\n-\n-            /*\n-             * The key is followed by ':'. We will also tolerate '=' or '=>'.\n-             */\n-\n-            c = x.nextClean();\n-            if ( c == '=' )\n-            {\n-                if ( x.next() != '>' )\n-                {\n-                    x.back();\n-                }\n-            }\n-            else if ( c != ':' )\n-            {\n-                throw x.syntaxError( \"Expected a ':' after a key\" );\n-            }\n-            putOnce( key, x.nextValue() );\n-\n-            /*\n-             * Pairs are separated by ','. We will also tolerate ';'.\n-             */\n-\n-            switch ( x.nextClean() )\n-            {\n-            case ';':\n-            case ',':\n-                if ( x.nextClean() == '}' )\n-                {\n-                    return;\n-                }\n-                x.back();\n-                break;\n-            case '}':\n-                return;\n-            default:\n-                throw x.syntaxError( \"Expected a ',' or '}'\" );\n-            }\n-        }\n+      return numberToString((Number) value);\n     }\n-\n-    /**\n-     * Construct a JSONObject from a Map.\n-     *\n-     * @param map A map object that can be used to initialize the contents of\n-     * the JSONObject.\n-     */\n-    public JSONObject( Map map )\n+    if (value instanceof Boolean || value instanceof JSONObject || value instanceof JSONArray)\n     {\n-        this.map = (map == null) ? new HashMap() : map;\n+      return value.toString();\n     }\n-\n-    /**\n-     * Construct a JSONObject from a Map.\n-     * <p>\n-     * Note: Use this constructor when the map contains <key,bean>.\n-     *\n-     * @param map - A map with Key-Bean data.\n-     * @param includeSuperClass - Tell whether to include the super class properties.\n-     */\n-    public JSONObject( Map map, boolean includeSuperClass )\n+    if (value instanceof Map)\n     {\n-        this.map = new HashMap();\n-        if ( map != null )\n-        {\n-            Iterator i = map.entrySet().iterator();\n-            while ( i.hasNext() )\n-            {\n-                Map.Entry e = (Map.Entry) i.next();\n-                if ( isStandardProperty( e.getValue().getClass() ) )\n-                {\n-                    this.map.put( e.getKey(), e.getValue() );\n-                }\n-                else\n-                {\n-                    this.map.put( e.getKey(), new JSONObject( e.getValue(), includeSuperClass ) );\n-                }\n-            }\n-        }\n+      return new JSONObject((Map) value).toString();\n     }\n-\n-    /**\n-     * Construct a JSONObject from an Object using bean getters.\n-     * It reflects on all of the public methods of the object.\n-     * For each of the methods with no parameters and a name starting\n-     * with <code>\"get\"</code> or <code>\"is\"</code> followed by an uppercase letter,\n-     * the method is invoked, and a key and the value returned from the getter method\n-     * are put into the new JSONObject.\n-     * <p>\n-     * The key is formed by removing the <code>\"get\"</code> or <code>\"is\"</code> prefix.\n-     * If the second remaining character is not upper case, then the first\n-     * character is converted to lower case.\n-     * <p>\n-     * For example, if an object has a method named <code>\"getName\"</code>, and\n-     * if the result of calling <code>object.getName()</code> is <code>\"Larry Fine\"</code>,\n-     * then the JSONObject will contain <code>\"name\": \"Larry Fine\"</code>.\n-     *\n-     * @param bean An object that has getter methods that should be used\n-     * to make a JSONObject.\n-     */\n-    public JSONObject( Object bean )\n+    if (value instanceof Collection)\n     {\n-        this();\n-        populateInternalMap( bean, false );\n+      return new JSONArray((Collection) value).toString();\n     }\n-\n-    /**\n-     * Construct a JSONObject from an Object using bean getters.\n-     * It reflects on all of the public methods of the object.\n-     * For each of the methods with no parameters and a name starting\n-     * with <code>\"get\"</code> or <code>\"is\"</code> followed by an uppercase letter,\n-     * the method is invoked, and a key and the value returned from the getter method\n-     * are put into the new JSONObject.\n-     * <p>\n-     * The key is formed by removing the <code>\"get\"</code> or <code>\"is\"</code> prefix.\n-     * If the second remaining character is not upper case, then the first\n-     * character is converted to lower case.\n-     *\n-     * @param bean An object that has getter methods that should be used\n-     * to make a JSONObject.\n-     * @param includeSuperClass If true, include the super class properties.\n-     */\n-    public JSONObject( Object bean, boolean includeSuperClass )\n+    if (value.getClass().isArray())\n     {\n-        this();\n-        populateInternalMap( bean, includeSuperClass );\n+      return new JSONArray(value).toString();\n     }\n+    return quote(value.toString());\n+  }\n \n-    /**\n-     * Construct a JSONObject from an Object, using reflection to find the\n-     * public members. The resulting JSONObject's keys will be the strings\n-     * from the names array, and the values will be the field values associated\n-     * with those keys in the object. If a key is not found or not visible,\n-     * then it will not be copied into the new JSONObject.\n-     *\n-     * @param object An object that has fields that should be used to make a\n-     * JSONObject.\n-     * @param names An array of strings, the names of the fields to be obtained\n-     * from the object.\n-     */\n-    public JSONObject( Object object, String[] names )\n+  /**\n+   * Make a prettyprinted JSON text of an object value.\n+   * <p>\n+   * Warning: This method assumes that the data structure is acyclical.\n+   *\n+   * @param value        The value to be serialized.\n+   * @param indentFactor The number of spaces to add to each level of\n+   *                     indentation.\n+   * @param indent       The indentation of the top level.\n+   * @return a printable, displayable, transmittable\n+   * representation of the object, beginning\n+   * with <code>{</code>&nbsp;<small>(left brace)</small> and ending\n+   * with <code>}</code>&nbsp;<small>(right brace)</small>.\n+   * @throws JSONException If the object contains an invalid number.\n+   */\n+  static String valueToString(Object value, int indentFactor, int indent) throws JSONException\n+  {\n+    if (value == null || value.equals(null))\n+    {\n+      return \"null\";\n+    }\n+    try\n     {\n-        this();\n-        Class c = object.getClass();\n-        for ( String name : names )\n+      if (value instanceof JSONString)\n+      {\n+        Object o = ((JSONString) value).toJSONString();\n+        if (o instanceof String)\n         {\n-            try\n-            {\n-                putOpt( name, c.getField( name ).get( object ) );\n-            }\n-            catch ( Exception e )\n-            {\n-                /* forget about it */\n-            }\n+          return (String) o;\n         }\n+      }\n+    } catch (Exception e)\n+    {\n+      /* forget about it */\n     }\n-\n-    /**\n-     * Construct a JSONObject from a source JSON text string.\n-     * This is the most commonly used JSONObject constructor.\n-     *\n-     * @param source A string beginning\n-     * with <code>{</code>&nbsp;<small>(left brace)</small> and ending\n-     * with <code>}</code>&nbsp;<small>(right brace)</small>.\n-     * @throws JSONException If there is a syntax error in the source\n-     * string or a duplicated key.\n-     */\n-    public JSONObject( String source ) throws JSONException\n+    if (value instanceof Number)\n     {\n-        this( new JSONTokener( source ) );\n+      return numberToString((Number) value);\n     }\n-\n-    static boolean isStandardProperty( Class clazz )\n+    if (value instanceof Boolean)\n     {\n-        return clazz.isPrimitive() || clazz.isAssignableFrom( Byte.class ) || clazz.isAssignableFrom( Short.class ) ||\n-                clazz.isAssignableFrom( Integer.class ) || clazz.isAssignableFrom( Long.class ) ||\n-                clazz.isAssignableFrom( Float.class ) || clazz.isAssignableFrom( Double.class ) ||\n-                clazz.isAssignableFrom( Character.class ) || clazz.isAssignableFrom( String.class ) ||\n-                clazz.isAssignableFrom( Boolean.class );\n+      return value.toString();\n     }\n-\n-    /**\n-     * Produce a string from a double. The string \"null\" will be returned if\n-     * the number is not finite.\n-     *\n-     * @param d A double.\n-     * @return A String.\n-     */\n-    public static String doubleToString( double d )\n+    if (value instanceof JSONObject)\n     {\n-        if ( Double.isInfinite( d ) || Double.isNaN( d ) )\n-        {\n-            return \"null\";\n-        }\n-\n-// Shave off trailing zeros and decimal point, if possible.\n-\n-        String s = Double.toString( d );\n-        if ( s.indexOf( '.' ) > 0 && s.indexOf( 'e' ) < 0 && s.indexOf( 'E' ) < 0 )\n-        {\n-            while ( s.endsWith( \"0\" ) )\n-            {\n-                s = s.substring( 0, s.length() - 1 );\n-            }\n-            if ( s.endsWith( \".\" ) )\n-            {\n-                s = s.substring( 0, s.length() - 1 );\n-            }\n-        }\n-        return s;\n+      return ((JSONObject) value).toString(indentFactor, indent);\n     }\n-\n-    /**\n-     * Get an array of field names from a JSONObject.\n-     *\n-     * @return An array of field names, or null if there are no names.\n-     */\n-    public static String[] getNames( JSONObject jo )\n+    if (value instanceof JSONArray)\n     {\n-        int length = jo.length();\n-        if ( length == 0 )\n-        {\n-            return null;\n-        }\n-        Iterator i = jo.keys();\n-        String[] names = new String[length];\n-        int j = 0;\n-        while ( i.hasNext() )\n-        {\n-            names[j] = (String) i.next();\n-            j += 1;\n-        }\n-        return names;\n+      return ((JSONArray) value).toString(indentFactor, indent);\n     }\n-\n-    /**\n-     * Get an array of field names from an Object.\n-     *\n-     * @return An array of field names, or null if there are no names.\n-     */\n-    public static String[] getNames( Object object )\n+    if (value instanceof Map)\n     {\n-        if ( object == null )\n-        {\n-            return null;\n-        }\n-        Class klass = object.getClass();\n-        Field[] fields = klass.getFields();\n-        int length = fields.length;\n-        if ( length == 0 )\n-        {\n-            return null;\n-        }\n-        String[] names = new String[length];\n-        for ( int i = 0; i < length; i += 1 )\n-        {\n-            names[i] = fields[i].getName();\n-        }\n-        return names;\n+      return new JSONObject((Map) value).toString(indentFactor, indent);\n     }\n-\n-    /**\n-     * Produce a string from a Number.\n-     *\n-     * @param n A Number\n-     * @return A String.\n-     * @throws JSONException If n is a non-finite number.\n-     */\n-    public static String numberToString( Number n ) throws JSONException\n+    if (value instanceof Collection)\n     {\n-        if ( n == null )\n-        {\n-            throw new JSONException( \"Null pointer\" );\n-        }\n-        testValidity( n );\n-\n-// Shave off trailing zeros and decimal point, if possible.\n-\n-        String s = n.toString();\n-        if ( s.indexOf( '.' ) > 0 && s.indexOf( 'e' ) < 0 && s.indexOf( 'E' ) < 0 )\n-        {\n-            while ( s.endsWith( \"0\" ) )\n-            {\n-                s = s.substring( 0, s.length() - 1 );\n-            }\n-            if ( s.endsWith( \".\" ) )\n-            {\n-                s = s.substring( 0, s.length() - 1 );\n-            }\n-        }\n-        return s;\n+      return new JSONArray((Collection) value).toString(indentFactor, indent);\n     }\n-\n-    /**\n-     * Produce a string in double quotes with backslash sequences in all the\n-     * right places. A backslash will be inserted within </, allowing JSON\n-     * text to be delivered in HTML. In JSON text, a string cannot contain a\n-     * control character or an unescaped quote or backslash.\n-     *\n-     * @param string A String\n-     * @return A String correctly formatted for insertion in a JSON text.\n-     */\n-    public static String quote( String string )\n+    if (value.getClass().isArray())\n     {\n-        if ( string == null || string.length() == 0 )\n-        {\n-            return \"\\\"\\\"\";\n-        }\n-\n-        char b;\n-        char c = 0;\n-        int i;\n-        int len = string.length();\n-        StringBuilder sb = new StringBuilder( len + 4 );\n-        String t;\n-\n-        sb.append( '\"' );\n-        for ( i = 0; i < len; i += 1 )\n-        {\n-            b = c;\n-            c = string.charAt( i );\n-            switch ( c )\n-            {\n-            case '\\\\':\n-            case '\"':\n-                sb.append( '\\\\' );\n-                sb.append( c );\n-                break;\n-            case '/':\n-                if ( b == '<' )\n-                {\n-                    sb.append( '\\\\' );\n-                }\n-                sb.append( c );\n-                break;\n-            case '\\b':\n-                sb.append( \"\\\\b\" );\n-                break;\n-            case '\\t':\n-                sb.append( \"\\\\t\" );\n-                break;\n-            case '\\n':\n-                sb.append( \"\\\\n\" );\n-                break;\n-            case '\\f':\n-                sb.append( \"\\\\f\" );\n-                break;\n-            case '\\r':\n-                sb.append( \"\\\\r\" );\n-                break;\n-            default:\n-                if ( c < ' ' || (c >= '\\u0080' && c < '\\u00a0') || (c >= '\\u2000' && c < '\\u2100') )\n-                {\n-                    t = \"000\" + Integer.toHexString( c );\n-                    sb.append( \"\\\\u\" + t.substring( t.length() - 4 ) );\n-                }\n-                else\n-                {\n-                    sb.append( c );\n-                }\n-            }\n-        }\n-        sb.append( '\"' );\n-        return sb.toString();\n+      return new JSONArray(value).toString(indentFactor, indent);\n     }\n+    return quote(value.toString());\n+  }\n \n-    /**\n-     * Try to convert a string into a number, boolean, or null. If the string\n-     * can't be converted, return the string.\n-     *\n-     * @param s A String.\n-     * @return A simple JSON value.\n-     */\n-    public static Object stringToValue( String s )\n-    {\n-        if ( s.equals( \"\" ) )\n-        {\n-            return s;\n-        }\n-        if ( s.equalsIgnoreCase( \"true\" ) )\n-        {\n-            return Boolean.TRUE;\n-        }\n-        if ( s.equalsIgnoreCase( \"false\" ) )\n-        {\n-            return Boolean.FALSE;\n-        }\n-        if ( s.equalsIgnoreCase( \"null\" ) )\n-        {\n-            return JSONObject.NULL;\n-        }\n+  public Map toMap()\n+  {\n+    return Collections.unmodifiableMap(map);\n+  }\n \n-        /*\n-         * If it might be a number, try converting it. We support the 0- and 0x-\n-         * conventions. If a number cannot be produced, then the value will just\n-         * be a string. Note that the 0-, 0x-, plus, and implied string\n-         * conventions are non-standard. A JSON parser is free to accept\n-         * non-JSON forms as long as it accepts all correct JSON forms.\n-         */\n+  private void populateInternalMap(Object bean, boolean includeSuperClass)\n+  {\n+    Class klass = bean.getClass();\n \n-        char b = s.charAt( 0 );\n-        if ( (b >= '0' && b <= '9') || b == '.' || b == '-' || b == '+' )\n-        {\n-            if ( b == '0' )\n-            {\n-                if ( s.length() > 2 && (s.charAt( 1 ) == 'x' || s.charAt( 1 ) == 'X') )\n-                {\n-                    try\n-                    {\n-                        return Integer.parseInt( s.substring( 2 ), 16 );\n-                    }\n-                    catch ( Exception e )\n-                    {\n-                        /* Ignore the error */\n-                    }\n-                }\n-                else\n-                {\n-                    try\n-                    {\n-                        return Integer.parseInt( s, 8 );\n-                    }\n-                    catch ( Exception e )\n-                    {\n-                        /* Ignore the error */\n-                    }\n-                }\n-            }\n-            try\n-            {\n-                if ( s.indexOf( '.' ) > -1 || s.indexOf( 'e' ) > -1 || s.indexOf( 'E' ) > -1 )\n-                {\n-                    return Double.valueOf( s );\n-                }\n-                else\n-                {\n-                    Long myLong = Long.valueOf( s );\n-                    if ( myLong == myLong.intValue() )\n-                    {\n-                        return myLong.intValue();\n-                    }\n-                    else\n-                    {\n-                        return myLong;\n-                    }\n-                }\n-            }\n-            catch ( Exception f )\n-            {\n-                /* Ignore the error */\n-            }\n-        }\n-        return s;\n-    }\n+    /* If klass.getSuperClass is System class then force includeSuperClass to false. */\n \n-    /**\n-     * Throw an exception if the object is an NaN or infinite number.\n-     *\n-     * @param o The object to test.\n-     * @throws JSONException If o is a non-finite number.\n-     */\n-    static void testValidity( Object o ) throws JSONException\n+    if (klass.getClassLoader() == null)\n     {\n-        if ( o != null )\n-        {\n-            if ( o instanceof Double )\n-            {\n-                if ( ((Double) o).isInfinite() || ((Double) o).isNaN() )\n-                {\n-                    throw new JSONException( \"JSON does not allow non-finite numbers.\" );\n-                }\n-            }\n-            else if ( o instanceof Float )\n-            {\n-                if ( ((Float) o).isInfinite() || ((Float) o).isNaN() )\n-                {\n-                    throw new JSONException( \"JSON does not allow non-finite numbers.\" );\n-                }\n-            }\n-        }\n+      includeSuperClass = false;\n     }\n \n-    /**\n-     * Make a JSON text of an Object value. If the object has an\n-     * value.toJSONString() method, then that method will be used to produce\n-     * the JSON text. The method is required to produce a strictly\n-     * conforming text. If the object does not contain a toJSONString\n-     * method (which is the most common case), then a text will be\n-     * produced by other means. If the value is an array or Collection,\n-     * then a JSONArray will be made from it and its toJSONString method\n-     * will be called. If the value is a MAP, then a JSONObject will be made\n-     * from it and its toJSONString method will be called. Otherwise, the\n-     * value's toString method will be called, and the result will be quoted.\n-     * <p>\n-     * <p>\n-     * Warning: This method assumes that the data structure is acyclical.\n-     *\n-     * @param value The value to be serialized.\n-     * @return a printable, displayable, transmittable\n-     * representation of the object, beginning\n-     * with <code>{</code>&nbsp;<small>(left brace)</small> and ending\n-     * with <code>}</code>&nbsp;<small>(right brace)</small>.\n-     * @throws JSONException If the value is or contains an invalid number.\n-     */\n-    public static String valueToString( Object value ) throws JSONException\n+    Method[] methods = includeSuperClass ? klass.getMethods() : klass.getDeclaredMethods();\n+    for (Method method : methods)\n     {\n-        if ( value == null || value.equals( null ) )\n+      try\n+      {\n+        if (Modifier.isPublic(method.getModifiers()))\n         {\n-            return \"null\";\n-        }\n-        if ( value instanceof JSONString )\n-        {\n-            Object o;\n-            try\n-            {\n-                o = ((JSONString) value).toJSONString();\n-            }\n-            catch ( Exception e )\n+          String name = method.getName();\n+          String key = \"\";\n+          if (name.startsWith(\"get\"))\n+          {\n+            key = name.substring(3);\n+          } else if (name.startsWith(\"is\"))\n+          {\n+            key = name.substring(2);\n+          }\n+          if (key.length() > 0 && Character.isUpperCase(key.charAt(0)) &&\n+              method.getParameterTypes().length == 0)\n+          {\n+            if (key.length() == 1)\n             {\n-                throw new JSONException( e );\n-            }\n-            if ( o instanceof String )\n+              key = key.toLowerCase();\n+            } else if (!Character.isUpperCase(key.charAt(1)))\n             {\n-                return (String) o;\n+              key = key.substring(0, 1).toLowerCase() + key.substring(1);\n             }\n-            throw new JSONException( \"Bad value from toJSONString: \" + o );\n-        }\n-        if ( value instanceof Number )\n-        {\n-            return numberToString( (Number) value );\n-        }\n-        if ( value instanceof Boolean || value instanceof JSONObject || value instanceof JSONArray )\n-        {\n-            return value.toString();\n-        }\n-        if ( value instanceof Map )\n-        {\n-            return new JSONObject( (Map) value ).toString();\n-        }\n-        if ( value instanceof Collection )\n-        {\n-            return new JSONArray( (Collection) value ).toString();\n-        }\n-        if ( value.getClass().isArray() )\n-        {\n-            return new JSONArray( value ).toString();\n-        }\n-        return quote( value.toString() );\n-    }\n \n-    /**\n-     * Make a prettyprinted JSON text of an object value.\n-     * <p>\n-     * Warning: This method assumes that the data structure is acyclical.\n-     *\n-     * @param value The value to be serialized.\n-     * @param indentFactor The number of spaces to add to each level of\n-     * indentation.\n-     * @param indent The indentation of the top level.\n-     * @return a printable, displayable, transmittable\n-     * representation of the object, beginning\n-     * with <code>{</code>&nbsp;<small>(left brace)</small> and ending\n-     * with <code>}</code>&nbsp;<small>(right brace)</small>.\n-     * @throws JSONException If the object contains an invalid number.\n-     */\n-    static String valueToString( Object value, int indentFactor, int indent ) throws JSONException\n-    {\n-        if ( value == null || value.equals( null ) )\n-        {\n-            return \"null\";\n-        }\n-        try\n-        {\n-            if ( value instanceof JSONString )\n+            Object result = method.invoke(bean, (Object[]) null);\n+            if (result == null)\n             {\n-                Object o = ((JSONString) value).toJSONString();\n-                if ( o instanceof String )\n-                {\n-                    return (String) o;\n-                }\n-            }\n-        }\n-        catch ( Exception e )\n-        {\n-            /* forget about it */\n-        }\n-        if ( value instanceof Number )\n-        {\n-            return numberToString( (Number) value );\n-        }\n-        if ( value instanceof Boolean )\n-        {\n-            return value.toString();\n-        }\n-        if ( value instanceof JSONObject )\n-        {\n-            return ((JSONObject) value).toString( indentFactor, indent );\n-        }\n-        if ( value instanceof JSONArray )\n-        {\n-            return ((JSONArray) value).toString( indentFactor, indent );\n-        }\n-        if ( value instanceof Map )\n-        {\n-            return new JSONObject( (Map) value ).toString( indentFactor, indent );\n-        }\n-        if ( value instanceof Collection )\n-        {\n-            return new JSONArray( (Collection) value ).toString( indentFactor, indent );\n-        }\n-        if ( value.getClass().isArray() )\n-        {\n-            return new JSONArray( value ).toString( indentFactor, indent );\n-        }\n-        return quote( value.toString() );\n-    }\n-\n-    public Map toMap()\n-    {\n-        return Collections.unmodifiableMap( map );\n-    }\n-\n-    private void populateInternalMap( Object bean, boolean includeSuperClass )\n-    {\n-        Class klass = bean.getClass();\n-\n-        /* If klass.getSuperClass is System class then force includeSuperClass to false. */\n-\n-        if ( klass.getClassLoader() == null )\n-        {\n-            includeSuperClass = false;\n-        }\n-\n-        Method[] methods = includeSuperClass ? klass.getMethods() : klass.getDeclaredMethods();\n-        for ( Method method : methods )\n-        {\n-            try\n+              map.put(key, NULL);\n+            } else if (result.getClass().isArray())\n             {\n-                if ( Modifier.isPublic( method.getModifiers() ) )\n-                {\n-                    String name = method.getName();\n-                    String key = \"\";\n-                    if ( name.startsWith( \"get\" ) )\n-                    {\n-                        key = name.substring( 3 );\n-                    }\n-                    else if ( name.startsWith( \"is\" ) )\n-                    {\n-                        key = name.substring( 2 );\n-                    }\n-                    if ( key.length() > 0 && Character.isUpperCase( key.charAt( 0 ) ) &&\n-                            method.getParameterTypes().length == 0 )\n-                    {\n-                        if ( key.length() == 1 )\n-                        {\n-                            key = key.toLowerCase();\n-                        }\n-                        else if ( !Character.isUpperCase( key.charAt( 1 ) ) )\n-                        {\n-                            key = key.substring( 0, 1 ).toLowerCase() + key.substring( 1 );\n-                        }\n-\n-                        Object result = method.invoke( bean, (Object[]) null );\n-                        if ( result == null )\n-                        {\n-                            map.put( key, NULL );\n-                        }\n-                        else if ( result.getClass().isArray() )\n-                        {\n-                            map.put( key, new JSONArray( result, includeSuperClass ) );\n-                        }\n-                        else if ( result instanceof Collection )\n-                        { // List or Set\n-                            map.put( key, new JSONArray( (Collection) result, includeSuperClass ) );\n-                        }\n-                        else if ( result instanceof Map )\n-                        {\n-                            map.put( key, new JSONObject( (Map) result, includeSuperClass ) );\n-                        }\n-                        else if ( isStandardProperty( result.getClass() ) )\n-                        { // Primitives, String and Wrapper\n-                            map.put( key, result );\n-                        }\n-                        else\n-                        {\n-                            if ( result.getClass().getPackage().getName().startsWith( \"java\" ) ||\n-                                    result.getClass().getClassLoader() == null )\n-                            {\n-                                map.put( key, result.toString() );\n-                            }\n-                            else\n-                            { // User defined Objects\n-                                map.put( key, new JSONObject( result, includeSuperClass ) );\n-                            }\n-                        }\n-                    }\n-                }\n-            }\n-            catch ( Exception e )\n+              map.put(key, new JSONArray(result, includeSuperClass));\n+            } else if (result instanceof Collection)\n+            { // List or Set\n+              map.put(key, new JSONArray((Collection) result, includeSuperClass));\n+            } else if (result instanceof Map)\n+            {\n+              map.put(key, new JSONObject((Map) result, includeSuperClass));\n+            } else if (isStandardProperty(result.getClass()))\n+            { // Primitives, String and Wrapper\n+              map.put(key, result);\n+            } else\n             {\n-                throw new RuntimeException( e );\n+              if (result.getClass().getPackage().getName().startsWith(\"java\") ||\n+                  result.getClass().getClassLoader() == null)\n+              {\n+                map.put(key, result.toString());\n+              } else\n+              { // User defined Objects\n+                map.put(key, new JSONObject(result, includeSuperClass));\n+              }\n             }\n-        }\n-    }\n+          }\n+        }\n+      } catch (Exception e)\n+      {\n+        throw new RuntimeException(e);\n+      }\n+    }\n+  }\n+\n+  /**\n+   * Accumulate values under a key. It is similar to the put method except\n+   * that if there is already an object stored under the key then a\n+   * JSONArray is stored under the key to hold all of the accumulated values.\n+   * If there is already a JSONArray, then the new value is appended to it.\n+   * In contrast, the put method replaces the previous value.\n+   *\n+   * @param key   A key string.\n+   * @param value An object to be accumulated under the key.\n+   * @return this.\n+   * @throws JSONException If the value is an invalid number\n+   *                       or if the key is null.\n+   */\n+  public JSONObject accumulate(String key, Object value) throws JSONException\n+  {\n+    testValidity(value);\n+    Object o = opt(key);\n+    if (o == null)\n+    {\n+      put(key, value instanceof JSONArray ? new JSONArray().put(value) : value);\n+    } else if (o instanceof JSONArray)\n+    {\n+      ((JSONArray) o).put(value);\n+    } else\n+    {\n+      put(key, new JSONArray().put(o).put(value));\n+    }\n+    return this;\n+  }\n+\n+  /**\n+   * Append values to the array under a key. If the key does not exist in the\n+   * JSONObject, then the key is put in the JSONObject with its value being a\n+   * JSONArray containing the value parameter. If the key was already\n+   * associated with a JSONArray, then the value parameter is appended to it.\n+   *\n+   * @param key   A key string.\n+   * @param value An object to be accumulated under the key.\n+   * @return this.\n+   * @throws JSONException If the key is null or if the current value\n+   *                       associated with the key is not a JSONArray.\n+   */\n+  public JSONObject append(String key, Object value) throws JSONException\n+  {\n+    testValidity(value);\n+    Object o = opt(key);\n+    if (o == null)\n+    {\n+      put(key, new JSONArray().put(value));\n+    } else if (o instanceof JSONArray)\n+    {\n+      put(key, ((JSONArray) o).put(value));\n+    } else\n+    {\n+      throw new JSONException(\"JSONObject[\" + key + \"] is not a JSONArray.\");\n+    }\n+    return this;\n+  }\n+\n+  /**\n+   * Get the value object associated with a key.\n+   *\n+   * @param key A key string.\n+   * @return The object associated with the key.\n+   * @throws JSONException if the key is not found.\n+   */\n+  public Object get(String key) throws JSONException\n+  {\n+    Object o = opt(key);\n+    if (o == null)\n+    {\n+      throw new JSONException(\"JSONObject[\" + quote(key) + \"] not found.\");\n+    }\n+    return o;\n+  }\n+\n+  /**\n+   * Get the boolean value associated with a key.\n+   *\n+   * @param key A key string.\n+   * @return The truth.\n+   * @throws JSONException if the value is not a Boolean or the String \"true\" or \"false\".\n+   */\n+  public boolean getBoolean(String key) throws JSONException\n+  {\n+    Object o = get(key);\n+    if (o.equals(Boolean.FALSE) || (o instanceof String && ((String) o).equalsIgnoreCase(\"false\")))\n+    {\n+      return false;\n+    } else if (o.equals(Boolean.TRUE) || (o instanceof String && ((String) o).equalsIgnoreCase(\"true\")))\n+    {\n+      return true;\n+    }\n+    throw new JSONException(\"JSONObject[\" + quote(key) + \"] is not a Boolean.\");\n+  }\n+\n+  /**\n+   * Get the double value associated with a key.\n+   *\n+   * @param key A key string.\n+   * @return The numeric value.\n+   * @throws JSONException if the key is not found or\n+   *                       if the value is not a Number object and cannot be converted to a number.\n+   */\n+  public double getDouble(String key) throws JSONException\n+  {\n+    Object o = get(key);\n+    try\n+    {\n+      return o instanceof Number ? ((Number) o).doubleValue() : Double.valueOf((String) o).doubleValue();\n+    } catch (Exception e)\n+    {\n+      throw new JSONException(\"JSONObject[\" + quote(key) + \"] is not a number.\");\n+    }\n+  }\n+\n+  /**\n+   * Get the int value associated with a key. If the number value is too\n+   * large for an int, it will be clipped.\n+   *\n+   * @param key A key string.\n+   * @return The integer value.\n+   * @throws JSONException if the key is not found or if the value cannot\n+   *                       be converted to an integer.\n+   */\n+  public int getInt(String key) throws JSONException\n+  {\n+    Object o = get(key);\n+    return o instanceof Number ? ((Number) o).intValue() : (int) getDouble(key);\n+  }\n+\n+  /**\n+   * Get the JSONArray value associated with a key.\n+   *\n+   * @param key A key string.\n+   * @return A JSONArray which is the value.\n+   * @throws JSONException if the key is not found or\n+   *                       if the value is not a JSONArray.\n+   */\n+  public JSONArray getJSONArray(String key) throws JSONException\n+  {\n+    Object o = get(key);\n+    if (o instanceof JSONArray)\n+    {\n+      return (JSONArray) o;\n+    }\n+    throw new JSONException(\"JSONObject[\" + quote(key) + \"] is not a JSONArray.\");\n+  }\n+\n+  /**\n+   * Get the JSONObject value associated with a key.\n+   *\n+   * @param key A key string.\n+   * @return A JSONObject which is the value.\n+   * @throws JSONException if the key is not found or\n+   *                       if the value is not a JSONObject.\n+   */\n+  public JSONObject getJSONObject(String key) throws JSONException\n+  {\n+    Object o = get(key);\n+    if (o instanceof JSONObject)\n+    {\n+      return (JSONObject) o;\n+    }\n+    throw new JSONException(\"JSONObject[\" + quote(key) + \"] is not a JSONObject.\");\n+  }\n+\n+  /**\n+   * Get the long value associated with a key. If the number value is too\n+   * long for a long, it will be clipped.\n+   *\n+   * @param key A key string.\n+   * @return The long value.\n+   * @throws JSONException if the key is not found or if the value cannot\n+   *                       be converted to a long.\n+   */\n+  public long getLong(String key) throws JSONException\n+  {\n+    Object o = get(key);\n+    return o instanceof Number ? ((Number) o).longValue() : (long) getDouble(key);\n+  }\n+\n+  /**\n+   * Get the string associated with a key.\n+   *\n+   * @param key A key string.\n+   * @return A string which is the value.\n+   * @throws JSONException if the key is not found.\n+   */\n+  public String getString(String key) throws JSONException\n+  {\n+    return get(key).toString();\n+  }\n+\n+  /**\n+   * Determine if the JSONObject contains a specific key.\n+   *\n+   * @param key A key string.\n+   * @return true if the key exists in the JSONObject.\n+   */\n+  public boolean has(String key)\n+  {\n+    return this.map.containsKey(key);\n+  }\n+\n+  /**\n+   * Determine if the value associated with the key is null or if there is\n+   * no value.\n+   *\n+   * @param key A key string.\n+   * @return true if there is no value associated with the key or if\n+   * the value is the JSONObject.NULL object.\n+   */\n+  public boolean isNull(String key)\n+  {\n+    return JSONObject.NULL.equals(opt(key));\n+  }\n+\n+  /**\n+   * Get an enumeration of the keys of the JSONObject.\n+   *\n+   * @return An iterator of the keys.\n+   */\n+  public Iterator keys()\n+  {\n+    return this.map.keySet().iterator();\n+  }\n+\n+  /**\n+   * Get the number of keys stored in the JSONObject.\n+   *\n+   * @return The number of keys in the JSONObject.\n+   */\n+  public int length()\n+  {\n+    return this.map.size();\n+  }\n+\n+  /**\n+   * Produce a JSONArray containing the names of the elements of this\n+   * JSONObject.\n+   *\n+   * @return A JSONArray containing the key strings, or null if the JSONObject\n+   * is empty.\n+   */\n+  public JSONArray names()\n+  {\n+    JSONArray ja = new JSONArray();\n+    Iterator keys = keys();\n+    while (keys.hasNext())\n+    {\n+      ja.put(keys.next());\n+    }\n+    return ja.length() == 0 ? null : ja;\n+  }\n+\n+  /**\n+   * Get an optional value associated with a key.\n+   *\n+   * @param key A key string.\n+   * @return An object which is the value, or null if there is no value.\n+   */\n+  public Object opt(String key)\n+  {\n+    return key == null ? null : this.map.get(key);\n+  }\n+\n+  /**\n+   * Get an optional boolean associated with a key.\n+   * It returns false if there is no such key, or if the value is not\n+   * Boolean.TRUE or the String \"true\".\n+   *\n+   * @param key A key string.\n+   * @return The truth.\n+   */\n+  public boolean optBoolean(String key)\n+  {\n+    return optBoolean(key, false);\n+  }\n+\n+  /**\n+   * Get an optional boolean associated with a key.\n+   * It returns the defaultValue if there is no such key, or if it is not\n+   * a Boolean or the String \"true\" or \"false\" (case insensitive).\n+   *\n+   * @param key          A key string.\n+   * @param defaultValue The default.\n+   * @return The truth.\n+   */\n+  public boolean optBoolean(String key, boolean defaultValue)\n+  {\n+    try\n+    {\n+      return getBoolean(key);\n+    } catch (Exception e)\n+    {\n+      return defaultValue;\n+    }\n+  }\n+\n+  /**\n+   * Put a key/value pair in the JSONObject, where the value will be a\n+   * JSONArray which is produced from a Collection.\n+   *\n+   * @param key   A key string.\n+   * @param value A Collection value.\n+   * @return this.\n+   * @throws JSONException\n+   */\n+  public JSONObject put(String key, Collection value) throws JSONException\n+  {\n+    put(key, new JSONArray(value));\n+    return this;\n+  }\n+\n+  /**\n+   * Get an optional double associated with a key,\n+   * or NaN if there is no such key or if its value is not a number.\n+   * If the value is a string, an attempt will be made to evaluate it as\n+   * a number.\n+   *\n+   * @param key A string which is the key.\n+   * @return An object which is the value.\n+   */\n+  public double optDouble(String key)\n+  {\n+    return optDouble(key, Double.NaN);\n+  }\n+\n+  /**\n+   * Get an optional double associated with a key, or the\n+   * defaultValue if there is no such key or if its value is not a number.\n+   * If the value is a string, an attempt will be made to evaluate it as\n+   * a number.\n+   *\n+   * @param key          A key string.\n+   * @param defaultValue The default.\n+   * @return An object which is the value.\n+   */\n+  public double optDouble(String key, double defaultValue)\n+  {\n+    try\n+    {\n+      Object o = opt(key);\n+      return o instanceof Number ? ((Number) o).doubleValue() : new Double((String) o);\n+    } catch (Exception e)\n+    {\n+      return defaultValue;\n+    }\n+  }\n+\n+  /**\n+   * Get an optional int value associated with a key,\n+   * or zero if there is no such key or if the value is not a number.\n+   * If the value is a string, an attempt will be made to evaluate it as\n+   * a number.\n+   *\n+   * @param key A key string.\n+   * @return An object which is the value.\n+   */\n+  public int optInt(String key)\n+  {\n+    return optInt(key, 0);\n+  }\n+\n+  /**\n+   * Get an optional int value associated with a key,\n+   * or the default if there is no such key or if the value is not a number.\n+   * If the value is a string, an attempt will be made to evaluate it as\n+   * a number.\n+   *\n+   * @param key          A key string.\n+   * @param defaultValue The default.\n+   * @return An object which is the value.\n+   */\n+  public int optInt(String key, int defaultValue)\n+  {\n+    try\n+    {\n+      return getInt(key);\n+    } catch (Exception e)\n+    {\n+      return defaultValue;\n+    }\n+  }\n+\n+  /**\n+   * Get an optional JSONArray associated with a key.\n+   * It returns null if there is no such key, or if its value is not a\n+   * JSONArray.\n+   *\n+   * @param key A key string.\n+   * @return A JSONArray which is the value.\n+   */\n+  public JSONArray optJSONArray(String key)\n+  {\n+    Object o = opt(key);\n+    return o instanceof JSONArray ? (JSONArray) o : null;\n+  }\n+\n+  /**\n+   * Get an optional JSONObject associated with a key.\n+   * It returns null if there is no such key, or if its value is not a\n+   * JSONObject.\n+   *\n+   * @param key A key string.\n+   * @return A JSONObject which is the value.\n+   */\n+  public JSONObject optJSONObject(String key)\n+  {\n+    Object o = opt(key);\n+    return o instanceof JSONObject ? (JSONObject) o : null;\n+  }\n+\n+  /**\n+   * Get an optional long value associated with a key,\n+   * or zero if there is no such key or if the value is not a number.\n+   * If the value is a string, an attempt will be made to evaluate it as\n+   * a number.\n+   *\n+   * @param key A key string.\n+   * @return An object which is the value.\n+   */\n+  public long optLong(String key)\n+  {\n+    return optLong(key, 0);\n+  }\n+\n+  /**\n+   * Get an optional long value associated with a key,\n+   * or the default if there is no such key or if the value is not a number.\n+   * If the value is a string, an attempt will be made to evaluate it as\n+   * a number.\n+   *\n+   * @param key          A key string.\n+   * @param defaultValue The default.\n+   * @return An object which is the value.\n+   */\n+  public long optLong(String key, long defaultValue)\n+  {\n+    try\n+    {\n+      return getLong(key);\n+    } catch (Exception e)\n+    {\n+      return defaultValue;\n+    }\n+  }\n+\n+  /**\n+   * Get an optional string associated with a key.\n+   * It returns an empty string if there is no such key. If the value is not\n+   * a string and is not null, then it is coverted to a string.\n+   *\n+   * @param key A key string.\n+   * @return A string which is the value.\n+   */\n+  public String optString(String key)\n+  {\n+    return optString(key, \"\");\n+  }\n+\n+  /**\n+   * Get an optional string associated with a key.\n+   * It returns the defaultValue if there is no such key.\n+   *\n+   * @param key          A key string.\n+   * @param defaultValue The default.\n+   * @return A string which is the value.\n+   */\n+  public String optString(String key, String defaultValue)\n+  {\n+    Object o = opt(key);\n+    return o != null ? o.toString() : defaultValue;\n+  }\n+\n+  /**\n+   * Put a key/boolean pair in the JSONObject.\n+   *\n+   * @param key   A key string.\n+   * @param value A boolean which is the value.\n+   * @return this.\n+   * @throws JSONException If the key is null.\n+   */\n+  public JSONObject put(String key, boolean value) throws JSONException\n+  {\n+    put(key, value ? Boolean.TRUE : Boolean.FALSE);\n+    return this;\n+  }\n+\n+  /**\n+   * Put a key/double pair in the JSONObject.\n+   *\n+   * @param key   A key string.\n+   * @param value A double which is the value.\n+   * @return this.\n+   * @throws JSONException If the key is null or if the number is invalid.\n+   */\n+  public JSONObject put(String key, double value) throws JSONException\n+  {\n+    put(key, new Double(value));\n+    return this;\n+  }\n+\n+  /**\n+   * Put a key/int pair in the JSONObject.\n+   *\n+   * @param key   A key string.\n+   * @param value An int which is the value.\n+   * @return this.\n+   * @throws JSONException If the key is null.\n+   */\n+  public JSONObject put(String key, int value) throws JSONException\n+  {\n+    put(key, Integer.valueOf(value));\n+    return this;\n+  }\n+\n+  /**\n+   * Put a key/long pair in the JSONObject.\n+   *\n+   * @param key   A key string.\n+   * @param value A long which is the value.\n+   * @return this.\n+   * @throws JSONException If the key is null.\n+   */\n+  public JSONObject put(String key, long value) throws JSONException\n+  {\n+    put(key, Long.valueOf(value));\n+    return this;\n+  }\n+\n+  /**\n+   * Put a key/value pair in the JSONObject, where the value will be a\n+   * JSONObject which is produced from a Map.\n+   *\n+   * @param key   A key string.\n+   * @param value A Map value.\n+   * @return this.\n+   * @throws JSONException\n+   */\n+  public JSONObject put(String key, Map value) throws JSONException\n+  {\n+    put(key, new JSONObject(value));\n+    return this;\n+  }\n+\n+  /**\n+   * Put a key/value pair in the JSONObject. If the value is null,\n+   * then the key will be removed from the JSONObject if it is present.\n+   *\n+   * @param key   A key string.\n+   * @param value An object which is the value. It should be of one of these\n+   *              types: Boolean, Double, Integer, JSONArray, JSONObject, Long, String,\n+   *              or the JSONObject.NULL object.\n+   * @return this.\n+   * @throws JSONException If the value is non-finite number\n+   *                       or if the key is null.\n+   */\n+  public JSONObject put(String key, Object value) throws JSONException\n+  {\n+    if (key == null)\n+    {\n+      throw new JSONException(\"Null key.\");\n+    }\n+    if (value != null)\n+    {\n+      testValidity(value);\n+      this.map.put(key, value);\n+    } else\n+    {\n+      remove(key);\n+    }\n+    return this;\n+  }\n+\n+  /**\n+   * Put a key/value pair in the JSONObject, but only if the key and the\n+   * value are both non-null, and only if there is not already a member\n+   * with that name.\n+   *\n+   * @param key\n+   * @param value\n+   * @return his.\n+   * @throws JSONException if the key is a duplicate\n+   */\n+  public JSONObject putOnce(String key, Object value) throws JSONException\n+  {\n+    if (key != null && value != null)\n+    {\n+      if (opt(key) != null)\n+      {\n+        throw new JSONException(\"Duplicate key \\\"\" + key + \"\\\"\");\n+      }\n+      put(key, value);\n+    }\n+    return this;\n+  }\n+\n+  /**\n+   * Put a key/value pair in the JSONObject, but only if the\n+   * key and the value are both non-null.\n+   *\n+   * @param key   A key string.\n+   * @param value An object which is the value. It should be of one of these\n+   *              types: Boolean, Double, Integer, JSONArray, JSONObject, Long, String,\n+   *              or the JSONObject.NULL object.\n+   * @return this.\n+   * @throws JSONException If the value is a non-finite number.\n+   */\n+  public JSONObject putOpt(String key, Object value) throws JSONException\n+  {\n+    if (key != null && value != null)\n+    {\n+      put(key, value);\n+    }\n+    return this;\n+  }\n+\n+  /**\n+   * Remove a name and its value, if present.\n+   *\n+   * @param key The name to be removed.\n+   * @return The value that was associated with the name,\n+   * or null if there was no value.\n+   */\n+  public Object remove(String key)\n+  {\n+    return this.map.remove(key);\n+  }\n+\n+  /**\n+   * Get an enumeration of the keys of the JSONObject.\n+   * The keys will be sorted alphabetically.\n+   *\n+   * @return An iterator of the keys.\n+   */\n+  public Iterator sortedKeys()\n+  {\n+    return new TreeSet(this.map.keySet()).iterator();\n+  }\n+\n+  /**\n+   * Produce a JSONArray containing the values of the members of this\n+   * JSONObject.\n+   *\n+   * @param names A JSONArray containing a list of key strings. This\n+   *              determines the sequence of the values in the result.\n+   * @return A JSONArray of values.\n+   * @throws JSONException If any of the values are non-finite numbers.\n+   */\n+  public JSONArray toJSONArray(JSONArray names) throws JSONException\n+  {\n+    if (names == null || names.length() == 0)\n+    {\n+      return null;\n+    }\n+    JSONArray ja = new JSONArray();\n+    for (int i = 0; i < names.length(); i += 1)\n+    {\n+      ja.put(this.opt(names.getString(i)));\n+    }\n+    return ja;\n+  }\n+\n+  /**\n+   * Make a JSON text of this JSONObject. For compactness, no whitespace\n+   * is added. If this would not result in a syntactically correct JSON text,\n+   * then null will be returned instead.\n+   * <p>\n+   * Warning: This method assumes that the data structure is acyclical.\n+   *\n+   * @return a printable, displayable, portable, transmittable\n+   * representation of the object, beginning\n+   * with <code>{</code>&nbsp;<small>(left brace)</small> and ending\n+   * with <code>}</code>&nbsp;<small>(right brace)</small>.\n+   */\n+  @Override\n+  public String toString()\n+  {\n+    try\n+    {\n+      Iterator keys = keys();\n+      StringBuilder sb = new StringBuilder(\"{\");\n+\n+      while (keys.hasNext())\n+      {\n+        if (sb.length() > 1)\n+        {\n+          sb.append(',');\n+        }\n+        Object o = keys.next();\n+        sb.append(quote(o.toString()));\n+        sb.append(':');\n+        sb.append(valueToString(this.map.get(o)));\n+      }\n+      sb.append('}');\n+      return sb.toString();\n+    } catch (Exception e)\n+    {\n+      return null;\n+    }\n+  }\n+\n+  /**\n+   * Make a prettyprinted JSON text of this JSONObject.\n+   * <p>\n+   * Warning: This method assumes that the data structure is acyclical.\n+   *\n+   * @param indentFactor The number of spaces to add to each level of\n+   *                     indentation.\n+   * @return a printable, displayable, portable, transmittable\n+   * representation of the object, beginning\n+   * with <code>{</code>&nbsp;<small>(left brace)</small> and ending\n+   * with <code>}</code>&nbsp;<small>(right brace)</small>.\n+   * @throws JSONException If the object contains an invalid number.\n+   */\n+  public String toString(int indentFactor) throws JSONException\n+  {\n+    return toString(indentFactor, 0);\n+  }\n+\n+  /**\n+   * Make a prettyprinted JSON text of this JSONObject.\n+   * <p>\n+   * Warning: This method assumes that the data structure is acyclical.\n+   *\n+   * @param indentFactor The number of spaces to add to each level of\n+   *                     indentation.\n+   * @param indent       The indentation of the top level.\n+   * @return a printable, displayable, transmittable\n+   * representation of the object, beginning\n+   * with <code>{</code>&nbsp;<small>(left brace)</small> and ending\n+   * with <code>}</code>&nbsp;<small>(right brace)</small>.\n+   * @throws JSONException If the object contains an invalid number.\n+   */\n+  String toString(int indentFactor, int indent) throws JSONException\n+  {\n+    int j;\n+    int n = length();\n+    if (n == 0)\n+    {\n+      return \"{}\";\n+    }\n+    Iterator keys = sortedKeys();\n+    StringBuilder sb = new StringBuilder(\"{\");\n+    int newindent = indent + indentFactor;\n+    Object o;\n+    if (n == 1)\n+    {\n+      o = keys.next();\n+      sb.append(quote(o.toString()));\n+      sb.append(\": \");\n+      sb.append(valueToString(this.map.get(o), indentFactor, indent));\n+    } else\n+    {\n+      while (keys.hasNext())\n+      {\n+        o = keys.next();\n+        if (sb.length() > 1)\n+        {\n+          sb.append(\",\\n\");\n+        } else\n+        {\n+          sb.append('\\n');\n+        }\n+        for (j = 0; j < newindent; j += 1)\n+        {\n+          sb.append(' ');\n+        }\n+        sb.append(quote(o.toString()));\n+        sb.append(\": \");\n+        sb.append(valueToString(this.map.get(o), indentFactor, newindent));\n+      }\n+      if (sb.length() > 1)\n+      {\n+        sb.append('\\n');\n+        for (j = 0; j < indent; j += 1)\n+        {\n+          sb.append(' ');\n+        }\n+      }\n+    }\n+    sb.append('}');\n+    return sb.toString();\n+  }\n+\n+  /**\n+   * Write the contents of the JSONObject as JSON text to a writer.\n+   * For compactness, no whitespace is added.\n+   * <p>\n+   * Warning: This method assumes that the data structure is acyclical.\n+   *\n+   * @return The writer.\n+   * @throws JSONException\n+   */\n+  public Writer write(Writer writer) throws JSONException\n+  {\n+    try\n+    {\n+      boolean b = false;\n+      Iterator keys = keys();\n+      writer.write('{');\n+\n+      while (keys.hasNext())\n+      {\n+        if (b)\n+        {\n+          writer.write(',');\n+        }\n+        Object k = keys.next();\n+        writer.write(quote(k.toString()));\n+        writer.write(':');\n+        Object v = this.map.get(k);\n+        if (v instanceof JSONObject)\n+        {\n+          ((JSONObject) v).write(writer);\n+        } else if (v instanceof JSONArray)\n+        {\n+          ((JSONArray) v).write(writer);\n+        } else\n+        {\n+          writer.write(valueToString(v));\n+        }\n+        b = true;\n+      }\n+      writer.write('}');\n+      return writer;\n+    } catch (IOException e)\n+    {\n+      throw new JSONException(e);\n+    }\n+  }\n+\n+  /**\n+   * JSONObject.NULL is equivalent to the value that JavaScript calls null,\n+   * whilst Java's null is equivalent to the value that JavaScript calls\n+   * undefined.\n+   */\n+  private static final class Null\n+  {\n \n     /**\n-     * Accumulate values under a key. It is similar to the put method except\n-     * that if there is already an object stored under the key then a\n-     * JSONArray is stored under the key to hold all of the accumulated values.\n-     * If there is already a JSONArray, then the new value is appended to it.\n-     * In contrast, the put method replaces the previous value.\n+     * There is only intended to be a single instance of the NULL object,\n+     * so the clone method returns itself.\n      *\n-     * @param key A key string.\n-     * @param value An object to be accumulated under the key.\n-     * @return this.\n-     * @throws JSONException If the value is an invalid number\n-     * or if the key is null.\n+     * @return NULL.\n      */\n-    public JSONObject accumulate( String key, Object value ) throws JSONException\n+    @Override\n+    protected Object clone()\n     {\n-        testValidity( value );\n-        Object o = opt( key );\n-        if ( o == null )\n-        {\n-            put( key, value instanceof JSONArray ? new JSONArray().put( value ) : value );\n-        }\n-        else if ( o instanceof JSONArray )\n-        {\n-            ((JSONArray) o).put( value );\n-        }\n-        else\n-        {\n-            put( key, new JSONArray().put( o ).put( value ) );\n-        }\n-        return this;\n+      return this;\n     }\n \n-    /**\n-     * Append values to the array under a key. If the key does not exist in the\n-     * JSONObject, then the key is put in the JSONObject with its value being a\n-     * JSONArray containing the value parameter. If the key was already\n-     * associated with a JSONArray, then the value parameter is appended to it.\n-     *\n-     * @param key A key string.\n-     * @param value An object to be accumulated under the key.\n-     * @return this.\n-     * @throws JSONException If the key is null or if the current value\n-     * associated with the key is not a JSONArray.\n-     */\n-    public JSONObject append( String key, Object value ) throws JSONException\n+    @Override\n+    public int hashCode()\n     {\n-        testValidity( value );\n-        Object o = opt( key );\n-        if ( o == null )\n-        {\n-            put( key, new JSONArray().put( value ) );\n-        }\n-        else if ( o instanceof JSONArray )\n-        {\n-            put( key, ((JSONArray) o).put( value ) );\n-        }\n-        else\n-        {\n-            throw new JSONException( \"JSONObject[\" + key + \"] is not a JSONArray.\" );\n-        }\n-        return this;\n+      return 1;\n     }\n \n     /**\n-     * Get the value object associated with a key.\n+     * A Null object is equal to the null value and to itself.\n      *\n-     * @param key A key string.\n-     * @return The object associated with the key.\n-     * @throws JSONException if the key is not found.\n+     * @param object An object to test for nullness.\n+     * @return true if the object parameter is the JSONObject.NULL object\n+     * or null.\n      */\n-    public Object get( String key ) throws JSONException\n+    @Override\n+    public boolean equals(Object object)\n     {\n-        Object o = opt( key );\n-        if ( o == null )\n-        {\n-            throw new JSONException( \"JSONObject[\" + quote( key ) + \"] not found.\" );\n-        }\n-        return o;\n+      return object == null || object == this;\n     }\n \n     /**\n-     * Get the boolean value associated with a key.\n+     * Get the \"null\" string value.\n      *\n-     * @param key A key string.\n-     * @return The truth.\n-     * @throws JSONException if the value is not a Boolean or the String \"true\" or \"false\".\n+     * @return The string \"null\".\n      */\n-    public boolean getBoolean( String key ) throws JSONException\n+    @Override\n+    public String toString()\n     {\n-        Object o = get( key );\n-        if ( o.equals( Boolean.FALSE ) || (o instanceof String && ((String) o).equalsIgnoreCase( \"false\" )) )\n-        {\n-            return false;\n-        }\n-        else if ( o.equals( Boolean.TRUE ) || (o instanceof String && ((String) o).equalsIgnoreCase( \"true\" )) )\n-        {\n-            return true;\n-        }\n-        throw new JSONException( \"JSONObject[\" + quote( key ) + \"] is not a Boolean.\" );\n-    }\n-\n-    /**\n-     * Get the double value associated with a key.\n-     *\n-     * @param key A key string.\n-     * @return The numeric value.\n-     * @throws JSONException if the key is not found or\n-     * if the value is not a Number object and cannot be converted to a number.\n-     */\n-    public double getDouble( String key ) throws JSONException\n-    {\n-        Object o = get( key );\n-        try\n-        {\n-            return o instanceof Number ? ((Number) o).doubleValue() : Double.valueOf( (String) o ).doubleValue();\n-        }\n-        catch ( Exception e )\n-        {\n-            throw new JSONException( \"JSONObject[\" + quote( key ) + \"] is not a number.\" );\n-        }\n-    }\n-\n-    /**\n-     * Get the int value associated with a key. If the number value is too\n-     * large for an int, it will be clipped.\n-     *\n-     * @param key A key string.\n-     * @return The integer value.\n-     * @throws JSONException if the key is not found or if the value cannot\n-     * be converted to an integer.\n-     */\n-    public int getInt( String key ) throws JSONException\n-    {\n-        Object o = get( key );\n-        return o instanceof Number ? ((Number) o).intValue() : (int) getDouble( key );\n-    }\n-\n-    /**\n-     * Get the JSONArray value associated with a key.\n-     *\n-     * @param key A key string.\n-     * @return A JSONArray which is the value.\n-     * @throws JSONException if the key is not found or\n-     * if the value is not a JSONArray.\n-     */\n-    public JSONArray getJSONArray( String key ) throws JSONException\n-    {\n-        Object o = get( key );\n-        if ( o instanceof JSONArray )\n-        {\n-            return (JSONArray) o;\n-        }\n-        throw new JSONException( \"JSONObject[\" + quote( key ) + \"] is not a JSONArray.\" );\n-    }\n-\n-    /**\n-     * Get the JSONObject value associated with a key.\n-     *\n-     * @param key A key string.\n-     * @return A JSONObject which is the value.\n-     * @throws JSONException if the key is not found or\n-     * if the value is not a JSONObject.\n-     */\n-    public JSONObject getJSONObject( String key ) throws JSONException\n-    {\n-        Object o = get( key );\n-        if ( o instanceof JSONObject )\n-        {\n-            return (JSONObject) o;\n-        }\n-        throw new JSONException( \"JSONObject[\" + quote( key ) + \"] is not a JSONObject.\" );\n-    }\n-\n-    /**\n-     * Get the long value associated with a key. If the number value is too\n-     * long for a long, it will be clipped.\n-     *\n-     * @param key A key string.\n-     * @return The long value.\n-     * @throws JSONException if the key is not found or if the value cannot\n-     * be converted to a long.\n-     */\n-    public long getLong( String key ) throws JSONException\n-    {\n-        Object o = get( key );\n-        return o instanceof Number ? ((Number) o).longValue() : (long) getDouble( key );\n-    }\n-\n-    /**\n-     * Get the string associated with a key.\n-     *\n-     * @param key A key string.\n-     * @return A string which is the value.\n-     * @throws JSONException if the key is not found.\n-     */\n-    public String getString( String key ) throws JSONException\n-    {\n-        return get( key ).toString();\n-    }\n-\n-    /**\n-     * Determine if the JSONObject contains a specific key.\n-     *\n-     * @param key A key string.\n-     * @return true if the key exists in the JSONObject.\n-     */\n-    public boolean has( String key )\n-    {\n-        return this.map.containsKey( key );\n-    }\n-\n-    /**\n-     * Determine if the value associated with the key is null or if there is\n-     * no value.\n-     *\n-     * @param key A key string.\n-     * @return true if there is no value associated with the key or if\n-     * the value is the JSONObject.NULL object.\n-     */\n-    public boolean isNull( String key )\n-    {\n-        return JSONObject.NULL.equals( opt( key ) );\n-    }\n-\n-    /**\n-     * Get an enumeration of the keys of the JSONObject.\n-     *\n-     * @return An iterator of the keys.\n-     */\n-    public Iterator keys()\n-    {\n-        return this.map.keySet().iterator();\n-    }\n-\n-    /**\n-     * Get the number of keys stored in the JSONObject.\n-     *\n-     * @return The number of keys in the JSONObject.\n-     */\n-    public int length()\n-    {\n-        return this.map.size();\n-    }\n-\n-    /**\n-     * Produce a JSONArray containing the names of the elements of this\n-     * JSONObject.\n-     *\n-     * @return A JSONArray containing the key strings, or null if the JSONObject\n-     * is empty.\n-     */\n-    public JSONArray names()\n-    {\n-        JSONArray ja = new JSONArray();\n-        Iterator keys = keys();\n-        while ( keys.hasNext() )\n-        {\n-            ja.put( keys.next() );\n-        }\n-        return ja.length() == 0 ? null : ja;\n-    }\n-\n-    /**\n-     * Get an optional value associated with a key.\n-     *\n-     * @param key A key string.\n-     * @return An object which is the value, or null if there is no value.\n-     */\n-    public Object opt( String key )\n-    {\n-        return key == null ? null : this.map.get( key );\n-    }\n-\n-    /**\n-     * Get an optional boolean associated with a key.\n-     * It returns false if there is no such key, or if the value is not\n-     * Boolean.TRUE or the String \"true\".\n-     *\n-     * @param key A key string.\n-     * @return The truth.\n-     */\n-    public boolean optBoolean( String key )\n-    {\n-        return optBoolean( key, false );\n-    }\n-\n-    /**\n-     * Get an optional boolean associated with a key.\n-     * It returns the defaultValue if there is no such key, or if it is not\n-     * a Boolean or the String \"true\" or \"false\" (case insensitive).\n-     *\n-     * @param key A key string.\n-     * @param defaultValue The default.\n-     * @return The truth.\n-     */\n-    public boolean optBoolean( String key, boolean defaultValue )\n-    {\n-        try\n-        {\n-            return getBoolean( key );\n-        }\n-        catch ( Exception e )\n-        {\n-            return defaultValue;\n-        }\n-    }\n-\n-    /**\n-     * Put a key/value pair in the JSONObject, where the value will be a\n-     * JSONArray which is produced from a Collection.\n-     *\n-     * @param key A key string.\n-     * @param value A Collection value.\n-     * @return this.\n-     * @throws JSONException\n-     */\n-    public JSONObject put( String key, Collection value ) throws JSONException\n-    {\n-        put( key, new JSONArray( value ) );\n-        return this;\n-    }\n-\n-    /**\n-     * Get an optional double associated with a key,\n-     * or NaN if there is no such key or if its value is not a number.\n-     * If the value is a string, an attempt will be made to evaluate it as\n-     * a number.\n-     *\n-     * @param key A string which is the key.\n-     * @return An object which is the value.\n-     */\n-    public double optDouble( String key )\n-    {\n-        return optDouble( key, Double.NaN );\n-    }\n-\n-    /**\n-     * Get an optional double associated with a key, or the\n-     * defaultValue if there is no such key or if its value is not a number.\n-     * If the value is a string, an attempt will be made to evaluate it as\n-     * a number.\n-     *\n-     * @param key A key string.\n-     * @param defaultValue The default.\n-     * @return An object which is the value.\n-     */\n-    public double optDouble( String key, double defaultValue )\n-    {\n-        try\n-        {\n-            Object o = opt( key );\n-            return o instanceof Number ? ((Number) o).doubleValue() : new Double( (String) o );\n-        }\n-        catch ( Exception e )\n-        {\n-            return defaultValue;\n-        }\n-    }\n-\n-    /**\n-     * Get an optional int value associated with a key,\n-     * or zero if there is no such key or if the value is not a number.\n-     * If the value is a string, an attempt will be made to evaluate it as\n-     * a number.\n-     *\n-     * @param key A key string.\n-     * @return An object which is the value.\n-     */\n-    public int optInt( String key )\n-    {\n-        return optInt( key, 0 );\n-    }\n-\n-    /**\n-     * Get an optional int value associated with a key,\n-     * or the default if there is no such key or if the value is not a number.\n-     * If the value is a string, an attempt will be made to evaluate it as\n-     * a number.\n-     *\n-     * @param key A key string.\n-     * @param defaultValue The default.\n-     * @return An object which is the value.\n-     */\n-    public int optInt( String key, int defaultValue )\n-    {\n-        try\n-        {\n-            return getInt( key );\n-        }\n-        catch ( Exception e )\n-        {\n-            return defaultValue;\n-        }\n-    }\n-\n-    /**\n-     * Get an optional JSONArray associated with a key.\n-     * It returns null if there is no such key, or if its value is not a\n-     * JSONArray.\n-     *\n-     * @param key A key string.\n-     * @return A JSONArray which is the value.\n-     */\n-    public JSONArray optJSONArray( String key )\n-    {\n-        Object o = opt( key );\n-        return o instanceof JSONArray ? (JSONArray) o : null;\n-    }\n-\n-    /**\n-     * Get an optional JSONObject associated with a key.\n-     * It returns null if there is no such key, or if its value is not a\n-     * JSONObject.\n-     *\n-     * @param key A key string.\n-     * @return A JSONObject which is the value.\n-     */\n-    public JSONObject optJSONObject( String key )\n-    {\n-        Object o = opt( key );\n-        return o instanceof JSONObject ? (JSONObject) o : null;\n-    }\n-\n-    /**\n-     * Get an optional long value associated with a key,\n-     * or zero if there is no such key or if the value is not a number.\n-     * If the value is a string, an attempt will be made to evaluate it as\n-     * a number.\n-     *\n-     * @param key A key string.\n-     * @return An object which is the value.\n-     */\n-    public long optLong( String key )\n-    {\n-        return optLong( key, 0 );\n-    }\n-\n-    /**\n-     * Get an optional long value associated with a key,\n-     * or the default if there is no such key or if the value is not a number.\n-     * If the value is a string, an attempt will be made to evaluate it as\n-     * a number.\n-     *\n-     * @param key A key string.\n-     * @param defaultValue The default.\n-     * @return An object which is the value.\n-     */\n-    public long optLong( String key, long defaultValue )\n-    {\n-        try\n-        {\n-            return getLong( key );\n-        }\n-        catch ( Exception e )\n-        {\n-            return defaultValue;\n-        }\n-    }\n-\n-    /**\n-     * Get an optional string associated with a key.\n-     * It returns an empty string if there is no such key. If the value is not\n-     * a string and is not null, then it is coverted to a string.\n-     *\n-     * @param key A key string.\n-     * @return A string which is the value.\n-     */\n-    public String optString( String key )\n-    {\n-        return optString( key, \"\" );\n-    }\n-\n-    /**\n-     * Get an optional string associated with a key.\n-     * It returns the defaultValue if there is no such key.\n-     *\n-     * @param key A key string.\n-     * @param defaultValue The default.\n-     * @return A string which is the value.\n-     */\n-    public String optString( String key, String defaultValue )\n-    {\n-        Object o = opt( key );\n-        return o != null ? o.toString() : defaultValue;\n-    }\n-\n-    /**\n-     * Put a key/boolean pair in the JSONObject.\n-     *\n-     * @param key A key string.\n-     * @param value A boolean which is the value.\n-     * @return this.\n-     * @throws JSONException If the key is null.\n-     */\n-    public JSONObject put( String key, boolean value ) throws JSONException\n-    {\n-        put( key, value ? Boolean.TRUE : Boolean.FALSE );\n-        return this;\n-    }\n-\n-    /**\n-     * Put a key/double pair in the JSONObject.\n-     *\n-     * @param key A key string.\n-     * @param value A double which is the value.\n-     * @return this.\n-     * @throws JSONException If the key is null or if the number is invalid.\n-     */\n-    public JSONObject put( String key, double value ) throws JSONException\n-    {\n-        put( key, new Double( value ) );\n-        return this;\n-    }\n-\n-    /**\n-     * Put a key/int pair in the JSONObject.\n-     *\n-     * @param key A key string.\n-     * @param value An int which is the value.\n-     * @return this.\n-     * @throws JSONException If the key is null.\n-     */\n-    public JSONObject put( String key, int value ) throws JSONException\n-    {\n-        put( key, Integer.valueOf( value ) );\n-        return this;\n-    }\n-\n-    /**\n-     * Put a key/long pair in the JSONObject.\n-     *\n-     * @param key A key string.\n-     * @param value A long which is the value.\n-     * @return this.\n-     * @throws JSONException If the key is null.\n-     */\n-    public JSONObject put( String key, long value ) throws JSONException\n-    {\n-        put( key, Long.valueOf( value ) );\n-        return this;\n-    }\n-\n-    /**\n-     * Put a key/value pair in the JSONObject, where the value will be a\n-     * JSONObject which is produced from a Map.\n-     *\n-     * @param key A key string.\n-     * @param value A Map value.\n-     * @return this.\n-     * @throws JSONException\n-     */\n-    public JSONObject put( String key, Map value ) throws JSONException\n-    {\n-        put( key, new JSONObject( value ) );\n-        return this;\n-    }\n-\n-    /**\n-     * Put a key/value pair in the JSONObject. If the value is null,\n-     * then the key will be removed from the JSONObject if it is present.\n-     *\n-     * @param key A key string.\n-     * @param value An object which is the value. It should be of one of these\n-     * types: Boolean, Double, Integer, JSONArray, JSONObject, Long, String,\n-     * or the JSONObject.NULL object.\n-     * @return this.\n-     * @throws JSONException If the value is non-finite number\n-     * or if the key is null.\n-     */\n-    public JSONObject put( String key, Object value ) throws JSONException\n-    {\n-        if ( key == null )\n-        {\n-            throw new JSONException( \"Null key.\" );\n-        }\n-        if ( value != null )\n-        {\n-            testValidity( value );\n-            this.map.put( key, value );\n-        }\n-        else\n-        {\n-            remove( key );\n-        }\n-        return this;\n-    }\n-\n-    /**\n-     * Put a key/value pair in the JSONObject, but only if the key and the\n-     * value are both non-null, and only if there is not already a member\n-     * with that name.\n-     *\n-     * @param key\n-     * @param value\n-     * @return his.\n-     * @throws JSONException if the key is a duplicate\n-     */\n-    public JSONObject putOnce( String key, Object value ) throws JSONException\n-    {\n-        if ( key != null && value != null )\n-        {\n-            if ( opt( key ) != null )\n-            {\n-                throw new JSONException( \"Duplicate key \\\"\" + key + \"\\\"\" );\n-            }\n-            put( key, value );\n-        }\n-        return this;\n-    }\n-\n-    /**\n-     * Put a key/value pair in the JSONObject, but only if the\n-     * key and the value are both non-null.\n-     *\n-     * @param key A key string.\n-     * @param value An object which is the value. It should be of one of these\n-     * types: Boolean, Double, Integer, JSONArray, JSONObject, Long, String,\n-     * or the JSONObject.NULL object.\n-     * @return this.\n-     * @throws JSONException If the value is a non-finite number.\n-     */\n-    public JSONObject putOpt( String key, Object value ) throws JSONException\n-    {\n-        if ( key != null && value != null )\n-        {\n-            put( key, value );\n-        }\n-        return this;\n-    }\n-\n-    /**\n-     * Remove a name and its value, if present.\n-     *\n-     * @param key The name to be removed.\n-     * @return The value that was associated with the name,\n-     * or null if there was no value.\n-     */\n-    public Object remove( String key )\n-    {\n-        return this.map.remove( key );\n-    }\n-\n-    /**\n-     * Get an enumeration of the keys of the JSONObject.\n-     * The keys will be sorted alphabetically.\n-     *\n-     * @return An iterator of the keys.\n-     */\n-    public Iterator sortedKeys()\n-    {\n-        return new TreeSet( this.map.keySet() ).iterator();\n-    }\n-\n-    /**\n-     * Produce a JSONArray containing the values of the members of this\n-     * JSONObject.\n-     *\n-     * @param names A JSONArray containing a list of key strings. This\n-     * determines the sequence of the values in the result.\n-     * @return A JSONArray of values.\n-     * @throws JSONException If any of the values are non-finite numbers.\n-     */\n-    public JSONArray toJSONArray( JSONArray names ) throws JSONException\n-    {\n-        if ( names == null || names.length() == 0 )\n-        {\n-            return null;\n-        }\n-        JSONArray ja = new JSONArray();\n-        for ( int i = 0; i < names.length(); i += 1 )\n-        {\n-            ja.put( this.opt( names.getString( i ) ) );\n-        }\n-        return ja;\n-    }\n-\n-    /**\n-     * Make a JSON text of this JSONObject. For compactness, no whitespace\n-     * is added. If this would not result in a syntactically correct JSON text,\n-     * then null will be returned instead.\n-     * <p>\n-     * Warning: This method assumes that the data structure is acyclical.\n-     *\n-     * @return a printable, displayable, portable, transmittable\n-     * representation of the object, beginning\n-     * with <code>{</code>&nbsp;<small>(left brace)</small> and ending\n-     * with <code>}</code>&nbsp;<small>(right brace)</small>.\n-     */\n-    @Override\n-    public String toString()\n-    {\n-        try\n-        {\n-            Iterator keys = keys();\n-            StringBuilder sb = new StringBuilder( \"{\" );\n-\n-            while ( keys.hasNext() )\n-            {\n-                if ( sb.length() > 1 )\n-                {\n-                    sb.append( ',' );\n-                }\n-                Object o = keys.next();\n-                sb.append( quote( o.toString() ) );\n-                sb.append( ':' );\n-                sb.append( valueToString( this.map.get( o ) ) );\n-            }\n-            sb.append( '}' );\n-            return sb.toString();\n-        }\n-        catch ( Exception e )\n-        {\n-            return null;\n-        }\n-    }\n-\n-    /**\n-     * Make a prettyprinted JSON text of this JSONObject.\n-     * <p>\n-     * Warning: This method assumes that the data structure is acyclical.\n-     *\n-     * @param indentFactor The number of spaces to add to each level of\n-     * indentation.\n-     * @return a printable, displayable, portable, transmittable\n-     * representation of the object, beginning\n-     * with <code>{</code>&nbsp;<small>(left brace)</small> and ending\n-     * with <code>}</code>&nbsp;<small>(right brace)</small>.\n-     * @throws JSONException If the object contains an invalid number.\n-     */\n-    public String toString( int indentFactor ) throws JSONException\n-    {\n-        return toString( indentFactor, 0 );\n-    }\n-\n-    /**\n-     * Make a prettyprinted JSON text of this JSONObject.\n-     * <p>\n-     * Warning: This method assumes that the data structure is acyclical.\n-     *\n-     * @param indentFactor The number of spaces to add to each level of\n-     * indentation.\n-     * @param indent The indentation of the top level.\n-     * @return a printable, displayable, transmittable\n-     * representation of the object, beginning\n-     * with <code>{</code>&nbsp;<small>(left brace)</small> and ending\n-     * with <code>}</code>&nbsp;<small>(right brace)</small>.\n-     * @throws JSONException If the object contains an invalid number.\n-     */\n-    String toString( int indentFactor, int indent ) throws JSONException\n-    {\n-        int j;\n-        int n = length();\n-        if ( n == 0 )\n-        {\n-            return \"{}\";\n-        }\n-        Iterator keys = sortedKeys();\n-        StringBuilder sb = new StringBuilder( \"{\" );\n-        int newindent = indent + indentFactor;\n-        Object o;\n-        if ( n == 1 )\n-        {\n-            o = keys.next();\n-            sb.append( quote( o.toString() ) );\n-            sb.append( \": \" );\n-            sb.append( valueToString( this.map.get( o ), indentFactor, indent ) );\n-        }\n-        else\n-        {\n-            while ( keys.hasNext() )\n-            {\n-                o = keys.next();\n-                if ( sb.length() > 1 )\n-                {\n-                    sb.append( \",\\n\" );\n-                }\n-                else\n-                {\n-                    sb.append( '\\n' );\n-                }\n-                for ( j = 0; j < newindent; j += 1 )\n-                {\n-                    sb.append( ' ' );\n-                }\n-                sb.append( quote( o.toString() ) );\n-                sb.append( \": \" );\n-                sb.append( valueToString( this.map.get( o ), indentFactor, newindent ) );\n-            }\n-            if ( sb.length() > 1 )\n-            {\n-                sb.append( '\\n' );\n-                for ( j = 0; j < indent; j += 1 )\n-                {\n-                    sb.append( ' ' );\n-                }\n-            }\n-        }\n-        sb.append( '}' );\n-        return sb.toString();\n-    }\n-\n-    /**\n-     * Write the contents of the JSONObject as JSON text to a writer.\n-     * For compactness, no whitespace is added.\n-     * <p>\n-     * Warning: This method assumes that the data structure is acyclical.\n-     *\n-     * @return The writer.\n-     * @throws JSONException\n-     */\n-    public Writer write( Writer writer ) throws JSONException\n-    {\n-        try\n-        {\n-            boolean b = false;\n-            Iterator keys = keys();\n-            writer.write( '{' );\n-\n-            while ( keys.hasNext() )\n-            {\n-                if ( b )\n-                {\n-                    writer.write( ',' );\n-                }\n-                Object k = keys.next();\n-                writer.write( quote( k.toString() ) );\n-                writer.write( ':' );\n-                Object v = this.map.get( k );\n-                if ( v instanceof JSONObject )\n-                {\n-                    ((JSONObject) v).write( writer );\n-                }\n-                else if ( v instanceof JSONArray )\n-                {\n-                    ((JSONArray) v).write( writer );\n-                }\n-                else\n-                {\n-                    writer.write( valueToString( v ) );\n-                }\n-                b = true;\n-            }\n-            writer.write( '}' );\n-            return writer;\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new JSONException( e );\n-        }\n-    }\n-\n-    /**\n-     * JSONObject.NULL is equivalent to the value that JavaScript calls null,\n-     * whilst Java's null is equivalent to the value that JavaScript calls\n-     * undefined.\n-     */\n-    private static final class Null\n-    {\n-\n-        /**\n-         * There is only intended to be a single instance of the NULL object,\n-         * so the clone method returns itself.\n-         *\n-         * @return NULL.\n-         */\n-        @Override\n-        protected Object clone()\n-        {\n-            return this;\n-        }\n-\n-        @Override\n-        public int hashCode()\n-        {\n-            return 1;\n-        }\n-\n-        /**\n-         * A Null object is equal to the null value and to itself.\n-         *\n-         * @param object An object to test for nullness.\n-         * @return true if the object parameter is the JSONObject.NULL object\n-         * or null.\n-         */\n-        @Override\n-        public boolean equals( Object object )\n-        {\n-            return object == null || object == this;\n-        }\n-\n-        /**\n-         * Get the \"null\" string value.\n-         *\n-         * @return The string \"null\".\n-         */\n-        @Override\n-        public String toString()\n-        {\n-            return \"null\";\n-        }\n+      return \"null\";\n     }\n+  }\n }\n",
            "diff_size": 3041
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
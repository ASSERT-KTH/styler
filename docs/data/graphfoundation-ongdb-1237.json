{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1237",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1237/IteratorWrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1237/IteratorWrapper.java\nindex c2fd49ab81c..55cb9298542 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1237/IteratorWrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1237/IteratorWrapper.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.helpers.collection;\n \n import java.util.Iterator;\n@@ -30,30 +31,30 @@ import java.util.Iterator;\n  */\n public abstract class IteratorWrapper<T, U> implements Iterator<T>\n {\n-    private Iterator<U> source;\n-\n-    public IteratorWrapper( Iterator<U> iteratorToWrap )\n-    {\n-        this.source = iteratorToWrap;\n-    }\n-\n-    @Override\n-    public boolean hasNext()\n-    {\n-        return this.source.hasNext();\n-    }\n-\n-    @Override\n-    public T next()\n-    {\n-        return underlyingObjectToObject( this.source.next() );\n-    }\n-\n-    @Override\n-    public void remove()\n-    {\n-        this.source.remove();\n-    }\n-\n-    protected abstract T underlyingObjectToObject( U object );\n+  private Iterator<U> source;\n+\n+  public IteratorWrapper(Iterator<U> iteratorToWrap)\n+  {\n+    this.source = iteratorToWrap;\n+  }\n+\n+  @Override\n+  public boolean hasNext()\n+  {\n+    return this.source.hasNext();\n+  }\n+\n+  @Override\n+  public T next()\n+  {\n+    return underlyingObjectToObject(this.source.next());\n+  }\n+\n+  @Override\n+  public void remove()\n+  {\n+    this.source.remove();\n+  }\n+\n+  protected abstract T underlyingObjectToObject(U object);\n }\n",
            "diff_size": 27
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1237/IteratorWrapper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1237/IteratorWrapper.java\nindex c2fd49ab81c..48cebda00a2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1237/IteratorWrapper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1237/IteratorWrapper.java\n@@ -28,7 +28,7 @@ import java.util.Iterator;\n  * @param <T> the type of items to return\n  * @param <U> the type of items to wrap/convert from\n  */\n-public abstract class IteratorWrapper<T, U> implements Iterator<T>\n+public abstract class IteratorWrapper<T,U> implements Iterator<T>\n {\n     private Iterator<U> source;\n \n@@ -56,4 +56,4 @@ public abstract class IteratorWrapper<T, U> implements Iterator<T>\n     }\n \n     protected abstract T underlyingObjectToObject( U object );\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
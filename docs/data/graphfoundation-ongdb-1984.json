{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1984",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "62",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "66",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "96",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "100",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1984/LuceneUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1984/LuceneUtil.java\nindex ee1ddb0c01a..f4ac05a8cc0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1984/LuceneUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1984/LuceneUtil.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.index.impl.lucene.explicit;\n \n import org.apache.lucene.index.IndexReader;\n@@ -31,84 +32,79 @@ import org.neo4j.index.lucene.ValueContext;\n \n public abstract class LuceneUtil\n {\n-    static void close( IndexWriter writer )\n-    {\n-        close( (Object) writer );\n-    }\n+  static void close(IndexWriter writer)\n+  {\n+    close((Object) writer);\n+  }\n \n-    static void close( IndexSearcher searcher )\n-    {\n-        close( (Object) searcher );\n-    }\n+  static void close(IndexSearcher searcher)\n+  {\n+    close((Object) searcher);\n+  }\n+\n+  static void close(IndexReader reader)\n+  {\n+    close((Object) reader);\n+  }\n \n-    static void close( IndexReader reader )\n+  private static void close(Object object)\n+  {\n+    if (object == null)\n     {\n-        close( (Object) reader );\n+      return;\n     }\n \n-    private static void close( Object object )\n+    try\n     {\n-        if ( object == null )\n-        {\n-            return;\n-        }\n-\n-        try\n-        {\n-            if ( object instanceof IndexWriter )\n-            {\n-                ((IndexWriter) object).close();\n-            }\n-            else if ( object instanceof IndexReader )\n-            {\n-                ((IndexReader) object).close();\n-            }\n-        }\n-        catch ( IOException e )\n-        {\n-            throw new RuntimeException( e );\n-        }\n+      if (object instanceof IndexWriter)\n+      {\n+        ((IndexWriter) object).close();\n+      } else if (object instanceof IndexReader)\n+      {\n+        ((IndexReader) object).close();\n+      }\n+    } catch (IOException e)\n+    {\n+      throw new RuntimeException(e);\n     }\n+  }\n \n-    /**\n-     * Will create a {@link Query} with a query for numeric ranges, that is\n-     * values that have been indexed using {@link ValueContext#indexNumeric()}.\n-     * It will match the type of numbers supplied to the type of values that\n-     * are indexed in the index, f.ex. long, int, float and double.\n-     * If both {@code from} and {@code to} is {@code null} then it will default\n-     * to int.\n-     *\n-     * @param key the property key to query.\n-     * @param from the low end of the range (inclusive)\n-     * @param to the high end of the range (inclusive)\n-     * @param includeFrom whether or not {@code from} (the lower bound) is inclusive\n-     * or not.\n-     * @param includeTo whether or not {@code to} (the higher bound) is inclusive\n-     * or not.\n-     * @return a {@link Query} to do numeric range queries with.\n-     */\n-    public static Query rangeQuery( String key, Number from, Number to,\n-            boolean includeFrom, boolean includeTo )\n+  /**\n+   * Will create a {@link Query} with a query for numeric ranges, that is\n+   * values that have been indexed using {@link ValueContext#indexNumeric()}.\n+   * It will match the type of numbers supplied to the type of values that\n+   * are indexed in the index, f.ex. long, int, float and double.\n+   * If both {@code from} and {@code to} is {@code null} then it will default\n+   * to int.\n+   *\n+   * @param key         the property key to query.\n+   * @param from        the low end of the range (inclusive)\n+   * @param to          the high end of the range (inclusive)\n+   * @param includeFrom whether or not {@code from} (the lower bound) is inclusive\n+   *                    or not.\n+   * @param includeTo   whether or not {@code to} (the higher bound) is inclusive\n+   *                    or not.\n+   * @return a {@link Query} to do numeric range queries with.\n+   */\n+  public static Query rangeQuery(String key, Number from, Number to,\n+                                 boolean includeFrom, boolean includeTo)\n+  {\n+    if (from instanceof Long || to instanceof Long)\n+    {\n+      return NumericRangeQuery.newLongRange(key, from != null ? from.longValue() : 0,\n+          to != null ? to.longValue() : Long.MAX_VALUE, includeFrom, includeTo);\n+    } else if (from instanceof Double || to instanceof Double)\n+    {\n+      return NumericRangeQuery.newDoubleRange(key, from != null ? from.doubleValue() : 0,\n+          to != null ? to.doubleValue() : Double.MAX_VALUE, includeFrom, includeTo);\n+    } else if (from instanceof Float || to instanceof Float)\n+    {\n+      return NumericRangeQuery.newFloatRange(key, from != null ? from.floatValue() : 0,\n+          to != null ? to.floatValue() : Float.MAX_VALUE, includeFrom, includeTo);\n+    } else\n     {\n-        if ( from instanceof Long || to instanceof Long )\n-        {\n-            return NumericRangeQuery.newLongRange( key, from != null ? from.longValue() : 0,\n-                    to != null ? to.longValue() : Long.MAX_VALUE, includeFrom, includeTo );\n-        }\n-        else if ( from instanceof Double || to instanceof Double )\n-        {\n-            return NumericRangeQuery.newDoubleRange( key, from != null ? from.doubleValue() : 0,\n-                    to != null ? to.doubleValue() : Double.MAX_VALUE, includeFrom, includeTo );\n-        }\n-        else if ( from instanceof Float || to instanceof Float )\n-        {\n-            return NumericRangeQuery.newFloatRange( key, from != null ? from.floatValue() : 0,\n-                    to != null ? to.floatValue() : Float.MAX_VALUE, includeFrom, includeTo );\n-        }\n-        else\n-        {\n-            return NumericRangeQuery.newIntRange( key, from != null ? from.intValue() : 0,\n-                    to != null ? to.intValue() : Integer.MAX_VALUE, includeFrom, includeTo );\n-        }\n+      return NumericRangeQuery.newIntRange(key, from != null ? from.intValue() : 0,\n+          to != null ? to.intValue() : Integer.MAX_VALUE, includeFrom, includeTo);\n     }\n+  }\n }\n",
            "diff_size": 94
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1984/LuceneUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1984/LuceneUtil.java\nindex ee1ddb0c01a..dd11bca789c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1984/LuceneUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1984/LuceneUtil.java\n@@ -109,6 +109,6 @@ public abstract class LuceneUtil\n         {\n             return NumericRangeQuery.newIntRange( key, from != null ? from.intValue() : 0,\n                     to != null ? to.intValue() : Integer.MAX_VALUE, includeFrom, includeTo );\n-        }\n     }\n-}\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
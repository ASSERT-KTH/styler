{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1582",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1582/ProgressTrackerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1582/ProgressTrackerImpl.java\nindex 021402445e1..76a920d56f4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1582/ProgressTrackerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1582/ProgressTrackerImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.core.replication;\n \n import java.util.Map;\n@@ -28,70 +29,70 @@ import org.neo4j.causalclustering.core.state.Result;\n \n public class ProgressTrackerImpl implements ProgressTracker\n {\n-    private final Map<LocalOperationId,Progress> tracker = new ConcurrentHashMap<>();\n-    private final GlobalSession myGlobalSession;\n+  private final Map<LocalOperationId, Progress> tracker = new ConcurrentHashMap<>();\n+  private final GlobalSession myGlobalSession;\n \n-    public ProgressTrackerImpl( GlobalSession myGlobalSession )\n-    {\n-        this.myGlobalSession = myGlobalSession;\n-    }\n+  public ProgressTrackerImpl(GlobalSession myGlobalSession)\n+  {\n+    this.myGlobalSession = myGlobalSession;\n+  }\n \n-    @Override\n-    public Progress start( DistributedOperation operation )\n-    {\n-        assert operation.globalSession().equals( myGlobalSession );\n+  @Override\n+  public Progress start(DistributedOperation operation)\n+  {\n+    assert operation.globalSession().equals(myGlobalSession);\n \n-        Progress progress = new Progress();\n-        tracker.put( operation.operationId(), progress );\n-        return progress;\n-    }\n+    Progress progress = new Progress();\n+    tracker.put(operation.operationId(), progress);\n+    return progress;\n+  }\n \n-    @Override\n-    public void trackReplication( DistributedOperation operation )\n+  @Override\n+  public void trackReplication(DistributedOperation operation)\n+  {\n+    if (!operation.globalSession().equals(myGlobalSession))\n     {\n-        if ( !operation.globalSession().equals( myGlobalSession ) )\n-        {\n-            return;\n-        }\n-\n-        Progress progress = tracker.get( operation.operationId() );\n-        if ( progress != null )\n-        {\n-            progress.setReplicated();\n-        }\n+      return;\n     }\n \n-    @Override\n-    public void trackResult( DistributedOperation operation, Result result )\n+    Progress progress = tracker.get(operation.operationId());\n+    if (progress != null)\n     {\n-        if ( !operation.globalSession().equals( myGlobalSession ) )\n-        {\n-            return;\n-        }\n-\n-        Progress progress = tracker.remove( operation.operationId() );\n-\n-        if ( progress != null )\n-        {\n-            result.apply( progress.futureResult() );\n-        }\n+      progress.setReplicated();\n     }\n+  }\n \n-    @Override\n-    public void abort( DistributedOperation operation )\n+  @Override\n+  public void trackResult(DistributedOperation operation, Result result)\n+  {\n+    if (!operation.globalSession().equals(myGlobalSession))\n     {\n-        tracker.remove( operation.operationId() );\n+      return;\n     }\n \n-    @Override\n-    public void triggerReplicationEvent()\n-    {\n-        tracker.forEach( ( ignored, progress ) -> progress.triggerReplicationEvent() );\n-    }\n+    Progress progress = tracker.remove(operation.operationId());\n \n-    @Override\n-    public int inProgressCount()\n+    if (progress != null)\n     {\n-        return tracker.size();\n+      result.apply(progress.futureResult());\n     }\n+  }\n+\n+  @Override\n+  public void abort(DistributedOperation operation)\n+  {\n+    tracker.remove(operation.operationId());\n+  }\n+\n+  @Override\n+  public void triggerReplicationEvent()\n+  {\n+    tracker.forEach((ignored, progress) -> progress.triggerReplicationEvent());\n+  }\n+\n+  @Override\n+  public int inProgressCount()\n+  {\n+    return tracker.size();\n+  }\n }\n",
            "diff_size": 75
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1582/ProgressTrackerImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1582/ProgressTrackerImpl.java\nindex 021402445e1..484b55871f9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1582/ProgressTrackerImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1582/ProgressTrackerImpl.java\n@@ -40,8 +40,7 @@ public class ProgressTrackerImpl implements ProgressTracker\n     public Progress start( DistributedOperation operation )\n     {\n         assert operation.globalSession().equals( myGlobalSession );\n-\n-        Progress progress = new Progress();\n+Progress progress = new Progress();\n         tracker.put( operation.operationId(), progress );\n         return progress;\n     }\n@@ -70,8 +69,7 @@ public class ProgressTrackerImpl implements ProgressTracker\n         }\n \n         Progress progress = tracker.remove( operation.operationId() );\n-\n-        if ( progress != null )\n+if ( progress != null )\n         {\n             result.apply( progress.futureResult() );\n         }\n@@ -94,4 +92,4 @@ public class ProgressTrackerImpl implements ProgressTracker\n     {\n         return tracker.size();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2985",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2985/StoreId.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2985/StoreId.java\nindex 5e3a44f64a9..8afd8942454 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2985/StoreId.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2985/StoreId.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.causalclustering.identity;\n \n import static java.lang.String.format;\n@@ -25,97 +26,97 @@ import java.util.Objects;\n \n public final class StoreId\n {\n-    public static final StoreId DEFAULT = new StoreId(\n-            org.neo4j.kernel.impl.store.StoreId.DEFAULT.getCreationTime(),\n-            org.neo4j.kernel.impl.store.StoreId.DEFAULT.getRandomId(),\n-            org.neo4j.kernel.impl.store.StoreId.DEFAULT.getUpgradeTime(),\n-            org.neo4j.kernel.impl.store.StoreId.DEFAULT.getUpgradeId() );\n+  public static final StoreId DEFAULT = new StoreId(\n+      org.neo4j.kernel.impl.store.StoreId.DEFAULT.getCreationTime(),\n+      org.neo4j.kernel.impl.store.StoreId.DEFAULT.getRandomId(),\n+      org.neo4j.kernel.impl.store.StoreId.DEFAULT.getUpgradeTime(),\n+      org.neo4j.kernel.impl.store.StoreId.DEFAULT.getUpgradeId());\n \n-    public static boolean isDefault( StoreId storeId )\n-    {\n-        return storeId.getCreationTime() == DEFAULT.getCreationTime() &&\n-                storeId.getRandomId() == DEFAULT.getRandomId() &&\n-                storeId.getUpgradeTime() == DEFAULT.getUpgradeTime() &&\n-                storeId.getUpgradeId() == DEFAULT.getUpgradeId();\n-    }\n+  public static boolean isDefault(StoreId storeId)\n+  {\n+    return storeId.getCreationTime() == DEFAULT.getCreationTime() &&\n+        storeId.getRandomId() == DEFAULT.getRandomId() &&\n+        storeId.getUpgradeTime() == DEFAULT.getUpgradeTime() &&\n+        storeId.getUpgradeId() == DEFAULT.getUpgradeId();\n+  }\n \n-    private long creationTime;\n-    private long randomId;\n-    private long upgradeTime;\n-    private long upgradeId;\n+  private long creationTime;\n+  private long randomId;\n+  private long upgradeTime;\n+  private long upgradeId;\n \n-    public StoreId( long creationTime, long randomId, long upgradeTime, long upgradeId )\n-    {\n-        this.creationTime = creationTime;\n-        this.randomId = randomId;\n-        this.upgradeTime = upgradeTime;\n-        this.upgradeId = upgradeId;\n-    }\n+  public StoreId(long creationTime, long randomId, long upgradeTime, long upgradeId)\n+  {\n+    this.creationTime = creationTime;\n+    this.randomId = randomId;\n+    this.upgradeTime = upgradeTime;\n+    this.upgradeId = upgradeId;\n+  }\n \n-    public long getCreationTime()\n-    {\n-        return creationTime;\n-    }\n+  public long getCreationTime()\n+  {\n+    return creationTime;\n+  }\n \n-    public long getRandomId()\n-    {\n-        return randomId;\n-    }\n+  public long getRandomId()\n+  {\n+    return randomId;\n+  }\n \n-    public long getUpgradeTime()\n-    {\n-        return upgradeTime;\n-    }\n+  public long getUpgradeTime()\n+  {\n+    return upgradeTime;\n+  }\n \n-    public long getUpgradeId()\n-    {\n-        return upgradeId;\n-    }\n+  public long getUpgradeId()\n+  {\n+    return upgradeId;\n+  }\n \n-    public boolean equalToKernelStoreId( org.neo4j.kernel.impl.store.StoreId kenelStoreId )\n+  public boolean equalToKernelStoreId(org.neo4j.kernel.impl.store.StoreId kenelStoreId)\n+  {\n+    return creationTime == kenelStoreId.getCreationTime() &&\n+        randomId == kenelStoreId.getRandomId() &&\n+        upgradeTime == kenelStoreId.getUpgradeTime() &&\n+        upgradeId == kenelStoreId.getUpgradeId();\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        return creationTime == kenelStoreId.getCreationTime() &&\n-               randomId == kenelStoreId.getRandomId() &&\n-               upgradeTime == kenelStoreId.getUpgradeTime() &&\n-               upgradeId == kenelStoreId.getUpgradeId();\n+      return true;\n     }\n-\n-    @Override\n-    public boolean equals( Object o )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-        if ( isDefault( this ) )\n-        {\n-            return false;\n-        }\n-        StoreId storeId = (StoreId) o;\n-        if ( isDefault( storeId ) )\n-        {\n-            return false;\n-        }\n-        return creationTime == storeId.creationTime &&\n-                randomId == storeId.randomId &&\n-                upgradeTime == storeId.upgradeTime &&\n-                upgradeId == storeId.upgradeId;\n+      return false;\n     }\n-\n-    @Override\n-    public int hashCode()\n+    if (isDefault(this))\n     {\n-        return Objects.hash( creationTime, randomId, upgradeTime, upgradeId );\n+      return false;\n     }\n-\n-    @Override\n-    public String toString()\n+    StoreId storeId = (StoreId) o;\n+    if (isDefault(storeId))\n     {\n-        return format( \"Store{creationTime:%d, randomId:%s, upgradeTime:%d, upgradeId:%d}\",\n-                creationTime, randomId, upgradeTime, upgradeId );\n+      return false;\n     }\n+    return creationTime == storeId.creationTime &&\n+        randomId == storeId.randomId &&\n+        upgradeTime == storeId.upgradeTime &&\n+        upgradeId == storeId.upgradeId;\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    return Objects.hash(creationTime, randomId, upgradeTime, upgradeId);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return format(\"Store{creationTime:%d, randomId:%s, upgradeTime:%d, upgradeId:%d}\",\n+        creationTime, randomId, upgradeTime, upgradeId);\n+  }\n }\n",
            "diff_size": 107
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 300).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "32",
                    "column": "71",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2985/StoreId.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2985/StoreId.java\nindex 5e3a44f64a9..df22642c02a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2985/StoreId.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2985/StoreId.java\n@@ -25,16 +25,11 @@ import java.util.Objects;\n \n public final class StoreId\n {\n-    public static final StoreId DEFAULT = new StoreId(\n-            org.neo4j.kernel.impl.store.StoreId.DEFAULT.getCreationTime(),\n-            org.neo4j.kernel.impl.store.StoreId.DEFAULT.getRandomId(),\n-            org.neo4j.kernel.impl.store.StoreId.DEFAULT.getUpgradeTime(),\n-            org.neo4j.kernel.impl.store.StoreId.DEFAULT.getUpgradeId() );\n+    public static final StoreId DEFAULT = new StoreId( org.neo4j.kernel.impl.store.StoreId.DEFAULT.getCreationTime(), org.neo4j.kernel.impl.store.StoreId.DEFAULT.getRandomId(), org.neo4j.kernel.impl.store.StoreId.DEFAULT.getUpgradeTime(), org.neo4j.kernel.impl.store.StoreId.DEFAULT.getUpgradeId() );\n \n-    public static boolean isDefault( StoreId storeId )\n+public static boolean isDefault( StoreId storeId )\n     {\n-        return storeId.getCreationTime() == DEFAULT.getCreationTime() &&\n-                storeId.getRandomId() == DEFAULT.getRandomId() &&\n+        return storeId.getCreationTime() == DEFAULT.getCreationTime() &&storeId.getRandomId() == DEFAULT.getRandomId() &&\n                 storeId.getUpgradeTime() == DEFAULT.getUpgradeTime() &&\n                 storeId.getUpgradeId() == DEFAULT.getUpgradeId();\n     }\n@@ -74,8 +69,7 @@ public final class StoreId\n \n     public boolean equalToKernelStoreId( org.neo4j.kernel.impl.store.StoreId kenelStoreId )\n     {\n-        return creationTime == kenelStoreId.getCreationTime() &&\n-               randomId == kenelStoreId.getRandomId() &&\n+        return creationTime == kenelStoreId.getCreationTime() && randomId == kenelStoreId.getRandomId() &&\n                upgradeTime == kenelStoreId.getUpgradeTime() &&\n                upgradeId == kenelStoreId.getUpgradeId();\n     }\n@@ -87,20 +81,24 @@ public final class StoreId\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n-        if ( isDefault( this ) )\n+\n+if ( isDefault( this ) )\n         {\n             return false;\n         }\n-        StoreId storeId = (StoreId) o;\n+\n+StoreId storeId = (StoreId) o;\n         if ( isDefault( storeId ) )\n         {\n             return false;\n         }\n-        return creationTime == storeId.creationTime &&\n+\n+return creationTime == storeId.creationTime &&\n                 randomId == storeId.randomId &&\n                 upgradeTime == storeId.upgradeTime &&\n                 upgradeId == storeId.upgradeId;\n@@ -118,4 +116,4 @@ public final class StoreId\n         return format( \"Store{creationTime:%d, randomId:%s, upgradeTime:%d, upgradeId:%d}\",\n                 creationTime, randomId, upgradeTime, upgradeId );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 19
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
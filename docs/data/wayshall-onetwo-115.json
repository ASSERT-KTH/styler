{
    "project_name": "wayshall-onetwo",
    "error_id": "115",
    "information": {
        "errors": [
            {
                "line": "8",
                "column": "29",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "\t\n\tpublic ToShortConvertor() {\n\t\tsuper((short)0);\n\t\tthis.longConvertor = new ToLongConvertor();\n\t}\n\t",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "8",
                    "column": "29",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/errored/1/115/ToShortConvertor.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/intellij/115/ToShortConvertor.java\nindex 3c4b6b2e6f2..1dffdb558a5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/errored/1/115/ToShortConvertor.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/wayshall-onetwo/intellij/115/ToShortConvertor.java\n@@ -2,17 +2,17 @@ package org.onetwo.common.convert;\n \n public class ToShortConvertor extends AbstractTypeConvert<Short> {\n \n-private ToLongConvertor longConvertor;\n-\t\n-\tpublic ToShortConvertor() {\n-\t\tsuper((short)0);\n-\t\tthis.longConvertor = new ToLongConvertor();\n-\t}\n-\t\n-\t@Override\n-\tpublic Short doConvert(Object value, Class<?> componentType) {\n-\t\treturn longConvertor.convert(value, componentType).shortValue();\n+  private ToLongConvertor longConvertor;\n \n-\t}\n+  public ToShortConvertor() {\n+    super((short) 0);\n+    this.longConvertor = new ToLongConvertor();\n+  }\n+\n+  @Override\n+  public Short doConvert(Object value, Class<?> componentType) {\n+    return longConvertor.convert(value, componentType).shortValue();\n+\n+  }\n \n }\n",
            "diff_size": 20
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "8",
                    "column": "29",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "8",
                    "column": "29",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
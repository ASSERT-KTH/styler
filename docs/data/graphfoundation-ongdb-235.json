{
    "project_name": "graphfoundation-ongdb",
    "error_id": "235",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "46",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "88",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "125",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "133",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/235/DijkstraPriorityQueueFibonacciImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/235/DijkstraPriorityQueueFibonacciImpl.java\nindex 71a61e3b768..ae3693698af 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/235/DijkstraPriorityQueueFibonacciImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/235/DijkstraPriorityQueueFibonacciImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.graphalgo.impl.shortestpath;\n \n import java.util.Comparator;\n@@ -28,129 +29,128 @@ import org.neo4j.graphdb.Node;\n \n /**\n  * Implementation of {@link DijkstraPriorityQueue} using a {@link FibonacciHeap}\n- * @param <CostType>\n- *            The datatype the path weights are represented by.\n+ *\n+ * @param <CostType> The datatype the path weights are represented by.\n  */\n public class DijkstraPriorityQueueFibonacciImpl<CostType> implements\n     DijkstraPriorityQueue<CostType>\n {\n-    /**\n-     * Data structure used for the internal priority heap\n-     */\n-    protected class HeapObject\n-    {\n-        private Node node;\n-        private CostType cost;\n-\n-        public HeapObject( Node node, CostType cost )\n-        {\n-            this.node = node;\n-            this.cost = cost;\n-        }\n-\n-        public CostType getCost()\n-        {\n-            return cost;\n-        }\n-\n-        public Node getNode()\n-        {\n-            return node;\n-        }\n-\n-        /*\n-         * Equals is only defined from the stored node, so we can use it to find\n-         * entries in the queue\n-         */\n-        @Override\n-        public boolean equals( Object obj )\n-        {\n-            if ( this == obj )\n-            {\n-                return true;\n-            }\n-            if ( obj == null )\n-            {\n-                return false;\n-            }\n-            if ( getClass() != obj.getClass() )\n-            {\n-                return false;\n-            }\n-            final HeapObject other = (HeapObject) obj;\n-            if ( node == null )\n-            {\n-                if ( other.node != null )\n-                {\n-                    return false;\n-                }\n-            }\n-            else if ( !node.equals( other.node ) )\n-            {\n-                return false;\n-            }\n-            return true;\n-        }\n+  /**\n+   * Data structure used for the internal priority heap\n+   */\n+  protected class HeapObject\n+  {\n+    private Node node;\n+    private CostType cost;\n \n-        @Override\n-        public int hashCode()\n-        {\n-            return node == null ? 23 : 14 ^ node.hashCode();\n-        }\n+    public HeapObject(Node node, CostType cost)\n+    {\n+      this.node = node;\n+      this.cost = cost;\n     }\n \n-    Map<Node,FibonacciHeap<HeapObject>.FibonacciHeapNode> heapNodes = new HashMap<Node,FibonacciHeap<HeapObject>.FibonacciHeapNode>();\n-    FibonacciHeap<HeapObject> heap;\n-\n-    public DijkstraPriorityQueueFibonacciImpl(\n-        final Comparator<CostType> costComparator )\n+    public CostType getCost()\n     {\n-        super();\n-        heap = new FibonacciHeap<>(\n-                (Comparator<HeapObject>) ( o1, o2 ) -> costComparator.compare( o1.getCost(), o2.getCost() ) );\n+      return cost;\n     }\n \n-    @Override\n-    public void decreaseValue( Node node, CostType newValue )\n+    public Node getNode()\n     {\n-        FibonacciHeap<HeapObject>.FibonacciHeapNode fNode = heapNodes\n-            .get( node );\n-        heap.decreaseKey( fNode, new HeapObject( node, newValue ) );\n+      return node;\n     }\n \n+    /*\n+     * Equals is only defined from the stored node, so we can use it to find\n+     * entries in the queue\n+     */\n     @Override\n-    public Node extractMin()\n+    public boolean equals(Object obj)\n     {\n-        HeapObject heapObject = heap.extractMin();\n-        if ( heapObject == null )\n+      if (this == obj)\n+      {\n+        return true;\n+      }\n+      if (obj == null)\n+      {\n+        return false;\n+      }\n+      if (getClass() != obj.getClass())\n+      {\n+        return false;\n+      }\n+      final HeapObject other = (HeapObject) obj;\n+      if (node == null)\n+      {\n+        if (other.node != null)\n         {\n-            return null;\n+          return false;\n         }\n-        return heapObject.getNode();\n+      } else if (!node.equals(other.node))\n+      {\n+        return false;\n+      }\n+      return true;\n     }\n \n     @Override\n-    public void insertValue( Node node, CostType value )\n+    public int hashCode()\n     {\n-        FibonacciHeap<HeapObject>.FibonacciHeapNode fNode = heap\n-            .insert( new HeapObject( node, value ) );\n-        heapNodes.put( node, fNode );\n+      return node == null ? 23 : 14 ^ node.hashCode();\n     }\n+  }\n \n-    @Override\n-    public boolean isEmpty()\n+  Map<Node, FibonacciHeap<HeapObject>.FibonacciHeapNode> heapNodes = new HashMap<Node, FibonacciHeap<HeapObject>.FibonacciHeapNode>();\n+  FibonacciHeap<HeapObject> heap;\n+\n+  public DijkstraPriorityQueueFibonacciImpl(\n+      final Comparator<CostType> costComparator)\n+  {\n+    super();\n+    heap = new FibonacciHeap<>(\n+        (Comparator<HeapObject>) (o1, o2) -> costComparator.compare(o1.getCost(), o2.getCost()));\n+  }\n+\n+  @Override\n+  public void decreaseValue(Node node, CostType newValue)\n+  {\n+    FibonacciHeap<HeapObject>.FibonacciHeapNode fNode = heapNodes\n+        .get(node);\n+    heap.decreaseKey(fNode, new HeapObject(node, newValue));\n+  }\n+\n+  @Override\n+  public Node extractMin()\n+  {\n+    HeapObject heapObject = heap.extractMin();\n+    if (heapObject == null)\n     {\n-        return heap.isEmpty();\n+      return null;\n     }\n+    return heapObject.getNode();\n+  }\n \n-    @Override\n-    public Node peek()\n+  @Override\n+  public void insertValue(Node node, CostType value)\n+  {\n+    FibonacciHeap<HeapObject>.FibonacciHeapNode fNode = heap\n+        .insert(new HeapObject(node, value));\n+    heapNodes.put(node, fNode);\n+  }\n+\n+  @Override\n+  public boolean isEmpty()\n+  {\n+    return heap.isEmpty();\n+  }\n+\n+  @Override\n+  public Node peek()\n+  {\n+    FibonacciHeap<HeapObject>.FibonacciHeapNode fNode = heap.getMinimum();\n+    if (fNode == null)\n     {\n-        FibonacciHeap<HeapObject>.FibonacciHeapNode fNode = heap.getMinimum();\n-        if ( fNode == null )\n-        {\n-            return null;\n-        }\n-        return fNode.getKey().getNode();\n+      return null;\n     }\n+    return fNode.getKey().getNode();\n+  }\n }\n",
            "diff_size": 164
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "35",
                    "column": "37",
                    "severity": "error",
                    "message": "'{' at column 37 should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
                },
                {
                    "line": "109",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/235/DijkstraPriorityQueueFibonacciImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/235/DijkstraPriorityQueueFibonacciImpl.java\nindex 71a61e3b768..3b3814f3e35 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/235/DijkstraPriorityQueueFibonacciImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/235/DijkstraPriorityQueueFibonacciImpl.java\n@@ -32,8 +32,7 @@ import org.neo4j.graphdb.Node;\n  *            The datatype the path weights are represented by.\n  */\n public class DijkstraPriorityQueueFibonacciImpl<CostType> implements\n-    DijkstraPriorityQueue<CostType>\n-{\n+    DijkstraPriorityQueue<CostType> {\n     /**\n      * Data structure used for the internal priority heap\n      */\n@@ -69,11 +68,13 @@ public class DijkstraPriorityQueueFibonacciImpl<CostType> implements\n             {\n                 return true;\n             }\n-            if ( obj == null )\n+\n+if ( obj == null )\n             {\n                 return false;\n             }\n-            if ( getClass() != obj.getClass() )\n+\n+if ( getClass() != obj.getClass() )\n             {\n                 return false;\n             }\n@@ -102,20 +103,17 @@ public class DijkstraPriorityQueueFibonacciImpl<CostType> implements\n     Map<Node,FibonacciHeap<HeapObject>.FibonacciHeapNode> heapNodes = new HashMap<Node,FibonacciHeap<HeapObject>.FibonacciHeapNode>();\n     FibonacciHeap<HeapObject> heap;\n \n-    public DijkstraPriorityQueueFibonacciImpl(\n-        final Comparator<CostType> costComparator )\n-    {\n+    public DijkstraPriorityQueueFibonacciImpl( final Comparator<CostType> costComparator )\n+{\n         super();\n-        heap = new FibonacciHeap<>(\n-                (Comparator<HeapObject>) ( o1, o2 ) -> costComparator.compare( o1.getCost(), o2.getCost() ) );\n+        heap = new FibonacciHeap<>((Comparator<HeapObject>) ( o1, o2 ) -> costComparator.compare( o1.getCost(), o2.getCost() ) );\n     }\n \n     @Override\n     public void decreaseValue( Node node, CostType newValue )\n     {\n-        FibonacciHeap<HeapObject>.FibonacciHeapNode fNode = heapNodes\n-            .get( node );\n-        heap.decreaseKey( fNode, new HeapObject( node, newValue ) );\n+        FibonacciHeap<HeapObject>.FibonacciHeapNode fNode = heapNodes.get( node );\n+heap.decreaseKey( fNode, new HeapObject( node, newValue ) );\n     }\n \n     @Override\n@@ -126,15 +124,15 @@ public class DijkstraPriorityQueueFibonacciImpl<CostType> implements\n         {\n             return null;\n         }\n-        return heapObject.getNode();\n+\n+return heapObject.getNode();\n     }\n \n     @Override\n     public void insertValue( Node node, CostType value )\n     {\n-        FibonacciHeap<HeapObject>.FibonacciHeapNode fNode = heap\n-            .insert( new HeapObject( node, value ) );\n-        heapNodes.put( node, fNode );\n+        FibonacciHeap<HeapObject>.FibonacciHeapNode fNode = heap.insert( new HeapObject( node, value ) );\n+heapNodes.put( node, fNode );\n     }\n \n     @Override\n@@ -151,6 +149,7 @@ public class DijkstraPriorityQueueFibonacciImpl<CostType> implements\n         {\n             return null;\n         }\n-        return fNode.getKey().getNode();\n+\n+return fNode.getKey().getNode();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 22
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
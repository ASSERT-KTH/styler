{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1078",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "69",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "80",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "82",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1078/PluginMethod.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1078/PluginMethod.java\nindex fc2f1097bf3..f495c2f1d55 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1078/PluginMethod.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1078/PluginMethod.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.plugins;\n \n import java.lang.reflect.InvocationTargetException;\n@@ -29,68 +30,66 @@ import org.neo4j.server.rest.repr.Representation;\n \n class PluginMethod extends PluginPoint\n {\n-    private final ServerPlugin plugin;\n-    private final Method method;\n-    private final DataExtractor[] extractors;\n-    private final ResultConverter result;\n+  private final ServerPlugin plugin;\n+  private final Method method;\n+  private final DataExtractor[] extractors;\n+  private final ResultConverter result;\n+\n+  PluginMethod(String name, Class<?> discovery, ServerPlugin plugin, ResultConverter result, Method method,\n+               DataExtractor[] extractors, Description description)\n+  {\n+    super(discovery, name, description == null ? \"\" : description.value());\n+    this.plugin = plugin;\n+    this.result = result;\n+    this.method = method;\n+    this.extractors = extractors;\n+  }\n \n-    PluginMethod( String name, Class<?> discovery, ServerPlugin plugin, ResultConverter result, Method method,\n-            DataExtractor[] extractors, Description description )\n+  @Override\n+  public Representation invoke(GraphDatabaseAPI graphDb, Object source, ParameterList params)\n+      throws BadPluginInvocationException, PluginInvocationFailureException, BadInputException\n+  {\n+    Object[] arguments = new Object[extractors.length];\n+    try (Transaction tx = graphDb.beginTx())\n     {\n-        super( discovery, name, description == null ? \"\" : description.value() );\n-        this.plugin = plugin;\n-        this.result = result;\n-        this.method = method;\n-        this.extractors = extractors;\n+      for (int i = 0; i < arguments.length; i++)\n+      {\n+        arguments[i] = extractors[i].extract(graphDb, source, params);\n+      }\n     }\n-\n-    @Override\n-    public Representation invoke( GraphDatabaseAPI graphDb, Object source, ParameterList params )\n-            throws BadPluginInvocationException, PluginInvocationFailureException, BadInputException\n+    try\n     {\n-        Object[] arguments = new Object[extractors.length];\n-        try ( Transaction tx = graphDb.beginTx() )\n-        {\n-            for ( int i = 0; i < arguments.length; i++ )\n-            {\n-                arguments[i] = extractors[i].extract( graphDb, source, params );\n-            }\n-        }\n-        try\n-        {\n-            Object returned = method.invoke( plugin, arguments );\n+      Object returned = method.invoke(plugin, arguments);\n \n-            if ( returned == null )\n-            {\n-                return Representation.emptyRepresentation();\n-            }\n-            return result.convert( returned );\n-        }\n-        catch ( InvocationTargetException exc )\n-        {\n-            Throwable targetExc = exc.getTargetException();\n-            for ( Class<?> excType : method.getExceptionTypes() )\n-            {\n-                if ( excType.isInstance( targetExc ) )\n-                {\n-                    throw new BadPluginInvocationException( targetExc );\n-                }\n-            }\n-            throw new PluginInvocationFailureException( targetExc );\n-        }\n-        catch ( IllegalArgumentException | IllegalAccessException e )\n+      if (returned == null)\n+      {\n+        return Representation.emptyRepresentation();\n+      }\n+      return result.convert(returned);\n+    } catch (InvocationTargetException exc)\n+    {\n+      Throwable targetExc = exc.getTargetException();\n+      for (Class<?> excType : method.getExceptionTypes())\n+      {\n+        if (excType.isInstance(targetExc))\n         {\n-            throw new PluginInvocationFailureException( e );\n+          throw new BadPluginInvocationException(targetExc);\n         }\n+      }\n+      throw new PluginInvocationFailureException(targetExc);\n+    } catch (IllegalArgumentException | IllegalAccessException e)\n+    {\n+      throw new PluginInvocationFailureException(e);\n     }\n+  }\n \n-    @Override\n-    protected void describeParameters( ParameterDescriptionConsumer consumer )\n+  @Override\n+  protected void describeParameters(ParameterDescriptionConsumer consumer)\n+  {\n+    for (DataExtractor extractor : extractors)\n     {\n-        for ( DataExtractor extractor : extractors )\n-        {\n-            extractor.describe( consumer );\n-        }\n+      extractor.describe(consumer);\n     }\n+  }\n \n }\n",
            "diff_size": 76
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 186).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1078/PluginMethod.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1078/PluginMethod.java\nindex fc2f1097bf3..50f3b483a4c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1078/PluginMethod.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1078/PluginMethod.java\n@@ -45,9 +45,8 @@ class PluginMethod extends PluginPoint\n     }\n \n     @Override\n-    public Representation invoke( GraphDatabaseAPI graphDb, Object source, ParameterList params )\n-            throws BadPluginInvocationException, PluginInvocationFailureException, BadInputException\n-    {\n+    public Representation invoke( GraphDatabaseAPI graphDb, Object source, ParameterList params ) throws BadPluginInvocationException, PluginInvocationFailureException, BadInputException\n+{\n         Object[] arguments = new Object[extractors.length];\n         try ( Transaction tx = graphDb.beginTx() )\n         {\n@@ -59,12 +58,12 @@ class PluginMethod extends PluginPoint\n         try\n         {\n             Object returned = method.invoke( plugin, arguments );\n-\n-            if ( returned == null )\n+if ( returned == null )\n             {\n                 return Representation.emptyRepresentation();\n             }\n-            return result.convert( returned );\n+\n+return result.convert( returned );\n         }\n         catch ( InvocationTargetException exc )\n         {\n@@ -92,5 +91,4 @@ class PluginMethod extends PluginPoint\n             extractor.describe( consumer );\n         }\n     }\n-\n-}\n+    }\n\\ No newline at end of file\n",
            "diff_size": 9
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1871",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "64",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "80",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1871/PageCacheWarmerKernelExtensionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1871/PageCacheWarmerKernelExtensionFactory.java\nindex 9572a219a71..16f7a071973 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1871/PageCacheWarmerKernelExtensionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1871/PageCacheWarmerKernelExtensionFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.pagecache;\n \n import java.util.function.Supplier;\n@@ -35,47 +36,47 @@ import org.neo4j.kernel.monitoring.Monitors;\n import org.neo4j.logging.Log;\n import org.neo4j.scheduler.JobScheduler;\n \n-@Service.Implementation( KernelExtensionFactory.class )\n+@Service.Implementation(KernelExtensionFactory.class)\n public class PageCacheWarmerKernelExtensionFactory\n-        extends KernelExtensionFactory<PageCacheWarmerKernelExtensionFactory.Dependencies>\n+    extends KernelExtensionFactory<PageCacheWarmerKernelExtensionFactory.Dependencies>\n {\n-    public interface Dependencies\n-    {\n-        JobScheduler jobScheduler();\n+  public interface Dependencies\n+  {\n+    JobScheduler jobScheduler();\n \n-        AvailabilityGuard availabilityGuard();\n+    AvailabilityGuard availabilityGuard();\n \n-        PageCache pageCache();\n+    PageCache pageCache();\n \n-        FileSystemAbstraction fileSystemAbstraction();\n+    FileSystemAbstraction fileSystemAbstraction();\n \n-        NeoStoreFileListing fileListing();\n+    NeoStoreFileListing fileListing();\n \n-        LogService logService();\n+    LogService logService();\n \n-        Monitors monitors();\n+    Monitors monitors();\n \n-        Config config();\n-    }\n+    Config config();\n+  }\n \n-    public PageCacheWarmerKernelExtensionFactory()\n-    {\n-        super( \"pagecachewarmer\" );\n-    }\n+  public PageCacheWarmerKernelExtensionFactory()\n+  {\n+    super(\"pagecachewarmer\");\n+  }\n \n-    @Override\n-    public Lifecycle newInstance( KernelContext context, Dependencies deps )\n-    {\n-        JobScheduler scheduler = deps.jobScheduler();\n-        AvailabilityGuard availabilityGuard = deps.availabilityGuard();\n-        PageCache pageCache = deps.pageCache();\n-        FileSystemAbstraction fs = deps.fileSystemAbstraction();\n-        Supplier<NeoStoreFileListing> fileListing = deps::fileListing;\n-        LogService logService = deps.logService();\n-        Log log = logService.getInternalLog( PageCacheWarmer.class );\n-        PageCacheWarmerMonitor monitor = deps.monitors().newMonitor( PageCacheWarmerMonitor.class );\n-        Config config = deps.config();\n-        return new PageCacheWarmerKernelExtension(\n-                scheduler, availabilityGuard, pageCache, fs, fileListing, log, monitor, config );\n-    }\n+  @Override\n+  public Lifecycle newInstance(KernelContext context, Dependencies deps)\n+  {\n+    JobScheduler scheduler = deps.jobScheduler();\n+    AvailabilityGuard availabilityGuard = deps.availabilityGuard();\n+    PageCache pageCache = deps.pageCache();\n+    FileSystemAbstraction fs = deps.fileSystemAbstraction();\n+    Supplier<NeoStoreFileListing> fileListing = deps::fileListing;\n+    LogService logService = deps.logService();\n+    Log log = logService.getInternalLog(PageCacheWarmer.class);\n+    PageCacheWarmerMonitor monitor = deps.monitors().newMonitor(PageCacheWarmerMonitor.class);\n+    Config config = deps.config();\n+    return new PageCacheWarmerKernelExtension(\n+        scheduler, availabilityGuard, pageCache, fs, fileListing, log, monitor, config);\n+  }\n }\n",
            "diff_size": 33
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1871/PageCacheWarmerKernelExtensionFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1871/PageCacheWarmerKernelExtensionFactory.java\nindex 9572a219a71..0255001fb76 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1871/PageCacheWarmerKernelExtensionFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1871/PageCacheWarmerKernelExtensionFactory.java\n@@ -36,8 +36,7 @@ import org.neo4j.logging.Log;\n import org.neo4j.scheduler.JobScheduler;\n \n @Service.Implementation( KernelExtensionFactory.class )\n-public class PageCacheWarmerKernelExtensionFactory\n-        extends KernelExtensionFactory<PageCacheWarmerKernelExtensionFactory.Dependencies>\n+public class PageCacheWarmerKernelExtensionFactory extends KernelExtensionFactory<PageCacheWarmerKernelExtensionFactory.Dependencies>\n {\n     public interface Dependencies\n     {\n@@ -75,7 +74,6 @@ public class PageCacheWarmerKernelExtensionFactory\n         Log log = logService.getInternalLog( PageCacheWarmer.class );\n         PageCacheWarmerMonitor monitor = deps.monitors().newMonitor( PageCacheWarmerMonitor.class );\n         Config config = deps.config();\n-        return new PageCacheWarmerKernelExtension(\n-                scheduler, availabilityGuard, pageCache, fs, fileListing, log, monitor, config );\n+        return new PageCacheWarmerKernelExtension( scheduler, availabilityGuard, pageCache, fs, fileListing, log, monitor, config );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
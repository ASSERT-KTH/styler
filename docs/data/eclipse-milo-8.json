{
    "project_name": "eclipse-milo",
    "error_id": "8",
    "information": {
        "errors": [
            {
                "line": "39",
                "column": "29",
                "severity": "error",
                "message": "'}' at column 29 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "public class BrowseHelper {\n\n    private BrowseHelper() {}\n\n    public static CompletableFuture<List<ReferenceDescription>> browse(\n        OpcUaClient client,",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "39",
                    "column": "29",
                    "severity": "error",
                    "message": "'}' at column 29 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/8/BrowseHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/8/BrowseHelper.java\nindex 0bf00a74693..eda7d25fef6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/8/BrowseHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/intellij/8/BrowseHelper.java\n@@ -36,7 +36,8 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n  */\n public class BrowseHelper {\n \n-    private BrowseHelper() {}\n+    private BrowseHelper() {\n+    }\n \n     public static CompletableFuture<List<ReferenceDescription>> browse(\n         OpcUaClient client,\n@@ -66,7 +67,7 @@ public class BrowseHelper {\n                 uint(0)\n             ),\n             uint(0),\n-            new BrowseDescription[]{browseDescription}\n+            new BrowseDescription[] {browseDescription}\n         );\n \n         return client.sendRequest(browseRequest).thenApply(BrowseResponse.class::cast).thenCompose(response -> {\n@@ -114,7 +115,7 @@ public class BrowseHelper {\n                 client.getConfig().getRequestTimeout()\n             ),\n             false,\n-            new ByteString[]{continuationPoint}\n+            new ByteString[] {continuationPoint}\n         );\n \n         return client.sendRequest(browseNextRequest).thenApply(BrowseNextResponse.class::cast).thenCompose(response -> {\n",
            "diff_size": 4
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "39",
                    "column": "29",
                    "severity": "error",
                    "message": "'}' at column 29 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/8/BrowseHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/8/BrowseHelper.java\nindex 0bf00a74693..6e7af9f7574 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/8/BrowseHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/naturalize/8/BrowseHelper.java\n@@ -124,4 +124,4 @@ public class BrowseHelper {\n         });\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 129).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 153).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "57",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 140).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "59",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 8, expected level should be 48.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "96",
                    "severity": "error",
                    "message": "'block rcurly' has incorrect indentation level 8, expected level should be 52.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/8/BrowseHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/8/BrowseHelper.java\nindex 0bf00a74693..781ac4ba497 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/8/BrowseHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/codebuff/8/BrowseHelper.java\n@@ -14,7 +14,6 @@ import java.util.ArrayList;\n import java.util.Collections;\n import java.util.List;\n import java.util.concurrent.CompletableFuture;\n-\n import org.eclipse.milo.opcua.stack.client.UaStackClient;\n import org.eclipse.milo.opcua.stack.core.types.builtin.ByteString;\n import org.eclipse.milo.opcua.stack.core.types.builtin.DateTime;\n@@ -34,58 +33,37 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n  * \"Helper\" functions for doing a Browse followed by as many BrowseNext calls as are necessary\n  * to retrieve all the references.\n  */\n-public class BrowseHelper {\n \n-    private BrowseHelper() {}\n-\n-    public static CompletableFuture<List<ReferenceDescription>> browse(\n-        OpcUaClient client,\n-        BrowseDescription browseDescription\n-    ) {\n+public class BrowseHelper {\n \n-        return client.getSession().thenCompose(\n-            session ->\n-                browse(client.getStackClient(), session, browseDescription)\n-        );\n+    private BrowseHelper() {\n     }\n \n-    public static CompletableFuture<List<ReferenceDescription>> browse(\n-        UaStackClient client,\n-        OpcUaSession session,\n-        BrowseDescription browseDescription\n-    ) {\n+    public static CompletableFuture<List<ReferenceDescription>> browse(OpcUaClient client, BrowseDescription browseDescription) {\n+        return client.getSession().thenCompose(session -> browse(client.getStackClient(), session, browseDescription));\n+    }\n \n+    public static CompletableFuture<List<ReferenceDescription>> browse(UaStackClient client, OpcUaSession session, BrowseDescription browseDescription) {\n         BrowseRequest browseRequest = new BrowseRequest(\n-            client.newRequestHeader(\n-                session.getAuthenticationToken(),\n-                client.getConfig().getRequestTimeout()\n-            ),\n-            new ViewDescription(\n-                NodeId.NULL_VALUE,\n-                DateTime.MIN_VALUE,\n-                uint(0)\n-            ),\n+            client.newRequestHeader(session.getAuthenticationToken(), client.getConfig().getRequestTimeout()),\n+            new ViewDescription(NodeId.NULL_VALUE, DateTime.MIN_VALUE, uint(0)),\n             uint(0),\n             new BrowseDescription[]{browseDescription}\n         );\n+        return client.sendRequest(browseRequest).thenApply(BrowseResponse.class::cast)\n+                                                .thenCompose(response -> {\n+                                                    BrowseResult result = response.getResults()[0];\n \n-        return client.sendRequest(browseRequest).thenApply(BrowseResponse.class::cast).thenCompose(response -> {\n-            BrowseResult result = response.getResults()[0];\n-\n-            List<ReferenceDescription> references =\n-                Collections.synchronizedList(new ArrayList<>());\n-\n-            return maybeBrowseNext(client, session, references, result);\n+                                                    List<ReferenceDescription> references = Collections.synchronizedList(new ArrayList<>());\n+                                                    return maybeBrowseNext(client, session, references, result);\n         });\n     }\n \n     private static CompletableFuture<List<ReferenceDescription>> maybeBrowseNext(\n         UaStackClient client,\n         OpcUaSession session,\n-        List<ReferenceDescription> references,\n-        BrowseResult result\n+        List<ReferenceDescription> references, BrowseResult result\n     ) {\n-\n         if (result.getStatusCode().isGood()) {\n             Collections.addAll(references, result.getReferences());\n \n@@ -104,24 +82,18 @@ public class BrowseHelper {\n     private static CompletableFuture<List<ReferenceDescription>> browseNext(\n         UaStackClient client,\n         OpcUaSession session,\n-        ByteString continuationPoint,\n-        List<ReferenceDescription> references\n+        ByteString continuationPoint, List<ReferenceDescription> references\n     ) {\n-\n         BrowseNextRequest browseNextRequest = new BrowseNextRequest(\n-            client.newRequestHeader(\n-                session.getAuthenticationToken(),\n-                client.getConfig().getRequestTimeout()\n-            ),\n+            client.newRequestHeader(session.getAuthenticationToken(), client.getConfig().getRequestTimeout()),\n             false,\n             new ByteString[]{continuationPoint}\n         );\n-\n-        return client.sendRequest(browseNextRequest).thenApply(BrowseNextResponse.class::cast).thenCompose(response -> {\n-            BrowseResult result = response.getResults()[0];\n-\n-            return maybeBrowseNext(client, session, references, result);\n+        return client.sendRequest(browseNextRequest).thenApply(BrowseNextResponse.class::cast)\n+                                                    .thenCompose(response -> {\n+                                                        BrowseResult result = response.getResults()[0];\n+                                                        return maybeBrowseNext(client, session, references, result);\n         });\n     }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 53
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "39",
                    "column": "29",
                    "severity": "error",
                    "message": "'}' at column 29 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "41",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "41",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/8/BrowseHelper.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/8/BrowseHelper.java\nindex 0bf00a74693..1dcb117495a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/errored/1/8/BrowseHelper.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/eclipse-milo/styler_three_grams/8/BrowseHelper.java\n@@ -36,9 +36,9 @@ import static org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.Unsigned.\n  */\n public class BrowseHelper {\n \n-    private BrowseHelper() {}\n+    private BrowseHelper() {\n \n-    public static CompletableFuture<List<ReferenceDescription>> browse(\n+    } public static CompletableFuture<List<ReferenceDescription>> browse(\n         OpcUaClient client,\n         BrowseDescription browseDescription\n     ) {\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4434",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "116",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "127",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "146",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "67",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "173",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "173",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "227",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "229",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "265",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "278",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "63",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "296",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "302",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "320",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "331",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "333",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "340",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "344",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "386",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "386",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "388",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "393",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "393",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "399",
                    "column": "62",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "406",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "414",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "424",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "425",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "431",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "439",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "446",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "447",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "454",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "455",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "462",
                    "column": "54",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "482",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "488",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "488",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "490",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "490",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "492",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "528",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "528",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "535",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "547",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "547",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "553",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "559",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "559",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "562",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "562",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "566",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "568",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "573",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "582",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "582",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "584",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "587",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "593",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "593",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "597",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "608",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "617",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "622",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "622",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "624",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "626",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "630",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "642",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "642",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "648",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "648",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "656",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "656",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "659",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "659",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "680",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "682",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "682",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "686",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "686",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "692",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4434/StorageLayer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4434/StorageLayer.java\nindex fb3b25bb8cd..af8f28bda87 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4434/StorageLayer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4434/StorageLayer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.store;\n \n import java.util.Iterator;\n@@ -98,607 +99,601 @@ import static org.neo4j.register.Registers.newDoubleLongRegister;\n  */\n public class StorageLayer implements StoreReadLayer\n {\n-    // These token holders should perhaps move to the cache layer.. not really any reason to have them here?\n-    private final PropertyKeyTokenHolder propertyKeyTokenHolder;\n-    private final LabelTokenHolder labelTokenHolder;\n-    private final RelationshipTypeTokenHolder relationshipTokenHolder;\n-    private final IndexingService indexService;\n-    private final NodeStore nodeStore;\n-    private final RelationshipStore relationshipStore;\n-    private final RecordStore<RelationshipGroupRecord> relationshipGroupStore;\n-    private final SchemaStorage schemaStorage;\n-    private final CountsTracker counts;\n-    private final PropertyLoader propertyLoader;\n-    private final Supplier<StorageStatement> statementProvider;\n-    private final SchemaCache schemaCache;\n-\n-    public StorageLayer( PropertyKeyTokenHolder propertyKeyTokenHolder, LabelTokenHolder labelTokenHolder,\n-            RelationshipTypeTokenHolder relationshipTokenHolder, SchemaStorage schemaStorage, NeoStores neoStores,\n-            IndexingService indexService, Supplier<StorageStatement> storeStatementSupplier, SchemaCache schemaCache )\n-    {\n-        this.relationshipTokenHolder = relationshipTokenHolder;\n-        this.schemaStorage = schemaStorage;\n-        this.indexService = indexService;\n-        this.propertyKeyTokenHolder = propertyKeyTokenHolder;\n-        this.labelTokenHolder = labelTokenHolder;\n-        this.statementProvider = storeStatementSupplier;\n-        this.nodeStore = neoStores.getNodeStore();\n-        this.relationshipStore = neoStores.getRelationshipStore();\n-        this.relationshipGroupStore = neoStores.getRelationshipGroupStore();\n-        this.counts = neoStores.getCounts();\n-        this.propertyLoader = new PropertyLoader( neoStores );\n-        this.schemaCache = schemaCache;\n-    }\n-\n-    @Override\n-    public StorageStatement newStatement()\n-    {\n-        return statementProvider.get();\n-    }\n-\n-    @Override\n-    public int labelGetOrCreateForName( String label ) throws TooManyLabelsException\n-    {\n-        try\n-        {\n-            return labelTokenHolder.getOrCreateId( label );\n-        }\n-        catch ( TransactionFailureException e )\n-        {\n-            // Temporary workaround for the property store based label\n-            // implementation. Actual\n-            // implementation should not depend on internal kernel exception\n-            // messages like this.\n-            if ( e.getCause() instanceof UnderlyingStorageException &&\n-                    e.getCause().getMessage().equals( \"Id capacity exceeded\" ) )\n-            {\n-                throw new TooManyLabelsException( e );\n-            }\n-            throw e;\n-        }\n-    }\n-\n-    @Override\n-    public int labelGetForName( String label )\n-    {\n-        return labelTokenHolder.getIdByName( label );\n-    }\n-\n-    @Override\n-    public String labelGetName( int labelId ) throws LabelNotFoundKernelException\n-    {\n-        try\n-        {\n-            return labelTokenHolder.getTokenById( labelId ).name();\n-        }\n-        catch ( TokenNotFoundException e )\n-        {\n-            throw new LabelNotFoundKernelException( \"Label by id \" + labelId, e );\n-        }\n-    }\n-\n-    @Override\n-    public PrimitiveLongResourceIterator nodesGetForLabel( StorageStatement statement, int labelId )\n-    {\n-        return statement.getLabelScanReader().nodesWithLabel( labelId );\n-    }\n-\n-    @Override\n-    public SchemaIndexDescriptor indexGetForSchema( SchemaDescriptor descriptor )\n-    {\n-        return schemaCache.indexDescriptor( descriptor );\n-    }\n-\n-    @Override\n-    public Iterator<SchemaIndexDescriptor> indexesGetForLabel( int labelId )\n-    {\n-        return schemaCache.indexDescriptorsForLabel( labelId );\n-    }\n-\n-    @Override\n-    public Iterator<SchemaIndexDescriptor> indexesGetAll()\n-    {\n-        return toIndexDescriptors( schemaCache.indexRules() );\n-    }\n-\n-    @Override\n-    public Iterator<SchemaIndexDescriptor> indexesGetRelatedToProperty( int propertyId )\n-    {\n-        return schemaCache.indexesByProperty( propertyId );\n-    }\n-\n-    @Override\n-    public Long indexGetOwningUniquenessConstraintId( SchemaIndexDescriptor index )\n-    {\n-        IndexRule rule = indexRule( index );\n-        if ( rule != null )\n-        {\n-            // Think of the index as being orphaned if the owning constraint is missing or broken.\n-            Long owningConstraint = rule.getOwningConstraint();\n-            return schemaCache.hasConstraintRule( owningConstraint ) ? owningConstraint : null;\n-        }\n-        return null;\n-    }\n-\n-    @Override\n-    public long indexGetCommittedId( SchemaIndexDescriptor index )\n-            throws SchemaRuleNotFoundException\n-    {\n-        IndexRule rule = indexRule( index );\n-        if ( rule == null )\n-        {\n-            throw new SchemaRuleNotFoundException( SchemaRule.Kind.INDEX_RULE, index.schema() );\n-        }\n-        return rule.getId();\n-    }\n-\n-    @Override\n-    public InternalIndexState indexGetState( SchemaIndexDescriptor descriptor ) throws IndexNotFoundKernelException\n-    {\n-        return indexService.getIndexProxy( descriptor.schema() ).getState();\n-    }\n-\n-    @Override\n-    public IndexProvider.Descriptor indexGetProviderDescriptor( SchemaIndexDescriptor descriptor ) throws IndexNotFoundKernelException\n-    {\n-        return indexService.getIndexProxy( descriptor.schema() ).getProviderDescriptor();\n-    }\n-\n-    public CapableIndexReference indexReference( SchemaIndexDescriptor descriptor ) throws IndexNotFoundKernelException\n-    {\n-        boolean unique = descriptor.type() == SchemaIndexDescriptor.Type.UNIQUE;\n-        SchemaDescriptor schema = descriptor.schema();\n-        IndexProxy indexProxy = indexService.getIndexProxy( schema );\n-\n-        return new DefaultCapableIndexReference( unique, indexProxy.getIndexCapability(),\n-                indexProxy.getProviderDescriptor(), schema.keyId(),\n-                schema.getPropertyIds() );\n-    }\n-\n-    @Override\n-    public PopulationProgress indexGetPopulationProgress( SchemaDescriptor descriptor )\n-            throws IndexNotFoundKernelException\n-    {\n-        return indexService.getIndexProxy( descriptor ).getIndexPopulationProgress();\n-    }\n-\n-    @Override\n-    public long indexSize( SchemaDescriptor descriptor ) throws IndexNotFoundKernelException\n-    {\n-        Register.DoubleLongRegister result = indexService.indexUpdatesAndSize( descriptor );\n-        return result.readSecond();\n-    }\n-\n-    @Override\n-    public double indexUniqueValuesPercentage( SchemaDescriptor descriptor ) throws IndexNotFoundKernelException\n-    {\n-        return indexService.indexUniqueValuesPercentage( descriptor );\n-    }\n-\n-    @Override\n-    public String indexGetFailure( SchemaDescriptor descriptor ) throws IndexNotFoundKernelException\n-    {\n-        return indexService.getIndexProxy( descriptor ).getPopulationFailure().asString();\n-    }\n-\n-    @Override\n-    public Iterator<ConstraintDescriptor> constraintsGetForSchema( SchemaDescriptor descriptor )\n-    {\n-        return schemaCache.constraintsForSchema( descriptor );\n-    }\n-\n-    @Override\n-    public boolean constraintExists( ConstraintDescriptor descriptor )\n-    {\n-        return schemaCache.hasConstraintRule( descriptor );\n-    }\n-\n-    @Override\n-    public Iterator<ConstraintDescriptor> constraintsGetForLabel( int labelId )\n-    {\n-        return schemaCache.constraintsForLabel( labelId );\n-    }\n-\n-    @Override\n-    public Iterator<ConstraintDescriptor> constraintsGetForRelationshipType( int typeId )\n-    {\n-        return schemaCache.constraintsForRelationshipType( typeId );\n-    }\n-\n-    @Override\n-    public Iterator<ConstraintDescriptor> constraintsGetAll()\n-    {\n-        return schemaCache.constraints();\n-    }\n-\n-    @Override\n-    public int propertyKeyGetOrCreateForName( String propertyKey )\n-    {\n-        return propertyKeyTokenHolder.getOrCreateId( propertyKey );\n-    }\n-\n-    @Override\n-    public int propertyKeyGetForName( String propertyKey )\n-    {\n-        return propertyKeyTokenHolder.getIdByName( propertyKey );\n-    }\n-\n-    @Override\n-    public String propertyKeyGetName( int propertyKeyId ) throws PropertyKeyIdNotFoundKernelException\n-    {\n-        try\n-        {\n-            return propertyKeyTokenHolder.getTokenById( propertyKeyId ).name();\n-        }\n-        catch ( TokenNotFoundException e )\n-        {\n-            throw new PropertyKeyIdNotFoundKernelException( propertyKeyId, e );\n-        }\n-    }\n-\n-    @Override\n-    public PrimitiveIntIterator graphGetPropertyKeys()\n-    {\n-        return new PropertyKeyIdIterator( propertyLoader.graphLoadProperties( new IteratingPropertyReceiver<>() ) );\n-    }\n-\n-    @Override\n-    public Object graphGetProperty( int propertyKeyId )\n-    {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public Iterator<StorageProperty> graphGetAllProperties()\n-    {\n-        return propertyLoader.graphLoadProperties( new IteratingPropertyReceiver<>() );\n-    }\n-\n-    @Override\n-    public Iterator<Token> propertyKeyGetAllTokens()\n-    {\n-        return propertyKeyTokenHolder.getAllTokens().iterator();\n-    }\n-\n-    @Override\n-    public Iterator<Token> labelsGetAllTokens()\n-    {\n-        return labelTokenHolder.getAllTokens().iterator();\n-    }\n-\n-    @SuppressWarnings( \"unchecked\" )\n-    @Override\n-    public Iterator<Token> relationshipTypeGetAllTokens()\n-    {\n-        return (Iterator) relationshipTokenHolder.getAllTokens().iterator();\n-    }\n-\n-    @Override\n-    public int relationshipTypeGetForName( String relationshipTypeName )\n-    {\n-        return relationshipTokenHolder.getIdByName( relationshipTypeName );\n-    }\n-\n-    @Override\n-    public String relationshipTypeGetName( int relationshipTypeId ) throws RelationshipTypeIdNotFoundKernelException\n-    {\n-        try\n-        {\n-            return relationshipTokenHolder.getTokenById( relationshipTypeId ).name();\n-        }\n-        catch ( TokenNotFoundException e )\n+  // These token holders should perhaps move to the cache layer.. not really any reason to have them here?\n+  private final PropertyKeyTokenHolder propertyKeyTokenHolder;\n+  private final LabelTokenHolder labelTokenHolder;\n+  private final RelationshipTypeTokenHolder relationshipTokenHolder;\n+  private final IndexingService indexService;\n+  private final NodeStore nodeStore;\n+  private final RelationshipStore relationshipStore;\n+  private final RecordStore<RelationshipGroupRecord> relationshipGroupStore;\n+  private final SchemaStorage schemaStorage;\n+  private final CountsTracker counts;\n+  private final PropertyLoader propertyLoader;\n+  private final Supplier<StorageStatement> statementProvider;\n+  private final SchemaCache schemaCache;\n+\n+  public StorageLayer(PropertyKeyTokenHolder propertyKeyTokenHolder, LabelTokenHolder labelTokenHolder,\n+                      RelationshipTypeTokenHolder relationshipTokenHolder, SchemaStorage schemaStorage, NeoStores neoStores,\n+                      IndexingService indexService, Supplier<StorageStatement> storeStatementSupplier, SchemaCache schemaCache)\n+  {\n+    this.relationshipTokenHolder = relationshipTokenHolder;\n+    this.schemaStorage = schemaStorage;\n+    this.indexService = indexService;\n+    this.propertyKeyTokenHolder = propertyKeyTokenHolder;\n+    this.labelTokenHolder = labelTokenHolder;\n+    this.statementProvider = storeStatementSupplier;\n+    this.nodeStore = neoStores.getNodeStore();\n+    this.relationshipStore = neoStores.getRelationshipStore();\n+    this.relationshipGroupStore = neoStores.getRelationshipGroupStore();\n+    this.counts = neoStores.getCounts();\n+    this.propertyLoader = new PropertyLoader(neoStores);\n+    this.schemaCache = schemaCache;\n+  }\n+\n+  @Override\n+  public StorageStatement newStatement()\n+  {\n+    return statementProvider.get();\n+  }\n+\n+  @Override\n+  public int labelGetOrCreateForName(String label) throws TooManyLabelsException\n+  {\n+    try\n+    {\n+      return labelTokenHolder.getOrCreateId(label);\n+    } catch (TransactionFailureException e)\n+    {\n+      // Temporary workaround for the property store based label\n+      // implementation. Actual\n+      // implementation should not depend on internal kernel exception\n+      // messages like this.\n+      if (e.getCause() instanceof UnderlyingStorageException &&\n+          e.getCause().getMessage().equals(\"Id capacity exceeded\"))\n+      {\n+        throw new TooManyLabelsException(e);\n+      }\n+      throw e;\n+    }\n+  }\n+\n+  @Override\n+  public int labelGetForName(String label)\n+  {\n+    return labelTokenHolder.getIdByName(label);\n+  }\n+\n+  @Override\n+  public String labelGetName(int labelId) throws LabelNotFoundKernelException\n+  {\n+    try\n+    {\n+      return labelTokenHolder.getTokenById(labelId).name();\n+    } catch (TokenNotFoundException e)\n+    {\n+      throw new LabelNotFoundKernelException(\"Label by id \" + labelId, e);\n+    }\n+  }\n+\n+  @Override\n+  public PrimitiveLongResourceIterator nodesGetForLabel(StorageStatement statement, int labelId)\n+  {\n+    return statement.getLabelScanReader().nodesWithLabel(labelId);\n+  }\n+\n+  @Override\n+  public SchemaIndexDescriptor indexGetForSchema(SchemaDescriptor descriptor)\n+  {\n+    return schemaCache.indexDescriptor(descriptor);\n+  }\n+\n+  @Override\n+  public Iterator<SchemaIndexDescriptor> indexesGetForLabel(int labelId)\n+  {\n+    return schemaCache.indexDescriptorsForLabel(labelId);\n+  }\n+\n+  @Override\n+  public Iterator<SchemaIndexDescriptor> indexesGetAll()\n+  {\n+    return toIndexDescriptors(schemaCache.indexRules());\n+  }\n+\n+  @Override\n+  public Iterator<SchemaIndexDescriptor> indexesGetRelatedToProperty(int propertyId)\n+  {\n+    return schemaCache.indexesByProperty(propertyId);\n+  }\n+\n+  @Override\n+  public Long indexGetOwningUniquenessConstraintId(SchemaIndexDescriptor index)\n+  {\n+    IndexRule rule = indexRule(index);\n+    if (rule != null)\n+    {\n+      // Think of the index as being orphaned if the owning constraint is missing or broken.\n+      Long owningConstraint = rule.getOwningConstraint();\n+      return schemaCache.hasConstraintRule(owningConstraint) ? owningConstraint : null;\n+    }\n+    return null;\n+  }\n+\n+  @Override\n+  public long indexGetCommittedId(SchemaIndexDescriptor index)\n+      throws SchemaRuleNotFoundException\n+  {\n+    IndexRule rule = indexRule(index);\n+    if (rule == null)\n+    {\n+      throw new SchemaRuleNotFoundException(SchemaRule.Kind.INDEX_RULE, index.schema());\n+    }\n+    return rule.getId();\n+  }\n+\n+  @Override\n+  public InternalIndexState indexGetState(SchemaIndexDescriptor descriptor) throws IndexNotFoundKernelException\n+  {\n+    return indexService.getIndexProxy(descriptor.schema()).getState();\n+  }\n+\n+  @Override\n+  public IndexProvider.Descriptor indexGetProviderDescriptor(SchemaIndexDescriptor descriptor) throws IndexNotFoundKernelException\n+  {\n+    return indexService.getIndexProxy(descriptor.schema()).getProviderDescriptor();\n+  }\n+\n+  public CapableIndexReference indexReference(SchemaIndexDescriptor descriptor) throws IndexNotFoundKernelException\n+  {\n+    boolean unique = descriptor.type() == SchemaIndexDescriptor.Type.UNIQUE;\n+    SchemaDescriptor schema = descriptor.schema();\n+    IndexProxy indexProxy = indexService.getIndexProxy(schema);\n+\n+    return new DefaultCapableIndexReference(unique, indexProxy.getIndexCapability(),\n+        indexProxy.getProviderDescriptor(), schema.keyId(),\n+        schema.getPropertyIds());\n+  }\n+\n+  @Override\n+  public PopulationProgress indexGetPopulationProgress(SchemaDescriptor descriptor)\n+      throws IndexNotFoundKernelException\n+  {\n+    return indexService.getIndexProxy(descriptor).getIndexPopulationProgress();\n+  }\n+\n+  @Override\n+  public long indexSize(SchemaDescriptor descriptor) throws IndexNotFoundKernelException\n+  {\n+    Register.DoubleLongRegister result = indexService.indexUpdatesAndSize(descriptor);\n+    return result.readSecond();\n+  }\n+\n+  @Override\n+  public double indexUniqueValuesPercentage(SchemaDescriptor descriptor) throws IndexNotFoundKernelException\n+  {\n+    return indexService.indexUniqueValuesPercentage(descriptor);\n+  }\n+\n+  @Override\n+  public String indexGetFailure(SchemaDescriptor descriptor) throws IndexNotFoundKernelException\n+  {\n+    return indexService.getIndexProxy(descriptor).getPopulationFailure().asString();\n+  }\n+\n+  @Override\n+  public Iterator<ConstraintDescriptor> constraintsGetForSchema(SchemaDescriptor descriptor)\n+  {\n+    return schemaCache.constraintsForSchema(descriptor);\n+  }\n+\n+  @Override\n+  public boolean constraintExists(ConstraintDescriptor descriptor)\n+  {\n+    return schemaCache.hasConstraintRule(descriptor);\n+  }\n+\n+  @Override\n+  public Iterator<ConstraintDescriptor> constraintsGetForLabel(int labelId)\n+  {\n+    return schemaCache.constraintsForLabel(labelId);\n+  }\n+\n+  @Override\n+  public Iterator<ConstraintDescriptor> constraintsGetForRelationshipType(int typeId)\n+  {\n+    return schemaCache.constraintsForRelationshipType(typeId);\n+  }\n+\n+  @Override\n+  public Iterator<ConstraintDescriptor> constraintsGetAll()\n+  {\n+    return schemaCache.constraints();\n+  }\n+\n+  @Override\n+  public int propertyKeyGetOrCreateForName(String propertyKey)\n+  {\n+    return propertyKeyTokenHolder.getOrCreateId(propertyKey);\n+  }\n+\n+  @Override\n+  public int propertyKeyGetForName(String propertyKey)\n+  {\n+    return propertyKeyTokenHolder.getIdByName(propertyKey);\n+  }\n+\n+  @Override\n+  public String propertyKeyGetName(int propertyKeyId) throws PropertyKeyIdNotFoundKernelException\n+  {\n+    try\n+    {\n+      return propertyKeyTokenHolder.getTokenById(propertyKeyId).name();\n+    } catch (TokenNotFoundException e)\n+    {\n+      throw new PropertyKeyIdNotFoundKernelException(propertyKeyId, e);\n+    }\n+  }\n+\n+  @Override\n+  public PrimitiveIntIterator graphGetPropertyKeys()\n+  {\n+    return new PropertyKeyIdIterator(propertyLoader.graphLoadProperties(new IteratingPropertyReceiver<>()));\n+  }\n+\n+  @Override\n+  public Object graphGetProperty(int propertyKeyId)\n+  {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public Iterator<StorageProperty> graphGetAllProperties()\n+  {\n+    return propertyLoader.graphLoadProperties(new IteratingPropertyReceiver<>());\n+  }\n+\n+  @Override\n+  public Iterator<Token> propertyKeyGetAllTokens()\n+  {\n+    return propertyKeyTokenHolder.getAllTokens().iterator();\n+  }\n+\n+  @Override\n+  public Iterator<Token> labelsGetAllTokens()\n+  {\n+    return labelTokenHolder.getAllTokens().iterator();\n+  }\n+\n+  @SuppressWarnings(\"unchecked\")\n+  @Override\n+  public Iterator<Token> relationshipTypeGetAllTokens()\n+  {\n+    return (Iterator) relationshipTokenHolder.getAllTokens().iterator();\n+  }\n+\n+  @Override\n+  public int relationshipTypeGetForName(String relationshipTypeName)\n+  {\n+    return relationshipTokenHolder.getIdByName(relationshipTypeName);\n+  }\n+\n+  @Override\n+  public String relationshipTypeGetName(int relationshipTypeId) throws RelationshipTypeIdNotFoundKernelException\n+  {\n+    try\n+    {\n+      return relationshipTokenHolder.getTokenById(relationshipTypeId).name();\n+    } catch (TokenNotFoundException e)\n+    {\n+      throw new RelationshipTypeIdNotFoundKernelException(relationshipTypeId, e);\n+    }\n+  }\n+\n+  @Override\n+  public int relationshipTypeGetOrCreateForName(String relationshipTypeName)\n+  {\n+    return relationshipTokenHolder.getOrCreateId(relationshipTypeName);\n+  }\n+\n+  @Override\n+  public <EXCEPTION extends Exception> void relationshipVisit(long relationshipId,\n+                                                              RelationshipVisitor<EXCEPTION> relationshipVisitor) throws EntityNotFoundException, EXCEPTION\n+  {\n+    // TODO Please don't create a record for this, it's ridiculous\n+    RelationshipRecord record = relationshipStore.getRecord(relationshipId, relationshipStore.newRecord(), CHECK);\n+    if (!record.inUse())\n+    {\n+      throw new EntityNotFoundException(EntityType.RELATIONSHIP, relationshipId);\n+    }\n+    relationshipVisitor.visit(relationshipId, record.getType(), record.getFirstNode(), record.getSecondNode());\n+  }\n+\n+  @Override\n+  public PrimitiveLongIterator nodesGetAll()\n+  {\n+    return new AllNodeIterator(nodeStore);\n+  }\n+\n+  @Override\n+  public RelationshipIterator relationshipsGetAll()\n+  {\n+    return new AllRelationshipIterator(relationshipStore);\n+  }\n+\n+  @Override\n+  public Cursor<RelationshipItem> nodeGetRelationships(StorageStatement statement, NodeItem nodeItem,\n+                                                       Direction direction)\n+  {\n+    return nodeGetRelationships(statement, nodeItem, direction, ALWAYS_TRUE_INT);\n+  }\n+\n+  @Override\n+  public Cursor<RelationshipItem> nodeGetRelationships(StorageStatement statement, NodeItem node,\n+                                                       Direction direction, IntPredicate relTypes)\n+  {\n+    return statement.acquireNodeRelationshipCursor(node.isDense(), node.id(), node.nextRelationshipId(), direction,\n+        relTypes);\n+  }\n+\n+  @Override\n+  public Cursor<PropertyItem> nodeGetProperties(StorageStatement statement, NodeItem node, AssertOpen assertOpen)\n+  {\n+    Lock lock = node.lock(); // lock before reading the property id, since we might need to reload the record\n+    return statement.acquirePropertyCursor(node.nextPropertyId(), lock, assertOpen);\n+  }\n+\n+  @Override\n+  public Cursor<PropertyItem> nodeGetProperty(StorageStatement statement, NodeItem node, int propertyKeyId,\n+                                              AssertOpen assertOpen)\n+  {\n+    Lock lock = node.lock(); // lock before reading the property id, since we might need to reload the record\n+    return statement.acquireSinglePropertyCursor(node.nextPropertyId(), propertyKeyId, lock, assertOpen);\n+  }\n+\n+  @Override\n+  public Cursor<PropertyItem> relationshipGetProperties(StorageStatement statement, RelationshipItem relationship,\n+                                                        AssertOpen assertOpen)\n+  {\n+    Lock lock = relationship.lock(); // lock before reading the property id, since we might need to reload the record\n+    return statement.acquirePropertyCursor(relationship.nextPropertyId(), lock, assertOpen);\n+  }\n+\n+  @Override\n+  public Cursor<PropertyItem> relationshipGetProperty(StorageStatement statement, RelationshipItem relationship,\n+                                                      int propertyKeyId, AssertOpen assertOpen)\n+  {\n+    Lock lock = relationship.lock(); // lock before reading the property id, since we might need to reload the record\n+    return statement.acquireSinglePropertyCursor(relationship.nextPropertyId(), propertyKeyId, lock, assertOpen);\n+  }\n+\n+  @Override\n+  public void releaseNode(long id)\n+  {\n+    nodeStore.freeId(id);\n+  }\n+\n+  @Override\n+  public void releaseRelationship(long id)\n+  {\n+    relationshipStore.freeId(id);\n+  }\n+\n+  @Override\n+  public long countsForNode(int labelId)\n+  {\n+    return counts.nodeCount(labelId, newDoubleLongRegister()).readSecond();\n+  }\n+\n+  @Override\n+  public long countsForRelationship(int startLabelId, int typeId, int endLabelId)\n+  {\n+    if (!(startLabelId == StatementConstants.ANY_LABEL || endLabelId == StatementConstants.ANY_LABEL))\n+    {\n+      throw new UnsupportedOperationException(\"not implemented\");\n+    }\n+    return counts.relationshipCount(startLabelId, typeId, endLabelId, newDoubleLongRegister()).readSecond();\n+  }\n+\n+  @Override\n+  public long nodesGetCount()\n+  {\n+    return nodeStore.getNumberOfIdsInUse();\n+  }\n+\n+  @Override\n+  public long relationshipsGetCount()\n+  {\n+    return relationshipStore.getNumberOfIdsInUse();\n+  }\n+\n+  @Override\n+  public int labelCount()\n+  {\n+    return labelTokenHolder.size();\n+  }\n+\n+  @Override\n+  public int propertyKeyCount()\n+  {\n+    return propertyKeyTokenHolder.size();\n+  }\n+\n+  @Override\n+  public int relationshipTypeCount()\n+  {\n+    return relationshipTokenHolder.size();\n+  }\n+\n+  @Override\n+  public DoubleLongRegister indexUpdatesAndSize(SchemaDescriptor descriptor, DoubleLongRegister target)\n+      throws IndexNotFoundKernelException\n+  {\n+    return counts.indexUpdatesAndSize(tryGetIndexId(descriptor), target);\n+  }\n+\n+  @Override\n+  public DoubleLongRegister indexSample(SchemaDescriptor descriptor, DoubleLongRegister target)\n+      throws IndexNotFoundKernelException\n+  {\n+    return counts.indexSample(tryGetIndexId(descriptor), target);\n+  }\n+\n+  private long tryGetIndexId(SchemaDescriptor descriptor) throws IndexNotFoundKernelException\n+  {\n+    return indexService.getIndexId(descriptor);\n+  }\n+\n+  @Override\n+  public boolean nodeExists(long id)\n+  {\n+    return nodeStore.isInUse(id);\n+  }\n+\n+  @Override\n+  public boolean relationshipExists(long id)\n+  {\n+    return relationshipStore.isInUse(id);\n+  }\n+\n+  @Override\n+  public PrimitiveIntSet relationshipTypes(StorageStatement statement, NodeItem node)\n+  {\n+    PrimitiveIntSet set = intSet();\n+    if (node.isDense())\n+    {\n+      RelationshipGroupRecord groupRecord = relationshipGroupStore.newRecord();\n+      RecordCursor<RelationshipGroupRecord> cursor = statement.recordCursors().relationshipGroup();\n+      for (long id = node.nextGroupId(); id != NO_NEXT_RELATIONSHIP.intValue(); id = groupRecord.getNext())\n+      {\n+        if (cursor.next(id, groupRecord, FORCE))\n         {\n-            throw new RelationshipTypeIdNotFoundKernelException( relationshipTypeId, e );\n+          set.add(groupRecord.getType());\n         }\n-    }\n-\n-    @Override\n-    public int relationshipTypeGetOrCreateForName( String relationshipTypeName )\n+      }\n+    } else\n     {\n-        return relationshipTokenHolder.getOrCreateId( relationshipTypeName );\n+      nodeGetRelationships(statement, node, Direction.BOTH)\n+          .forAll(relationship -> set.add(relationship.type()));\n     }\n+    return set;\n+  }\n \n-    @Override\n-    public <EXCEPTION extends Exception> void relationshipVisit( long relationshipId,\n-            RelationshipVisitor<EXCEPTION> relationshipVisitor ) throws EntityNotFoundException, EXCEPTION\n+  @Override\n+  public void degrees(StorageStatement statement, NodeItem nodeItem, DegreeVisitor visitor)\n+  {\n+    if (nodeItem.isDense())\n     {\n-        // TODO Please don't create a record for this, it's ridiculous\n-        RelationshipRecord record = relationshipStore.getRecord( relationshipId, relationshipStore.newRecord(), CHECK );\n-        if ( !record.inUse() )\n-        {\n-            throw new EntityNotFoundException( EntityType.RELATIONSHIP, relationshipId );\n-        }\n-        relationshipVisitor.visit( relationshipId, record.getType(), record.getFirstNode(), record.getSecondNode() );\n-    }\n-\n-    @Override\n-    public PrimitiveLongIterator nodesGetAll()\n+      visitDenseNode(statement, nodeItem, visitor);\n+    } else\n     {\n-        return new AllNodeIterator( nodeStore );\n+      visitNode(statement, nodeItem, visitor);\n     }\n+  }\n \n-    @Override\n-    public RelationshipIterator relationshipsGetAll()\n+  private IndexRule indexRule(SchemaIndexDescriptor index)\n+  {\n+    for (IndexRule rule : schemaCache.indexRules())\n     {\n-        return new AllRelationshipIterator( relationshipStore );\n+      if (rule.getIndexDescriptor().equals(index))\n+      {\n+        return rule;\n+      }\n     }\n \n-    @Override\n-    public Cursor<RelationshipItem> nodeGetRelationships( StorageStatement statement, NodeItem nodeItem,\n-            Direction direction )\n-    {\n-        return nodeGetRelationships( statement, nodeItem, direction, ALWAYS_TRUE_INT );\n-    }\n+    return schemaStorage.indexGetForSchema(index);\n+  }\n \n-    @Override\n-    public Cursor<RelationshipItem> nodeGetRelationships( StorageStatement statement, NodeItem node,\n-            Direction direction, IntPredicate relTypes )\n-    {\n-        return statement.acquireNodeRelationshipCursor( node.isDense(), node.id(), node.nextRelationshipId(), direction,\n-                relTypes );\n-    }\n+  @Override\n+  public int degreeRelationshipsInGroup(StorageStatement storeStatement, long nodeId, long groupId,\n+                                        Direction direction, Integer relType)\n+  {\n+    RelationshipRecord relationshipRecord = relationshipStore.newRecord();\n+    RelationshipGroupRecord relationshipGroupRecord = relationshipGroupStore.newRecord();\n+    return countRelationshipsInGroup(groupId, direction, relType, nodeId, relationshipRecord,\n+        relationshipGroupRecord, storeStatement.recordCursors());\n+  }\n \n-    @Override\n-    public Cursor<PropertyItem> nodeGetProperties( StorageStatement statement, NodeItem node, AssertOpen assertOpen )\n-    {\n-        Lock lock = node.lock(); // lock before reading the property id, since we might need to reload the record\n-        return statement.acquirePropertyCursor( node.nextPropertyId(), lock, assertOpen );\n-    }\n+  @Override\n+  public <T> T getOrCreateSchemaDependantState(Class<T> type, Function<StoreReadLayer, T> factory)\n+  {\n+    return schemaCache.getOrCreateDependantState(type, factory, this);\n+  }\n \n-    @Override\n-    public Cursor<PropertyItem> nodeGetProperty( StorageStatement statement, NodeItem node, int propertyKeyId,\n-            AssertOpen assertOpen )\n+  private void visitNode(StorageStatement statement, NodeItem nodeItem, DegreeVisitor visitor)\n+  {\n+    try (Cursor<RelationshipItem> relationships = nodeGetRelationships(statement, nodeItem, Direction.BOTH))\n     {\n-        Lock lock = node.lock(); // lock before reading the property id, since we might need to reload the record\n-        return statement.acquireSinglePropertyCursor( node.nextPropertyId(), propertyKeyId, lock, assertOpen );\n-    }\n-\n-    @Override\n-    public Cursor<PropertyItem> relationshipGetProperties( StorageStatement statement, RelationshipItem relationship,\n-            AssertOpen assertOpen )\n-    {\n-        Lock lock = relationship.lock(); // lock before reading the property id, since we might need to reload the record\n-        return statement.acquirePropertyCursor( relationship.nextPropertyId(), lock, assertOpen );\n-    }\n-\n-    @Override\n-    public Cursor<PropertyItem> relationshipGetProperty( StorageStatement statement, RelationshipItem relationship,\n-            int propertyKeyId, AssertOpen assertOpen )\n-    {\n-        Lock lock = relationship.lock(); // lock before reading the property id, since we might need to reload the record\n-        return statement.acquireSinglePropertyCursor( relationship.nextPropertyId(), propertyKeyId, lock, assertOpen );\n-    }\n-\n-    @Override\n-    public void releaseNode( long id )\n-    {\n-        nodeStore.freeId( id );\n-    }\n-\n-    @Override\n-    public void releaseRelationship( long id )\n-    {\n-        relationshipStore.freeId( id );\n-    }\n-\n-    @Override\n-    public long countsForNode( int labelId )\n-    {\n-        return counts.nodeCount( labelId, newDoubleLongRegister() ).readSecond();\n-    }\n-\n-    @Override\n-    public long countsForRelationship( int startLabelId, int typeId, int endLabelId )\n-    {\n-        if ( !(startLabelId == StatementConstants.ANY_LABEL || endLabelId == StatementConstants.ANY_LABEL) )\n+      while (relationships.next())\n+      {\n+        RelationshipItem rel = relationships.get();\n+        int type = rel.type();\n+        switch (directionOf(nodeItem.id(), rel.id(), rel.startNode(), rel.endNode()))\n         {\n-            throw new UnsupportedOperationException( \"not implemented\" );\n+          case OUTGOING:\n+            visitor.visitDegree(type, 1, 0);\n+            break;\n+          case INCOMING:\n+            visitor.visitDegree(type, 0, 1);\n+            break;\n+          case BOTH:\n+            visitor.visitDegree(type, 1, 1);\n+            break;\n+          default:\n+            throw new IllegalStateException(\"You found the missing direction!\");\n         }\n-        return counts.relationshipCount( startLabelId, typeId, endLabelId, newDoubleLongRegister() ).readSecond();\n+      }\n     }\n+  }\n \n-    @Override\n-    public long nodesGetCount()\n-    {\n-        return nodeStore.getNumberOfIdsInUse();\n-    }\n+  private void visitDenseNode(StorageStatement statement, NodeItem nodeItem, DegreeVisitor visitor)\n+  {\n+    RelationshipGroupRecord relationshipGroupRecord = relationshipGroupStore.newRecord();\n+    RecordCursor<RelationshipGroupRecord> relationshipGroupCursor = statement.recordCursors().relationshipGroup();\n+    RelationshipRecord relationshipRecord = relationshipStore.newRecord();\n+    RecordCursor<RelationshipRecord> relationshipCursor = statement.recordCursors().relationship();\n \n-    @Override\n-    public long relationshipsGetCount()\n+    long groupId = nodeItem.nextGroupId();\n+    while (groupId != NO_NEXT_RELATIONSHIP.longValue())\n     {\n-        return relationshipStore.getNumberOfIdsInUse();\n-    }\n+      relationshipGroupCursor.next(groupId, relationshipGroupRecord, FORCE);\n+      if (relationshipGroupRecord.inUse())\n+      {\n+        int type = relationshipGroupRecord.getType();\n \n-    @Override\n-    public int labelCount()\n-    {\n-        return labelTokenHolder.size();\n-    }\n+        long firstLoop = relationshipGroupRecord.getFirstLoop();\n+        long firstOut = relationshipGroupRecord.getFirstOut();\n+        long firstIn = relationshipGroupRecord.getFirstIn();\n \n-    @Override\n-    public int propertyKeyCount()\n-    {\n-        return propertyKeyTokenHolder.size();\n-    }\n-\n-    @Override\n-    public int relationshipTypeCount()\n-    {\n-        return relationshipTokenHolder.size();\n+        long loop = countByFirstPrevPointer(firstLoop, relationshipCursor, nodeItem.id(), relationshipRecord);\n+        long outgoing =\n+            countByFirstPrevPointer(firstOut, relationshipCursor, nodeItem.id(), relationshipRecord) +\n+                loop;\n+        long incoming =\n+            countByFirstPrevPointer(firstIn, relationshipCursor, nodeItem.id(), relationshipRecord) +\n+                loop;\n+        visitor.visitDegree(type, outgoing, incoming);\n+      }\n+      groupId = relationshipGroupRecord.getNext();\n     }\n+  }\n \n-    @Override\n-    public DoubleLongRegister indexUpdatesAndSize( SchemaDescriptor descriptor, DoubleLongRegister target )\n-            throws IndexNotFoundKernelException\n+  private Direction directionOf(long nodeId, long relationshipId, long startNode, long endNode)\n+  {\n+    if (startNode == nodeId)\n     {\n-        return counts.indexUpdatesAndSize( tryGetIndexId( descriptor ), target );\n+      return endNode == nodeId ? Direction.BOTH : Direction.OUTGOING;\n     }\n-\n-    @Override\n-    public DoubleLongRegister indexSample( SchemaDescriptor descriptor, DoubleLongRegister target )\n-            throws IndexNotFoundKernelException\n+    if (endNode == nodeId)\n     {\n-        return counts.indexSample( tryGetIndexId( descriptor ), target );\n+      return Direction.INCOMING;\n     }\n+    throw new InvalidRecordException(\n+        \"Node \" + nodeId + \" neither start nor end node of relationship \" + relationshipId +\n+            \" with startNode:\" + startNode + \" and endNode:\" + endNode);\n+  }\n \n-    private long tryGetIndexId( SchemaDescriptor descriptor ) throws IndexNotFoundKernelException\n-    {\n-        return indexService.getIndexId( descriptor );\n-    }\n-\n-    @Override\n-    public boolean nodeExists( long id )\n-    {\n-        return nodeStore.isInUse( id );\n-    }\n-\n-    @Override\n-    public boolean relationshipExists( long id )\n-    {\n-        return relationshipStore.isInUse( id );\n-    }\n-\n-    @Override\n-    public PrimitiveIntSet relationshipTypes( StorageStatement statement, NodeItem node )\n-    {\n-        PrimitiveIntSet set = intSet();\n-        if ( node.isDense() )\n-        {\n-            RelationshipGroupRecord groupRecord = relationshipGroupStore.newRecord();\n-            RecordCursor<RelationshipGroupRecord> cursor = statement.recordCursors().relationshipGroup();\n-            for ( long id = node.nextGroupId(); id != NO_NEXT_RELATIONSHIP.intValue(); id = groupRecord.getNext() )\n-            {\n-                if ( cursor.next( id, groupRecord, FORCE ) )\n-                {\n-                    set.add( groupRecord.getType() );\n-                }\n-            }\n-        }\n-        else\n-        {\n-            nodeGetRelationships( statement, node, Direction.BOTH )\n-                    .forAll( relationship -> set.add( relationship.type() ) );\n-        }\n-        return set;\n-    }\n-\n-    @Override\n-    public void degrees( StorageStatement statement, NodeItem nodeItem, DegreeVisitor visitor )\n-    {\n-        if ( nodeItem.isDense() )\n-        {\n-            visitDenseNode( statement, nodeItem, visitor );\n-        }\n-        else\n-        {\n-            visitNode( statement, nodeItem, visitor );\n-        }\n-    }\n-\n-    private IndexRule indexRule( SchemaIndexDescriptor index )\n-    {\n-        for ( IndexRule rule : schemaCache.indexRules() )\n-        {\n-            if ( rule.getIndexDescriptor().equals( index ) )\n-            {\n-                return rule;\n-            }\n-        }\n-\n-        return schemaStorage.indexGetForSchema( index );\n-    }\n-\n-    @Override\n-    public int degreeRelationshipsInGroup( StorageStatement storeStatement, long nodeId, long groupId,\n-            Direction direction, Integer relType )\n-    {\n-        RelationshipRecord relationshipRecord = relationshipStore.newRecord();\n-        RelationshipGroupRecord relationshipGroupRecord = relationshipGroupStore.newRecord();\n-        return countRelationshipsInGroup( groupId, direction, relType, nodeId, relationshipRecord,\n-                relationshipGroupRecord, storeStatement.recordCursors() );\n-    }\n-\n-    @Override\n-    public <T> T getOrCreateSchemaDependantState( Class<T> type, Function<StoreReadLayer,T> factory )\n-    {\n-        return schemaCache.getOrCreateDependantState( type, factory, this );\n-    }\n-\n-    private void visitNode( StorageStatement statement, NodeItem nodeItem, DegreeVisitor visitor )\n-    {\n-        try ( Cursor<RelationshipItem> relationships = nodeGetRelationships( statement, nodeItem, Direction.BOTH ) )\n-        {\n-            while ( relationships.next() )\n-            {\n-                RelationshipItem rel = relationships.get();\n-                int type = rel.type();\n-                switch ( directionOf( nodeItem.id(), rel.id(), rel.startNode(), rel.endNode() ) )\n-                {\n-                case OUTGOING:\n-                    visitor.visitDegree( type, 1, 0 );\n-                    break;\n-                case INCOMING:\n-                    visitor.visitDegree( type, 0, 1 );\n-                    break;\n-                case BOTH:\n-                    visitor.visitDegree( type, 1, 1 );\n-                    break;\n-                default:\n-                    throw new IllegalStateException( \"You found the missing direction!\" );\n-                }\n-            }\n-        }\n-    }\n-\n-    private void visitDenseNode( StorageStatement statement, NodeItem nodeItem, DegreeVisitor visitor )\n-    {\n-        RelationshipGroupRecord relationshipGroupRecord = relationshipGroupStore.newRecord();\n-        RecordCursor<RelationshipGroupRecord> relationshipGroupCursor = statement.recordCursors().relationshipGroup();\n-        RelationshipRecord relationshipRecord = relationshipStore.newRecord();\n-        RecordCursor<RelationshipRecord> relationshipCursor = statement.recordCursors().relationship();\n-\n-        long groupId = nodeItem.nextGroupId();\n-        while ( groupId != NO_NEXT_RELATIONSHIP.longValue() )\n-        {\n-            relationshipGroupCursor.next( groupId, relationshipGroupRecord, FORCE );\n-            if ( relationshipGroupRecord.inUse() )\n-            {\n-                int type = relationshipGroupRecord.getType();\n-\n-                long firstLoop = relationshipGroupRecord.getFirstLoop();\n-                long firstOut = relationshipGroupRecord.getFirstOut();\n-                long firstIn = relationshipGroupRecord.getFirstIn();\n-\n-                long loop = countByFirstPrevPointer( firstLoop, relationshipCursor, nodeItem.id(), relationshipRecord );\n-                long outgoing =\n-                        countByFirstPrevPointer( firstOut, relationshipCursor, nodeItem.id(), relationshipRecord ) +\n-                                loop;\n-                long incoming =\n-                        countByFirstPrevPointer( firstIn, relationshipCursor, nodeItem.id(), relationshipRecord ) +\n-                                loop;\n-                visitor.visitDegree( type, outgoing, incoming );\n-            }\n-            groupId = relationshipGroupRecord.getNext();\n-        }\n-    }\n-\n-    private Direction directionOf( long nodeId, long relationshipId, long startNode, long endNode )\n-    {\n-        if ( startNode == nodeId )\n-        {\n-            return endNode == nodeId ? Direction.BOTH : Direction.OUTGOING;\n-        }\n-        if ( endNode == nodeId )\n-        {\n-            return Direction.INCOMING;\n-        }\n-        throw new InvalidRecordException(\n-                \"Node \" + nodeId + \" neither start nor end node of relationship \" + relationshipId +\n-                        \" with startNode:\" + startNode + \" and endNode:\" + endNode );\n-    }\n-\n-    private static Iterator<SchemaIndexDescriptor> toIndexDescriptors( Iterable<IndexRule> rules )\n-    {\n-        return Iterators.map( IndexRule::getIndexDescriptor, rules.iterator() );\n-    }\n+  private static Iterator<SchemaIndexDescriptor> toIndexDescriptors(Iterable<IndexRule> rules)\n+  {\n+    return Iterators.map(IndexRule::getIndexDescriptor, rules.iterator());\n+  }\n }\n",
            "diff_size": 781
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "152",
                    "column": "69",
                    "severity": "error",
                    "message": "'&&' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "397",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 180).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "685",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 188).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4434/StorageLayer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4434/StorageLayer.java\nindex fb3b25bb8cd..aad0d94b7f7 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4434/StorageLayer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4434/StorageLayer.java\n@@ -149,9 +149,8 @@ public class StorageLayer implements StoreReadLayer\n             // implementation. Actual\n             // implementation should not depend on internal kernel exception\n             // messages like this.\n-            if ( e.getCause() instanceof UnderlyingStorageException &&\n-                    e.getCause().getMessage().equals( \"Id capacity exceeded\" ) )\n-            {\n+            if ( e.getCause() instanceof UnderlyingStorageException &&e.getCause().getMessage().equals( \"Id capacity exceeded\" ) )\n+{\n                 throw new TooManyLabelsException( e );\n             }\n             throw e;\n@@ -221,15 +220,15 @@ public class StorageLayer implements StoreReadLayer\n     }\n \n     @Override\n-    public long indexGetCommittedId( SchemaIndexDescriptor index )\n-            throws SchemaRuleNotFoundException\n-    {\n+    public long indexGetCommittedId( SchemaIndexDescriptor index ) throws SchemaRuleNotFoundException\n+{\n         IndexRule rule = indexRule( index );\n         if ( rule == null )\n         {\n             throw new SchemaRuleNotFoundException( SchemaRule.Kind.INDEX_RULE, index.schema() );\n         }\n-        return rule.getId();\n+\n+return rule.getId();\n     }\n \n     @Override\n@@ -249,16 +248,12 @@ public class StorageLayer implements StoreReadLayer\n         boolean unique = descriptor.type() == SchemaIndexDescriptor.Type.UNIQUE;\n         SchemaDescriptor schema = descriptor.schema();\n         IndexProxy indexProxy = indexService.getIndexProxy( schema );\n-\n-        return new DefaultCapableIndexReference( unique, indexProxy.getIndexCapability(),\n-                indexProxy.getProviderDescriptor(), schema.keyId(),\n-                schema.getPropertyIds() );\n+return new DefaultCapableIndexReference( unique, indexProxy.getIndexCapability(), indexProxy.getProviderDescriptor(), schema.keyId(), schema.getPropertyIds() );\n     }\n \n     @Override\n-    public PopulationProgress indexGetPopulationProgress( SchemaDescriptor descriptor )\n-            throws IndexNotFoundKernelException\n-    {\n+    public PopulationProgress indexGetPopulationProgress( SchemaDescriptor descriptor ) throws IndexNotFoundKernelException\n+{\n         return indexService.getIndexProxy( descriptor ).getIndexPopulationProgress();\n     }\n \n@@ -399,9 +394,8 @@ public class StorageLayer implements StoreReadLayer\n     }\n \n     @Override\n-    public <EXCEPTION extends Exception> void relationshipVisit( long relationshipId,\n-            RelationshipVisitor<EXCEPTION> relationshipVisitor ) throws EntityNotFoundException, EXCEPTION\n-    {\n+    public <EXCEPTION extends Exception> void relationshipVisit( long relationshipId, RelationshipVisitor<EXCEPTION> relationshipVisitor ) throws EntityNotFoundException, EXCEPTION\n+{\n         // TODO Please don't create a record for this, it's ridiculous\n         RelationshipRecord record = relationshipStore.getRecord( relationshipId, relationshipStore.newRecord(), CHECK );\n         if ( !record.inUse() )\n@@ -462,8 +456,7 @@ public class StorageLayer implements StoreReadLayer\n     }\n \n     @Override\n-    public Cursor<PropertyItem> relationshipGetProperty( StorageStatement statement, RelationshipItem relationship,\n-            int propertyKeyId, AssertOpen assertOpen )\n+    public Cursor<PropertyItem> relationshipGetProperty( StorageStatement statement, RelationshipItem relationship, int propertyKeyId, AssertOpen assertOpen )\n     {\n         Lock lock = relationship.lock(); // lock before reading the property id, since we might need to reload the record\n         return statement.acquireSinglePropertyCursor( relationship.nextPropertyId(), propertyKeyId, lock, assertOpen );\n@@ -490,11 +483,12 @@ public class StorageLayer implements StoreReadLayer\n     @Override\n     public long countsForRelationship( int startLabelId, int typeId, int endLabelId )\n     {\n-        if ( !(startLabelId == StatementConstants.ANY_LABEL || endLabelId == StatementConstants.ANY_LABEL) )\n+        if ( !( startLabelId == StatementConstants.ANY_LABEL || endLabelId == StatementConstants.ANY_LABEL) )\n         {\n             throw new UnsupportedOperationException( \"not implemented\" );\n         }\n-        return counts.relationshipCount( startLabelId, typeId, endLabelId, newDoubleLongRegister() ).readSecond();\n+\n+return counts.relationshipCount( startLabelId, typeId, endLabelId, newDoubleLongRegister() ).readSecond();\n     }\n \n     @Override\n@@ -528,16 +522,14 @@ public class StorageLayer implements StoreReadLayer\n     }\n \n     @Override\n-    public DoubleLongRegister indexUpdatesAndSize( SchemaDescriptor descriptor, DoubleLongRegister target )\n-            throws IndexNotFoundKernelException\n-    {\n+    public DoubleLongRegister indexUpdatesAndSize( SchemaDescriptor descriptor, DoubleLongRegister target ) throws IndexNotFoundKernelException\n+{\n         return counts.indexUpdatesAndSize( tryGetIndexId( descriptor ), target );\n     }\n \n     @Override\n-    public DoubleLongRegister indexSample( SchemaDescriptor descriptor, DoubleLongRegister target )\n-            throws IndexNotFoundKernelException\n-    {\n+    public DoubleLongRegister indexSample( SchemaDescriptor descriptor, DoubleLongRegister target ) throws IndexNotFoundKernelException\n+{\n         return counts.indexSample( tryGetIndexId( descriptor ), target );\n     }\n \n@@ -576,10 +568,10 @@ public class StorageLayer implements StoreReadLayer\n         }\n         else\n         {\n-            nodeGetRelationships( statement, node, Direction.BOTH )\n-                    .forAll( relationship -> set.add( relationship.type() ) );\n+            nodeGetRelationships( statement, node, Direction.BOTH ).forAll( relationship -> set.add( relationship.type() ) );\n         }\n-        return set;\n+\n+return set;\n     }\n \n     @Override\n@@ -670,15 +662,12 @@ public class StorageLayer implements StoreReadLayer\n                 long firstIn = relationshipGroupRecord.getFirstIn();\n \n                 long loop = countByFirstPrevPointer( firstLoop, relationshipCursor, nodeItem.id(), relationshipRecord );\n-                long outgoing =\n-                        countByFirstPrevPointer( firstOut, relationshipCursor, nodeItem.id(), relationshipRecord ) +\n-                                loop;\n-                long incoming =\n-                        countByFirstPrevPointer( firstIn, relationshipCursor, nodeItem.id(), relationshipRecord ) +\n-                                loop;\n-                visitor.visitDegree( type, outgoing, incoming );\n+                long outgoing = countByFirstPrevPointer( firstOut, relationshipCursor, nodeItem.id(), relationshipRecord ) + loop;\n+long incoming = countByFirstPrevPointer( firstIn, relationshipCursor, nodeItem.id(), relationshipRecord ) + loop;\n+visitor.visitDegree( type, outgoing, incoming );\n             }\n-            groupId = relationshipGroupRecord.getNext();\n+\n+groupId = relationshipGroupRecord.getNext();\n         }\n     }\n \n@@ -688,17 +677,16 @@ public class StorageLayer implements StoreReadLayer\n         {\n             return endNode == nodeId ? Direction.BOTH : Direction.OUTGOING;\n         }\n-        if ( endNode == nodeId )\n+\n+if ( endNode == nodeId )\n         {\n             return Direction.INCOMING;\n         }\n-        throw new InvalidRecordException(\n-                \"Node \" + nodeId + \" neither start nor end node of relationship \" + relationshipId +\n-                        \" with startNode:\" + startNode + \" and endNode:\" + endNode );\n+        throw new InvalidRecordException( \"Node \" + nodeId + \" neither start nor end node of relationship \" + relationshipId + \" with startNode:\" + startNode + \" and endNode:\" + endNode );\n     }\n \n     private static Iterator<SchemaIndexDescriptor> toIndexDescriptors( Iterable<IndexRule> rules )\n     {\n         return Iterators.map( IndexRule::getIndexDescriptor, rules.iterator() );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 48
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
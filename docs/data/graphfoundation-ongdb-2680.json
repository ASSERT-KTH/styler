{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2680",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "38",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2680/InputEntityArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2680/InputEntityArray.java\nindex 04b74bbb65b..f1b6a5a8a60 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2680/InputEntityArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2680/InputEntityArray.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input.csv;\n \n import java.io.IOException;\n@@ -31,115 +32,115 @@ import org.neo4j.unsafe.impl.batchimport.input.InputEntityVisitor;\n  */\n public class InputEntityArray implements InputEntityVisitor\n {\n-    private final InputEntity[] entities;\n-    private int cursor;\n-\n-    public InputEntityArray( int length )\n-    {\n-        this.entities = new InputEntity[length];\n-    }\n-\n-    @Override\n-    public void close()\n-    {\n-    }\n-\n-    @Override\n-    public boolean propertyId( long nextProp )\n-    {\n-        return currentEntity().propertyId( nextProp );\n-    }\n-\n-    @Override\n-    public boolean property( String key, Object value )\n-    {\n-        return currentEntity().property( key, value );\n-    }\n-\n-    @Override\n-    public boolean property( int propertyKeyId, Object value )\n-    {\n-        return currentEntity().property( propertyKeyId, value );\n-    }\n-\n-    @Override\n-    public boolean id( long id )\n-    {\n-        return currentEntity().id( id );\n-    }\n-\n-    @Override\n-    public boolean id( Object id, Group group )\n-    {\n-        return currentEntity().id( id, group );\n-    }\n-\n-    @Override\n-    public boolean labels( String[] labels )\n-    {\n-        return currentEntity().labels( labels );\n-    }\n-\n-    @Override\n-    public boolean labelField( long labelField )\n-    {\n-        return currentEntity().labelField( labelField );\n-    }\n-\n-    @Override\n-    public boolean startId( long id )\n-    {\n-        return currentEntity().startId( id );\n-    }\n-\n-    @Override\n-    public boolean startId( Object id, Group group )\n-    {\n-        return currentEntity().startId( id, group );\n-    }\n-\n-    @Override\n-    public boolean endId( long id )\n-    {\n-        return currentEntity().endId( id );\n-    }\n-\n-    @Override\n-    public boolean endId( Object id, Group group )\n-    {\n-        return currentEntity().endId( id, group );\n-    }\n-\n-    @Override\n-    public boolean type( int type )\n-    {\n-        return currentEntity().type( type );\n-    }\n-\n-    @Override\n-    public boolean type( String type )\n-    {\n-        return currentEntity().type( type );\n-    }\n-\n-    @Override\n-    public void endOfEntity() throws IOException\n-    {\n-        currentEntity().endOfEntity();\n-        cursor++;\n-    }\n-\n-    private InputEntity currentEntity()\n-    {\n-        if ( entities[cursor] == null )\n-        {\n-            entities[cursor] = new InputEntity();\n-        }\n-        return entities[cursor];\n-    }\n-\n-    public InputEntity[] toArray()\n-    {\n-        return cursor == entities.length ? entities : Arrays.copyOf( entities, cursor );\n-    }\n+  private final InputEntity[] entities;\n+  private int cursor;\n+\n+  public InputEntityArray(int length)\n+  {\n+    this.entities = new InputEntity[length];\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+  }\n+\n+  @Override\n+  public boolean propertyId(long nextProp)\n+  {\n+    return currentEntity().propertyId(nextProp);\n+  }\n+\n+  @Override\n+  public boolean property(String key, Object value)\n+  {\n+    return currentEntity().property(key, value);\n+  }\n+\n+  @Override\n+  public boolean property(int propertyKeyId, Object value)\n+  {\n+    return currentEntity().property(propertyKeyId, value);\n+  }\n+\n+  @Override\n+  public boolean id(long id)\n+  {\n+    return currentEntity().id(id);\n+  }\n+\n+  @Override\n+  public boolean id(Object id, Group group)\n+  {\n+    return currentEntity().id(id, group);\n+  }\n+\n+  @Override\n+  public boolean labels(String[] labels)\n+  {\n+    return currentEntity().labels(labels);\n+  }\n+\n+  @Override\n+  public boolean labelField(long labelField)\n+  {\n+    return currentEntity().labelField(labelField);\n+  }\n+\n+  @Override\n+  public boolean startId(long id)\n+  {\n+    return currentEntity().startId(id);\n+  }\n+\n+  @Override\n+  public boolean startId(Object id, Group group)\n+  {\n+    return currentEntity().startId(id, group);\n+  }\n+\n+  @Override\n+  public boolean endId(long id)\n+  {\n+    return currentEntity().endId(id);\n+  }\n+\n+  @Override\n+  public boolean endId(Object id, Group group)\n+  {\n+    return currentEntity().endId(id, group);\n+  }\n+\n+  @Override\n+  public boolean type(int type)\n+  {\n+    return currentEntity().type(type);\n+  }\n+\n+  @Override\n+  public boolean type(String type)\n+  {\n+    return currentEntity().type(type);\n+  }\n+\n+  @Override\n+  public void endOfEntity() throws IOException\n+  {\n+    currentEntity().endOfEntity();\n+    cursor++;\n+  }\n+\n+  private InputEntity currentEntity()\n+  {\n+    if (entities[cursor] == null)\n+    {\n+      entities[cursor] = new InputEntity();\n+    }\n+    return entities[cursor];\n+  }\n+\n+  public InputEntity[] toArray()\n+  {\n+    return cursor == entities.length ? entities : Arrays.copyOf(entities, cursor);\n+  }\n }\n",
            "diff_size": 112
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2680/InputEntityArray.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2680/InputEntityArray.java\nindex 04b74bbb65b..3ed59bdfcde 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2680/InputEntityArray.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2680/InputEntityArray.java\n@@ -135,11 +135,12 @@ public class InputEntityArray implements InputEntityVisitor\n         {\n             entities[cursor] = new InputEntity();\n         }\n-        return entities[cursor];\n+\n+return entities[cursor];\n     }\n \n     public InputEntity[] toArray()\n     {\n         return cursor == entities.length ? entities : Arrays.copyOf( entities, cursor );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4357",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "36",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "38",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "53",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4357/TransactionHeaderInformationFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4357/TransactionHeaderInformationFactory.java\nindex bd1b6bd5421..373e47e4879 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4357/TransactionHeaderInformationFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4357/TransactionHeaderInformationFactory.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction;\n \n import java.util.concurrent.ThreadLocalRandom;\n@@ -25,37 +26,37 @@ import org.neo4j.kernel.impl.api.TransactionHeaderInformation;\n \n public interface TransactionHeaderInformationFactory\n {\n-    TransactionHeaderInformation create();\n+  TransactionHeaderInformation create();\n+\n+  TransactionHeaderInformationFactory DEFAULT = new TransactionHeaderInformationFactory.WithRandomBytes()\n+  {\n+    private static final int NO_ID = -1;\n \n-    TransactionHeaderInformationFactory DEFAULT = new TransactionHeaderInformationFactory.WithRandomBytes()\n+    @Override\n+    protected TransactionHeaderInformation createUsing(byte[] additionalHeader)\n     {\n-        private static final int NO_ID = -1;\n+      return new TransactionHeaderInformation(NO_ID, NO_ID, additionalHeader);\n+    }\n+  };\n+\n+  abstract class WithRandomBytes implements TransactionHeaderInformationFactory\n+  {\n+    private static final int ADDITIONAL_HEADER_SIZE = 8;\n+\n+    @Override\n+    public TransactionHeaderInformation create()\n+    {\n+      byte[] additionalHeader = generateAdditionalHeader();\n+      return createUsing(additionalHeader);\n+    }\n \n-        @Override\n-        protected TransactionHeaderInformation createUsing( byte[] additionalHeader )\n-        {\n-            return new TransactionHeaderInformation( NO_ID, NO_ID, additionalHeader );\n-        }\n-    };\n+    protected abstract TransactionHeaderInformation createUsing(byte[] additionalHeader);\n \n-    abstract class WithRandomBytes implements TransactionHeaderInformationFactory\n+    private byte[] generateAdditionalHeader()\n     {\n-        private static final int ADDITIONAL_HEADER_SIZE = 8;\n-\n-        @Override\n-        public TransactionHeaderInformation create()\n-        {\n-            byte[] additionalHeader = generateAdditionalHeader();\n-            return createUsing( additionalHeader );\n-        }\n-\n-        protected abstract TransactionHeaderInformation createUsing( byte[] additionalHeader );\n-\n-        private byte[] generateAdditionalHeader()\n-        {\n-            byte[] header = new byte[ADDITIONAL_HEADER_SIZE];\n-            ThreadLocalRandom.current().nextBytes( header );\n-            return header;\n-        }\n+      byte[] header = new byte[ADDITIONAL_HEADER_SIZE];\n+      ThreadLocalRandom.current().nextBytes(header);\n+      return header;\n     }\n+  }\n }\n",
            "diff_size": 47
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4357/TransactionHeaderInformationFactory.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4357/TransactionHeaderInformationFactory.java\nindex bd1b6bd5421..12b648a866f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4357/TransactionHeaderInformationFactory.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4357/TransactionHeaderInformationFactory.java\n@@ -26,8 +26,7 @@ import org.neo4j.kernel.impl.api.TransactionHeaderInformation;\n public interface TransactionHeaderInformationFactory\n {\n     TransactionHeaderInformation create();\n-\n-    TransactionHeaderInformationFactory DEFAULT = new TransactionHeaderInformationFactory.WithRandomBytes()\n+TransactionHeaderInformationFactory DEFAULT = new TransactionHeaderInformationFactory.WithRandomBytes()\n     {\n         private static final int NO_ID = -1;\n \n@@ -58,4 +57,4 @@ public interface TransactionHeaderInformationFactory\n             return header;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 3
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "3232",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "77",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "97",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3232/IntegrityValidator.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3232/IntegrityValidator.java\nindex 13ad8ec0f52..9f53c81b202 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/3232/IntegrityValidator.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/3232/IntegrityValidator.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.internal.recordstorage;\n \n import org.neo4j.exceptions.KernelException;\n@@ -39,33 +40,33 @@ class IntegrityValidator\n     private final NeoStores neoStores;\n     private IndexUpdateListener indexValidator;\n \n-    IntegrityValidator( NeoStores neoStores )\n+    IntegrityValidator(NeoStores neoStores)\n     {\n         this.neoStores = neoStores;\n     }\n \n-    void setIndexValidator( IndexUpdateListener validator )\n+    void setIndexValidator(IndexUpdateListener validator)\n     {\n-        Preconditions.checkState( this.indexValidator == null,\n-                \"Only supports a single validator. Tried to add \" + validator + \", but \" + this.indexValidator + \" has already been added\" );\n+        Preconditions.checkState(this.indexValidator == null,\n+          \"Only supports a single validator. Tried to add \" + validator + \", but \" + this.indexValidator + \" has already been added\");\n         this.indexValidator = validator;\n     }\n \n-    void validateNodeRecord( NodeRecord record ) throws TransactionFailureException\n+    void validateNodeRecord(NodeRecord record) throws TransactionFailureException\n     {\n-        if ( !record.inUse() && record.getNextRel() != Record.NO_NEXT_RELATIONSHIP.intValue() )\n+        if (!record.inUse() && record.getNextRel() != Record.NO_NEXT_RELATIONSHIP.intValue())\n         {\n             throw new ConstraintViolationTransactionFailureException(\n-                    \"Cannot delete node<\" + record.getId() + \">, because it still has relationships. \" +\n-                    \"To delete this node, you must first delete its relationships.\" );\n+              \"Cannot delete node<\" + record.getId() + \">, because it still has relationships. \" +\n+                \"To delete this node, you must first delete its relationships.\");\n         }\n     }\n \n-    void validateTransactionStartKnowledge( long lastCommittedTxWhenTransactionStarted )\n-            throws TransactionFailureException\n+    void validateTransactionStartKnowledge(long lastCommittedTxWhenTransactionStarted)\n+      throws TransactionFailureException\n     {\n         long latestConstraintIntroducingTx = neoStores.getMetaDataStore().getLatestConstraintIntroducingTx();\n-        if ( lastCommittedTxWhenTransactionStarted < latestConstraintIntroducingTx )\n+        if (lastCommittedTxWhenTransactionStarted < latestConstraintIntroducingTx)\n         {\n             // Constraints have changed since the transaction begun\n \n@@ -73,28 +74,27 @@ class IntegrityValidator\n             // explicitly creates a constraint, after the index has been populated. We can improve this later on by\n             // replicating the constraint validation logic down here, or rethinking where we validate constraints.\n             // For now, we just kill these transactions.\n-            throw new TransactionFailureException( Status.Transaction.ConstraintsChanged,\n-                            \"Database constraints have changed (txId=%d) after this transaction (txId=%d) started, \" +\n-                            \"which is not yet supported. Please retry your transaction to ensure all \" +\n-                            \"constraints are executed.\", latestConstraintIntroducingTx,\n-                            lastCommittedTxWhenTransactionStarted );\n+            throw new TransactionFailureException(Status.Transaction.ConstraintsChanged,\n+              \"Database constraints have changed (txId=%d) after this transaction (txId=%d) started, \" +\n+                \"which is not yet supported. Please retry your transaction to ensure all \" +\n+                \"constraints are executed.\", latestConstraintIntroducingTx,\n+              lastCommittedTxWhenTransactionStarted);\n         }\n     }\n \n-    void validateSchemaRule( SchemaRule schemaRule ) throws TransactionFailureException\n+    void validateSchemaRule(SchemaRule schemaRule) throws TransactionFailureException\n     {\n-        Preconditions.checkState( indexValidator != null, \"No index validator installed\" );\n-        if ( schemaRule instanceof ConstraintDescriptor )\n+        Preconditions.checkState(indexValidator != null, \"No index validator installed\");\n+        if (schemaRule instanceof ConstraintDescriptor)\n         {\n             ConstraintDescriptor constraint = (ConstraintDescriptor) schemaRule;\n-            if ( constraint.isIndexBackedConstraint() )\n+            if (constraint.isIndexBackedConstraint())\n             {\n                 long ownedIndex = constraint.asIndexBackedConstraint().ownedIndexId();\n                 try\n                 {\n-                    indexValidator.validateIndex( ownedIndex );\n-                }\n-                catch ( KernelException e )\n+                    indexValidator.validateIndex(ownedIndex);\n+                } catch (KernelException e)\n                 {\n                     // This could occur if there were concurrent violating transactions since the index population completed\n                     // but before being activated, e.g. transaction executed on another instance with a dated view of the world.\n@@ -102,8 +102,8 @@ class IntegrityValidator\n                     // The other alternative is that this is an unexpected exception and means we're in a very bad state - out of\n                     // disk or index corruption, or similar. This will kill the database such that it can be shut down\n                     // and have recovery performed. It's the safest bet to avoid loosing data.\n-                    throw new TransactionFailureException( Status.Transaction.TransactionValidationFailed, e,\n-                            \"Index validation of \" + schemaRule + \" failed, specifically for its owned index \" + ownedIndex, e );\n+                    throw new TransactionFailureException(Status.Transaction.TransactionValidationFailed, e,\n+                      \"Index validation of \" + schemaRule + \" failed, specifically for its owned index \" + ownedIndex, e);\n                 }\n             }\n         }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2192",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "35",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "11",
                    "severity": "error",
                    "message": "'}' at column 11 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "84",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "70",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "17",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "202",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2192/RotationState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2192/RotationState.java\nindex ad94e231dd1..5fddf145c07 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2192/RotationState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2192/RotationState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.kvstore;\n \n import java.io.File;\n@@ -30,204 +31,202 @@ import org.neo4j.helpers.collection.Pair;\n \n abstract class RotationState<Key> extends ProgressiveState<Key>\n {\n-    abstract ProgressiveState<Key> rotate( boolean force, RotationStrategy strategy, RotationTimerFactory timerFactory,\n-            Consumer<Headers.Builder> headersUpdater ) throws IOException;\n+  abstract ProgressiveState<Key> rotate(boolean force, RotationStrategy strategy, RotationTimerFactory timerFactory,\n+                                        Consumer<Headers.Builder> headersUpdater) throws IOException;\n+\n+  @Override\n+  String stateName()\n+  {\n+    return \"rotating\";\n+  }\n+\n+  abstract long rotationVersion();\n+\n+  /**\n+   * Marks state as failed and returns the state as it were before this state.\n+   *\n+   * @return previous state.\n+   */\n+  abstract ProgressiveState<Key> markAsFailed();\n+\n+  static final class Rotation<Key> extends RotationState<Key>\n+  {\n+    private final ActiveState<Key> preState;\n+    private final PrototypeState<Key> postState;\n+    private final long threshold;\n+    private boolean failed;\n+\n+    Rotation(ActiveState<Key> preState, PrototypeState<Key> postState, long version)\n+    {\n+      this.preState = preState;\n+      this.postState = postState;\n+      this.threshold = version;\n+    }\n \n     @Override\n-    String stateName()\n+    ActiveState<Key> rotate(boolean force, RotationStrategy strategy, RotationTimerFactory timerFactory,\n+                            Consumer<Headers.Builder> headersUpdater) throws IOException\n     {\n-        return \"rotating\";\n+      if (!force)\n+      {\n+        RotationTimerFactory.RotationTimer rotationTimer = timerFactory.createTimer();\n+        for (long expected = threshold - preState.store.version(), sleep = 10;\n+             preState.applied() < expected; sleep = Math.min(sleep * 2, 100))\n+        {\n+          if (rotationTimer.isTimedOut())\n+          {\n+            throw new RotationTimeoutException(threshold, preState.store.version(),\n+                rotationTimer.getElapsedTimeMillis());\n+          }\n+          try\n+          {\n+            Thread.sleep(sleep);\n+          } catch (InterruptedException e)\n+          {\n+            throw (InterruptedIOException) new InterruptedIOException(\"Rotation was interrupted.\")\n+                .initCause(e);\n+          }\n+        }\n+      }\n+      Pair<File, KeyValueStoreFile> next = strategy\n+          .next(file(), updateHeaders(headersUpdater), keyFormat().filter(preState.dataProvider()));\n+      return postState.create(ReadableState.store(preState.keyFormat(), next.other()), next.first(),\n+          preState.versionContextSupplier);\n     }\n \n-    abstract long rotationVersion();\n-\n-    /**\n-     * Marks state as failed and returns the state as it were before this state.\n-     *\n-     * @return previous state.\n-     */\n-    abstract ProgressiveState<Key> markAsFailed();\n-\n-    static final class Rotation<Key> extends RotationState<Key>\n+    @Override\n+    public void close() throws IOException\n     {\n-        private final ActiveState<Key> preState;\n-        private final PrototypeState<Key> postState;\n-        private final long threshold;\n-        private boolean failed;\n-\n-        Rotation( ActiveState<Key> preState, PrototypeState<Key> postState, long version )\n-        {\n-            this.preState = preState;\n-            this.postState = postState;\n-            this.threshold = version;\n-        }\n-\n-        @Override\n-        ActiveState<Key> rotate( boolean force, RotationStrategy strategy, RotationTimerFactory timerFactory,\n-                                Consumer<Headers.Builder> headersUpdater ) throws IOException\n-        {\n-            if ( !force )\n-            {\n-                RotationTimerFactory.RotationTimer rotationTimer = timerFactory.createTimer();\n-                for ( long expected = threshold - preState.store.version(), sleep = 10;\n-                      preState.applied() < expected; sleep = Math.min( sleep * 2, 100 ) )\n-                {\n-                    if ( rotationTimer.isTimedOut() )\n-                    {\n-                        throw new RotationTimeoutException( threshold, preState.store.version(),\n-                                rotationTimer.getElapsedTimeMillis() );\n-                    }\n-                    try\n-                    {\n-                        Thread.sleep( sleep );\n-                    }\n-                    catch ( InterruptedException e )\n-                    {\n-                        throw (InterruptedIOException) new InterruptedIOException( \"Rotation was interrupted.\" )\n-                                .initCause( e );\n-                    }\n-                }\n-            }\n-            Pair<File, KeyValueStoreFile> next = strategy\n-                    .next( file(), updateHeaders( headersUpdater ), keyFormat().filter( preState.dataProvider() ) );\n-            return postState.create( ReadableState.store( preState.keyFormat(), next.other() ), next.first(),\n-                    preState.versionContextSupplier );\n-        }\n-\n-        @Override\n-        public void close() throws IOException\n-        {\n-            if ( !failed )\n-            {\n-                // We can't just close the pre-state (the only good state right now) if the rotation failed.\n-                preState.close();\n-            }\n-        }\n+      if (!failed)\n+      {\n+        // We can't just close the pre-state (the only good state right now) if the rotation failed.\n+        preState.close();\n+      }\n+    }\n \n-        @Override\n-        ProgressiveState<Key> stop() throws IOException\n-        {\n-            if ( failed )\n-            {\n-                // failed to rotate allow for stopping no matter what\n-                return preState;\n-            }\n-            return super.stop();\n-        }\n+    @Override\n+    ProgressiveState<Key> stop() throws IOException\n+    {\n+      if (failed)\n+      {\n+        // failed to rotate allow for stopping no matter what\n+        return preState;\n+      }\n+      return super.stop();\n+    }\n \n-        @Override\n-        long rotationVersion()\n-        {\n-            return threshold;\n-        }\n+    @Override\n+    long rotationVersion()\n+    {\n+      return threshold;\n+    }\n \n-        private Headers updateHeaders( Consumer<Headers.Builder> headersUpdater )\n-        {\n-            Headers.Builder builder = new Headers.Builder( Headers.copy( preState.headers() ) );\n-            headersUpdater.accept( builder );\n-            return builder.headers();\n-        }\n+    private Headers updateHeaders(Consumer<Headers.Builder> headersUpdater)\n+    {\n+      Headers.Builder builder = new Headers.Builder(Headers.copy(preState.headers()));\n+      headersUpdater.accept(builder);\n+      return builder.headers();\n+    }\n \n-        @Override\n-        protected Optional<EntryUpdater<Key>> optionalUpdater( long version, Lock lock )\n-        {\n-            final EntryUpdater<Key> post = postState.updater( version, lock );\n-            if ( version <= threshold )\n-            {\n-                final EntryUpdater<Key> pre = preState.updater( version, lock );\n-                return Optional.of( new EntryUpdater<Key>( lock )\n-                {\n-                    @Override\n-                    public void apply( Key key, ValueUpdate update ) throws IOException\n-                    {\n-                        // Apply to the postState first, so that if the postState needs to read the state from the preState\n-                        // it will read the value prior to this update, then subsequent updates to the postState will not\n-                        // have to read from preState, ensuring that each update is applied exactly once to both preState\n-                        // and postState, which together with the commutativity of updates ensures consistent outcomes.\n-                        post.apply( key, update );\n-                        pre.apply( key, update );\n-                    }\n-\n-                    @Override\n-                    public void close()\n-                    {\n-                        post.close();\n-                        pre.close();\n-                        super.close();\n-                    }\n-                } );\n-            }\n-            else\n-            {\n-                return Optional.of( post );\n-            }\n-        }\n+    @Override\n+    protected Optional<EntryUpdater<Key>> optionalUpdater(long version, Lock lock)\n+    {\n+      final EntryUpdater<Key> post = postState.updater(version, lock);\n+      if (version <= threshold)\n+      {\n+        final EntryUpdater<Key> pre = preState.updater(version, lock);\n+        return Optional.of(new EntryUpdater<Key>(lock)\n+        {\n+          @Override\n+          public void apply(Key key, ValueUpdate update) throws IOException\n+          {\n+            // Apply to the postState first, so that if the postState needs to read the state from the preState\n+            // it will read the value prior to this update, then subsequent updates to the postState will not\n+            // have to read from preState, ensuring that each update is applied exactly once to both preState\n+            // and postState, which together with the commutativity of updates ensures consistent outcomes.\n+            post.apply(key, update);\n+            pre.apply(key, update);\n+          }\n+\n+          @Override\n+          public void close()\n+          {\n+            post.close();\n+            pre.close();\n+            super.close();\n+          }\n+        });\n+      } else\n+      {\n+        return Optional.of(post);\n+      }\n+    }\n \n-        @Override\n-        protected File file()\n-        {\n-            return preState.file();\n-        }\n+    @Override\n+    protected File file()\n+    {\n+      return preState.file();\n+    }\n \n-        @Override\n-        protected long storedVersion()\n-        {\n-            return preState.storedVersion();\n-        }\n+    @Override\n+    protected long storedVersion()\n+    {\n+      return preState.storedVersion();\n+    }\n \n-        @Override\n-        protected KeyFormat<Key> keyFormat()\n-        {\n-            return preState.keyFormat();\n-        }\n+    @Override\n+    protected KeyFormat<Key> keyFormat()\n+    {\n+      return preState.keyFormat();\n+    }\n \n-        @Override\n-        protected Headers headers()\n-        {\n-            return preState.headers();\n-        }\n+    @Override\n+    protected Headers headers()\n+    {\n+      return preState.headers();\n+    }\n \n-        @Override\n-        protected DataProvider dataProvider() throws IOException\n-        {\n-            return postState.dataProvider();\n-        }\n+    @Override\n+    protected DataProvider dataProvider() throws IOException\n+    {\n+      return postState.dataProvider();\n+    }\n \n-        @Override\n-        protected int storedEntryCount()\n-        {\n-            return postState.storedEntryCount();\n-        }\n+    @Override\n+    protected int storedEntryCount()\n+    {\n+      return postState.storedEntryCount();\n+    }\n \n-        @Override\n-        protected EntryUpdater<Key> unsafeUpdater( Lock lock )\n-        {\n-            return postState.unsafeUpdater( lock );\n-        }\n+    @Override\n+    protected EntryUpdater<Key> unsafeUpdater(Lock lock)\n+    {\n+      return postState.unsafeUpdater(lock);\n+    }\n \n-        @Override\n-        protected boolean hasChanges()\n-        {\n-            return preState.hasChanges() || postState.hasChanges();\n-        }\n+    @Override\n+    protected boolean hasChanges()\n+    {\n+      return preState.hasChanges() || postState.hasChanges();\n+    }\n \n-        @Override\n-        protected long version()\n-        {\n-            return postState.version();\n-        }\n+    @Override\n+    protected long version()\n+    {\n+      return postState.version();\n+    }\n \n-        @Override\n-        protected boolean lookup( Key key, ValueSink sink ) throws IOException\n-        {\n-            return postState.lookup( key, sink );\n-        }\n+    @Override\n+    protected boolean lookup(Key key, ValueSink sink) throws IOException\n+    {\n+      return postState.lookup(key, sink);\n+    }\n \n-        @Override\n-        ProgressiveState<Key> markAsFailed()\n-        {\n-            failed = true;\n-            return preState;\n-        }\n+    @Override\n+    ProgressiveState<Key> markAsFailed()\n+    {\n+      failed = true;\n+      return preState;\n     }\n+  }\n }\n",
            "diff_size": 234
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 182).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 171).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2192/RotationState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2192/RotationState.java\nindex ad94e231dd1..9ac45e11496 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2192/RotationState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2192/RotationState.java\n@@ -30,10 +30,9 @@ import org.neo4j.helpers.collection.Pair;\n \n abstract class RotationState<Key> extends ProgressiveState<Key>\n {\n-    abstract ProgressiveState<Key> rotate( boolean force, RotationStrategy strategy, RotationTimerFactory timerFactory,\n-            Consumer<Headers.Builder> headersUpdater ) throws IOException;\n+    abstract ProgressiveState<Key> rotate( boolean force, RotationStrategy strategy, RotationTimerFactory timerFactory, Consumer<Headers.Builder> headersUpdater ) throws IOException;\n \n-    @Override\n+@Override\n     String stateName()\n     {\n         return \"rotating\";\n@@ -63,35 +62,30 @@ abstract class RotationState<Key> extends ProgressiveState<Key>\n         }\n \n         @Override\n-        ActiveState<Key> rotate( boolean force, RotationStrategy strategy, RotationTimerFactory timerFactory,\n-                                Consumer<Headers.Builder> headersUpdater ) throws IOException\n-        {\n+        ActiveState<Key> rotate( boolean force, RotationStrategy strategy, RotationTimerFactory timerFactory, Consumer<Headers.Builder> headersUpdater ) throws IOException\n+{\n             if ( !force )\n             {\n                 RotationTimerFactory.RotationTimer rotationTimer = timerFactory.createTimer();\n-                for ( long expected = threshold - preState.store.version(), sleep = 10;\n-                      preState.applied() < expected; sleep = Math.min( sleep * 2, 100 ) )\n-                {\n+                for ( long expected = threshold - preState.store.version(), sleep = 10; preState.applied() < expected; sleep = Math.min( sleep * 2, 100 ) )\n+{\n                     if ( rotationTimer.isTimedOut() )\n                     {\n-                        throw new RotationTimeoutException( threshold, preState.store.version(),\n-                                rotationTimer.getElapsedTimeMillis() );\n+                        throw new RotationTimeoutException( threshold, preState.store.version(), rotationTimer.getElapsedTimeMillis() );\n                     }\n-                    try\n+\n+try\n                     {\n                         Thread.sleep( sleep );\n                     }\n                     catch ( InterruptedException e )\n                     {\n-                        throw (InterruptedIOException) new InterruptedIOException( \"Rotation was interrupted.\" )\n-                                .initCause( e );\n-                    }\n+                        throw (InterruptedIOException) new InterruptedIOException( \"Rotation was interrupted.\" ).initCause( e );\n+    }\n                 }\n             }\n-            Pair<File, KeyValueStoreFile> next = strategy\n-                    .next( file(), updateHeaders( headersUpdater ), keyFormat().filter( preState.dataProvider() ) );\n-            return postState.create( ReadableState.store( preState.keyFormat(), next.other() ), next.first(),\n-                    preState.versionContextSupplier );\n+            Pair<File,KeyValueStoreFile> next = strategy.next( file(), updateHeaders( headersUpdater ), keyFormat().filter( preState.dataProvider() ) );\n+return postState.create( ReadableState.store( preState.keyFormat(), next.other() ), next.first(), preState.versionContextSupplier );\n         }\n \n         @Override\n@@ -230,4 +224,4 @@ abstract class RotationState<Key> extends ProgressiveState<Key>\n             return preState;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "216",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "34",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "104",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "98",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "103",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "126",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "236",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "242",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "50",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "273",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "280",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "283",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "285",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "123",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "352",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "366",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "368",
                    "column": "22",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "372",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "379",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "383",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "387",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "391",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "395",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "400",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "436",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "440",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "450",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "452",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "457",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "469",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/216/TypeReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/216/TypeReference.java\nindex ec31cbe172a..2c5815a71fa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/216/TypeReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/216/TypeReference.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.codegen;\n \n import java.lang.reflect.Modifier;\n@@ -30,14 +31,14 @@ import org.neo4j.values.AnyValue;\n \n public class TypeReference\n {\n-    public static Bound extending( Class<?> type )\n+    public static Bound extending(Class<?> type)\n     {\n-        return extending( typeReference( type ) );\n+        return extending(typeReference(type));\n     }\n \n-    public static Bound extending( final TypeReference type )\n+    public static Bound extending(final TypeReference type)\n     {\n-        return new Bound( type )\n+        return new Bound(type)\n         {\n             @Override\n             public TypeReference extendsBound()\n@@ -53,164 +54,163 @@ public class TypeReference\n         };\n     }\n \n-    private static TypeReference primitiveType( Class<?> base )\n+    private static TypeReference primitiveType(Class<?> base)\n     {\n-        return new TypeReference( \"\", base.getSimpleName(),\n-                                  0, false, null, base.getModifiers() );\n+        return new TypeReference(\"\", base.getSimpleName(),\n+          0, false, null, base.getModifiers());\n     }\n \n-    private static TypeReference primitiveArray( Class<?> base, int arrayDepth )\n+    private static TypeReference primitiveArray(Class<?> base, int arrayDepth)\n     {\n         assert base.isPrimitive();\n \n-        return new TypeReference( \"\", base.getSimpleName(), arrayDepth, false, null, base.getModifiers() );\n+        return new TypeReference(\"\", base.getSimpleName(), arrayDepth, false, null, base.getModifiers());\n     }\n \n-    public static TypeReference typeReference( Class<?> type )\n+    public static TypeReference typeReference(Class<?> type)\n     {\n-        if ( type == void.class )\n+        if (type == void.class)\n         {\n             return VOID;\n         }\n-        if ( type == Object.class )\n+        if (type == Object.class)\n         {\n             return OBJECT;\n         }\n \n         Class<?> innerType = type;\n         int arrayDepth = 0;\n-        while ( innerType.isArray() )\n+        while (innerType.isArray())\n         {\n             innerType = innerType.getComponentType();\n             arrayDepth++;\n         }\n \n-        if ( innerType.isPrimitive() )\n+        if (innerType.isPrimitive())\n         {\n-            return arrayDepth > 0 ? primitiveArray( innerType, arrayDepth ) : primitiveType( innerType );\n-        }\n-        else\n+            return arrayDepth > 0 ? primitiveArray(innerType, arrayDepth) : primitiveType(innerType);\n+        } else\n         {\n             String packageName = \"\";\n             String name;\n             TypeReference declaringTypeReference = null;\n             Package typePackage = innerType.getPackage();\n-            if ( typePackage != null )\n+            if (typePackage != null)\n             {\n                 packageName = typePackage.getName();\n             }\n             Class<?> declaringClass = innerType.getDeclaringClass();\n-            if ( declaringClass != null )\n+            if (declaringClass != null)\n             {\n-                declaringTypeReference = typeReference( declaringClass );\n+                declaringTypeReference = typeReference(declaringClass);\n             }\n             name = innerType.getSimpleName();\n-            return new TypeReference( packageName, name, arrayDepth, false,\n-                                      declaringTypeReference, type.getModifiers() );\n+            return new TypeReference(packageName, name, arrayDepth, false,\n+              declaringTypeReference, type.getModifiers());\n         }\n \n     }\n \n-    public static TypeReference typeParameter( String name )\n+    public static TypeReference typeParameter(String name)\n     {\n-        return new TypeReference( \"\", name, 0, true, null, Modifier.PUBLIC );\n+        return new TypeReference(\"\", name, 0, true, null, Modifier.PUBLIC);\n     }\n \n-    public static TypeReference arrayOf( TypeReference type )\n+    public static TypeReference arrayOf(TypeReference type)\n     {\n-        return new TypeReference( type.packageName, type.name, type.arrayDepth + 1, false, type.declaringClass, type.modifiers );\n+        return new TypeReference(type.packageName, type.name, type.arrayDepth + 1, false, type.declaringClass, type.modifiers);\n     }\n \n-    public static TypeReference parameterizedType( Class<?> base, Class<?>... parameters )\n+    public static TypeReference parameterizedType(Class<?> base, Class<?>... parameters)\n     {\n-        return parameterizedType( typeReference( base ), typeReferences( parameters ) );\n+        return parameterizedType(typeReference(base), typeReferences(parameters));\n     }\n \n-    public static TypeReference parameterizedType( Class<?> base, TypeReference... parameters )\n+    public static TypeReference parameterizedType(Class<?> base, TypeReference... parameters)\n     {\n-        return parameterizedType( typeReference( base ), parameters );\n+        return parameterizedType(typeReference(base), parameters);\n     }\n \n-    public static TypeReference parameterizedType( TypeReference base, TypeReference... parameters )\n+    public static TypeReference parameterizedType(TypeReference base, TypeReference... parameters)\n     {\n-        return new TypeReference( base.packageName, base.name, base.arrayDepth, false,\n-                                  base.declaringClass,\n-                                  base.modifiers, parameters );\n+        return new TypeReference(base.packageName, base.name, base.arrayDepth, false,\n+          base.declaringClass,\n+          base.modifiers, parameters);\n     }\n \n-    public static TypeReference[] typeReferences( Class<?> first, Class<?>[] more )\n+    public static TypeReference[] typeReferences(Class<?> first, Class<?>[] more)\n     {\n         TypeReference[] result = new TypeReference[more.length + 1];\n-        result[0] = typeReference( first );\n-        for ( int i = 0; i < more.length; i++ )\n+        result[0] = typeReference(first);\n+        for (int i = 0; i < more.length; i++)\n         {\n-            result[i + 1] = typeReference( more[i] );\n+            result[i + 1] = typeReference(more[i]);\n         }\n         return result;\n     }\n \n-    public static TypeReference[] typeReferences( Class<?>[] types )\n+    public static TypeReference[] typeReferences(Class<?>[] types)\n     {\n         TypeReference[] result = new TypeReference[types.length];\n-        for ( int i = 0; i < result.length; i++ )\n+        for (int i = 0; i < result.length; i++)\n         {\n-            result[i] = typeReference( types[i] );\n+            result[i] = typeReference(types[i]);\n         }\n         return result;\n     }\n \n-    public static TypeReference toBoxedType( TypeReference in )\n+    public static TypeReference toBoxedType(TypeReference in)\n     {\n-        switch ( in.fullName() )\n+        switch (in.fullName())\n         {\n-        case \"byte\":\n-            return TypeReference.typeReference( Byte.class );\n-        case \"short\":\n-            return TypeReference.typeReference( Short.class );\n-        case \"int\":\n-            return TypeReference.typeReference( Integer.class );\n-        case \"long\":\n-            return TypeReference.typeReference( Long.class );\n-        case \"char\":\n-            return TypeReference.typeReference( Character.class );\n-        case \"boolean\":\n-            return TypeReference.typeReference( Boolean.class );\n-        case \"float\":\n-            return TypeReference.typeReference( Float.class );\n-        case \"double\":\n-            return TypeReference.typeReference( Double.class );\n-        default:\n-            return in;\n+            case \"byte\":\n+                return TypeReference.typeReference(Byte.class);\n+            case \"short\":\n+                return TypeReference.typeReference(Short.class);\n+            case \"int\":\n+                return TypeReference.typeReference(Integer.class);\n+            case \"long\":\n+                return TypeReference.typeReference(Long.class);\n+            case \"char\":\n+                return TypeReference.typeReference(Character.class);\n+            case \"boolean\":\n+                return TypeReference.typeReference(Boolean.class);\n+            case \"float\":\n+                return TypeReference.typeReference(Float.class);\n+            case \"double\":\n+                return TypeReference.typeReference(Double.class);\n+            default:\n+                return in;\n         }\n     }\n \n-    public static TypeReference toUnboxedType( TypeReference in )\n+    public static TypeReference toUnboxedType(TypeReference in)\n     {\n-        if ( in.isPrimitive() )\n+        if (in.isPrimitive())\n         {\n             return in;\n         }\n \n-        switch ( in.fullName() )\n+        switch (in.fullName())\n         {\n-        case \"java.lang.Byte\":\n-            return TypeReference.typeReference( byte.class );\n-        case \"java.lang.Short\":\n-            return TypeReference.typeReference( short.class );\n-        case \"java.lang.Integer\":\n-            return TypeReference.typeReference( int.class );\n-        case \"java.lang.Long\":\n-            return TypeReference.typeReference( long.class );\n-        case \"java.lang.Character\":\n-            return TypeReference.typeReference( char.class );\n-        case \"java.lang.Boolean\":\n-            return TypeReference.typeReference( boolean.class );\n-        case \"java.lang.Float\":\n-            return TypeReference.typeReference( float.class );\n-        case \"java.lang.Double\":\n-            return TypeReference.typeReference( double.class );\n-        default:\n-            throw new IllegalStateException( \"Cannot unbox \" + in.fullName() );\n+            case \"java.lang.Byte\":\n+                return TypeReference.typeReference(byte.class);\n+            case \"java.lang.Short\":\n+                return TypeReference.typeReference(short.class);\n+            case \"java.lang.Integer\":\n+                return TypeReference.typeReference(int.class);\n+            case \"java.lang.Long\":\n+                return TypeReference.typeReference(long.class);\n+            case \"java.lang.Character\":\n+                return TypeReference.typeReference(char.class);\n+            case \"java.lang.Boolean\":\n+                return TypeReference.typeReference(boolean.class);\n+            case \"java.lang.Float\":\n+                return TypeReference.typeReference(float.class);\n+            case \"java.lang.Double\":\n+                return TypeReference.typeReference(double.class);\n+            default:\n+                throw new IllegalStateException(\"Cannot unbox \" + in.fullName());\n         }\n     }\n \n@@ -223,31 +223,31 @@ public class TypeReference\n     private final int modifiers;\n \n     public static final TypeReference VOID =\n-            new TypeReference( \"\", \"void\", 0, false, null, void.class.getModifiers() );\n+      new TypeReference(\"\", \"void\", 0, false, null, void.class.getModifiers());\n     public static final TypeReference OBJECT =\n-            new TypeReference( \"java.lang\", \"Object\", 0, false, null, Object.class.getModifiers() );\n+      new TypeReference(\"java.lang\", \"Object\", 0, false, null, Object.class.getModifiers());\n     public static final TypeReference BOOLEAN =\n-            new TypeReference( \"\", \"boolean\", 0, false, null, boolean.class.getModifiers() );\n+      new TypeReference(\"\", \"boolean\", 0, false, null, boolean.class.getModifiers());\n     public static final TypeReference INT =\n-            new TypeReference( \"\", \"int\", 0, false, null, int.class.getModifiers() );\n+      new TypeReference(\"\", \"int\", 0, false, null, int.class.getModifiers());\n     public static final TypeReference LONG =\n-            new TypeReference( \"\", \"long\", 0, false, null, long.class.getModifiers() );\n+      new TypeReference(\"\", \"long\", 0, false, null, long.class.getModifiers());\n     public static final TypeReference DOUBLE =\n-            new TypeReference( \"\", \"double\", 0, false, null, double.class.getModifiers() );\n+      new TypeReference(\"\", \"double\", 0, false, null, double.class.getModifiers());\n     public static final TypeReference BOOLEAN_ARRAY =\n-            new TypeReference( \"\", \"boolean\", 1, false, null, boolean.class.getModifiers() );\n+      new TypeReference(\"\", \"boolean\", 1, false, null, boolean.class.getModifiers());\n     public static final TypeReference INT_ARRAY =\n-            new TypeReference( \"\", \"int\", 1, false, null, int.class.getModifiers() );\n+      new TypeReference(\"\", \"int\", 1, false, null, int.class.getModifiers());\n     public static final TypeReference LONG_ARRAY =\n-            new TypeReference( \"\", \"long\", 1, false, null, long.class.getModifiers() );\n+      new TypeReference(\"\", \"long\", 1, false, null, long.class.getModifiers());\n     public static final TypeReference DOUBLE_ARRAY =\n-            new TypeReference( \"\", \"double\", 1, false, null, double.class.getModifiers() );\n+      new TypeReference(\"\", \"double\", 1, false, null, double.class.getModifiers());\n     public static final TypeReference VALUE =\n-            new TypeReference( \"org.neo4j.values\", \"AnyValue\", 0, false, null, AnyValue.class.getModifiers() );\n+      new TypeReference(\"org.neo4j.values\", \"AnyValue\", 0, false, null, AnyValue.class.getModifiers());\n     static final TypeReference[] NO_TYPES = new TypeReference[0];\n \n-    TypeReference( String packageName, String name, int arrayDepth,\n-            boolean isTypeParameter, TypeReference declaringClass, int modifiers, TypeReference... parameters )\n+    TypeReference(String packageName, String name, int arrayDepth,\n+                  boolean isTypeParameter, TypeReference declaringClass, int modifiers, TypeReference... parameters)\n     {\n         this.packageName = packageName;\n         this.name = name;\n@@ -270,32 +270,31 @@ public class TypeReference\n \n     public String simpleName()\n     {\n-        StringBuilder builder = new StringBuilder( name );\n-        builder.append( \"[]\".repeat( Math.max( 0, arrayDepth ) ) );\n+        StringBuilder builder = new StringBuilder(name);\n+        builder.append(\"[]\".repeat(Math.max(0, arrayDepth)));\n         return builder.toString();\n     }\n \n     public boolean isPrimitive()\n     {\n-        if ( isArray() )\n+        if (isArray())\n         {\n             return false;\n-        }\n-        else\n+        } else\n         {\n-            switch ( name )\n+            switch (name)\n             {\n-            case \"int\":\n-            case \"byte\":\n-            case \"short\":\n-            case \"char\":\n-            case \"boolean\":\n-            case \"long\":\n-            case \"float\":\n-            case \"double\":\n-                return true;\n-            default:\n-                return false;\n+                case \"int\":\n+                case \"byte\":\n+                case \"short\":\n+                case \"char\":\n+                case \"boolean\":\n+                case \"long\":\n+                case \"float\":\n+                case \"double\":\n+                    return true;\n+                default:\n+                    return false;\n             }\n         }\n     }\n@@ -312,12 +311,12 @@ public class TypeReference\n \n     public List<TypeReference> parameters()\n     {\n-        return List.of( parameters );\n+        return List.of(parameters);\n     }\n \n     public String fullName()\n     {\n-        return writeTo( new StringBuilder() ).toString();\n+        return writeTo(new StringBuilder()).toString();\n     }\n \n     public boolean isArray()\n@@ -327,8 +326,8 @@ public class TypeReference\n \n     public TypeReference elementOfArray()\n     {\n-        Preconditions.checkState( isArray(), \"Should only be called on array\" );\n-        return new TypeReference( packageName, name, arrayDepth - 1, isTypeParameter, declaringClass, modifiers, parameters );\n+        Preconditions.checkState(isArray(), \"Should only be called on array\");\n+        return new TypeReference(packageName, name, arrayDepth - 1, isTypeParameter, declaringClass, modifiers, parameters);\n     }\n \n     int arrayDepth()\n@@ -350,9 +349,9 @@ public class TypeReference\n     {\n         LinkedList<TypeReference> parents = new LinkedList<>();\n         TypeReference parent = declaringClass;\n-        while ( parent != null )\n+        while (parent != null)\n         {\n-            parents.addFirst( parent );\n+            parents.addFirst(parent);\n             parent = parent.declaringClass;\n         }\n         return parents;\n@@ -364,45 +363,45 @@ public class TypeReference\n     }\n \n     @Override\n-    public boolean equals( Object o )\n+    public boolean equals(Object o)\n     {\n-        if ( this == o )\n+        if (this == o)\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+        if (o == null || getClass() != o.getClass())\n         {\n             return false;\n         }\n \n         TypeReference reference = (TypeReference) o;\n \n-        if ( arrayDepth != reference.arrayDepth )\n+        if (arrayDepth != reference.arrayDepth)\n         {\n             return false;\n         }\n-        if ( isTypeParameter != reference.isTypeParameter )\n+        if (isTypeParameter != reference.isTypeParameter)\n         {\n             return false;\n         }\n-        if ( modifiers != reference.modifiers )\n+        if (modifiers != reference.modifiers)\n         {\n             return false;\n         }\n-        if ( !Objects.equals( packageName, reference.packageName ) )\n+        if (!Objects.equals(packageName, reference.packageName))\n         {\n             return false;\n         }\n-        if ( !Objects.equals( name, reference.name ) )\n+        if (!Objects.equals(name, reference.name))\n         {\n             return false;\n         }\n         // Probably incorrect - comparing Object[] arrays with Arrays.equals\n-        if ( !Arrays.equals( parameters, reference.parameters ) )\n+        if (!Arrays.equals(parameters, reference.parameters))\n         {\n             return false;\n         }\n-        return Objects.equals( declaringClass, reference.declaringClass );\n+        return Objects.equals(declaringClass, reference.declaringClass);\n \n     }\n \n@@ -411,7 +410,7 @@ public class TypeReference\n     {\n         int result = packageName != null ? packageName.hashCode() : 0;\n         result = 31 * result + (name != null ? name.hashCode() : 0);\n-        result = 31 * result + Arrays.hashCode( parameters );\n+        result = 31 * result + Arrays.hashCode(parameters);\n         result = 31 * result + arrayDepth;\n         result = 31 * result + (isTypeParameter ? 1 : 0);\n         result = 31 * result + (declaringClass != null ? declaringClass.hashCode() : 0);\n@@ -421,45 +420,45 @@ public class TypeReference\n \n     String baseName()\n     {\n-        return writeBaseType( new StringBuilder() ).toString();\n+        return writeBaseType(new StringBuilder()).toString();\n     }\n \n     @Override\n     public String toString()\n     {\n-        return writeTo( new StringBuilder().append( \"TypeReference[\" ) ).append( ']' ).toString();\n+        return writeTo(new StringBuilder().append(\"TypeReference[\")).append(']').toString();\n     }\n \n-    StringBuilder writeTo( StringBuilder result )\n+    StringBuilder writeTo(StringBuilder result)\n     {\n-        writeBaseType( result );\n-        result.append( \"[]\".repeat( Math.max( 0, arrayDepth ) ) );\n-        if ( !(parameters == null || parameters.length == 0) )\n+        writeBaseType(result);\n+        result.append(\"[]\".repeat(Math.max(0, arrayDepth)));\n+        if (!(parameters == null || parameters.length == 0))\n         {\n-            result.append( '<' );\n+            result.append('<');\n             String sep = \"\";\n-            for ( TypeReference parameter : parameters )\n+            for (TypeReference parameter : parameters)\n             {\n-                parameter.writeTo( result.append( sep ) );\n+                parameter.writeTo(result.append(sep));\n                 sep = \",\";\n             }\n-            result.append( '>' );\n+            result.append('>');\n         }\n         return result;\n     }\n \n-    private StringBuilder writeBaseType( StringBuilder result )\n+    private StringBuilder writeBaseType(StringBuilder result)\n     {\n-        if ( !packageName.isEmpty() )\n+        if (!packageName.isEmpty())\n         {\n-            result.append( packageName ).append( '.' );\n+            result.append(packageName).append('.');\n         }\n         List<TypeReference> parents = declaringClasses();\n-        for ( TypeReference parent : parents )\n+        for (TypeReference parent : parents)\n         {\n-            result.append( parent.name ).append( '.' );\n+            result.append(parent.name).append('.');\n         }\n-        result.append( name );\n+        result.append(name);\n         return result;\n     }\n \n@@ -467,7 +466,7 @@ public class TypeReference\n     {\n         private final TypeReference type;\n \n-        private Bound( TypeReference type )\n+        private Bound(TypeReference type)\n         {\n             this.type = type;\n         }\n",
            "diff_size": 147
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/216/TypeReference.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/216/TypeReference.java\nindex ec31cbe172a..ee11dce11d1 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/216/TypeReference.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/216/TypeReference.java\n@@ -403,7 +403,6 @@ public class TypeReference\n             return false;\n         }\n         return Objects.equals( declaringClass, reference.declaringClass );\n-\n     }\n \n     @Override\n@@ -476,4 +475,4 @@ public class TypeReference\n \n         public abstract TypeReference superBound();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
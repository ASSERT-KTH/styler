{
    "project_name": "neo4j-neo4j",
    "error_id": "875",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "72",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "84",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/875/HttpTransactionManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/875/HttpTransactionManager.java\nindex a6b463917eb..7e4e61bf694 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/875/HttpTransactionManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/875/HttpTransactionManager.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.http.cypher;\n \n import java.time.Clock;\n@@ -46,14 +47,14 @@ public class HttpTransactionManager\n     private final DatabaseManagementService managementService;\n     private final JobScheduler jobScheduler;\n \n-    public HttpTransactionManager( DatabaseManagementService managementService, JobScheduler jobScheduler, Clock clock, Duration transactionTimeout,\n-            LogProvider userLogProvider )\n+    public HttpTransactionManager(DatabaseManagementService managementService, JobScheduler jobScheduler, Clock clock, Duration transactionTimeout,\n+                                  LogProvider userLogProvider)\n     {\n         this.managementService = managementService;\n         this.jobScheduler = jobScheduler;\n \n-        transactionRegistry = new TransactionHandleRegistry( clock, transactionTimeout, userLogProvider );\n-        scheduleTransactionTimeout( transactionTimeout );\n+        transactionRegistry = new TransactionHandleRegistry(clock, transactionTimeout, userLogProvider);\n+        scheduleTransactionTimeout(transactionTimeout);\n     }\n \n     /**\n@@ -62,14 +63,13 @@ public class HttpTransactionManager\n      * @param databaseName database name.\n      * @return a transaction facade or {@code null} if a database with the supplied database name does not exist.\n      */\n-    public Optional<GraphDatabaseAPI> getGraphDatabaseAPI( String databaseName )\n+    public Optional<GraphDatabaseAPI> getGraphDatabaseAPI(String databaseName)\n     {\n         Optional<GraphDatabaseAPI> database;\n         try\n         {\n-            database = Optional.of( (GraphDatabaseAPI) managementService.database( databaseName ) );\n-        }\n-        catch ( DatabaseNotFoundException e )\n+            database = Optional.of((GraphDatabaseAPI) managementService.database(databaseName));\n+        } catch (DatabaseNotFoundException e)\n         {\n             database = Optional.empty();\n         }\n@@ -81,24 +81,24 @@ public class HttpTransactionManager\n         return transactionRegistry;\n     }\n \n-    public TransactionFacade createTransactionFacade( GraphDatabaseAPI databaseAPI )\n+    public TransactionFacade createTransactionFacade(GraphDatabaseAPI databaseAPI)\n     {\n         DependencyResolver dependencyResolver = databaseAPI.getDependencyResolver();\n \n-        return new TransactionFacade( databaseAPI,\n-                dependencyResolver.resolveDependency( QueryExecutionEngine.class ), transactionRegistry );\n+        return new TransactionFacade(databaseAPI,\n+          dependencyResolver.resolveDependency(QueryExecutionEngine.class), transactionRegistry);\n     }\n \n-    private void scheduleTransactionTimeout( Duration timeout )\n+    private void scheduleTransactionTimeout(Duration timeout)\n     {\n         Clock clock = Clocks.systemClock();\n \n         long timeoutMillis = timeout.toMillis();\n-        long runEvery = round( timeoutMillis / 2.0 );\n-        jobScheduler.scheduleRecurring( Group.SERVER_TRANSACTION_TIMEOUT, systemJob( \"Timeout of HTTP transactions\" ), () ->\n+        long runEvery = round(timeoutMillis / 2.0);\n+        jobScheduler.scheduleRecurring(Group.SERVER_TRANSACTION_TIMEOUT, systemJob(\"Timeout of HTTP transactions\"), () ->\n         {\n             long maxAge = clock.millis() - timeoutMillis;\n-            transactionRegistry.rollbackSuspendedTransactionsIdleSince( maxAge );\n-        }, runEvery, MILLISECONDS );\n+            transactionRegistry.rollbackSuspendedTransactionsIdleSince(maxAge);\n+        }, runEvery, MILLISECONDS);\n     }\n }\n",
            "diff_size": 17
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "1505",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "77",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "89",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "91",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "124",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "136",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "138",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "155",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "157",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "158",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "180",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "180",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "183",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "183",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "211",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "214",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "214",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "231",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "251",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "254",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "256",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "282",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "285",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "285",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "293",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "303",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "313",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "318",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "322",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "322",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "322",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "324",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "328",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "331",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "348",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "348",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "367",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "373",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "373",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "386",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "392",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "403",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "409",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "414",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "420",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "420",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "422",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "432",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "435",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "449",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "456",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "461",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "465",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "465",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "467",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "471",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "476",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "480",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1505/EventSourceSerializer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1505/EventSourceSerializer.java\nindex fc089c38b33..dcb42ee50ef 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/1505/EventSourceSerializer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/1505/EventSourceSerializer.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.http.cypher.format.output.eventsource;\n \n import com.fasterxml.jackson.core.JsonFactory;\n@@ -68,187 +69,178 @@ class EventSourceSerializer\n     /**\n      * The original parameters from the {@link org.neo4j.server.http.cypher.format.api.OutputEventSource}.\n      */\n-    private final Map<String,Object> parameters;\n+    private final Map<String, Object> parameters;\n \n     private final EventSourceWriter writer;\n     private InputStatement inputStatement;\n \n-    EventSourceSerializer( TransactionHandle transactionHandle, Map<String,Object> parameters, Class<? extends ObjectCodec> classOfCodec,\n-                           boolean isStrictMode, JsonFactory jsonFactory, OutputStream output )\n+    EventSourceSerializer(TransactionHandle transactionHandle, Map<String, Object> parameters, Class<? extends ObjectCodec> classOfCodec,\n+                          boolean isStrictMode, JsonFactory jsonFactory, OutputStream output)\n     {\n         this.parameters = parameters;\n         this.transactionHandle = transactionHandle;\n         this.output = output;\n         this.writer = new EventSourceWriter();\n \n-        ObjectCodec codec = instantiateCodec( isStrictMode, classOfCodec );\n-        this.jsonGenerator = createGenerator( jsonFactory, codec, output );\n+        ObjectCodec codec = instantiateCodec(isStrictMode, classOfCodec);\n+        this.jsonGenerator = createGenerator(jsonFactory, codec, output);\n     }\n \n-    public final void handleEvent( OutputEvent event )\n+    public final void handleEvent(OutputEvent event)\n     {\n-        switch ( event.getType() )\n-        {\n-        case STATEMENT_START:\n-            StatementStartEvent statementStartEvent = (StatementStartEvent) event;\n-            InputStatement inputStatement = JsonMessageBodyReader.getInputStatement( parameters, statementStartEvent.getStatement() );\n-            writeStatementStart( statementStartEvent, inputStatement );\n-            break;\n-        case RECORD:\n-            writeRecord( (RecordEvent) event );\n-            break;\n-        case STATEMENT_END:\n-            StatementEndEvent statementEndEvent = (StatementEndEvent) event;\n-            writeStatementEnd( statementEndEvent );\n-            break;\n-        case FAILURE:\n-            FailureEvent failureEvent = (FailureEvent) event;\n-            writeFailure( failureEvent );\n-            break;\n-        case TRANSACTION_INFO:\n-            TransactionInfoEvent transactionInfoEvent = (TransactionInfoEvent) event;\n-            writeTransactionInfo( transactionInfoEvent );\n-            break;\n-        default:\n-            throw new IllegalStateException( \"Unsupported event encountered:\" + event.getType() );\n+        switch (event.getType())\n+        {\n+            case STATEMENT_START:\n+                StatementStartEvent statementStartEvent = (StatementStartEvent) event;\n+                InputStatement inputStatement = JsonMessageBodyReader.getInputStatement(parameters, statementStartEvent.getStatement());\n+                writeStatementStart(statementStartEvent, inputStatement);\n+                break;\n+            case RECORD:\n+                writeRecord((RecordEvent) event);\n+                break;\n+            case STATEMENT_END:\n+                StatementEndEvent statementEndEvent = (StatementEndEvent) event;\n+                writeStatementEnd(statementEndEvent);\n+                break;\n+            case FAILURE:\n+                FailureEvent failureEvent = (FailureEvent) event;\n+                writeFailure(failureEvent);\n+                break;\n+            case TRANSACTION_INFO:\n+                TransactionInfoEvent transactionInfoEvent = (TransactionInfoEvent) event;\n+                writeTransactionInfo(transactionInfoEvent);\n+                break;\n+            default:\n+                throw new IllegalStateException(\"Unsupported event encountered:\" + event.getType());\n         }\n     }\n \n-    private static ObjectCodec instantiateCodec( boolean isStrictMode, Class<? extends ObjectCodec> classOfCodec )\n+    private static ObjectCodec instantiateCodec(boolean isStrictMode, Class<? extends ObjectCodec> classOfCodec)\n     {\n         try\n         {\n-            var ctor = classOfCodec.getConstructor( Boolean.TYPE );\n-            return ctor.newInstance( isStrictMode );\n-        }\n-        catch ( NoSuchMethodException | InstantiationException | IllegalAccessException | InvocationTargetException e )\n+            var ctor = classOfCodec.getConstructor(Boolean.TYPE);\n+            return ctor.newInstance(isStrictMode);\n+        } catch (NoSuchMethodException | InstantiationException | IllegalAccessException | InvocationTargetException e)\n         {\n-            throw new IllegalStateException( \"Failed to create result mapper\", e );\n+            throw new IllegalStateException(\"Failed to create result mapper\", e);\n         }\n     }\n \n-    private static JsonGenerator createGenerator( JsonFactory jsonFactory, ObjectCodec codec, OutputStream output )\n+    private static JsonGenerator createGenerator(JsonFactory jsonFactory, ObjectCodec codec, OutputStream output)\n     {\n         try\n         {\n             // we set the RootValueSeparator here to empty string to avoid extra spaces between root objects\n-            return jsonFactory.copy().setRootValueSeparator( \"\" ).setCodec( codec ).createGenerator( output );\n-        }\n-        catch ( IOException e )\n+            return jsonFactory.copy().setRootValueSeparator(\"\").setCodec(codec).createGenerator(output);\n+        } catch (IOException e)\n         {\n-            throw new IllegalStateException( \"Failed to create JSON generator\", e );\n+            throw new IllegalStateException(\"Failed to create JSON generator\", e);\n         }\n     }\n \n-    void writeStatementStart( StatementStartEvent statementStartEvent, InputStatement inputStatement )\n+    void writeStatementStart(StatementStartEvent statementStartEvent, InputStatement inputStatement)\n     {\n         this.inputStatement = inputStatement;\n         try\n         {\n             jsonGenerator.writeStartObject();\n-            jsonGenerator.writeFieldName( \"header\" );\n+            jsonGenerator.writeFieldName(\"header\");\n             jsonGenerator.writeStartObject();\n             Iterable<String> columns = statementStartEvent.getColumns();\n-            writeColumns( columns );\n+            writeColumns(columns);\n             jsonGenerator.writeEndObject();\n             jsonGenerator.writeEndObject();\n             flush();\n-        }\n-        catch ( JsonGenerationException e )\n+        } catch (JsonGenerationException e)\n         {\n-            throw new IllegalStateException( e );\n-        }\n-        catch ( IOException e )\n+            throw new IllegalStateException(e);\n+        } catch (IOException e)\n         {\n-            throw new ConnectionException( \"Failed to write to the connection\", e );\n+            throw new ConnectionException(\"Failed to write to the connection\", e);\n         }\n     }\n \n-    void writeRecord( RecordEvent recordEvent )\n+    void writeRecord(RecordEvent recordEvent)\n     {\n         try\n         {\n-            TransactionStateChecker txStateChecker = TransactionStateChecker.create( transactionHandle.getContext() );\n+            TransactionStateChecker txStateChecker = TransactionStateChecker.create(transactionHandle.getContext());\n             jsonGenerator.writeStartObject();\n-            jsonGenerator.writeFieldName( \"data\" );\n+            jsonGenerator.writeFieldName(\"data\");\n \n             try\n             {\n-                writer.write( jsonGenerator, recordEvent, txStateChecker );\n-            }\n-            finally\n+                writer.write(jsonGenerator, recordEvent, txStateChecker);\n+            } finally\n             {\n                 jsonGenerator.writeEndObject();\n                 flush();\n             }\n-        }\n-        catch ( JsonGenerationException e )\n+        } catch (JsonGenerationException e)\n         {\n-            throw new IllegalStateException( e );\n-        }\n-        catch ( IOException e )\n+            throw new IllegalStateException(e);\n+        } catch (IOException e)\n         {\n-            throw new ConnectionException( \"Failed to write to the connection\", e );\n+            throw new ConnectionException(\"Failed to write to the connection\", e);\n         }\n     }\n \n-    void writeStatementEnd( StatementEndEvent statementEndEvent )\n+    void writeStatementEnd(StatementEndEvent statementEndEvent)\n     {\n         try\n         {\n             jsonGenerator.writeStartObject();\n-            jsonGenerator.writeFieldName( \"summary\" );\n+            jsonGenerator.writeFieldName(\"summary\");\n             jsonGenerator.writeStartObject();\n \n-            if ( inputStatement.includeStats() )\n+            if (inputStatement.includeStats())\n             {\n-                writeStats( statementEndEvent.getQueryStatistics() );\n+                writeStats(statementEndEvent.getQueryStatistics());\n             }\n-            if ( statementEndEvent.getQueryExecutionType().requestedExecutionPlanDescription() )\n+            if (statementEndEvent.getQueryExecutionType().requestedExecutionPlanDescription())\n             {\n-                writeRootPlanDescription( statementEndEvent.getExecutionPlanDescription() );\n+                writeRootPlanDescription(statementEndEvent.getExecutionPlanDescription());\n             }\n \n             jsonGenerator.writeEndObject();\n             jsonGenerator.writeEndObject();\n \n-            statementEndEvent.getNotifications().forEach( notifications::add );\n+            statementEndEvent.getNotifications().forEach(notifications::add);\n             flush();\n-        }\n-        catch ( JsonGenerationException e )\n+        } catch (JsonGenerationException e)\n         {\n-            throw new IllegalStateException( e );\n-        }\n-        catch ( IOException e )\n+            throw new IllegalStateException(e);\n+        } catch (IOException e)\n         {\n-            throw new ConnectionException( \"Failed to write to the connection\", e );\n+            throw new ConnectionException(\"Failed to write to the connection\", e);\n         }\n     }\n \n-    void writeTransactionInfo( TransactionInfoEvent transactionInfoEvent )\n+    void writeTransactionInfo(TransactionInfoEvent transactionInfoEvent)\n     {\n         try\n         {\n             writeErrorWrapper();\n             jsonGenerator.writeStartObject();\n-            jsonGenerator.writeFieldName( \"info\" );\n+            jsonGenerator.writeFieldName(\"info\");\n             jsonGenerator.writeStartObject();\n \n             writeNotifications();\n \n-            if ( transactionInfoEvent.getCommitUri() != null )\n+            if (transactionInfoEvent.getCommitUri() != null)\n             {\n-                jsonGenerator.writeStringField( \"commit\", transactionInfoEvent.getCommitUri().toString() );\n+                jsonGenerator.writeStringField(\"commit\", transactionInfoEvent.getCommitUri().toString());\n             }\n-            if ( transactionInfoEvent.getNotification() == OPEN )\n+            if (transactionInfoEvent.getNotification() == OPEN)\n             {\n-                jsonGenerator.writeObjectFieldStart( \"transaction\" );\n-                if ( transactionInfoEvent.getExpirationTimestamp() >= 0 )\n+                jsonGenerator.writeObjectFieldStart(\"transaction\");\n+                if (transactionInfoEvent.getExpirationTimestamp() >= 0)\n                 {\n-                    String expires = Instant.ofEpochMilli( transactionInfoEvent.getExpirationTimestamp() )\n-                                            .atZone( ZoneId.of( \"GMT\" ) )\n-                                            .format( DateTimeFormatter.RFC_1123_DATE_TIME );\n-                    jsonGenerator.writeStringField( \"expires\", expires );\n+                    String expires = Instant.ofEpochMilli(transactionInfoEvent.getExpirationTimestamp())\n+                      .atZone(ZoneId.of(\"GMT\"))\n+                      .format(DateTimeFormatter.RFC_1123_DATE_TIME);\n+                    jsonGenerator.writeStringField(\"expires\", expires);\n                 }\n                 jsonGenerator.writeEndObject();\n             }\n@@ -256,26 +248,24 @@ class EventSourceSerializer\n             jsonGenerator.writeEndObject();\n             jsonGenerator.writeEndObject();\n             flush();\n-        }\n-        catch ( JsonGenerationException e )\n+        } catch (JsonGenerationException e)\n         {\n-            throw new IllegalStateException( e );\n-        }\n-        catch ( IOException e )\n+            throw new IllegalStateException(e);\n+        } catch (IOException e)\n         {\n-            throw new ConnectionException( \"Failed to write to the connection\", e );\n+            throw new ConnectionException(\"Failed to write to the connection\", e);\n         }\n     }\n \n-    void writeFailure( FailureEvent failureEvent )\n+    void writeFailure(FailureEvent failureEvent)\n     {\n         // We collect the errors up to emit before TransactionInfoEvent\n-        errors.add( failureEvent );\n+        errors.add(failureEvent);\n     }\n \n     void writeErrorWrapper()\n     {\n-        if ( errors.isEmpty() )\n+        if (errors.isEmpty())\n         {\n             return;\n         }\n@@ -283,179 +273,168 @@ class EventSourceSerializer\n         try\n         {\n             jsonGenerator.writeStartObject();\n-            jsonGenerator.writeFieldName( \"error\" );\n+            jsonGenerator.writeFieldName(\"error\");\n             jsonGenerator.writeStartObject();\n             writeErrors();\n             jsonGenerator.writeEndObject();\n             jsonGenerator.writeEndObject();\n             flush();\n-        }\n-        catch ( JsonGenerationException e )\n+        } catch (JsonGenerationException e)\n         {\n-            throw new IllegalStateException( e );\n-        }\n-        catch ( IOException e )\n+            throw new IllegalStateException(e);\n+        } catch (IOException e)\n         {\n-            throw new ConnectionException( \"Failed to write to the connection\", e );\n+            throw new ConnectionException(\"Failed to write to the connection\", e);\n         }\n     }\n \n     private void writeNotifications()\n     {\n-        if ( notifications.isEmpty() )\n+        if (notifications.isEmpty())\n         {\n             return;\n         }\n \n         try\n         {\n-            jsonGenerator.writeArrayFieldStart( \"notifications\" );\n+            jsonGenerator.writeArrayFieldStart(\"notifications\");\n             try\n             {\n-                for ( Notification notification : notifications )\n+                for (Notification notification : notifications)\n                 {\n                     jsonGenerator.writeStartObject();\n                     try\n                     {\n-                        jsonGenerator.writeStringField( \"code\", notification.getCode() );\n-                        jsonGenerator.writeStringField( \"severity\", notification.getSeverity().toString() );\n-                        jsonGenerator.writeStringField( \"title\", notification.getTitle() );\n-                        jsonGenerator.writeStringField( \"description\", notification.getDescription() );\n-                        writePosition( notification.getPosition() );\n-                    }\n-                    finally\n+                        jsonGenerator.writeStringField(\"code\", notification.getCode());\n+                        jsonGenerator.writeStringField(\"severity\", notification.getSeverity().toString());\n+                        jsonGenerator.writeStringField(\"title\", notification.getTitle());\n+                        jsonGenerator.writeStringField(\"description\", notification.getDescription());\n+                        writePosition(notification.getPosition());\n+                    } finally\n                     {\n                         jsonGenerator.writeEndObject();\n                     }\n                 }\n-            }\n-            finally\n+            } finally\n             {\n                 jsonGenerator.writeEndArray();\n             }\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n-            throw new ConnectionException( \"Failed to write to the response stream\", e );\n+            throw new ConnectionException(\"Failed to write to the response stream\", e);\n         }\n     }\n \n-    private void writePosition( InputPosition position ) throws IOException\n+    private void writePosition(InputPosition position) throws IOException\n     {\n         //do not add position if empty\n-        if ( position == InputPosition.empty )\n+        if (position == InputPosition.empty)\n         {\n             return;\n         }\n \n-        jsonGenerator.writeObjectFieldStart( \"position\" );\n+        jsonGenerator.writeObjectFieldStart(\"position\");\n         try\n         {\n-            jsonGenerator.writeNumberField( \"offset\", position.getOffset() );\n-            jsonGenerator.writeNumberField( \"line\", position.getLine() );\n-            jsonGenerator.writeNumberField( \"column\", position.getColumn() );\n-        }\n-        finally\n+            jsonGenerator.writeNumberField(\"offset\", position.getOffset());\n+            jsonGenerator.writeNumberField(\"line\", position.getLine());\n+            jsonGenerator.writeNumberField(\"column\", position.getColumn());\n+        } finally\n         {\n             jsonGenerator.writeEndObject();\n         }\n     }\n \n-    private void writeStats( QueryStatistics stats ) throws IOException\n+    private void writeStats(QueryStatistics stats) throws IOException\n     {\n-        jsonGenerator.writeObjectFieldStart( \"stats\" );\n+        jsonGenerator.writeObjectFieldStart(\"stats\");\n         try\n         {\n-            jsonGenerator.writeBooleanField( \"contains_updates\", stats.containsUpdates() );\n-            jsonGenerator.writeNumberField( \"nodes_created\", stats.getNodesCreated() );\n-            jsonGenerator.writeNumberField( \"nodes_deleted\", stats.getNodesDeleted() );\n-            jsonGenerator.writeNumberField( \"properties_set\", stats.getPropertiesSet() );\n-            jsonGenerator.writeNumberField( \"relationships_created\", stats.getRelationshipsCreated() );\n-            jsonGenerator.writeNumberField( \"relationship_deleted\", stats.getRelationshipsDeleted() );\n-            jsonGenerator.writeNumberField( \"labels_added\", stats.getLabelsAdded() );\n-            jsonGenerator.writeNumberField( \"labels_removed\", stats.getLabelsRemoved() );\n-            jsonGenerator.writeNumberField( \"indexes_added\", stats.getIndexesAdded() );\n-            jsonGenerator.writeNumberField( \"indexes_removed\", stats.getIndexesRemoved() );\n-            jsonGenerator.writeNumberField( \"constraints_added\", stats.getConstraintsAdded() );\n-            jsonGenerator.writeNumberField( \"constraints_removed\", stats.getConstraintsRemoved() );\n-            jsonGenerator.writeBooleanField( \"contains_system_updates\", stats.containsSystemUpdates() );\n-            jsonGenerator.writeNumberField( \"system_updates\", stats.getSystemUpdates() );\n-        }\n-        finally\n+            jsonGenerator.writeBooleanField(\"contains_updates\", stats.containsUpdates());\n+            jsonGenerator.writeNumberField(\"nodes_created\", stats.getNodesCreated());\n+            jsonGenerator.writeNumberField(\"nodes_deleted\", stats.getNodesDeleted());\n+            jsonGenerator.writeNumberField(\"properties_set\", stats.getPropertiesSet());\n+            jsonGenerator.writeNumberField(\"relationships_created\", stats.getRelationshipsCreated());\n+            jsonGenerator.writeNumberField(\"relationship_deleted\", stats.getRelationshipsDeleted());\n+            jsonGenerator.writeNumberField(\"labels_added\", stats.getLabelsAdded());\n+            jsonGenerator.writeNumberField(\"labels_removed\", stats.getLabelsRemoved());\n+            jsonGenerator.writeNumberField(\"indexes_added\", stats.getIndexesAdded());\n+            jsonGenerator.writeNumberField(\"indexes_removed\", stats.getIndexesRemoved());\n+            jsonGenerator.writeNumberField(\"constraints_added\", stats.getConstraintsAdded());\n+            jsonGenerator.writeNumberField(\"constraints_removed\", stats.getConstraintsRemoved());\n+            jsonGenerator.writeBooleanField(\"contains_system_updates\", stats.containsSystemUpdates());\n+            jsonGenerator.writeNumberField(\"system_updates\", stats.getSystemUpdates());\n+        } finally\n         {\n             jsonGenerator.writeEndObject();\n         }\n     }\n \n-    private void writeRootPlanDescription( ExecutionPlanDescription planDescription ) throws IOException\n+    private void writeRootPlanDescription(ExecutionPlanDescription planDescription) throws IOException\n     {\n-        jsonGenerator.writeObjectFieldStart( \"plan\" );\n+        jsonGenerator.writeObjectFieldStart(\"plan\");\n         try\n         {\n-            jsonGenerator.writeObjectFieldStart( \"root\" );\n+            jsonGenerator.writeObjectFieldStart(\"root\");\n             try\n             {\n-                writePlanDescriptionObjectBody( planDescription );\n-            }\n-            finally\n+                writePlanDescriptionObjectBody(planDescription);\n+            } finally\n             {\n                 jsonGenerator.writeEndObject();\n             }\n-        }\n-        finally\n+        } finally\n         {\n             jsonGenerator.writeEndObject();\n         }\n     }\n \n-    private void writePlanDescriptionObjectBody( ExecutionPlanDescription planDescription ) throws IOException\n+    private void writePlanDescriptionObjectBody(ExecutionPlanDescription planDescription) throws IOException\n     {\n-        jsonGenerator.writeFieldName( \"operatorType\" );\n-        jsonGenerator.writeObject( planDescription.getName() );\n-        writePlanArgs( planDescription );\n-        writePlanIdentifiers( planDescription );\n+        jsonGenerator.writeFieldName(\"operatorType\");\n+        jsonGenerator.writeObject(planDescription.getName());\n+        writePlanArgs(planDescription);\n+        writePlanIdentifiers(planDescription);\n \n         List<ExecutionPlanDescription> children = planDescription.getChildren();\n-        jsonGenerator.writeArrayFieldStart( \"children\" );\n+        jsonGenerator.writeArrayFieldStart(\"children\");\n         try\n         {\n-            for ( ExecutionPlanDescription child : children )\n+            for (ExecutionPlanDescription child : children)\n             {\n                 jsonGenerator.writeStartObject();\n                 try\n                 {\n-                    writePlanDescriptionObjectBody( child );\n-                }\n-                finally\n+                    writePlanDescriptionObjectBody(child);\n+                } finally\n                 {\n                     jsonGenerator.writeEndObject();\n                 }\n             }\n-        }\n-        finally\n+        } finally\n         {\n             jsonGenerator.writeEndArray();\n         }\n     }\n \n-    private void writePlanArgs( ExecutionPlanDescription planDescription ) throws IOException\n+    private void writePlanArgs(ExecutionPlanDescription planDescription) throws IOException\n     {\n-        for ( Map.Entry<String,Object> entry : planDescription.getArguments().entrySet() )\n+        for (Map.Entry<String, Object> entry : planDescription.getArguments().entrySet())\n         {\n             String fieldName = entry.getKey();\n             Object fieldValue = entry.getValue();\n \n-            jsonGenerator.writeFieldName( fieldName );\n-            jsonGenerator.writeObject( fieldValue );\n+            jsonGenerator.writeFieldName(fieldName);\n+            jsonGenerator.writeObject(fieldValue);\n         }\n     }\n \n-    private void writePlanIdentifiers( ExecutionPlanDescription planDescription ) throws IOException\n+    private void writePlanIdentifiers(ExecutionPlanDescription planDescription) throws IOException\n     {\n-        jsonGenerator.writeArrayFieldStart( \"identifiers\" );\n-        for ( String id : planDescription.getIdentifiers() )\n+        jsonGenerator.writeArrayFieldStart(\"identifiers\");\n+        for (String id : planDescription.getIdentifiers())\n         {\n-            jsonGenerator.writeObject( id );\n+            jsonGenerator.writeObject(id);\n         }\n         jsonGenerator.writeEndArray();\n     }\n@@ -464,45 +443,41 @@ class EventSourceSerializer\n     {\n         try\n         {\n-            jsonGenerator.writeArrayFieldStart( \"errors\" );\n+            jsonGenerator.writeArrayFieldStart(\"errors\");\n             try\n             {\n-                for ( FailureEvent error : errors )\n+                for (FailureEvent error : errors)\n                 {\n                     try\n                     {\n                         jsonGenerator.writeStartObject();\n-                        jsonGenerator.writeObjectField( \"code\", error.getStatus().code().serialize() );\n-                        jsonGenerator.writeObjectField( \"message\", error.getMessage() );\n-                    }\n-                    finally\n+                        jsonGenerator.writeObjectField(\"code\", error.getStatus().code().serialize());\n+                        jsonGenerator.writeObjectField(\"message\", error.getMessage());\n+                    } finally\n                     {\n                         jsonGenerator.writeEndObject();\n                     }\n                 }\n-            }\n-            finally\n+            } finally\n             {\n                 jsonGenerator.writeEndArray();\n             }\n-        }\n-        catch ( IOException e )\n+        } catch (IOException e)\n         {\n-            throw new ConnectionException( \"Failed to write to the response stream\", e );\n+            throw new ConnectionException(\"Failed to write to the response stream\", e);\n         }\n     }\n \n-    private void writeColumns( Iterable<String> columns ) throws IOException\n+    private void writeColumns(Iterable<String> columns) throws IOException\n     {\n         try\n         {\n-            jsonGenerator.writeArrayFieldStart( \"fields\" );\n-            for ( String key : columns )\n+            jsonGenerator.writeArrayFieldStart(\"fields\");\n+            for (String key : columns)\n             {\n-                jsonGenerator.writeString( key );\n+                jsonGenerator.writeString(key);\n             }\n-        }\n-        finally\n+        } finally\n         {\n             jsonGenerator.writeEndArray();\n         }\n@@ -512,6 +487,6 @@ class EventSourceSerializer\n     {\n         jsonGenerator.flush();\n         output.flush();\n-        output.write( \"\\n\".getBytes() );\n+        output.write(\"\\n\".getBytes());\n     }\n }\n",
            "diff_size": 190
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
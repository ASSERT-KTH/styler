{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2470",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "50",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "60",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "68",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "85",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "92",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "123",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "141",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "144",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "146",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "198",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "209",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "221",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "235",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "254",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2470/ClusterConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2470/ClusterConfiguration.java\nindex 866a6b0c585..fa0230a7f83 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2470/ClusterConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2470/ClusterConfiguration.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.protocol.cluster;\n \n import java.net.URI;\n@@ -38,233 +39,232 @@ import org.neo4j.logging.LogProvider;\n  */\n public class ClusterConfiguration\n {\n-    public static final String COORDINATOR = \"coordinator\";\n-\n-    private final String name;\n-    private final Log log;\n-    private final List<URI> candidateMembers;\n-    private volatile Map<InstanceId, URI> members;\n-    private volatile Map<String, InstanceId> roles = new HashMap<>();\n-\n-    public ClusterConfiguration( String name, LogProvider logProvider, String... members )\n+  public static final String COORDINATOR = \"coordinator\";\n+\n+  private final String name;\n+  private final Log log;\n+  private final List<URI> candidateMembers;\n+  private volatile Map<InstanceId, URI> members;\n+  private volatile Map<String, InstanceId> roles = new HashMap<>();\n+\n+  public ClusterConfiguration(String name, LogProvider logProvider, String... members)\n+  {\n+    this.name = name;\n+    this.log = logProvider.getLog(getClass());\n+    this.candidateMembers = new ArrayList<>();\n+    for (String node : members)\n     {\n-        this.name = name;\n-        this.log = logProvider.getLog( getClass() );\n-        this.candidateMembers = new ArrayList<>();\n-        for ( String node : members )\n-        {\n-            try\n-            {\n-                this.candidateMembers.add( new URI( node ) );\n-            }\n-            catch ( URISyntaxException e )\n-            {\n-                e.printStackTrace();\n-            }\n-        }\n-        this.members = new HashMap<>();\n+      try\n+      {\n+        this.candidateMembers.add(new URI(node));\n+      } catch (URISyntaxException e)\n+      {\n+        e.printStackTrace();\n+      }\n     }\n-\n-    public ClusterConfiguration( String name, LogProvider logProvider, Collection<URI> members )\n+    this.members = new HashMap<>();\n+  }\n+\n+  public ClusterConfiguration(String name, LogProvider logProvider, Collection<URI> members)\n+  {\n+    this.name = name;\n+    this.log = logProvider.getLog(getClass());\n+    this.candidateMembers = new ArrayList<>(members);\n+    this.members = new HashMap<>();\n+  }\n+\n+  public ClusterConfiguration(ClusterConfiguration copy)\n+  {\n+    this(copy, copy.log);\n+  }\n+\n+  private ClusterConfiguration(ClusterConfiguration copy, Log log)\n+  {\n+    this.name = copy.name;\n+    this.log = log;\n+    this.candidateMembers = new ArrayList<>(copy.candidateMembers);\n+    this.roles = new HashMap<>(copy.roles);\n+    this.members = new HashMap<>(copy.members);\n+  }\n+\n+  public void joined(InstanceId joinedInstanceId, URI instanceUri)\n+  {\n+    if (instanceUri.equals(members.get(joinedInstanceId)))\n     {\n-        this.name = name;\n-        this.log = logProvider.getLog( getClass() );\n-        this.candidateMembers = new ArrayList<>( members );\n-        this.members = new HashMap<>();\n+      return; // Already know that this node is in - ignore\n     }\n \n-    public ClusterConfiguration( ClusterConfiguration copy )\n+    Map<InstanceId, URI> newMembers = new HashMap<>(members);\n+    newMembers.put(joinedInstanceId, instanceUri);\n+    members = newMembers;\n+  }\n+\n+  public void left(InstanceId leftInstanceId)\n+  {\n+    log.info(\"Instance \" + leftInstanceId + \" is leaving the cluster\");\n+    Map<InstanceId, URI> newMembers = new HashMap<>(members);\n+    newMembers.remove(leftInstanceId);\n+    members = newMembers;\n+\n+    // Remove any roles that this node had\n+    Iterator<Map.Entry<String, InstanceId>> entries = roles.entrySet().iterator();\n+    while (entries.hasNext())\n     {\n-        this( copy, copy.log );\n-    }\n+      Map.Entry<String, InstanceId> roleEntry = entries.next();\n \n-    private ClusterConfiguration( ClusterConfiguration copy, Log log )\n-    {\n-        this.name = copy.name;\n-        this.log = log;\n-        this.candidateMembers = new ArrayList<>( copy.candidateMembers );\n-        this.roles = new HashMap<>( copy.roles );\n-        this.members = new HashMap<>( copy.members );\n+      if (roleEntry.getValue().equals(leftInstanceId))\n+      {\n+        log.info(\"Removed role \" + roleEntry.getValue() + \" from leaving instance \" + roleEntry.getKey());\n+        entries.remove();\n+      }\n     }\n-\n-    public void joined( InstanceId joinedInstanceId, URI instanceUri )\n+  }\n+\n+  public void elected(String name, InstanceId electedInstanceId)\n+  {\n+    assert members.containsKey(electedInstanceId);\n+    Map<String, InstanceId> newRoles = new HashMap<>(roles);\n+    newRoles.put(name, electedInstanceId);\n+    roles = newRoles;\n+  }\n+\n+  public void unelected(String roleName)\n+  {\n+    assert roles.containsKey(roleName);\n+    Map<String, InstanceId> newRoles = new HashMap<>(roles);\n+    newRoles.remove(roleName);\n+    roles = newRoles;\n+  }\n+\n+  public void setMembers(Map<InstanceId, URI> members)\n+  {\n+    this.members = new HashMap<>(members);\n+  }\n+\n+  public void setRoles(Map<String, InstanceId> roles)\n+  {\n+    for (InstanceId electedInstanceId : roles.values())\n     {\n-        if ( instanceUri.equals( members.get( joinedInstanceId ) ) )\n-        {\n-            return; // Already know that this node is in - ignore\n-        }\n-\n-        Map<InstanceId,URI> newMembers = new HashMap<>( members );\n-        newMembers.put( joinedInstanceId, instanceUri );\n-        members = newMembers;\n+      assert members.containsKey(electedInstanceId);\n     }\n \n-    public void left( InstanceId leftInstanceId )\n+    this.roles = new HashMap<>(roles);\n+  }\n+\n+  public Iterable<InstanceId> getMemberIds()\n+  {\n+    return members.keySet();\n+  }\n+\n+  public Map<InstanceId, URI> getMembers()\n+  {\n+    return members;\n+  }\n+\n+  public List<URI> getMemberURIs()\n+  {\n+    return Iterables.asList(members.values());\n+  }\n+\n+  public String getName()\n+  {\n+    return name;\n+  }\n+\n+  public Map<String, InstanceId> getRoles()\n+  {\n+    return roles;\n+  }\n+\n+  public void left()\n+  {\n+    this.members = new HashMap<>();\n+    roles = new HashMap<>();\n+  }\n+\n+  public void removeElected(String roleName)\n+  {\n+    Map<String, InstanceId> newRoles = new HashMap<>(roles);\n+    InstanceId removed = newRoles.remove(roleName);\n+    roles = newRoles;\n+    log.info(\"Removed role \" + roleName + \" from instance \" + removed);\n+  }\n+\n+  public InstanceId getElected(String roleName)\n+  {\n+    return roles.get(roleName);\n+  }\n+\n+  public Iterable<String> getRolesOf(final InstanceId node)\n+  {\n+    return Iterables.map(Map.Entry::getKey, Iterables.filter(item -> item.getValue().equals(node),\n+        roles.entrySet()));\n+  }\n+\n+  public URI getUriForId(InstanceId node)\n+  {\n+    return members.get(node);\n+  }\n+\n+  public InstanceId getIdForUri(URI fromUri)\n+  {\n+    for (Map.Entry<InstanceId, URI> serverIdURIEntry : members.entrySet())\n     {\n-        log.info( \"Instance \" + leftInstanceId + \" is leaving the cluster\" );\n-        Map<InstanceId,URI> newMembers = new HashMap<>( members );\n-        newMembers.remove( leftInstanceId );\n-        members = newMembers;\n-\n-        // Remove any roles that this node had\n-        Iterator<Map.Entry<String, InstanceId>> entries = roles.entrySet().iterator();\n-        while ( entries.hasNext() )\n-        {\n-            Map.Entry<String, InstanceId> roleEntry = entries.next();\n-\n-            if ( roleEntry.getValue().equals( leftInstanceId ) )\n-            {\n-                log.info(\"Removed role \" + roleEntry.getValue() + \" from leaving instance \" + roleEntry.getKey() );\n-                entries.remove();\n-            }\n-        }\n+      if (serverIdURIEntry.getValue().equals(fromUri))\n+      {\n+        return serverIdURIEntry.getKey();\n+      }\n     }\n-\n-    public void elected( String name, InstanceId electedInstanceId )\n+    return null;\n+  }\n+\n+  public ClusterConfiguration snapshot(Log log)\n+  {\n+    return new ClusterConfiguration(this, log);\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return \"Name:\" + name + \" Nodes:\" + members + \" Roles:\" + roles;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o)\n+  {\n+    if (this == o)\n     {\n-        assert members.containsKey( electedInstanceId );\n-        Map<String,InstanceId> newRoles = new HashMap<>( roles );\n-        newRoles.put( name, electedInstanceId );\n-        roles = newRoles;\n+      return true;\n     }\n-\n-    public void unelected( String roleName )\n+    if (o == null || getClass() != o.getClass())\n     {\n-        assert roles.containsKey( roleName );\n-        Map<String,InstanceId> newRoles = new HashMap<>( roles );\n-        newRoles.remove( roleName );\n-        roles = newRoles;\n+      return false;\n     }\n \n-    public void setMembers( Map<InstanceId, URI> members )\n-    {\n-        this.members = new HashMap<>( members );\n-    }\n+    ClusterConfiguration that = (ClusterConfiguration) o;\n \n-    public void setRoles( Map<String, InstanceId> roles )\n+    if (!candidateMembers.equals(that.candidateMembers))\n     {\n-        for ( InstanceId electedInstanceId : roles.values() )\n-        {\n-            assert members.containsKey( electedInstanceId );\n-        }\n-\n-        this.roles = new HashMap<>( roles );\n+      return false;\n     }\n-\n-    public Iterable<InstanceId> getMemberIds()\n+    if (!members.equals(that.members))\n     {\n-        return members.keySet();\n+      return false;\n     }\n-\n-    public Map<InstanceId, URI> getMembers()\n-    {\n-        return members;\n-    }\n-\n-    public List<URI> getMemberURIs()\n-    {\n-        return Iterables.asList( members.values() );\n-    }\n-\n-    public String getName()\n-    {\n-        return name;\n-    }\n-\n-    public Map<String, InstanceId> getRoles()\n-    {\n-        return roles;\n-    }\n-\n-    public void left()\n-    {\n-        this.members = new HashMap<>();\n-        roles = new HashMap<>();\n-    }\n-\n-    public void removeElected( String roleName )\n-    {\n-        Map<String,InstanceId> newRoles = new HashMap<>( roles );\n-        InstanceId removed = newRoles.remove( roleName );\n-        roles = newRoles;\n-        log.info( \"Removed role \" + roleName + \" from instance \" + removed );\n-    }\n-\n-    public InstanceId getElected( String roleName )\n-    {\n-        return roles.get( roleName );\n-    }\n-\n-    public Iterable<String> getRolesOf( final InstanceId node )\n-    {\n-        return Iterables.map( Map.Entry::getKey, Iterables.filter( item -> item.getValue().equals( node ),\n-                roles.entrySet() ) );\n-    }\n-\n-    public URI getUriForId( InstanceId node )\n-    {\n-        return members.get( node );\n-    }\n-\n-    public InstanceId getIdForUri( URI fromUri )\n-    {\n-        for ( Map.Entry<InstanceId, URI> serverIdURIEntry : members.entrySet() )\n-        {\n-            if ( serverIdURIEntry.getValue().equals( fromUri ) )\n-            {\n-                return serverIdURIEntry.getKey();\n-            }\n-        }\n-        return null;\n-    }\n-\n-    public ClusterConfiguration snapshot( Log log )\n-    {\n-        return new ClusterConfiguration( this, log );\n-    }\n-\n-    @Override\n-    public String toString()\n-    {\n-        return \"Name:\" + name + \" Nodes:\" + members + \" Roles:\" + roles;\n-    }\n-\n-    @Override\n-    public boolean equals( Object o )\n-    {\n-        if ( this == o )\n-        {\n-            return true;\n-        }\n-        if ( o == null || getClass() != o.getClass() )\n-        {\n-            return false;\n-        }\n-\n-        ClusterConfiguration that = (ClusterConfiguration) o;\n-\n-        if ( !candidateMembers.equals( that.candidateMembers ) )\n-        {\n-            return false;\n-        }\n-        if ( !members.equals( that.members ) )\n-        {\n-            return false;\n-        }\n-        if ( !name.equals( that.name ) )\n-        {\n-            return false;\n-        }\n-        return roles.equals( that.roles );\n-    }\n-\n-    @Override\n-    public int hashCode()\n+    if (!name.equals(that.name))\n     {\n-        int result = name.hashCode();\n-        result = 31 * result + candidateMembers.hashCode();\n-        result = 31 * result + members.hashCode();\n-        result = 31 * result + roles.hashCode();\n-        return result;\n+      return false;\n     }\n+    return roles.equals(that.roles);\n+  }\n+\n+  @Override\n+  public int hashCode()\n+  {\n+    int result = name.hashCode();\n+    result = 31 * result + candidateMembers.hashCode();\n+    result = 31 * result + members.hashCode();\n+    result = 31 * result + roles.hashCode();\n+    return result;\n+  }\n }\n",
            "diff_size": 362
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2470/ClusterConfiguration.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2470/ClusterConfiguration.java\nindex 866a6b0c585..d31eae263d9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2470/ClusterConfiguration.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2470/ClusterConfiguration.java\n@@ -39,12 +39,11 @@ import org.neo4j.logging.LogProvider;\n public class ClusterConfiguration\n {\n     public static final String COORDINATOR = \"coordinator\";\n-\n-    private final String name;\n+private final String name;\n     private final Log log;\n     private final List<URI> candidateMembers;\n-    private volatile Map<InstanceId, URI> members;\n-    private volatile Map<String, InstanceId> roles = new HashMap<>();\n+    private volatile Map<InstanceId,URI> members;\n+    private volatile Map<String,InstanceId> roles = new HashMap<>();\n \n     public ClusterConfiguration( String name, LogProvider logProvider, String... members )\n     {\n@@ -110,11 +109,10 @@ public class ClusterConfiguration\n         Iterator<Map.Entry<String, InstanceId>> entries = roles.entrySet().iterator();\n         while ( entries.hasNext() )\n         {\n-            Map.Entry<String, InstanceId> roleEntry = entries.next();\n-\n-            if ( roleEntry.getValue().equals( leftInstanceId ) )\n+            Map.Entry<String,InstanceId> roleEntry = entries.next();\n+if ( roleEntry.getValue().equals( leftInstanceId ) )\n             {\n-                log.info(\"Removed role \" + roleEntry.getValue() + \" from leaving instance \" + roleEntry.getKey() );\n+                log.info( \"Removed role \" + roleEntry.getValue() + \" from leaving instance \" + roleEntry.getKey() );\n                 entries.remove();\n             }\n         }\n@@ -136,12 +134,12 @@ public class ClusterConfiguration\n         roles = newRoles;\n     }\n \n-    public void setMembers( Map<InstanceId, URI> members )\n+    public void setMembers( Map<InstanceId,URI> members )\n     {\n         this.members = new HashMap<>( members );\n     }\n \n-    public void setRoles( Map<String, InstanceId> roles )\n+    public void setRoles( Map<String,InstanceId> roles )\n     {\n         for ( InstanceId electedInstanceId : roles.values() )\n         {\n@@ -156,7 +154,7 @@ public class ClusterConfiguration\n         return members.keySet();\n     }\n \n-    public Map<InstanceId, URI> getMembers()\n+    public Map<InstanceId,URI> getMembers()\n     {\n         return members;\n     }\n@@ -171,7 +169,7 @@ public class ClusterConfiguration\n         return name;\n     }\n \n-    public Map<String, InstanceId> getRoles()\n+    public Map<String,InstanceId> getRoles()\n     {\n         return roles;\n     }\n@@ -197,8 +195,7 @@ public class ClusterConfiguration\n \n     public Iterable<String> getRolesOf( final InstanceId node )\n     {\n-        return Iterables.map( Map.Entry::getKey, Iterables.filter( item -> item.getValue().equals( node ),\n-                roles.entrySet() ) );\n+        return Iterables.map( Map.Entry::getKey, Iterables.filter( item -> item.getValue().equals( node ), roles.entrySet() ) );\n     }\n \n     public URI getUriForId( InstanceId node )\n@@ -208,7 +205,7 @@ public class ClusterConfiguration\n \n     public InstanceId getIdForUri( URI fromUri )\n     {\n-        for ( Map.Entry<InstanceId, URI> serverIdURIEntry : members.entrySet() )\n+        for ( Map.Entry<InstanceId,URI> serverIdURIEntry : members.entrySet() )\n         {\n             if ( serverIdURIEntry.getValue().equals( fromUri ) )\n             {\n@@ -236,7 +233,8 @@ public class ClusterConfiguration\n         {\n             return true;\n         }\n-        if ( o == null || getClass() != o.getClass() )\n+\n+if ( o == null || getClass() != o.getClass() )\n         {\n             return false;\n         }\n@@ -247,15 +245,18 @@ public class ClusterConfiguration\n         {\n             return false;\n         }\n-        if ( !members.equals( that.members ) )\n+\n+if ( !members.equals( that.members ) )\n         {\n             return false;\n         }\n-        if ( !name.equals( that.name ) )\n+\n+if ( !name.equals( that.name ) )\n         {\n             return false;\n         }\n-        return roles.equals( that.roles );\n+\n+return roles.equals( that.roles );\n     }\n \n     @Override\n@@ -267,4 +268,4 @@ public class ClusterConfiguration\n         result = 31 * result + roles.hashCode();\n         return result;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "neo4j-neo4j",
    "error_id": "2213",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "70",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "70",
                    "column": "119",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "66",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "79",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "86",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "86",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2213/FulltextIndexTransactionState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2213/FulltextIndexTransactionState.java\nindex 0d19da029e1..e8c19169954 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/2213/FulltextIndexTransactionState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/2213/FulltextIndexTransactionState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.api.impl.fulltext;\n \n import org.apache.lucene.analysis.Analyzer;\n@@ -66,32 +67,31 @@ class FulltextIndexTransactionState implements Closeable\n     private long lastUpdateRevision;\n     private SearcherReference currentSearcher;\n \n-    FulltextIndexTransactionState( IndexDescriptor descriptor, Config config, Analyzer analyzer, String[] propertyNames )\n+    FulltextIndexTransactionState(IndexDescriptor descriptor, Config config, Analyzer analyzer, String[] propertyNames)\n     {\n         toCloseLater = new ArrayList<>();\n-        writer = new TransactionStateLuceneIndexWriter( config, analyzer );\n+        writer = new TransactionStateLuceneIndexWriter(config, analyzer);\n         modifiedEntityIdsInThisTransaction = new LongHashSet();\n         visitingNodes = descriptor.schema().entityType() == EntityType.NODE;\n-        txStateVisitor = new FulltextIndexTransactionStateVisitor( descriptor, propertyNames, modifiedEntityIdsInThisTransaction, writer );\n+        txStateVisitor = new FulltextIndexTransactionStateVisitor(descriptor, propertyNames, modifiedEntityIdsInThisTransaction, writer);\n     }\n \n-    SearcherReference maybeUpdate( QueryContext context, PageCursorTracer cursorTracer, MemoryTracker memoryTracker )\n+    SearcherReference maybeUpdate(QueryContext context, PageCursorTracer cursorTracer, MemoryTracker memoryTracker)\n     {\n-        if ( currentSearcher == null || lastUpdateRevision != context.getTransactionStateOrNull().getDataRevision() )\n+        if (currentSearcher == null || lastUpdateRevision != context.getTransactionStateOrNull().getDataRevision())\n         {\n             try\n             {\n-                updateSearcher( context, cursorTracer, memoryTracker );\n-            }\n-            catch ( Exception e )\n+                updateSearcher(context, cursorTracer, memoryTracker);\n+            } catch (Exception e)\n             {\n-                throw new RuntimeException( \"Could not update fulltext schema index transaction state.\", e );\n+                throw new RuntimeException(\"Could not update fulltext schema index transaction state.\", e);\n             }\n         }\n         return currentSearcher;\n     }\n \n-    private void updateSearcher( QueryContext context, PageCursorTracer cursorTracer, MemoryTracker memoryTracker ) throws Exception\n+    private void updateSearcher(QueryContext context, PageCursorTracer cursorTracer, MemoryTracker memoryTracker) throws Exception\n     {\n         Read read = context.getRead();\n         CursorFactory cursors = context.cursors();\n@@ -99,22 +99,22 @@ class FulltextIndexTransactionState implements Closeable\n         modifiedEntityIdsInThisTransaction.clear(); // Clear this, so we don't filter out entities who have had their changes reversed since last time.\n         writer.resetWriterState();\n \n-        try ( NodeCursor nodeCursor = visitingNodes ? cursors.allocateFullAccessNodeCursor( cursorTracer ) : null;\n-              RelationshipScanCursor relationshipCursor = visitingNodes ? null : cursors.allocateRelationshipScanCursor( cursorTracer );\n-              PropertyCursor propertyCursor = cursors.allocateFullAccessPropertyCursor( cursorTracer, memoryTracker ) )\n+        try (NodeCursor nodeCursor = visitingNodes ? cursors.allocateFullAccessNodeCursor(cursorTracer) : null;\n+             RelationshipScanCursor relationshipCursor = visitingNodes ? null : cursors.allocateRelationshipScanCursor(cursorTracer);\n+             PropertyCursor propertyCursor = cursors.allocateFullAccessPropertyCursor(cursorTracer, memoryTracker))\n         {\n-            state.accept( txStateVisitor.init( read, nodeCursor, relationshipCursor, propertyCursor ) );\n+            state.accept(txStateVisitor.init(read, nodeCursor, relationshipCursor, propertyCursor));\n         }\n         currentSearcher = writer.getNearRealTimeSearcher();\n-        toCloseLater.add( currentSearcher );\n+        toCloseLater.add(currentSearcher);\n         lastUpdateRevision = state.getDataRevision();\n     }\n \n     @Override\n     public void close() throws IOException\n     {\n-        toCloseLater.add( writer );\n-        IOUtils.closeAll( toCloseLater );\n+        toCloseLater.add(writer);\n+        IOUtils.closeAll(toCloseLater);\n     }\n \n     public LongPredicate isModifiedInTransactionPredicate()\n",
            "diff_size": 18
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
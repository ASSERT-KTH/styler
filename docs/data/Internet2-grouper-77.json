{
    "project_name": "Internet2-grouper",
    "error_id": "77",
    "information": {
        "errors": [
            {
                "line": "55",
                "severity": "warning",
                "message": "Line has trailing spaces.",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "    }\n\n    /** \n     * Will throw an UnsupportedOperationException when called; the JexlEngine deals with it appropriately.\n     * @param name the unused variable name\n     * @param value the unused variable value",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/77/ReadonlyContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/intellij/77/ReadonlyContext.java\nindex 8eddc420333..886dbf08cdb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/77/ReadonlyContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/intellij/77/ReadonlyContext.java\n@@ -1,12 +1,12 @@\n /**\r\n  * Copyright 2014 Internet2\r\n- *\r\n+ * <p>\r\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n  * you may not use this file except in compliance with the License.\r\n  * You may obtain a copy of the License at\r\n- *\r\n- *   http://www.apache.org/licenses/LICENSE-2.0\r\n- *\r\n+ * <p>\r\n+ * http://www.apache.org/licenses/LICENSE-2.0\r\n+ * <p>\r\n  * Unless required by applicable law or agreed to in writing, software\r\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@@ -29,6 +29,7 @@\n  * See the License for the specific language governing permissions and\r\n  * limitations under the License.\r\n  */\r\n+\r\n package edu.internet2.middleware.grouperClientExt.org.apache.commons.jexl2;\r\n \r\n /**\r\n@@ -36,33 +37,33 @@ package edu.internet2.middleware.grouperClientExt.org.apache.commons.jexl2;\n  * @since 2.1\r\n  */\r\n public final class ReadonlyContext implements JexlContext {\r\n-    /** The wrapped context. */\r\n-    private final JexlContext wrapped;\r\n+  /** The wrapped context. */\r\n+  private final JexlContext wrapped;\r\n \r\n-    /**\r\n-     * Creates a new readonly context.\r\n-     * @param context the wrapped context\r\n-     */\r\n-    public ReadonlyContext(JexlContext context) {\r\n-        wrapped = context;\r\n-    }\r\n+  /**\r\n+   * Creates a new readonly context.\r\n+   * @param context the wrapped context\r\n+   */\r\n+  public ReadonlyContext(JexlContext context) {\r\n+    wrapped = context;\r\n+  }\r\n \r\n-    /** {@inheritDoc} */\r\n-    public Object get(String name) {\r\n-        return wrapped.get(name);\r\n-    }\r\n+  /** {@inheritDoc} */\r\n+  public Object get(String name) {\r\n+    return wrapped.get(name);\r\n+  }\r\n \r\n-    /** \r\n-     * Will throw an UnsupportedOperationException when called; the JexlEngine deals with it appropriately.\r\n-     * @param name the unused variable name\r\n-     * @param value the unused variable value\r\n-     */\r\n-    public void set(String name, Object value) {\r\n-        throw new UnsupportedOperationException(\"Not supported.\");\r\n-    }\r\n+  /**\r\n+   * Will throw an UnsupportedOperationException when called; the JexlEngine deals with it appropriately.\r\n+   * @param name the unused variable name\r\n+   * @param value the unused variable value\r\n+   */\r\n+  public void set(String name, Object value) {\r\n+    throw new UnsupportedOperationException(\"Not supported.\");\r\n+  }\r\n \r\n-    /** {@inheritDoc} */\r\n-    public boolean has(String name) {\r\n-        return wrapped.has(name);\r\n-    }\r\n+  /** {@inheritDoc} */\r\n+  public boolean has(String name) {\r\n+    return wrapped.has(name);\r\n+  }\r\n }\r\n",
            "diff_size": 30
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/77/ReadonlyContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/naturalize/77/ReadonlyContext.java\nindex 8eddc420333..cbd0802d2f3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/77/ReadonlyContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/naturalize/77/ReadonlyContext.java\n@@ -65,4 +65,4 @@ public final class ReadonlyContext implements JexlContext {\n     public boolean has(String name) {\r\n         return wrapped.has(name);\r\n     }\r\n-}\r\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "61",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/77/ReadonlyContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/codebuff/77/ReadonlyContext.java\nindex 8eddc420333..d9db9b392b5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/77/ReadonlyContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/codebuff/77/ReadonlyContext.java\n@@ -34,35 +34,45 @@ package edu.internet2.middleware.grouperClientExt.org.apache.commons.jexl2;\n /**\r\n  * A readonly context wrapper.\r\n  * @since 2.1\r\n- */\r\n+ */\n+\n public final class ReadonlyContext implements JexlContext {\r\n-    /** The wrapped context. */\r\n+    /** The wrapped context. */\n+\n     private final JexlContext wrapped;\r\n \r\n     /**\r\n      * Creates a new readonly context.\r\n      * @param context the wrapped context\r\n-     */\r\n-    public ReadonlyContext(JexlContext context) {\r\n-        wrapped = context;\r\n+     */\n+\n+    public ReadonlyContext(JexlContext context) {\n+        wrapped = context;\n     }\r\n \r\n-    /** {@inheritDoc} */\r\n-    public Object get(String name) {\r\n-        return wrapped.get(name);\r\n+    /** {@inheritDoc} */\n+\n+\n+\n+    public Object get(String name) {\n+        return wrapped.get(name);\n     }\r\n \r\n     /** \r\n      * Will throw an UnsupportedOperationException when called; the JexlEngine deals with it appropriately.\r\n      * @param name the unused variable name\r\n      * @param value the unused variable value\r\n-     */\r\n-    public void set(String name, Object value) {\r\n-        throw new UnsupportedOperationException(\"Not supported.\");\r\n+     */\n+\n+\n+    public void set(String name, Object value) {\n+        throw new UnsupportedOperationException(\"Not supported.\");\n     }\r\n \r\n-    /** {@inheritDoc} */\r\n-    public boolean has(String name) {\r\n-        return wrapped.has(name);\r\n-    }\r\n-}\r\n+    /** {@inheritDoc} */\n+\n+\n+    public boolean has(String name) {\n+        return wrapped.has(name);\n+    }\n+}\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "53",
                    "severity": "warning",
                    "message": "Line has trailing spaces.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/77/ReadonlyContext.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/styler_three_grams/77/ReadonlyContext.java\nindex 8eddc420333..e5330e71f12 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/errored/1/77/ReadonlyContext.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/Internet2-grouper/styler_three_grams/77/ReadonlyContext.java\n@@ -50,9 +50,7 @@ public final class ReadonlyContext implements JexlContext {\n     /** {@inheritDoc} */\r\n     public Object get(String name) {\r\n         return wrapped.get(name);\r\n-    }\r\n-\r\n-    /** \r\n+    }/** \r\n      * Will throw an UnsupportedOperationException when called; the JexlEngine deals with it appropriately.\r\n      * @param name the unused variable name\r\n      * @param value the unused variable value\r\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "45",
    "information": {
        "errors": [
            {
                "line": "31",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 97).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "  @Override\n  public KafkaAccessor createAccessor(\n      DirectDataOperator direct, EntityDescriptor entityDesc, URI uri, Map<String, Object> cfg) {\n\n    return new KafkaAccessor(entityDesc, uri, cfg);\n  }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/45/KafkaStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/45/KafkaStorage.java\nindex 4819de2ded7..26d49d77d1b 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/45/KafkaStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/45/KafkaStorage.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.kafka;\n \n import cz.o2.proxima.direct.core.DataAccessorFactory;\n@@ -28,7 +29,8 @@ public class KafkaStorage implements DataAccessorFactory {\n \n   @Override\n   public KafkaAccessor createAccessor(\n-      DirectDataOperator direct, EntityDescriptor entityDesc, URI uri, Map<String, Object> cfg) {\n+      DirectDataOperator direct, EntityDescriptor entityDesc, URI uri,\n+      Map<String, Object> cfg) {\n \n     return new KafkaAccessor(entityDesc, uri, cfg);\n   }\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/45/KafkaStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/45/KafkaStorage.java\nindex 4819de2ded7..cba99c95505 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/45/KafkaStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/45/KafkaStorage.java\n@@ -37,4 +37,4 @@ public class KafkaStorage implements DataAccessorFactory {\n   public Accept accepts(URI uri) {\n     return uri.getScheme().equals(\"kafka\") ? Accept.ACCEPT : Accept.REJECT;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "33",
                    "severity": "error",
                    "message": "'DirectDataOperator' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "'EntityDescriptor' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "35",
                    "severity": "error",
                    "message": "'URI' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "41",
                    "column": "43",
                    "severity": "error",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "41",
                    "column": "58",
                    "severity": "error",
                    "message": "WhitespaceAround: ':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/45/KafkaStorage.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/45/KafkaStorage.java\nindex 4819de2ded7..f17d8695c2d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/45/KafkaStorage.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/45/KafkaStorage.java\n@@ -22,19 +22,22 @@ import java.net.URI;\n import java.util.Map;\n \n /** Storage using {@code KafkaProducer}. */\n+\n+\n public class KafkaStorage implements DataAccessorFactory {\n \n   private static final long serialVersionUID = 1L;\n \n   @Override\n   public KafkaAccessor createAccessor(\n-      DirectDataOperator direct, EntityDescriptor entityDesc, URI uri, Map<String, Object> cfg) {\n-\n+    DirectDataOperator direct,\n+    EntityDescriptor entityDesc,\n+    URI uri, Map<String, Object> cfg) {\n     return new KafkaAccessor(entityDesc, uri, cfg);\n   }\n \n   @Override\n   public Accept accepts(URI uri) {\n-    return uri.getScheme().equals(\"kafka\") ? Accept.ACCEPT : Accept.REJECT;\n+    return uri.getScheme().equals(\"kafka\")? Accept.ACCEPT: Accept.REJECT;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 97).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": null,
            "diff": null
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
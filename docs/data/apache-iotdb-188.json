{
    "project_name": "apache-iotdb",
    "error_id": "188",
    "information": {
        "errors": [
            {
                "line": "19",
                "severity": "warning",
                "message": "'package' should be separated from previous statement.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
            }
        ]
    },
    "source_code": " * under the License.\n */\npackage org.apache.iotdb.db.query.externalsort;\n\nimport org.apache.iotdb.db.conf.IoTDBDescriptor;\nimport org.apache.iotdb.db.exception.runtime.StorageEngineFailureException;",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/188/SimpleExternalSortEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/188/SimpleExternalSortEngine.java\nindex 0a6616f2021..be87b8d7fba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/188/SimpleExternalSortEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler/188/SimpleExternalSortEngine.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.externalsort;\n \n import org.apache.iotdb.db.conf.IoTDBDescriptor;\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/188/SimpleExternalSortEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/188/SimpleExternalSortEngine.java\nindex 0a6616f2021..5e6cb90f570 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/188/SimpleExternalSortEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/intellij/188/SimpleExternalSortEngine.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.externalsort;\n \n import org.apache.iotdb.db.conf.IoTDBDescriptor;\n@@ -133,7 +134,9 @@ public class SimpleExternalSortEngine implements ExternalSortJobEngine {\n     this.minExternalSortSourceCount = minExternalSortSourceCount;\n   }\n \n-  /** init IPointReader with ChunkReaderWrap. */\n+  /**\n+   * init IPointReader with ChunkReaderWrap.\n+   */\n   private List<IPointReader> generateIPointReader(\n       List<ChunkReaderWrap> readerWraps, final int start, final int size) throws IOException {\n     List<IPointReader> pointReaderList = new ArrayList<>();\n@@ -143,7 +146,9 @@ public class SimpleExternalSortEngine implements ExternalSortJobEngine {\n     return pointReaderList;\n   }\n \n-  /** init IReaderByTimestamp with ChunkReaderWrap. */\n+  /**\n+   * init IReaderByTimestamp with ChunkReaderWrap.\n+   */\n   private List<IReaderByTimestamp> generateIReaderByTimestamp(\n       List<ChunkReaderWrap> readerWraps, final int start, final int size) throws IOException {\n     List<IReaderByTimestamp> readerByTimestampList = new ArrayList<>();\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "19",
                    "severity": "warning",
                    "message": "'package' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 102).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "59",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 125).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "'\"query {} measurement {} uses external sort.\"' has incorrect indentation level 9, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'queryId' has incorrect indentation level 9, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "warning",
                    "message": "'chunkReaderWraps' has incorrect indentation level 9, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "74",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 136).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'\"query {} measurement {} uses external sort.\"' has incorrect indentation level 9, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "'queryId' has incorrect indentation level 9, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "'chunkReaderWraps' has incorrect indentation level 9, expected level should be 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "103",
                    "severity": "warning",
                    "message": "'+' has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "104",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 114).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "132",
                    "severity": "warning",
                    "message": "'List' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "143",
                    "severity": "warning",
                    "message": "'List' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/188/SimpleExternalSortEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/188/SimpleExternalSortEngine.java\nindex 0a6616f2021..06dea393549 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/188/SimpleExternalSortEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/codebuff/188/SimpleExternalSortEngine.java\n@@ -24,11 +24,9 @@ import org.apache.iotdb.db.query.externalsort.adapter.ByTimestampReaderAdapter;\n import org.apache.iotdb.db.query.reader.chunk.ChunkReaderWrap;\n import org.apache.iotdb.db.query.reader.series.IReaderByTimestamp;\n import org.apache.iotdb.tsfile.read.reader.IPointReader;\n-\n import org.apache.commons.io.FileUtils;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n-\n import java.io.File;\n import java.io.IOException;\n import java.util.ArrayList;\n@@ -37,7 +35,6 @@ import java.util.List;\n public class SimpleExternalSortEngine implements ExternalSortJobEngine {\n \n   private ExternalSortJobScheduler scheduler;\n-\n   private String queryDir;\n   private int minExternalSortSourceCount;\n   private boolean enableExternalSort;\n@@ -45,8 +42,7 @@ public class SimpleExternalSortEngine implements ExternalSortJobEngine {\n \n   private SimpleExternalSortEngine() {\n     queryDir = IoTDBDescriptor.getInstance().getConfig().getQueryDir() + File.separator;\n-    minExternalSortSourceCount =\n-        IoTDBDescriptor.getInstance().getConfig().getExternalSortThreshold();\n+    minExternalSortSourceCount = IoTDBDescriptor.getInstance().getConfig().getExternalSortThreshold();\n     enableExternalSort = IoTDBDescriptor.getInstance().getConfig().isEnableExternalSort();\n     scheduler = ExternalSortJobScheduler.getInstance();\n \n@@ -60,32 +56,30 @@ public class SimpleExternalSortEngine implements ExternalSortJobEngine {\n   }\n \n   @Override\n-  public List<IPointReader> executeForIPointReader(\n-      long queryId, List<ChunkReaderWrap> chunkReaderWraps) throws IOException {\n+  public List<IPointReader> executeForIPointReader(long queryId, List<ChunkReaderWrap> chunkReaderWraps) throws IOException {\n     if (!enableExternalSort || chunkReaderWraps.size() < minExternalSortSourceCount) {\n       return generateIPointReader(chunkReaderWraps, 0, chunkReaderWraps.size());\n     }\n     if (logger.isInfoEnabled()) {\n       logger.info(\n-          \"query {} measurement {} uses external sort.\",\n-          queryId,\n-          chunkReaderWraps.get(0).getMeasurementUid());\n+         \"query {} measurement {} uses external sort.\",\n+         queryId,\n+         chunkReaderWraps.get(0).getMeasurementUid());\n     }\n     ExternalSortJob job = createJob(queryId, chunkReaderWraps);\n     return job.executeForIPointReader();\n   }\n \n   @Override\n-  public List<IReaderByTimestamp> executeForByTimestampReader(\n-      long queryId, List<ChunkReaderWrap> chunkReaderWraps) throws IOException {\n+  public List<IReaderByTimestamp> executeForByTimestampReader(long queryId, List<ChunkReaderWrap> chunkReaderWraps) throws IOException {\n     if (!enableExternalSort || chunkReaderWraps.size() < minExternalSortSourceCount) {\n       return generateIReaderByTimestamp(chunkReaderWraps, 0, chunkReaderWraps.size());\n     }\n     if (logger.isInfoEnabled()) {\n       logger.info(\n-          \"query {} measurement {} uses external sort.\",\n-          queryId,\n-          chunkReaderWraps.get(0).getMeasurementUid());\n+         \"query {} measurement {} uses external sort.\",\n+         queryId,\n+         chunkReaderWraps.get(0).getMeasurementUid());\n     }\n     ExternalSortJob job = createJob(queryId, chunkReaderWraps);\n     return convert(job.executeForIPointReader());\n@@ -98,7 +92,6 @@ public class SimpleExternalSortEngine implements ExternalSortJobEngine {\n     for (ChunkReaderWrap readerWrap : readerWrapList) {\n       ret.add(new SingleSourceExternalSortJobPart(readerWrap));\n     }\n-\n     int partId = 0;\n     while (ret.size() >= minExternalSortSourceCount) {\n       List<ExternalSortJobPart> tmpPartList = new ArrayList<>();\n@@ -106,9 +99,9 @@ public class SimpleExternalSortEngine implements ExternalSortJobEngine {\n         int toIndex = Math.min(i + minExternalSortSourceCount, ret.size());\n         List<ExternalSortJobPart> partGroup = ret.subList(i, toIndex);\n         i = toIndex;\n-        String tmpFilePath = queryDir + jobId + \"_\" + partId;\n-        MultiSourceExternalSortJobPart part =\n-            new MultiSourceExternalSortJobPart(queryId, tmpFilePath, partGroup);\n+        String tmpFilePath = queryDir + jobId\n+        + \"_\" + partId;\n+        MultiSourceExternalSortJobPart part = new MultiSourceExternalSortJobPart(queryId, tmpFilePath, partGroup);\n         tmpPartList.add(part);\n         partId++;\n       }\n@@ -134,8 +127,9 @@ public class SimpleExternalSortEngine implements ExternalSortJobEngine {\n   }\n \n   /** init IPointReader with ChunkReaderWrap. */\n+\n   private List<IPointReader> generateIPointReader(\n-      List<ChunkReaderWrap> readerWraps, final int start, final int size) throws IOException {\n+    List<ChunkReaderWrap> readerWraps, final int start, final int size) throws IOException {\n     List<IPointReader> pointReaderList = new ArrayList<>();\n     for (int i = start; i < start + size; i++) {\n       pointReaderList.add(readerWraps.get(i).getIPointReader());\n@@ -144,8 +138,9 @@ public class SimpleExternalSortEngine implements ExternalSortJobEngine {\n   }\n \n   /** init IReaderByTimestamp with ChunkReaderWrap. */\n+\n   private List<IReaderByTimestamp> generateIReaderByTimestamp(\n-      List<ChunkReaderWrap> readerWraps, final int start, final int size) throws IOException {\n+    List<ChunkReaderWrap> readerWraps, final int start, final int size) throws IOException {\n     List<IReaderByTimestamp> readerByTimestampList = new ArrayList<>();\n     for (int i = start; i < start + size; i++) {\n       readerByTimestampList.add(readerWraps.get(i).getIReaderByTimestamp());\n@@ -159,6 +154,7 @@ public class SimpleExternalSortEngine implements ExternalSortJobEngine {\n    * @param pointReaderList reader list that implements IPointReader\n    * @return reader list that implements IReaderByTimestamp\n    */\n+\n   private List<IReaderByTimestamp> convert(List<IPointReader> pointReaderList) {\n     List<IReaderByTimestamp> readerByTimestampList = new ArrayList<>();\n     for (IPointReader pointReader : pointReaderList) {\n@@ -175,4 +171,4 @@ public class SimpleExternalSortEngine implements ExternalSortJobEngine {\n   public static SimpleExternalSortEngine getInstance() {\n     return SimpleExternalSortJobEngineHelper.INSTANCE;\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 25
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/188/SimpleExternalSortEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/188/SimpleExternalSortEngine.java\nindex 0a6616f2021..be87b8d7fba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/188/SimpleExternalSortEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_random/188/SimpleExternalSortEngine.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.externalsort;\n \n import org.apache.iotdb.db.conf.IoTDBDescriptor;\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/188/SimpleExternalSortEngine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/188/SimpleExternalSortEngine.java\nindex 0a6616f2021..be87b8d7fba 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/errored/1/188/SimpleExternalSortEngine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/apache-iotdb/styler_three_grams/188/SimpleExternalSortEngine.java\n@@ -16,6 +16,7 @@\n  * specific language governing permissions and limitations\n  * under the License.\n  */\n+\n package org.apache.iotdb.db.query.externalsort;\n \n import org.apache.iotdb.db.conf.IoTDBDescriptor;\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
{
    "project_name": "ita-social-projects-GreenCity",
    "error_id": "5",
    "information": {
        "errors": [
            {
                "line": "98",
                "severity": "error",
                "message": "Line is longer than 120 characters (found 121).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "            goalRepo.changeGoalStatus(userId, goalId, goalStatus, now);\n        } else {\n            customGoalRepo.findById(customGoalId).orElseThrow(() -> new NotFoundException(GOAL_WRONG_ID + customGoalId));\n            goalRepo.changeCustomGoalStatus(userId, customGoalId, goalStatus, now);\n        }\n    }",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/5/GoalServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/intellij/5/GoalServiceImpl.java\nindex 5b409186b3f..1c59bb9aa70 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/5/GoalServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/intellij/5/GoalServiceImpl.java\n@@ -95,7 +95,8 @@ public class GoalServiceImpl implements GoalService {\n             goalRepo.findById(goalId).orElseThrow(() -> new NotFoundException(GOAL_WRONG_ID + goalId));\n             goalRepo.changeGoalStatus(userId, goalId, goalStatus, now);\n         } else {\n-            customGoalRepo.findById(customGoalId).orElseThrow(() -> new NotFoundException(GOAL_WRONG_ID + customGoalId));\n+            customGoalRepo.findById(customGoalId)\n+                .orElseThrow(() -> new NotFoundException(GOAL_WRONG_ID + customGoalId));\n             goalRepo.changeCustomGoalStatus(userId, customGoalId, goalStatus, now);\n         }\n     }\n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "92",
                    "column": "35",
                    "severity": "error",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/5/GoalServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/naturalize/5/GoalServiceImpl.java\nindex 5b409186b3f..d1e1c20be4c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/5/GoalServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/naturalize/5/GoalServiceImpl.java\n@@ -89,7 +89,7 @@ public class GoalServiceImpl implements GoalService {\n     @Override\n     @Transactional\n     public void changeGoalOrCustomGoalStatus(Long userId, Boolean status, Long goalId, Long customGoalId) {\n-        String goalStatus = status ? GoalStatus.DONE.toString() : GoalStatus.ACTIVE.toString();\n+        String goalStatus = status? GoalStatus.DONE.toString() : GoalStatus.ACTIVE.toString();\n         LocalDateTime now = LocalDateTime.now();\n         if (goalId != null && customGoalId == null) {\n             goalRepo.findById(goalId).orElseThrow(() -> new NotFoundException(GOAL_WRONG_ID + goalId));\n@@ -99,4 +99,4 @@ public class GoalServiceImpl implements GoalService {\n             goalRepo.changeCustomGoalStatus(userId, customGoalId, goalStatus, now);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "54",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 137).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 183).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 164).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "95",
                    "column": "35",
                    "severity": "error",
                    "message": "WhitespaceAround: '?' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "95",
                    "column": "63",
                    "severity": "error",
                    "message": "WhitespaceAround: ':' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "102",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/5/GoalServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/codebuff/5/GoalServiceImpl.java\nindex 5b409186b3f..21798865b3f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/5/GoalServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/codebuff/5/GoalServiceImpl.java\n@@ -1,6 +1,7 @@\n package greencity.service.impl;\n \n import static greencity.constant.ErrorMessage.*;\n+\n import greencity.dto.goal.GoalDto;\n import greencity.dto.goal.ShoppingListDtoResponse;\n import greencity.dto.user.UserGoalResponseDto;\n@@ -36,35 +37,33 @@ public class GoalServiceImpl implements GoalService {\n     /**\n      * {@inheritDoc}\n      */\n+\n     @Override\n     public List<GoalDto> findAll(String language) {\n-        return goalTranslationRepo\n-            .findAllByLanguageCode(language)\n-            .stream()\n-            .map(g -> modelMapper.map(g, GoalDto.class))\n-            .collect(Collectors.toList());\n+        return goalTranslationRepo.findAllByLanguageCode(language).stream()\n+                                                                  .map(g -> modelMapper.map(g, GoalDto.class))\n+                                                                  .collect(Collectors.toList());\n     }\n \n+\n     @Override\n     public UserGoalResponseDto getUserGoalResponseDtoFromPredefinedGoal(UserGoal userGoal) {\n         UserGoalResponseDto userGoalResponseDto = modelMapper.map(userGoal, UserGoalResponseDto.class);\n         String languageCode = languageService.extractLanguageCodeFromRequest();\n         if (userGoal.getCustomGoal() == null) {\n-            Goal goal = goalRepo\n-                .findById(userGoal\n-                    .getGoal().getId()).orElseThrow(() -> new GoalNotFoundException(GOAL_NOT_FOUND_BY_ID));\n-            userGoalResponseDto.setText(goalTranslationRepo.findByGoalAndLanguageCode(goal, languageCode)\n-                .orElseThrow(() -> new GoalNotFoundException(GOAL_NOT_FOUND_BY_LANGUAGE_CODE)).getText());\n+            Goal goal = goalRepo.findById(userGoal.getGoal().getId()).orElseThrow(() -> new GoalNotFoundException(GOAL_NOT_FOUND_BY_ID));\n+            userGoalResponseDto.setText(goalTranslationRepo.findByGoalAndLanguageCode(goal, languageCode).orElseThrow(() -> new GoalNotFoundException(GOAL_NOT_FOUND_BY_LANGUAGE_CODE))\n+                                                                                                         .getText());\n         }\n         return userGoalResponseDto;\n     }\n \n+\n     @Override\n     public UserGoalResponseDto getUserGoalResponseDtoFromCustomGoal(UserGoal userGoal) {\n         UserGoalResponseDto userGoalResponseDto = modelMapper.map(userGoal, UserGoalResponseDto.class);\n         if (userGoal.getGoal() == null) {\n-            CustomGoal customGoal = customGoalRepo.findById(userGoal\n-                .getCustomGoal().getId()).orElseThrow(() -> new NotFoundException(CUSTOM_GOAL_NOT_FOUND_BY_ID));\n+            CustomGoal customGoal = customGoalRepo.findById(userGoal.getCustomGoal().getId()).orElseThrow(() -> new NotFoundException(CUSTOM_GOAL_NOT_FOUND_BY_ID));\n             userGoalResponseDto.setText(customGoal.getText());\n         }\n         return userGoalResponseDto;\n@@ -76,6 +75,8 @@ public class GoalServiceImpl implements GoalService {\n      * @return shopping list {@link ShoppingListDtoResponse}.\n      * @author Marian Datsko\n      */\n+\n+\n     @Override\n     public List<ShoppingListDtoResponse> getShoppingList(Long userId, String languageCode) {\n         return goalRepo.getShoppingList(userId, languageCode);\n@@ -86,12 +87,15 @@ public class GoalServiceImpl implements GoalService {\n      *\n      * @author Marian Datsko\n      */\n+\n+\n     @Override\n     @Transactional\n     public void changeGoalOrCustomGoalStatus(Long userId, Boolean status, Long goalId, Long customGoalId) {\n-        String goalStatus = status ? GoalStatus.DONE.toString() : GoalStatus.ACTIVE.toString();\n+        String goalStatus = status? GoalStatus.DONE.toString(): GoalStatus.ACTIVE.toString();\n         LocalDateTime now = LocalDateTime.now();\n-        if (goalId != null && customGoalId == null) {\n+        if (goalId != null\n+            && customGoalId == null) {\n             goalRepo.findById(goalId).orElseThrow(() -> new NotFoundException(GOAL_WRONG_ID + goalId));\n             goalRepo.changeGoalStatus(userId, goalId, goalStatus, now);\n         } else {\n@@ -99,4 +103,4 @@ public class GoalServiceImpl implements GoalService {\n             goalRepo.changeCustomGoalStatus(userId, customGoalId, goalStatus, now);\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 24
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 121).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "98",
                    "severity": "error",
                    "message": "'else' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "98",
                    "severity": "error",
                    "message": "Line is longer than 120 characters (found 190).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "98",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "88",
                    "severity": "error",
                    "message": "'(' is followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "98",
                    "column": "88",
                    "severity": "error",
                    "message": "'(' is preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
                },
                {
                    "line": "98",
                    "column": "104",
                    "severity": "error",
                    "message": "WhitespaceAround: '+' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
                },
                {
                    "line": "98",
                    "column": "190",
                    "severity": "error",
                    "message": "Only one statement per line allowed.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/5/GoalServiceImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/styler_three_grams/5/GoalServiceImpl.java\nindex 5b409186b3f..96ba3b0a9aa 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/errored/1/5/GoalServiceImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/ita-social-projects-GreenCity/styler_three_grams/5/GoalServiceImpl.java\n@@ -95,8 +95,7 @@ public class GoalServiceImpl implements GoalService {\n             goalRepo.findById(goalId).orElseThrow(() -> new NotFoundException(GOAL_WRONG_ID + goalId));\n             goalRepo.changeGoalStatus(userId, goalId, goalStatus, now);\n         } else {\n-            customGoalRepo.findById(customGoalId).orElseThrow(() -> new NotFoundException(GOAL_WRONG_ID + customGoalId));\n-            goalRepo.changeCustomGoalStatus(userId, customGoalId, goalStatus, now);\n+        customGoalRepo.findById(customGoalId).orElseThrow(( ) -> new NotFoundException ( GOAL_WRONG_ID +customGoalId));goalRepo.changeCustomGoalStatus(userId, customGoalId, goalStatus, now);\n         }\n     }\n }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
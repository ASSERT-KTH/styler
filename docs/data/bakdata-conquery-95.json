{
    "project_name": "bakdata-conquery",
    "error_id": "95",
    "information": {
        "errors": [
            {
                "line": "25",
                "severity": "warning",
                "message": "trailing whitespaces",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
            }
        ]
    },
    "source_code": "\tpublic void applyTo(FormConfig instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator){\n\t\tchain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator)\n\t\t\t.accept(this);\t\t\n\t}\n\t\n\tprotected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfig instance, PermissionCreator<FormConfigId> permissionCreator) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "25",
                    "column": "9",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/95/FormConfigPatch.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/95/FormConfigPatch.java\nindex 9ee61a20eab..09d90bfbc57 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/95/FormConfigPatch.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler/95/FormConfigPatch.java\n@@ -22,9 +22,10 @@ public class FormConfigPatch extends MetaDataPatch {\n \t\n \tpublic void applyTo(FormConfig instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator){\n \t\tchain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator)\n-\t\t\t.accept(this);\t\t\n+\t\t.accept(this);\n+\n \t}\n-\t\n+\n \tprotected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfig instance, PermissionCreator<FormConfigId> permissionCreator) {\n \t\tpatchConsumerChain = super.buildChain(patchConsumerChain, storage, user, instance, permissionCreator);\n \t\tif(getValues() != null && user.isPermitted(permissionCreator.apply(Ability.MODIFY.asSet(), instance.getId()))) {\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "34",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/95/FormConfigPatch.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/95/FormConfigPatch.java\nindex 9ee61a20eab..64d7bf953d3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/95/FormConfigPatch.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/intellij/95/FormConfigPatch.java\n@@ -18,18 +18,18 @@ import lombok.experimental.SuperBuilder;\n @Data\n @SuperBuilder\n public class FormConfigPatch extends MetaDataPatch {\n-\tprivate JsonNode values;\n-\t\n-\tpublic void applyTo(FormConfig instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator){\n-\t\tchain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator)\n-\t\t\t.accept(this);\t\t\n-\t}\n-\t\n-\tprotected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfig instance, PermissionCreator<FormConfigId> permissionCreator) {\n-\t\tpatchConsumerChain = super.buildChain(patchConsumerChain, storage, user, instance, permissionCreator);\n-\t\tif(getValues() != null && user.isPermitted(permissionCreator.apply(Ability.MODIFY.asSet(), instance.getId()))) {\n-\t\t\tpatchConsumerChain = patchConsumerChain.andThen(instance.valueSetter());\n-\t\t}\n-\t\treturn patchConsumerChain;\n-\t}\n+    private JsonNode values;\n+\n+    public void applyTo(FormConfig instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator) {\n+        chain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator)\n+            .accept(this);\n+    }\n+\n+    protected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfig instance, PermissionCreator<FormConfigId> permissionCreator) {\n+        patchConsumerChain = super.buildChain(patchConsumerChain, storage, user, instance, permissionCreator);\n+        if (getValues() != null && user.isPermitted(permissionCreator.apply(Ability.MODIFY.asSet(), instance.getId()))) {\n+            patchConsumerChain = patchConsumerChain.andThen(instance.valueSetter());\n+        }\n+        return patchConsumerChain;\n+    }\n }\n",
            "diff_size": 14
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/95/FormConfigPatch.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/95/FormConfigPatch.java\nindex 9ee61a20eab..4d7d5eb5afd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/95/FormConfigPatch.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/naturalize/95/FormConfigPatch.java\n@@ -20,11 +20,11 @@ import lombok.experimental.SuperBuilder;\n public class FormConfigPatch extends MetaDataPatch {\n \tprivate JsonNode values;\n \t\n-\tpublic void applyTo(FormConfig instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator){\n+\tpublic void applyTo(FormConfig instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator) {\n \t\tchain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator)\n-\t\t\t.accept(this);\t\t\n+\t\t\t.accept(this);\n \t}\n-\t\n+\n \tprotected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfig instance, PermissionCreator<FormConfigId> permissionCreator) {\n \t\tpatchConsumerChain = super.buildChain(patchConsumerChain, storage, user, instance, permissionCreator);\n \t\tif(getValues() != null && user.isPermitted(permissionCreator.apply(Ability.MODIFY.asSet(), instance.getId()))) {\n@@ -32,4 +32,4 @@ public class FormConfigPatch extends MetaDataPatch {\n \t\t}\n \t\treturn patchConsumerChain;\n \t}\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "21",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "21",
                    "column": "2",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "23",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "23",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "24",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "24",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "25",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "25",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "27",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "27",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "28",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "28",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "29",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "29",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "30",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "30",
                    "column": "4",
                    "severity": "warning",
                    "message": "'if' child has incorrect indentation level 3, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "31",
                    "column": "3",
                    "severity": "warning",
                    "message": "'if rcurly' has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "32",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "32",
                    "column": "3",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "33",
                    "severity": "error",
                    "message": "Indent must use tab characters",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineJavaCheck"
                },
                {
                    "line": "33",
                    "column": "2",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 1, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/95/FormConfigPatch.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/95/FormConfigPatch.java\nindex 9ee61a20eab..d7b821b1535 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/95/FormConfigPatch.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/codebuff/95/FormConfigPatch.java\n@@ -1,7 +1,6 @@\n package com.bakdata.conquery.apiv1;\n \n import java.util.function.Consumer;\n-\n import com.bakdata.conquery.apiv1.forms.FormConfig;\n import com.bakdata.conquery.io.xodus.MasterMetaStorage;\n import com.bakdata.conquery.models.auth.entities.User;\n@@ -15,21 +14,21 @@ import lombok.experimental.SuperBuilder;\n /**\n  * Specific class to also patch the values stored in a {@link FormConfig}.\n  */\n-@Data\n-@SuperBuilder\n+\n+@Data @SuperBuilder\n public class FormConfigPatch extends MetaDataPatch {\n-\tprivate JsonNode values;\n-\t\n-\tpublic void applyTo(FormConfig instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator){\n-\t\tchain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator)\n-\t\t\t.accept(this);\t\t\n-\t}\n-\t\n-\tprotected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfig instance, PermissionCreator<FormConfigId> permissionCreator) {\n-\t\tpatchConsumerChain = super.buildChain(patchConsumerChain, storage, user, instance, permissionCreator);\n-\t\tif(getValues() != null && user.isPermitted(permissionCreator.apply(Ability.MODIFY.asSet(), instance.getId()))) {\n-\t\t\tpatchConsumerChain = patchConsumerChain.andThen(instance.valueSetter());\n-\t\t}\n-\t\treturn patchConsumerChain;\n-\t}\n-}\n+\n+ private JsonNode values;\n+\n+ public void applyTo(FormConfig instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator) {\n+  chain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator).accept(this);\n+ }\n+\n+ protected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfig instance, PermissionCreator<FormConfigId> permissionCreator) {\n+  patchConsumerChain = super.buildChain(patchConsumerChain, storage, user, instance, permissionCreator);\n+  if (getValues() != null && user.isPermitted(permissionCreator.apply(Ability.MODIFY.asSet(), instance.getId()))) {\n+   patchConsumerChain = patchConsumerChain.andThen(instance.valueSetter());\n+  }\n+  return patchConsumerChain;\n+ }\n+}\n\\ No newline at end of file\n",
            "diff_size": 18
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "25",
                    "column": "9",
                    "severity": "warning",
                    "message": "'method call' child has incorrect indentation level 8, expected level should be 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/95/FormConfigPatch.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/95/FormConfigPatch.java\nindex 9ee61a20eab..09d90bfbc57 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/95/FormConfigPatch.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_random/95/FormConfigPatch.java\n@@ -22,9 +22,10 @@ public class FormConfigPatch extends MetaDataPatch {\n \t\n \tpublic void applyTo(FormConfig instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator){\n \t\tchain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator)\n-\t\t\t.accept(this);\t\t\n+\t\t.accept(this);\n+\n \t}\n-\t\n+\n \tprotected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfig instance, PermissionCreator<FormConfigId> permissionCreator) {\n \t\tpatchConsumerChain = super.buildChain(patchConsumerChain, storage, user, instance, permissionCreator);\n \t\tif(getValues() != null && user.isPermitted(permissionCreator.apply(Ability.MODIFY.asSet(), instance.getId()))) {\n",
            "diff_size": 3
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "27",
                    "column": "1",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/95/FormConfigPatch.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/95/FormConfigPatch.java\nindex 9ee61a20eab..4044d340278 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/errored/1/95/FormConfigPatch.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/bakdata-conquery/styler_three_grams/95/FormConfigPatch.java\n@@ -21,11 +21,10 @@ public class FormConfigPatch extends MetaDataPatch {\n \tprivate JsonNode values;\n \t\n \tpublic void applyTo(FormConfig instance, MasterMetaStorage storage, User user, PermissionCreator<FormConfigId> permissionCreator){\n-\t\tchain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator)\n-\t\t\t.accept(this);\t\t\n+\t\tchain(QueryUtils.getNoOpEntryPoint(), storage, user, instance, permissionCreator).accept(this);\n \t}\n-\t\n-\tprotected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfig instance, PermissionCreator<FormConfigId> permissionCreator) {\n+\n+protected Consumer<FormConfigPatch> chain(Consumer<FormConfigPatch> patchConsumerChain, MasterMetaStorage storage, User user, FormConfig instance, PermissionCreator<FormConfigId> permissionCreator) {\n \t\tpatchConsumerChain = super.buildChain(patchConsumerChain, storage, user, instance, permissionCreator);\n \t\tif(getValues() != null && user.isPermitted(permissionCreator.apply(Ability.MODIFY.asSet(), instance.getId()))) {\n \t\t\tpatchConsumerChain = patchConsumerChain.andThen(instance.valueSetter());\n",
            "diff_size": 4
        }
    ],
    "repaired_by": [
        "naturalize"
    ],
    "not_repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "416",
    "information": {
        "errors": [
            {
                "line": "81",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 101).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "\n    /**\n     * Get the RequestMethod for the given String constant, and throw an exception if the constant is\n     * not recognized.\n     */\n    public static RequestMethod valueOfStrict(String constant) {",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/416/HttpRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/416/HttpRequest.java\nindex 854b9872e40..92ae8678d77 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/416/HttpRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/416/HttpRequest.java\n@@ -29,8 +29,8 @@ import java.util.Objects;\n  * log entry.\n  *\n  * @see <a href=\n- *     \"https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/LogEntry#httprequest\">\n- *     Http Request</a>\n+ * \"https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/LogEntry#httprequest\">\n+ * Http Request</a>\n  */\n public final class HttpRequest implements Serializable {\n \n@@ -119,7 +119,8 @@ public final class HttpRequest implements Serializable {\n     private boolean cacheValidatedWithOriginServer;\n     private Long cacheFillBytes;\n \n-    Builder() {}\n+    Builder() {\n+    }\n \n     Builder(HttpRequest request) {\n       this.requestMethod = request.requestMethod;\n@@ -221,7 +222,7 @@ public final class HttpRequest implements Serializable {\n      * Sets the referer URL of the request, as defined in HTTP/1.1 Header Field Definitions.\n      *\n      * @see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html\">HTTP/1.1 Header Field\n-     *     Definitions</a>\n+     * Definitions</a>\n      */\n     public Builder setReferer(String referer) {\n       this.referer = referer;\n@@ -368,7 +369,7 @@ public final class HttpRequest implements Serializable {\n    * Returns the referer URL of the request, as defined in HTTP/1.1 Header Field Definitions.\n    *\n    * @see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html\">HTTP/1.1 Header Field\n-   *     Definitions</a>\n+   * Definitions</a>\n    */\n   public String getReferer() {\n     return referer;\n",
            "diff_size": 6
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "58",
                    "severity": "warning",
                    "message": "'member def modifier' has incorrect indentation level 2, expected level should be 4.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "414",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 108).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/416/HttpRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/416/HttpRequest.java\nindex 854b9872e40..788c782d2f6 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/416/HttpRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/416/HttpRequest.java\n@@ -54,7 +54,8 @@ public final class HttpRequest implements Serializable {\n    * The HTTP request method.\n    */\n   public static final class RequestMethod extends StringEnumValue {\n-    private static final long serialVersionUID = 2403969065179486996L;\n+\n+  private static final long serialVersionUID = 2403969065179486996L;\n \n     private RequestMethod(String constant) {\n       super(constant);\n@@ -69,8 +70,7 @@ public final class HttpRequest implements Serializable {\n         };\n \n     private static final StringEnumType<RequestMethod> type = new StringEnumType(\n-        RequestMethod.class,\n-        CONSTRUCTOR);\n+        RequestMethod.class, CONSTRUCTOR);\n \n     public static final RequestMethod GET = type.createAndRegister(\"GET\");\n     public static final RequestMethod HEAD = type.createAndRegister(\"HEAD\");\n@@ -411,8 +411,7 @@ public final class HttpRequest implements Serializable {\n   @Override\n   public int hashCode() {\n     return Objects.hash(requestMethod, requestUrl, requestSize, status, responseSize, userAgent,\n-        serverIp, cacheLookup, cacheFillBytes, remoteIp, referer, cacheHit,\n-        cacheValidatedWithOriginServer);\n+        serverIp, cacheLookup, cacheFillBytes, remoteIp, referer, cacheHit, cacheValidatedWithOriginServer);\n   }\n \n   @Override\n@@ -549,4 +548,4 @@ public final class HttpRequest implements Serializable {\n     }\n     return builder.build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 7
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "65",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 116).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "66",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 2, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "69",
                    "severity": "warning",
                    "message": "'method def rcurly' has incorrect indentation level 0, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "warning",
                    "message": "'object def rcurly' has incorrect indentation level 0, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "71",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 115).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "82",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "445",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 197).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "450",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 479).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "463",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "464",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "465",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "466",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "467",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "468",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "469",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "470",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "471",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "472",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "473",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "474",
                    "severity": "warning",
                    "message": "'method def' child has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "486",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 107).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/416/HttpRequest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/416/HttpRequest.java\nindex 854b9872e40..9b1458f2aed 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/416/HttpRequest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/416/HttpRequest.java\n@@ -20,7 +20,6 @@ import com.google.api.core.ApiFunction;\n import com.google.cloud.StringEnumType;\n import com.google.cloud.StringEnumValue;\n import com.google.common.base.MoreObjects;\n-\n import java.io.Serializable;\n import java.util.Objects;\n \n@@ -32,10 +31,11 @@ import java.util.Objects;\n  *     \"https://cloud.google.com/logging/docs/api/ref_v2beta1/rest/v2beta1/LogEntry#httprequest\">\n  *     Http Request</a>\n  */\n+\n+\n public final class HttpRequest implements Serializable {\n \n   private static final long serialVersionUID = -274998005454709817L;\n-\n   private final RequestMethod requestMethod;\n   private final String requestUrl;\n   private final Long requestSize;\n@@ -53,34 +53,36 @@ public final class HttpRequest implements Serializable {\n   /**\n    * The HTTP request method.\n    */\n+\n   public static final class RequestMethod extends StringEnumValue {\n+\n     private static final long serialVersionUID = 2403969065179486996L;\n \n     private RequestMethod(String constant) {\n       super(constant);\n     }\n \n-    private static final ApiFunction<String, RequestMethod> CONSTRUCTOR =\n-        new ApiFunction<String, RequestMethod>() {\n-          @Override\n-          public RequestMethod apply(String constant) {\n-            return new RequestMethod(constant);\n-          }\n-        };\n-\n-    private static final StringEnumType<RequestMethod> type = new StringEnumType(\n-        RequestMethod.class,\n-        CONSTRUCTOR);\n+    private static final ApiFunction<String, RequestMethod> CONSTRUCTOR = new ApiFunction<String, RequestMethod>() {\n+@Override\n+public RequestMethod apply(String constant) {\n+  return new RequestMethod(constant);\n+}\n+};\n+    private static final StringEnumType<RequestMethod> type = new StringEnumType(RequestMethod.class, CONSTRUCTOR);\n \n     public static final RequestMethod GET = type.createAndRegister(\"GET\");\n+\n     public static final RequestMethod HEAD = type.createAndRegister(\"HEAD\");\n+\n     public static final RequestMethod PUT = type.createAndRegister(\"PUT\");\n+\n     public static final RequestMethod POST = type.createAndRegister(\"POST\");\n \n     /**\n      * Get the RequestMethod for the given String constant, and throw an exception if the constant is\n      * not recognized.\n      */\n+\n     public static RequestMethod valueOfStrict(String constant) {\n       return type.valueOfStrict(constant);\n     }\n@@ -88,6 +90,7 @@ public final class HttpRequest implements Serializable {\n     /**\n      * Get the RequestMethod for the given String constant, and allow unrecognized values.\n      */\n+\n     public static RequestMethod valueOf(String constant) {\n       return type.valueOf(constant);\n     }\n@@ -95,6 +98,7 @@ public final class HttpRequest implements Serializable {\n     /**\n      * Return the known values for RequestMethod.\n      */\n+\n     public static RequestMethod[] values() {\n       return type.values();\n     }\n@@ -103,6 +107,7 @@ public final class HttpRequest implements Serializable {\n   /**\n    * A builder for {@code HttpRequest} objects.\n    */\n+\n   public static final class Builder {\n \n     private RequestMethod requestMethod;\n@@ -141,6 +146,7 @@ public final class HttpRequest implements Serializable {\n     /**\n      * Sets the HTTP request method.\n      */\n+\n     public Builder setRequestMethod(RequestMethod requestMethod) {\n       this.requestMethod = requestMethod;\n       return this;\n@@ -152,6 +158,7 @@ public final class HttpRequest implements Serializable {\n      * host name, the path and the query portion of the URL that was requested. Example:\n      * {@code http://example.com/some/info?color=red}.\n      */\n+\n     public Builder setRequestUrl(String requestUrl) {\n       this.requestUrl = requestUrl;\n       return this;\n@@ -162,6 +169,7 @@ public final class HttpRequest implements Serializable {\n      * Sets the size of the HTTP request message in bytes, including the request headers and the\n      * request body.\n      */\n+\n     public Builder setRequestSize(long requestSize) {\n       this.requestSize = requestSize;\n       return this;\n@@ -171,6 +179,7 @@ public final class HttpRequest implements Serializable {\n     /**\n      * Sets the response code indicating the status of response.\n      */\n+\n     public Builder setStatus(int status) {\n       this.status = status;\n       return this;\n@@ -181,6 +190,7 @@ public final class HttpRequest implements Serializable {\n      * Sets the size of the HTTP response message sent back to the client, in bytes, including the\n      * response headers and the response body.\n      */\n+\n     public Builder setResponseSize(long responseSize) {\n       this.responseSize = responseSize;\n       return this;\n@@ -191,6 +201,7 @@ public final class HttpRequest implements Serializable {\n      * Sets the user agent sent by the client. Example:\n      * {@code Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET CLR 1.0.3705)}.\n      */\n+\n     public Builder setUserAgent(String userAgent) {\n       this.userAgent = userAgent;\n       return this;\n@@ -201,6 +212,7 @@ public final class HttpRequest implements Serializable {\n      * Sets the IP address (IPv4 or IPv6) of the client that issued the HTTP request. Examples:\n      * {@code 192.168.1.1}, {@code FE80::0202:B3FF:FE1E:8329}.\n      */\n+\n     public Builder setRemoteIp(String remoteIp) {\n       this.remoteIp = remoteIp;\n       return this;\n@@ -211,6 +223,7 @@ public final class HttpRequest implements Serializable {\n      * Sets the IP address (IPv4 or IPv6) of the origin server that the request was sent to.\n      * Examples: {@code 192.168.1.1}, {@code FE80::0202:B3FF:FE1E:8329}.\n      */\n+\n     public Builder setServerIp(String serverIp) {\n       this.serverIp = serverIp;\n       return this;\n@@ -223,6 +236,7 @@ public final class HttpRequest implements Serializable {\n      * @see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html\">HTTP/1.1 Header Field\n      *     Definitions</a>\n      */\n+\n     public Builder setReferer(String referer) {\n       this.referer = referer;\n       return this;\n@@ -232,6 +246,7 @@ public final class HttpRequest implements Serializable {\n     /**\n      * Sets whether or not a cache lookup was attempted. If not set, {@code false} is used.\n      */\n+\n     public Builder setCacheLookup(boolean cacheLookup) {\n       this.cacheLookup = cacheLookup;\n       return this;\n@@ -242,6 +257,7 @@ public final class HttpRequest implements Serializable {\n      * Sets whether or not an entity was served from cache (with or without validation). If not set,\n      * {@code false} is used.\n      */\n+\n     public Builder setCacheHit(boolean cacheHit) {\n       this.cacheHit = cacheHit;\n       return this;\n@@ -253,6 +269,7 @@ public final class HttpRequest implements Serializable {\n      * from cache. This field is only meaningful if {@link #setCacheHit(boolean)} is set to\n      * {@code true}. If not set, {@code false} is used.\n      */\n+\n     public Builder setCacheValidatedWithOriginServer(boolean cacheValidatedWithOriginServer) {\n       this.cacheValidatedWithOriginServer = cacheValidatedWithOriginServer;\n       return this;\n@@ -263,6 +280,7 @@ public final class HttpRequest implements Serializable {\n      * Sets the number of HTTP response bytes inserted into cache. Set only when a cache fill was\n      * attempted.\n      */\n+\n     public Builder setCacheFillBytes(long cacheFillBytes) {\n       this.cacheFillBytes = cacheFillBytes;\n       return this;\n@@ -271,6 +289,7 @@ public final class HttpRequest implements Serializable {\n     /**\n      * Creates a {@code HttpRequest} object for this builder.\n      */\n+\n     public HttpRequest build() {\n       return new HttpRequest(this);\n     }\n@@ -296,6 +315,7 @@ public final class HttpRequest implements Serializable {\n   /**\n    * Returns the HTTP request method.\n    */\n+\n   public RequestMethod getRequestMethod() {\n     return requestMethod;\n   }\n@@ -306,6 +326,7 @@ public final class HttpRequest implements Serializable {\n    * host name, the path and the query portion of the URL that was requested. Example:\n    * {@code http://example.com/some/info?color=red}.\n    */\n+\n   public String getRequestUrl() {\n     return requestUrl;\n   }\n@@ -315,6 +336,7 @@ public final class HttpRequest implements Serializable {\n    * Returns the size of the HTTP request message in bytes, including the request headers and the\n    * request body.\n    */\n+\n   public Long getRequestSize() {\n     return requestSize;\n   }\n@@ -323,6 +345,7 @@ public final class HttpRequest implements Serializable {\n   /**\n    * Returns the response code indicating the status of response.\n    */\n+\n   public Integer getStatus() {\n     return status;\n   }\n@@ -332,6 +355,7 @@ public final class HttpRequest implements Serializable {\n    * Returns the size of the HTTP response message sent back to the client, in bytes, including the\n    * response headers and the response body.\n    */\n+\n   public Long getResponseSize() {\n     return responseSize;\n   }\n@@ -341,6 +365,7 @@ public final class HttpRequest implements Serializable {\n    * Returns the user agent sent by the client. Example:\n    * {@code Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET CLR 1.0.3705)}.\n    */\n+\n   public String getUserAgent() {\n     return userAgent;\n   }\n@@ -350,6 +375,7 @@ public final class HttpRequest implements Serializable {\n    * Returns the IP address (IPv4 or IPv6) of the client that issued the HTTP request. Examples:\n    * {@code 192.168.1.1}, {@code FE80::0202:B3FF:FE1E:8329}.\n    */\n+\n   public String getRemoteIp() {\n     return remoteIp;\n   }\n@@ -359,6 +385,7 @@ public final class HttpRequest implements Serializable {\n    * Returns the IP address (IPv4 or IPv6) of the origin server that the request was sent to.\n    * Examples: {@code 192.168.1.1}, {@code FE80::0202:B3FF:FE1E:8329}.\n    */\n+\n   public String getServerIp() {\n     return serverIp;\n   }\n@@ -370,6 +397,7 @@ public final class HttpRequest implements Serializable {\n    * @see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html\">HTTP/1.1 Header Field\n    *     Definitions</a>\n    */\n+\n   public String getReferer() {\n     return referer;\n   }\n@@ -378,6 +406,7 @@ public final class HttpRequest implements Serializable {\n    * Returns whether or not a cache lookup was attempted. If not set, this method returns\n    * {@code false}.\n    */\n+\n   public boolean cacheLookup() {\n     return cacheLookup;\n   }\n@@ -386,6 +415,7 @@ public final class HttpRequest implements Serializable {\n    * Returns whether or not an entity was served from cache (with or without validation). If not\n    * set, this method returns {@code false}.\n    */\n+\n   public boolean cacheHit() {\n     return cacheHit;\n   }\n@@ -395,6 +425,7 @@ public final class HttpRequest implements Serializable {\n    * from cache. If not set, this method returns {@code false}. This field is only meaningful if\n    * {@link #cacheHit()} is set to {@code true}.\n    */\n+\n   public boolean cacheValidatedWithOriginServer() {\n     return cacheValidatedWithOriginServer;\n   }\n@@ -404,34 +435,19 @@ public final class HttpRequest implements Serializable {\n    * Returns the number of HTTP response bytes inserted into cache. Set only when a cache fill was\n    * attempted.\n    */\n+\n   public Long getCacheFillBytes() {\n     return cacheFillBytes;\n   }\n \n   @Override\n   public int hashCode() {\n-    return Objects.hash(requestMethod, requestUrl, requestSize, status, responseSize, userAgent,\n-        serverIp, cacheLookup, cacheFillBytes, remoteIp, referer, cacheHit,\n-        cacheValidatedWithOriginServer);\n+    return Objects.hash(requestMethod, requestUrl, requestSize, status, responseSize, userAgent, serverIp, cacheLookup, cacheFillBytes, remoteIp, referer, cacheHit, cacheValidatedWithOriginServer);\n   }\n \n   @Override\n   public String toString() {\n-    return MoreObjects.toStringHelper(this)\n-        .add(\"requestMethod\", requestMethod)\n-        .add(\"requestUrl\", requestUrl)\n-        .add(\"requestSize\", requestSize)\n-        .add(\"status\", status)\n-        .add(\"responseSize\", responseSize)\n-        .add(\"userAgent\", userAgent)\n-        .add(\"remoteIp\", remoteIp)\n-        .add(\"serverIp\", serverIp)\n-        .add(\"referer\", referer)\n-        .add(\"cacheLookup\", cacheLookup)\n-        .add(\"cacheHit\", cacheHit)\n-        .add(\"cacheValidatedWithOriginServer\", cacheValidatedWithOriginServer)\n-        .add(\"cacheFillBytes\", cacheFillBytes)\n-        .toString();\n+    return MoreObjects.toStringHelper(this).add(\"requestMethod\", requestMethod).add(\"requestUrl\", requestUrl).add(\"requestSize\", requestSize).add(\"status\", status).add(\"responseSize\", responseSize).add(\"userAgent\", userAgent).add(\"remoteIp\", remoteIp).add(\"serverIp\", serverIp).add(\"referer\", referer).add(\"cacheLookup\", cacheLookup).add(\"cacheHit\", cacheHit).add(\"cacheValidatedWithOriginServer\", cacheValidatedWithOriginServer).add(\"cacheFillBytes\", cacheFillBytes).toString();\n   }\n \n   @Override\n@@ -444,30 +460,30 @@ public final class HttpRequest implements Serializable {\n     }\n     HttpRequest other = (HttpRequest) obj;\n     return Objects.equals(requestMethod, other.requestMethod)\n-        && Objects.equals(requestUrl, other.requestUrl)\n-        && Objects.equals(requestSize, other.requestSize)\n-        && Objects.equals(status, other.status)\n-        && Objects.equals(responseSize, other.responseSize)\n-        && Objects.equals(userAgent, other.userAgent)\n-        && Objects.equals(remoteIp, other.remoteIp)\n-        && Objects.equals(serverIp, other.serverIp)\n-        && Objects.equals(referer, other.referer)\n-        && cacheLookup == other.cacheLookup\n-        && cacheHit == other.cacheHit\n-        && cacheValidatedWithOriginServer == other.cacheValidatedWithOriginServer\n-        && Objects.equals(cacheFillBytes, other.cacheFillBytes);\n+    && Objects.equals(requestUrl, other.requestUrl)\n+    && Objects.equals(requestSize, other.requestSize)\n+    && Objects.equals(status, other.status)\n+    && Objects.equals(responseSize, other.responseSize)\n+    && Objects.equals(userAgent, other.userAgent)\n+    && Objects.equals(remoteIp, other.remoteIp)\n+    && Objects.equals(serverIp, other.serverIp)\n+    && Objects.equals(referer, other.referer)\n+    && cacheLookup == other.cacheLookup\n+    && cacheHit == other.cacheHit\n+    && cacheValidatedWithOriginServer == other.cacheValidatedWithOriginServer\n+    && Objects.equals(cacheFillBytes, other.cacheFillBytes);\n   }\n \n   /**\n    * Returns a builder for this object.\n    */\n+\n   public Builder toBuilder() {\n     return new Builder(this);\n   }\n \n   com.google.logging.type.HttpRequest toPb() {\n-    com.google.logging.type.HttpRequest.Builder builder =\n-        com.google.logging.type.HttpRequest.newBuilder();\n+    com.google.logging.type.HttpRequest.Builder builder = com.google.logging.type.HttpRequest.newBuilder();\n     if (requestMethod != null) {\n       builder.setRequestMethod(requestMethod.name());\n     }\n@@ -508,6 +524,7 @@ public final class HttpRequest implements Serializable {\n   /**\n    * Returns a builder for {@code HttpRequest} objects.\n    */\n+\n   public static Builder newBuilder() {\n     return new Builder();\n   }\n@@ -549,4 +566,4 @@ public final class HttpRequest implements Serializable {\n     }\n     return builder.build();\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 86
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "81",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 101).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
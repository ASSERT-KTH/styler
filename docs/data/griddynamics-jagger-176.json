{
    "project_name": "griddynamics-jagger",
    "error_id": "176",
    "information": {
        "errors": [
            {
                "line": "12",
                "column": "58",
                "severity": "warning",
                "message": "WhitespaceAround: '{' is not preceded with whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
            }
        ]
    },
    "source_code": " * @n\n * @ingroup Main_Services_group */\npublic interface SessionInfoService extends JaggerService{\n\n    /** Returns current session comment\n     * @author Gribov Kirill",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/176/SessionInfoService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/176/SessionInfoService.java\nindex 078fbca8f9d..50f0b55b194 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/176/SessionInfoService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler/176/SessionInfoService.java\n@@ -9,7 +9,7 @@ import java.util.Set;\n  * @details Where this service is available you can find in chapter: @ref section_listeners_services @n\n  * @n\n  * @ingroup Main_Services_group */\n-public interface SessionInfoService extends JaggerService{\n+public interface SessionInfoService extends JaggerService {\n \n     /** Returns current session comment\n      * @author Gribov Kirill\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/176/SessionInfoService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/176/SessionInfoService.java\nindex 078fbca8f9d..fe37e5171eb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/176/SessionInfoService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/intellij/176/SessionInfoService.java\n@@ -2,48 +2,62 @@ package com.griddynamics.jagger.engine.e1.services;\n \n import java.util.Set;\n \n-/** Service gives ability to create and modify session metadata(such as session comment)\n+/**\n+ * Service gives ability to create and modify session metadata(such as session comment)\n+ *\n  * @author Gribov Kirill\n  * @n\n  * @par Details:\n  * @details Where this service is available you can find in chapter: @ref section_listeners_services @n\n  * @n\n- * @ingroup Main_Services_group */\n-public interface SessionInfoService extends JaggerService{\n+ * @ingroup Main_Services_group\n+ */\n+public interface SessionInfoService extends JaggerService {\n \n-    /** Returns current session comment\n-     * @author Gribov Kirill\n+    /**\n+     * Returns current session comment\n      *\n+     * @return session comment\n+     * @author Gribov Kirill\n      * @n\n-     *@return session comment */\n+     */\n     String getComment();\n \n-    /** Set new session comment. Null value will be ignored.\n+    /**\n+     * Set new session comment. Null value will be ignored.\n+     *\n+     * @param comment - new session comment\n      * @author Gribov Kirill\n      * @n\n-     * @param comment - new session comment */\n+     */\n     void setComment(String comment);\n \n-    /** Append string to current session comment. Null value will be ignored.\n+    /**\n+     * Append string to current session comment. Null value will be ignored.\n+     *\n+     * @param st - string to append\n      * @author Gribov Kirill\n      * @n\n-     * @param st - string to append */\n+     */\n     void appendToComment(String st);\n \n-    /** Creates new or update existing tag\n+    /**\n+     * Creates new or update existing tag\n      *\n-     * @param tagName - a tag name which should be created or updated\n+     * @param tagName        - a tag name which should be created or updated\n      * @param tagDescription - a description of the tag\n      */\n     void saveOrUpdateTag(String tagName, String tagDescription);\n \n-    /** Marks session with tag. Previously set tags are not influenced\n+    /**\n+     * Marks session with tag. Previously set tags are not influenced\n      *\n      * @param tagName - a tag name which should be used to mark a session\n      */\n     void markSessionWithTag(String tagName);\n \n-    /** Returns tags which already marked the session\n+    /**\n+     * Returns tags which already marked the session\n      *\n      * @return set names of tags\n      */\n",
            "diff_size": 28
        },
        {
            "tool": "naturalize",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/176/SessionInfoService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/176/SessionInfoService.java\nindex 078fbca8f9d..dec9c57468e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/176/SessionInfoService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/naturalize/176/SessionInfoService.java\n@@ -9,7 +9,7 @@ import java.util.Set;\n  * @details Where this service is available you can find in chapter: @ref section_listeners_services @n\n  * @n\n  * @ingroup Main_Services_group */\n-public interface SessionInfoService extends JaggerService{\n+public interface SessionInfoService extends JaggerService {\n \n     /** Returns current session comment\n      * @author Gribov Kirill\n@@ -49,4 +49,4 @@ public interface SessionInfoService extends JaggerService{\n      */\n     Set<String> getSessionTags();\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/176/SessionInfoService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/176/SessionInfoService.java\nindex 078fbca8f9d..50f0b55b194 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/176/SessionInfoService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_random/176/SessionInfoService.java\n@@ -9,7 +9,7 @@ import java.util.Set;\n  * @details Where this service is available you can find in chapter: @ref section_listeners_services @n\n  * @n\n  * @ingroup Main_Services_group */\n-public interface SessionInfoService extends JaggerService{\n+public interface SessionInfoService extends JaggerService {\n \n     /** Returns current session comment\n      * @author Gribov Kirill\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/176/SessionInfoService.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/176/SessionInfoService.java\nindex 078fbca8f9d..50f0b55b194 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/errored/1/176/SessionInfoService.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/griddynamics-jagger/styler_three_grams/176/SessionInfoService.java\n@@ -9,7 +9,7 @@ import java.util.Set;\n  * @details Where this service is available you can find in chapter: @ref section_listeners_services @n\n  * @n\n  * @ingroup Main_Services_group */\n-public interface SessionInfoService extends JaggerService{\n+public interface SessionInfoService extends JaggerService {\n \n     /** Returns current session comment\n      * @author Gribov Kirill\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "codebuff"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "2061",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "39",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "39",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "43",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "87",
                    "column": "80",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "106",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "115",
                    "column": "113",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "117",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "127",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "150",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "151",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "153",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "160",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "172",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "174",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "11",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "216",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "241",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "253",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "58",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "267",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "269",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "272",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "282",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "284",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "288",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "326",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "342",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "354",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "356",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "362",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "390",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "392",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "404",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2061/DeadState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2061/DeadState.java\nindex c864eef7013..82a699b00b3 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2061/DeadState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/2061/DeadState.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.store.kvstore;\n \n import java.io.File;\n@@ -32,367 +33,375 @@ import org.neo4j.io.pagecache.tracing.cursor.context.VersionContextSupplier;\n \n abstract class DeadState<Key> extends ProgressiveState<Key>\n {\n-    @Override\n-    protected Headers headers()\n+  @Override\n+  protected Headers headers()\n+  {\n+    throw new IllegalStateException(\"Cannot read in state: \" + stateName());\n+  }\n+\n+  @Override\n+  protected boolean lookup(Key key, ValueSink sink)\n+  {\n+    throw new IllegalStateException(\"Cannot read in state: \" + stateName());\n+  }\n+\n+  @Override\n+  protected DataProvider dataProvider()\n+  {\n+    throw new IllegalStateException(\"Cannot read in state: \" + stateName());\n+  }\n+\n+  @Override\n+  protected int storedEntryCount()\n+  {\n+    throw new IllegalStateException(\"Cannot read in state: \" + stateName());\n+  }\n+\n+  @Override\n+  protected Optional<EntryUpdater<Key>> optionalUpdater(long version, Lock lock)\n+  {\n+    throw new IllegalStateException(\"Cannot write in state: \" + stateName());\n+  }\n+\n+  @Override\n+  protected EntryUpdater<Key> unsafeUpdater(Lock lock)\n+  {\n+    throw new IllegalStateException(\"Cannot write in state: \" + stateName());\n+  }\n+\n+  @Override\n+  protected boolean hasChanges()\n+  {\n+    return false;\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    throw new IllegalStateException(\"Cannot close() in state: \" + stateName());\n+  }\n+\n+  @Override\n+  protected File file()\n+  {\n+    throw new IllegalStateException(\"No file assigned in state: \" + stateName());\n+  }\n+\n+  @Override\n+  protected long version()\n+  {\n+    return keys.version(null);\n+  }\n+\n+  @Override\n+  protected KeyFormat<Key> keyFormat()\n+  {\n+    return keys;\n+  }\n+\n+  private final KeyFormat<Key> keys;\n+  final ActiveState.Factory stateFactory;\n+  final VersionContextSupplier versionContextSupplier;\n+\n+  private DeadState(KeyFormat<Key> keys, ActiveState.Factory stateFactory, VersionContextSupplier versionContextSupplier)\n+  {\n+    this.keys = keys;\n+    this.stateFactory = stateFactory;\n+    this.versionContextSupplier = versionContextSupplier;\n+  }\n+\n+  static class Stopped<Key> extends DeadState<Key>\n+  {\n+    Stopped(KeyFormat<Key> keys, ActiveState.Factory stateFactory, VersionContextSupplier versionContextSupplier)\n     {\n-        throw new IllegalStateException( \"Cannot read in state: \" + stateName() );\n+      super(keys, stateFactory, versionContextSupplier);\n     }\n \n     @Override\n-    protected boolean lookup( Key key, ValueSink sink )\n+    String stateName()\n     {\n-        throw new IllegalStateException( \"Cannot read in state: \" + stateName() );\n+      return \"stopped\";\n     }\n \n     @Override\n-    protected DataProvider dataProvider()\n+    ProgressiveState<Key> initialize(RotationStrategy rotation) throws IOException\n     {\n-        throw new IllegalStateException( \"Cannot read in state: \" + stateName() );\n+      Pair<File, KeyValueStoreFile> opened = rotation.open();\n+      if (opened == null)\n+      {\n+        return new NeedsCreation<>(keyFormat(), stateFactory, rotation, versionContextSupplier);\n+      }\n+      return new Prepared<>(stateFactory.open(ReadableState.store(keyFormat(), opened.other()),\n+          opened.first(), versionContextSupplier));\n     }\n \n     @Override\n-    protected int storedEntryCount()\n+    ProgressiveState<Key> stop()\n     {\n-        throw new IllegalStateException( \"Cannot read in state: \" + stateName() );\n+      return this;\n     }\n+  }\n \n-    @Override\n-    protected Optional<EntryUpdater<Key>> optionalUpdater( long version, Lock lock )\n-    {\n-        throw new IllegalStateException( \"Cannot write in state: \" + stateName() );\n-    }\n+  private static class NeedsCreation<Key> extends DeadState<Key>\n+      implements Function<ActiveState<Key>, NeedsCreation<Key>>\n+  {\n+    private final RotationStrategy rotation;\n \n-    @Override\n-    protected EntryUpdater<Key> unsafeUpdater( Lock lock )\n+    private NeedsCreation(KeyFormat<Key> keys, ActiveState.Factory stateFactory, RotationStrategy rotation,\n+                          VersionContextSupplier versionContextSupplier)\n     {\n-        throw new IllegalStateException( \"Cannot write in state: \" + stateName() );\n+      super(keys, stateFactory, versionContextSupplier);\n+      this.rotation = rotation;\n     }\n \n     @Override\n-    protected boolean hasChanges()\n+    ProgressiveState<Key> stop()\n     {\n-        return false;\n+      return new Stopped<>(keyFormat(), stateFactory, versionContextSupplier);\n     }\n \n     @Override\n-    public void close()\n+    String stateName()\n     {\n-        throw new IllegalStateException( \"Cannot close() in state: \" + stateName() );\n+      return \"needs creation\";\n     }\n \n     @Override\n-    protected File file()\n+    ActiveState<Key> start(DataInitializer<EntryUpdater<Key>> initializer) throws IOException\n     {\n-        throw new IllegalStateException( \"No file assigned in state: \" + stateName() );\n+      if (initializer == null)\n+      {\n+        throw new IllegalStateException(\"Store needs to be created, and no initializer is given.\");\n+      }\n+      Pair<File, KeyValueStoreFile> created = initialState(initializer);\n+      return stateFactory.open(ReadableState.store(keyFormat(), created.other()), created.first(),\n+          versionContextSupplier);\n     }\n \n-    @Override\n-    protected long version()\n+    private Pair<File, KeyValueStoreFile> initialState(DataInitializer<EntryUpdater<Key>> initializer)\n+        throws IOException\n     {\n-        return keys.version( null );\n+      long version = initializer.initialVersion();\n+      try (ActiveState<Key> creation = stateFactory.open(ReadableState.empty(keyFormat(), version), null,\n+          versionContextSupplier))\n+      {\n+        try (EntryUpdater<Key> updater = creation.resetter(new ReentrantLock(), () -> {\n+        }))\n+        {\n+          initializer.initialize(updater);\n+        }\n+        return rotation.create(keyFormat().filter(creation.dataProvider()), initializer.initialVersion());\n+      }\n     }\n \n+    /**\n+     * called during recovery\n+     */\n     @Override\n-    protected KeyFormat<Key> keyFormat()\n-    {\n-        return keys;\n-    }\n-\n-    private final KeyFormat<Key> keys;\n-    final ActiveState.Factory stateFactory;\n-    final VersionContextSupplier versionContextSupplier;\n-\n-    private DeadState( KeyFormat<Key> keys, ActiveState.Factory stateFactory, VersionContextSupplier versionContextSupplier )\n+    protected Optional<EntryUpdater<Key>> optionalUpdater(long version, Lock lock)\n     {\n-        this.keys = keys;\n-        this.stateFactory = stateFactory;\n-        this.versionContextSupplier = versionContextSupplier;\n+      return Optional.empty();\n     }\n \n-    static class Stopped<Key> extends DeadState<Key>\n+    /**\n+     * for rotating recovered state (none)\n+     */\n+    @Override\n+    RotationState<Key> prepareRotation(long version)\n     {\n-        Stopped( KeyFormat<Key> keys, ActiveState.Factory stateFactory, VersionContextSupplier versionContextSupplier )\n+      return new Rotation<Key, NeedsCreation<Key>>(this)\n+      {\n+        @Override\n+        ProgressiveState<Key> rotate(boolean force, RotationStrategy strategy, RotationTimerFactory timerFactory,\n+                                     Consumer<Headers.Builder> headers)\n         {\n-            super( keys, stateFactory, versionContextSupplier );\n+          return state;\n         }\n \n         @Override\n-        String stateName()\n+        public void close()\n         {\n-            return \"stopped\";\n         }\n \n         @Override\n-        ProgressiveState<Key> initialize( RotationStrategy rotation ) throws IOException\n+        long rotationVersion()\n         {\n-            Pair<File, KeyValueStoreFile> opened = rotation.open();\n-            if ( opened == null )\n-            {\n-                return new NeedsCreation<>( keyFormat(), stateFactory, rotation, versionContextSupplier );\n-            }\n-            return new Prepared<>( stateFactory.open( ReadableState.store( keyFormat(), opened.other() ),\n-                                                      opened.first(), versionContextSupplier ) );\n+          return state.version();\n         }\n \n         @Override\n-        ProgressiveState<Key> stop()\n+        ProgressiveState<Key> markAsFailed()\n         {\n-            return this;\n+          return this;\n         }\n+      };\n     }\n \n-    private static class NeedsCreation<Key> extends DeadState<Key>\n-            implements Function<ActiveState<Key>, NeedsCreation<Key>>\n+    @Override\n+    public NeedsCreation<Key> apply(ActiveState<Key> keyActiveState) throws RuntimeException\n     {\n-        private final RotationStrategy rotation;\n-\n-        private NeedsCreation( KeyFormat<Key> keys, ActiveState.Factory stateFactory, RotationStrategy rotation,\n-                VersionContextSupplier versionContextSupplier )\n-        {\n-            super( keys, stateFactory, versionContextSupplier );\n-            this.rotation = rotation;\n-        }\n-\n-        @Override\n-        ProgressiveState<Key> stop()\n-        {\n-            return new Stopped<>( keyFormat(), stateFactory, versionContextSupplier );\n-        }\n-\n-        @Override\n-        String stateName()\n-        {\n-            return \"needs creation\";\n-        }\n-\n-        @Override\n-        ActiveState<Key> start( DataInitializer<EntryUpdater<Key>> initializer ) throws IOException\n-        {\n-            if ( initializer == null )\n-            {\n-                throw new IllegalStateException( \"Store needs to be created, and no initializer is given.\" );\n-            }\n-            Pair<File, KeyValueStoreFile> created = initialState( initializer );\n-            return stateFactory.open( ReadableState.store( keyFormat(), created.other() ), created.first(),\n-                    versionContextSupplier );\n-        }\n-\n-        private Pair<File, KeyValueStoreFile> initialState( DataInitializer<EntryUpdater<Key>> initializer )\n-                throws IOException\n-        {\n-            long version = initializer.initialVersion();\n-            try ( ActiveState<Key> creation = stateFactory.open( ReadableState.empty( keyFormat(), version ), null,\n-                    versionContextSupplier ) )\n-            {\n-                try ( EntryUpdater<Key> updater = creation.resetter( new ReentrantLock(), () -> {} ) )\n-                {\n-                    initializer.initialize( updater );\n-                }\n-                return rotation.create( keyFormat().filter( creation.dataProvider() ), initializer.initialVersion() );\n-            }\n-        }\n-\n-        /** called during recovery */\n-        @Override\n-        protected Optional<EntryUpdater<Key>> optionalUpdater( long version, Lock lock )\n-        {\n-            return Optional.empty();\n-        }\n+      return this;\n+    }\n+  }\n \n-        /** for rotating recovered state (none) */\n-        @Override\n-        RotationState<Key> prepareRotation( long version )\n-        {\n-            return new Rotation<Key, NeedsCreation<Key>>( this )\n-            {\n-                @Override\n-                ProgressiveState<Key> rotate( boolean force, RotationStrategy strategy, RotationTimerFactory timerFactory,\n-                                              Consumer<Headers.Builder> headers )\n-                {\n-                    return state;\n-                }\n-\n-                @Override\n-                public void close()\n-                {\n-                }\n-\n-                @Override\n-                long rotationVersion()\n-                {\n-                    return state.version();\n-                }\n-\n-                @Override\n-                ProgressiveState<Key> markAsFailed()\n-                {\n-                    return this;\n-                }\n-            };\n-        }\n+  private static class Prepared<Key> extends DeadState<Key>\n+  {\n+    private final ActiveState<Key> state;\n \n-        @Override\n-        public NeedsCreation<Key> apply( ActiveState<Key> keyActiveState ) throws RuntimeException\n-        {\n-            return this;\n-        }\n+    private Prepared(ActiveState<Key> state)\n+    {\n+      super(state.keyFormat(), state.factory(), state.versionContextSupplier);\n+      this.state = state;\n     }\n \n-    private static class Prepared<Key> extends DeadState<Key>\n+    @Override\n+    protected Headers headers()\n     {\n-        private final ActiveState<Key> state;\n+      return state.headers();\n+    }\n \n-        private Prepared( ActiveState<Key> state )\n-        {\n-            super( state.keyFormat(), state.factory(), state.versionContextSupplier );\n-            this.state = state;\n-        }\n+    /**\n+     * for applying recovered transactions\n+     */\n+    @Override\n+    protected Optional<EntryUpdater<Key>> optionalUpdater(long version, Lock lock)\n+    {\n+      if (version <= state.version())\n+      {\n+        return Optional.empty();\n+      } else\n+      {\n+        return Optional.of(state.updater(version, lock));\n+      }\n+    }\n \n+    /**\n+     * for rotating recovered state\n+     */\n+    @Override\n+    RotationState<Key> prepareRotation(long version)\n+    {\n+      return new Rotation<Key, RotationState.Rotation<Key>>(state.prepareRotation(version))\n+      {\n         @Override\n-        protected Headers headers()\n+        ProgressiveState<Key> rotate(boolean force, RotationStrategy strategy, RotationTimerFactory timerFactory,\n+                                     Consumer<Headers.Builder> headers) throws IOException\n         {\n-            return state.headers();\n+          return new Prepared<>(state.rotate(force, strategy, timerFactory, headers));\n         }\n \n-        /** for applying recovered transactions */\n         @Override\n-        protected Optional<EntryUpdater<Key>> optionalUpdater( long version, Lock lock )\n+        public void close() throws IOException\n         {\n-            if ( version <= state.version() )\n-            {\n-                return Optional.empty();\n-            }\n-            else\n-            {\n-                return Optional.of( state.updater( version, lock ) );\n-            }\n+          state.close();\n         }\n \n-        /** for rotating recovered state */\n         @Override\n-        RotationState<Key> prepareRotation( long version )\n+        long rotationVersion()\n         {\n-            return new Rotation<Key, RotationState.Rotation<Key>>( state.prepareRotation( version ) )\n-            {\n-                @Override\n-                ProgressiveState<Key> rotate( boolean force, RotationStrategy strategy, RotationTimerFactory timerFactory,\n-                                              Consumer<Headers.Builder> headers ) throws IOException\n-                {\n-                    return new Prepared<>( state.rotate( force, strategy, timerFactory, headers ) );\n-                }\n-\n-                @Override\n-                public void close() throws IOException\n-                {\n-                    state.close();\n-                }\n-\n-                @Override\n-                long rotationVersion()\n-                {\n-                    return state.rotationVersion();\n-                }\n-\n-                @Override\n-                ProgressiveState<Key> markAsFailed()\n-                {\n-                    return state;\n-                }\n-            };\n+          return state.rotationVersion();\n         }\n \n         @Override\n-        ProgressiveState<Key> stop() throws IOException\n+        ProgressiveState<Key> markAsFailed()\n         {\n-            return state.stop();\n+          return state;\n         }\n+      };\n+    }\n \n-        @Override\n-        String stateName()\n-        {\n-            return \"prepared\";\n-        }\n+    @Override\n+    ProgressiveState<Key> stop() throws IOException\n+    {\n+      return state.stop();\n+    }\n \n-        @Override\n-        ActiveState<Key> start( DataInitializer<EntryUpdater<Key>> stateInitializer )\n-        {\n-            return state;\n-        }\n+    @Override\n+    String stateName()\n+    {\n+      return \"prepared\";\n+    }\n \n-        @Override\n-        protected File file()\n-        {\n-            return state.file();\n-        }\n+    @Override\n+    ActiveState<Key> start(DataInitializer<EntryUpdater<Key>> stateInitializer)\n+    {\n+      return state;\n     }\n \n-    private abstract static class Rotation<Key, State extends ProgressiveState<Key>> extends RotationState<Key>\n+    @Override\n+    protected File file()\n     {\n-        final State state;\n+      return state.file();\n+    }\n+  }\n \n-        Rotation( State state )\n-        {\n-            this.state = state;\n-        }\n+  private abstract static class Rotation<Key, State extends ProgressiveState<Key>> extends RotationState<Key>\n+  {\n+    final State state;\n \n-        @Override\n-        protected File file()\n-        {\n-            return state.file();\n-        }\n+    Rotation(State state)\n+    {\n+      this.state = state;\n+    }\n \n-        @Override\n-        Optional<EntryUpdater<Key>> optionalUpdater( long version, Lock lock )\n-        {\n-            throw new IllegalStateException( \"Cannot write in state: \" + stateName() );\n-        }\n+    @Override\n+    protected File file()\n+    {\n+      return state.file();\n+    }\n \n-        @Override\n-        protected EntryUpdater<Key> unsafeUpdater( Lock lock )\n-        {\n-            throw new IllegalStateException( \"Cannot write in state: \" + stateName() );\n-        }\n+    @Override\n+    Optional<EntryUpdater<Key>> optionalUpdater(long version, Lock lock)\n+    {\n+      throw new IllegalStateException(\"Cannot write in state: \" + stateName());\n+    }\n \n-        @Override\n-        protected boolean hasChanges()\n-        {\n-            return state.hasChanges();\n-        }\n+    @Override\n+    protected EntryUpdater<Key> unsafeUpdater(Lock lock)\n+    {\n+      throw new IllegalStateException(\"Cannot write in state: \" + stateName());\n+    }\n \n-        @Override\n-        protected KeyFormat<Key> keyFormat()\n-        {\n-            return state.keyFormat();\n-        }\n+    @Override\n+    protected boolean hasChanges()\n+    {\n+      return state.hasChanges();\n+    }\n \n-        @Override\n-        protected Headers headers()\n-        {\n-            return state.headers();\n-        }\n+    @Override\n+    protected KeyFormat<Key> keyFormat()\n+    {\n+      return state.keyFormat();\n+    }\n \n-        @Override\n-        protected long version()\n-        {\n-            return state.version();\n-        }\n+    @Override\n+    protected Headers headers()\n+    {\n+      return state.headers();\n+    }\n \n-        @Override\n-        protected boolean lookup( Key key, ValueSink sink )\n-        {\n-            throw new IllegalStateException( \"Cannot read in state: \" + stateName() );\n-        }\n+    @Override\n+    protected long version()\n+    {\n+      return state.version();\n+    }\n \n-        @Override\n-        protected DataProvider dataProvider()\n-        {\n-            throw new IllegalStateException( \"Cannot read in state: \" + stateName() );\n-        }\n+    @Override\n+    protected boolean lookup(Key key, ValueSink sink)\n+    {\n+      throw new IllegalStateException(\"Cannot read in state: \" + stateName());\n+    }\n \n-        @Override\n-        protected int storedEntryCount()\n-        {\n-            throw new IllegalStateException( \"Cannot read in state: \" + stateName() );\n-        }\n+    @Override\n+    protected DataProvider dataProvider()\n+    {\n+      throw new IllegalStateException(\"Cannot read in state: \" + stateName());\n+    }\n+\n+    @Override\n+    protected int storedEntryCount()\n+    {\n+      throw new IllegalStateException(\"Cannot read in state: \" + stateName());\n     }\n+  }\n }\n",
            "diff_size": 413
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "276",
                    "severity": "error",
                    "message": "Line is longer than 160 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2061/DeadState.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2061/DeadState.java\nindex c864eef7013..ee80cffaffd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/2061/DeadState.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/2061/DeadState.java\n@@ -125,14 +125,13 @@ abstract class DeadState<Key> extends ProgressiveState<Key>\n         @Override\n         ProgressiveState<Key> initialize( RotationStrategy rotation ) throws IOException\n         {\n-            Pair<File, KeyValueStoreFile> opened = rotation.open();\n+            Pair<File,KeyValueStoreFile> opened = rotation.open();\n             if ( opened == null )\n             {\n                 return new NeedsCreation<>( keyFormat(), stateFactory, rotation, versionContextSupplier );\n             }\n-            return new Prepared<>( stateFactory.open( ReadableState.store( keyFormat(), opened.other() ),\n-                                                      opened.first(), versionContextSupplier ) );\n-        }\n+            return new Prepared<>( stateFactory.open( ReadableState.store( keyFormat(), opened.other() ), opened.first(), versionContextSupplier ) );\n+    }\n \n         @Override\n         ProgressiveState<Key> stop()\n@@ -141,8 +140,7 @@ abstract class DeadState<Key> extends ProgressiveState<Key>\n         }\n     }\n \n-    private static class NeedsCreation<Key> extends DeadState<Key>\n-            implements Function<ActiveState<Key>, NeedsCreation<Key>>\n+    private static class NeedsCreation<Key> extends DeadState<Key> implements Function<ActiveState<Key>, NeedsCreation<Key>>\n     {\n         private final RotationStrategy rotation;\n \n@@ -172,23 +170,24 @@ abstract class DeadState<Key> extends ProgressiveState<Key>\n             {\n                 throw new IllegalStateException( \"Store needs to be created, and no initializer is given.\" );\n             }\n-            Pair<File, KeyValueStoreFile> created = initialState( initializer );\n+            Pair<File,KeyValueStoreFile> created = initialState( initializer );\n             return stateFactory.open( ReadableState.store( keyFormat(), created.other() ), created.first(),\n                     versionContextSupplier );\n         }\n \n-        private Pair<File, KeyValueStoreFile> initialState( DataInitializer<EntryUpdater<Key>> initializer )\n-                throws IOException\n-        {\n+        private Pair<File,KeyValueStoreFile> initialState( DataInitializer<EntryUpdater<Key>> initializer ) throws IOException\n+{\n             long version = initializer.initialVersion();\n             try ( ActiveState<Key> creation = stateFactory.open( ReadableState.empty( keyFormat(), version ), null,\n                     versionContextSupplier ) )\n             {\n-                try ( EntryUpdater<Key> updater = creation.resetter( new ReentrantLock(), () -> {} ) )\n+                try ( EntryUpdater<Key> updater = creation.resetter( new ReentrantLock(), () ->\n+{} ) )\n                 {\n                     initializer.initialize( updater );\n                 }\n-                return rotation.create( keyFormat().filter( creation.dataProvider() ), initializer.initialVersion() );\n+\n+return rotation.create( keyFormat().filter( creation.dataProvider() ), initializer.initialVersion() );\n             }\n         }\n \n@@ -206,9 +205,8 @@ abstract class DeadState<Key> extends ProgressiveState<Key>\n             return new Rotation<Key, NeedsCreation<Key>>( this )\n             {\n                 @Override\n-                ProgressiveState<Key> rotate( boolean force, RotationStrategy strategy, RotationTimerFactory timerFactory,\n-                                              Consumer<Headers.Builder> headers )\n-                {\n+                ProgressiveState<Key> rotate( boolean force, RotationStrategy strategy, RotationTimerFactory timerFactory, Consumer<Headers.Builder> headers )\n+{\n                     return state;\n                 }\n \n@@ -275,9 +273,8 @@ abstract class DeadState<Key> extends ProgressiveState<Key>\n             return new Rotation<Key, RotationState.Rotation<Key>>( state.prepareRotation( version ) )\n             {\n                 @Override\n-                ProgressiveState<Key> rotate( boolean force, RotationStrategy strategy, RotationTimerFactory timerFactory,\n-                                              Consumer<Headers.Builder> headers ) throws IOException\n-                {\n+                ProgressiveState<Key> rotate( boolean force, RotationStrategy strategy, RotationTimerFactory timerFactory, Consumer<Headers.Builder> headers ) throws IOException\n+{\n                     return new Prepared<>( state.rotate( force, strategy, timerFactory, headers ) );\n                 }\n \n@@ -395,4 +392,4 @@ abstract class DeadState<Key> extends ProgressiveState<Key>\n             throw new IllegalStateException( \"Cannot read in state: \" + stateName() );\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 21
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
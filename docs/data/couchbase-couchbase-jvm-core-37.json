{
    "project_name": "couchbase-couchbase-jvm-core",
    "error_id": "37",
    "information": {
        "errors": [
            {
                "line": "41",
                "severity": "warning",
                "message": "Line is longer than 120 characters (found 133).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    }\n\n    public AnalyticsEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment,\n        RingBuffer<ResponseEvent> responseBuffer) {\n        super(hostname, bucket, username, password, port, environment, responseBuffer, false,\n                environment.queryIoPool() == null ? environment.ioPool() : environment.queryIoPool(), false);",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/37/AnalyticsEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/37/AnalyticsEndpoint.java\nindex ab307fbd352..964da12e1cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/37/AnalyticsEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler/37/AnalyticsEndpoint.java\n@@ -38,8 +38,9 @@ public class AnalyticsEndpoint extends AbstractEndpoint {\n         this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n     }\n \n-    public AnalyticsEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment,\n-        RingBuffer<ResponseEvent> responseBuffer) {\n+    public AnalyticsEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment\n+        environment,\n+         RingBuffer<ResponseEvent> responseBuffer) {\n         super(hostname, bucket, username, password, port, environment, responseBuffer, false,\n                 environment.queryIoPool() == null ? environment.ioPool() : environment.queryIoPool(), false);\n     }\n",
            "diff_size": 3
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/37/AnalyticsEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/37/AnalyticsEndpoint.java\nindex ab307fbd352..3267e738602 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/37/AnalyticsEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/intellij/37/AnalyticsEndpoint.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package com.couchbase.client.core.endpoint.analytics;\n \n import com.couchbase.client.core.ResponseEvent;\n@@ -38,10 +39,11 @@ public class AnalyticsEndpoint extends AbstractEndpoint {\n         this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n     }\n \n-    public AnalyticsEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment,\n-        RingBuffer<ResponseEvent> responseBuffer) {\n+    public AnalyticsEndpoint(String hostname, String bucket, String username, String password, int port,\n+                             CoreEnvironment environment,\n+                             RingBuffer<ResponseEvent> responseBuffer) {\n         super(hostname, bucket, username, password, port, environment, responseBuffer, false,\n-                environment.queryIoPool() == null ? environment.ioPool() : environment.queryIoPool(), false);\n+            environment.queryIoPool() == null ? environment.ioPool() : environment.queryIoPool(), false);\n     }\n \n     @Override\n",
            "diff_size": 5
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "42",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/37/AnalyticsEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/37/AnalyticsEndpoint.java\nindex ab307fbd352..29e6aa456cc 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/37/AnalyticsEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/naturalize/37/AnalyticsEndpoint.java\n@@ -33,27 +33,23 @@ import java.util.concurrent.TimeUnit;\n  */\n public class AnalyticsEndpoint extends AbstractEndpoint {\n \n-    public AnalyticsEndpoint(String hostname, String bucket, String password, int port, CoreEnvironment environment,\n-                             RingBuffer<ResponseEvent> responseBuffer) {\n-        this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n+    public AnalyticsEndpoint(String hostname, String bucket, String password, int port, CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n+    this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n     }\n \n     public AnalyticsEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment,\n         RingBuffer<ResponseEvent> responseBuffer) {\n-        super(hostname, bucket, username, password, port, environment, responseBuffer, false,\n-                environment.queryIoPool() == null ? environment.ioPool() : environment.queryIoPool(), false);\n+        super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.queryIoPool() == null ? environment.ioPool() : environment.queryIoPool(), false);\n     }\n \n     @Override\n     protected void customEndpointHandlers(final ChannelPipeline pipeline) {\n         if (environment().keepAliveInterval() > 0) {\n             pipeline.addLast(\n-                new IdleStateHandler(environment().keepAliveInterval(), 0, 0, TimeUnit.MILLISECONDS)\n-            );\n+                new IdleStateHandler(environment().keepAliveInterval(), 0, 0, TimeUnit.MILLISECONDS));\n         }\n \n-        pipeline\n-            .addLast(new HttpClientCodec())\n+        pipeline.addLast(new HttpClientCodec())\n             .addLast(new AnalyticsHandler(this, responseBuffer(), false, false));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "36",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 160).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "40",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 177).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "41",
                    "severity": "warning",
                    "message": "Line is longer than 120 characters (found 187).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/37/AnalyticsEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/37/AnalyticsEndpoint.java\nindex ab307fbd352..3dc09fa244c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/37/AnalyticsEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/codebuff/37/AnalyticsEndpoint.java\n@@ -22,7 +22,6 @@ import com.lmax.disruptor.RingBuffer;\n import io.netty.channel.ChannelPipeline;\n import io.netty.handler.codec.http.HttpClientCodec;\n import io.netty.handler.timeout.IdleStateHandler;\n-\n import java.util.concurrent.TimeUnit;\n \n /**\n@@ -31,29 +30,25 @@ import java.util.concurrent.TimeUnit;\n  * @author Michael Nitschinger\n  * @since 1.4.3\n  */\n+\n public class AnalyticsEndpoint extends AbstractEndpoint {\n \n-    public AnalyticsEndpoint(String hostname, String bucket, String password, int port, CoreEnvironment environment,\n-                             RingBuffer<ResponseEvent> responseBuffer) {\n+    public AnalyticsEndpoint(String hostname, String bucket, String password, int port, CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n         this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n     }\n \n-    public AnalyticsEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment,\n-        RingBuffer<ResponseEvent> responseBuffer) {\n-        super(hostname, bucket, username, password, port, environment, responseBuffer, false,\n-                environment.queryIoPool() == null ? environment.ioPool() : environment.queryIoPool(), false);\n+    public AnalyticsEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment, RingBuffer<ResponseEvent> responseBuffer) {\n+        super(hostname, bucket, username, password, port, environment, responseBuffer, false, environment.queryIoPool() == null ? environment.ioPool() : environment.queryIoPool(), false);\n     }\n \n     @Override\n     protected void customEndpointHandlers(final ChannelPipeline pipeline) {\n         if (environment().keepAliveInterval() > 0) {\n-            pipeline.addLast(\n-                new IdleStateHandler(environment().keepAliveInterval(), 0, 0, TimeUnit.MILLISECONDS)\n-            );\n+            pipeline.addLast(new IdleStateHandler(environment().keepAliveInterval(), 0, 0, TimeUnit.MILLISECONDS));\n         }\n-\n-        pipeline\n-            .addLast(new HttpClientCodec())\n-            .addLast(new AnalyticsHandler(this, responseBuffer(), false, false));\n+        pipeline.addLast(new HttpClientCodec()).addLast(new AnalyticsHandler(this,\n+            responseBuffer(),\n+            false,\n+            false));\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/37/AnalyticsEndpoint.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/37/AnalyticsEndpoint.java\nindex ab307fbd352..964da12e1cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/errored/1/37/AnalyticsEndpoint.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/couchbase-couchbase-jvm-core/styler_three_grams/37/AnalyticsEndpoint.java\n@@ -38,8 +38,9 @@ public class AnalyticsEndpoint extends AbstractEndpoint {\n         this(hostname, bucket, bucket, password, port, environment, responseBuffer);\n     }\n \n-    public AnalyticsEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment environment,\n-        RingBuffer<ResponseEvent> responseBuffer) {\n+    public AnalyticsEndpoint(String hostname, String bucket, String username, String password, int port, CoreEnvironment\n+        environment,\n+         RingBuffer<ResponseEvent> responseBuffer) {\n         super(hostname, bucket, username, password, port, environment, responseBuffer, false,\n                 environment.queryIoPool() == null ? environment.ioPool() : environment.queryIoPool(), false);\n     }\n",
            "diff_size": 3
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff",
        "styler_random"
    ]
}
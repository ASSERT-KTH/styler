{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3346",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "43",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "44",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "49",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "52",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "61",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "67",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "67",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3346/SameJvmClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3346/SameJvmClient.java\nindex 2488817137a..26f88e6eeda 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3346/SameJvmClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3346/SameJvmClient.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.shell.impl;\n \n import java.io.Serializable;\n@@ -36,52 +37,51 @@ import org.neo4j.shell.ShellServer;\n  */\n public class SameJvmClient extends AbstractClient\n {\n-    private final Output out;\n-    private final ShellServer server;\n+  private final Output out;\n+  private final ShellServer server;\n \n-    public SameJvmClient( Map<String, Serializable> initialSession, ShellServer server,\n-                          CtrlCHandler ctrlcHandler ) throws ShellException\n-    {\n-        this( initialSession, server, new SystemOutput(), ctrlcHandler );\n-    }\n+  public SameJvmClient(Map<String, Serializable> initialSession, ShellServer server,\n+                       CtrlCHandler ctrlcHandler) throws ShellException\n+  {\n+    this(initialSession, server, new SystemOutput(), ctrlcHandler);\n+  }\n \n-    public SameJvmClient( Map<String, Serializable> initialSession, ShellServer server,\n-                          Output out ) throws ShellException\n-    {\n-        this( initialSession, server, out, InterruptSignalHandler.getHandler() );\n-    }\n+  public SameJvmClient(Map<String, Serializable> initialSession, ShellServer server,\n+                       Output out) throws ShellException\n+  {\n+    this(initialSession, server, out, InterruptSignalHandler.getHandler());\n+  }\n \n-    /**\n-     * @param server the server to communicate with.\n-     */\n-    public SameJvmClient( Map<String, Serializable> initialSession, ShellServer server, Output out,\n-                          CtrlCHandler ctrlcHandler ) throws ShellException\n+  /**\n+   * @param server the server to communicate with.\n+   */\n+  public SameJvmClient(Map<String, Serializable> initialSession, ShellServer server, Output out,\n+                       CtrlCHandler ctrlcHandler) throws ShellException\n+  {\n+    super(initialSession, ctrlcHandler);\n+    this.out = out;\n+    this.server = server;\n+    try\n     {\n-        super( initialSession, ctrlcHandler );\n-        this.out = out;\n-        this.server = server;\n-        try\n-        {\n-            sayHi( server );\n-        }\n-        catch ( RemoteException e )\n-        {\n-            throw new RuntimeException( \"Will not happen since this is in the same JVM\", e );\n-        }\n-\n-        init();\n-        updateTimeForMostRecentConnection();\n-    }\n-\n-    @Override\n-    public Output getOutput()\n+      sayHi(server);\n+    } catch (RemoteException e)\n     {\n-        return this.out;\n+      throw new RuntimeException(\"Will not happen since this is in the same JVM\", e);\n     }\n \n-    @Override\n-    public ShellServer getServer()\n-    {\n-        return this.server;\n-    }\n+    init();\n+    updateTimeForMostRecentConnection();\n+  }\n+\n+  @Override\n+  public Output getOutput()\n+  {\n+    return this.out;\n+  }\n+\n+  @Override\n+  public ShellServer getServer()\n+  {\n+    return this.server;\n+  }\n }\n",
            "diff_size": 57
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3346/SameJvmClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3346/SameJvmClient.java\nindex 2488817137a..3c9b08c64e2 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3346/SameJvmClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3346/SameJvmClient.java\n@@ -39,24 +39,21 @@ public class SameJvmClient extends AbstractClient\n     private final Output out;\n     private final ShellServer server;\n \n-    public SameJvmClient( Map<String, Serializable> initialSession, ShellServer server,\n-                          CtrlCHandler ctrlcHandler ) throws ShellException\n-    {\n+    public SameJvmClient( Map<String,Serializable> initialSession, ShellServer server, CtrlCHandler ctrlcHandler ) throws ShellException\n+{\n         this( initialSession, server, new SystemOutput(), ctrlcHandler );\n     }\n \n-    public SameJvmClient( Map<String, Serializable> initialSession, ShellServer server,\n-                          Output out ) throws ShellException\n-    {\n+    public SameJvmClient( Map<String,Serializable> initialSession, ShellServer server, Output out ) throws ShellException\n+{\n         this( initialSession, server, out, InterruptSignalHandler.getHandler() );\n     }\n \n     /**\n      * @param server the server to communicate with.\n      */\n-    public SameJvmClient( Map<String, Serializable> initialSession, ShellServer server, Output out,\n-                          CtrlCHandler ctrlcHandler ) throws ShellException\n-    {\n+    public SameJvmClient( Map<String,Serializable> initialSession, ShellServer server, Output out, CtrlCHandler ctrlcHandler ) throws ShellException\n+{\n         super( initialSession, ctrlcHandler );\n         this.out = out;\n         this.server = server;\n@@ -84,4 +81,4 @@ public class SameJvmClient extends AbstractClient\n     {\n         return this.server;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3346/SameJvmClient.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3346/SameJvmClient.java\nindex 2488817137a..3a40a0079a0 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3346/SameJvmClient.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/codebuff/3346/SameJvmClient.java\n@@ -22,7 +22,6 @@ package org.neo4j.shell.impl;\n import java.io.Serializable;\n import java.rmi.RemoteException;\n import java.util.Map;\n-\n import org.neo4j.shell.CtrlCHandler;\n import org.neo4j.shell.InterruptSignalHandler;\n import org.neo4j.shell.Output;\n@@ -34,19 +33,20 @@ import org.neo4j.shell.ShellServer;\n  * An implementation of {@link ShellClient} optimized to use with a server\n  * in the same JVM.\n  */\n+\n public class SameJvmClient extends AbstractClient\n {\n     private final Output out;\n     private final ShellServer server;\n \n-    public SameJvmClient( Map<String, Serializable> initialSession, ShellServer server,\n-                          CtrlCHandler ctrlcHandler ) throws ShellException\n+    public SameJvmClient( Map<String,Serializable> initialSession, ShellServer server, CtrlCHandler ctrlcHandler )\n+    throws ShellException\n     {\n         this( initialSession, server, new SystemOutput(), ctrlcHandler );\n     }\n \n-    public SameJvmClient( Map<String, Serializable> initialSession, ShellServer server,\n-                          Output out ) throws ShellException\n+    public SameJvmClient( Map<String,Serializable> initialSession, ShellServer server, Output out )\n+    throws ShellException\n     {\n         this( initialSession, server, out, InterruptSignalHandler.getHandler() );\n     }\n@@ -54,8 +54,9 @@ public class SameJvmClient extends AbstractClient\n     /**\n      * @param server the server to communicate with.\n      */\n-    public SameJvmClient( Map<String, Serializable> initialSession, ShellServer server, Output out,\n-                          CtrlCHandler ctrlcHandler ) throws ShellException\n+\n+    public SameJvmClient( Map<String,Serializable> initialSession, ShellServer server, Output out, CtrlCHandler ctrlcHandler )\n+    throws ShellException\n     {\n         super( initialSession, ctrlcHandler );\n         this.out = out;\n@@ -84,4 +85,4 @@ public class SameJvmClient extends AbstractClient\n     {\n         return this.server;\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 10
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
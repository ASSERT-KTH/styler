{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1088",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2018 \"Neo Technology,\"\n * Network Engine for Objects in Lund AB [http://neotechnology.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "74",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "78",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "55",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "94",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "99",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "105",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "105",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1088/StateMachine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1088/StateMachine.java\nindex aa2a8357bd1..0c979e5d313 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1088/StateMachine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1088/StateMachine.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU Affero General Public License\n  * along with this program. If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.cluster.statemachine;\n \n import java.util.ArrayList;\n@@ -34,84 +35,82 @@ import org.neo4j.logging.LogProvider;\n  */\n public class StateMachine<CONTEXT, MESSAGETYPE extends MessageType>\n {\n-    private CONTEXT context;\n-    private Class<MESSAGETYPE> messageEnumType;\n-    private State<CONTEXT, MESSAGETYPE> state;\n-    private LogProvider logProvider;\n+  private CONTEXT context;\n+  private Class<MESSAGETYPE> messageEnumType;\n+  private State<CONTEXT, MESSAGETYPE> state;\n+  private LogProvider logProvider;\n \n-    private List<StateTransitionListener> listeners = new ArrayList<>();\n+  private List<StateTransitionListener> listeners = new ArrayList<>();\n \n-    public StateMachine( CONTEXT context, Class<MESSAGETYPE> messageEnumType, State<CONTEXT, MESSAGETYPE> state,\n-                         LogProvider logProvider )\n-    {\n-        this.context = context;\n-        this.messageEnumType = messageEnumType;\n-        this.state = state;\n-        this.logProvider = logProvider;\n-    }\n+  public StateMachine(CONTEXT context, Class<MESSAGETYPE> messageEnumType, State<CONTEXT, MESSAGETYPE> state,\n+                      LogProvider logProvider)\n+  {\n+    this.context = context;\n+    this.messageEnumType = messageEnumType;\n+    this.state = state;\n+    this.logProvider = logProvider;\n+  }\n \n-    public Class<MESSAGETYPE> getMessageType()\n-    {\n-        return messageEnumType;\n-    }\n+  public Class<MESSAGETYPE> getMessageType()\n+  {\n+    return messageEnumType;\n+  }\n \n-    public State<CONTEXT, MESSAGETYPE> getState()\n-    {\n-        return state;\n-    }\n+  public State<CONTEXT, MESSAGETYPE> getState()\n+  {\n+    return state;\n+  }\n \n-    public Object getContext()\n-    {\n-        return context;\n-    }\n+  public Object getContext()\n+  {\n+    return context;\n+  }\n \n-    public void addStateTransitionListener( StateTransitionListener listener )\n-    {\n-        List<StateTransitionListener> newlisteners = new ArrayList<>( listeners );\n-        newlisteners.add( listener );\n-        listeners = newlisteners;\n-    }\n+  public void addStateTransitionListener(StateTransitionListener listener)\n+  {\n+    List<StateTransitionListener> newlisteners = new ArrayList<>(listeners);\n+    newlisteners.add(listener);\n+    listeners = newlisteners;\n+  }\n \n-    public void removeStateTransitionListener( StateTransitionListener listener )\n-    {\n-        List<StateTransitionListener> newListeners = new ArrayList<>( listeners );\n-        newListeners.remove( listener );\n-        listeners = newListeners;\n-    }\n+  public void removeStateTransitionListener(StateTransitionListener listener)\n+  {\n+    List<StateTransitionListener> newListeners = new ArrayList<>(listeners);\n+    newListeners.remove(listener);\n+    listeners = newListeners;\n+  }\n \n-    public synchronized void handle( Message<MESSAGETYPE> message, MessageHolder outgoing )\n+  public synchronized void handle(Message<MESSAGETYPE> message, MessageHolder outgoing)\n+  {\n+    try\n     {\n+      // Let the old state handle the incoming message and tell us what the new state should be\n+      State<CONTEXT, MESSAGETYPE> oldState = state;\n+      State<CONTEXT, MESSAGETYPE> newState = oldState.handle(context, message, outgoing);\n+      state = newState;\n+\n+      // Notify any listeners of the new state\n+      StateTransition transition = new StateTransition(oldState, message, newState);\n+      for (StateTransitionListener listener : listeners)\n+      {\n         try\n         {\n-            // Let the old state handle the incoming message and tell us what the new state should be\n-            State<CONTEXT, MESSAGETYPE> oldState = state;\n-            State<CONTEXT, MESSAGETYPE> newState = oldState.handle( context, message, outgoing );\n-            state = newState;\n-\n-            // Notify any listeners of the new state\n-            StateTransition transition = new StateTransition( oldState, message, newState );\n-            for ( StateTransitionListener listener : listeners )\n-            {\n-                try\n-                {\n-                    listener.stateTransition( transition );\n-                }\n-                catch ( Throwable e )\n-                {\n-                    // Ignore\n-                    logProvider.getLog( listener.getClass() ).warn( \"Listener threw exception\", e );\n-                }\n-            }\n-        }\n-        catch ( Throwable throwable )\n+          listener.stateTransition(transition);\n+        } catch (Throwable e)\n         {\n-            logProvider.getLog( getClass() ).warn( \"Exception in message handling\", throwable );\n+          // Ignore\n+          logProvider.getLog(listener.getClass()).warn(\"Listener threw exception\", e);\n         }\n-    }\n-\n-    @Override\n-    public String toString()\n+      }\n+    } catch (Throwable throwable)\n     {\n-        return state.toString() + \": \" + context.toString();\n+      logProvider.getLog(getClass()).warn(\"Exception in message handling\", throwable);\n     }\n+  }\n+\n+  @Override\n+  public String toString()\n+  {\n+    return state.toString() + \": \" + context.toString();\n+  }\n }\n",
            "diff_size": 85
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1088/StateMachine.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1088/StateMachine.java\nindex aa2a8357bd1..726e820b795 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1088/StateMachine.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1088/StateMachine.java\n@@ -36,14 +36,13 @@ public class StateMachine<CONTEXT, MESSAGETYPE extends MessageType>\n {\n     private CONTEXT context;\n     private Class<MESSAGETYPE> messageEnumType;\n-    private State<CONTEXT, MESSAGETYPE> state;\n+    private State<CONTEXT,MESSAGETYPE> state;\n     private LogProvider logProvider;\n \n     private List<StateTransitionListener> listeners = new ArrayList<>();\n \n-    public StateMachine( CONTEXT context, Class<MESSAGETYPE> messageEnumType, State<CONTEXT, MESSAGETYPE> state,\n-                         LogProvider logProvider )\n-    {\n+    public StateMachine( CONTEXT context, Class<MESSAGETYPE> messageEnumType, State<CONTEXT,MESSAGETYPE> state, LogProvider logProvider )\n+{\n         this.context = context;\n         this.messageEnumType = messageEnumType;\n         this.state = state;\n@@ -55,7 +54,7 @@ public class StateMachine<CONTEXT, MESSAGETYPE extends MessageType>\n         return messageEnumType;\n     }\n \n-    public State<CONTEXT, MESSAGETYPE> getState()\n+    public State<CONTEXT,MESSAGETYPE> getState()\n     {\n         return state;\n     }\n@@ -84,8 +83,8 @@ public class StateMachine<CONTEXT, MESSAGETYPE extends MessageType>\n         try\n         {\n             // Let the old state handle the incoming message and tell us what the new state should be\n-            State<CONTEXT, MESSAGETYPE> oldState = state;\n-            State<CONTEXT, MESSAGETYPE> newState = oldState.handle( context, message, outgoing );\n+            State<CONTEXT,MESSAGETYPE> oldState = state;\n+            State<CONTEXT,MESSAGETYPE> newState = oldState.handle( context, message, outgoing );\n             state = newState;\n \n             // Notify any listeners of the new state\n@@ -114,4 +113,4 @@ public class StateMachine<CONTEXT, MESSAGETYPE extends MessageType>\n     {\n         return state.toString() + \": \" + context.toString();\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 8
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
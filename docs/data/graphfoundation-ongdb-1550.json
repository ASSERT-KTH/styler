{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1550",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "32",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "32",
                    "column": "95",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "34",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "36",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "32",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1550/ServerExtensionRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1550/ServerExtensionRepresentation.java\nindex f52a46b6b84..88e5391df07 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1550/ServerExtensionRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1550/ServerExtensionRepresentation.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.rest.repr;\n \n import java.util.ArrayList;\n@@ -26,51 +27,51 @@ import java.util.Map;\n \n public final class ServerExtensionRepresentation extends MappingRepresentation\n {\n-    private final Map<String, EntityExtensionRepresentation> extended;\n+  private final Map<String, EntityExtensionRepresentation> extended;\n \n-    public ServerExtensionRepresentation( String name, List<ExtensionPointRepresentation> methods )\n+  public ServerExtensionRepresentation(String name, List<ExtensionPointRepresentation> methods)\n+  {\n+    super(RepresentationType.SERVER_PLUGIN_DESCRIPTION);\n+    this.extended = new HashMap<>();\n+    for (ExtensionPointRepresentation extension : methods)\n     {\n-        super( RepresentationType.SERVER_PLUGIN_DESCRIPTION );\n-        this.extended = new HashMap<>();\n-        for ( ExtensionPointRepresentation extension : methods )\n-        {\n-            EntityExtensionRepresentation entity =\n-                    extended.computeIfAbsent( extension.getExtendedEntity(), k -> new EntityExtensionRepresentation() );\n-            entity.add( extension );\n-        }\n+      EntityExtensionRepresentation entity =\n+          extended.computeIfAbsent(extension.getExtendedEntity(), k -> new EntityExtensionRepresentation());\n+      entity.add(extension);\n     }\n+  }\n \n-    @Override\n-    protected void serialize( MappingSerializer serializer )\n+  @Override\n+  protected void serialize(MappingSerializer serializer)\n+  {\n+    for (Map.Entry<String, EntityExtensionRepresentation> entity : extended.entrySet())\n     {\n-        for ( Map.Entry<String, EntityExtensionRepresentation> entity : extended.entrySet() )\n-        {\n-            serializer.putMapping( entity.getKey(), entity.getValue() );\n-        }\n+      serializer.putMapping(entity.getKey(), entity.getValue());\n     }\n+  }\n \n-    private static class EntityExtensionRepresentation extends MappingRepresentation\n-    {\n-        private final List<ExtensionPointRepresentation> extensions;\n+  private static class EntityExtensionRepresentation extends MappingRepresentation\n+  {\n+    private final List<ExtensionPointRepresentation> extensions;\n \n-        EntityExtensionRepresentation()\n-        {\n-            super( \"entity-extensions\" );\n-            this.extensions = new ArrayList<>();\n-        }\n+    EntityExtensionRepresentation()\n+    {\n+      super(\"entity-extensions\");\n+      this.extensions = new ArrayList<>();\n+    }\n \n-        void add( ExtensionPointRepresentation extension )\n-        {\n-            extensions.add( extension );\n-        }\n+    void add(ExtensionPointRepresentation extension)\n+    {\n+      extensions.add(extension);\n+    }\n \n-        @Override\n-        protected void serialize( MappingSerializer serializer )\n-        {\n-            for ( ExtensionPointRepresentation extension : extensions )\n-            {\n-                serializer.putMapping( extension.getName(), extension );\n-            }\n-        }\n+    @Override\n+    protected void serialize(MappingSerializer serializer)\n+    {\n+      for (ExtensionPointRepresentation extension : extensions)\n+      {\n+        serializer.putMapping(extension.getName(), extension);\n+      }\n     }\n+  }\n }\n",
            "diff_size": 46
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1550/ServerExtensionRepresentation.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1550/ServerExtensionRepresentation.java\nindex f52a46b6b84..11feac68d2c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1550/ServerExtensionRepresentation.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1550/ServerExtensionRepresentation.java\n@@ -26,7 +26,7 @@ import java.util.Map;\n \n public final class ServerExtensionRepresentation extends MappingRepresentation\n {\n-    private final Map<String, EntityExtensionRepresentation> extended;\n+    private final Map<String,EntityExtensionRepresentation> extended;\n \n     public ServerExtensionRepresentation( String name, List<ExtensionPointRepresentation> methods )\n     {\n@@ -34,16 +34,15 @@ public final class ServerExtensionRepresentation extends MappingRepresentation\n         this.extended = new HashMap<>();\n         for ( ExtensionPointRepresentation extension : methods )\n         {\n-            EntityExtensionRepresentation entity =\n-                    extended.computeIfAbsent( extension.getExtendedEntity(), k -> new EntityExtensionRepresentation() );\n-            entity.add( extension );\n+            EntityExtensionRepresentation entity = extended.computeIfAbsent( extension.getExtendedEntity(), k -> new EntityExtensionRepresentation() );\n+entity.add( extension );\n         }\n     }\n \n     @Override\n     protected void serialize( MappingSerializer serializer )\n     {\n-        for ( Map.Entry<String, EntityExtensionRepresentation> entity : extended.entrySet() )\n+        for ( Map.Entry<String,EntityExtensionRepresentation> entity : extended.entrySet() )\n         {\n             serializer.putMapping( entity.getKey(), entity.getValue() );\n         }\n@@ -73,4 +72,4 @@ public final class ServerExtensionRepresentation extends MappingRepresentation\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 6
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
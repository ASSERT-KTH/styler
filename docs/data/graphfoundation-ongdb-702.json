{
    "project_name": "graphfoundation-ongdb",
    "error_id": "702",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "59",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "59",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/702/PackInput.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/702/PackInput.java\nindex 56aa7486663..02afd68056c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/702/PackInput.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/702/PackInput.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.bolt.v1.packstream;\n \n import java.io.IOException;\n@@ -27,24 +28,38 @@ import java.io.IOException;\n  */\n public interface PackInput\n {\n-    /** Consume one byte */\n-    byte readByte() throws IOException;\n+  /**\n+   * Consume one byte\n+   */\n+  byte readByte() throws IOException;\n \n-    /** Consume a 2-byte signed integer */\n-    short readShort() throws IOException;\n+  /**\n+   * Consume a 2-byte signed integer\n+   */\n+  short readShort() throws IOException;\n \n-    /** Consume a 4-byte signed integer */\n-    int readInt() throws IOException;\n+  /**\n+   * Consume a 4-byte signed integer\n+   */\n+  int readInt() throws IOException;\n \n-    /** Consume an 8-byte signed integer */\n-    long readLong() throws IOException;\n+  /**\n+   * Consume an 8-byte signed integer\n+   */\n+  long readLong() throws IOException;\n \n-    /** Consume an 8-byte IEEE 754 \"double format\" floating-point number */\n-    double readDouble() throws IOException;\n+  /**\n+   * Consume an 8-byte IEEE 754 \"double format\" floating-point number\n+   */\n+  double readDouble() throws IOException;\n \n-    /** Consume a specified number of bytes */\n-    PackInput readBytes( byte[] into, int offset, int toRead ) throws IOException;\n+  /**\n+   * Consume a specified number of bytes\n+   */\n+  PackInput readBytes(byte[] into, int offset, int toRead) throws IOException;\n \n-    /** Get the next byte without forwarding the internal pointer */\n-    byte peekByte() throws IOException;\n+  /**\n+   * Get the next byte without forwarding the internal pointer\n+   */\n+  byte peekByte() throws IOException;\n }\n",
            "diff_size": 29
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/702/PackInput.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/702/PackInput.java\nindex 56aa7486663..41f50405ee5 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/702/PackInput.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/702/PackInput.java\n@@ -47,4 +47,4 @@ public interface PackInput\n \n     /** Get the next byte without forwarding the internal pointer */\n     byte peekByte() throws IOException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
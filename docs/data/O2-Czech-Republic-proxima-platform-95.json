{
    "project_name": "O2-Czech-Republic-proxima-platform",
    "error_id": "95",
    "information": {
        "errors": [
            {
                "line": "69",
                "severity": "error",
                "message": "Line is longer than 90 characters (found 100).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "        return FileSystem.local(\n            new File(\"/dev/stdin\"),\n            NamingConvention.defaultConvention(Duration.ofHours(1), \"prefix\", format.fileSuffix()));\n      }\n\n      @Override",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/95/Path.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/95/Path.java\nindex 64e8ca6e723..37b1624a98f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/95/Path.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/intellij/95/Path.java\n@@ -1,18 +1,19 @@\n /**\n  * Copyright 2017-2021 O2 Czech Republic, a.s.\n- *\n+ * <p>\n  * Licensed under the Apache License, Version 2.0 (the \"License\");\n  * you may not use this file except in compliance with the License.\n  * You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n  * Unless required by applicable law or agreed to in writing, software\n  * distributed under the License is distributed on an \"AS IS\" BASIS,\n  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package cz.o2.proxima.direct.bulk;\n \n import cz.o2.proxima.annotations.Internal;\n@@ -66,7 +67,8 @@ public interface Path extends Serializable, Comparable<Path> {\n       public FileSystem getFileSystem() {\n         return FileSystem.local(\n             new File(\"/dev/stdin\"),\n-            NamingConvention.defaultConvention(Duration.ofHours(1), \"prefix\", format.fileSuffix()));\n+            NamingConvention\n+                .defaultConvention(Duration.ofHours(1), \"prefix\", format.fileSuffix()));\n       }\n \n       @Override\n",
            "diff_size": 7
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/95/Path.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/95/Path.java\nindex 64e8ca6e723..435b107c9d8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/95/Path.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/naturalize/95/Path.java\n@@ -129,4 +129,4 @@ public interface Path extends Serializable, Comparable<Path> {\n    * @throws IOException on errors\n    */\n   void delete() throws IOException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "53",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 13, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "55",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "56",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 13, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "58",
                    "severity": "error",
                    "message": "'object def' child has incorrect indentation level 13, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "60",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 13, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "62",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "63",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 13, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "65",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 13, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "67",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "68",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 13, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "70",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 13, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "72",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "73",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 127).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "74",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 13, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "76",
                    "severity": "error",
                    "message": "'method def modifier' has incorrect indentation level 13, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "78",
                    "severity": "error",
                    "message": "'method def' child has incorrect indentation level 15, expected level should be one of the following: 8, 10, 12.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "79",
                    "severity": "error",
                    "message": "'method def rcurly' has incorrect indentation level 13, expected level should be one of the following: 6, 8, 10.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "80",
                    "severity": "error",
                    "message": "'object def rcurly' has incorrect indentation level 11, expected level should be one of the following: 4, 6, 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/95/Path.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/95/Path.java\nindex 64e8ca6e723..10f9eae3a94 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/95/Path.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/codebuff/95/Path.java\n@@ -28,6 +28,8 @@ import java.time.Duration;\n import javax.annotation.Nonnull;\n \n /** Proxima's abstraction of path in {@link FileSystem}. */\n+\n+\n @Internal\n public interface Path extends Serializable, Comparable<Path> {\n \n@@ -38,42 +40,44 @@ public interface Path extends Serializable, Comparable<Path> {\n    * @param path the local file\n    * @return Path representation of this local file\n    */\n+\n+\n   static LocalPath local(FileSystem fs, File path) {\n     return new LocalPath(path, fs);\n   }\n \n+\n   static Path stdin(FileFormat format) {\n     return new Path() {\n \n-      @Override\n-      public int compareTo(@Nonnull Path path) {\n-        return 0;\n-      }\n-\n-      private static final long serialVersionUID = 1L;\n-\n-      @Override\n-      public InputStream reader() {\n-        return System.in;\n-      }\n-\n-      @Override\n-      public OutputStream writer() {\n-        throw new UnsupportedOperationException(\"Can only read from stdin.\");\n-      }\n-\n-      @Override\n-      public FileSystem getFileSystem() {\n-        return FileSystem.local(\n-            new File(\"/dev/stdin\"),\n-            NamingConvention.defaultConvention(Duration.ofHours(1), \"prefix\", format.fileSuffix()));\n-      }\n-\n-      @Override\n-      public void delete() {\n-        throw new UnsupportedOperationException(\"Cannot delete stdin.\");\n-      }\n-    };\n+             @Override\n+             public int compareTo(@Nonnull Path path) {\n+               return 0;\n+             }\n+\n+             private static final long serialVersionUID = 1L;\n+\n+             @Override\n+             public InputStream reader() {\n+               return System.in;\n+             }\n+\n+             @Override\n+             public OutputStream writer() {\n+               throw new UnsupportedOperationException(\"Can only read from stdin.\");\n+             }\n+\n+             @Override\n+             public FileSystem getFileSystem() {\n+               return FileSystem.local(new File(\"/dev/stdin\"),\n+                                       NamingConvention.defaultConvention(Duration.ofHours(1), \"prefix\", format.fileSuffix()));\n+             }\n+\n+             @Override\n+             public void delete() {\n+               throw new UnsupportedOperationException(\"Cannot delete stdin.\");\n+             }\n+           };\n   }\n \n   /**\n@@ -82,6 +86,8 @@ public interface Path extends Serializable, Comparable<Path> {\n    * @return {@link ReadableByteChannel} of the {@link Path}.\n    * @throws IOException on errors\n    */\n+\n+\n   default ReadableByteChannel read() throws IOException {\n     return Channels.newChannel(reader());\n   }\n@@ -93,6 +99,8 @@ public interface Path extends Serializable, Comparable<Path> {\n    * @throws IOException on errors\n    * @deprecated Use {@link #read()} instead.\n    */\n+\n+\n   @Deprecated\n   InputStream reader() throws IOException;\n \n@@ -102,6 +110,8 @@ public interface Path extends Serializable, Comparable<Path> {\n    * @return {@link WritableByteChannel} of the {@link Path}.\n    * @throws IOException on errors\n    */\n+\n+\n   default WritableByteChannel write() throws IOException {\n     return Channels.newChannel(writer());\n   }\n@@ -113,6 +123,8 @@ public interface Path extends Serializable, Comparable<Path> {\n    * @throws IOException on errors *\n    * @deprecated Use {@link #write()} instead.\n    */\n+\n+\n   @Deprecated\n   OutputStream writer() throws IOException;\n \n@@ -121,6 +133,8 @@ public interface Path extends Serializable, Comparable<Path> {\n    *\n    * @return {@link FileSystem} associated with the {@link Path}.\n    */\n+\n+\n   FileSystem getFileSystem();\n \n   /**\n@@ -128,5 +142,7 @@ public interface Path extends Serializable, Comparable<Path> {\n    *\n    * @throws IOException on errors\n    */\n+\n+\n   void delete() throws IOException;\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 47
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/95/Path.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/95/Path.java\nindex 64e8ca6e723..f9c9586cf6d 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/errored/1/95/Path.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/O2-Czech-Republic-proxima-platform/styler_random/95/Path.java\n@@ -67,7 +67,7 @@ public interface Path extends Serializable, Comparable<Path> {\n         return FileSystem.local(\n             new File(\"/dev/stdin\"),\n             NamingConvention.defaultConvention(Duration.ofHours(1), \"prefix\", format.fileSuffix()));\n-      }\n+          }\n \n       @Override\n       public void delete() {\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "69",
                    "severity": "error",
                    "message": "Line is longer than 90 characters (found 100).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
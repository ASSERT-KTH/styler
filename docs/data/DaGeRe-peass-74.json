{
    "project_name": "DaGeRe-peass",
    "error_id": "74",
    "information": {
        "errors": [
            {
                "line": "37",
                "column": "68",
                "severity": "error",
                "message": "'&&' should be on a new line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
            }
        ]
    },
    "source_code": "         final SummaryStatistics statistics = node.getStatistics(measurementConfig.getVersion());\n         final SummaryStatistics statisticsOld = node.getStatistics(measurementConfig.getVersionOld());\n         if (statistics.getMean() > causeSearchConfig.getMinTime() &&\n               statisticsOld.getMean() > causeSearchConfig.getMinTime()) {\n            includeable.add(node);\n         }",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/74/AllDifferingDeterminer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/74/AllDifferingDeterminer.java\nindex c2f2645919a..0ce6fcc0297 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/74/AllDifferingDeterminer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler/74/AllDifferingDeterminer.java\n@@ -34,8 +34,7 @@ public class AllDifferingDeterminer extends DifferentNodeDeterminer {\n       for (final CallTreeNode node : measurePredecessor) {\n          final SummaryStatistics statistics = node.getStatistics(measurementConfig.getVersion());\n          final SummaryStatistics statisticsOld = node.getStatistics(measurementConfig.getVersionOld());\n-         if (statistics.getMean() > causeSearchConfig.getMinTime() &&\n-               statisticsOld.getMean() > causeSearchConfig.getMinTime()) {\n+         if (statistics.getMean() > causeSearchConfig.getMinTime() && statisticsOld.getMean() > causeSearchConfig.getMinTime()) {\n             includeable.add(node);\n          }\n       }\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "36",
                    "column": "65",
                    "severity": "error",
                    "message": "'&&' should be on a new line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/74/AllDifferingDeterminer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/74/AllDifferingDeterminer.java\nindex c2f2645919a..9fb67d4e98c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/74/AllDifferingDeterminer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/intellij/74/AllDifferingDeterminer.java\n@@ -11,35 +11,34 @@ import de.peass.measurement.rca.data.CallTreeNode;\n \n /**\n  * Determines the differing nodes analyzing the whole tree at once\n- * \n- * @author reichelt\n  *\n+ * @author reichelt\n  */\n public class AllDifferingDeterminer extends DifferentNodeDeterminer {\n \n-   public AllDifferingDeterminer(final List<CallTreeNode> needToMeasurePredecessor, final CauseSearcherConfig causeSearchConfig,\n-         final MeasurementConfiguration measurementConfig) {\n-      super(causeSearchConfig, measurementConfig);\n+  public AllDifferingDeterminer(final List<CallTreeNode> needToMeasurePredecessor, final CauseSearcherConfig causeSearchConfig,\n+                                final MeasurementConfiguration measurementConfig) {\n+    super(causeSearchConfig, measurementConfig);\n //      this.needToMeasureCurrent = needToMeasureCurrent;\n-      this.measurePredecessor = needToMeasurePredecessor;\n-   }\n-   \n-   @Override\n-   public void calculateDiffering() {\n-      super.calculateDiffering();\n-   }\n-\n-   public List<CallTreeNode> getIncludableNodes() {\n-      final List<CallTreeNode> includeable = new LinkedList<CallTreeNode>();\n-      for (final CallTreeNode node : measurePredecessor) {\n-         final SummaryStatistics statistics = node.getStatistics(measurementConfig.getVersion());\n-         final SummaryStatistics statisticsOld = node.getStatistics(measurementConfig.getVersionOld());\n-         if (statistics.getMean() > causeSearchConfig.getMinTime() &&\n-               statisticsOld.getMean() > causeSearchConfig.getMinTime()) {\n-            includeable.add(node);\n-         }\n+    this.measurePredecessor = needToMeasurePredecessor;\n+  }\n+\n+  @Override\n+  public void calculateDiffering() {\n+    super.calculateDiffering();\n+  }\n+\n+  public List<CallTreeNode> getIncludableNodes() {\n+    final List<CallTreeNode> includeable = new LinkedList<CallTreeNode>();\n+    for (final CallTreeNode node : measurePredecessor) {\n+      final SummaryStatistics statistics = node.getStatistics(measurementConfig.getVersion());\n+      final SummaryStatistics statisticsOld = node.getStatistics(measurementConfig.getVersionOld());\n+      if (statistics.getMean() > causeSearchConfig.getMinTime() &&\n+          statisticsOld.getMean() > causeSearchConfig.getMinTime()) {\n+        includeable.add(node);\n       }\n-      return includeable;\n+    }\n+    return includeable;\n \n-   }\n+  }\n }\n\\ No newline at end of file\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/74/AllDifferingDeterminer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/74/AllDifferingDeterminer.java\nindex c2f2645919a..f0c163d564f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/74/AllDifferingDeterminer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/codebuff/74/AllDifferingDeterminer.java\n@@ -2,9 +2,7 @@ package de.peass.measurement.rca.treeanalysis;\n \n import java.util.LinkedList;\n import java.util.List;\n-\n import org.apache.commons.math3.stat.descriptive.SummaryStatistics;\n-\n import de.peass.config.MeasurementConfiguration;\n import de.peass.measurement.rca.CauseSearcherConfig;\n import de.peass.measurement.rca.data.CallTreeNode;\n@@ -15,31 +13,30 @@ import de.peass.measurement.rca.data.CallTreeNode;\n  * @author reichelt\n  *\n  */\n+\n+\n public class AllDifferingDeterminer extends DifferentNodeDeterminer {\n \n-   public AllDifferingDeterminer(final List<CallTreeNode> needToMeasurePredecessor, final CauseSearcherConfig causeSearchConfig,\n-         final MeasurementConfiguration measurementConfig) {\n-      super(causeSearchConfig, measurementConfig);\n+ public AllDifferingDeterminer(final List<CallTreeNode> needToMeasurePredecessor, final CauseSearcherConfig causeSearchConfig, final MeasurementConfiguration measurementConfig) {\n+  super(causeSearchConfig, measurementConfig);\n //      this.needToMeasureCurrent = needToMeasureCurrent;\n-      this.measurePredecessor = needToMeasurePredecessor;\n-   }\n-   \n-   @Override\n-   public void calculateDiffering() {\n-      super.calculateDiffering();\n-   }\n+  this.measurePredecessor = needToMeasurePredecessor;\n+ }\n \n-   public List<CallTreeNode> getIncludableNodes() {\n-      final List<CallTreeNode> includeable = new LinkedList<CallTreeNode>();\n-      for (final CallTreeNode node : measurePredecessor) {\n-         final SummaryStatistics statistics = node.getStatistics(measurementConfig.getVersion());\n-         final SummaryStatistics statisticsOld = node.getStatistics(measurementConfig.getVersionOld());\n-         if (statistics.getMean() > causeSearchConfig.getMinTime() &&\n-               statisticsOld.getMean() > causeSearchConfig.getMinTime()) {\n-            includeable.add(node);\n-         }\n-      }\n-      return includeable;\n+ @Override\n+ public void calculateDiffering() {\n+  super.calculateDiffering();\n+ }\n \n+ public List<CallTreeNode> getIncludableNodes() {\n+  final List<CallTreeNode> includeable = new LinkedList<CallTreeNode>();\n+  for (final CallTreeNode node : measurePredecessor) {\n+   final SummaryStatistics statistics = node.getStatistics(measurementConfig.getVersion());\n+   final SummaryStatistics statisticsOld = node.getStatistics(measurementConfig.getVersionOld());\n+   if (statistics.getMean() > causeSearchConfig.getMinTime() && statisticsOld.getMean() > causeSearchConfig.getMinTime()) {\n+    includeable.add(node);\n    }\n+  }\n+  return includeable;\n+ }\n }\n\\ No newline at end of file\n",
            "diff_size": 35
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/74/AllDifferingDeterminer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/74/AllDifferingDeterminer.java\nindex c2f2645919a..0ce6fcc0297 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/74/AllDifferingDeterminer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_random/74/AllDifferingDeterminer.java\n@@ -34,8 +34,7 @@ public class AllDifferingDeterminer extends DifferentNodeDeterminer {\n       for (final CallTreeNode node : measurePredecessor) {\n          final SummaryStatistics statistics = node.getStatistics(measurementConfig.getVersion());\n          final SummaryStatistics statisticsOld = node.getStatistics(measurementConfig.getVersionOld());\n-         if (statistics.getMean() > causeSearchConfig.getMinTime() &&\n-               statisticsOld.getMean() > causeSearchConfig.getMinTime()) {\n+         if (statistics.getMean() > causeSearchConfig.getMinTime() && statisticsOld.getMean() > causeSearchConfig.getMinTime()) {\n             includeable.add(node);\n          }\n       }\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/74/AllDifferingDeterminer.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/74/AllDifferingDeterminer.java\nindex c2f2645919a..0ce6fcc0297 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/errored/1/74/AllDifferingDeterminer.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/DaGeRe-peass/styler_three_grams/74/AllDifferingDeterminer.java\n@@ -34,8 +34,7 @@ public class AllDifferingDeterminer extends DifferentNodeDeterminer {\n       for (final CallTreeNode node : measurePredecessor) {\n          final SummaryStatistics statistics = node.getStatistics(measurementConfig.getVersion());\n          final SummaryStatistics statisticsOld = node.getStatistics(measurementConfig.getVersionOld());\n-         if (statistics.getMean() > causeSearchConfig.getMinTime() &&\n-               statisticsOld.getMean() > causeSearchConfig.getMinTime()) {\n+         if (statistics.getMean() > causeSearchConfig.getMinTime() && statisticsOld.getMean() > causeSearchConfig.getMinTime()) {\n             includeable.add(node);\n          }\n       }\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "intellij",
        "naturalize"
    ]
}
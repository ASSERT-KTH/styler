{
    "project_name": "neo4j-neo4j",
    "error_id": "133",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "74",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "99",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "122",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "135",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "125",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "77",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "121",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "152",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "159",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "178",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "187",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "201",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "66",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "205",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "205",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "219",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "219",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "219",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "222",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/133/LogsUpgrader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/133/LogsUpgrader.java\nindex 47a8260a579..522d9e8d75f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/133/LogsUpgrader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/133/LogsUpgrader.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.storemigration;\n \n import java.io.IOException;\n@@ -60,17 +61,17 @@ public class LogsUpgrader\n     private final DatabaseHealth databaseHealth;\n \n     public LogsUpgrader(\n-            FileSystemAbstraction fs,\n-            StorageEngineFactory storageEngineFactory,\n-            DatabaseLayout databaseLayout,\n-            PageCache pageCache,\n-            LegacyTransactionLogsLocator legacyLogsLocator,\n-            Config config,\n-            DependencyResolver dependencyResolver,\n-            PageCacheTracer pageCacheTracer,\n-            MemoryTracker memoryTracker,\n-            DatabaseHealth databaseHealth,\n-            boolean forceUpgrade )\n+      FileSystemAbstraction fs,\n+      StorageEngineFactory storageEngineFactory,\n+      DatabaseLayout databaseLayout,\n+      PageCache pageCache,\n+      LegacyTransactionLogsLocator legacyLogsLocator,\n+      Config config,\n+      DependencyResolver dependencyResolver,\n+      PageCacheTracer pageCacheTracer,\n+      MemoryTracker memoryTracker,\n+      DatabaseHealth databaseHealth,\n+      boolean forceUpgrade)\n     {\n         this.fs = fs;\n         this.storageEngineFactory = storageEngineFactory;\n@@ -84,147 +85,141 @@ public class LogsUpgrader\n         this.databaseHealth = databaseHealth;\n     }\n \n-    public void assertCleanlyShutDown( DatabaseLayout layout )\n+    public void assertCleanlyShutDown(DatabaseLayout layout)\n     {\n         Throwable suppressibleException = null;\n         try\n         {\n             // we should not use provided database layout here since transaction log location is different compare to previous versions\n             // and that's why we need to use custom transaction logs locator and database layout\n-            DatabaseLayout oldDatabaseLayout = buildLegacyLogsLayout( layout );\n-            LogFiles logFiles = buildLogFiles( oldDatabaseLayout );\n+            DatabaseLayout oldDatabaseLayout = buildLegacyLogsLayout(layout);\n+            LogFiles logFiles = buildLogFiles(oldDatabaseLayout);\n \n             LogTailInformation tail = logFiles.getTailInformation();\n-            if ( !tail.isRecoveryRequired() )\n+            if (!tail.isRecoveryRequired())\n             {\n                 // All good\n                 return;\n             }\n-            if ( tail.logsMissing() )\n+            if (tail.logsMissing())\n             {\n                 // There are no log files in the legacy logs location.\n                 // Either log files are missing entirely, or they are already in their correct place.\n-                logFiles = buildLogFiles( layout );\n+                logFiles = buildLogFiles(layout);\n                 tail = logFiles.getTailInformation();\n \n-                if ( !tail.isRecoveryRequired() )\n+                if (!tail.isRecoveryRequired())\n                 {\n                     // Log file is already in its new location, and looks good.\n                     return;\n                 }\n-                if ( tail.logsMissing() && !config.get( fail_on_missing_files ) )\n+                if (tail.logsMissing() && !config.get(fail_on_missing_files))\n                 {\n                     // We don't have any log files, but we were told to ignore this.\n                     return;\n                 }\n             }\n-        }\n-        catch ( Throwable throwable )\n+        } catch (Throwable throwable)\n         {\n             // ignore exception and throw db not cleanly shutdown\n             suppressibleException = throwable;\n         }\n         StoreUpgrader.DatabaseNotCleanlyShutDownException exception = new StoreUpgrader.DatabaseNotCleanlyShutDownException();\n-        if ( suppressibleException != null )\n+        if (suppressibleException != null)\n         {\n-            exception.addSuppressed( suppressibleException );\n+            exception.addSuppressed(suppressibleException);\n         }\n         throw exception;\n     }\n \n-    private DatabaseLayout buildLegacyLogsLayout( DatabaseLayout databaseLayout )\n+    private DatabaseLayout buildLegacyLogsLayout(DatabaseLayout databaseLayout)\n     {\n-        return new LegacyDatabaseLayout( databaseLayout.getNeo4jLayout(), databaseLayout.getDatabaseName(), legacyLogsLocator );\n+        return new LegacyDatabaseLayout(databaseLayout.getNeo4jLayout(), databaseLayout.getDatabaseName(), legacyLogsLocator);\n     }\n \n-    private LogFiles buildLogFiles( DatabaseLayout layout )\n+    private LogFiles buildLogFiles(DatabaseLayout layout)\n     {\n-        final LogEntryReader logEntryReader = new VersionAwareLogEntryReader( storageEngineFactory.commandReaderFactory() );\n+        final LogEntryReader logEntryReader = new VersionAwareLogEntryReader(storageEngineFactory.commandReaderFactory());\n         final LogFiles logFiles;\n         try\n         {\n-            logFiles = LogFilesBuilder.builder( layout, fs )\n-                                      .withLogEntryReader( logEntryReader )\n-                                      .withConfig( config )\n-                                      .withMemoryTracker( memoryTracker )\n-                                      .withDatabaseHealth( databaseHealth )\n-                                      .withDependencies( dependencyResolver ).build();\n-        }\n-        catch ( IOException e )\n+            logFiles = LogFilesBuilder.builder(layout, fs)\n+              .withLogEntryReader(logEntryReader)\n+              .withConfig(config)\n+              .withMemoryTracker(memoryTracker)\n+              .withDatabaseHealth(databaseHealth)\n+              .withDependencies(dependencyResolver).build();\n+        } catch (IOException e)\n         {\n-            throw new RuntimeException( e );\n+            throw new RuntimeException(e);\n         }\n         return logFiles;\n     }\n \n-    public void upgrade( DatabaseLayout layout )\n+    public void upgrade(DatabaseLayout layout)\n     {\n         CommandReaderFactory commandReaderFactory = storageEngineFactory.commandReaderFactory();\n-        try ( MetadataProvider store = getMetaDataStore() )\n+        try (MetadataProvider store = getMetaDataStore())\n         {\n             TransactionLogInitializer logInitializer = new TransactionLogInitializer(\n-                    fs, store, commandReaderFactory, tracer );\n+              fs, store, commandReaderFactory, tracer);\n \n             Path transactionLogsDirectory = layout.getTransactionLogsDirectory();\n             Path legacyLogsDirectory = legacyLogsLocator.getTransactionLogsDirectory();\n-            boolean filesNeedsToMove = !transactionLogsDirectory.equals( legacyLogsDirectory );\n+            boolean filesNeedsToMove = !transactionLogsDirectory.equals(legacyLogsDirectory);\n \n-            LogFiles logFiles = LogFilesBuilder.logFilesBasedOnlyBuilder( legacyLogsDirectory, fs )\n-                    .withCommandReaderFactory( commandReaderFactory )\n-                    .build();\n+            LogFiles logFiles = LogFilesBuilder.logFilesBasedOnlyBuilder(legacyLogsDirectory, fs)\n+              .withCommandReaderFactory(commandReaderFactory)\n+              .build();\n             // Move log files to their intended directory, if they are not there already.\n             Path[] legacyFiles = logFiles.logFiles();\n-            if ( legacyFiles != null && legacyFiles.length > 0 )\n+            if (legacyFiles != null && legacyFiles.length > 0)\n             {\n-                if ( filesNeedsToMove )\n+                if (filesNeedsToMove)\n                 {\n-                    for ( Path legacyFile : legacyFiles )\n+                    for (Path legacyFile : legacyFiles)\n                     {\n-                        fs.copyFile( legacyFile, transactionLogsDirectory.resolve( legacyFile.getFileName() ),\n-                                EMPTY_COPY_OPTIONS );\n+                        fs.copyFile(legacyFile, transactionLogsDirectory.resolve(legacyFile.getFileName()),\n+                          EMPTY_COPY_OPTIONS);\n                     }\n                 }\n-                logInitializer.initializeExistingLogFiles( layout, transactionLogsDirectory, UPGRADE_CHECKPOINT );\n-                if ( filesNeedsToMove )\n+                logInitializer.initializeExistingLogFiles(layout, transactionLogsDirectory, UPGRADE_CHECKPOINT);\n+                if (filesNeedsToMove)\n                 {\n-                    for ( Path legacyFile : legacyFiles )\n+                    for (Path legacyFile : legacyFiles)\n                     {\n-                        fs.deleteFile( legacyFile );\n+                        fs.deleteFile(legacyFile);\n                     }\n                 }\n-            }\n-            else\n+            } else\n             {\n                 // We didn't find any files in the legacy location.\n                 // If the legacy location is the same as the intended location, then the log files are missing entirely.\n                 // Otherwise, we will have to check if the log files are already present in the intended location and try to initialize them there.\n-                logFiles = LogFilesBuilder.logFilesBasedOnlyBuilder( transactionLogsDirectory, fs ).build();\n+                logFiles = LogFilesBuilder.logFilesBasedOnlyBuilder(transactionLogsDirectory, fs).build();\n                 legacyFiles = logFiles.logFiles();\n-                if ( legacyFiles != null && legacyFiles.length > 0 )\n+                if (legacyFiles != null && legacyFiles.length > 0)\n                 {\n                     // The log files are already at their intended location, so initialize them there.\n-                    logInitializer.initializeExistingLogFiles( layout, transactionLogsDirectory, UPGRADE_CHECKPOINT );\n-                }\n-                else if ( config.get( fail_on_missing_files ) )\n+                    logInitializer.initializeExistingLogFiles(layout, transactionLogsDirectory, UPGRADE_CHECKPOINT);\n+                } else if (config.get(fail_on_missing_files))\n                 {\n                     // The log files are missing entirely.\n                     // By default, we should avoid modifying stores that have no log files,\n                     // since we log files are the only thing that can tell us if the store is in a\n                     // recovered state or not.\n                     throw new UpgradeNotAllowedException();\n-                }\n-                else\n+                } else\n                 {\n                     // The log files are missing entirely, but we were told to not think of this as an error condition,\n                     // so we instead initialize an empty log file.\n-                    logInitializer.initializeEmptyLogFile( layout, transactionLogsDirectory, UPGRADE_CHECKPOINT );\n+                    logInitializer.initializeEmptyLogFile(layout, transactionLogsDirectory, UPGRADE_CHECKPOINT);\n                 }\n             }\n-        }\n-        catch ( Exception exception )\n+        } catch (Exception exception)\n         {\n             throw new StoreUpgrader.TransactionLogsRelocationException(\n-                    \"Failure on attempt to move transaction logs into new location.\", exception );\n+              \"Failure on attempt to move transaction logs into new location.\", exception);\n         }\n     }\n \n@@ -233,7 +228,7 @@ public class LogsUpgrader\n         // Make sure to create the TransactionMetaDataStore with a `read_only` config,\n         // to avoid relying on the persistent id generators.\n         // We can't use those id files because at this point they haven't been migrated yet.\n-        Config readOnlyConfig = Config.defaults( GraphDatabaseSettings.read_only, true );\n-        return storageEngineFactory.transactionMetaDataStore( fs, databaseLayout, readOnlyConfig, pageCache, tracer );\n+        Config readOnlyConfig = Config.defaults(GraphDatabaseSettings.read_only, true);\n+        return storageEngineFactory.transactionMetaDataStore(fs, databaseLayout, readOnlyConfig, pageCache, tracer);\n     }\n }\n",
            "diff_size": 68
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/133/LogsUpgrader.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/133/LogsUpgrader.java\nindex 47a8260a579..2999d9f3e29 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/133/LogsUpgrader.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/naturalize/133/LogsUpgrader.java\n@@ -143,13 +143,12 @@ public class LogsUpgrader\n         final LogFiles logFiles;\n         try\n         {\n-            logFiles = LogFilesBuilder.builder( layout, fs )\n-                                      .withLogEntryReader( logEntryReader )\n+            logFiles = LogFilesBuilder.builder( layout, fs ).withLogEntryReader( logEntryReader )\n                                       .withConfig( config )\n                                       .withMemoryTracker( memoryTracker )\n                                       .withDatabaseHealth( databaseHealth )\n                                       .withDependencies( dependencyResolver ).build();\n-        }\n+    }\n         catch ( IOException e )\n         {\n             throw new RuntimeException( e );\n@@ -236,4 +235,4 @@ public class LogsUpgrader\n         Config readOnlyConfig = Config.defaults( GraphDatabaseSettings.read_only, true );\n         return storageEngineFactory.transactionMetaDataStore( fs, databaseLayout, readOnlyConfig, pageCache, tracer );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 4
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
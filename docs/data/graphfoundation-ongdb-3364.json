{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3364",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "40",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "40",
                    "column": "116",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "42",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "46",
                    "column": "103",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "57",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "73",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "76",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "93",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3364/InputNodeCacheWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3364/InputNodeCacheWriter.java\nindex f944fcc419f..9277a186ae8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3364/InputNodeCacheWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3364/InputNodeCacheWriter.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input;\n \n import java.io.IOException;\n@@ -36,70 +37,69 @@ import static org.neo4j.unsafe.impl.batchimport.input.InputCache.LABEL_TOKEN;\n  */\n public class InputNodeCacheWriter extends InputEntityCacheWriter\n {\n-    public InputNodeCacheWriter( StoreChannel channel, StoreChannel header, RecordFormats recordFormats, int chunkSize )\n-    {\n-        super( channel, header, recordFormats, chunkSize );\n-    }\n+  public InputNodeCacheWriter(StoreChannel channel, StoreChannel header, RecordFormats recordFormats, int chunkSize)\n+  {\n+    super(channel, header, recordFormats, chunkSize);\n+  }\n \n-    @Override\n-    protected SerializingInputEntityVisitor instantiateWrapper( InputEntityVisitor visitor, int chunkSize )\n+  @Override\n+  protected SerializingInputEntityVisitor instantiateWrapper(InputEntityVisitor visitor, int chunkSize)\n+  {\n+    return new SerializingInputNodeVisitor(visitor, chunkSize);\n+  }\n+\n+  class SerializingInputNodeVisitor extends SerializingInputEntityVisitor\n+  {\n+    private String[] previousLabels = EMPTY_STRING_ARRAY;\n+\n+    SerializingInputNodeVisitor(InputEntityVisitor actual, int chunkSize)\n     {\n-        return new SerializingInputNodeVisitor( visitor, chunkSize );\n+      super(actual, chunkSize);\n     }\n \n-    class SerializingInputNodeVisitor extends SerializingInputEntityVisitor\n+    @Override\n+    protected void serializeEntity() throws IOException\n     {\n-        private String[] previousLabels = EMPTY_STRING_ARRAY;\n-\n-        SerializingInputNodeVisitor( InputEntityVisitor actual, int chunkSize )\n-        {\n-            super( actual, chunkSize );\n-        }\n+      // properties\n+      writeProperties();\n \n-        @Override\n-        protected void serializeEntity() throws IOException\n-        {\n-            // properties\n-            writeProperties();\n-\n-            // group\n-            writeGroup( idGroup, 0 );\n+      // group\n+      writeGroup(idGroup, 0);\n \n-            // id\n-            writeValue( id() );\n+      // id\n+      writeValue(id());\n \n-            // labels\n-            if ( hasLabelField )\n-            {   // label field\n-                buffer( Byte.BYTES + Long.BYTES ).put( HAS_LABEL_FIELD ).putLong( labelField );\n-            }\n-            else\n-            {   // diff from previous node\n-                String[] labels = labels();\n-                writeLabelDiff( LABEL_REMOVAL, previousLabels, labels );\n-                writeLabelDiff( LABEL_ADDITION, labels, previousLabels );\n-                buffer( Byte.BYTES ).put( END_OF_LABEL_CHANGES );\n-                previousLabels = labels;\n-            }\n-        }\n+      // labels\n+      if (hasLabelField)\n+      {   // label field\n+        buffer(Byte.BYTES + Long.BYTES).put(HAS_LABEL_FIELD).putLong(labelField);\n+      } else\n+      {   // diff from previous node\n+        String[] labels = labels();\n+        writeLabelDiff(LABEL_REMOVAL, previousLabels, labels);\n+        writeLabelDiff(LABEL_ADDITION, labels, previousLabels);\n+        buffer(Byte.BYTES).put(END_OF_LABEL_CHANGES);\n+        previousLabels = labels;\n+      }\n+    }\n \n-        @Override\n-        protected void clearState()\n-        {\n-            previousLabels = EMPTY_STRING_ARRAY;\n-            super.clearState();\n-        }\n+    @Override\n+    protected void clearState()\n+    {\n+      previousLabels = EMPTY_STRING_ARRAY;\n+      super.clearState();\n+    }\n \n-        protected void writeLabelDiff( byte mode, String[] compare, String[] with ) throws IOException\n+    protected void writeLabelDiff(byte mode, String[] compare, String[] with) throws IOException\n+    {\n+      for (String value : compare)\n+      {\n+        if (!contains(with, value))\n         {\n-            for ( String value : compare )\n-            {\n-                if ( !contains( with, value ) )\n-                {\n-                    buffer( Byte.BYTES ).put( mode );\n-                    writeToken( LABEL_TOKEN, value );\n-                }\n-            }\n+          buffer(Byte.BYTES).put(mode);\n+          writeToken(LABEL_TOKEN, value);\n         }\n+      }\n     }\n+  }\n }\n",
            "diff_size": 70
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3364/InputNodeCacheWriter.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3364/InputNodeCacheWriter.java\nindex f944fcc419f..29d42e89540 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3364/InputNodeCacheWriter.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3364/InputNodeCacheWriter.java\n@@ -70,11 +70,13 @@ public class InputNodeCacheWriter extends InputEntityCacheWriter\n \n             // labels\n             if ( hasLabelField )\n-            {   // label field\n+            {\n+    // label field\n                 buffer( Byte.BYTES + Long.BYTES ).put( HAS_LABEL_FIELD ).putLong( labelField );\n             }\n             else\n-            {   // diff from previous node\n+            {\n+    // diff from previous node\n                 String[] labels = labels();\n                 writeLabelDiff( LABEL_REMOVAL, previousLabels, labels );\n                 writeLabelDiff( LABEL_ADDITION, labels, previousLabels );\n@@ -102,4 +104,4 @@ public class InputNodeCacheWriter extends InputEntityCacheWriter\n             }\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 5
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "1248",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "37",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "37",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "66",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1248/ReadableDiffSets.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1248/ReadableDiffSets.java\nindex f036a1bf863..b5316938a51 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1248/ReadableDiffSets.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/1248/ReadableDiffSets.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.storageengine.api.txstate;\n \n import java.util.Collections;\n@@ -32,104 +33,104 @@ import org.neo4j.collection.primitive.PrimitiveLongResourceIterator;\n  */\n public interface ReadableDiffSets<T> extends SuperReadableDiffSets<T>\n {\n+  @Override\n+  ReadableDiffSets<T> filterAdded(Predicate<T> addedFilter);\n+\n+  final class Empty<T> implements ReadableDiffSets<T>\n+  {\n+    @SuppressWarnings(\"unchecked\")\n+    public static <T> ReadableDiffSets<T> instance()\n+    {\n+      return INSTANCE;\n+    }\n+\n+    public static <T> ReadableDiffSets<T> ifNull(ReadableDiffSets<T> diffSets)\n+    {\n+      return diffSets == null ? Empty.instance() : diffSets;\n+    }\n+\n+    private static final ReadableDiffSets INSTANCE = new Empty();\n+\n+    private Empty()\n+    {\n+      // singleton\n+    }\n+\n+    @Override\n+    public boolean isAdded(T elem)\n+    {\n+      return false;\n+    }\n+\n     @Override\n-    ReadableDiffSets<T> filterAdded( Predicate<T> addedFilter );\n-\n-    final class Empty<T> implements ReadableDiffSets<T>\n-    {\n-        @SuppressWarnings( \"unchecked\" )\n-        public static <T> ReadableDiffSets<T> instance()\n-        {\n-            return INSTANCE;\n-        }\n-\n-        public static <T> ReadableDiffSets<T> ifNull( ReadableDiffSets<T> diffSets )\n-        {\n-            return diffSets == null ? Empty.instance() : diffSets;\n-        }\n-\n-        private static final ReadableDiffSets INSTANCE = new Empty();\n-\n-        private Empty()\n-        {\n-            // singleton\n-        }\n-\n-        @Override\n-        public boolean isAdded( T elem )\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public boolean isRemoved( T elem )\n-        {\n-            return false;\n-        }\n-\n-        @Override\n-        public Set<T> getAdded()\n-        {\n-            return Collections.emptySet();\n-        }\n-\n-        @Override\n-        public Set<T> getAddedSnapshot()\n-        {\n-            return Collections.emptySet();\n-        }\n-\n-        @Override\n-        public Set<T> getRemoved()\n-        {\n-            return Collections.emptySet();\n-        }\n-\n-        @Override\n-        public boolean isEmpty()\n-        {\n-            return true;\n-        }\n-\n-        @Override\n-        public Iterator<T> apply( Iterator<T> source )\n-        {\n-            return source;\n-        }\n-\n-        @Override\n-        public int delta()\n-        {\n-            return 0;\n-        }\n-\n-        @Override\n-        public PrimitiveLongIterator augment( PrimitiveLongIterator source )\n-        {\n-            return source;\n-        }\n-\n-        @Override\n-        public PrimitiveLongResourceIterator augment( PrimitiveLongResourceIterator source )\n-        {\n-            return source;\n-        }\n-\n-        @Override\n-        public PrimitiveLongResourceIterator augmentWithRemovals( PrimitiveLongResourceIterator source )\n-        {\n-            return source;\n-        }\n-\n-        @Override\n-        public ReadableDiffSets<T> filterAdded( Predicate<T> addedFilter )\n-        {\n-            return this;\n-        }\n-\n-        @Override\n-        public void accept( DiffSetsVisitor<T> visitor )\n-        {\n-        }\n+    public boolean isRemoved(T elem)\n+    {\n+      return false;\n+    }\n+\n+    @Override\n+    public Set<T> getAdded()\n+    {\n+      return Collections.emptySet();\n+    }\n+\n+    @Override\n+    public Set<T> getAddedSnapshot()\n+    {\n+      return Collections.emptySet();\n+    }\n+\n+    @Override\n+    public Set<T> getRemoved()\n+    {\n+      return Collections.emptySet();\n+    }\n+\n+    @Override\n+    public boolean isEmpty()\n+    {\n+      return true;\n+    }\n+\n+    @Override\n+    public Iterator<T> apply(Iterator<T> source)\n+    {\n+      return source;\n+    }\n+\n+    @Override\n+    public int delta()\n+    {\n+      return 0;\n+    }\n+\n+    @Override\n+    public PrimitiveLongIterator augment(PrimitiveLongIterator source)\n+    {\n+      return source;\n+    }\n+\n+    @Override\n+    public PrimitiveLongResourceIterator augment(PrimitiveLongResourceIterator source)\n+    {\n+      return source;\n+    }\n+\n+    @Override\n+    public PrimitiveLongResourceIterator augmentWithRemovals(PrimitiveLongResourceIterator source)\n+    {\n+      return source;\n+    }\n+\n+    @Override\n+    public ReadableDiffSets<T> filterAdded(Predicate<T> addedFilter)\n+    {\n+      return this;\n+    }\n+\n+    @Override\n+    public void accept(DiffSetsVisitor<T> visitor)\n+    {\n     }\n+  }\n }\n",
            "diff_size": 129
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1248/ReadableDiffSets.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1248/ReadableDiffSets.java\nindex f036a1bf863..6c64629962f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/1248/ReadableDiffSets.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/1248/ReadableDiffSets.java\n@@ -132,4 +132,4 @@ public interface ReadableDiffSets<T> extends SuperReadableDiffSets<T>\n         {\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
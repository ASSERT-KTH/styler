{
    "project_name": "graphfoundation-ongdb",
    "error_id": "602",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "41",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "41",
                    "column": "91",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "50",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "56",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "58",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "18",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/602/LogRotationImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/602/LogRotationImpl.java\nindex b8480e51ecf..ac6c5ddeb65 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/602/LogRotationImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/602/LogRotationImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.transaction.log.rotation;\n \n import java.io.IOException;\n@@ -32,66 +33,67 @@ import org.neo4j.kernel.internal.DatabaseHealth;\n  */\n public class LogRotationImpl implements LogRotation\n {\n-    private final LogRotation.Monitor monitor;\n-    private final LogFiles logFiles;\n-    private final DatabaseHealth databaseHealth;\n-    private final LogFile logFile;\n+  private final LogRotation.Monitor monitor;\n+  private final LogFiles logFiles;\n+  private final DatabaseHealth databaseHealth;\n+  private final LogFile logFile;\n \n-    public LogRotationImpl( Monitor monitor, LogFiles logFiles, DatabaseHealth databaseHealth )\n-    {\n-        this.monitor = monitor;\n-        this.logFiles = logFiles;\n-        this.databaseHealth = databaseHealth;\n-        this.logFile = logFiles.getLogFile();\n-    }\n-\n-    @Override\n-    public boolean rotateLogIfNeeded( LogAppendEvent logAppendEvent ) throws IOException\n-    {\n-        /* We synchronize on the writer because we want to have a monitor that another thread\n-         * doing force (think batching of writes), such that it can't see a bad state of the writer\n-         * even when rotating underlying channels.\n-         */\n-        if ( logFile.rotationNeeded() )\n-        {\n-            synchronized ( logFile )\n-            {\n-                if ( logFile.rotationNeeded() )\n-                {\n-                    try ( LogRotateEvent rotateEvent = logAppendEvent.beginLogRotate() )\n-                    {\n-                        doRotate();\n-                    }\n-                    return true;\n-                }\n-            }\n-        }\n-        return false;\n-    }\n+  public LogRotationImpl(Monitor monitor, LogFiles logFiles, DatabaseHealth databaseHealth)\n+  {\n+    this.monitor = monitor;\n+    this.logFiles = logFiles;\n+    this.databaseHealth = databaseHealth;\n+    this.logFile = logFiles.getLogFile();\n+  }\n \n-    /**\n-     * use for test purpose only\n-     * @throws IOException\n+  @Override\n+  public boolean rotateLogIfNeeded(LogAppendEvent logAppendEvent) throws IOException\n+  {\n+    /* We synchronize on the writer because we want to have a monitor that another thread\n+     * doing force (think batching of writes), such that it can't see a bad state of the writer\n+     * even when rotating underlying channels.\n      */\n-    @Override\n-    public void rotateLogFile() throws IOException\n+    if (logFile.rotationNeeded())\n     {\n-        synchronized ( logFile )\n+      synchronized (logFile)\n+      {\n+        if (logFile.rotationNeeded())\n         {\n+          try (LogRotateEvent rotateEvent = logAppendEvent.beginLogRotate())\n+          {\n             doRotate();\n+          }\n+          return true;\n         }\n+      }\n     }\n+    return false;\n+  }\n \n-    private void doRotate() throws IOException\n+  /**\n+   * use for test purpose only\n+   *\n+   * @throws IOException\n+   */\n+  @Override\n+  public void rotateLogFile() throws IOException\n+  {\n+    synchronized (logFile)\n     {\n-        long currentVersion = logFiles.getHighestLogVersion();\n-        /*\n-         * In order to rotate the current log file safely we need to assert that the kernel is still\n-         * at full health. In case of a panic this rotation will be aborted, which is the safest alternative.\n-         */\n-        databaseHealth.assertHealthy( IOException.class );\n-        monitor.startedRotating( currentVersion );\n-        logFile.rotate();\n-        monitor.finishedRotating( currentVersion );\n+      doRotate();\n     }\n+  }\n+\n+  private void doRotate() throws IOException\n+  {\n+    long currentVersion = logFiles.getHighestLogVersion();\n+    /*\n+     * In order to rotate the current log file safely we need to assert that the kernel is still\n+     * at full health. In case of a panic this rotation will be aborted, which is the safest alternative.\n+     */\n+    databaseHealth.assertHealthy(IOException.class);\n+    monitor.startedRotating(currentVersion);\n+    logFile.rotate();\n+    monitor.finishedRotating(currentVersion);\n+  }\n }\n",
            "diff_size": 86
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/602/LogRotationImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/602/LogRotationImpl.java\nindex b8480e51ecf..242b5e3c870 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/602/LogRotationImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/602/LogRotationImpl.java\n@@ -94,4 +94,4 @@ public class LogRotationImpl implements LogRotation\n         logFile.rotate();\n         monitor.finishedRotating( currentVersion );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
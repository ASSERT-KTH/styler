{
    "project_name": "aspose-words-cloud-aspose-words-cloud-java",
    "error_id": "447",
    "information": {
        "errors": [
            {
                "line": "313",
                "column": "58",
                "severity": "error",
                "message": "'typecast' is not followed by whitespace.",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
            }
        ]
    },
    "source_code": "            return false;\n        }\n    OfficeMathObject officeMathObject = (OfficeMathObject)o;\n    return\n        Objects.equals(this.content, officeMathObject.content) &&\n        Objects.equals(this.displayType, officeMathObject.displayType) &&",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/447/OfficeMathObject.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/447/OfficeMathObject.java\nindex 75d94d0095e..8f187a3185e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/447/OfficeMathObject.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler/447/OfficeMathObject.java\n@@ -310,7 +310,7 @@ public class OfficeMathObject extends OfficeMathLink {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    OfficeMathObject officeMathObject = (OfficeMathObject)o;\n+    OfficeMathObject officeMathObject = (OfficeMathObject) o;\n     return\n         Objects.equals(this.content, officeMathObject.content) &&\n         Objects.equals(this.displayType, officeMathObject.displayType) &&\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/447/OfficeMathObject.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/447/OfficeMathObject.java\nindex 75d94d0095e..87e59dc6625 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/447/OfficeMathObject.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/intellij/447/OfficeMathObject.java\n@@ -10,10 +10,10 @@\n  *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n  *  copies of the Software, and to permit persons to whom the Software is\n  *  furnished to do so, subject to the following conditions:\n- * \n+ *\n  *  The above copyright notice and this permission notice shall be included in all\n  *  copies or substantial portions of the Software.\n- * \n+ *\n  *  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n  *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n  *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n@@ -32,13 +32,16 @@ import java.util.Arrays;\n import java.util.ArrayList;\n import java.util.List;\n import java.io.IOException;\n+\n import org.threeten.bp.OffsetDateTime;\n+\n import com.aspose.words.cloud.model.*;\n import com.google.gson.TypeAdapter;\n import com.google.gson.annotations.JsonAdapter;\n import com.google.gson.annotations.SerializedName;\n import com.google.gson.stream.JsonReader;\n import com.google.gson.stream.JsonWriter;\n+\n import io.swagger.annotations.ApiModel;\n import io.swagger.annotations.ApiModelProperty;\n \n@@ -80,7 +83,7 @@ public class OfficeMathObject extends OfficeMathLink {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< DisplayTypeEnum > {\n+        public static class Adapter extends TypeAdapter<DisplayTypeEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final DisplayTypeEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -130,7 +133,7 @@ public class OfficeMathObject extends OfficeMathLink {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< JustificationEnum > {\n+        public static class Adapter extends TypeAdapter<JustificationEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final JustificationEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -204,7 +207,7 @@ public class OfficeMathObject extends OfficeMathLink {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< MathObjectTypeEnum > {\n+        public static class Adapter extends TypeAdapter<MathObjectTypeEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final MathObjectTypeEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -229,6 +232,7 @@ public class OfficeMathObject extends OfficeMathLink {\n \n     @SerializedName(\"MathObjectType\")\n     private MathObjectTypeEnum mathObjectType = null;\n+\n     public OfficeMathObject content(StoryChildNodes content) {\n         this.content = content;\n         return this;\n@@ -236,8 +240,9 @@ public class OfficeMathObject extends OfficeMathLink {\n \n     /**\n      * Gets or sets content of footnote.\n-    * @return content\n-    **/\n+     *\n+     * @return content\n+     **/\n     @ApiModelProperty(value = \"Gets or sets content of footnote.\")\n     public StoryChildNodes getContent() {\n         return content;\n@@ -255,8 +260,9 @@ public class OfficeMathObject extends OfficeMathLink {\n     /**\n      * Gets or sets /sets Office Math display format type which represents whether an equation is displayed inline with the text\n      * or displayed on its own line.\n-    * @return displayType\n-    **/\n+     *\n+     * @return displayType\n+     **/\n     @ApiModelProperty(value = \"Gets or sets /sets Office Math display format type which represents whether an equation is displayed inline with the text or displayed on its own line.\")\n     public DisplayTypeEnum getDisplayType() {\n         return displayType;\n@@ -273,8 +279,9 @@ public class OfficeMathObject extends OfficeMathLink {\n \n     /**\n      * Gets or sets /sets Office Math justification.\n-    * @return justification\n-    **/\n+     *\n+     * @return justification\n+     **/\n     @ApiModelProperty(value = \"Gets or sets /sets Office Math justification.\")\n     public JustificationEnum getJustification() {\n         return justification;\n@@ -291,8 +298,9 @@ public class OfficeMathObject extends OfficeMathLink {\n \n     /**\n      * Gets or sets type Aspose.Words.Math.OfficeMath.MathObjectType of this Office Math object.\n-    * @return mathObjectType\n-    **/\n+     *\n+     * @return mathObjectType\n+     **/\n     @ApiModelProperty(value = \"Gets or sets type Aspose.Words.Math.OfficeMath.MathObjectType of this Office Math object.\")\n     public MathObjectTypeEnum getMathObjectType() {\n         return mathObjectType;\n@@ -310,41 +318,41 @@ public class OfficeMathObject extends OfficeMathLink {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    OfficeMathObject officeMathObject = (OfficeMathObject)o;\n-    return\n-        Objects.equals(this.content, officeMathObject.content) &&\n-        Objects.equals(this.displayType, officeMathObject.displayType) &&\n-        Objects.equals(this.justification, officeMathObject.justification) &&\n-        Objects.equals(this.mathObjectType, officeMathObject.mathObjectType) &&\n-        super.equals(o);\n-  }\n-\n-  @Override\n-  public int hashCode() {\n-    return Objects.hash(content, displayType, justification, mathObjectType, super.hashCode());\n-  }\n-\n-  @Override\n-  public String toString() {\n-    StringBuilder sb = new StringBuilder();\n-    sb.append(\"class OfficeMathObject {\\n\");\n-    sb.append(\"    \").append(toIndentedString(super.toString())).append(\"\\n\");\n-    sb.append(\"    content: \").append(toIndentedString(content)).append(\"\\n\");\n-    sb.append(\"    displayType: \").append(toIndentedString(displayType)).append(\"\\n\");\n-    sb.append(\"    justification: \").append(toIndentedString(justification)).append(\"\\n\");\n-    sb.append(\"    mathObjectType: \").append(toIndentedString(mathObjectType)).append(\"\\n\");\n-    sb.append(\"}\");\n-    return sb.toString();\n-  }\n-\n-  /**\n-   * Convert the given object to string with each line indented by 4 spaces\n-   * (except the first line).\n-   */\n-  private String toIndentedString(java.lang.Object o) {\n-    if (o == null) {\n-      return \"null\";\n+        OfficeMathObject officeMathObject = (OfficeMathObject) o;\n+        return\n+            Objects.equals(this.content, officeMathObject.content) &&\n+                Objects.equals(this.displayType, officeMathObject.displayType) &&\n+                Objects.equals(this.justification, officeMathObject.justification) &&\n+                Objects.equals(this.mathObjectType, officeMathObject.mathObjectType) &&\n+                super.equals(o);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(content, displayType, justification, mathObjectType, super.hashCode());\n+    }\n+\n+    @Override\n+    public String toString() {\n+        StringBuilder sb = new StringBuilder();\n+        sb.append(\"class OfficeMathObject {\\n\");\n+        sb.append(\"    \").append(toIndentedString(super.toString())).append(\"\\n\");\n+        sb.append(\"    content: \").append(toIndentedString(content)).append(\"\\n\");\n+        sb.append(\"    displayType: \").append(toIndentedString(displayType)).append(\"\\n\");\n+        sb.append(\"    justification: \").append(toIndentedString(justification)).append(\"\\n\");\n+        sb.append(\"    mathObjectType: \").append(toIndentedString(mathObjectType)).append(\"\\n\");\n+        sb.append(\"}\");\n+        return sb.toString();\n+    }\n+\n+    /**\n+     * Convert the given object to string with each line indented by 4 spaces\n+     * (except the first line).\n+     */\n+    private String toIndentedString(java.lang.Object o) {\n+        if (o == null) {\n+            return \"null\";\n+        }\n+        return o.toString().replace(\"\\n\", \"\\n    \");\n     }\n-    return o.toString().replace(\"\\n\", \"\\n    \");\n-  }\n }\n",
            "diff_size": 59
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "350",
                    "column": "54",
                    "severity": "error",
                    "message": "'typecast' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/447/OfficeMathObject.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/naturalize/447/OfficeMathObject.java\nindex 75d94d0095e..5bc52c0914a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/447/OfficeMathObject.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/naturalize/447/OfficeMathObject.java\n@@ -54,7 +54,8 @@ public class OfficeMathObject extends OfficeMathLink {\n     @JsonAdapter(DisplayTypeEnum.Adapter.class)\n     public enum DisplayTypeEnum {\n         DISPLAY(\"Display\"),\n-        INLINE(\"Inline\");\n+\n+INLINE(\"Inline\");\n \n         private String value;\n \n@@ -80,7 +81,7 @@ public class OfficeMathObject extends OfficeMathLink {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< DisplayTypeEnum > {\n+        public static class Adapter extends TypeAdapter<DisplayTypeEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final DisplayTypeEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -100,11 +101,16 @@ public class OfficeMathObject extends OfficeMathLink {\n     @JsonAdapter(JustificationEnum.Adapter.class)\n     public enum JustificationEnum {\n         CENTERGROUP(\"CenterGroup\"),\n-        DEFAULT(\"Default\"),\n-        CENTER(\"Center\"),\n-        LEFT(\"Left\"),\n-        RIGHT(\"Right\"),\n-        INLINE(\"Inline\");\n+\n+DEFAULT(\"Default\"),\n+\n+CENTER(\"Center\"),\n+\n+LEFT(\"Left\"),\n+\n+RIGHT(\"Right\"),\n+\n+INLINE(\"Inline\");\n \n         private String value;\n \n@@ -130,7 +136,7 @@ public class OfficeMathObject extends OfficeMathLink {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< JustificationEnum > {\n+        public static class Adapter extends TypeAdapter<JustificationEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final JustificationEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -150,35 +156,64 @@ public class OfficeMathObject extends OfficeMathLink {\n     @JsonAdapter(MathObjectTypeEnum.Adapter.class)\n     public enum MathObjectTypeEnum {\n         OMATH(\"OMath\"),\n-        OMATHPARA(\"OMathPara\"),\n-        ACCENT(\"Accent\"),\n-        BAR(\"Bar\"),\n-        BORDERBOX(\"BorderBox\"),\n-        BOX(\"Box\"),\n-        DELIMITER(\"Delimiter\"),\n-        DEGREE(\"Degree\"),\n-        ARGUMENT(\"Argument\"),\n-        ARRAY(\"Array\"),\n-        FRACTION(\"Fraction\"),\n-        DENOMINATOR(\"Denominator\"),\n-        NUMERATOR(\"Numerator\"),\n-        FUNCTION(\"Function\"),\n-        FUNCTIONNAME(\"FunctionName\"),\n-        GROUPCHARACTER(\"GroupCharacter\"),\n-        LIMIT(\"Limit\"),\n-        LOWERLIMIT(\"LowerLimit\"),\n-        UPPERLIMIT(\"UpperLimit\"),\n-        MATRIX(\"Matrix\"),\n-        MATRIXROW(\"MatrixRow\"),\n-        NARY(\"NAry\"),\n-        PHANTOM(\"Phantom\"),\n-        RADICAL(\"Radical\"),\n-        SUBSCRIPTPART(\"SubscriptPart\"),\n-        SUPERSCRIPTPART(\"SuperscriptPart\"),\n-        PRESUBSUPERSCRIPT(\"PreSubSuperscript\"),\n-        SUBSCRIPT(\"Subscript\"),\n-        SUBSUPERSCRIPT(\"SubSuperscript\"),\n-        SUPERCRIPT(\"Supercript\");\n+\n+OMATHPARA(\"OMathPara\"),\n+\n+ACCENT(\"Accent\"),\n+\n+BAR(\"Bar\"),\n+\n+BORDERBOX(\"BorderBox\"),\n+\n+BOX(\"Box\"),\n+\n+DELIMITER(\"Delimiter\"),\n+\n+DEGREE(\"Degree\"),\n+\n+ARGUMENT(\"Argument\"),\n+\n+ARRAY(\"Array\"),\n+\n+FRACTION(\"Fraction\"),\n+\n+DENOMINATOR(\"Denominator\"),\n+\n+NUMERATOR(\"Numerator\"),\n+\n+FUNCTION(\"Function\"),\n+\n+FUNCTIONNAME(\"FunctionName\"),\n+\n+GROUPCHARACTER(\"GroupCharacter\"),\n+\n+LIMIT(\"Limit\"),\n+\n+LOWERLIMIT(\"LowerLimit\"),\n+\n+UPPERLIMIT(\"UpperLimit\"),\n+\n+MATRIX(\"Matrix\"),\n+\n+MATRIXROW(\"MatrixRow\"),\n+\n+NARY(\"NAry\"),\n+\n+PHANTOM(\"Phantom\"),\n+\n+RADICAL(\"Radical\"),\n+\n+SUBSCRIPTPART(\"SubscriptPart\"),\n+\n+SUPERSCRIPTPART(\"SuperscriptPart\"),\n+\n+PRESUBSUPERSCRIPT(\"PreSubSuperscript\"),\n+\n+SUBSCRIPT(\"Subscript\"),\n+\n+SUBSUPERSCRIPT(\"SubSuperscript\"),\n+\n+SUPERCRIPT(\"Supercript\");\n \n         private String value;\n \n@@ -204,7 +239,7 @@ public class OfficeMathObject extends OfficeMathLink {\n             return null;\n         }\n \n-        public static class Adapter extends TypeAdapter< MathObjectTypeEnum > {\n+        public static class Adapter extends TypeAdapter<MathObjectTypeEnum> {\n             @Override\n             public void write(final JsonWriter jsonWriter, final MathObjectTypeEnum enumeration) throws IOException {\n                 jsonWriter.value(enumeration.getValue());\n@@ -229,7 +264,8 @@ public class OfficeMathObject extends OfficeMathLink {\n \n     @SerializedName(\"MathObjectType\")\n     private MathObjectTypeEnum mathObjectType = null;\n-    public OfficeMathObject content(StoryChildNodes content) {\n+\n+public OfficeMathObject content(StoryChildNodes content) {\n         this.content = content;\n         return this;\n     }\n@@ -306,13 +342,13 @@ public class OfficeMathObject extends OfficeMathLink {\n     public boolean equals(java.lang.Object o) {\n         if (this == o) {\n             return true;\n-        }\n+  }\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    OfficeMathObject officeMathObject = (OfficeMathObject)o;\n-    return\n-        Objects.equals(this.content, officeMathObject.content) &&\n+\n+OfficeMathObject officeMathObject = (OfficeMathObject)o;\n+    return Objects.equals(this.content, officeMathObject.content) &&\n         Objects.equals(this.displayType, officeMathObject.displayType) &&\n         Objects.equals(this.justification, officeMathObject.justification) &&\n         Objects.equals(this.mathObjectType, officeMathObject.mathObjectType) &&\n@@ -347,4 +383,4 @@ public class OfficeMathObject extends OfficeMathLink {\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 80
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/447/OfficeMathObject.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/447/OfficeMathObject.java\nindex 75d94d0095e..14855883fcb 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/447/OfficeMathObject.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/codebuff/447/OfficeMathObject.java\n@@ -45,285 +45,341 @@ import io.swagger.annotations.ApiModelProperty;\n /**\n  * OfficeMath object.\n  */\n+\n+\n @ApiModel(description = \"OfficeMath object.\")\n+\n public class OfficeMathObject extends OfficeMathLink {\n     /**\n      * Gets or sets /sets Office Math display format type which represents whether an equation is displayed inline with the text\n      * or displayed on its own line.\n      */\n-    @JsonAdapter(DisplayTypeEnum.Adapter.class)\n-    public enum DisplayTypeEnum {\n-        DISPLAY(\"Display\"),\n-        INLINE(\"Inline\");\n+  @JsonAdapter(DisplayTypeEnum.Adapter.class)\n+  public enum DisplayTypeEnum {\n+    DISPLAY(\"Display\"), INLINE(\"Inline\");\n \n-        private String value;\n+    private String value;\n \n-        DisplayTypeEnum(String value) {\n-            this.value = value;\n-        }\n+    DisplayTypeEnum(String value) {\n+      this.value = value;\n+    }\n \n-        public String getValue() {\n-            return value;\n-        }\n+    public String getValue() {\n+      return value;\n+    }\n \n-        @Override\n-        public String toString() {\n-            return String.valueOf(value);\n-        }\n+    @Override\n+    public String toString() {\n+      return String.valueOf(value);\n+    }\n \n-        public static DisplayTypeEnum fromValue(String text) {\n-            for (DisplayTypeEnum b : DisplayTypeEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n+    public static DisplayTypeEnum fromValue(String text) {\n+      for (DisplayTypeEnum b : DisplayTypeEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+          return b;\n         }\n+      }\n+      return null;\n+    }\n \n-        public static class Adapter extends TypeAdapter< DisplayTypeEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final DisplayTypeEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public DisplayTypeEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return DisplayTypeEnum.fromValue(String.valueOf(value));\n-            }\n-        }\n+    public static class Adapter extends TypeAdapter<DisplayTypeEnum> {\n+      @Override\n+      public void write(final JsonWriter jsonWriter, final DisplayTypeEnum enumeration) throws IOException {\n+        jsonWriter.value(enumeration.getValue());\n+      }\n+\n+\n+      @Override\n+      public DisplayTypeEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return DisplayTypeEnum.fromValue(String.valueOf(value));\n+      }\n     }\n+  }\n \n     /**\n      * Gets or sets /sets Office Math justification.\n      */\n-    @JsonAdapter(JustificationEnum.Adapter.class)\n-    public enum JustificationEnum {\n-        CENTERGROUP(\"CenterGroup\"),\n-        DEFAULT(\"Default\"),\n-        CENTER(\"Center\"),\n-        LEFT(\"Left\"),\n-        RIGHT(\"Right\"),\n-        INLINE(\"Inline\");\n-\n-        private String value;\n-\n-        JustificationEnum(String value) {\n-            this.value = value;\n-        }\n \n-        public String getValue() {\n-            return value;\n-        }\n \n-        @Override\n-        public String toString() {\n-            return String.valueOf(value);\n-        }\n+  @JsonAdapter(JustificationEnum.Adapter.class)\n+  public enum JustificationEnum {\n+    CENTERGROUP(\"CenterGroup\"),\n \n-        public static JustificationEnum fromValue(String text) {\n-            for (JustificationEnum b : JustificationEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n-        }\n+    DEFAULT(\"Default\"),\n+\n+    CENTER(\"Center\"),\n+\n+    LEFT(\"Left\"),\n+\n+    RIGHT(\"Right\"),\n+\n+    INLINE(\"Inline\");\n+\n+    private String value;\n \n-        public static class Adapter extends TypeAdapter< JustificationEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final JustificationEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public JustificationEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return JustificationEnum.fromValue(String.valueOf(value));\n-            }\n+    JustificationEnum(String value) {\n+      this.value = value;\n+    }\n+\n+    public String getValue() {\n+      return value;\n+    }\n+\n+    @Override\n+    public String toString() {\n+      return String.valueOf(value);\n+    }\n+\n+    public static JustificationEnum fromValue(String text) {\n+      for (JustificationEnum b : JustificationEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+          return b;\n         }\n+      }\n+      return null;\n     }\n \n+    public static class Adapter extends TypeAdapter<JustificationEnum> {\n+      @Override\n+      public void write(final JsonWriter jsonWriter, final JustificationEnum enumeration) throws IOException {\n+        jsonWriter.value(enumeration.getValue());\n+      }\n+\n+\n+      @Override\n+      public JustificationEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return JustificationEnum.fromValue(String.valueOf(value));\n+      }\n+    }\n+  }\n+\n     /**\n      * Gets or sets type Aspose.Words.Math.OfficeMath.MathObjectType of this Office Math object.\n      */\n-    @JsonAdapter(MathObjectTypeEnum.Adapter.class)\n-    public enum MathObjectTypeEnum {\n-        OMATH(\"OMath\"),\n-        OMATHPARA(\"OMathPara\"),\n-        ACCENT(\"Accent\"),\n-        BAR(\"Bar\"),\n-        BORDERBOX(\"BorderBox\"),\n-        BOX(\"Box\"),\n-        DELIMITER(\"Delimiter\"),\n-        DEGREE(\"Degree\"),\n-        ARGUMENT(\"Argument\"),\n-        ARRAY(\"Array\"),\n-        FRACTION(\"Fraction\"),\n-        DENOMINATOR(\"Denominator\"),\n-        NUMERATOR(\"Numerator\"),\n-        FUNCTION(\"Function\"),\n-        FUNCTIONNAME(\"FunctionName\"),\n-        GROUPCHARACTER(\"GroupCharacter\"),\n-        LIMIT(\"Limit\"),\n-        LOWERLIMIT(\"LowerLimit\"),\n-        UPPERLIMIT(\"UpperLimit\"),\n-        MATRIX(\"Matrix\"),\n-        MATRIXROW(\"MatrixRow\"),\n-        NARY(\"NAry\"),\n-        PHANTOM(\"Phantom\"),\n-        RADICAL(\"Radical\"),\n-        SUBSCRIPTPART(\"SubscriptPart\"),\n-        SUPERSCRIPTPART(\"SuperscriptPart\"),\n-        PRESUBSUPERSCRIPT(\"PreSubSuperscript\"),\n-        SUBSCRIPT(\"Subscript\"),\n-        SUBSUPERSCRIPT(\"SubSuperscript\"),\n-        SUPERCRIPT(\"Supercript\");\n-\n-        private String value;\n-\n-        MathObjectTypeEnum(String value) {\n-            this.value = value;\n-        }\n \n-        public String getValue() {\n-            return value;\n-        }\n \n-        @Override\n-        public String toString() {\n-            return String.valueOf(value);\n-        }\n+  @JsonAdapter(MathObjectTypeEnum.Adapter.class)\n+  public enum MathObjectTypeEnum {\n+    OMATH(\"OMath\"),\n \n-        public static MathObjectTypeEnum fromValue(String text) {\n-            for (MathObjectTypeEnum b : MathObjectTypeEnum.values()) {\n-                if (String.valueOf(b.value).equals(text)) {\n-                    return b;\n-                }\n-            }\n-            return null;\n-        }\n+    OMATHPARA(\"OMathPara\"),\n \n-        public static class Adapter extends TypeAdapter< MathObjectTypeEnum > {\n-            @Override\n-            public void write(final JsonWriter jsonWriter, final MathObjectTypeEnum enumeration) throws IOException {\n-                jsonWriter.value(enumeration.getValue());\n-            }\n-\n-            @Override\n-            public MathObjectTypeEnum read(final JsonReader jsonReader) throws IOException {\n-                String value = jsonReader.nextString();\n-                return MathObjectTypeEnum.fromValue(String.valueOf(value));\n-            }\n-        }\n+    ACCENT(\"Accent\"),\n+\n+    BAR(\"Bar\"),\n+\n+    BORDERBOX(\"BorderBox\"),\n+\n+    BOX(\"Box\"),\n+\n+    DELIMITER(\"Delimiter\"),\n+\n+    DEGREE(\"Degree\"),\n+\n+    ARGUMENT(\"Argument\"),\n+\n+    ARRAY(\"Array\"),\n+\n+    FRACTION(\"Fraction\"),\n+\n+    DENOMINATOR(\"Denominator\"),\n+\n+    NUMERATOR(\"Numerator\"),\n+\n+    FUNCTION(\"Function\"),\n+\n+    FUNCTIONNAME(\"FunctionName\"),\n+\n+    GROUPCHARACTER(\"GroupCharacter\"),\n+\n+    LIMIT(\"Limit\"),\n+\n+    LOWERLIMIT(\"LowerLimit\"),\n+\n+    UPPERLIMIT(\"UpperLimit\"),\n+\n+    MATRIX(\"Matrix\"),\n+\n+    MATRIXROW(\"MatrixRow\"),\n+\n+    NARY(\"NAry\"),\n+\n+    PHANTOM(\"Phantom\"),\n+\n+    RADICAL(\"Radical\"),\n+\n+    SUBSCRIPTPART(\"SubscriptPart\"),\n+\n+    SUPERSCRIPTPART(\"SuperscriptPart\"),\n+\n+    PRESUBSUPERSCRIPT(\"PreSubSuperscript\"),\n+\n+    SUBSCRIPT(\"Subscript\"),\n+\n+    SUBSUPERSCRIPT(\"SubSuperscript\"),\n+\n+    SUPERCRIPT(\"Supercript\");\n+\n+    private String value;\n+\n+    MathObjectTypeEnum(String value) {\n+      this.value = value;\n+    }\n+\n+    public String getValue() {\n+      return value;\n+    }\n+\n+    @Override\n+    public String toString() {\n+      return String.valueOf(value);\n     }\n \n-    @SerializedName(\"Content\")\n-    private StoryChildNodes content = null;\n+    public static MathObjectTypeEnum fromValue(String text) {\n+      for (MathObjectTypeEnum b : MathObjectTypeEnum.values()) {\n+        if (String.valueOf(b.value).equals(text)) {\n+          return b;\n+        }\n+      }\n+      return null;\n+    }\n \n-    @SerializedName(\"DisplayType\")\n-    private DisplayTypeEnum displayType = null;\n+    public static class Adapter extends TypeAdapter<MathObjectTypeEnum> {\n+      @Override\n+      public void write(final JsonWriter jsonWriter, final MathObjectTypeEnum enumeration) throws IOException {\n+        jsonWriter.value(enumeration.getValue());\n+      }\n \n-    @SerializedName(\"Justification\")\n-    private JustificationEnum justification = null;\n \n-    @SerializedName(\"MathObjectType\")\n-    private MathObjectTypeEnum mathObjectType = null;\n-    public OfficeMathObject content(StoryChildNodes content) {\n-        this.content = content;\n-        return this;\n+      @Override\n+      public MathObjectTypeEnum read(final JsonReader jsonReader) throws IOException {\n+        String value = jsonReader.nextString();\n+        return MathObjectTypeEnum.fromValue(String.valueOf(value));\n+      }\n     }\n+  }\n+\n+\n+  @SerializedName(\"Content\")\n+  private StoryChildNodes content = null;\n+\n+  @SerializedName(\"DisplayType\")\n+  private DisplayTypeEnum displayType = null;\n+\n+  @SerializedName(\"Justification\")\n+  private JustificationEnum justification = null;\n+\n+  @SerializedName(\"MathObjectType\")\n+  private MathObjectTypeEnum mathObjectType = null;\n+\n+  public OfficeMathObject content(StoryChildNodes content) {\n+    this.content = content;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets content of footnote.\n     * @return content\n     **/\n-    @ApiModelProperty(value = \"Gets or sets content of footnote.\")\n-    public StoryChildNodes getContent() {\n-        return content;\n-    }\n \n-    public void setContent(StoryChildNodes content) {\n-        this.content = content;\n-    }\n \n-    public OfficeMathObject displayType(DisplayTypeEnum displayType) {\n-        this.displayType = displayType;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets content of footnote.\")\n+  public StoryChildNodes getContent() {\n+    return content;\n+  }\n+\n+  public void setContent(StoryChildNodes content) {\n+    this.content = content;\n+  }\n+\n+  public OfficeMathObject displayType(DisplayTypeEnum displayType) {\n+    this.displayType = displayType;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets /sets Office Math display format type which represents whether an equation is displayed inline with the text\n      * or displayed on its own line.\n     * @return displayType\n     **/\n-    @ApiModelProperty(value = \"Gets or sets /sets Office Math display format type which represents whether an equation is displayed inline with the text or displayed on its own line.\")\n-    public DisplayTypeEnum getDisplayType() {\n-        return displayType;\n-    }\n \n-    public void setDisplayType(DisplayTypeEnum displayType) {\n-        this.displayType = displayType;\n-    }\n \n-    public OfficeMathObject justification(JustificationEnum justification) {\n-        this.justification = justification;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets /sets Office Math display format type which represents whether an equation is displayed inline with the text or displayed on its own line.\")\n+  public DisplayTypeEnum getDisplayType() {\n+    return displayType;\n+  }\n+\n+  public void setDisplayType(DisplayTypeEnum displayType) {\n+    this.displayType = displayType;\n+  }\n+\n+  public OfficeMathObject justification(JustificationEnum justification) {\n+    this.justification = justification;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets /sets Office Math justification.\n     * @return justification\n     **/\n-    @ApiModelProperty(value = \"Gets or sets /sets Office Math justification.\")\n-    public JustificationEnum getJustification() {\n-        return justification;\n-    }\n \n-    public void setJustification(JustificationEnum justification) {\n-        this.justification = justification;\n-    }\n \n-    public OfficeMathObject mathObjectType(MathObjectTypeEnum mathObjectType) {\n-        this.mathObjectType = mathObjectType;\n-        return this;\n-    }\n+  @ApiModelProperty(value = \"Gets or sets /sets Office Math justification.\")\n+  public JustificationEnum getJustification() {\n+    return justification;\n+  }\n+\n+  public void setJustification(JustificationEnum justification) {\n+    this.justification = justification;\n+  }\n+\n+  public OfficeMathObject mathObjectType(MathObjectTypeEnum mathObjectType) {\n+    this.mathObjectType = mathObjectType;\n+    return this;\n+  }\n \n     /**\n      * Gets or sets type Aspose.Words.Math.OfficeMath.MathObjectType of this Office Math object.\n     * @return mathObjectType\n     **/\n-    @ApiModelProperty(value = \"Gets or sets type Aspose.Words.Math.OfficeMath.MathObjectType of this Office Math object.\")\n-    public MathObjectTypeEnum getMathObjectType() {\n-        return mathObjectType;\n-    }\n \n-    public void setMathObjectType(MathObjectTypeEnum mathObjectType) {\n-        this.mathObjectType = mathObjectType;\n+\n+  @ApiModelProperty(value = \"Gets or sets type Aspose.Words.Math.OfficeMath.MathObjectType of this Office Math object.\")\n+  public MathObjectTypeEnum getMathObjectType() {\n+    return mathObjectType;\n+  }\n+\n+  public void setMathObjectType(MathObjectTypeEnum mathObjectType) {\n+    this.mathObjectType = mathObjectType;\n+  }\n+\n+\n+  @Override\n+  public boolean equals(java.lang.Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n     }\n \n-    @Override\n-    public boolean equals(java.lang.Object o) {\n-        if (this == o) {\n-            return true;\n-        }\n-        if (o == null || getClass() != o.getClass()) {\n-            return false;\n-        }\n-    OfficeMathObject officeMathObject = (OfficeMathObject)o;\n-    return\n-        Objects.equals(this.content, officeMathObject.content) &&\n-        Objects.equals(this.displayType, officeMathObject.displayType) &&\n-        Objects.equals(this.justification, officeMathObject.justification) &&\n-        Objects.equals(this.mathObjectType, officeMathObject.mathObjectType) &&\n-        super.equals(o);\n+    OfficeMathObject officeMathObject = (OfficeMathObject) o;\n+    return Objects.equals(this.content, officeMathObject.content) &&\n+    Objects.equals(this.displayType, officeMathObject.displayType) &&\n+    Objects.equals(this.justification, officeMathObject.justification) &&\n+    Objects.equals(this.mathObjectType, officeMathObject.mathObjectType) &&\n+    super.equals(o);\n   }\n \n+\n   @Override\n   public int hashCode() {\n     return Objects.hash(content, displayType, justification, mathObjectType, super.hashCode());\n   }\n \n+\n   @Override\n   public String toString() {\n     StringBuilder sb = new StringBuilder();\n@@ -341,10 +397,12 @@ public class OfficeMathObject extends OfficeMathLink {\n    * Convert the given object to string with each line indented by 4 spaces\n    * (except the first line).\n    */\n+\n   private String toIndentedString(java.lang.Object o) {\n     if (o == null) {\n       return \"null\";\n     }\n     return o.toString().replace(\"\\n\", \"\\n    \");\n   }\n-}\n+\n+}\n\\ No newline at end of file\n",
            "diff_size": 370
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/447/OfficeMathObject.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/447/OfficeMathObject.java\nindex 75d94d0095e..8f187a3185e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/447/OfficeMathObject.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_random/447/OfficeMathObject.java\n@@ -310,7 +310,7 @@ public class OfficeMathObject extends OfficeMathLink {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    OfficeMathObject officeMathObject = (OfficeMathObject)o;\n+    OfficeMathObject officeMathObject = (OfficeMathObject) o;\n     return\n         Objects.equals(this.content, officeMathObject.content) &&\n         Objects.equals(this.displayType, officeMathObject.displayType) &&\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/447/OfficeMathObject.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/447/OfficeMathObject.java\nindex 75d94d0095e..8f187a3185e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/errored/1/447/OfficeMathObject.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/aspose-words-cloud-aspose-words-cloud-java/styler_three_grams/447/OfficeMathObject.java\n@@ -310,7 +310,7 @@ public class OfficeMathObject extends OfficeMathLink {\n         if (o == null || getClass() != o.getClass()) {\n             return false;\n         }\n-    OfficeMathObject officeMathObject = (OfficeMathObject)o;\n+    OfficeMathObject officeMathObject = (OfficeMathObject) o;\n     return\n         Objects.equals(this.content, officeMathObject.content) &&\n         Objects.equals(this.displayType, officeMathObject.displayType) &&\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize"
    ]
}
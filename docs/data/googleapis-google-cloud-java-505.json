{
    "project_name": "googleapis-google-cloud-java",
    "error_id": "505",
    "information": {
        "errors": [
            {
                "line": "89",
                "severity": "warning",
                "message": "Line is longer than 100 characters (found 105).",
                "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
            }
        ]
    },
    "source_code": "    assertEquals(DatasetId.of(\"dataset2\"), datasetInfo.getDatasetId());\n    assertEquals(\"description2\", datasetInfo.getDescription());\n    datasetInfo = datasetInfo.toBuilder().setDatasetId(DATASET_ID).setDescription(\"description\").build();\n    compareDatasets(DATASET_INFO, datasetInfo);\n  }\n",
    "results": [
        {
            "tool": "styler",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/505/DatasetInfoTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/505/DatasetInfoTest.java\nindex 4951a8a065a..f2d81feef86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/505/DatasetInfoTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler/505/DatasetInfoTest.java\n@@ -86,7 +86,8 @@ public class DatasetInfoTest {\n         .build();\n     assertEquals(DatasetId.of(\"dataset2\"), datasetInfo.getDatasetId());\n     assertEquals(\"description2\", datasetInfo.getDescription());\n-    datasetInfo = datasetInfo.toBuilder().setDatasetId(DATASET_ID).setDescription(\"description\").build();\n+    datasetInfo = datasetInfo.toBuilder().setDatasetId(DATASET_ID).setDescription(\"description\"\n+        ).build();\n     compareDatasets(DATASET_INFO, datasetInfo);\n   }\n \n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/505/DatasetInfoTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/505/DatasetInfoTest.java\nindex 4951a8a065a..14828dec75f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/505/DatasetInfoTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/intellij/505/DatasetInfoTest.java\n@@ -86,7 +86,8 @@ public class DatasetInfoTest {\n         .build();\n     assertEquals(DatasetId.of(\"dataset2\"), datasetInfo.getDatasetId());\n     assertEquals(\"description2\", datasetInfo.getDescription());\n-    datasetInfo = datasetInfo.toBuilder().setDatasetId(DATASET_ID).setDescription(\"description\").build();\n+    datasetInfo =\n+        datasetInfo.toBuilder().setDatasetId(DATASET_ID).setDescription(\"description\").build();\n     compareDatasets(DATASET_INFO, datasetInfo);\n   }\n \n",
            "diff_size": 2
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "80",
                    "severity": "warning",
                    "message": "'method def modifier' has incorrect indentation level 0, expected level should be 2.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "89",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/505/DatasetInfoTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/505/DatasetInfoTest.java\nindex 4951a8a065a..59ba5bcfe4e 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/505/DatasetInfoTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/naturalize/505/DatasetInfoTest.java\n@@ -77,7 +77,7 @@ public class DatasetInfoTest {\n       .acl(ACCESS_RULES_COMPLETE)\n       .build();\n \n-  @Test\n+@Test\n   public void testToBuilder() {\n     compareDatasets(DATASET_INFO, DATASET_INFO.toBuilder().build());\n     DatasetInfo datasetInfo = DATASET_INFO.toBuilder()\n@@ -204,4 +204,4 @@ public class DatasetInfoTest {\n     assertEquals(expected.getDefaultTableLifetime(), value.getDefaultTableLifetime());\n     assertEquals(expected.getLastModified(), value.getLastModified());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 2
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "29",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 126).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "30",
                    "severity": "warning",
                    "message": "'Acl' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "31",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 135).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "32",
                    "severity": "warning",
                    "message": "'Acl' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 373).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "45",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 156).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "46",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 366).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "47",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 161).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "52",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 133).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                },
                {
                    "line": "55",
                    "severity": "warning",
                    "message": "Line is longer than 100 characters (found 105).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/505/DatasetInfoTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/505/DatasetInfoTest.java\nindex 4951a8a065a..13588e47cea 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/505/DatasetInfoTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/codebuff/505/DatasetInfoTest.java\n@@ -20,19 +20,16 @@ import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertNull;\n \n import com.google.common.collect.ImmutableList;\n-\n import org.junit.Test;\n-\n import java.util.List;\n \n+\n public class DatasetInfoTest {\n \n-  private static final List<Acl> ACCESS_RULES = ImmutableList.of(\n-      Acl.of(Acl.Group.ofAllAuthenticatedUsers(), Acl.Role.READER),\n-      Acl.of(new Acl.View(TableId.of(\"dataset\", \"table\"))));\n-  private static final List<Acl> ACCESS_RULES_COMPLETE = ImmutableList.of(\n-      Acl.of(Acl.Group.ofAllAuthenticatedUsers(), Acl.Role.READER),\n-      Acl.of(new Acl.View(TableId.of(\"project\", \"dataset\", \"table\"))));\n+  private static final List<Acl> ACCESS_RULES = ImmutableList.of(Acl.of(Acl.Group.ofAllAuthenticatedUsers(), Acl.Role.READER),\n+    Acl.of(new Acl.View(TableId.of(\"dataset\", \"table\"))));\n+  private static final List<Acl> ACCESS_RULES_COMPLETE = ImmutableList.of(Acl.of(Acl.Group.ofAllAuthenticatedUsers(), Acl.Role.READER),\n+    Acl.of(new Acl.View(TableId.of(\"project\", \"dataset\", \"table\"))));\n   private static final Long CREATION_TIME = System.currentTimeMillis();\n   private static final Long DEFAULT_TABLE_EXPIRATION = CREATION_TIME + 100;\n   private static final String DESCRIPTION = \"description\";\n@@ -44,46 +41,15 @@ public class DatasetInfoTest {\n   private static final String SELF_LINK = \"http://bigquery/p/d\";\n   private static final DatasetId DATASET_ID = DatasetId.of(\"dataset\");\n   private static final DatasetId DATASET_ID_COMPLETE = DatasetId.of(\"project\", \"dataset\");\n-  private static final DatasetInfo DATASET_INFO = DatasetInfo.newBuilder(DATASET_ID)\n-      .setAcl(ACCESS_RULES)\n-      .setCreationTime(CREATION_TIME)\n-      .setDefaultTableLifetime(DEFAULT_TABLE_EXPIRATION)\n-      .setDescription(DESCRIPTION)\n-      .setEtag(ETAG)\n-      .setFriendlyName(FRIENDLY_NAME)\n-      .setGeneratedId(GENERATED_ID)\n-      .setLastModified(LAST_MODIFIED)\n-      .setLocation(LOCATION)\n-      .setSelfLink(SELF_LINK)\n-      .build();\n-  private static final DatasetInfo DATASET_INFO_COMPLETE = DATASET_INFO.toBuilder()\n-      .setDatasetId(DATASET_ID_COMPLETE)\n-      .setAcl(ACCESS_RULES_COMPLETE)\n-      .build();\n-  private static final DatasetInfo DEPRECATED_DATASET_INFO = DatasetInfo.builder(DATASET_ID)\n-      .acl(ACCESS_RULES)\n-      .setCreationTime(CREATION_TIME)\n-      .defaultTableLifetime(DEFAULT_TABLE_EXPIRATION)\n-      .description(DESCRIPTION)\n-      .setEtag(ETAG)\n-      .friendlyName(FRIENDLY_NAME)\n-      .setGeneratedId(GENERATED_ID)\n-      .setLastModified(LAST_MODIFIED)\n-      .location(LOCATION)\n-      .setSelfLink(SELF_LINK)\n-      .build();\n-  private static final DatasetInfo DEPRECATED_DATASET_INFO_COMPLETE = DATASET_INFO.toBuilder()\n-      .datasetId(DATASET_ID_COMPLETE)\n-      .acl(ACCESS_RULES_COMPLETE)\n-      .build();\n+  private static final DatasetInfo DATASET_INFO = DatasetInfo.newBuilder(DATASET_ID).setAcl(ACCESS_RULES).setCreationTime(CREATION_TIME).setDefaultTableLifetime(DEFAULT_TABLE_EXPIRATION).setDescription(DESCRIPTION).setEtag(ETAG).setFriendlyName(FRIENDLY_NAME).setGeneratedId(GENERATED_ID).setLastModified(LAST_MODIFIED).setLocation(LOCATION).setSelfLink(SELF_LINK).build();\n+  private static final DatasetInfo DATASET_INFO_COMPLETE = DATASET_INFO.toBuilder().setDatasetId(DATASET_ID_COMPLETE).setAcl(ACCESS_RULES_COMPLETE).build();\n+  private static final DatasetInfo DEPRECATED_DATASET_INFO = DatasetInfo.builder(DATASET_ID).acl(ACCESS_RULES).setCreationTime(CREATION_TIME).defaultTableLifetime(DEFAULT_TABLE_EXPIRATION).description(DESCRIPTION).setEtag(ETAG).friendlyName(FRIENDLY_NAME).setGeneratedId(GENERATED_ID).setLastModified(LAST_MODIFIED).location(LOCATION).setSelfLink(SELF_LINK).build();\n+  private static final DatasetInfo DEPRECATED_DATASET_INFO_COMPLETE = DATASET_INFO.toBuilder().datasetId(DATASET_ID_COMPLETE).acl(ACCESS_RULES_COMPLETE).build();\n \n   @Test\n   public void testToBuilder() {\n     compareDatasets(DATASET_INFO, DATASET_INFO.toBuilder().build());\n-    DatasetInfo datasetInfo = DATASET_INFO.toBuilder()\n-        .setDatasetId(DatasetId.of(\"dataset2\"))\n-        .setDescription(\"description2\")\n-        .build();\n+    DatasetInfo datasetInfo = DATASET_INFO.toBuilder().setDatasetId(DatasetId.of(\"dataset2\")).setDescription(\"description2\").build();\n     assertEquals(DatasetId.of(\"dataset2\"), datasetInfo.getDatasetId());\n     assertEquals(\"description2\", datasetInfo.getDescription());\n     datasetInfo = datasetInfo.toBuilder().setDatasetId(DATASET_ID).setDescription(\"description\").build();\n@@ -204,4 +170,4 @@ public class DatasetInfoTest {\n     assertEquals(expected.getDefaultTableLifetime(), value.getDefaultTableLifetime());\n     assertEquals(expected.getLastModified(), value.getLastModified());\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 46
        },
        {
            "tool": "styler_random",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/505/DatasetInfoTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/505/DatasetInfoTest.java\nindex 4951a8a065a..f2d81feef86 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/505/DatasetInfoTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_random/505/DatasetInfoTest.java\n@@ -86,7 +86,8 @@ public class DatasetInfoTest {\n         .build();\n     assertEquals(DatasetId.of(\"dataset2\"), datasetInfo.getDatasetId());\n     assertEquals(\"description2\", datasetInfo.getDescription());\n-    datasetInfo = datasetInfo.toBuilder().setDatasetId(DATASET_ID).setDescription(\"description\").build();\n+    datasetInfo = datasetInfo.toBuilder().setDatasetId(DATASET_ID).setDescription(\"description\"\n+        ).build();\n     compareDatasets(DATASET_INFO, datasetInfo);\n   }\n \n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/505/DatasetInfoTest.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/505/DatasetInfoTest.java\nindex 4951a8a065a..92b331ea524 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/errored/1/505/DatasetInfoTest.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/googleapis-google-cloud-java/styler_three_grams/505/DatasetInfoTest.java\n@@ -86,7 +86,8 @@ public class DatasetInfoTest {\n         .build();\n     assertEquals(DatasetId.of(\"dataset2\"), datasetInfo.getDatasetId());\n     assertEquals(\"description2\", datasetInfo.getDescription());\n-    datasetInfo = datasetInfo.toBuilder().setDatasetId(DATASET_ID).setDescription(\"description\").build();\n+    datasetInfo = datasetInfo.toBuilder().setDatasetId(DATASET_ID).setDescription(\"description\")\n+    .build();\n     compareDatasets(DATASET_INFO, datasetInfo);\n   }\n \n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "styler",
        "intellij",
        "styler_random",
        "styler_three_grams"
    ],
    "not_repaired_by": [
        "naturalize",
        "codebuff"
    ]
}
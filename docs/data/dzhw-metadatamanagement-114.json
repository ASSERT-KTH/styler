{
    "project_name": "dzhw-metadatamanagement",
    "error_id": "114",
    "information": {
        "errors": [
            {
                "line": "19",
                "column": "22",
                "severity": "error",
                "message": "'}' at column 22 should be alone on a line.",
                "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
            }
        ]
    },
    "source_code": "public class ZipUtil {\n\n  private ZipUtil() {}\n  \n  /**\n   * Reads a file from a zip without unpacking.",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "19",
                    "column": "22",
                    "severity": "error",
                    "message": "'}' at column 22 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/114/ZipUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler/114/ZipUtil.java\nindex b6cbdf14747..910a2090ea9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/114/ZipUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler/114/ZipUtil.java\n@@ -17,7 +17,7 @@ import org.apache.commons.io.IOUtils;\n public class ZipUtil {\n \n   private ZipUtil() {}\n-  \n+\n   /**\n    * Reads a file from a zip without unpacking.\n    * @param pathToFile The path to the file in the zip file.\n",
            "diff_size": 1
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/114/ZipUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/114/ZipUtil.java\nindex b6cbdf14747..4d5cdd59461 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/114/ZipUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/intellij/114/ZipUtil.java\n@@ -10,28 +10,30 @@ import org.apache.commons.io.IOUtils;\n \n /**\n  * This class zip and unzip Zip-Files.\n- * \n- * @author Daniel Katzberg\n  *\n+ * @author Daniel Katzberg\n  */\n public class ZipUtil {\n \n-  private ZipUtil() {}\n-  \n+  private ZipUtil() {\n+  }\n+\n   /**\n    * Reads a file from a zip without unpacking.\n+   *\n    * @param pathToFile The path to the file in the zip file.\n    * @return The content of the file as a String.\n    * @throws IOException Handles IO Exception.\n    */\n   public static String readFileFromZip(Path pathToFile) throws IOException {\n-    return IOUtils.toString(Files.readAllBytes(pathToFile),StandardCharsets.UTF_8.name());\n+    return IOUtils.toString(Files.readAllBytes(pathToFile), StandardCharsets.UTF_8.name());\n   }\n-  \n-  \n+\n+\n   /**\n    * Saves or updates a File within the zip file.\n-   * @param pathToFile The path to the file with will get new content.\n+   *\n+   * @param pathToFile     The path to the file with will get new content.\n    * @param newFileContent The content for the file as a string.\n    * @throws IOException Handles IOExceptions.\n    */\n",
            "diff_size": 12
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "19",
                    "column": "22",
                    "severity": "error",
                    "message": "'}' at column 22 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/114/ZipUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/114/ZipUtil.java\nindex b6cbdf14747..1a7cc571d71 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/114/ZipUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/naturalize/114/ZipUtil.java\n@@ -39,4 +39,4 @@ public class ZipUtil {\n     Files.write(pathToFile, newFileContent.getBytes(StandardCharsets.UTF_8),\n         StandardOpenOption.CREATE);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 1
        },
        {
            "tool": "codebuff",
            "errors": [
                {
                    "line": "42",
                    "severity": "error",
                    "message": "'String' has incorrect indentation level 4, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "44",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "45",
                    "severity": "error",
                    "message": "'newFileContent' has incorrect indentation level 0, expected level should be 8.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                },
                {
                    "line": "46",
                    "severity": "error",
                    "message": "'method call' child has incorrect indentation level 0, expected level should be 6.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/114/ZipUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/114/ZipUtil.java\nindex b6cbdf14747..b8c054ddf32 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/114/ZipUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/codebuff/114/ZipUtil.java\n@@ -5,7 +5,6 @@ import java.nio.charset.StandardCharsets;\n import java.nio.file.Files;\n import java.nio.file.Path;\n import java.nio.file.StandardOpenOption;\n-\n import org.apache.commons.io.IOUtils;\n \n /**\n@@ -14,9 +13,11 @@ import org.apache.commons.io.IOUtils;\n  * @author Daniel Katzberg\n  *\n  */\n-public class ZipUtil {\n \n-  private ZipUtil() {}\n+\n+public class ZipUtil {\n+  private ZipUtil() {\n+  }\n   \n   /**\n    * Reads a file from a zip without unpacking.\n@@ -24,8 +25,9 @@ public class ZipUtil {\n    * @return The content of the file as a String.\n    * @throws IOException Handles IO Exception.\n    */\n+\n   public static String readFileFromZip(Path pathToFile) throws IOException {\n-    return IOUtils.toString(Files.readAllBytes(pathToFile),StandardCharsets.UTF_8.name());\n+    return IOUtils.toString(Files.readAllBytes(pathToFile), StandardCharsets.UTF_8.name());\n   }\n   \n   \n@@ -35,8 +37,12 @@ public class ZipUtil {\n    * @param newFileContent The content for the file as a string.\n    * @throws IOException Handles IOExceptions.\n    */\n-  public static void writeFileToZip(Path pathToFile, String newFileContent) throws IOException {\n-    Files.write(pathToFile, newFileContent.getBytes(StandardCharsets.UTF_8),\n-        StandardOpenOption.CREATE);\n+\n+  public static void writeFileToZip(Path pathToFile,\n+    String newFileContent) throws IOException {\n+    Files.write(\n+pathToFile,\n+newFileContent.getBytes(StandardCharsets.UTF_8),\n+StandardOpenOption.CREATE);\n   }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 16
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "19",
                    "column": "22",
                    "severity": "error",
                    "message": "'}' at column 22 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/114/ZipUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_random/114/ZipUtil.java\nindex b6cbdf14747..910a2090ea9 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/114/ZipUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_random/114/ZipUtil.java\n@@ -17,7 +17,7 @@ import org.apache.commons.io.IOUtils;\n public class ZipUtil {\n \n   private ZipUtil() {}\n-  \n+\n   /**\n    * Reads a file from a zip without unpacking.\n    * @param pathToFile The path to the file in the zip file.\n",
            "diff_size": 1
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "19",
                    "column": "22",
                    "severity": "error",
                    "message": "'}' at column 22 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "26",
                    "severity": "error",
                    "message": "'METHOD_DEF' should be separated from previous statement.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/114/ZipUtil.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/114/ZipUtil.java\nindex b6cbdf14747..3a4f2c4474f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/errored/1/114/ZipUtil.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/dzhw-metadatamanagement/styler_three_grams/114/ZipUtil.java\n@@ -17,7 +17,6 @@ import org.apache.commons.io.IOUtils;\n public class ZipUtil {\n \n   private ZipUtil() {}\n-  \n   /**\n    * Reads a file from a zip without unpacking.\n    * @param pathToFile The path to the file in the zip file.\n",
            "diff_size": 1
        }
    ],
    "repaired_by": [
        "intellij"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
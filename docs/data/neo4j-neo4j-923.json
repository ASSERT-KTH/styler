{
    "project_name": "neo4j-neo4j",
    "error_id": "923",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "79",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "111",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "132",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "139",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "142",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "146",
                    "column": "17",
                    "severity": "error",
                    "message": "'}' at column 17 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "148",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "154",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "164",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "166",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "171",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "171",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "175",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "180",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "98",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "196",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "201",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "148",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "204",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "207",
                    "column": "143",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "61",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "220",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "226",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "230",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "232",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "234",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "246",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "258",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "268",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "275",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "279",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "282",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "290",
                    "column": "75",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "300",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "311",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/923/IndexSamplingController.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/923/IndexSamplingController.java\nindex dfff5656286..2853070939a 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/923/IndexSamplingController.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/923/IndexSamplingController.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.api.index.sampling;\n \n import org.eclipse.collections.api.LongIterable;\n@@ -75,16 +76,16 @@ public class IndexSamplingController\n     private JobHandle backgroundSamplingHandle;\n \n     // use IndexSamplingControllerFactory.create do not instantiate directly\n-    IndexSamplingController( IndexSamplingConfig samplingConfig,\n-                             IndexSamplingJobFactory jobFactory,\n-                             LongPredicate samplingUpdatePredicate,\n-                             IndexSamplingJobTracker jobTracker,\n-                             IndexMapSnapshotProvider indexMapSnapshotProvider,\n-                             JobScheduler scheduler,\n-                             RecoveryCondition indexRecoveryCondition,\n-                             LogProvider logProvider,\n-                             Config config,\n-                             String databaseName )\n+    IndexSamplingController(IndexSamplingConfig samplingConfig,\n+                            IndexSamplingJobFactory jobFactory,\n+                            LongPredicate samplingUpdatePredicate,\n+                            IndexSamplingJobTracker jobTracker,\n+                            IndexMapSnapshotProvider indexMapSnapshotProvider,\n+                            JobScheduler scheduler,\n+                            RecoveryCondition indexRecoveryCondition,\n+                            LogProvider logProvider,\n+                            Config config,\n+                            String databaseName)\n     {\n         this.backgroundSampling = samplingConfig.backgroundSampling();\n         this.jobFactory = jobFactory;\n@@ -93,26 +94,26 @@ public class IndexSamplingController\n         this.jobTracker = jobTracker;\n         this.scheduler = scheduler;\n         this.indexRecoveryCondition = indexRecoveryCondition;\n-        this.log = logProvider.getLog( getClass() );\n-        this.logRecoverIndexSamples = config.get( GraphDatabaseInternalSettings.log_recover_index_samples );\n-        this.asyncRecoverIndexSamples = config.get( GraphDatabaseInternalSettings.async_recover_index_samples );\n-        this.asyncRecoverIndexSamplesWait = config.get( GraphDatabaseInternalSettings.async_recover_index_samples_wait );\n+        this.log = logProvider.getLog(getClass());\n+        this.logRecoverIndexSamples = config.get(GraphDatabaseInternalSettings.log_recover_index_samples);\n+        this.asyncRecoverIndexSamples = config.get(GraphDatabaseInternalSettings.async_recover_index_samples);\n+        this.asyncRecoverIndexSamplesWait = config.get(GraphDatabaseInternalSettings.async_recover_index_samples_wait);\n         this.databaseName = databaseName;\n     }\n \n-    public void sampleIndexes( IndexSamplingMode mode )\n+    public void sampleIndexes(IndexSamplingMode mode)\n     {\n         IndexMap indexMap = indexMapSnapshotProvider.indexMapSnapshot();\n-        LongIterable indexesToSample = indexesToSample( mode, indexMap );\n-        scheduleSampling( indexesToSample, mode, indexMap );\n+        LongIterable indexesToSample = indexesToSample(mode, indexMap);\n+        scheduleSampling(indexesToSample, mode, indexMap);\n     }\n \n-    public void sampleIndex( long indexId, IndexSamplingMode mode )\n+    public void sampleIndex(long indexId, IndexSamplingMode mode)\n     {\n         IndexMap indexMap = indexMapSnapshotProvider.indexMapSnapshot();\n-        if ( shouldSampleIndex( mode, indexId ) )\n+        if (shouldSampleIndex(mode, indexId))\n         {\n-            scheduleSampling( LongLists.immutable.of( indexId ), mode, indexMap );\n+            scheduleSampling(LongLists.immutable.of(indexId), mode, indexMap);\n         }\n     }\n \n@@ -124,178 +125,171 @@ public class IndexSamplingController\n             IndexMap indexMap = indexMapSnapshotProvider.indexMapSnapshot();\n             final LongIterator indexIds = indexMap.indexIds();\n             List<IndexSamplingJobHandle> asyncSamplingJobs = Lists.mutable.of();\n-            while ( indexIds.hasNext() )\n+            while (indexIds.hasNext())\n             {\n                 long indexId = indexIds.next();\n-                IndexDescriptor descriptor = indexMap.getIndexProxy( indexId ).getDescriptor();\n-                if ( indexRecoveryCondition.test( descriptor ) )\n+                IndexDescriptor descriptor = indexMap.getIndexProxy(indexId).getDescriptor();\n+                if (indexRecoveryCondition.test(descriptor))\n                 {\n-                    if ( logRecoverIndexSamples )\n+                    if (logRecoverIndexSamples)\n                     {\n-                        log.info( \"Index requires sampling, id=%d, name=%s.\", indexId, descriptor.getName() );\n+                        log.info(\"Index requires sampling, id=%d, name=%s.\", indexId, descriptor.getName());\n                     }\n \n-                    if ( asyncRecoverIndexSamples )\n+                    if (asyncRecoverIndexSamples)\n                     {\n-                        asyncSamplingJobs.add( sampleIndexOnTracker( indexMap, indexId ) );\n-                    }\n-                    else\n+                        asyncSamplingJobs.add(sampleIndexOnTracker(indexMap, indexId));\n+                    } else\n                     {\n-                        sampleIndexOnCurrentThread( indexMap, indexId );\n+                        sampleIndexOnCurrentThread(indexMap, indexId);\n                     }\n-                }\n-                else\n+                } else\n                 {\n-                    if ( logRecoverIndexSamples )\n+                    if (logRecoverIndexSamples)\n                     {\n-                        log.info( \"Index does not require sampling, id=%d, name=%s.\", indexId, descriptor.getName() );\n+                        log.info(\"Index does not require sampling, id=%d, name=%s.\", indexId, descriptor.getName());\n                     }\n                 }\n             }\n-            if ( asyncRecoverIndexSamplesWait )\n+            if (asyncRecoverIndexSamplesWait)\n             {\n-                waitForAsyncIndexSamples( asyncSamplingJobs );\n+                waitForAsyncIndexSamples(asyncSamplingJobs);\n             }\n-        }\n-        finally\n+        } finally\n         {\n             samplingLock.unlock();\n         }\n     }\n \n-    private static void waitForAsyncIndexSamples( List<IndexSamplingJobHandle> asyncSamplingJobs )\n+    private static void waitForAsyncIndexSamples(List<IndexSamplingJobHandle> asyncSamplingJobs)\n     {\n-        for ( IndexSamplingJobHandle asyncSamplingJob : asyncSamplingJobs )\n+        for (IndexSamplingJobHandle asyncSamplingJob : asyncSamplingJobs)\n         {\n             try\n             {\n                 asyncSamplingJob.waitTermination();\n-            }\n-            catch ( InterruptedException | ExecutionException | CancellationException e )\n+            } catch (InterruptedException | ExecutionException | CancellationException e)\n             {\n                 String indexName = asyncSamplingJob.descriptor.getName();\n                 throw new RuntimeException(\n-                        \"Failed to asynchronously sample index during recovery, index '\" + indexName + \"'.\", e );\n+                  \"Failed to asynchronously sample index during recovery, index '\" + indexName + \"'.\", e);\n             }\n         }\n     }\n \n-    private void scheduleSampling( LongIterable indexesToSample, IndexSamplingMode mode, IndexMap indexMap )\n+    private void scheduleSampling(LongIterable indexesToSample, IndexSamplingMode mode, IndexMap indexMap)\n     {\n-        List<IndexSamplingJobHandle> allJobs = scheduleAllSampling( indexesToSample, indexMap );\n+        List<IndexSamplingJobHandle> allJobs = scheduleAllSampling(indexesToSample, indexMap);\n \n         long millisToWait = mode.millisToWaitForCompletion();\n-        if ( millisToWait != IndexSamplingMode.NO_WAIT )\n+        if (millisToWait != IndexSamplingMode.NO_WAIT)\n         {\n-            waitForAsyncIndexSamples( allJobs, millisToWait );\n+            waitForAsyncIndexSamples(allJobs, millisToWait);\n         }\n     }\n \n-    private void waitForAsyncIndexSamples( List<IndexSamplingJobHandle> allJobs, long millisToWait )\n+    private void waitForAsyncIndexSamples(List<IndexSamplingJobHandle> allJobs, long millisToWait)\n     {\n         long start = System.nanoTime();\n-        long deadline = start + MILLISECONDS.toNanos( millisToWait );\n+        long deadline = start + MILLISECONDS.toNanos(millisToWait);\n \n-        for ( IndexSamplingJobHandle job : allJobs )\n+        for (IndexSamplingJobHandle job : allJobs)\n         {\n             try\n             {\n-                job.waitTermination( deadline - System.nanoTime(), TimeUnit.NANOSECONDS );\n-            }\n-            catch ( TimeoutException e )\n+                job.waitTermination(deadline - System.nanoTime(), TimeUnit.NANOSECONDS);\n+            } catch (TimeoutException e)\n             {\n-                throw new RuntimeException( format( \"Could not finish index sampling within the given time limit, %d milliseconds.\", millisToWait ), e );\n-            }\n-            catch ( InterruptedException | ExecutionException e )\n+                throw new RuntimeException(format(\"Could not finish index sampling within the given time limit, %d milliseconds.\", millisToWait), e);\n+            } catch (InterruptedException | ExecutionException e)\n             {\n                 IndexDescriptor index = job.descriptor;\n-                throw new RuntimeException( String.format( \"Index sampling of index '%s' failed, cause: %s\", index.getName(), e.getMessage() ), e );\n+                throw new RuntimeException(String.format(\"Index sampling of index '%s' failed, cause: %s\", index.getName(), e.getMessage()), e);\n             }\n         }\n     }\n \n-    private List<IndexSamplingJobHandle> scheduleAllSampling( LongIterable indexesToSample, IndexMap indexMap )\n+    private List<IndexSamplingJobHandle> scheduleAllSampling(LongIterable indexesToSample, IndexMap indexMap)\n     {\n         samplingLock.lock();\n         try\n         {\n             MutableList<IndexSamplingJobHandle> allJobs = Lists.mutable.of();\n-            indexesToSample.forEach( l -> allJobs.add( sampleIndexOnTracker( indexMap, l ) ) );\n+            indexesToSample.forEach(l -> allJobs.add(sampleIndexOnTracker(indexMap, l)));\n             return allJobs;\n-        }\n-        finally\n+        } finally\n         {\n             samplingLock.unlock();\n         }\n     }\n \n-    private IndexSamplingJobHandle sampleIndexOnTracker( IndexMap indexMap, long indexId )\n+    private IndexSamplingJobHandle sampleIndexOnTracker(IndexMap indexMap, long indexId)\n     {\n-        IndexSamplingJob job = createSamplingJob( indexMap, indexId );\n-        IndexDescriptor descriptor = indexMap.getIndexProxy( indexId ).getDescriptor();\n-        if ( job != null )\n+        IndexSamplingJob job = createSamplingJob(indexMap, indexId);\n+        IndexDescriptor descriptor = indexMap.getIndexProxy(indexId).getDescriptor();\n+        if (job != null)\n         {\n-            return new IndexSamplingJobHandle( jobTracker.scheduleSamplingJob( job ), descriptor );\n+            return new IndexSamplingJobHandle(jobTracker.scheduleSamplingJob(job), descriptor);\n         }\n-        return new IndexSamplingJobHandle( JobHandle.EMPTY, descriptor );\n+        return new IndexSamplingJobHandle(JobHandle.EMPTY, descriptor);\n     }\n \n-    private void sampleIndexOnCurrentThread( IndexMap indexMap, long indexId )\n+    private void sampleIndexOnCurrentThread(IndexMap indexMap, long indexId)\n     {\n-        IndexSamplingJob job = createSamplingJob( indexMap, indexId );\n-        if ( job != null )\n+        IndexSamplingJob job = createSamplingJob(indexMap, indexId);\n+        if (job != null)\n         {\n             job.run();\n         }\n     }\n \n-    private IndexSamplingJob createSamplingJob( IndexMap indexMap, long indexId )\n+    private IndexSamplingJob createSamplingJob(IndexMap indexMap, long indexId)\n     {\n-        IndexProxy proxy = indexMap.getIndexProxy( indexId );\n-        if ( proxy == null || proxy.getState() != InternalIndexState.ONLINE )\n+        IndexProxy proxy = indexMap.getIndexProxy(indexId);\n+        if (proxy == null || proxy.getState() != InternalIndexState.ONLINE)\n         {\n             return null;\n         }\n-        return jobFactory.create( indexId, proxy );\n+        return jobFactory.create(indexId, proxy);\n     }\n \n     public void start()\n     {\n-        if ( backgroundSampling )\n+        if (backgroundSampling)\n         {\n-            Runnable samplingRunner = () -> sampleIndexes( backgroundRebuildUpdated() );\n-            var monitoringParams = JobMonitoringParams.systemJob( databaseName, \"Background rebuilding of updated indexes\" );\n-            backgroundSamplingHandle = scheduler.scheduleRecurring( Group.INDEX_SAMPLING, monitoringParams, samplingRunner, 10, SECONDS );\n+            Runnable samplingRunner = () -> sampleIndexes(backgroundRebuildUpdated());\n+            var monitoringParams = JobMonitoringParams.systemJob(databaseName, \"Background rebuilding of updated indexes\");\n+            backgroundSamplingHandle = scheduler.scheduleRecurring(Group.INDEX_SAMPLING, monitoringParams, samplingRunner, 10, SECONDS);\n         }\n     }\n \n     public void stop()\n     {\n-        if ( backgroundSamplingHandle != null )\n+        if (backgroundSamplingHandle != null)\n         {\n             backgroundSamplingHandle.cancel();\n         }\n         jobTracker.stopAndAwaitAllJobs();\n     }\n \n-    private LongList indexesToSample( IndexSamplingMode mode, IndexMap indexMap )\n+    private LongList indexesToSample(IndexSamplingMode mode, IndexMap indexMap)\n     {\n         MutableLongList indexesToSample = LongLists.mutable.of();\n         LongIterator allIndexes = indexMap.indexIds();\n-        while ( allIndexes.hasNext() )\n+        while (allIndexes.hasNext())\n         {\n             long indexId = allIndexes.next();\n-            if ( shouldSampleIndex( mode, indexId ) )\n+            if (shouldSampleIndex(mode, indexId))\n             {\n-                indexesToSample.add( indexId );\n+                indexesToSample.add(indexId);\n             }\n         }\n         return indexesToSample;\n     }\n \n-    private boolean shouldSampleIndex( IndexSamplingMode mode, long indexId )\n+    private boolean shouldSampleIndex(IndexSamplingMode mode, long indexId)\n     {\n-        return !mode.sampleOnlyIfUpdated() || samplingUpdatePredicate.test( indexId );\n+        return !mode.sampleOnlyIfUpdated() || samplingUpdatePredicate.test(indexId);\n     }\n \n     private static class IndexSamplingJobHandle\n@@ -303,7 +297,7 @@ public class IndexSamplingController\n         private final JobHandle jobHandle;\n         private final IndexDescriptor descriptor;\n \n-        IndexSamplingJobHandle( JobHandle jobHandle, IndexDescriptor descriptor )\n+        IndexSamplingJobHandle(JobHandle jobHandle, IndexDescriptor descriptor)\n         {\n             this.jobHandle = jobHandle;\n             this.descriptor = descriptor;\n@@ -314,9 +308,9 @@ public class IndexSamplingController\n             this.jobHandle.waitTermination();\n         }\n \n-        public void waitTermination( long timeout, TimeUnit unit ) throws InterruptedException, ExecutionException, TimeoutException\n+        public void waitTermination(long timeout, TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException\n         {\n-            this.jobHandle.waitTermination( timeout, unit );\n+            this.jobHandle.waitTermination(timeout, unit);\n         }\n     }\n }\n",
            "diff_size": 89
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
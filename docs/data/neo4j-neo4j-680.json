{
    "project_name": "neo4j-neo4j",
    "error_id": "680",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "126",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "129",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "149",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "162",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "162",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "164",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "169",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "177",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "186",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "188",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "189",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "189",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "47",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "191",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "192",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "192",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "51",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "194",
                    "column": "69",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "199",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "201",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "203",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "204",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "208",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "210",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "62",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "211",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "217",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "223",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "228",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "237",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "239",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "240",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "247",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "249",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "251",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "257",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "259",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "310",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "312",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "314",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "319",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "323",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "330",
                    "column": "64",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "337",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "350",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "360",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "375",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "381",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "382",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "398",
                    "column": "112",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "412",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "421",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "441",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "444",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "461",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "461",
                    "column": "101",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "463",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "465",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "470",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "474",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "481",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "493",
                    "column": "60",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "493",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "511",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "511",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "515",
                    "column": "21",
                    "severity": "error",
                    "message": "'}' at column 21 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "538",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "538",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "541",
                    "column": "24",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "546",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "546",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "555",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "555",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "558",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "567",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "567",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "570",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "579",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "579",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "586",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "588",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "588",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "590",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "590",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "39",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "595",
                    "column": "72",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "599",
                    "column": "23",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "601",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "601",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "607",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "611",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "611",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "611",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "618",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "618",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "625",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "625",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "631",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "631",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "662",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "662",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "675",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "675",
                    "column": "55",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "681",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "681",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "683",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "683",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "687",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "687",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "689",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "689",
                    "column": "79",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "693",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "693",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "695",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "699",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "699",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "705",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "705",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "707",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "707",
                    "column": "106",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "714",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "714",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "717",
                    "column": "59",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "717",
                    "column": "120",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "721",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "721",
                    "column": "89",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "727",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "727",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "736",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "736",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "737",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "737",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "737",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "746",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "746",
                    "column": "134",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "750",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "750",
                    "column": "88",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "756",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "756",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "765",
                    "column": "64",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "765",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "766",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "766",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "766",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "778",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "780",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "780",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "782",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "782",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "785",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "785",
                    "column": "71",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "795",
                    "column": "74",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "795",
                    "column": "109",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "805",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "810",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "813",
                    "column": "89",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "813",
                    "column": "124",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "823",
                    "column": "52",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "828",
                    "column": "18",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "832",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "836",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "836",
                    "column": "45",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "844",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "844",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "851",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "851",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "852",
                    "column": "13",
                    "severity": "error",
                    "message": "'}' at column 13 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "852",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "852",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "860",
                    "column": "57",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "860",
                    "column": "102",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "863",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "863",
                    "column": "57",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "866",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "866",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "868",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "868",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "878",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "878",
                    "column": "73",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "883",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "883",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "890",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "890",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "893",
                    "column": "68",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "893",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "898",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "898",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "905",
                    "column": "56",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "905",
                    "column": "92",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "908",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "908",
                    "column": "115",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "912",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "912",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "915",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "915",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "928",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "928",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "932",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "932",
                    "column": "114",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "943",
                    "column": "53",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "943",
                    "column": "118",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "946",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "946",
                    "column": "34",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "949",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "949",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "957",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "957",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "960",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "960",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "963",
                    "column": "16",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "963",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "967",
                    "column": "56",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "973",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "973",
                    "column": "99",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "975",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "975",
                    "column": "50",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "984",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "984",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "987",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "987",
                    "column": "48",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "994",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "994",
                    "column": "76",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "997",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "997",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1005",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1005",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1011",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1011",
                    "column": "60",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1020",
                    "column": "21",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1020",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1023",
                    "column": "41",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1023",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1028",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1028",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1033",
                    "column": "46",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "1033",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/680/TransactionImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/680/TransactionImpl.java\nindex c9e7ff43921..ea316fb72b4 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/680/TransactionImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/680/TransactionImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.coreapi;\n \n import java.util.ArrayList;\n@@ -122,10 +123,10 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n     private boolean closed;\n     private List<TransactionClosedCallback> closeCallbacks;\n \n-    public TransactionImpl( TokenHolders tokenHolders, TransactionalContextFactory contextFactory,\n-            DatabaseAvailabilityGuard availabilityGuard, QueryExecutionEngine executionEngine,\n-            KernelTransaction transaction, Consumer<Status> terminationCallback,\n-            TransactionExceptionMapper exceptionMapper )\n+    public TransactionImpl(TokenHolders tokenHolders, TransactionalContextFactory contextFactory,\n+                           DatabaseAvailabilityGuard availabilityGuard, QueryExecutionEngine executionEngine,\n+                           KernelTransaction transaction, Consumer<Status> terminationCallback,\n+                           TransactionExceptionMapper exceptionMapper)\n     {\n         this.tokenHolders = tokenHolders;\n         this.contextFactory = contextFactory;\n@@ -133,21 +134,21 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n         this.executionEngine = executionEngine;\n         this.terminationCallback = terminationCallback;\n         this.exceptionMapper = exceptionMapper;\n-        setTransaction( transaction );\n+        setTransaction(transaction);\n     }\n \n     @Override\n     public void commit()\n     {\n-        safeTerminalOperation( KernelTransaction::commit );\n+        safeTerminalOperation(KernelTransaction::commit);\n     }\n \n     @Override\n     public void rollback()\n     {\n-        if ( isOpen() )\n+        if (isOpen())\n         {\n-            safeTerminalOperation( KernelTransaction::rollback );\n+            safeTerminalOperation(KernelTransaction::rollback);\n         }\n     }\n \n@@ -157,16 +158,15 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n         var ktx = kernelTransaction();\n         try\n         {\n-            return newNodeEntity( ktx.dataWrite().nodeCreate() );\n-        }\n-        catch ( InvalidTransactionTypeKernelException e )\n+            return newNodeEntity(ktx.dataWrite().nodeCreate());\n+        } catch (InvalidTransactionTypeKernelException e)\n         {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n+            throw new ConstraintViolationException(e.getMessage(), e);\n         }\n     }\n \n     @Override\n-    public Node createNode( Label... labels )\n+    public Node createNode(Label... labels)\n     {\n         var ktx = kernelTransaction();\n         try\n@@ -174,97 +174,92 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n             TokenWrite tokenWrite = ktx.tokenWrite();\n             int[] labelIds = new int[labels.length];\n             String[] labelNames = new String[labels.length];\n-            for ( int i = 0; i < labelNames.length; i++ )\n+            for (int i = 0; i < labelNames.length; i++)\n             {\n                 labelNames[i] = labels[i].name();\n             }\n-            tokenWrite.labelGetOrCreateForNames( labelNames, labelIds );\n+            tokenWrite.labelGetOrCreateForNames(labelNames, labelIds);\n \n             Write write = ktx.dataWrite();\n-            long nodeId = write.nodeCreateWithLabels( labelIds );\n-            return newNodeEntity( nodeId );\n-        }\n-        catch ( ConstraintValidationException e )\n+            long nodeId = write.nodeCreateWithLabels(labelIds);\n+            return newNodeEntity(nodeId);\n+        } catch (ConstraintValidationException e)\n         {\n-            throw new ConstraintViolationException( \"Unable to add label.\", e );\n-        }\n-        catch ( SchemaKernelException e )\n+            throw new ConstraintViolationException(\"Unable to add label.\", e);\n+        } catch (SchemaKernelException e)\n         {\n-            throw new IllegalArgumentException( e );\n-        }\n-        catch ( KernelException e )\n+            throw new IllegalArgumentException(e);\n+        } catch (KernelException e)\n         {\n-            throw new ConstraintViolationException( e.getMessage(), e );\n+            throw new ConstraintViolationException(e.getMessage(), e);\n         }\n     }\n \n     @Override\n-    public Node getNodeById( long id )\n+    public Node getNodeById(long id)\n     {\n-        if ( id < 0 )\n+        if (id < 0)\n         {\n-            throw new NotFoundException( format( \"Node %d not found\", id ),\n-                    new EntityNotFoundException( EntityType.NODE, id ) );\n+            throw new NotFoundException(format(\"Node %d not found\", id),\n+              new EntityNotFoundException(EntityType.NODE, id));\n         }\n \n         KernelTransaction ktx = kernelTransaction();\n-        if ( !ktx.dataRead().nodeExists( id ) )\n+        if (!ktx.dataRead().nodeExists(id))\n         {\n-            throw new NotFoundException( format( \"Node %d not found\", id ),\n-                    new EntityNotFoundException( EntityType.NODE, id ) );\n+            throw new NotFoundException(format(\"Node %d not found\", id),\n+              new EntityNotFoundException(EntityType.NODE, id));\n         }\n-        return newNodeEntity( id );\n+        return newNodeEntity(id);\n     }\n \n     @Override\n-    public Result execute( String query ) throws QueryExecutionException\n+    public Result execute(String query) throws QueryExecutionException\n     {\n-        return execute( query, emptyMap() );\n+        return execute(query, emptyMap());\n     }\n \n     @Override\n-    public Result execute( String query, Map<String,Object> parameters ) throws QueryExecutionException\n+    public Result execute(String query, Map<String, Object> parameters) throws QueryExecutionException\n     {\n-        return execute( this, query, ValueUtils.asParameterMapValue( parameters ) );\n+        return execute(this, query, ValueUtils.asParameterMapValue(parameters));\n     }\n \n-    private Result execute( InternalTransaction transaction, String query, MapValue parameters )\n-            throws QueryExecutionException\n+    private Result execute(InternalTransaction transaction, String query, MapValue parameters)\n+      throws QueryExecutionException\n     {\n         checkInTransaction();\n-        TransactionalContext context = contextFactory.newContext( transaction, query, parameters );\n+        TransactionalContext context = contextFactory.newContext(transaction, query, parameters);\n         try\n         {\n             availabilityGuard.assertDatabaseAvailable();\n-            return executionEngine.executeQuery( query, parameters, context, false );\n-        }\n-        catch ( UnavailableException ue )\n+            return executionEngine.executeQuery(query, parameters, context, false);\n+        } catch (UnavailableException ue)\n         {\n-            throw new org.neo4j.graphdb.TransactionFailureException( ue.getMessage(), ue );\n-        }\n-        catch ( QueryExecutionKernelException e )\n+            throw new org.neo4j.graphdb.TransactionFailureException(ue.getMessage(), ue);\n+        } catch (QueryExecutionKernelException e)\n         {\n             throw e.asUserException();\n         }\n     }\n \n     @Override\n-    public Relationship getRelationshipById( long id )\n+    public Relationship getRelationshipById(long id)\n     {\n-        if ( id < 0 )\n+        if (id < 0)\n         {\n-            throw new NotFoundException( format( \"Relationship %d not found\", id ),\n-                    new EntityNotFoundException( EntityType.RELATIONSHIP, id ) );\n+            throw new NotFoundException(format(\"Relationship %d not found\", id),\n+              new EntityNotFoundException(EntityType.RELATIONSHIP, id));\n         }\n \n         KernelTransaction ktx = kernelTransaction();\n \n-        if ( !ktx.dataRead().relationshipExists( id ) )\n+        if (!ktx.dataRead().relationshipExists(id))\n         {\n-            throw new NotFoundException( format( \"Relationship %d not found\", id ),\n-                    new EntityNotFoundException( EntityType.RELATIONSHIP, id ) );\n+            throw new NotFoundException(format(\"Relationship %d not found\", id),\n+              new EntityNotFoundException(EntityType.RELATIONSHIP, id));\n         }\n-        return newRelationshipEntity( id );\n+        return newRelationshipEntity(id);\n     }\n \n     @Override\n@@ -284,150 +279,150 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n     @Override\n     public Iterable<Label> getAllLabelsInUse()\n     {\n-        return allInUse( TokenAccess.LABELS );\n+        return allInUse(TokenAccess.LABELS);\n     }\n \n     @Override\n     public Iterable<RelationshipType> getAllRelationshipTypesInUse()\n     {\n-        return allInUse( TokenAccess.RELATIONSHIP_TYPES );\n+        return allInUse(TokenAccess.RELATIONSHIP_TYPES);\n     }\n \n     @Override\n     public Iterable<Label> getAllLabels()\n     {\n-        return all( TokenAccess.LABELS );\n+        return all(TokenAccess.LABELS);\n     }\n \n     @Override\n     public Iterable<RelationshipType> getAllRelationshipTypes()\n     {\n-        return all( TokenAccess.RELATIONSHIP_TYPES );\n+        return all(TokenAccess.RELATIONSHIP_TYPES);\n     }\n \n     @Override\n     public Iterable<String> getAllPropertyKeys()\n     {\n-        return all( TokenAccess.PROPERTY_KEYS );\n+        return all(TokenAccess.PROPERTY_KEYS);\n     }\n \n     @Override\n-    public Node findNode( final Label myLabel, final String key, final Object value )\n+    public Node findNode(final Label myLabel, final String key, final Object value)\n     {\n-        try ( ResourceIterator<Node> iterator = findNodes( myLabel, key, value ) )\n+        try (ResourceIterator<Node> iterator = findNodes(myLabel, key, value))\n         {\n-            if ( !iterator.hasNext() )\n+            if (!iterator.hasNext())\n             {\n                 return null;\n             }\n             Node node = iterator.next();\n-            if ( iterator.hasNext() )\n+            if (iterator.hasNext())\n             {\n                 throw new MultipleFoundException(\n-                        format( \"Found multiple nodes with label: '%s', property name: '%s' and property \" +\n-                                \"value: '%s' while only one was expected.\", myLabel, key, value ) );\n+                  format(\"Found multiple nodes with label: '%s', property name: '%s' and property \" +\n+                    \"value: '%s' while only one was expected.\", myLabel, key, value));\n             }\n             return node;\n         }\n     }\n \n     @Override\n-    public ResourceIterator<Node> findNodes( final Label myLabel )\n+    public ResourceIterator<Node> findNodes(final Label myLabel)\n     {\n-        checkLabel( myLabel );\n-        return allNodesWithLabel( myLabel );\n+        checkLabel(myLabel);\n+        return allNodesWithLabel(myLabel);\n     }\n \n     @Override\n-    public ResourceIterator<Node> findNodes( final Label myLabel, final String key, final Object value )\n+    public ResourceIterator<Node> findNodes(final Label myLabel, final String key, final Object value)\n     {\n-        checkLabel( myLabel );\n-        checkPropertyKey( key );\n+        checkLabel(myLabel);\n+        checkPropertyKey(key);\n         KernelTransaction transaction = kernelTransaction();\n         TokenRead tokenRead = transaction.tokenRead();\n-        int labelId = tokenRead.nodeLabel( myLabel.name() );\n-        int propertyId = tokenRead.propertyKey( key );\n-        return nodesByLabelAndProperty( transaction, labelId, IndexQuery.exact( propertyId, Values.of( value, false ) ) );\n+        int labelId = tokenRead.nodeLabel(myLabel.name());\n+        int propertyId = tokenRead.propertyKey(key);\n+        return nodesByLabelAndProperty(transaction, labelId, IndexQuery.exact(propertyId, Values.of(value, false)));\n     }\n \n     @Override\n     public ResourceIterator<Node> findNodes(\n-            final Label myLabel, final String key, final String value, final StringSearchMode searchMode )\n+      final Label myLabel, final String key, final String value, final StringSearchMode searchMode)\n     {\n-        checkLabel( myLabel );\n-        checkPropertyKey( key );\n-        checkArgument( value != null, \"Template must not be null\" );\n+        checkLabel(myLabel);\n+        checkPropertyKey(key);\n+        checkArgument(value != null, \"Template must not be null\");\n         KernelTransaction transaction = kernelTransaction();\n         TokenRead tokenRead = transaction.tokenRead();\n-        int labelId = tokenRead.nodeLabel( myLabel.name() );\n-        int propertyId = tokenRead.propertyKey( key );\n+        int labelId = tokenRead.nodeLabel(myLabel.name());\n+        int propertyId = tokenRead.propertyKey(key);\n         IndexQuery query;\n-        switch ( searchMode )\n+        switch (searchMode)\n         {\n-        case EXACT:\n-            query = IndexQuery.exact( propertyId, utf8Value( value.getBytes( UTF_8 ) ) );\n-            break;\n-        case PREFIX:\n-            query = IndexQuery.stringPrefix( propertyId, utf8Value( value.getBytes( UTF_8 ) ) );\n-            break;\n-        case SUFFIX:\n-            query = IndexQuery.stringSuffix( propertyId, utf8Value( value.getBytes( UTF_8 ) ) );\n-            break;\n-        case CONTAINS:\n-            query = IndexQuery.stringContains( propertyId, utf8Value( value.getBytes( UTF_8 ) ) );\n-            break;\n-        default:\n-            throw new IllegalStateException( \"Unknown string search mode: \" + searchMode );\n+            case EXACT:\n+                query = IndexQuery.exact(propertyId, utf8Value(value.getBytes(UTF_8)));\n+                break;\n+            case PREFIX:\n+                query = IndexQuery.stringPrefix(propertyId, utf8Value(value.getBytes(UTF_8)));\n+                break;\n+            case SUFFIX:\n+                query = IndexQuery.stringSuffix(propertyId, utf8Value(value.getBytes(UTF_8)));\n+                break;\n+            case CONTAINS:\n+                query = IndexQuery.stringContains(propertyId, utf8Value(value.getBytes(UTF_8)));\n+                break;\n+            default:\n+                throw new IllegalStateException(\"Unknown string search mode: \" + searchMode);\n         }\n-        return nodesByLabelAndProperty( transaction, labelId, query );\n+        return nodesByLabelAndProperty(transaction, labelId, query);\n     }\n \n     @Override\n-    public ResourceIterator<Node> findNodes( Label label, String key1, Object value1, String key2, Object value2,\n-            String key3, Object value3 )\n+    public ResourceIterator<Node> findNodes(Label label, String key1, Object value1, String key2, Object value2,\n+                                            String key3, Object value3)\n     {\n-        checkLabel( label );\n-        checkPropertyKey( key1 );\n-        checkPropertyKey( key2 );\n-        checkPropertyKey( key3 );\n+        checkLabel(label);\n+        checkPropertyKey(key1);\n+        checkPropertyKey(key2);\n+        checkPropertyKey(key3);\n         KernelTransaction transaction = kernelTransaction();\n         TokenRead tokenRead = transaction.tokenRead();\n-        int labelId = tokenRead.nodeLabel( label.name() );\n-        return nodesByLabelAndProperties( transaction, labelId,\n-                                          IndexQuery.exact( tokenRead.propertyKey( key1 ), Values.of( value1, false ) ),\n-                                          IndexQuery.exact( tokenRead.propertyKey( key2 ), Values.of( value2, false ) ),\n-                                          IndexQuery.exact( tokenRead.propertyKey( key3 ), Values.of( value3, false ) ) );\n+        int labelId = tokenRead.nodeLabel(label.name());\n+        return nodesByLabelAndProperties(transaction, labelId,\n+          IndexQuery.exact(tokenRead.propertyKey(key1), Values.of(value1, false)),\n+          IndexQuery.exact(tokenRead.propertyKey(key2), Values.of(value2, false)),\n+          IndexQuery.exact(tokenRead.propertyKey(key3), Values.of(value3, false)));\n     }\n \n     @Override\n-    public ResourceIterator<Node> findNodes( Label label, String key1, Object value1, String key2, Object value2 )\n+    public ResourceIterator<Node> findNodes(Label label, String key1, Object value1, String key2, Object value2)\n     {\n-        checkLabel( label );\n-        checkPropertyKey( key1 );\n-        checkPropertyKey( key2 );\n+        checkLabel(label);\n+        checkPropertyKey(key1);\n+        checkPropertyKey(key2);\n         KernelTransaction transaction = kernelTransaction();\n         TokenRead tokenRead = transaction.tokenRead();\n-        int labelId = tokenRead.nodeLabel( label.name() );\n-        return nodesByLabelAndProperties( transaction, labelId,\n-                                          IndexQuery.exact( tokenRead.propertyKey( key1 ), Values.of( value1, false ) ),\n-                                          IndexQuery.exact( tokenRead.propertyKey( key2 ), Values.of( value2, false ) ) );\n+        int labelId = tokenRead.nodeLabel(label.name());\n+        return nodesByLabelAndProperties(transaction, labelId,\n+          IndexQuery.exact(tokenRead.propertyKey(key1), Values.of(value1, false)),\n+          IndexQuery.exact(tokenRead.propertyKey(key2), Values.of(value2, false)));\n     }\n \n     @Override\n-    public ResourceIterator<Node> findNodes( Label label, Map<String,Object> propertyValues )\n+    public ResourceIterator<Node> findNodes(Label label, Map<String, Object> propertyValues)\n     {\n-        checkLabel( label );\n-        checkArgument( propertyValues != null, \"Property values can not be null\" );\n+        checkLabel(label);\n+        checkArgument(propertyValues != null, \"Property values can not be null\");\n         KernelTransaction transaction = kernelTransaction();\n         TokenRead tokenRead = transaction.tokenRead();\n-        int labelId = tokenRead.nodeLabel( label.name() );\n+        int labelId = tokenRead.nodeLabel(label.name());\n         IndexQuery.ExactPredicate[] queries = new IndexQuery.ExactPredicate[propertyValues.size()];\n         int i = 0;\n-        for ( Map.Entry<String,Object> entry : propertyValues.entrySet() )\n+        for (Map.Entry<String, Object> entry : propertyValues.entrySet())\n         {\n-            queries[i++] = IndexQuery.exact( tokenRead.propertyKey( entry.getKey() ), Values.of( entry.getValue(), false ) );\n+            queries[i++] = IndexQuery.exact(tokenRead.propertyKey(entry.getKey()), Values.of(entry.getValue(), false));\n         }\n-        return nodesByLabelAndProperties( transaction, labelId, queries );\n+        return nodesByLabelAndProperties(transaction, labelId, queries);\n     }\n \n     @Override\n@@ -436,18 +431,17 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n         KernelTransaction ktx = kernelTransaction();\n         return () ->\n         {\n-            NodeCursor cursor = ktx.cursors().allocateNodeCursor( ktx.pageCursorTracer() );\n-            ktx.dataRead().allNodesScan( cursor );\n+            NodeCursor cursor = ktx.cursors().allocateNodeCursor(ktx.pageCursorTracer());\n+            ktx.dataRead().allNodesScan(cursor);\n             return new PrefetchingResourceIterator<>()\n             {\n                 @Override\n                 protected Node fetchNextOrNull()\n                 {\n-                    if ( cursor.next() )\n+                    if (cursor.next())\n                     {\n-                        return newNodeEntity( cursor.nodeReference() );\n-                    }\n-                    else\n+                        return newNodeEntity(cursor.nodeReference());\n+                    } else\n                     {\n                         close();\n                         return null;\n@@ -464,41 +458,41 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n     }\n \n     @Override\n-    public Relationship findRelationship( RelationshipType relationshipType, String key, Object value )\n+    public Relationship findRelationship(RelationshipType relationshipType, String key, Object value)\n     {\n-        try ( var iterator = findRelationships( relationshipType, key, value ) )\n+        try (var iterator = findRelationships(relationshipType, key, value))\n         {\n-            if ( !iterator.hasNext() )\n+            if (!iterator.hasNext())\n             {\n                 return null;\n             }\n             var rel = iterator.next();\n-            if ( iterator.hasNext() )\n+            if (iterator.hasNext())\n             {\n                 throw new MultipleFoundException(\n-                        format( \"Found multiple relationships with type: '%s', property name: '%s' and property \" +\n-                                \"value: '%s' while only one was expected.\", relationshipType, key, value ) );\n+                  format(\"Found multiple relationships with type: '%s', property name: '%s' and property \" +\n+                    \"value: '%s' while only one was expected.\", relationshipType, key, value));\n             }\n             return rel;\n         }\n     }\n \n     @Override\n-    public ResourceIterator<Relationship> findRelationships( RelationshipType relationshipType, String key, Object value )\n+    public ResourceIterator<Relationship> findRelationships(RelationshipType relationshipType, String key, Object value)\n     {\n-        checkRelationshipType( relationshipType );\n-        checkPropertyKey( key );\n+        checkRelationshipType(relationshipType);\n+        checkPropertyKey(key);\n         KernelTransaction transaction = kernelTransaction();\n         TokenRead tokenRead = transaction.tokenRead();\n-        int labelId = tokenRead.relationshipType( relationshipType.name() );\n-        int propertyId = tokenRead.propertyKey( key );\n-        return relationshipsByTypeAndProperty( transaction, labelId, IndexQuery.exact( propertyId, Values.of( value, false ) ) );\n+        int labelId = tokenRead.relationshipType(relationshipType.name());\n+        int propertyId = tokenRead.propertyKey(key);\n+        return relationshipsByTypeAndProperty(transaction, labelId, IndexQuery.exact(propertyId, Values.of(value, false)));\n     }\n \n     @Override\n-    public ResourceIterator<Relationship> findRelationships( RelationshipType relationshipType )\n+    public ResourceIterator<Relationship> findRelationships(RelationshipType relationshipType)\n     {\n-        return allRelationshipsWithType( relationshipType );\n+        return allRelationshipsWithType(relationshipType);\n     }\n \n     @Override\n@@ -507,19 +501,18 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n         KernelTransaction ktx = kernelTransaction();\n         return () ->\n         {\n-            RelationshipScanCursor cursor = ktx.cursors().allocateRelationshipScanCursor( ktx.pageCursorTracer() );\n-            ktx.dataRead().allRelationshipsScan( cursor );\n+            RelationshipScanCursor cursor = ktx.cursors().allocateRelationshipScanCursor(ktx.pageCursorTracer());\n+            ktx.dataRead().allRelationshipsScan(cursor);\n             return new PrefetchingResourceIterator<>()\n             {\n                 @Override\n                 protected Relationship fetchNextOrNull()\n                 {\n-                    if ( cursor.next() )\n+                    if (cursor.next())\n                     {\n-                        return newRelationshipEntity( cursor.relationshipReference(), cursor.sourceNodeReference(), cursor.type(),\n-                                cursor.targetNodeReference() );\n-                    }\n-                    else\n+                        return newRelationshipEntity(cursor.relationshipReference(), cursor.sourceNodeReference(), cursor.type(),\n+                          cursor.targetNodeReference());\n+                    } else\n                     {\n                         close();\n                         return null;\n@@ -538,32 +531,31 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n     @Override\n     public final void terminate()\n     {\n-        terminate( Terminated );\n+        terminate(Terminated);\n     }\n \n     @Override\n-    public void terminate( Status reason )\n+    public void terminate(Status reason)\n     {\n         var ktx = transaction;\n-        if ( ktx == null )\n+        if (ktx == null)\n         {\n             return;\n         }\n-        ktx.markForTermination( reason );\n-        if ( terminationCallback != null )\n+        ktx.markForTermination(reason);\n+        if (terminationCallback != null)\n         {\n-            terminationCallback.accept( reason );\n+            terminationCallback.accept(reason);\n         }\n     }\n \n     @Override\n     public UUID getDatabaseId()\n     {\n-        if ( this.transaction != null )\n+        if (this.transaction != null)\n         {\n             return this.transaction.getDatabaseId();\n-        }\n-        else\n+        } else\n         {\n             return null;\n         }\n@@ -572,11 +564,10 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n     @Override\n     public String getDatabaseName()\n     {\n-        if ( this.transaction != null )\n+        if (this.transaction != null)\n         {\n             return this.transaction.getDatabaseName();\n-        }\n-        else\n+        } else\n         {\n             return null;\n         }\n@@ -585,62 +576,61 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n     @Override\n     public void close()\n     {\n-        if ( isOpen() )\n+        if (isOpen())\n         {\n-            safeTerminalOperation( KernelTransaction::close );\n+            safeTerminalOperation(KernelTransaction::close);\n         }\n     }\n \n     @Override\n-    public void addCloseCallback( TransactionClosedCallback callback )\n+    public void addCloseCallback(TransactionClosedCallback callback)\n     {\n-        if ( closeCallbacks == null )\n+        if (closeCallbacks == null)\n         {\n-            closeCallbacks = new ArrayList<>( 4 );\n+            closeCallbacks = new ArrayList<>(4);\n         }\n-        closeCallbacks.add( callback );\n+        closeCallbacks.add(callback);\n     }\n \n-    private void safeTerminalOperation( TransactionalOperation operation )\n+    private void safeTerminalOperation(TransactionalOperation operation)\n     {\n         try\n         {\n-            if ( closed )\n+            if (closed)\n             {\n-                throw new NotInTransactionException( \"The transaction has been closed.\" );\n+                throw new NotInTransactionException(\"The transaction has been closed.\");\n             }\n-            operation.perform( transaction );\n+            operation.perform(transaction);\n             closed = true;\n             transaction = null;\n \n-            if ( closeCallbacks != null )\n+            if (closeCallbacks != null)\n             {\n-                closeCallbacks.forEach( TransactionClosedCallback::transactionClosed );\n+                closeCallbacks.forEach(TransactionClosedCallback::transactionClosed);\n             }\n-        }\n-        catch ( Exception e )\n+        } catch (Exception e)\n         {\n-            throw exceptionMapper.mapException( e );\n+            throw exceptionMapper.mapException(e);\n         }\n     }\n \n     @Override\n-    public void setTransaction( KernelTransaction transaction )\n+    public void setTransaction(KernelTransaction transaction)\n     {\n         this.transaction = transaction;\n-        transaction.bindToUserTransaction( this );\n+        transaction.bindToUserTransaction(this);\n     }\n \n     @Override\n-    public Lock acquireWriteLock( Entity entity )\n+    public Lock acquireWriteLock(Entity entity)\n     {\n-        return locker.exclusiveLock( kernelTransaction(), entity );\n+        return locker.exclusiveLock(kernelTransaction(), entity);\n     }\n \n     @Override\n-    public Lock acquireReadLock( Entity entity )\n+    public Lock acquireReadLock(Entity entity)\n     {\n-        return locker.sharedLock( kernelTransaction(), entity );\n+        return locker.sharedLock(kernelTransaction(), entity);\n     }\n \n     @Override\n@@ -669,9 +659,9 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n     }\n \n     @Override\n-    public KernelTransaction.Revertable overrideWith( SecurityContext context )\n+    public KernelTransaction.Revertable overrideWith(SecurityContext context)\n     {\n-        return kernelTransaction().overrideWith( context );\n+        return kernelTransaction().overrideWith(context);\n     }\n \n     @Override\n@@ -682,120 +672,117 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n     }\n \n     @Override\n-    public void setMetaData( Map<String,Object> txMeta )\n+    public void setMetaData(Map<String, Object> txMeta)\n     {\n-        kernelTransaction().setMetaData( txMeta );\n+        kernelTransaction().setMetaData(txMeta);\n     }\n \n     @Override\n-    public RelationshipEntity newRelationshipEntity( long id )\n+    public RelationshipEntity newRelationshipEntity(long id)\n     {\n-        return new RelationshipEntity( this, id );\n+        return new RelationshipEntity(this, id);\n     }\n \n     @Override\n-    public RelationshipEntity newRelationshipEntity( long id, long startNodeId, int typeId, long endNodeId )\n+    public RelationshipEntity newRelationshipEntity(long id, long startNodeId, int typeId, long endNodeId)\n     {\n-        return new RelationshipEntity( this, id, startNodeId, typeId, endNodeId );\n+        return new RelationshipEntity(this, id, startNodeId, typeId, endNodeId);\n     }\n \n     @Override\n-    public NodeEntity newNodeEntity( long nodeId )\n+    public NodeEntity newNodeEntity(long nodeId)\n     {\n-        return new NodeEntity( this, nodeId );\n+        return new NodeEntity(this, nodeId);\n     }\n \n     @Override\n-    public RelationshipType getRelationshipTypeById( int type )\n+    public RelationshipType getRelationshipTypeById(int type)\n     {\n         try\n         {\n-            String name = tokenHolders.relationshipTypeTokens().getTokenById( type ).name();\n-            return RelationshipType.withName( name );\n-        }\n-        catch ( TokenNotFoundException e )\n+            String name = tokenHolders.relationshipTypeTokens().getTokenById(type).name();\n+            return RelationshipType.withName(name);\n+        } catch (TokenNotFoundException e)\n         {\n-            throw new IllegalStateException( \"Kernel API returned non-existent relationship type: \" + type );\n+            throw new IllegalStateException(\"Kernel API returned non-existent relationship type: \" + type);\n         }\n     }\n \n     @Override\n     public Schema schema()\n     {\n-        return new SchemaImpl( kernelTransaction() );\n+        return new SchemaImpl(kernelTransaction());\n     }\n \n-    private ResourceIterator<Node> nodesByLabelAndProperty( KernelTransaction transaction, int labelId, IndexQuery query )\n+    private ResourceIterator<Node> nodesByLabelAndProperty(KernelTransaction transaction, int labelId, IndexQuery query)\n     {\n         Read read = transaction.dataRead();\n \n-        if ( query.propertyKeyId() == TokenRead.NO_TOKEN || labelId == TokenRead.NO_TOKEN )\n+        if (query.propertyKeyId() == TokenRead.NO_TOKEN || labelId == TokenRead.NO_TOKEN)\n         {\n             return emptyResourceIterator();\n         }\n \n-        var index = findMatchingIndex( transaction, SchemaDescriptor.forLabel( labelId, query.propertyKeyId() ) );\n-        if ( index != IndexDescriptor.NO_INDEX )\n+        var index = findMatchingIndex(transaction, SchemaDescriptor.forLabel(labelId, query.propertyKeyId()));\n+        if (index != IndexDescriptor.NO_INDEX)\n         {\n             // Ha! We found an index - let's use it to find matching nodes\n             try\n             {\n-                NodeValueIndexCursor cursor = transaction.cursors().allocateNodeValueIndexCursor( transaction.pageCursorTracer(), transaction.memoryTracker() );\n-                IndexReadSession indexSession = read.indexReadSession( index );\n-                read.nodeIndexSeek( indexSession, cursor, unconstrained(), query );\n+                NodeValueIndexCursor cursor = transaction.cursors().allocateNodeValueIndexCursor(transaction.pageCursorTracer(), transaction.memoryTracker());\n+                IndexReadSession indexSession = read.indexReadSession(index);\n+                read.nodeIndexSeek(indexSession, cursor, unconstrained(), query);\n \n-                return new NodeCursorResourceIterator<>( cursor, this::newNodeEntity );\n-            }\n-            catch ( KernelException e )\n+                return new NodeCursorResourceIterator<>(cursor, this::newNodeEntity);\n+            } catch (KernelException e)\n             {\n                 // weird at this point but ignore and fallback to a label scan\n             }\n         }\n \n-        return getNodesByLabelAndPropertyWithoutIndex( labelId, query );\n+        return getNodesByLabelAndPropertyWithoutIndex(labelId, query);\n     }\n \n-    private ResourceIterator<Relationship> relationshipsByTypeAndProperty( KernelTransaction transaction, int typeId, IndexQuery query )\n+    private ResourceIterator<Relationship> relationshipsByTypeAndProperty(KernelTransaction transaction, int typeId, IndexQuery query)\n     {\n         Read read = transaction.dataRead();\n \n-        if ( query.propertyKeyId() == TokenRead.NO_TOKEN || typeId == TokenRead.NO_TOKEN )\n+        if (query.propertyKeyId() == TokenRead.NO_TOKEN || typeId == TokenRead.NO_TOKEN)\n         {\n             return emptyResourceIterator();\n         }\n \n-        var index = findMatchingIndex( transaction, SchemaDescriptor.forRelType( typeId, query.propertyKeyId() ) );\n-        if ( index != IndexDescriptor.NO_INDEX )\n+        var index = findMatchingIndex(transaction, SchemaDescriptor.forRelType(typeId, query.propertyKeyId()));\n+        if (index != IndexDescriptor.NO_INDEX)\n         {\n             // Ha! We found an index - let's use it to find matching relationships\n             try\n             {\n-                var cursor = transaction.cursors().allocateRelationshipValueIndexCursor( transaction.pageCursorTracer(), transaction.memoryTracker() );\n-                IndexReadSession indexSession = read.indexReadSession( index );\n-                read.relationshipIndexSeek( indexSession, cursor, unconstrained(), query );\n+                var cursor = transaction.cursors().allocateRelationshipValueIndexCursor(transaction.pageCursorTracer(), transaction.memoryTracker());\n+                IndexReadSession indexSession = read.indexReadSession(index);\n+                read.relationshipIndexSeek(indexSession, cursor, unconstrained(), query);\n \n-                return new RelationshipCursorResourceIterator<>( cursor, this::newRelationshipEntity );\n-            }\n-            catch ( KernelException e )\n+                return new RelationshipCursorResourceIterator<>(cursor, this::newRelationshipEntity);\n+            } catch (KernelException e)\n             {\n                 // weird at this point but ignore and fallback to a type scan\n             }\n         }\n \n-        return getRelationshipsByTypeAndPropertyWithoutIndex( typeId, query );\n+        return getRelationshipsByTypeAndPropertyWithoutIndex(typeId, query);\n     }\n \n     @Override\n     public void checkInTransaction()\n     {\n-        if ( closed )\n+        if (closed)\n         {\n-            throw new NotInTransactionException( \"The transaction has been closed.\" );\n+            throw new NotInTransactionException(\"The transaction has been closed.\");\n         }\n-        if ( transaction.isTerminated() )\n+        if (transaction.isTerminated())\n         {\n-            Status terminationReason = transaction.getReasonIfTerminated().orElse( Status.Transaction.Terminated );\n-            throw new TransactionTerminatedException( terminationReason );\n+            Status terminationReason = transaction.getReasonIfTerminated().orElse(Status.Transaction.Terminated);\n+            throw new TransactionTerminatedException(terminationReason);\n         }\n     }\n \n@@ -805,81 +792,80 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n         return !closed;\n     }\n \n-    private ResourceIterator<Node> getNodesByLabelAndPropertyWithoutIndex( int labelId, IndexQuery... queries )\n+    private ResourceIterator<Node> getNodesByLabelAndPropertyWithoutIndex(int labelId, IndexQuery... queries)\n     {\n         KernelTransaction transaction = kernelTransaction();\n \n-        NodeLabelIndexCursor nodeLabelCursor = transaction.cursors().allocateNodeLabelIndexCursor( transaction.pageCursorTracer() );\n-        NodeCursor nodeCursor = transaction.cursors().allocateNodeCursor( transaction.pageCursorTracer() );\n-        PropertyCursor propertyCursor = transaction.cursors().allocatePropertyCursor( transaction.pageCursorTracer(), transaction.memoryTracker() );\n+        NodeLabelIndexCursor nodeLabelCursor = transaction.cursors().allocateNodeLabelIndexCursor(transaction.pageCursorTracer());\n+        NodeCursor nodeCursor = transaction.cursors().allocateNodeCursor(transaction.pageCursorTracer());\n+        PropertyCursor propertyCursor = transaction.cursors().allocatePropertyCursor(transaction.pageCursorTracer(), transaction.memoryTracker());\n \n-        transaction.dataRead().nodeLabelScan( labelId, nodeLabelCursor, IndexOrder.NONE );\n+        transaction.dataRead().nodeLabelScan(labelId, nodeLabelCursor, IndexOrder.NONE);\n \n-        return new NodeLabelPropertyIterator( transaction.dataRead(),\n-                nodeLabelCursor,\n-                nodeCursor,\n-                propertyCursor,\n-                this::newNodeEntity,\n-                queries );\n+        return new NodeLabelPropertyIterator(transaction.dataRead(),\n+          nodeLabelCursor,\n+          nodeCursor,\n+          propertyCursor,\n+          this::newNodeEntity,\n+          queries);\n     }\n \n-    private ResourceIterator<Relationship> getRelationshipsByTypeAndPropertyWithoutIndex( int labelId, IndexQuery... queries )\n+    private ResourceIterator<Relationship> getRelationshipsByTypeAndPropertyWithoutIndex(int labelId, IndexQuery... queries)\n     {\n         KernelTransaction transaction = kernelTransaction();\n \n-        RelationshipTypeIndexCursor relationshipTypeIndexCursor = transaction.cursors().allocateRelationshipTypeIndexCursor( );\n-        RelationshipScanCursor relationshipScanCursor = transaction.cursors().allocateRelationshipScanCursor( transaction.pageCursorTracer() );\n-        PropertyCursor propertyCursor = transaction.cursors().allocatePropertyCursor( transaction.pageCursorTracer(), transaction.memoryTracker() );\n+        RelationshipTypeIndexCursor relationshipTypeIndexCursor = transaction.cursors().allocateRelationshipTypeIndexCursor();\n+        RelationshipScanCursor relationshipScanCursor = transaction.cursors().allocateRelationshipScanCursor(transaction.pageCursorTracer());\n+        PropertyCursor propertyCursor = transaction.cursors().allocatePropertyCursor(transaction.pageCursorTracer(), transaction.memoryTracker());\n \n-        transaction.dataRead().relationshipTypeScan( labelId, relationshipTypeIndexCursor, IndexOrder.NONE );\n+        transaction.dataRead().relationshipTypeScan(labelId, relationshipTypeIndexCursor, IndexOrder.NONE);\n \n-        return new RelationshipTypePropertyIterator( transaction.dataRead(),\n-                                                     relationshipTypeIndexCursor,\n-                                                     relationshipScanCursor,\n-                                                     propertyCursor,\n-                                                     this::newRelationshipEntity,\n-                                                     queries );\n+        return new RelationshipTypePropertyIterator(transaction.dataRead(),\n+          relationshipTypeIndexCursor,\n+          relationshipScanCursor,\n+          propertyCursor,\n+          this::newRelationshipEntity,\n+          queries);\n     }\n \n     private ResourceIterator<Node> nodesByLabelAndProperties(\n-            KernelTransaction transaction, int labelId, IndexQuery.ExactPredicate... queries )\n+      KernelTransaction transaction, int labelId, IndexQuery.ExactPredicate... queries)\n     {\n         Read read = transaction.dataRead();\n \n-        if ( isInvalidQuery( labelId, queries ) )\n+        if (isInvalidQuery(labelId, queries))\n         {\n             return emptyResourceIterator();\n         }\n \n-        int[] propertyIds = getPropertyIds( queries );\n-        IndexDescriptor index = findMatchingIndex( transaction, labelId, propertyIds );\n+        int[] propertyIds = getPropertyIds(queries);\n+        IndexDescriptor index = findMatchingIndex(transaction, labelId, propertyIds);\n \n-        if ( index != IndexDescriptor.NO_INDEX )\n+        if (index != IndexDescriptor.NO_INDEX)\n         {\n             try\n             {\n-                NodeValueIndexCursor cursor = transaction.cursors().allocateNodeValueIndexCursor( transaction.pageCursorTracer(), transaction.memoryTracker() );\n-                IndexReadSession indexSession = read.indexReadSession( index );\n-                read.nodeIndexSeek( indexSession, cursor, unconstrained(), getReorderedIndexQueries( index.schema().getPropertyIds(), queries ) );\n-                return new NodeCursorResourceIterator<>( cursor, this::newNodeEntity );\n-            }\n-            catch ( KernelException e )\n+                NodeValueIndexCursor cursor = transaction.cursors().allocateNodeValueIndexCursor(transaction.pageCursorTracer(), transaction.memoryTracker());\n+                IndexReadSession indexSession = read.indexReadSession(index);\n+                read.nodeIndexSeek(indexSession, cursor, unconstrained(), getReorderedIndexQueries(index.schema().getPropertyIds(), queries));\n+                return new NodeCursorResourceIterator<>(cursor, this::newNodeEntity);\n+            } catch (KernelException e)\n             {\n                 // weird at this point but ignore and fallback to a label scan\n             }\n         }\n-        return getNodesByLabelAndPropertyWithoutIndex( labelId, queries );\n+        return getNodesByLabelAndPropertyWithoutIndex(labelId, queries);\n     }\n \n-    private static IndexQuery[] getReorderedIndexQueries( int[] indexPropertyIds, IndexQuery[] queries )\n+    private static IndexQuery[] getReorderedIndexQueries(int[] indexPropertyIds, IndexQuery[] queries)\n     {\n         IndexQuery[] orderedQueries = new IndexQuery[queries.length];\n-        for ( int i = 0; i < indexPropertyIds.length; i++ )\n+        for (int i = 0; i < indexPropertyIds.length; i++)\n         {\n             int propertyKeyId = indexPropertyIds[i];\n-            for ( IndexQuery query : queries )\n+            for (IndexQuery query : queries)\n             {\n-                if ( query.propertyKeyId() == propertyKeyId )\n+                if (query.propertyKeyId() == propertyKeyId)\n                 {\n                     orderedQueries[i] = query;\n                     break;\n@@ -889,61 +875,61 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n         return orderedQueries;\n     }\n \n-    private ResourceIterator<Node> allNodesWithLabel( final Label myLabel )\n+    private ResourceIterator<Node> allNodesWithLabel(final Label myLabel)\n     {\n         KernelTransaction ktx = kernelTransaction();\n \n-        int labelId = ktx.tokenRead().nodeLabel( myLabel.name() );\n-        if ( labelId == TokenRead.NO_TOKEN )\n+        int labelId = ktx.tokenRead().nodeLabel(myLabel.name());\n+        if (labelId == TokenRead.NO_TOKEN)\n         {\n             return Iterators.emptyResourceIterator();\n         }\n \n-        NodeLabelIndexCursor cursor = ktx.cursors().allocateNodeLabelIndexCursor( transaction.pageCursorTracer() );\n-        ktx.dataRead().nodeLabelScan( labelId, cursor, IndexOrder.NONE );\n-        return new NodeCursorResourceIterator<>( cursor, this::newNodeEntity );\n+        NodeLabelIndexCursor cursor = ktx.cursors().allocateNodeLabelIndexCursor(transaction.pageCursorTracer());\n+        ktx.dataRead().nodeLabelScan(labelId, cursor, IndexOrder.NONE);\n+        return new NodeCursorResourceIterator<>(cursor, this::newNodeEntity);\n     }\n \n-    private ResourceIterator<Relationship> allRelationshipsWithType( final RelationshipType type )\n+    private ResourceIterator<Relationship> allRelationshipsWithType(final RelationshipType type)\n     {\n         KernelTransaction ktx = kernelTransaction();\n \n-        int typeId = ktx.tokenRead().relationshipType( type.name() );\n-        if ( typeId == TokenRead.NO_TOKEN )\n+        int typeId = ktx.tokenRead().relationshipType(type.name());\n+        if (typeId == TokenRead.NO_TOKEN)\n         {\n             return Iterators.emptyResourceIterator();\n         }\n \n         RelationshipTypeIndexCursor cursor = ktx.cursors().allocateRelationshipTypeIndexCursor();\n-        ktx.dataRead().relationshipTypeScan( typeId, cursor, IndexOrder.NONE );\n-        return new RelationshipCursorResourceIterator<>( cursor, this::newRelationshipEntity );\n+        ktx.dataRead().relationshipTypeScan(typeId, cursor, IndexOrder.NONE);\n+        return new RelationshipCursorResourceIterator<>(cursor, this::newRelationshipEntity);\n     }\n \n-    private static IndexDescriptor findMatchingIndex( KernelTransaction transaction, int labelId, int[] propertyIds )\n+    private static IndexDescriptor findMatchingIndex(KernelTransaction transaction, int labelId, int[] propertyIds)\n     {\n         // Try a direct schema match first.\n-        Iterator<IndexDescriptor> iterator = transaction.schemaRead().index( SchemaDescriptor.forLabel( labelId, propertyIds ) );\n-        while ( iterator.hasNext() )\n+        Iterator<IndexDescriptor> iterator = transaction.schemaRead().index(SchemaDescriptor.forLabel(labelId, propertyIds));\n+        while (iterator.hasNext())\n         {\n             IndexDescriptor index = iterator.next();\n-            if ( index.getIndexType() == IndexType.BTREE )\n+            if (index.getIndexType() == IndexType.BTREE)\n             {\n                 return index;\n             }\n         }\n \n         // Attempt to find matching index with different property order\n-        Arrays.sort( propertyIds );\n-        assertNoDuplicates( propertyIds, transaction.tokenRead() );\n+        Arrays.sort(propertyIds);\n+        assertNoDuplicates(propertyIds, transaction.tokenRead());\n \n         int[] workingCopy = new int[propertyIds.length];\n \n-        Iterator<IndexDescriptor> indexes = transaction.schemaRead().indexesGetForLabel( labelId );\n-        while ( indexes.hasNext() )\n+        Iterator<IndexDescriptor> indexes = transaction.schemaRead().indexesGetForLabel(labelId);\n+        while (indexes.hasNext())\n         {\n             IndexDescriptor index = indexes.next();\n             int[] original = index.schema().getPropertyIds();\n-            if ( index.getIndexType() == IndexType.BTREE && hasSamePropertyIds( original, workingCopy, propertyIds ) )\n+            if (index.getIndexType() == IndexType.BTREE && hasSamePropertyIds(original, workingCopy, propertyIds))\n             {\n                 // Ha! We found an index with the same properties in another order\n                 return index;\n@@ -954,13 +940,13 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n         return IndexDescriptor.NO_INDEX;\n     }\n \n-    private static IndexDescriptor findMatchingIndex( KernelTransaction transaction, SchemaDescriptor schemaDescriptor )\n+    private static IndexDescriptor findMatchingIndex(KernelTransaction transaction, SchemaDescriptor schemaDescriptor)\n     {\n-        Iterator<IndexDescriptor> iterator = transaction.schemaRead().index( schemaDescriptor );\n-        while ( iterator.hasNext() )\n+        Iterator<IndexDescriptor> iterator = transaction.schemaRead().index(schemaDescriptor);\n+        while (iterator.hasNext())\n         {\n             IndexDescriptor index = iterator.next();\n-            if ( index.getIndexType() == IndexType.BTREE )\n+            if (index.getIndexType() == IndexType.BTREE)\n             {\n                 return index;\n             }\n@@ -968,47 +954,47 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n         return IndexDescriptor.NO_INDEX;\n     }\n \n-    private static void assertNoDuplicates( int[] propertyIds, TokenRead tokenRead )\n+    private static void assertNoDuplicates(int[] propertyIds, TokenRead tokenRead)\n     {\n         int prev = propertyIds[0];\n-        for ( int i = 1; i < propertyIds.length; i++ )\n+        for (int i = 1; i < propertyIds.length; i++)\n         {\n             int curr = propertyIds[i];\n-            if ( curr == prev )\n+            if (curr == prev)\n             {\n                 throw new IllegalArgumentException(\n-                        format( \"Provided two queries for property %s. Only one query per property key can be performed\",\n-                                tokenRead.propertyKeyGetName( curr ) ) );\n+                  format(\"Provided two queries for property %s. Only one query per property key can be performed\",\n+                    tokenRead.propertyKeyGetName(curr)));\n             }\n             prev = curr;\n         }\n     }\n \n-    private static boolean hasSamePropertyIds( int[] original, int[] workingCopy, int[] propertyIds )\n+    private static boolean hasSamePropertyIds(int[] original, int[] workingCopy, int[] propertyIds)\n     {\n-        if ( original.length == propertyIds.length )\n+        if (original.length == propertyIds.length)\n         {\n-            System.arraycopy( original, 0, workingCopy, 0, original.length );\n-            Arrays.sort( workingCopy );\n-            return Arrays.equals( propertyIds, workingCopy );\n+            System.arraycopy(original, 0, workingCopy, 0, original.length);\n+            Arrays.sort(workingCopy);\n+            return Arrays.equals(propertyIds, workingCopy);\n         }\n         return false;\n     }\n \n-    private static int[] getPropertyIds( IndexQuery[] queries )\n+    private static int[] getPropertyIds(IndexQuery[] queries)\n     {\n         int[] propertyIds = new int[queries.length];\n-        for ( int i = 0; i < queries.length; i++ )\n+        for (int i = 0; i < queries.length; i++)\n         {\n             propertyIds[i] = queries[i].propertyKeyId();\n         }\n         return propertyIds;\n     }\n \n-    private static boolean isInvalidQuery( int labelId, IndexQuery[] queries )\n+    private static boolean isInvalidQuery(int labelId, IndexQuery[] queries)\n     {\n         boolean invalidQuery = labelId == TokenRead.NO_TOKEN;\n-        for ( IndexQuery query : queries )\n+        for (IndexQuery query : queries)\n         {\n             int propertyKeyId = query.propertyKeyId();\n             invalidQuery = invalidQuery || propertyKeyId == TokenRead.NO_TOKEN;\n@@ -1016,36 +1002,36 @@ public class TransactionImpl extends EntityValidationTransactionImpl\n         return invalidQuery;\n     }\n \n-    private <T> Iterable<T> allInUse( final TokenAccess<T> tokens )\n+    private <T> Iterable<T> allInUse(final TokenAccess<T> tokens)\n     {\n         var transaction = kernelTransaction();\n-        return () -> tokens.inUse( transaction );\n+        return () -> tokens.inUse(transaction);\n     }\n \n-    private <T> Iterable<T> all( final TokenAccess<T> tokens )\n+    private <T> Iterable<T> all(final TokenAccess<T> tokens)\n     {\n         var transaction = kernelTransaction();\n-        return () -> tokens.all( transaction );\n+        return () -> tokens.all(transaction);\n     }\n \n     @FunctionalInterface\n     private interface TransactionalOperation\n     {\n-        void perform( KernelTransaction transaction ) throws Exception;\n+        void perform(KernelTransaction transaction) throws Exception;\n     }\n \n-    private static void checkPropertyKey( String key )\n+    private static void checkPropertyKey(String key)\n     {\n-        checkArgument( key != null, \"Property key can not be null\" );\n+        checkArgument(key != null, \"Property key can not be null\");\n     }\n \n-    private static void checkLabel( Label label )\n+    private static void checkLabel(Label label)\n     {\n-        checkArgument( label != null, \"Label can not be null\" );\n+        checkArgument(label != null, \"Label can not be null\");\n     }\n \n-    private static void checkRelationshipType( RelationshipType type )\n+    private static void checkRelationshipType(RelationshipType type)\n     {\n-        checkArgument( type != null, \"Relationship type can not be null\" );\n+        checkArgument(type != null, \"Relationship type can not be null\");\n     }\n }\n",
            "diff_size": 315
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
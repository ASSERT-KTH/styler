{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3379",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "62",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "100",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "71",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "74",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "90",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "93",
                    "column": "52",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "96",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "119",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "131",
                    "column": "82",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "140",
                    "column": "93",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "165",
                    "column": "38",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "168",
                    "column": "21",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "170",
                    "column": "84",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "176",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "19",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "181",
                    "column": "108",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "184",
                    "column": "43",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "48",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "186",
                    "column": "110",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "30",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "193",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "200",
                    "column": "61",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "42",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "202",
                    "column": "94",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "212",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "226",
                    "column": "83",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "237",
                    "column": "59",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "240",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "244",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "69",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "250",
                    "column": "96",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "49",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "252",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3379/BasicAuthManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3379/BasicAuthManager.java\nindex b2f808c9752..fbc56505443 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3379/BasicAuthManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3379/BasicAuthManager.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.server.security.auth;\n \n import java.io.IOException;\n@@ -48,207 +49,206 @@ import static org.neo4j.kernel.api.security.AuthToken.invalidToken;\n  * Through the BasicAuthManager you can create, update and delete userRepository, and authenticate using credentials.\n  * <p>\n  * NOTE: AuthManager will manage the lifecycle of the given UserRepository,\n- *       so the given UserRepository should not be added to another LifeSupport.\n+ * so the given UserRepository should not be added to another LifeSupport.\n  * </p>\n  */\n public class BasicAuthManager implements AuthManager, UserManager, UserManagerSupplier\n {\n-    protected final AuthenticationStrategy authStrategy;\n-    protected final UserRepository userRepository;\n-    protected final PasswordPolicy passwordPolicy;\n-    private final UserRepository initialUserRepository;\n-\n-    public BasicAuthManager( UserRepository userRepository, PasswordPolicy passwordPolicy,\n-            AuthenticationStrategy authStrategy, UserRepository initialUserRepository )\n-    {\n-        this.userRepository = userRepository;\n-        this.passwordPolicy = passwordPolicy;\n-        this.authStrategy = authStrategy;\n-        this.initialUserRepository = initialUserRepository;\n-    }\n-\n-    public BasicAuthManager( UserRepository userRepository, PasswordPolicy passwordPolicy, Clock clock,\n-            UserRepository initialUserRepository, Config config )\n-    {\n-        this( userRepository, passwordPolicy, createAuthenticationStrategy( clock, config ), initialUserRepository );\n-    }\n-\n-    @Override\n-    public void init() throws Throwable\n-    {\n-        userRepository.init();\n-        initialUserRepository.init();\n-    }\n-\n-    @Override\n-    public void start() throws Throwable\n-    {\n-        userRepository.start();\n-        initialUserRepository.start();\n-\n-        if ( userRepository.numberOfUsers() == 0 )\n+  protected final AuthenticationStrategy authStrategy;\n+  protected final UserRepository userRepository;\n+  protected final PasswordPolicy passwordPolicy;\n+  private final UserRepository initialUserRepository;\n+\n+  public BasicAuthManager(UserRepository userRepository, PasswordPolicy passwordPolicy,\n+                          AuthenticationStrategy authStrategy, UserRepository initialUserRepository)\n+  {\n+    this.userRepository = userRepository;\n+    this.passwordPolicy = passwordPolicy;\n+    this.authStrategy = authStrategy;\n+    this.initialUserRepository = initialUserRepository;\n+  }\n+\n+  public BasicAuthManager(UserRepository userRepository, PasswordPolicy passwordPolicy, Clock clock,\n+                          UserRepository initialUserRepository, Config config)\n+  {\n+    this(userRepository, passwordPolicy, createAuthenticationStrategy(clock, config), initialUserRepository);\n+  }\n+\n+  @Override\n+  public void init() throws Throwable\n+  {\n+    userRepository.init();\n+    initialUserRepository.init();\n+  }\n+\n+  @Override\n+  public void start() throws Throwable\n+  {\n+    userRepository.start();\n+    initialUserRepository.start();\n+\n+    if (userRepository.numberOfUsers() == 0)\n+    {\n+      User neo4j = newUser(INITIAL_USER_NAME, \"neo4j\", true);\n+      if (initialUserRepository.numberOfUsers() > 0)\n+      {\n+        User user = initialUserRepository.getUserByName(INITIAL_USER_NAME);\n+        if (user != null)\n         {\n-            User neo4j = newUser( INITIAL_USER_NAME, \"neo4j\", true );\n-            if ( initialUserRepository.numberOfUsers() > 0 )\n-            {\n-                User user = initialUserRepository.getUserByName( INITIAL_USER_NAME );\n-                if ( user != null )\n-                {\n-                    userRepository.update( neo4j, user );\n-                }\n-            }\n+          userRepository.update(neo4j, user);\n         }\n+      }\n     }\n+  }\n \n-    @Override\n-    public void stop() throws Throwable\n-    {\n-        userRepository.stop();\n-        initialUserRepository.stop();\n-    }\n+  @Override\n+  public void stop() throws Throwable\n+  {\n+    userRepository.stop();\n+    initialUserRepository.stop();\n+  }\n \n-    @Override\n-    public void shutdown() throws Throwable\n-    {\n-        userRepository.shutdown();\n-        initialUserRepository.shutdown();\n-    }\n+  @Override\n+  public void shutdown() throws Throwable\n+  {\n+    userRepository.shutdown();\n+    initialUserRepository.shutdown();\n+  }\n \n-    @Override\n-    public LoginContext login( Map<String,Object> authToken ) throws InvalidAuthTokenException\n-    {\n-        assertValidScheme( authToken );\n+  @Override\n+  public LoginContext login(Map<String, Object> authToken) throws InvalidAuthTokenException\n+  {\n+    assertValidScheme(authToken);\n \n-        String username = AuthToken.safeCast( AuthToken.PRINCIPAL, authToken );\n-        String password = AuthToken.safeCast( AuthToken.CREDENTIALS, authToken );\n+    String username = AuthToken.safeCast(AuthToken.PRINCIPAL, authToken);\n+    String password = AuthToken.safeCast(AuthToken.CREDENTIALS, authToken);\n \n-        User user = userRepository.getUserByName( username );\n-        AuthenticationResult result = AuthenticationResult.FAILURE;\n-        if ( user != null )\n-        {\n-            result = authStrategy.authenticate( user, password );\n-            if ( result == AuthenticationResult.SUCCESS && user.passwordChangeRequired() )\n-            {\n-                result = AuthenticationResult.PASSWORD_CHANGE_REQUIRED;\n-            }\n-        }\n-        return new BasicLoginContext( user, result );\n-    }\n-\n-    @Override\n-    public User newUser( String username, String initialPassword, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException\n+    User user = userRepository.getUserByName(username);\n+    AuthenticationResult result = AuthenticationResult.FAILURE;\n+    if (user != null)\n     {\n-        userRepository.assertValidUsername( username );\n+      result = authStrategy.authenticate(user, password);\n+      if (result == AuthenticationResult.SUCCESS && user.passwordChangeRequired())\n+      {\n+        result = AuthenticationResult.PASSWORD_CHANGE_REQUIRED;\n+      }\n+    }\n+    return new BasicLoginContext(user, result);\n+  }\n \n-        passwordPolicy.validatePassword( initialPassword );\n+  @Override\n+  public User newUser(String username, String initialPassword, boolean requirePasswordChange)\n+      throws IOException, InvalidArgumentsException\n+  {\n+    userRepository.assertValidUsername(username);\n \n-        User user = new User.Builder()\n-                .withName( username )\n-                .withCredentials( Credential.forPassword( initialPassword ) )\n-                .withRequiredPasswordChange( requirePasswordChange )\n-                .build();\n-        userRepository.create( user );\n+    passwordPolicy.validatePassword(initialPassword);\n \n-        return user;\n-    }\n+    User user = new User.Builder()\n+        .withName(username)\n+        .withCredentials(Credential.forPassword(initialPassword))\n+        .withRequiredPasswordChange(requirePasswordChange)\n+        .build();\n+    userRepository.create(user);\n \n-    @Override\n-    public boolean deleteUser( String username ) throws IOException, InvalidArgumentsException\n-    {\n-        User user = getUser( username );\n-        return user != null && userRepository.delete( user );\n-    }\n+    return user;\n+  }\n \n-    @Override\n-    public User getUser( String username ) throws InvalidArgumentsException\n-    {\n-        User user = userRepository.getUserByName( username );\n-        if ( user == null )\n-        {\n-            throw new InvalidArgumentsException( \"User '\" + username + \"' does not exist.\" );\n-        }\n-        return user;\n-    }\n+  @Override\n+  public boolean deleteUser(String username) throws IOException, InvalidArgumentsException\n+  {\n+    User user = getUser(username);\n+    return user != null && userRepository.delete(user);\n+  }\n \n-    @Override\n-    public User silentlyGetUser( String username )\n+  @Override\n+  public User getUser(String username) throws InvalidArgumentsException\n+  {\n+    User user = userRepository.getUserByName(username);\n+    if (user == null)\n     {\n-        return userRepository.getUserByName( username );\n+      throw new InvalidArgumentsException(\"User '\" + username + \"' does not exist.\");\n     }\n+    return user;\n+  }\n \n-    void setPassword( AuthSubject authSubject, String username, String password, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException\n-    {\n-        if ( !authSubject.hasUsername( username ) )\n-        {\n-            throw new AuthorizationViolationException( \"Invalid attempt to change the password for user \" + username );\n-        }\n-\n-        setUserPassword( username, password, requirePasswordChange );\n-    }\n+  @Override\n+  public User silentlyGetUser(String username)\n+  {\n+    return userRepository.getUserByName(username);\n+  }\n \n-    @Override\n-    public void setUserPassword( String username, String password, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException\n+  void setPassword(AuthSubject authSubject, String username, String password, boolean requirePasswordChange)\n+      throws IOException, InvalidArgumentsException\n+  {\n+    if (!authSubject.hasUsername(username))\n     {\n-        User existingUser = getUser( username );\n+      throw new AuthorizationViolationException(\"Invalid attempt to change the password for user \" + username);\n+    }\n \n-        passwordPolicy.validatePassword( password );\n+    setUserPassword(username, password, requirePasswordChange);\n+  }\n \n-        if ( existingUser.credentials().matchesPassword( password ) )\n-        {\n-            throw new InvalidArgumentsException( \"Old password and new password cannot be the same.\" );\n-        }\n+  @Override\n+  public void setUserPassword(String username, String password, boolean requirePasswordChange)\n+      throws IOException, InvalidArgumentsException\n+  {\n+    User existingUser = getUser(username);\n \n-        try\n-        {\n-            User updatedUser = existingUser.augment()\n-                    .withCredentials( Credential.forPassword( password ) )\n-                    .withRequiredPasswordChange( requirePasswordChange )\n-                    .build();\n-            userRepository.update( existingUser, updatedUser );\n-        }\n-        catch ( ConcurrentModificationException e )\n-        {\n-            // try again\n-            setUserPassword( username, password, requirePasswordChange );\n-        }\n-    }\n+    passwordPolicy.validatePassword(password);\n \n-    @Override\n-    public Set<String> getAllUsernames()\n+    if (existingUser.credentials().matchesPassword(password))\n     {\n-        return userRepository.getAllUsernames();\n+      throw new InvalidArgumentsException(\"Old password and new password cannot be the same.\");\n     }\n \n-    @Override\n-    public UserManager getUserManager( AuthSubject authSubject, boolean isUserManager )\n+    try\n     {\n-        return this;\n-    }\n-\n-    @Override\n-    public UserManager getUserManager()\n+      User updatedUser = existingUser.augment()\n+          .withCredentials(Credential.forPassword(password))\n+          .withRequiredPasswordChange(requirePasswordChange)\n+          .build();\n+      userRepository.update(existingUser, updatedUser);\n+    } catch (ConcurrentModificationException e)\n     {\n-        return this;\n+      // try again\n+      setUserPassword(username, password, requirePasswordChange);\n     }\n+  }\n+\n+  @Override\n+  public Set<String> getAllUsernames()\n+  {\n+    return userRepository.getAllUsernames();\n+  }\n+\n+  @Override\n+  public UserManager getUserManager(AuthSubject authSubject, boolean isUserManager)\n+  {\n+    return this;\n+  }\n+\n+  @Override\n+  public UserManager getUserManager()\n+  {\n+    return this;\n+  }\n \n-    private void assertValidScheme( Map<String,Object> token ) throws InvalidAuthTokenException\n+  private void assertValidScheme(Map<String, Object> token) throws InvalidAuthTokenException\n+  {\n+    String scheme = AuthToken.safeCast(AuthToken.SCHEME_KEY, token);\n+    if (scheme.equals(\"none\"))\n     {\n-        String scheme = AuthToken.safeCast( AuthToken.SCHEME_KEY, token );\n-        if ( scheme.equals( \"none\" ) )\n-        {\n-            throw invalidToken( \", scheme 'none' is only allowed when auth is disabled.\" );\n-        }\n-        if ( !scheme.equals( AuthToken.BASIC_SCHEME ) )\n-        {\n-            throw invalidToken( \", scheme '\" + scheme + \"' is not supported.\" );\n-        }\n+      throw invalidToken(\", scheme 'none' is only allowed when auth is disabled.\");\n     }\n-\n-    private static AuthenticationStrategy createAuthenticationStrategy( Clock clock, Config config )\n+    if (!scheme.equals(AuthToken.BASIC_SCHEME))\n     {\n-        return new RateLimitedAuthenticationStrategy( clock, config );\n+      throw invalidToken(\", scheme '\" + scheme + \"' is not supported.\");\n     }\n+  }\n+\n+  private static AuthenticationStrategy createAuthenticationStrategy(Clock clock, Config config)\n+  {\n+    return new RateLimitedAuthenticationStrategy(clock, config);\n+  }\n }\n",
            "diff_size": 227
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3379/BasicAuthManager.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3379/BasicAuthManager.java\nindex b2f808c9752..d2314aa1091 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3379/BasicAuthManager.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/3379/BasicAuthManager.java\n@@ -85,8 +85,7 @@ public class BasicAuthManager implements AuthManager, UserManager, UserManagerSu\n     {\n         userRepository.start();\n         initialUserRepository.start();\n-\n-        if ( userRepository.numberOfUsers() == 0 )\n+if ( userRepository.numberOfUsers() == 0 )\n         {\n             User neo4j = newUser( INITIAL_USER_NAME, \"neo4j\", true );\n             if ( initialUserRepository.numberOfUsers() > 0 )\n@@ -118,11 +117,9 @@ public class BasicAuthManager implements AuthManager, UserManager, UserManagerSu\n     public LoginContext login( Map<String,Object> authToken ) throws InvalidAuthTokenException\n     {\n         assertValidScheme( authToken );\n-\n-        String username = AuthToken.safeCast( AuthToken.PRINCIPAL, authToken );\n+String username = AuthToken.safeCast( AuthToken.PRINCIPAL, authToken );\n         String password = AuthToken.safeCast( AuthToken.CREDENTIALS, authToken );\n-\n-        User user = userRepository.getUserByName( username );\n+User user = userRepository.getUserByName( username );\n         AuthenticationResult result = AuthenticationResult.FAILURE;\n         if ( user != null )\n         {\n@@ -136,21 +133,15 @@ public class BasicAuthManager implements AuthManager, UserManager, UserManagerSu\n     }\n \n     @Override\n-    public User newUser( String username, String initialPassword, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException\n-    {\n+    public User newUser( String username, String initialPassword, boolean requirePasswordChange ) throws IOException, InvalidArgumentsException\n+{\n         userRepository.assertValidUsername( username );\n-\n-        passwordPolicy.validatePassword( initialPassword );\n-\n-        User user = new User.Builder()\n-                .withName( username )\n-                .withCredentials( Credential.forPassword( initialPassword ) )\n-                .withRequiredPasswordChange( requirePasswordChange )\n+passwordPolicy.validatePassword( initialPassword );\n+User user = new User.Builder().withName( username )\n+                .withCredentials( Credential.forPassword( initialPassword ) ).withRequiredPasswordChange( requirePasswordChange )\n                 .build();\n-        userRepository.create( user );\n-\n-        return user;\n+userRepository.create( user );\n+return user;\n     }\n \n     @Override\n@@ -168,7 +159,8 @@ public class BasicAuthManager implements AuthManager, UserManager, UserManagerSu\n         {\n             throw new InvalidArgumentsException( \"User '\" + username + \"' does not exist.\" );\n         }\n-        return user;\n+\n+return user;\n     }\n \n     @Override\n@@ -177,9 +169,8 @@ public class BasicAuthManager implements AuthManager, UserManager, UserManagerSu\n         return userRepository.getUserByName( username );\n     }\n \n-    void setPassword( AuthSubject authSubject, String username, String password, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException\n-    {\n+    void setPassword( AuthSubject authSubject, String username, String password, boolean requirePasswordChange ) throws IOException, InvalidArgumentsException\n+{\n         if ( !authSubject.hasUsername( username ) )\n         {\n             throw new AuthorizationViolationException( \"Invalid attempt to change the password for user \" + username );\n@@ -189,25 +180,20 @@ public class BasicAuthManager implements AuthManager, UserManager, UserManagerSu\n     }\n \n     @Override\n-    public void setUserPassword( String username, String password, boolean requirePasswordChange )\n-            throws IOException, InvalidArgumentsException\n-    {\n+    public void setUserPassword( String username, String password, boolean requirePasswordChange ) throws IOException, InvalidArgumentsException\n+{\n         User existingUser = getUser( username );\n-\n-        passwordPolicy.validatePassword( password );\n-\n-        if ( existingUser.credentials().matchesPassword( password ) )\n+passwordPolicy.validatePassword( password );\n+if ( existingUser.credentials().matchesPassword( password ) )\n         {\n             throw new InvalidArgumentsException( \"Old password and new password cannot be the same.\" );\n         }\n \n         try\n         {\n-            User updatedUser = existingUser.augment()\n-                    .withCredentials( Credential.forPassword( password ) )\n-                    .withRequiredPasswordChange( requirePasswordChange )\n+            User updatedUser = existingUser.augment().withCredentials( Credential.forPassword( password ) ).withRequiredPasswordChange( requirePasswordChange )\n                     .build();\n-            userRepository.update( existingUser, updatedUser );\n+userRepository.update( existingUser, updatedUser );\n         }\n         catch ( ConcurrentModificationException e )\n         {\n@@ -241,7 +227,8 @@ public class BasicAuthManager implements AuthManager, UserManager, UserManagerSu\n         {\n             throw invalidToken( \", scheme 'none' is only allowed when auth is disabled.\" );\n         }\n-        if ( !scheme.equals( AuthToken.BASIC_SCHEME ) )\n+\n+if ( !scheme.equals( AuthToken.BASIC_SCHEME ) )\n         {\n             throw invalidToken( \", scheme '\" + scheme + \"' is not supported.\" );\n         }\n@@ -251,4 +238,4 @@ public class BasicAuthManager implements AuthManager, UserManager, UserManagerSu\n     {\n         return new RateLimitedAuthenticationStrategy( clock, config );\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 38
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
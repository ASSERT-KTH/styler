{
    "project_name": "neo4j-neo4j",
    "error_id": "380",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "48",
                    "column": "65",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "48",
                    "column": "132",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "51",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "55",
                    "column": "148",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "38",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "105",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "65",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "69",
                    "column": "40",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "29",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "75",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "33",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "26",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "88",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "118",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "120",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "126",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "54",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "137",
                    "column": "37",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "39",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/380/MutableLongDiffSetsImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/380/MutableLongDiffSetsImpl.java\nindex dc0102952f7..4c86fad8221 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/errored/1/380/MutableLongDiffSetsImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/neo4j-neo4j/intellij/380/MutableLongDiffSetsImpl.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.kernel.impl.util.diffsets;\n \n import org.eclipse.collections.api.set.primitive.LongSet;\n@@ -36,7 +37,7 @@ import org.neo4j.util.VisibleForTesting;\n  */\n public class MutableLongDiffSetsImpl implements MutableLongDiffSets\n {\n-    private static final long SHALLOW_SIZE = HeapEstimator.shallowSizeOfInstance( MutableLongDiffSetsImpl.class );\n+    private static final long SHALLOW_SIZE = HeapEstimator.shallowSizeOfInstance(MutableLongDiffSetsImpl.class);\n     private static final MutableLongSet NOT_INITIALIZED = LongSets.mutable.empty().asUnmodifiable();\n \n     private final CollectionsFactory collectionsFactory;\n@@ -44,14 +45,14 @@ public class MutableLongDiffSetsImpl implements MutableLongDiffSets\n     private MutableLongSet added;\n     private MutableLongSet removed;\n \n-    static MutableLongDiffSetsImpl createMutableLongDiffSetsImpl( CollectionsFactory collectionsFactory, MemoryTracker memoryTracker )\n+    static MutableLongDiffSetsImpl createMutableLongDiffSetsImpl(CollectionsFactory collectionsFactory, MemoryTracker memoryTracker)\n     {\n-        memoryTracker.allocateHeap( SHALLOW_SIZE );\n-        return new MutableLongDiffSetsImpl( collectionsFactory, memoryTracker );\n+        memoryTracker.allocateHeap(SHALLOW_SIZE);\n+        return new MutableLongDiffSetsImpl(collectionsFactory, memoryTracker);\n     }\n \n     @VisibleForTesting\n-    public MutableLongDiffSetsImpl( MutableLongSet added, MutableLongSet removed, CollectionsFactory collectionsFactory, MemoryTracker memoryTracker )\n+    public MutableLongDiffSetsImpl(MutableLongSet added, MutableLongSet removed, CollectionsFactory collectionsFactory, MemoryTracker memoryTracker)\n     {\n         this.added = added;\n         this.removed = removed;\n@@ -59,35 +60,35 @@ public class MutableLongDiffSetsImpl implements MutableLongDiffSets\n         this.memoryTracker = memoryTracker;\n     }\n \n-    protected MutableLongDiffSetsImpl( CollectionsFactory collectionsFactory, MemoryTracker memoryTracker )\n+    protected MutableLongDiffSetsImpl(CollectionsFactory collectionsFactory, MemoryTracker memoryTracker)\n     {\n-        this( NOT_INITIALIZED, NOT_INITIALIZED, collectionsFactory, memoryTracker );\n+        this(NOT_INITIALIZED, NOT_INITIALIZED, collectionsFactory, memoryTracker);\n     }\n \n     @Override\n-    public boolean isAdded( long element )\n+    public boolean isAdded(long element)\n     {\n-        return added.contains( element );\n+        return added.contains(element);\n     }\n \n     @Override\n-    public boolean isRemoved( long element )\n+    public boolean isRemoved(long element)\n     {\n-        return removed.contains( element );\n+        return removed.contains(element);\n     }\n \n     @Override\n-    public void add( long element )\n+    public void add(long element)\n     {\n         checkAddedElements();\n-        addElement( element );\n+        addElement(element);\n     }\n \n     @Override\n-    public boolean remove( long element )\n+    public boolean remove(long element)\n     {\n         checkRemovedElements();\n-        return removeElement( element );\n+        return removeElement(element);\n     }\n \n     @Override\n@@ -114,36 +115,36 @@ public class MutableLongDiffSetsImpl implements MutableLongDiffSets\n         return added.isEmpty() && removed.isEmpty();\n     }\n \n-    private void addElement( long element )\n+    private void addElement(long element)\n     {\n-        if ( removed.isEmpty() || !removed.remove( element ) )\n+        if (removed.isEmpty() || !removed.remove(element))\n         {\n-            added.add( element );\n+            added.add(element);\n         }\n     }\n \n-    private boolean removeElement( long element )\n+    private boolean removeElement(long element)\n     {\n-        if ( !added.isEmpty() && added.remove( element ) )\n+        if (!added.isEmpty() && added.remove(element))\n         {\n             return true;\n         }\n-        return removed.add( element );\n+        return removed.add(element);\n     }\n \n     private void checkAddedElements()\n     {\n-        if ( added == NOT_INITIALIZED )\n+        if (added == NOT_INITIALIZED)\n         {\n-            added = collectionsFactory.newLongSet( memoryTracker );\n+            added = collectionsFactory.newLongSet(memoryTracker);\n         }\n     }\n \n     private void checkRemovedElements()\n     {\n-        if ( removed == NOT_INITIALIZED )\n+        if (removed == NOT_INITIALIZED)\n         {\n-            removed = collectionsFactory.newLongSet( memoryTracker );\n+            removed = collectionsFactory.newLongSet(memoryTracker);\n         }\n     }\n }\n",
            "diff_size": 26
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "graphfoundation-ongdb",
    "error_id": "3345",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "45",
                    "column": "24",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "45",
                    "column": "41",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "60",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "60",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "62",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "63",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "72",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "72",
                    "column": "25",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "81",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "83",
                    "column": "78",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "11",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "19",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "7",
                    "severity": "error",
                    "message": "'}' at column 7 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "104",
                    "column": "14",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "104",
                    "column": "27",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "110",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "110",
                    "column": "31",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "9",
                    "severity": "error",
                    "message": "'}' at column 9 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "114",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "114",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "40",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "116",
                    "column": "42",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3345/ThreadAhead.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3345/ThreadAhead.java\nindex dfffea98aa3..b40248c29cd 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/3345/ThreadAhead.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/3345/ThreadAhead.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.csv.reader;\n \n import java.io.Closeable;\n@@ -30,106 +31,101 @@ import static java.util.concurrent.TimeUnit.MILLISECONDS;\n  */\n public abstract class ThreadAhead extends Thread implements Closeable\n {\n-    // A \"long\" time to wait is OK since these two threads: the owner and the read-ahead thread\n-    // notifies/unparks each other when it's time to continue on anyways\n-    private static final long PARK_TIME = MILLISECONDS.toNanos( 100 );\n+  // A \"long\" time to wait is OK since these two threads: the owner and the read-ahead thread\n+  // notifies/unparks each other when it's time to continue on anyways\n+  private static final long PARK_TIME = MILLISECONDS.toNanos(100);\n \n-    private final Thread owner;\n-    private volatile boolean hasReadAhead;\n-    private volatile boolean closed;\n-    private volatile boolean eof;\n-    private volatile IOException ioException;\n-    private final Closeable actual;\n+  private final Thread owner;\n+  private volatile boolean hasReadAhead;\n+  private volatile boolean closed;\n+  private volatile boolean eof;\n+  private volatile IOException ioException;\n+  private final Closeable actual;\n \n-    protected ThreadAhead( Closeable actual )\n-    {\n-        this.actual = actual;\n-        setName( getClass().getSimpleName() + \" for \" + actual );\n-        this.owner = Thread.currentThread();\n-        setDaemon( true );\n-    }\n+  protected ThreadAhead(Closeable actual)\n+  {\n+    this.actual = actual;\n+    setName(getClass().getSimpleName() + \" for \" + actual);\n+    this.owner = Thread.currentThread();\n+    setDaemon(true);\n+  }\n \n-    @Override\n-    public void close() throws IOException\n+  @Override\n+  public void close() throws IOException\n+  {\n+    closed = true;\n+    try\n     {\n-        closed = true;\n-        try\n-        {\n-            join();\n-        }\n-        catch ( InterruptedException e )\n-        {\n-            throw new IOException( e );\n-        }\n-        finally\n-        {\n-            actual.close();\n-        }\n-    }\n-\n-    protected void waitUntilReadAhead() throws IOException\n+      join();\n+    } catch (InterruptedException e)\n     {\n-        assertHealthy();\n-        while ( !hasReadAhead )\n-        {\n-            parkAWhile();\n-            assertHealthy();\n-        }\n+      throw new IOException(e);\n+    } finally\n+    {\n+      actual.close();\n     }\n+  }\n \n-    protected void assertHealthy() throws IOException\n+  protected void waitUntilReadAhead() throws IOException\n+  {\n+    assertHealthy();\n+    while (!hasReadAhead)\n     {\n-        if ( ioException != null )\n-        {\n-            throw new IOException( \"Error occured in read-ahead thread\", ioException );\n-        }\n+      parkAWhile();\n+      assertHealthy();\n     }\n+  }\n \n-    protected void parkAWhile()\n+  protected void assertHealthy() throws IOException\n+  {\n+    if (ioException != null)\n     {\n-        LockSupport.parkNanos( PARK_TIME );\n+      throw new IOException(\"Error occured in read-ahead thread\", ioException);\n     }\n+  }\n+\n+  protected void parkAWhile()\n+  {\n+    LockSupport.parkNanos(PARK_TIME);\n+  }\n \n-    @Override\n-    public void run()\n+  @Override\n+  public void run()\n+  {\n+    while (!closed)\n     {\n-        while ( !closed )\n+      if (hasReadAhead || eof)\n+      {   // We have already read ahead, sleep a little\n+        parkAWhile();\n+      } else\n+      {   // We haven't read ahead, or the data we read ahead have been consumed\n+        try\n+        {\n+          if (!readAhead())\n+          {\n+            eof = true;\n+          }\n+          hasReadAhead = true;\n+          LockSupport.unpark(owner);\n+        } catch (IOException e)\n+        {\n+          ioException = e;\n+          closed = true;\n+        } catch (Throwable e)\n         {\n-            if ( hasReadAhead || eof )\n-            {   // We have already read ahead, sleep a little\n-                parkAWhile();\n-            }\n-            else\n-            {   // We haven't read ahead, or the data we read ahead have been consumed\n-                try\n-                {\n-                    if ( !readAhead() )\n-                    {\n-                        eof = true;\n-                    }\n-                    hasReadAhead = true;\n-                    LockSupport.unpark( owner );\n-                }\n-                catch ( IOException e )\n-                {\n-                    ioException = e;\n-                    closed = true;\n-                }\n-                catch ( Throwable e )\n-                {\n-                    ioException = new IOException( e );\n-                    closed = true;\n-                }\n-            }\n+          ioException = new IOException(e);\n+          closed = true;\n         }\n+      }\n     }\n+  }\n \n-    protected abstract boolean readAhead() throws IOException;\n+  protected abstract boolean readAhead() throws IOException;\n \n-    protected void pokeReader()\n-    {\n-        // wake up the reader... there's stuff to do, data to read\n-        hasReadAhead = false;\n-        LockSupport.unpark( this );\n-    }\n+  protected void pokeReader()\n+  {\n+    // wake up the reader... there's stuff to do, data to read\n+    hasReadAhead = false;\n+    LockSupport.unpark(this);\n+  }\n }\n",
            "diff_size": 121
        },
        {
            "tool": "naturalize",
            "errors": null,
            "diff": null
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}
{
    "project_name": "EMResearch-EMB",
    "error_id": "4",
    "information": {
        "errors": [
            {
                "line": "68",
                "column": "1",
                "severity": "warning",
                "message": "File contains tab characters (this is the first instance).",
                "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
            }
        ]
    },
    "source_code": "    }\n    \n\t@Override\n\tpublic Visit findById(int id) throws DataAccessException {\n\t\treturn this.em.find(Visit.class, id);\n\t}",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "69",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/4/JpaVisitRepositoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/styler/4/JpaVisitRepositoryImpl.java\nindex e5f911c7b50..095a42f2b07 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/4/JpaVisitRepositoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/styler/4/JpaVisitRepositoryImpl.java\n@@ -64,8 +64,8 @@ public class JpaVisitRepositoryImpl implements VisitRepository {\n         query.setParameter(\"id\", petId);\n         return query.getResultList();\n     }\n-    \n-\t@Override\n+\n+    @Override\n \tpublic Visit findById(int id) throws DataAccessException {\n \t\treturn this.em.find(Visit.class, id);\n \t}\n",
            "diff_size": 2
        },
        {
            "tool": "intellij",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/4/JpaVisitRepositoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/4/JpaVisitRepositoryImpl.java\nindex e5f911c7b50..440a503878f 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/4/JpaVisitRepositoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/intellij/4/JpaVisitRepositoryImpl.java\n@@ -13,6 +13,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n+\n package org.springframework.samples.petclinic.repository.jpa;\n \n import java.util.Collection;\n@@ -64,25 +65,25 @@ public class JpaVisitRepositoryImpl implements VisitRepository {\n         query.setParameter(\"id\", petId);\n         return query.getResultList();\n     }\n-    \n-\t@Override\n-\tpublic Visit findById(int id) throws DataAccessException {\n-\t\treturn this.em.find(Visit.class, id);\n-\t}\n \n-\t@SuppressWarnings(\"unchecked\")\n-\t@Override\n-\tpublic Collection<Visit> findAll() throws DataAccessException {\n+    @Override\n+    public Visit findById(int id) throws DataAccessException {\n+        return this.em.find(Visit.class, id);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public Collection<Visit> findAll() throws DataAccessException {\n         return this.em.createQuery(\"SELECT v FROM Visit v\").getResultList();\n-\t}\n+    }\n \n-\t@Override\n-\tpublic void delete(Visit visit) throws DataAccessException {\n-\t\tString visitId = visit.getId().toString();\n-\t\tthis.em.createQuery(\"DELETE FROM Visit visit WHERE id=\" + visitId).executeUpdate();\n-\t\tif (em.contains(visit)) {\n-\t\t\tem.remove(visit);\n-\t\t}\n-\t}\n+    @Override\n+    public void delete(Visit visit) throws DataAccessException {\n+        String visitId = visit.getId().toString();\n+        this.em.createQuery(\"DELETE FROM Visit visit WHERE id=\" + visitId).executeUpdate();\n+        if (em.contains(visit)) {\n+            em.remove(visit);\n+        }\n+    }\n \n }\n",
            "diff_size": 23
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "69",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/4/JpaVisitRepositoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/4/JpaVisitRepositoryImpl.java\nindex e5f911c7b50..e6d382e36a8 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/4/JpaVisitRepositoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/naturalize/4/JpaVisitRepositoryImpl.java\n@@ -64,25 +64,24 @@ public class JpaVisitRepositoryImpl implements VisitRepository {\n         query.setParameter(\"id\", petId);\n         return query.getResultList();\n     }\n-    \n-\t@Override\n+\n+    @Override\n \tpublic Visit findById(int id) throws DataAccessException {\n-\t\treturn this.em.find(Visit.class, id);\n-\t}\n+    return this.em.find(Visit.class, id);\n+    }\n \n \t@SuppressWarnings(\"unchecked\")\n \t@Override\n \tpublic Collection<Visit> findAll() throws DataAccessException {\n-        return this.em.createQuery(\"SELECT v FROM Visit v\").getResultList();\n-\t}\n+    return this.em.createQuery(\"SELECT v FROM Visit v\").getResultList();\n+    }\n \n \t@Override\n \tpublic void delete(Visit visit) throws DataAccessException {\n-\t\tString visitId = visit.getId().toString();\n+    String visitId = visit.getId().toString();\n \t\tthis.em.createQuery(\"DELETE FROM Visit visit WHERE id=\" + visitId).executeUpdate();\n \t\tif (em.contains(visit)) {\n-\t\t\tem.remove(visit);\n-\t\t}\n-\t}\n-\n-}\n+    em.remove(visit);\n+    }\n+    }\n+    }\n\\ No newline at end of file\n",
            "diff_size": 12
        },
        {
            "tool": "codebuff",
            "errors": [],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/4/JpaVisitRepositoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/4/JpaVisitRepositoryImpl.java\nindex e5f911c7b50..ba0f78ff68c 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/4/JpaVisitRepositoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/codebuff/4/JpaVisitRepositoryImpl.java\n@@ -17,11 +17,9 @@ package org.springframework.samples.petclinic.repository.jpa;\n \n import java.util.Collection;\n import java.util.List;\n-\n import javax.persistence.EntityManager;\n import javax.persistence.PersistenceContext;\n import javax.persistence.Query;\n-\n import org.springframework.context.annotation.Profile;\n import org.springframework.dao.DataAccessException;\n import org.springframework.samples.petclinic.model.Visit;\n@@ -39,14 +37,14 @@ import org.springframework.stereotype.Repository;\n  * @author Michael Isvy\n  * @author Vitaliy Fedoriv\n  */\n+\n+\n @Repository\n @Profile(\"jpa\")\n public class JpaVisitRepositoryImpl implements VisitRepository {\n-\n     @PersistenceContext\n     private EntityManager em;\n \n-\n     @Override\n     public void save(Visit visit) {\n         if (visit.getId() == null) {\n@@ -56,7 +54,6 @@ public class JpaVisitRepositoryImpl implements VisitRepository {\n         }\n     }\n \n-\n     @Override\n     @SuppressWarnings(\"unchecked\")\n     public List<Visit> findByPetId(Integer petId) {\n@@ -64,25 +61,26 @@ public class JpaVisitRepositoryImpl implements VisitRepository {\n         query.setParameter(\"id\", petId);\n         return query.getResultList();\n     }\n-    \n-\t@Override\n-\tpublic Visit findById(int id) throws DataAccessException {\n-\t\treturn this.em.find(Visit.class, id);\n-\t}\n \n-\t@SuppressWarnings(\"unchecked\")\n-\t@Override\n-\tpublic Collection<Visit> findAll() throws DataAccessException {\n-        return this.em.createQuery(\"SELECT v FROM Visit v\").getResultList();\n-\t}\n+    @Override\n+    public Visit findById(int id) throws DataAccessException {\n+        return this.em.find(Visit.class, id);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    @Override\n+    public Collection<Visit> findAll() throws DataAccessException {\n+    return this.em.createQuery(\"SELECT v FROM Visit v\").getResultList();\n+    }\n \n-\t@Override\n-\tpublic void delete(Visit visit) throws DataAccessException {\n-\t\tString visitId = visit.getId().toString();\n-\t\tthis.em.createQuery(\"DELETE FROM Visit visit WHERE id=\" + visitId).executeUpdate();\n-\t\tif (em.contains(visit)) {\n-\t\t\tem.remove(visit);\n-\t\t}\n-\t}\n+    @Override\n+    public void delete(Visit visit) throws DataAccessException {\n+        String visitId = visit.getId().toString();\n+        this.em.createQuery(\"DELETE FROM Visit visit WHERE id=\"\n+            + visitId).executeUpdate();\n+        if (em.contains(visit)) {\n+            em.remove(visit);\n+        }\n+    }\n \n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 32
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "69",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/4/JpaVisitRepositoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/styler_random/4/JpaVisitRepositoryImpl.java\nindex e5f911c7b50..095a42f2b07 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/4/JpaVisitRepositoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/styler_random/4/JpaVisitRepositoryImpl.java\n@@ -64,8 +64,8 @@ public class JpaVisitRepositoryImpl implements VisitRepository {\n         query.setParameter(\"id\", petId);\n         return query.getResultList();\n     }\n-    \n-\t@Override\n+\n+    @Override\n \tpublic Visit findById(int id) throws DataAccessException {\n \t\treturn this.em.find(Visit.class, id);\n \t}\n",
            "diff_size": 2
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "69",
                    "column": "1",
                    "severity": "warning",
                    "message": "File contains tab characters (this is the first instance).",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/4/JpaVisitRepositoryImpl.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/styler_three_grams/4/JpaVisitRepositoryImpl.java\nindex e5f911c7b50..095a42f2b07 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/errored/1/4/JpaVisitRepositoryImpl.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/EMResearch-EMB/styler_three_grams/4/JpaVisitRepositoryImpl.java\n@@ -64,8 +64,8 @@ public class JpaVisitRepositoryImpl implements VisitRepository {\n         query.setParameter(\"id\", petId);\n         return query.getResultList();\n     }\n-    \n-\t@Override\n+\n+    @Override\n \tpublic Visit findById(int id) throws DataAccessException {\n \t\treturn this.em.find(Visit.class, id);\n \t}\n",
            "diff_size": 2
        }
    ],
    "repaired_by": [
        "intellij",
        "codebuff"
    ],
    "not_repaired_by": [
        "styler",
        "naturalize",
        "styler_random",
        "styler_three_grams"
    ]
}
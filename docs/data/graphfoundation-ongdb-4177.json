{
    "project_name": "graphfoundation-ongdb",
    "error_id": "4177",
    "information": {
        "errors": [
            {
                "line": "1",
                "severity": "error",
                "message": "Missing, wrong or duplicated license header",
                "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
            }
        ]
    },
    "source_code": "/*\n * Copyright (c) 2002-2020 \"Neo4j,\"\n * Neo4j Sweden AB [http://neo4j.com]\n *",
    "results": [
        {
            "tool": "styler",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "intellij",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                },
                {
                    "line": "47",
                    "column": "20",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "47",
                    "column": "29",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "22",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "95",
                    "column": "68",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "9",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "97",
                    "column": "85",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "15",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "100",
                    "column": "136",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "31",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "102",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "36",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "108",
                    "column": "81",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "109",
                    "column": "44",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "28",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "113",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "121",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "122",
                    "column": "77",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "45",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "124",
                    "column": "107",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "34",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "128",
                    "column": "90",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "44",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "130",
                    "column": "63",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "35",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "134",
                    "column": "86",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "37",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "136",
                    "column": "47",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "23",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "145",
                    "column": "46",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "8",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "148",
                    "column": "16",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "152",
                    "column": "65",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "155",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "17",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "158",
                    "column": "58",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "182",
                    "column": "13",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "182",
                    "column": "36",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "185",
                    "column": "5",
                    "severity": "error",
                    "message": "'}' at column 5 should be alone on a line.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
                },
                {
                    "line": "197",
                    "column": "27",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "197",
                    "column": "35",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "212",
                    "column": "33",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "213",
                    "column": "87",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "215",
                    "column": "30",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "233",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "238",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "25",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "260",
                    "column": "49",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "262",
                    "column": "28",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "43",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "276",
                    "column": "53",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "287",
                    "column": "70",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "12",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "289",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "32",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "304",
                    "column": "51",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "10",
                    "severity": "error",
                    "message": "'(' is not followed by whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                },
                {
                    "line": "309",
                    "column": "26",
                    "severity": "error",
                    "message": "')' is not preceded with whitespace.",
                    "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4177/BadCollector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4177/BadCollector.java\nindex 62688a2f3f4..90129ac10df 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4177/BadCollector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/intellij/4177/BadCollector.java\n@@ -17,6 +17,7 @@\n  * You should have received a copy of the GNU General Public License\n  * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n  */\n+\n package org.neo4j.unsafe.impl.batchimport.input;\n \n import java.io.OutputStream;\n@@ -35,283 +36,281 @@ import static org.neo4j.helpers.Exceptions.withMessage;\n \n public class BadCollector implements Collector\n {\n-    /**\n-     * Introduced to avoid creating an exception for every reported bad thing, since it can be\n-     * quite the performance hogger for scenarios where there are many many bad things to collect.\n-     */\n-    abstract static class ProblemReporter extends AsyncEvent\n+  /**\n+   * Introduced to avoid creating an exception for every reported bad thing, since it can be\n+   * quite the performance hogger for scenarios where there are many many bad things to collect.\n+   */\n+  abstract static class ProblemReporter extends AsyncEvent\n+  {\n+    private final int type;\n+\n+    ProblemReporter(int type)\n     {\n-        private final int type;\n+      this.type = type;\n+    }\n \n-        ProblemReporter( int type )\n-        {\n-            this.type = type;\n-        }\n+    int type()\n+    {\n+      return type;\n+    }\n \n-        int type()\n-        {\n-            return type;\n-        }\n+    abstract String message();\n \n-        abstract String message();\n+    abstract InputException exception();\n+  }\n \n-        abstract InputException exception();\n+  interface Monitor\n+  {\n+    default void beforeProcessEvent()\n+    {\n     }\n-\n-    interface Monitor\n+  }\n+\n+  static final Monitor NO_MONITOR = new Monitor()\n+  {\n+  };\n+\n+  static final int BAD_RELATIONSHIPS = 0x1;\n+  static final int DUPLICATE_NODES = 0x2;\n+  static final int EXTRA_COLUMNS = 0x4;\n+\n+  static final int COLLECT_ALL = BAD_RELATIONSHIPS | DUPLICATE_NODES | EXTRA_COLUMNS;\n+  public static final long UNLIMITED_TOLERANCE = -1;\n+  static final int DEFAULT_BACK_PRESSURE_THRESHOLD = 10_000;\n+\n+  private final PrintStream out;\n+  private final long tolerance;\n+  private final int collect;\n+  private final int backPressureThreshold;\n+  private final boolean logBadEntries;\n+  private final Monitor monitor;\n+\n+  // volatile since one importer thread calls collect(), where this value is incremented and later the \"main\"\n+  // thread calls badEntries() to get a count.\n+  private final AtomicLong badEntries = new AtomicLong();\n+  private final AsyncEvents<ProblemReporter> logger;\n+  private final Thread eventProcessor;\n+  private final LongAdder queueSize = new LongAdder();\n+\n+  public BadCollector(OutputStream out, long tolerance, int collect)\n+  {\n+    this(out, tolerance, collect, DEFAULT_BACK_PRESSURE_THRESHOLD, false, NO_MONITOR);\n+  }\n+\n+  BadCollector(OutputStream out, long tolerance, int collect, int backPressureThreshold, boolean skipBadEntriesLogging, Monitor monitor)\n+  {\n+    this.out = new PrintStream(out);\n+    this.tolerance = tolerance;\n+    this.collect = collect;\n+    this.backPressureThreshold = backPressureThreshold;\n+    this.logBadEntries = !skipBadEntriesLogging;\n+    this.monitor = monitor;\n+    this.logger = new AsyncEvents<>(this::processEvent, AsyncEvents.Monitor.NONE);\n+    this.eventProcessor = new Thread(logger);\n+    this.eventProcessor.start();\n+  }\n+\n+  private void processEvent(ProblemReporter report)\n+  {\n+    monitor.beforeProcessEvent();\n+    out.println(report.message());\n+    queueSize.add(-1);\n+  }\n+\n+  @Override\n+  public void collectBadRelationship(Object startId, String startIdGroup, String type, Object endId,\n+                                     String endIdGroup, Object specificValue)\n+  {\n+    collect(new RelationshipsProblemReporter(startId, startIdGroup, type, endId, endIdGroup, specificValue));\n+  }\n+\n+  @Override\n+  public void collectExtraColumns(final String source, final long row, final String value)\n+  {\n+    collect(new ExtraColumnsProblemReporter(row, source, value));\n+  }\n+\n+  @Override\n+  public void collectDuplicateNode(final Object id, long actualId, final String group)\n+  {\n+    collect(new NodesProblemReporter(id, group));\n+  }\n+\n+  @Override\n+  public boolean isCollectingBadRelationships()\n+  {\n+    return collects(BAD_RELATIONSHIPS);\n+  }\n+\n+  private void collect(ProblemReporter report)\n+  {\n+    boolean collect = collects(report.type());\n+    if (collect)\n     {\n-        default void beforeProcessEvent()\n+      // This type of problem is collected and we're within the max threshold, so it's OK\n+      long count = badEntries.incrementAndGet();\n+      if (tolerance == UNLIMITED_TOLERANCE || count <= tolerance)\n+      {\n+        // We're within the threshold\n+        if (logBadEntries)\n         {\n+          // Send this to the logger... but first apply some back pressure if queue is growing big\n+          while (queueSize.sum() >= backPressureThreshold)\n+          {\n+            LockSupport.parkNanos(TimeUnit.MILLISECONDS.toNanos(10));\n+          }\n+          logger.send(report);\n+          queueSize.add(1);\n         }\n+        return; // i.e. don't treat this as an exception\n+      }\n     }\n \n-    static final Monitor NO_MONITOR = new Monitor()\n+    InputException exception = report.exception();\n+    throw collect ? withMessage(exception, format(\"Too many bad entries %d, where last one was: %s\",\n+        badEntries.longValue(), exception.getMessage())) : exception;\n+  }\n+\n+  @Override\n+  public void close()\n+  {\n+    logger.shutdown();\n+    try\n     {\n-    };\n-\n-    static final int BAD_RELATIONSHIPS = 0x1;\n-    static final int DUPLICATE_NODES = 0x2;\n-    static final int EXTRA_COLUMNS = 0x4;\n-\n-    static final int COLLECT_ALL = BAD_RELATIONSHIPS | DUPLICATE_NODES | EXTRA_COLUMNS;\n-    public static final long UNLIMITED_TOLERANCE = -1;\n-    static final int DEFAULT_BACK_PRESSURE_THRESHOLD = 10_000;\n-\n-    private final PrintStream out;\n-    private final long tolerance;\n-    private final int collect;\n-    private final int backPressureThreshold;\n-    private final boolean logBadEntries;\n-    private final Monitor monitor;\n-\n-    // volatile since one importer thread calls collect(), where this value is incremented and later the \"main\"\n-    // thread calls badEntries() to get a count.\n-    private final AtomicLong badEntries = new AtomicLong();\n-    private final AsyncEvents<ProblemReporter> logger;\n-    private final Thread eventProcessor;\n-    private final LongAdder queueSize = new LongAdder();\n-\n-    public BadCollector( OutputStream out, long tolerance, int collect )\n+      logger.awaitTermination();\n+      eventProcessor.join();\n+    } catch (InterruptedException e)\n     {\n-        this( out, tolerance, collect, DEFAULT_BACK_PRESSURE_THRESHOLD, false, NO_MONITOR );\n-    }\n-\n-    BadCollector( OutputStream out, long tolerance, int collect, int backPressureThreshold, boolean skipBadEntriesLogging, Monitor monitor )\n+      Thread.currentThread().interrupt();\n+    } finally\n     {\n-        this.out = new PrintStream( out );\n-        this.tolerance = tolerance;\n-        this.collect = collect;\n-        this.backPressureThreshold = backPressureThreshold;\n-        this.logBadEntries = !skipBadEntriesLogging;\n-        this.monitor = monitor;\n-        this.logger = new AsyncEvents<>( this::processEvent, AsyncEvents.Monitor.NONE );\n-        this.eventProcessor = new Thread( logger );\n-        this.eventProcessor.start();\n+      out.flush();\n     }\n-\n-    private void processEvent( ProblemReporter report )\n+  }\n+\n+  @Override\n+  public long badEntries()\n+  {\n+    return badEntries.get();\n+  }\n+\n+  private boolean collects(int bit)\n+  {\n+    return (collect & bit) != 0;\n+  }\n+\n+  private static class RelationshipsProblemReporter extends ProblemReporter\n+  {\n+    private String message;\n+    private final Object specificValue;\n+    private final Object startId;\n+    private final String startIdGroup;\n+    private final String type;\n+    private final Object endId;\n+    private final String endIdGroup;\n+\n+    RelationshipsProblemReporter(Object startId, String startIdGroup, String type,\n+                                 Object endId, String endIdGroup, Object specificValue)\n     {\n-        monitor.beforeProcessEvent();\n-        out.println( report.message() );\n-        queueSize.add( -1 );\n+      super(BAD_RELATIONSHIPS);\n+      this.startId = startId;\n+      this.startIdGroup = startIdGroup;\n+      this.type = type;\n+      this.endId = endId;\n+      this.endIdGroup = endIdGroup;\n+      this.specificValue = specificValue;\n     }\n \n     @Override\n-    public void collectBadRelationship( Object startId, String startIdGroup, String type, Object endId,\n-            String endIdGroup, Object specificValue )\n+    public String message()\n     {\n-        collect( new RelationshipsProblemReporter( startId, startIdGroup, type, endId, endIdGroup, specificValue ) );\n+      return getReportMessage();\n     }\n \n     @Override\n-    public void collectExtraColumns( final String source, final long row, final String value )\n+    public InputException exception()\n     {\n-        collect( new ExtraColumnsProblemReporter( row, source, value ) );\n+      return new InputException(getReportMessage());\n     }\n \n-    @Override\n-    public void collectDuplicateNode( final Object id, long actualId, final String group )\n+    private String getReportMessage()\n     {\n-        collect( new NodesProblemReporter( id, group ) );\n+      if (message == null)\n+      {\n+        message = !isMissingData()\n+            ? format(\"%s (%s)-[%s]->%s (%s) referring to missing node %s\",\n+            startId, startIdGroup, type, endId, endIdGroup, specificValue)\n+            : format(\"%s (%s)-[%s]->%s (%s) is missing data\",\n+            startId, startIdGroup, type, endId, endIdGroup);\n+      }\n+      return message;\n     }\n \n-    @Override\n-    public boolean isCollectingBadRelationships()\n+    private boolean isMissingData()\n     {\n-        return collects( BAD_RELATIONSHIPS );\n+      return startId == null || endId == null || type == null;\n     }\n+  }\n \n-    private void collect( ProblemReporter report )\n-    {\n-        boolean collect = collects( report.type() );\n-        if ( collect )\n-        {\n-            // This type of problem is collected and we're within the max threshold, so it's OK\n-            long count = badEntries.incrementAndGet();\n-            if ( tolerance == UNLIMITED_TOLERANCE || count <= tolerance )\n-            {\n-                // We're within the threshold\n-                if ( logBadEntries )\n-                {\n-                    // Send this to the logger... but first apply some back pressure if queue is growing big\n-                    while ( queueSize.sum() >= backPressureThreshold )\n-                    {\n-                        LockSupport.parkNanos( TimeUnit.MILLISECONDS.toNanos( 10 ) );\n-                    }\n-                    logger.send( report );\n-                    queueSize.add( 1 );\n-                }\n-                return; // i.e. don't treat this as an exception\n-            }\n-        }\n+  private static class NodesProblemReporter extends ProblemReporter\n+  {\n+    private final Object id;\n+    private final String group;\n \n-        InputException exception = report.exception();\n-        throw collect ? withMessage( exception, format( \"Too many bad entries %d, where last one was: %s\",\n-                badEntries.longValue(), exception.getMessage() ) ) : exception;\n+    NodesProblemReporter(Object id, String group)\n+    {\n+      super(DUPLICATE_NODES);\n+      this.id = id;\n+      this.group = group;\n     }\n \n     @Override\n-    public void close()\n+    public String message()\n     {\n-        logger.shutdown();\n-        try\n-        {\n-            logger.awaitTermination();\n-            eventProcessor.join();\n-        }\n-        catch ( InterruptedException e )\n-        {\n-            Thread.currentThread().interrupt();\n-        }\n-        finally\n-        {\n-            out.flush();\n-        }\n+      return DuplicateInputIdException.message(id, group);\n     }\n \n     @Override\n-    public long badEntries()\n+    public InputException exception()\n     {\n-        return badEntries.get();\n+      return new DuplicateInputIdException(id, group);\n     }\n+  }\n \n-    private boolean collects( int bit )\n+  private static class ExtraColumnsProblemReporter extends ProblemReporter\n+  {\n+    private String message;\n+    private final long row;\n+    private final String source;\n+    private final String value;\n+\n+    ExtraColumnsProblemReporter(long row, String source, String value)\n     {\n-        return (collect & bit) != 0;\n+      super(EXTRA_COLUMNS);\n+      this.row = row;\n+      this.source = source;\n+      this.value = value;\n     }\n \n-    private static class RelationshipsProblemReporter extends ProblemReporter\n+    @Override\n+    public String message()\n     {\n-        private String message;\n-        private final Object specificValue;\n-        private final Object startId;\n-        private final String startIdGroup;\n-        private final String type;\n-        private final Object endId;\n-        private final String endIdGroup;\n-\n-        RelationshipsProblemReporter( Object startId, String startIdGroup, String type,\n-                Object endId, String endIdGroup, Object specificValue )\n-        {\n-            super( BAD_RELATIONSHIPS );\n-            this.startId = startId;\n-            this.startIdGroup = startIdGroup;\n-            this.type = type;\n-            this.endId = endId;\n-            this.endIdGroup = endIdGroup;\n-            this.specificValue = specificValue;\n-        }\n-\n-        @Override\n-        public String message()\n-        {\n-            return getReportMessage();\n-        }\n-\n-        @Override\n-        public InputException exception()\n-        {\n-            return new InputException( getReportMessage() );\n-        }\n-\n-        private String getReportMessage()\n-        {\n-            if ( message == null )\n-            {\n-                message = !isMissingData()\n-                        ? format( \"%s (%s)-[%s]->%s (%s) referring to missing node %s\",\n-                                startId, startIdGroup, type, endId, endIdGroup, specificValue )\n-                        : format( \"%s (%s)-[%s]->%s (%s) is missing data\",\n-                                startId, startIdGroup, type, endId, endIdGroup );\n-            }\n-            return message;\n-        }\n-\n-        private boolean isMissingData()\n-        {\n-            return startId == null || endId == null || type == null;\n-        }\n+      return getReportMessage();\n     }\n \n-    private static class NodesProblemReporter extends ProblemReporter\n+    @Override\n+    public InputException exception()\n     {\n-        private final Object id;\n-        private final String group;\n-\n-        NodesProblemReporter( Object id, String group )\n-        {\n-            super( DUPLICATE_NODES );\n-            this.id = id;\n-            this.group = group;\n-        }\n-\n-        @Override\n-        public String message()\n-        {\n-            return DuplicateInputIdException.message( id, group );\n-        }\n-\n-        @Override\n-        public InputException exception()\n-        {\n-            return new DuplicateInputIdException( id, group );\n-        }\n+      return new InputException(getReportMessage());\n     }\n \n-    private static class ExtraColumnsProblemReporter extends ProblemReporter\n+    private String getReportMessage()\n     {\n-        private String message;\n-        private final long row;\n-        private final String source;\n-        private final String value;\n-\n-        ExtraColumnsProblemReporter( long row, String source, String value )\n-        {\n-            super( EXTRA_COLUMNS );\n-            this.row = row;\n-            this.source = source;\n-            this.value = value;\n-        }\n-\n-        @Override\n-        public String message()\n-        {\n-            return getReportMessage();\n-        }\n-\n-        @Override\n-        public InputException exception()\n-        {\n-            return new InputException( getReportMessage() );\n-        }\n-\n-        private String getReportMessage()\n-        {\n-            if ( message == null )\n-            {\n-                message = format( \"Extra column not present in header on line %d in %s with value %s\", row, source, value );\n-            }\n-            return message;\n-        }\n+      if (message == null)\n+      {\n+        message = format(\"Extra column not present in header on line %d in %s with value %s\", row, source, value);\n+      }\n+      return message;\n     }\n+  }\n }\n",
            "diff_size": 390
        },
        {
            "tool": "naturalize",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "diff --git a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4177/BadCollector.java b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4177/BadCollector.java\nindex 62688a2f3f4..d8694f018be 100644\n--- a/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/errored/1/4177/BadCollector.java\n+++ b/home/fernanda/mnt/fernanda/git-styler/styler/python/experiments/results/graphfoundation-ongdb/naturalize/4177/BadCollector.java\n@@ -74,7 +74,8 @@ public class BadCollector implements Collector\n     static final int EXTRA_COLUMNS = 0x4;\n \n     static final int COLLECT_ALL = BAD_RELATIONSHIPS | DUPLICATE_NODES | EXTRA_COLUMNS;\n-    public static final long UNLIMITED_TOLERANCE = -1;\n+\n+public static final long UNLIMITED_TOLERANCE = -1;\n     static final int DEFAULT_BACK_PRESSURE_THRESHOLD = 10_000;\n \n     private final PrintStream out;\n@@ -197,7 +198,7 @@ public class BadCollector implements Collector\n \n     private boolean collects( int bit )\n     {\n-        return (collect & bit) != 0;\n+        return ( collect & bit) != 0;\n     }\n \n     private static class RelationshipsProblemReporter extends ProblemReporter\n@@ -238,12 +239,10 @@ public class BadCollector implements Collector\n         {\n             if ( message == null )\n             {\n-                message = !isMissingData()\n-                        ? format( \"%s (%s)-[%s]->%s (%s) referring to missing node %s\",\n-                                startId, startIdGroup, type, endId, endIdGroup, specificValue )\n-                        : format( \"%s (%s)-[%s]->%s (%s) is missing data\",\n+                message = !isMissingData() ? format( \"%s (%s)-[%s]->%s (%s) referring to missing node %s\",\n+                                startId, startIdGroup, type, endId, endIdGroup, specificValue ) : format( \"%s (%s)-[%s]->%s (%s) is missing data\",\n                                 startId, startIdGroup, type, endId, endIdGroup );\n-            }\n+    }\n             return message;\n         }\n \n@@ -311,7 +310,8 @@ public class BadCollector implements Collector\n             {\n                 message = format( \"Extra column not present in header on line %d in %s with value %s\", row, source, value );\n             }\n-            return message;\n+\n+return message;\n         }\n     }\n-}\n+}\n\\ No newline at end of file\n",
            "diff_size": 11
        },
        {
            "tool": "codebuff",
            "errors": null,
            "diff": null
        },
        {
            "tool": "styler_random",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        },
        {
            "tool": "styler_three_grams",
            "errors": [
                {
                    "line": "1",
                    "severity": "error",
                    "message": "Missing, wrong or duplicated license header",
                    "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
                }
            ],
            "diff": "",
            "diff_size": 0
        }
    ],
    "repaired_by": [],
    "not_repaired_by": [
        "styler",
        "intellij",
        "naturalize",
        "codebuff",
        "styler_random",
        "styler_three_grams"
    ]
}